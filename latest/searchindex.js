Search.setIndex({"alltitles": {"API Reference": [[0, null]], "Actor": [[265, null]], "Actor.get_name": [[266, null]], "Attributes": [[297, null]], "BTLx": [[201, null]], "BTLx Contribution Guide": [[296, null]], "BTLx.btlx_string": [[202, null]], "BTLx.process_model": [[203, null]], "BTLx.register_joint": [[204, null]], "BTLxFrenchRidgeLap": [[205, null]], "BTLxFrenchRidgeLap.create_process": [[206, null]], "BTLxFrenchRidgeLap.get_params": [[207, null]], "BTLxFrenchRidgeLap.process_joints": [[208, null]], "BTLxJackCut": [[209, null]], "BTLxJackCut.create_process": [[210, null]], "BTLxJackCut.generate_process": [[211, null]], "BTLxProcess": [[212, null]], "Bake with BoxMap": [[306, "bake-with-boxmap"]], "Beam": [[173, null]], "Beam.ToString": [[174, null]], "Beam.add_blank_extension": [[175, null]], "Beam.add_feature": [[176, null]], "Beam.add_features": [[177, null]], "Beam.compute_aabb": [[178, null]], "Beam.compute_collision_mesh": [[179, null]], "Beam.compute_geometry": [[180, null]], "Beam.compute_obb": [[181, null]], "Beam.compute_worldtransformation": [[182, null]], "Beam.copy": [[183, null]], "Beam.endpoint_closest_to_point": [[184, null]], "Beam.extension_to_plane": [[185, null]], "Beam.from_centerline": [[186, null]], "Beam.from_endpoints": [[187, null]], "Beam.from_json": [[188, null]], "Beam.from_jsonstring": [[189, null]], "Beam.opposing_side_index": [[190, null]], "Beam.remove_blank_extension": [[191, null]], "Beam.remove_features": [[192, null]], "Beam.reset": [[193, null]], "Beam.sha256": [[194, null]], "Beam.side_as_surface": [[195, null]], "Beam.to_json": [[196, null]], "Beam.to_jsonstring": [[197, null]], "Beam.transform": [[198, null]], "Beam.transformed": [[199, null]], "Beam.validate_data": [[200, null]], "BeamJoinningError": [[8, null]], "Beams": [[298, null]], "Brep Drill Hole Feature": [[302, "brep-drill-hole-feature"]], "Brep Subtraction Feature": [[302, "brep-subtraction-feature"]], "BuildingPlan": [[267, null]], "BuildingPlan.ToString": [[268, null]], "BuildingPlan.add_step": [[269, null]], "BuildingPlan.copy": [[270, null]], "BuildingPlan.from_json": [[271, null]], "BuildingPlan.from_jsonstring": [[272, null]], "BuildingPlan.sha256": [[273, null]], "BuildingPlan.to_json": [[274, null]], "BuildingPlan.to_jsonstring": [[275, null]], "BuildingPlan.validate_data": [[276, null]], "COMPAS Timber Documentation": [[292, null]], "Category Joint Rules": [[303, "category-joint-rules"]], "Check Attributes": [[297, "check-attributes"]], "Citing": [[289, null]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"]], "ConnectionSolver": [[9, null]], "ConnectionSolver.find_intersecting_pairs": [[10, null]], "ConnectionSolver.find_topology": [[11, null]], "Create Joint": [[291, null]], "Custom Attributes": [[297, "custom-attributes"]], "Custom Beam Dimensions": [[299, "custom-beam-dimensions"]], "DecomposeBeam": [[298, "decomposebeam"]], "Default Joint Rules": [[303, "default-joint-rules"]], "Delete Attributes": [[297, "delete-attributes"]], "Dependencies": [[292, "dependencies"]], "Design": [[299, null]], "Development": [[293, "development"]], "Direct Joint Rules": [[303, "direct-joint-rules"]], "Examples": [[290, null], [300, null]], "Exceptions": [[1, "exceptions"]], "Fabrication": [[301, null]], "Features": [[302, null]], "FindBeamByRhinoGuid": [[298, "findbeambyrhinoguid"]], "French Ridge Lap": [[303, "french-ridge-lap"]], "FrenchRidgeFactory": [[213, null]], "FrenchRidgeFactory.apply_processings": [[214, null]], "FrenchRidgeLapJoint": [[12, null]], "FrenchRidgeLapJoint.ToString": [[13, null]], "FrenchRidgeLapJoint.add_extensions": [[14, null]], "FrenchRidgeLapJoint.add_features": [[15, null]], "FrenchRidgeLapJoint.check_geometry": [[16, null]], "FrenchRidgeLapJoint.copy": [[17, null]], "FrenchRidgeLapJoint.create": [[18, null]], "FrenchRidgeLapJoint.from_json": [[19, null]], "FrenchRidgeLapJoint.from_jsonstring": [[20, null]], "FrenchRidgeLapJoint.get_face_most_ortho_to_beam": [[21, null]], "FrenchRidgeLapJoint.get_face_most_towards_beam": [[22, null]], "FrenchRidgeLapJoint.restore_beams_from_keys": [[23, null]], "FrenchRidgeLapJoint.sha256": [[24, null]], "FrenchRidgeLapJoint.to_json": [[25, null]], "FrenchRidgeLapJoint.to_jsonstring": [[26, null]], "FrenchRidgeLapJoint.validate_data": [[27, null]], "Functions": [[1, "functions"]], "Grasshopper plugin": [[295, null]], "Indices and tables": [[292, "indices-and-tables"]], "Install with conda": [[293, "install-with-conda"]], "Installation": [[293, null]], "Joint": [[28, null]], "Joint Rules": [[303, null]], "Joint Rules Components": [[303, "joint-rules-components"]], "Joint Types": [[303, "joint-types"]], "Joint.ToString": [[29, null]], "Joint.add_extensions": [[30, null]], "Joint.add_features": [[31, null]], "Joint.copy": [[32, null]], "Joint.create": [[33, null]], "Joint.from_json": [[34, null]], "Joint.from_jsonstring": [[35, null]], "Joint.get_face_most_ortho_to_beam": [[36, null]], "Joint.get_face_most_towards_beam": [[37, null]], "Joint.restore_beams_from_keys": [[38, null]], "Joint.sha256": [[39, null]], "Joint.to_json": [[40, null]], "Joint.to_jsonstring": [[41, null]], "Joint.validate_data": [[42, null]], "JointTopology": [[43, null]], "JointTopology.get_name": [[44, null]], "L-Butt": [[303, "l-butt"]], "L-HalfLap": [[303, "l-halflap"]], "L-Miter": [[303, "l-miter"]], "LButtFactory": [[215, null]], "LButtFactory.apply_processings": [[216, null]], "LButtJoint": [[45, null]], "LButtJoint.ToString": [[46, null]], "LButtJoint.add_extensions": [[47, null]], "LButtJoint.add_features": [[48, null]], "LButtJoint.back_surface_main": [[49, null]], "LButtJoint.calc_params_birdsmouth": [[50, null]], "LButtJoint.copy": [[51, null]], "LButtJoint.create": [[52, null]], "LButtJoint.from_json": [[53, null]], "LButtJoint.from_jsonstring": [[54, null]], "LButtJoint.front_back_surface_main": [[55, null]], "LButtJoint.get_cross_cutting_plane": [[56, null]], "LButtJoint.get_face_most_ortho_to_beam": [[57, null]], "LButtJoint.get_face_most_towards_beam": [[58, null]], "LButtJoint.get_main_cutting_plane": [[59, null]], "LButtJoint.restore_beams_from_keys": [[60, null]], "LButtJoint.sha256": [[61, null]], "LButtJoint.side_surfaces_cross": [[62, null]], "LButtJoint.subtraction_volume": [[63, null]], "LButtJoint.to_json": [[64, null]], "LButtJoint.to_jsonstring": [[65, null]], "LButtJoint.validate_data": [[66, null]], "LHalfLapJoint": [[67, null]], "LHalfLapJoint.ToString": [[68, null]], "LHalfLapJoint.add_extensions": [[69, null]], "LHalfLapJoint.add_features": [[70, null]], "LHalfLapJoint.copy": [[71, null]], "LHalfLapJoint.create": [[72, null]], "LHalfLapJoint.from_json": [[73, null]], "LHalfLapJoint.from_jsonstring": [[74, null]], "LHalfLapJoint.get_cross_cutting_frame": [[75, null]], "LHalfLapJoint.get_face_most_ortho_to_beam": [[76, null]], "LHalfLapJoint.get_face_most_towards_beam": [[77, null]], "LHalfLapJoint.get_main_cutting_frame": [[78, null]], "LHalfLapJoint.restore_beams_from_keys": [[79, null]], "LHalfLapJoint.sha256": [[80, null]], "LHalfLapJoint.to_json": [[81, null]], "LHalfLapJoint.to_jsonstring": [[82, null]], "LHalfLapJoint.validate_data": [[83, null]], "LMiterFactory": [[217, null]], "LMiterFactory.apply_processings": [[218, null]], "LMiterJoint": [[84, null]], "LMiterJoint.ToString": [[85, null]], "LMiterJoint.add_extensions": [[86, null]], "LMiterJoint.add_features": [[87, null]], "LMiterJoint.copy": [[88, null]], "LMiterJoint.create": [[89, null]], "LMiterJoint.from_json": [[90, null]], "LMiterJoint.from_jsonstring": [[91, null]], "LMiterJoint.get_cutting_planes": [[92, null]], "LMiterJoint.get_face_most_ortho_to_beam": [[93, null]], "LMiterJoint.get_face_most_towards_beam": [[94, null]], "LMiterJoint.restore_beams_from_keys": [[95, null]], "LMiterJoint.sha256": [[96, null]], "LMiterJoint.to_json": [[97, null]], "LMiterJoint.to_jsonstring": [[98, null]], "LMiterJoint.validate_data": [[99, null]], "LapJoint": [[100, null]], "LapJoint.ToString": [[101, null]], "LapJoint.add_extensions": [[102, null]], "LapJoint.add_features": [[103, null]], "LapJoint.copy": [[104, null]], "LapJoint.create": [[105, null]], "LapJoint.from_json": [[106, null]], "LapJoint.from_jsonstring": [[107, null]], "LapJoint.get_cross_cutting_frame": [[108, null]], "LapJoint.get_face_most_ortho_to_beam": [[109, null]], "LapJoint.get_face_most_towards_beam": [[110, null]], "LapJoint.get_main_cutting_frame": [[111, null]], "LapJoint.restore_beams_from_keys": [[112, null]], "LapJoint.sha256": [[113, null]], "LapJoint.to_json": [[114, null]], "LapJoint.to_jsonstring": [[115, null]], "LapJoint.validate_data": [[116, null]], "License": [[294, null]], "Model": [[304, null]], "Packages": [[0, "packages"]], "Parameters:": [[50, "parameters"], [122, "parameters"]], "Plugins": [[7, "plugins"]], "Show": [[305, null]], "Show Beam Face Index": [[305, "show-beam-face-index"]], "Show Beam Index": [[305, "show-beam-index"]], "Show Feature Errors": [[305, "show-feature-errors"]], "Show Joining Errors": [[305, "show-joining-errors"]], "Show Joint Types": [[305, "show-joint-types"]], "Show Surface Model Beam Types": [[305, "show-surface-model-beam-types"]], "Show Topology Types": [[305, "show-topology-types"]], "SimpleSequenceGenerator": [[277, null]], "Stable": [[293, "stable"]], "Standard Attributes": [[297, "standard-attributes"]], "Step": [[278, null]], "Step.ToString": [[279, null]], "Step.copy": [[280, null]], "Step.from_json": [[281, null]], "Step.from_jsonstring": [[282, null]], "Step.sha256": [[283, null]], "Step.to_json": [[284, null]], "Step.to_jsonstring": [[285, null]], "Step.transform": [[286, null]], "Step.validate_data": [[287, null]], "Summary Table": [[303, "summary-table"]], "Surface Model": [[299, "surface-model"]], "Surface Model Joint Override": [[303, "surface-model-joint-override"]], "Surface Model Options": [[299, "surface-model-options"]], "T-Butt": [[303, "t-butt"]], "T-HalfLap": [[303, "t-halflap"]], "TButtFactory": [[219, null]], "TButtFactory.apply_processings": [[220, null]], "TButtJoint": [[117, null]], "TButtJoint.ToString": [[118, null]], "TButtJoint.add_extensions": [[119, null]], "TButtJoint.add_features": [[120, null]], "TButtJoint.back_surface_main": [[121, null]], "TButtJoint.calc_params_birdsmouth": [[122, null]], "TButtJoint.copy": [[123, null]], "TButtJoint.create": [[124, null]], "TButtJoint.from_json": [[125, null]], "TButtJoint.from_jsonstring": [[126, null]], "TButtJoint.front_back_surface_main": [[127, null]], "TButtJoint.get_face_most_ortho_to_beam": [[128, null]], "TButtJoint.get_face_most_towards_beam": [[129, null]], "TButtJoint.get_main_cutting_plane": [[130, null]], "TButtJoint.restore_beams_from_keys": [[131, null]], "TButtJoint.sha256": [[132, null]], "TButtJoint.side_surfaces_cross": [[133, null]], "TButtJoint.subtraction_volume": [[134, null]], "TButtJoint.to_json": [[135, null]], "TButtJoint.to_jsonstring": [[136, null]], "TButtJoint.validate_data": [[137, null]], "THalfLapJoint": [[138, null]], "THalfLapJoint.ToString": [[139, null]], "THalfLapJoint.add_extensions": [[140, null]], "THalfLapJoint.add_features": [[141, null]], "THalfLapJoint.copy": [[142, null]], "THalfLapJoint.create": [[143, null]], "THalfLapJoint.from_json": [[144, null]], "THalfLapJoint.from_jsonstring": [[145, null]], "THalfLapJoint.get_cross_cutting_frame": [[146, null]], "THalfLapJoint.get_face_most_ortho_to_beam": [[147, null]], "THalfLapJoint.get_face_most_towards_beam": [[148, null]], "THalfLapJoint.get_main_cutting_frame": [[149, null]], "THalfLapJoint.restore_beams_from_keys": [[150, null]], "THalfLapJoint.sha256": [[151, null]], "THalfLapJoint.to_json": [[152, null]], "THalfLapJoint.to_jsonstring": [[153, null]], "THalfLapJoint.validate_data": [[154, null]], "Table of Contents": [[292, "table-of-contents"]], "Timber Assembly Examples": [[290, "timber-assembly-examples"]], "TimberModel": [[221, null]], "TimberModel.ToString": [[222, null]], "TimberModel.add_element": [[223, null]], "TimberModel.add_elements": [[224, null]], "TimberModel.add_group": [[225, null]], "TimberModel.add_group_element": [[226, null]], "TimberModel.add_interaction": [[227, null]], "TimberModel.add_joint": [[228, null]], "TimberModel.add_material": [[229, null]], "TimberModel.assign_material": [[230, null]], "TimberModel.compute_aabb": [[231, null]], "TimberModel.compute_obb": [[232, null]], "TimberModel.copy": [[233, null]], "TimberModel.element_by_guid": [[234, null]], "TimberModel.elements": [[235, null]], "TimberModel.elements_connected_by": [[236, null]], "TimberModel.from_json": [[237, null]], "TimberModel.from_jsonstring": [[238, null]], "TimberModel.get_elements_in_group": [[239, null]], "TimberModel.has_element": [[240, null]], "TimberModel.has_group": [[241, null]], "TimberModel.has_interaction": [[242, null]], "TimberModel.has_material": [[243, null]], "TimberModel.interactions": [[244, null]], "TimberModel.materials": [[245, null]], "TimberModel.process_joinery": [[246, null]], "TimberModel.remove_element": [[247, null]], "TimberModel.remove_interaction": [[248, null]], "TimberModel.remove_joint": [[249, null]], "TimberModel.rotate": [[250, null]], "TimberModel.rotated": [[251, null]], "TimberModel.scale": [[252, null]], "TimberModel.scaled": [[253, null]], "TimberModel.set_topologies": [[254, null]], "TimberModel.sha256": [[255, null]], "TimberModel.to_json": [[256, null]], "TimberModel.to_jsonstring": [[257, null]], "TimberModel.transform": [[258, null]], "TimberModel.transform_numpy": [[259, null]], "TimberModel.transformed": [[260, null]], "TimberModel.transformed_numpy": [[261, null]], "TimberModel.translate": [[262, null]], "TimberModel.translated": [[263, null]], "TimberModel.validate_data": [[264, null]], "Topological Joint Rules": [[303, "topological-joint-rules"]], "Trim Feature": [[302, "trim-feature"]], "Utils": [[306, null]], "Workflow": [[307, null]], "Write BTLx": [[301, "write-btlx"]], "X-HalfLap": [[303, "x-halflap"]], "XHalfLapJoint": [[155, null]], "XHalfLapJoint.ToString": [[156, null]], "XHalfLapJoint.add_extensions": [[157, null]], "XHalfLapJoint.add_features": [[158, null]], "XHalfLapJoint.copy": [[159, null]], "XHalfLapJoint.create": [[160, null]], "XHalfLapJoint.from_json": [[161, null]], "XHalfLapJoint.from_jsonstring": [[162, null]], "XHalfLapJoint.get_cross_cutting_frame": [[163, null]], "XHalfLapJoint.get_face_most_ortho_to_beam": [[164, null]], "XHalfLapJoint.get_face_most_towards_beam": [[165, null]], "XHalfLapJoint.get_main_cutting_frame": [[166, null]], "XHalfLapJoint.restore_beams_from_keys": [[167, null]], "XHalfLapJoint.sha256": [[168, null]], "XHalfLapJoint.to_json": [[169, null]], "XHalfLapJoint.to_jsonstring": [[170, null]], "XHalfLapJoint.validate_data": [[171, null]], "compas_timber.connections": [[1, null]], "compas_timber.elements": [[2, null]], "compas_timber.fabrication": [[3, null]], "compas_timber.ghpython": [[4, null]], "compas_timber.model": [[5, null]], "compas_timber.planning": [[6, null]], "find_neighboring_beams": [[172, null], [288, null]], "rhino": [[7, null]]}, "docnames": ["api", "api/compas_timber.connections", "api/compas_timber.elements", "api/compas_timber.fabrication", "api/compas_timber.ghpython", "api/compas_timber.model", "api/compas_timber.planning", "api/compas_timber.rhino", "api/generated/compas_timber.connections.BeamJoinningError", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.FrenchRidgeLapJoint", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.ToString", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_extensions", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_features", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.check_geometry", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.copy", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.create", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_json", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.sha256", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_json", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.validate_data", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_extensions", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.from_jsonstring", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.to_jsonstring", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_extensions", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.back_surface_main", "api/generated/compas_timber.connections.LButtJoint.calc_params_birdsmouth", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring", "api/generated/compas_timber.connections.LButtJoint.front_back_surface_main", "api/generated/compas_timber.connections.LButtJoint.get_cross_cutting_plane", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LButtJoint.get_main_cutting_plane", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.side_surfaces_cross", "api/generated/compas_timber.connections.LButtJoint.subtraction_volume", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LHalfLapJoint", "api/generated/compas_timber.connections.LHalfLapJoint.ToString", "api/generated/compas_timber.connections.LHalfLapJoint.add_extensions", "api/generated/compas_timber.connections.LHalfLapJoint.add_features", "api/generated/compas_timber.connections.LHalfLapJoint.copy", "api/generated/compas_timber.connections.LHalfLapJoint.create", "api/generated/compas_timber.connections.LHalfLapJoint.from_json", "api/generated/compas_timber.connections.LHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LHalfLapJoint.sha256", "api/generated/compas_timber.connections.LHalfLapJoint.to_json", "api/generated/compas_timber.connections.LHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_extensions", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.LapJoint", "api/generated/compas_timber.connections.LapJoint.ToString", "api/generated/compas_timber.connections.LapJoint.add_extensions", "api/generated/compas_timber.connections.LapJoint.add_features", "api/generated/compas_timber.connections.LapJoint.copy", "api/generated/compas_timber.connections.LapJoint.create", "api/generated/compas_timber.connections.LapJoint.from_json", "api/generated/compas_timber.connections.LapJoint.from_jsonstring", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LapJoint.sha256", "api/generated/compas_timber.connections.LapJoint.to_json", "api/generated/compas_timber.connections.LapJoint.to_jsonstring", "api/generated/compas_timber.connections.LapJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_extensions", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.back_surface_main", "api/generated/compas_timber.connections.TButtJoint.calc_params_birdsmouth", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring", "api/generated/compas_timber.connections.TButtJoint.front_back_surface_main", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TButtJoint.get_main_cutting_plane", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.side_surfaces_cross", "api/generated/compas_timber.connections.TButtJoint.subtraction_volume", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.THalfLapJoint", "api/generated/compas_timber.connections.THalfLapJoint.ToString", "api/generated/compas_timber.connections.THalfLapJoint.add_extensions", "api/generated/compas_timber.connections.THalfLapJoint.add_features", "api/generated/compas_timber.connections.THalfLapJoint.copy", "api/generated/compas_timber.connections.THalfLapJoint.create", "api/generated/compas_timber.connections.THalfLapJoint.from_json", "api/generated/compas_timber.connections.THalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.THalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.THalfLapJoint.sha256", "api/generated/compas_timber.connections.THalfLapJoint.to_json", "api/generated/compas_timber.connections.THalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.validate_data", "api/generated/compas_timber.connections.XHalfLapJoint", "api/generated/compas_timber.connections.XHalfLapJoint.ToString", "api/generated/compas_timber.connections.XHalfLapJoint.add_extensions", "api/generated/compas_timber.connections.XHalfLapJoint.add_features", "api/generated/compas_timber.connections.XHalfLapJoint.copy", "api/generated/compas_timber.connections.XHalfLapJoint.create", "api/generated/compas_timber.connections.XHalfLapJoint.from_json", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.XHalfLapJoint.sha256", "api/generated/compas_timber.connections.XHalfLapJoint.to_json", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data", "api/generated/compas_timber.connections.find_neighboring_beams", "api/generated/compas_timber.elements.Beam", "api/generated/compas_timber.elements.Beam.ToString", "api/generated/compas_timber.elements.Beam.add_blank_extension", "api/generated/compas_timber.elements.Beam.add_feature", "api/generated/compas_timber.elements.Beam.add_features", "api/generated/compas_timber.elements.Beam.compute_aabb", "api/generated/compas_timber.elements.Beam.compute_collision_mesh", "api/generated/compas_timber.elements.Beam.compute_geometry", "api/generated/compas_timber.elements.Beam.compute_obb", "api/generated/compas_timber.elements.Beam.compute_worldtransformation", "api/generated/compas_timber.elements.Beam.copy", "api/generated/compas_timber.elements.Beam.endpoint_closest_to_point", "api/generated/compas_timber.elements.Beam.extension_to_plane", "api/generated/compas_timber.elements.Beam.from_centerline", "api/generated/compas_timber.elements.Beam.from_endpoints", "api/generated/compas_timber.elements.Beam.from_json", "api/generated/compas_timber.elements.Beam.from_jsonstring", "api/generated/compas_timber.elements.Beam.opposing_side_index", "api/generated/compas_timber.elements.Beam.remove_blank_extension", "api/generated/compas_timber.elements.Beam.remove_features", "api/generated/compas_timber.elements.Beam.reset", "api/generated/compas_timber.elements.Beam.sha256", "api/generated/compas_timber.elements.Beam.side_as_surface", "api/generated/compas_timber.elements.Beam.to_json", "api/generated/compas_timber.elements.Beam.to_jsonstring", "api/generated/compas_timber.elements.Beam.transform", "api/generated/compas_timber.elements.Beam.transformed", "api/generated/compas_timber.elements.Beam.validate_data", "api/generated/compas_timber.fabrication.BTLx", "api/generated/compas_timber.fabrication.BTLx.btlx_string", "api/generated/compas_timber.fabrication.BTLx.process_model", "api/generated/compas_timber.fabrication.BTLx.register_joint", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints", "api/generated/compas_timber.fabrication.BTLxJackCut", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process", "api/generated/compas_timber.fabrication.BTLxProcess", "api/generated/compas_timber.fabrication.FrenchRidgeFactory", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings", "api/generated/compas_timber.fabrication.LButtFactory", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings", "api/generated/compas_timber.fabrication.LMiterFactory", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings", "api/generated/compas_timber.fabrication.TButtFactory", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings", "api/generated/compas_timber.model.TimberModel", "api/generated/compas_timber.model.TimberModel.ToString", "api/generated/compas_timber.model.TimberModel.add_element", "api/generated/compas_timber.model.TimberModel.add_elements", "api/generated/compas_timber.model.TimberModel.add_group", "api/generated/compas_timber.model.TimberModel.add_group_element", "api/generated/compas_timber.model.TimberModel.add_interaction", "api/generated/compas_timber.model.TimberModel.add_joint", "api/generated/compas_timber.model.TimberModel.add_material", "api/generated/compas_timber.model.TimberModel.assign_material", "api/generated/compas_timber.model.TimberModel.compute_aabb", "api/generated/compas_timber.model.TimberModel.compute_obb", "api/generated/compas_timber.model.TimberModel.copy", "api/generated/compas_timber.model.TimberModel.element_by_guid", "api/generated/compas_timber.model.TimberModel.elements", "api/generated/compas_timber.model.TimberModel.elements_connected_by", "api/generated/compas_timber.model.TimberModel.from_json", "api/generated/compas_timber.model.TimberModel.from_jsonstring", "api/generated/compas_timber.model.TimberModel.get_elements_in_group", "api/generated/compas_timber.model.TimberModel.has_element", "api/generated/compas_timber.model.TimberModel.has_group", "api/generated/compas_timber.model.TimberModel.has_interaction", "api/generated/compas_timber.model.TimberModel.has_material", "api/generated/compas_timber.model.TimberModel.interactions", "api/generated/compas_timber.model.TimberModel.materials", "api/generated/compas_timber.model.TimberModel.process_joinery", "api/generated/compas_timber.model.TimberModel.remove_element", "api/generated/compas_timber.model.TimberModel.remove_interaction", "api/generated/compas_timber.model.TimberModel.remove_joint", "api/generated/compas_timber.model.TimberModel.rotate", "api/generated/compas_timber.model.TimberModel.rotated", "api/generated/compas_timber.model.TimberModel.scale", "api/generated/compas_timber.model.TimberModel.scaled", "api/generated/compas_timber.model.TimberModel.set_topologies", "api/generated/compas_timber.model.TimberModel.sha256", "api/generated/compas_timber.model.TimberModel.to_json", "api/generated/compas_timber.model.TimberModel.to_jsonstring", "api/generated/compas_timber.model.TimberModel.transform", "api/generated/compas_timber.model.TimberModel.transform_numpy", "api/generated/compas_timber.model.TimberModel.transformed", "api/generated/compas_timber.model.TimberModel.transformed_numpy", "api/generated/compas_timber.model.TimberModel.translate", "api/generated/compas_timber.model.TimberModel.translated", "api/generated/compas_timber.model.TimberModel.validate_data", "api/generated/compas_timber.planning.Actor", "api/generated/compas_timber.planning.Actor.get_name", "api/generated/compas_timber.planning.BuildingPlan", "api/generated/compas_timber.planning.BuildingPlan.ToString", "api/generated/compas_timber.planning.BuildingPlan.add_step", "api/generated/compas_timber.planning.BuildingPlan.copy", "api/generated/compas_timber.planning.BuildingPlan.from_json", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.sha256", "api/generated/compas_timber.planning.BuildingPlan.to_json", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.validate_data", "api/generated/compas_timber.planning.SimpleSequenceGenerator", "api/generated/compas_timber.planning.Step", "api/generated/compas_timber.planning.Step.ToString", "api/generated/compas_timber.planning.Step.copy", "api/generated/compas_timber.planning.Step.from_json", "api/generated/compas_timber.planning.Step.from_jsonstring", "api/generated/compas_timber.planning.Step.sha256", "api/generated/compas_timber.planning.Step.to_json", "api/generated/compas_timber.planning.Step.to_jsonstring", "api/generated/compas_timber.planning.Step.transform", "api/generated/compas_timber.planning.Step.validate_data", "api/generated/compas_timber.rhino.find_neighboring_beams", "citing", "examples", "examples/create_joint", "index", "installation", "license", "tutorials", "tutorials/BTLx_contribution_guide", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beams", "tutorials/grasshopper/design", "tutorials/grasshopper/examples", "tutorials/grasshopper/fabrication", "tutorials/grasshopper/features", "tutorials/grasshopper/joint_rules", "tutorials/grasshopper/model", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api.rst", "api/compas_timber.connections.rst", "api/compas_timber.elements.rst", "api/compas_timber.fabrication.rst", "api/compas_timber.ghpython.rst", "api/compas_timber.model.rst", "api/compas_timber.planning.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.connections.BeamJoinningError.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.ToString.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_features.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.check_geometry.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.copy.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.create.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_json.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.sha256.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_json.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.validate_data.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_extensions.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.from_json.rst", "api/generated/compas_timber.connections.Joint.from_jsonstring.rst", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_json.rst", "api/generated/compas_timber.connections.Joint.to_jsonstring.rst", "api/generated/compas_timber.connections.Joint.validate_data.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_extensions.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.back_surface_main.rst", "api/generated/compas_timber.connections.LButtJoint.calc_params_birdsmouth.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.from_json.rst", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.front_back_surface_main.rst", "api/generated/compas_timber.connections.LButtJoint.get_cross_cutting_plane.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LButtJoint.get_main_cutting_plane.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.side_surfaces_cross.rst", "api/generated/compas_timber.connections.LButtJoint.subtraction_volume.rst", "api/generated/compas_timber.connections.LButtJoint.to_json.rst", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.validate_data.rst", "api/generated/compas_timber.connections.LHalfLapJoint.rst", "api/generated/compas_timber.connections.LHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.LHalfLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.LHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.LHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.LHalfLapJoint.create.rst", "api/generated/compas_timber.connections.LHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.LHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.LHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.LHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_extensions.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.from_json.rst", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_json.rst", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_data.rst", "api/generated/compas_timber.connections.LapJoint.rst", "api/generated/compas_timber.connections.LapJoint.ToString.rst", "api/generated/compas_timber.connections.LapJoint.add_extensions.rst", "api/generated/compas_timber.connections.LapJoint.add_features.rst", "api/generated/compas_timber.connections.LapJoint.copy.rst", "api/generated/compas_timber.connections.LapJoint.create.rst", "api/generated/compas_timber.connections.LapJoint.from_json.rst", "api/generated/compas_timber.connections.LapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LapJoint.sha256.rst", "api/generated/compas_timber.connections.LapJoint.to_json.rst", "api/generated/compas_timber.connections.LapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.validate_data.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_extensions.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.back_surface_main.rst", "api/generated/compas_timber.connections.TButtJoint.calc_params_birdsmouth.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.from_json.rst", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.front_back_surface_main.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TButtJoint.get_main_cutting_plane.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.side_surfaces_cross.rst", "api/generated/compas_timber.connections.TButtJoint.subtraction_volume.rst", "api/generated/compas_timber.connections.TButtJoint.to_json.rst", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.validate_data.rst", "api/generated/compas_timber.connections.THalfLapJoint.rst", "api/generated/compas_timber.connections.THalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.THalfLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.THalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.THalfLapJoint.copy.rst", "api/generated/compas_timber.connections.THalfLapJoint.create.rst", "api/generated/compas_timber.connections.THalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.THalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.THalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.THalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.THalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.THalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.THalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.rst", "api/generated/compas_timber.connections.XHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.XHalfLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.XHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.XHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.XHalfLapJoint.create.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.XHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.find_neighboring_beams.rst", "api/generated/compas_timber.elements.Beam.rst", "api/generated/compas_timber.elements.Beam.ToString.rst", "api/generated/compas_timber.elements.Beam.add_blank_extension.rst", "api/generated/compas_timber.elements.Beam.add_feature.rst", "api/generated/compas_timber.elements.Beam.add_features.rst", "api/generated/compas_timber.elements.Beam.compute_aabb.rst", "api/generated/compas_timber.elements.Beam.compute_collision_mesh.rst", "api/generated/compas_timber.elements.Beam.compute_geometry.rst", "api/generated/compas_timber.elements.Beam.compute_obb.rst", "api/generated/compas_timber.elements.Beam.compute_worldtransformation.rst", "api/generated/compas_timber.elements.Beam.copy.rst", "api/generated/compas_timber.elements.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.elements.Beam.extension_to_plane.rst", "api/generated/compas_timber.elements.Beam.from_centerline.rst", "api/generated/compas_timber.elements.Beam.from_endpoints.rst", "api/generated/compas_timber.elements.Beam.from_json.rst", "api/generated/compas_timber.elements.Beam.from_jsonstring.rst", "api/generated/compas_timber.elements.Beam.opposing_side_index.rst", "api/generated/compas_timber.elements.Beam.remove_blank_extension.rst", "api/generated/compas_timber.elements.Beam.remove_features.rst", "api/generated/compas_timber.elements.Beam.reset.rst", "api/generated/compas_timber.elements.Beam.sha256.rst", "api/generated/compas_timber.elements.Beam.side_as_surface.rst", "api/generated/compas_timber.elements.Beam.to_json.rst", "api/generated/compas_timber.elements.Beam.to_jsonstring.rst", "api/generated/compas_timber.elements.Beam.transform.rst", "api/generated/compas_timber.elements.Beam.transformed.rst", "api/generated/compas_timber.elements.Beam.validate_data.rst", "api/generated/compas_timber.fabrication.BTLx.rst", "api/generated/compas_timber.fabrication.BTLx.btlx_string.rst", "api/generated/compas_timber.fabrication.BTLx.process_model.rst", "api/generated/compas_timber.fabrication.BTLx.register_joint.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process.rst", "api/generated/compas_timber.fabrication.BTLxProcess.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LButtFactory.rst", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LMiterFactory.rst", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.TButtFactory.rst", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings.rst", "api/generated/compas_timber.model.TimberModel.rst", "api/generated/compas_timber.model.TimberModel.ToString.rst", "api/generated/compas_timber.model.TimberModel.add_element.rst", "api/generated/compas_timber.model.TimberModel.add_elements.rst", "api/generated/compas_timber.model.TimberModel.add_group.rst", "api/generated/compas_timber.model.TimberModel.add_group_element.rst", "api/generated/compas_timber.model.TimberModel.add_interaction.rst", "api/generated/compas_timber.model.TimberModel.add_joint.rst", "api/generated/compas_timber.model.TimberModel.add_material.rst", "api/generated/compas_timber.model.TimberModel.assign_material.rst", "api/generated/compas_timber.model.TimberModel.compute_aabb.rst", "api/generated/compas_timber.model.TimberModel.compute_obb.rst", "api/generated/compas_timber.model.TimberModel.copy.rst", "api/generated/compas_timber.model.TimberModel.element_by_guid.rst", "api/generated/compas_timber.model.TimberModel.elements.rst", "api/generated/compas_timber.model.TimberModel.elements_connected_by.rst", "api/generated/compas_timber.model.TimberModel.from_json.rst", "api/generated/compas_timber.model.TimberModel.from_jsonstring.rst", "api/generated/compas_timber.model.TimberModel.get_elements_in_group.rst", "api/generated/compas_timber.model.TimberModel.has_element.rst", "api/generated/compas_timber.model.TimberModel.has_group.rst", "api/generated/compas_timber.model.TimberModel.has_interaction.rst", "api/generated/compas_timber.model.TimberModel.has_material.rst", "api/generated/compas_timber.model.TimberModel.interactions.rst", "api/generated/compas_timber.model.TimberModel.materials.rst", "api/generated/compas_timber.model.TimberModel.process_joinery.rst", "api/generated/compas_timber.model.TimberModel.remove_element.rst", "api/generated/compas_timber.model.TimberModel.remove_interaction.rst", "api/generated/compas_timber.model.TimberModel.remove_joint.rst", "api/generated/compas_timber.model.TimberModel.rotate.rst", "api/generated/compas_timber.model.TimberModel.rotated.rst", "api/generated/compas_timber.model.TimberModel.scale.rst", "api/generated/compas_timber.model.TimberModel.scaled.rst", "api/generated/compas_timber.model.TimberModel.set_topologies.rst", "api/generated/compas_timber.model.TimberModel.sha256.rst", "api/generated/compas_timber.model.TimberModel.to_json.rst", "api/generated/compas_timber.model.TimberModel.to_jsonstring.rst", "api/generated/compas_timber.model.TimberModel.transform.rst", "api/generated/compas_timber.model.TimberModel.transform_numpy.rst", "api/generated/compas_timber.model.TimberModel.transformed.rst", "api/generated/compas_timber.model.TimberModel.transformed_numpy.rst", "api/generated/compas_timber.model.TimberModel.translate.rst", "api/generated/compas_timber.model.TimberModel.translated.rst", "api/generated/compas_timber.model.TimberModel.validate_data.rst", "api/generated/compas_timber.planning.Actor.rst", "api/generated/compas_timber.planning.Actor.get_name.rst", "api/generated/compas_timber.planning.BuildingPlan.rst", "api/generated/compas_timber.planning.BuildingPlan.ToString.rst", "api/generated/compas_timber.planning.BuildingPlan.add_step.rst", "api/generated/compas_timber.planning.BuildingPlan.copy.rst", "api/generated/compas_timber.planning.BuildingPlan.from_json.rst", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.sha256.rst", "api/generated/compas_timber.planning.BuildingPlan.to_json.rst", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.validate_data.rst", "api/generated/compas_timber.planning.SimpleSequenceGenerator.rst", "api/generated/compas_timber.planning.Step.rst", "api/generated/compas_timber.planning.Step.ToString.rst", "api/generated/compas_timber.planning.Step.copy.rst", "api/generated/compas_timber.planning.Step.from_json.rst", "api/generated/compas_timber.planning.Step.from_jsonstring.rst", "api/generated/compas_timber.planning.Step.sha256.rst", "api/generated/compas_timber.planning.Step.to_json.rst", "api/generated/compas_timber.planning.Step.to_jsonstring.rst", "api/generated/compas_timber.planning.Step.transform.rst", "api/generated/compas_timber.planning.Step.validate_data.rst", "api/generated/compas_timber.rhino.find_neighboring_beams.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "license.rst", "tutorials.rst", "tutorials/BTLx_contribution_guide.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beams.rst", "tutorials/grasshopper/design.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/fabrication.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joint_rules.rst", "tutorials/grasshopper/model.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "indexentries": {"actor (class in compas_timber.planning)": [[265, "compas_timber.planning.Actor", false]], "add_blank_extension() (compas_timber.elements.beam method)": [[175, "compas_timber.elements.Beam.add_blank_extension", false]], "add_element() (compas_timber.model.timbermodel method)": [[223, "compas_timber.model.TimberModel.add_element", false]], "add_elements() (compas_timber.model.timbermodel method)": [[224, "compas_timber.model.TimberModel.add_elements", false]], "add_extensions() (compas_timber.connections.frenchridgelapjoint method)": [[14, "compas_timber.connections.FrenchRidgeLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.joint method)": [[30, "compas_timber.connections.Joint.add_extensions", false]], "add_extensions() (compas_timber.connections.lapjoint method)": [[102, "compas_timber.connections.LapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lbuttjoint method)": [[47, "compas_timber.connections.LButtJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lhalflapjoint method)": [[69, "compas_timber.connections.LHalfLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lmiterjoint method)": [[86, "compas_timber.connections.LMiterJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tbuttjoint method)": [[119, "compas_timber.connections.TButtJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.thalflapjoint method)": [[140, "compas_timber.connections.THalfLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.xhalflapjoint method)": [[157, "compas_timber.connections.XHalfLapJoint.add_extensions", false]], "add_feature() (compas_timber.elements.beam method)": [[176, "compas_timber.elements.Beam.add_feature", false]], "add_features() (compas_timber.connections.frenchridgelapjoint method)": [[15, "compas_timber.connections.FrenchRidgeLapJoint.add_features", false]], "add_features() (compas_timber.connections.joint method)": [[31, "compas_timber.connections.Joint.add_features", false]], "add_features() (compas_timber.connections.lapjoint method)": [[103, "compas_timber.connections.LapJoint.add_features", false]], "add_features() (compas_timber.connections.lbuttjoint method)": [[48, "compas_timber.connections.LButtJoint.add_features", false]], "add_features() (compas_timber.connections.lhalflapjoint method)": [[70, "compas_timber.connections.LHalfLapJoint.add_features", false]], "add_features() (compas_timber.connections.lmiterjoint method)": [[87, "compas_timber.connections.LMiterJoint.add_features", false]], "add_features() (compas_timber.connections.tbuttjoint method)": [[120, "compas_timber.connections.TButtJoint.add_features", false]], "add_features() (compas_timber.connections.thalflapjoint method)": [[141, "compas_timber.connections.THalfLapJoint.add_features", false]], "add_features() (compas_timber.connections.xhalflapjoint method)": [[158, "compas_timber.connections.XHalfLapJoint.add_features", false]], "add_features() (compas_timber.elements.beam method)": [[177, "compas_timber.elements.Beam.add_features", false]], "add_group() (compas_timber.model.timbermodel method)": [[225, "compas_timber.model.TimberModel.add_group", false]], "add_group_element() (compas_timber.model.timbermodel method)": [[226, "compas_timber.model.TimberModel.add_group_element", false]], "add_interaction() (compas_timber.model.timbermodel method)": [[227, "compas_timber.model.TimberModel.add_interaction", false]], "add_joint() (compas_timber.model.timbermodel method)": [[228, "compas_timber.model.TimberModel.add_joint", false]], "add_material() (compas_timber.model.timbermodel method)": [[229, "compas_timber.model.TimberModel.add_material", false]], "add_step() (compas_timber.planning.buildingplan method)": [[269, "compas_timber.planning.BuildingPlan.add_step", false]], "apply_processings() (compas_timber.fabrication.frenchridgefactory class method)": [[214, "compas_timber.fabrication.FrenchRidgeFactory.apply_processings", false]], "apply_processings() (compas_timber.fabrication.lbuttfactory class method)": [[216, "compas_timber.fabrication.LButtFactory.apply_processings", false]], "apply_processings() (compas_timber.fabrication.lmiterfactory class method)": [[218, "compas_timber.fabrication.LMiterFactory.apply_processings", false]], "apply_processings() (compas_timber.fabrication.tbuttfactory class method)": [[220, "compas_timber.fabrication.TButtFactory.apply_processings", false]], "assign_material() (compas_timber.model.timbermodel method)": [[230, "compas_timber.model.TimberModel.assign_material", false]], "back_surface_main() (compas_timber.connections.lbuttjoint method)": [[49, "compas_timber.connections.LButtJoint.back_surface_main", false]], "back_surface_main() (compas_timber.connections.tbuttjoint method)": [[121, "compas_timber.connections.TButtJoint.back_surface_main", false]], "beam (class in compas_timber.elements)": [[173, "compas_timber.elements.Beam", false]], "beamjoinningerror": [[8, "compas_timber.connections.BeamJoinningError", false]], "btlx (class in compas_timber.fabrication)": [[201, "compas_timber.fabrication.BTLx", false]], "btlx_string() (compas_timber.fabrication.btlx method)": [[202, "compas_timber.fabrication.BTLx.btlx_string", false]], "btlxfrenchridgelap (class in compas_timber.fabrication)": [[205, "compas_timber.fabrication.BTLxFrenchRidgeLap", false]], "btlxjackcut (class in compas_timber.fabrication)": [[209, "compas_timber.fabrication.BTLxJackCut", false]], "btlxprocess (class in compas_timber.fabrication)": [[212, "compas_timber.fabrication.BTLxProcess", false]], "buildingplan (class in compas_timber.planning)": [[267, "compas_timber.planning.BuildingPlan", false]], "calc_params_birdsmouth() (compas_timber.connections.lbuttjoint method)": [[50, "compas_timber.connections.LButtJoint.calc_params_birdsmouth", false]], "calc_params_birdsmouth() (compas_timber.connections.tbuttjoint method)": [[122, "compas_timber.connections.TButtJoint.calc_params_birdsmouth", false]], "check_geometry() (compas_timber.connections.frenchridgelapjoint method)": [[16, "compas_timber.connections.FrenchRidgeLapJoint.check_geometry", false]], "compute_aabb() (compas_timber.elements.beam method)": [[178, "compas_timber.elements.Beam.compute_aabb", false]], "compute_aabb() (compas_timber.model.timbermodel method)": [[231, "compas_timber.model.TimberModel.compute_aabb", false]], "compute_collision_mesh() (compas_timber.elements.beam method)": [[179, "compas_timber.elements.Beam.compute_collision_mesh", false]], "compute_geometry() (compas_timber.elements.beam method)": [[180, "compas_timber.elements.Beam.compute_geometry", false]], "compute_obb() (compas_timber.elements.beam method)": [[181, "compas_timber.elements.Beam.compute_obb", false]], "compute_obb() (compas_timber.model.timbermodel method)": [[232, "compas_timber.model.TimberModel.compute_obb", false]], "compute_worldtransformation() (compas_timber.elements.beam method)": [[182, "compas_timber.elements.Beam.compute_worldtransformation", false]], "connectionsolver (class in compas_timber.connections)": [[9, "compas_timber.connections.ConnectionSolver", false]], "copy() (compas_timber.connections.frenchridgelapjoint method)": [[17, "compas_timber.connections.FrenchRidgeLapJoint.copy", false]], "copy() (compas_timber.connections.joint method)": [[32, "compas_timber.connections.Joint.copy", false]], "copy() (compas_timber.connections.lapjoint method)": [[104, "compas_timber.connections.LapJoint.copy", false]], "copy() (compas_timber.connections.lbuttjoint method)": [[51, "compas_timber.connections.LButtJoint.copy", false]], "copy() (compas_timber.connections.lhalflapjoint method)": [[71, "compas_timber.connections.LHalfLapJoint.copy", false]], "copy() (compas_timber.connections.lmiterjoint method)": [[88, "compas_timber.connections.LMiterJoint.copy", false]], "copy() (compas_timber.connections.tbuttjoint method)": [[123, "compas_timber.connections.TButtJoint.copy", false]], "copy() (compas_timber.connections.thalflapjoint method)": [[142, "compas_timber.connections.THalfLapJoint.copy", false]], "copy() (compas_timber.connections.xhalflapjoint method)": [[159, "compas_timber.connections.XHalfLapJoint.copy", false]], "copy() (compas_timber.elements.beam method)": [[183, "compas_timber.elements.Beam.copy", false]], "copy() (compas_timber.model.timbermodel method)": [[233, "compas_timber.model.TimberModel.copy", false]], "copy() (compas_timber.planning.buildingplan method)": [[270, "compas_timber.planning.BuildingPlan.copy", false]], "copy() (compas_timber.planning.step method)": [[280, "compas_timber.planning.Step.copy", false]], "create() (compas_timber.connections.frenchridgelapjoint class method)": [[18, "compas_timber.connections.FrenchRidgeLapJoint.create", false]], "create() (compas_timber.connections.joint class method)": [[33, "compas_timber.connections.Joint.create", false]], "create() (compas_timber.connections.lapjoint class method)": [[105, "compas_timber.connections.LapJoint.create", false]], "create() (compas_timber.connections.lbuttjoint class method)": [[52, "compas_timber.connections.LButtJoint.create", false]], "create() (compas_timber.connections.lhalflapjoint class method)": [[72, "compas_timber.connections.LHalfLapJoint.create", false]], "create() (compas_timber.connections.lmiterjoint class method)": [[89, "compas_timber.connections.LMiterJoint.create", false]], "create() (compas_timber.connections.tbuttjoint class method)": [[124, "compas_timber.connections.TButtJoint.create", false]], "create() (compas_timber.connections.thalflapjoint class method)": [[143, "compas_timber.connections.THalfLapJoint.create", false]], "create() (compas_timber.connections.xhalflapjoint class method)": [[160, "compas_timber.connections.XHalfLapJoint.create", false]], "create_process() (compas_timber.fabrication.btlxfrenchridgelap class method)": [[206, "compas_timber.fabrication.BTLxFrenchRidgeLap.create_process", false]], "create_process() (compas_timber.fabrication.btlxjackcut class method)": [[210, "compas_timber.fabrication.BTLxJackCut.create_process", false]], "element_by_guid() (compas_timber.model.timbermodel method)": [[234, "compas_timber.model.TimberModel.element_by_guid", false]], "elements() (compas_timber.model.timbermodel method)": [[235, "compas_timber.model.TimberModel.elements", false]], "elements_connected_by() (compas_timber.model.timbermodel method)": [[236, "compas_timber.model.TimberModel.elements_connected_by", false]], "endpoint_closest_to_point() (compas_timber.elements.beam method)": [[184, "compas_timber.elements.Beam.endpoint_closest_to_point", false]], "extension_to_plane() (compas_timber.elements.beam method)": [[185, "compas_timber.elements.Beam.extension_to_plane", false]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[10, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs", false]], "find_neighboring_beams() (in module compas_timber.connections)": [[172, "compas_timber.connections.find_neighboring_beams", false]], "find_neighboring_beams() (in module compas_timber.rhino)": [[288, "compas_timber.rhino.find_neighboring_beams", false]], "find_topology() (compas_timber.connections.connectionsolver method)": [[11, "compas_timber.connections.ConnectionSolver.find_topology", false]], "frenchridgefactory (class in compas_timber.fabrication)": [[213, "compas_timber.fabrication.FrenchRidgeFactory", false]], "frenchridgelapjoint (class in compas_timber.connections)": [[12, "compas_timber.connections.FrenchRidgeLapJoint", false]], "from_centerline() (compas_timber.elements.beam class method)": [[186, "compas_timber.elements.Beam.from_centerline", false]], "from_endpoints() (compas_timber.elements.beam class method)": [[187, "compas_timber.elements.Beam.from_endpoints", false]], "from_json() (compas_timber.connections.frenchridgelapjoint class method)": [[19, "compas_timber.connections.FrenchRidgeLapJoint.from_json", false]], "from_json() (compas_timber.connections.joint class method)": [[34, "compas_timber.connections.Joint.from_json", false]], "from_json() (compas_timber.connections.lapjoint class method)": [[106, "compas_timber.connections.LapJoint.from_json", false]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[53, "compas_timber.connections.LButtJoint.from_json", false]], "from_json() (compas_timber.connections.lhalflapjoint class method)": [[73, "compas_timber.connections.LHalfLapJoint.from_json", false]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[90, "compas_timber.connections.LMiterJoint.from_json", false]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[125, "compas_timber.connections.TButtJoint.from_json", false]], "from_json() (compas_timber.connections.thalflapjoint class method)": [[144, "compas_timber.connections.THalfLapJoint.from_json", false]], "from_json() (compas_timber.connections.xhalflapjoint class method)": [[161, "compas_timber.connections.XHalfLapJoint.from_json", false]], "from_json() (compas_timber.elements.beam class method)": [[188, "compas_timber.elements.Beam.from_json", false]], "from_json() (compas_timber.model.timbermodel class method)": [[237, "compas_timber.model.TimberModel.from_json", false]], "from_json() (compas_timber.planning.buildingplan class method)": [[271, "compas_timber.planning.BuildingPlan.from_json", false]], "from_json() (compas_timber.planning.step class method)": [[281, "compas_timber.planning.Step.from_json", false]], "from_jsonstring() (compas_timber.connections.frenchridgelapjoint class method)": [[20, "compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.joint class method)": [[35, "compas_timber.connections.Joint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lapjoint class method)": [[107, "compas_timber.connections.LapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[54, "compas_timber.connections.LButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lhalflapjoint class method)": [[74, "compas_timber.connections.LHalfLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[91, "compas_timber.connections.LMiterJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[126, "compas_timber.connections.TButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.thalflapjoint class method)": [[145, "compas_timber.connections.THalfLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.xhalflapjoint class method)": [[162, "compas_timber.connections.XHalfLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.beam class method)": [[189, "compas_timber.elements.Beam.from_jsonstring", false]], "from_jsonstring() (compas_timber.model.timbermodel class method)": [[238, "compas_timber.model.TimberModel.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.buildingplan class method)": [[272, "compas_timber.planning.BuildingPlan.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.step class method)": [[282, "compas_timber.planning.Step.from_jsonstring", false]], "front_back_surface_main() (compas_timber.connections.lbuttjoint method)": [[55, "compas_timber.connections.LButtJoint.front_back_surface_main", false]], "front_back_surface_main() (compas_timber.connections.tbuttjoint method)": [[127, "compas_timber.connections.TButtJoint.front_back_surface_main", false]], "generate_process() (compas_timber.fabrication.btlxjackcut method)": [[211, "compas_timber.fabrication.BTLxJackCut.generate_process", false]], "get_cross_cutting_frame() (compas_timber.connections.lapjoint method)": [[108, "compas_timber.connections.LapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[75, "compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[146, "compas_timber.connections.THalfLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[163, "compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_plane() (compas_timber.connections.lbuttjoint method)": [[56, "compas_timber.connections.LButtJoint.get_cross_cutting_plane", false]], "get_cutting_planes() (compas_timber.connections.lmiterjoint method)": [[92, "compas_timber.connections.LMiterJoint.get_cutting_planes", false]], "get_elements_in_group() (compas_timber.model.timbermodel method)": [[239, "compas_timber.model.TimberModel.get_elements_in_group", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.frenchridgelapjoint static method)": [[21, "compas_timber.connections.FrenchRidgeLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.joint static method)": [[36, "compas_timber.connections.Joint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lapjoint static method)": [[109, "compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lbuttjoint static method)": [[57, "compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lhalflapjoint static method)": [[76, "compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lmiterjoint static method)": [[93, "compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tbuttjoint static method)": [[128, "compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.thalflapjoint static method)": [[147, "compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.xhalflapjoint static method)": [[164, "compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.frenchridgelapjoint static method)": [[22, "compas_timber.connections.FrenchRidgeLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.joint static method)": [[37, "compas_timber.connections.Joint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lapjoint static method)": [[110, "compas_timber.connections.LapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lbuttjoint static method)": [[58, "compas_timber.connections.LButtJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lhalflapjoint static method)": [[77, "compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lmiterjoint static method)": [[94, "compas_timber.connections.LMiterJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tbuttjoint static method)": [[129, "compas_timber.connections.TButtJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.thalflapjoint static method)": [[148, "compas_timber.connections.THalfLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.xhalflapjoint static method)": [[165, "compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam", false]], "get_main_cutting_frame() (compas_timber.connections.lapjoint method)": [[111, "compas_timber.connections.LapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[78, "compas_timber.connections.LHalfLapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[149, "compas_timber.connections.THalfLapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[166, "compas_timber.connections.XHalfLapJoint.get_main_cutting_frame", false]], "get_main_cutting_plane() (compas_timber.connections.lbuttjoint method)": [[59, "compas_timber.connections.LButtJoint.get_main_cutting_plane", false]], "get_main_cutting_plane() (compas_timber.connections.tbuttjoint method)": [[130, "compas_timber.connections.TButtJoint.get_main_cutting_plane", false]], "get_name() (compas_timber.connections.jointtopology class method)": [[44, "compas_timber.connections.JointTopology.get_name", false]], "get_name() (compas_timber.planning.actor class method)": [[266, "compas_timber.planning.Actor.get_name", false]], "get_params() (compas_timber.fabrication.btlxfrenchridgelap method)": [[207, "compas_timber.fabrication.BTLxFrenchRidgeLap.get_params", false]], "has_element() (compas_timber.model.timbermodel method)": [[240, "compas_timber.model.TimberModel.has_element", false]], "has_group() (compas_timber.model.timbermodel method)": [[241, "compas_timber.model.TimberModel.has_group", false]], "has_interaction() (compas_timber.model.timbermodel method)": [[242, "compas_timber.model.TimberModel.has_interaction", false]], "has_material() (compas_timber.model.timbermodel method)": [[243, "compas_timber.model.TimberModel.has_material", false]], "interactions() (compas_timber.model.timbermodel method)": [[244, "compas_timber.model.TimberModel.interactions", false]], "joint (class in compas_timber.connections)": [[28, "compas_timber.connections.Joint", false]], "jointtopology (class in compas_timber.connections)": [[43, "compas_timber.connections.JointTopology", false]], "lapjoint (class in compas_timber.connections)": [[100, "compas_timber.connections.LapJoint", false]], "lbuttfactory (class in compas_timber.fabrication)": [[215, "compas_timber.fabrication.LButtFactory", false]], "lbuttjoint (class in compas_timber.connections)": [[45, "compas_timber.connections.LButtJoint", false]], "lhalflapjoint (class in compas_timber.connections)": [[67, "compas_timber.connections.LHalfLapJoint", false]], "lmiterfactory (class in compas_timber.fabrication)": [[217, "compas_timber.fabrication.LMiterFactory", false]], "lmiterjoint (class in compas_timber.connections)": [[84, "compas_timber.connections.LMiterJoint", false]], "materials() (compas_timber.model.timbermodel method)": [[245, "compas_timber.model.TimberModel.materials", false]], "opposing_side_index() (compas_timber.elements.beam method)": [[190, "compas_timber.elements.Beam.opposing_side_index", false]], "process_joinery() (compas_timber.model.timbermodel method)": [[246, "compas_timber.model.TimberModel.process_joinery", false]], "process_joints() (compas_timber.fabrication.btlxfrenchridgelap method)": [[208, "compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints", false]], "process_model() (compas_timber.fabrication.btlx method)": [[203, "compas_timber.fabrication.BTLx.process_model", false]], "register_joint() (compas_timber.fabrication.btlx class method)": [[204, "compas_timber.fabrication.BTLx.register_joint", false]], "remove_blank_extension() (compas_timber.elements.beam method)": [[191, "compas_timber.elements.Beam.remove_blank_extension", false]], "remove_element() (compas_timber.model.timbermodel method)": [[247, "compas_timber.model.TimberModel.remove_element", false]], "remove_features() (compas_timber.elements.beam method)": [[192, "compas_timber.elements.Beam.remove_features", false]], "remove_interaction() (compas_timber.model.timbermodel method)": [[248, "compas_timber.model.TimberModel.remove_interaction", false]], "remove_joint() (compas_timber.model.timbermodel method)": [[249, "compas_timber.model.TimberModel.remove_joint", false]], "reset() (compas_timber.elements.beam method)": [[193, "compas_timber.elements.Beam.reset", false]], "restore_beams_from_keys() (compas_timber.connections.frenchridgelapjoint method)": [[23, "compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[38, "compas_timber.connections.Joint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lapjoint method)": [[112, "compas_timber.connections.LapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[60, "compas_timber.connections.LButtJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lhalflapjoint method)": [[79, "compas_timber.connections.LHalfLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[95, "compas_timber.connections.LMiterJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[131, "compas_timber.connections.TButtJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.thalflapjoint method)": [[150, "compas_timber.connections.THalfLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.xhalflapjoint method)": [[167, "compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", false]], "rotate() (compas_timber.model.timbermodel method)": [[250, "compas_timber.model.TimberModel.rotate", false]], "rotated() (compas_timber.model.timbermodel method)": [[251, "compas_timber.model.TimberModel.rotated", false]], "scale() (compas_timber.model.timbermodel method)": [[252, "compas_timber.model.TimberModel.scale", false]], "scaled() (compas_timber.model.timbermodel method)": [[253, "compas_timber.model.TimberModel.scaled", false]], "set_topologies() (compas_timber.model.timbermodel method)": [[254, "compas_timber.model.TimberModel.set_topologies", false]], "sha256() (compas_timber.connections.frenchridgelapjoint method)": [[24, "compas_timber.connections.FrenchRidgeLapJoint.sha256", false]], "sha256() (compas_timber.connections.joint method)": [[39, "compas_timber.connections.Joint.sha256", false]], "sha256() (compas_timber.connections.lapjoint method)": [[113, "compas_timber.connections.LapJoint.sha256", false]], "sha256() (compas_timber.connections.lbuttjoint method)": [[61, "compas_timber.connections.LButtJoint.sha256", false]], "sha256() (compas_timber.connections.lhalflapjoint method)": [[80, "compas_timber.connections.LHalfLapJoint.sha256", false]], "sha256() (compas_timber.connections.lmiterjoint method)": [[96, "compas_timber.connections.LMiterJoint.sha256", false]], "sha256() (compas_timber.connections.tbuttjoint method)": [[132, "compas_timber.connections.TButtJoint.sha256", false]], "sha256() (compas_timber.connections.thalflapjoint method)": [[151, "compas_timber.connections.THalfLapJoint.sha256", false]], "sha256() (compas_timber.connections.xhalflapjoint method)": [[168, "compas_timber.connections.XHalfLapJoint.sha256", false]], "sha256() (compas_timber.elements.beam method)": [[194, "compas_timber.elements.Beam.sha256", false]], "sha256() (compas_timber.model.timbermodel method)": [[255, "compas_timber.model.TimberModel.sha256", false]], "sha256() (compas_timber.planning.buildingplan method)": [[273, "compas_timber.planning.BuildingPlan.sha256", false]], "sha256() (compas_timber.planning.step method)": [[283, "compas_timber.planning.Step.sha256", false]], "side_as_surface() (compas_timber.elements.beam method)": [[195, "compas_timber.elements.Beam.side_as_surface", false]], "side_surfaces_cross() (compas_timber.connections.lbuttjoint method)": [[62, "compas_timber.connections.LButtJoint.side_surfaces_cross", false]], "side_surfaces_cross() (compas_timber.connections.tbuttjoint method)": [[133, "compas_timber.connections.TButtJoint.side_surfaces_cross", false]], "simplesequencegenerator (class in compas_timber.planning)": [[277, "compas_timber.planning.SimpleSequenceGenerator", false]], "step (class in compas_timber.planning)": [[278, "compas_timber.planning.Step", false]], "subtraction_volume() (compas_timber.connections.lbuttjoint method)": [[63, "compas_timber.connections.LButtJoint.subtraction_volume", false]], "subtraction_volume() (compas_timber.connections.tbuttjoint method)": [[134, "compas_timber.connections.TButtJoint.subtraction_volume", false]], "tbuttfactory (class in compas_timber.fabrication)": [[219, "compas_timber.fabrication.TButtFactory", false]], "tbuttjoint (class in compas_timber.connections)": [[117, "compas_timber.connections.TButtJoint", false]], "thalflapjoint (class in compas_timber.connections)": [[138, "compas_timber.connections.THalfLapJoint", false]], "timbermodel (class in compas_timber.model)": [[221, "compas_timber.model.TimberModel", false]], "to_json() (compas_timber.connections.frenchridgelapjoint method)": [[25, "compas_timber.connections.FrenchRidgeLapJoint.to_json", false]], "to_json() (compas_timber.connections.joint method)": [[40, "compas_timber.connections.Joint.to_json", false]], "to_json() (compas_timber.connections.lapjoint method)": [[114, "compas_timber.connections.LapJoint.to_json", false]], "to_json() (compas_timber.connections.lbuttjoint method)": [[64, "compas_timber.connections.LButtJoint.to_json", false]], "to_json() (compas_timber.connections.lhalflapjoint method)": [[81, "compas_timber.connections.LHalfLapJoint.to_json", false]], "to_json() (compas_timber.connections.lmiterjoint method)": [[97, "compas_timber.connections.LMiterJoint.to_json", false]], "to_json() (compas_timber.connections.tbuttjoint method)": [[135, "compas_timber.connections.TButtJoint.to_json", false]], "to_json() (compas_timber.connections.thalflapjoint method)": [[152, "compas_timber.connections.THalfLapJoint.to_json", false]], "to_json() (compas_timber.connections.xhalflapjoint method)": [[169, "compas_timber.connections.XHalfLapJoint.to_json", false]], "to_json() (compas_timber.elements.beam method)": [[196, "compas_timber.elements.Beam.to_json", false]], "to_json() (compas_timber.model.timbermodel method)": [[256, "compas_timber.model.TimberModel.to_json", false]], "to_json() (compas_timber.planning.buildingplan method)": [[274, "compas_timber.planning.BuildingPlan.to_json", false]], "to_json() (compas_timber.planning.step method)": [[284, "compas_timber.planning.Step.to_json", false]], "to_jsonstring() (compas_timber.connections.frenchridgelapjoint method)": [[26, "compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.joint method)": [[41, "compas_timber.connections.Joint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lapjoint method)": [[115, "compas_timber.connections.LapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lbuttjoint method)": [[65, "compas_timber.connections.LButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lhalflapjoint method)": [[82, "compas_timber.connections.LHalfLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lmiterjoint method)": [[98, "compas_timber.connections.LMiterJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tbuttjoint method)": [[136, "compas_timber.connections.TButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.thalflapjoint method)": [[153, "compas_timber.connections.THalfLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.xhalflapjoint method)": [[170, "compas_timber.connections.XHalfLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.beam method)": [[197, "compas_timber.elements.Beam.to_jsonstring", false]], "to_jsonstring() (compas_timber.model.timbermodel method)": [[257, "compas_timber.model.TimberModel.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.buildingplan method)": [[275, "compas_timber.planning.BuildingPlan.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.step method)": [[285, "compas_timber.planning.Step.to_jsonstring", false]], "tostring() (compas_timber.connections.frenchridgelapjoint method)": [[13, "compas_timber.connections.FrenchRidgeLapJoint.ToString", false]], "tostring() (compas_timber.connections.joint method)": [[29, "compas_timber.connections.Joint.ToString", false]], "tostring() (compas_timber.connections.lapjoint method)": [[101, "compas_timber.connections.LapJoint.ToString", false]], "tostring() (compas_timber.connections.lbuttjoint method)": [[46, "compas_timber.connections.LButtJoint.ToString", false]], "tostring() (compas_timber.connections.lhalflapjoint method)": [[68, "compas_timber.connections.LHalfLapJoint.ToString", false]], "tostring() (compas_timber.connections.lmiterjoint method)": [[85, "compas_timber.connections.LMiterJoint.ToString", false]], "tostring() (compas_timber.connections.tbuttjoint method)": [[118, "compas_timber.connections.TButtJoint.ToString", false]], "tostring() (compas_timber.connections.thalflapjoint method)": [[139, "compas_timber.connections.THalfLapJoint.ToString", false]], "tostring() (compas_timber.connections.xhalflapjoint method)": [[156, "compas_timber.connections.XHalfLapJoint.ToString", false]], "tostring() (compas_timber.elements.beam method)": [[174, "compas_timber.elements.Beam.ToString", false]], "tostring() (compas_timber.model.timbermodel method)": [[222, "compas_timber.model.TimberModel.ToString", false]], "tostring() (compas_timber.planning.buildingplan method)": [[268, "compas_timber.planning.BuildingPlan.ToString", false]], "tostring() (compas_timber.planning.step method)": [[279, "compas_timber.planning.Step.ToString", false]], "transform() (compas_timber.elements.beam method)": [[198, "compas_timber.elements.Beam.transform", false]], "transform() (compas_timber.model.timbermodel method)": [[258, "compas_timber.model.TimberModel.transform", false]], "transform() (compas_timber.planning.step method)": [[286, "compas_timber.planning.Step.transform", false]], "transform_numpy() (compas_timber.model.timbermodel method)": [[259, "compas_timber.model.TimberModel.transform_numpy", false]], "transformed() (compas_timber.elements.beam method)": [[199, "compas_timber.elements.Beam.transformed", false]], "transformed() (compas_timber.model.timbermodel method)": [[260, "compas_timber.model.TimberModel.transformed", false]], "transformed_numpy() (compas_timber.model.timbermodel method)": [[261, "compas_timber.model.TimberModel.transformed_numpy", false]], "translate() (compas_timber.model.timbermodel method)": [[262, "compas_timber.model.TimberModel.translate", false]], "translated() (compas_timber.model.timbermodel method)": [[263, "compas_timber.model.TimberModel.translated", false]], "validate_data() (compas_timber.connections.frenchridgelapjoint class method)": [[27, "compas_timber.connections.FrenchRidgeLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.joint class method)": [[42, "compas_timber.connections.Joint.validate_data", false]], "validate_data() (compas_timber.connections.lapjoint class method)": [[116, "compas_timber.connections.LapJoint.validate_data", false]], "validate_data() (compas_timber.connections.lbuttjoint class method)": [[66, "compas_timber.connections.LButtJoint.validate_data", false]], "validate_data() (compas_timber.connections.lhalflapjoint class method)": [[83, "compas_timber.connections.LHalfLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.lmiterjoint class method)": [[99, "compas_timber.connections.LMiterJoint.validate_data", false]], "validate_data() (compas_timber.connections.tbuttjoint class method)": [[137, "compas_timber.connections.TButtJoint.validate_data", false]], "validate_data() (compas_timber.connections.thalflapjoint class method)": [[154, "compas_timber.connections.THalfLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.xhalflapjoint class method)": [[171, "compas_timber.connections.XHalfLapJoint.validate_data", false]], "validate_data() (compas_timber.elements.beam class method)": [[200, "compas_timber.elements.Beam.validate_data", false]], "validate_data() (compas_timber.model.timbermodel class method)": [[264, "compas_timber.model.TimberModel.validate_data", false]], "validate_data() (compas_timber.planning.buildingplan class method)": [[276, "compas_timber.planning.BuildingPlan.validate_data", false]], "validate_data() (compas_timber.planning.step class method)": [[287, "compas_timber.planning.Step.validate_data", false]], "xhalflapjoint (class in compas_timber.connections)": [[155, "compas_timber.connections.XHalfLapJoint", false]]}, "objects": {"compas_timber.connections": [[8, 0, 1, "", "BeamJoinningError"], [9, 1, 1, "", "ConnectionSolver"], [12, 1, 1, "", "FrenchRidgeLapJoint"], [28, 1, 1, "", "Joint"], [43, 1, 1, "", "JointTopology"], [45, 1, 1, "", "LButtJoint"], [67, 1, 1, "", "LHalfLapJoint"], [84, 1, 1, "", "LMiterJoint"], [100, 1, 1, "", "LapJoint"], [117, 1, 1, "", "TButtJoint"], [138, 1, 1, "", "THalfLapJoint"], [155, 1, 1, "", "XHalfLapJoint"], [172, 3, 1, "", "find_neighboring_beams"]], "compas_timber.connections.ConnectionSolver": [[10, 2, 1, "", "find_intersecting_pairs"], [11, 2, 1, "", "find_topology"]], "compas_timber.connections.FrenchRidgeLapJoint": [[13, 2, 1, "", "ToString"], [14, 2, 1, "", "add_extensions"], [15, 2, 1, "", "add_features"], [16, 2, 1, "", "check_geometry"], [17, 2, 1, "", "copy"], [18, 2, 1, "", "create"], [19, 2, 1, "", "from_json"], [20, 2, 1, "", "from_jsonstring"], [21, 2, 1, "", "get_face_most_ortho_to_beam"], [22, 2, 1, "", "get_face_most_towards_beam"], [23, 2, 1, "", "restore_beams_from_keys"], [24, 2, 1, "", "sha256"], [25, 2, 1, "", "to_json"], [26, 2, 1, "", "to_jsonstring"], [27, 2, 1, "", "validate_data"]], "compas_timber.connections.Joint": [[29, 2, 1, "", "ToString"], [30, 2, 1, "", "add_extensions"], [31, 2, 1, "", "add_features"], [32, 2, 1, "", "copy"], [33, 2, 1, "", "create"], [34, 2, 1, "", "from_json"], [35, 2, 1, "", "from_jsonstring"], [36, 2, 1, "", "get_face_most_ortho_to_beam"], [37, 2, 1, "", "get_face_most_towards_beam"], [38, 2, 1, "", "restore_beams_from_keys"], [39, 2, 1, "", "sha256"], [40, 2, 1, "", "to_json"], [41, 2, 1, "", "to_jsonstring"], [42, 2, 1, "", "validate_data"]], "compas_timber.connections.JointTopology": [[44, 2, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[46, 2, 1, "", "ToString"], [47, 2, 1, "", "add_extensions"], [48, 2, 1, "", "add_features"], [49, 2, 1, "", "back_surface_main"], [50, 2, 1, "", "calc_params_birdsmouth"], [51, 2, 1, "", "copy"], [52, 2, 1, "", "create"], [53, 2, 1, "", "from_json"], [54, 2, 1, "", "from_jsonstring"], [55, 2, 1, "", "front_back_surface_main"], [56, 2, 1, "", "get_cross_cutting_plane"], [57, 2, 1, "", "get_face_most_ortho_to_beam"], [58, 2, 1, "", "get_face_most_towards_beam"], [59, 2, 1, "", "get_main_cutting_plane"], [60, 2, 1, "", "restore_beams_from_keys"], [61, 2, 1, "", "sha256"], [62, 2, 1, "", "side_surfaces_cross"], [63, 2, 1, "", "subtraction_volume"], [64, 2, 1, "", "to_json"], [65, 2, 1, "", "to_jsonstring"], [66, 2, 1, "", "validate_data"]], "compas_timber.connections.LHalfLapJoint": [[68, 2, 1, "", "ToString"], [69, 2, 1, "", "add_extensions"], [70, 2, 1, "", "add_features"], [71, 2, 1, "", "copy"], [72, 2, 1, "", "create"], [73, 2, 1, "", "from_json"], [74, 2, 1, "", "from_jsonstring"], [75, 2, 1, "", "get_cross_cutting_frame"], [76, 2, 1, "", "get_face_most_ortho_to_beam"], [77, 2, 1, "", "get_face_most_towards_beam"], [78, 2, 1, "", "get_main_cutting_frame"], [79, 2, 1, "", "restore_beams_from_keys"], [80, 2, 1, "", "sha256"], [81, 2, 1, "", "to_json"], [82, 2, 1, "", "to_jsonstring"], [83, 2, 1, "", "validate_data"]], "compas_timber.connections.LMiterJoint": [[85, 2, 1, "", "ToString"], [86, 2, 1, "", "add_extensions"], [87, 2, 1, "", "add_features"], [88, 2, 1, "", "copy"], [89, 2, 1, "", "create"], [90, 2, 1, "", "from_json"], [91, 2, 1, "", "from_jsonstring"], [92, 2, 1, "", "get_cutting_planes"], [93, 2, 1, "", "get_face_most_ortho_to_beam"], [94, 2, 1, "", "get_face_most_towards_beam"], [95, 2, 1, "", "restore_beams_from_keys"], [96, 2, 1, "", "sha256"], [97, 2, 1, "", "to_json"], [98, 2, 1, "", "to_jsonstring"], [99, 2, 1, "", "validate_data"]], "compas_timber.connections.LapJoint": [[101, 2, 1, "", "ToString"], [102, 2, 1, "", "add_extensions"], [103, 2, 1, "", "add_features"], [104, 2, 1, "", "copy"], [105, 2, 1, "", "create"], [106, 2, 1, "", "from_json"], [107, 2, 1, "", "from_jsonstring"], [108, 2, 1, "", "get_cross_cutting_frame"], [109, 2, 1, "", "get_face_most_ortho_to_beam"], [110, 2, 1, "", "get_face_most_towards_beam"], [111, 2, 1, "", "get_main_cutting_frame"], [112, 2, 1, "", "restore_beams_from_keys"], [113, 2, 1, "", "sha256"], [114, 2, 1, "", "to_json"], [115, 2, 1, "", "to_jsonstring"], [116, 2, 1, "", "validate_data"]], "compas_timber.connections.TButtJoint": [[118, 2, 1, "", "ToString"], [119, 2, 1, "", "add_extensions"], [120, 2, 1, "", "add_features"], [121, 2, 1, "", "back_surface_main"], [122, 2, 1, "", "calc_params_birdsmouth"], [123, 2, 1, "", "copy"], [124, 2, 1, "", "create"], [125, 2, 1, "", "from_json"], [126, 2, 1, "", "from_jsonstring"], [127, 2, 1, "", "front_back_surface_main"], [128, 2, 1, "", "get_face_most_ortho_to_beam"], [129, 2, 1, "", "get_face_most_towards_beam"], [130, 2, 1, "", "get_main_cutting_plane"], [131, 2, 1, "", "restore_beams_from_keys"], [132, 2, 1, "", "sha256"], [133, 2, 1, "", "side_surfaces_cross"], [134, 2, 1, "", "subtraction_volume"], [135, 2, 1, "", "to_json"], [136, 2, 1, "", "to_jsonstring"], [137, 2, 1, "", "validate_data"]], "compas_timber.connections.THalfLapJoint": [[139, 2, 1, "", "ToString"], [140, 2, 1, "", "add_extensions"], [141, 2, 1, "", "add_features"], [142, 2, 1, "", "copy"], [143, 2, 1, "", "create"], [144, 2, 1, "", "from_json"], [145, 2, 1, "", "from_jsonstring"], [146, 2, 1, "", "get_cross_cutting_frame"], [147, 2, 1, "", "get_face_most_ortho_to_beam"], [148, 2, 1, "", "get_face_most_towards_beam"], [149, 2, 1, "", "get_main_cutting_frame"], [150, 2, 1, "", "restore_beams_from_keys"], [151, 2, 1, "", "sha256"], [152, 2, 1, "", "to_json"], [153, 2, 1, "", "to_jsonstring"], [154, 2, 1, "", "validate_data"]], "compas_timber.connections.XHalfLapJoint": [[156, 2, 1, "", "ToString"], [157, 2, 1, "", "add_extensions"], [158, 2, 1, "", "add_features"], [159, 2, 1, "", "copy"], [160, 2, 1, "", "create"], [161, 2, 1, "", "from_json"], [162, 2, 1, "", "from_jsonstring"], [163, 2, 1, "", "get_cross_cutting_frame"], [164, 2, 1, "", "get_face_most_ortho_to_beam"], [165, 2, 1, "", "get_face_most_towards_beam"], [166, 2, 1, "", "get_main_cutting_frame"], [167, 2, 1, "", "restore_beams_from_keys"], [168, 2, 1, "", "sha256"], [169, 2, 1, "", "to_json"], [170, 2, 1, "", "to_jsonstring"], [171, 2, 1, "", "validate_data"]], "compas_timber.elements": [[173, 1, 1, "", "Beam"]], "compas_timber.elements.Beam": [[174, 2, 1, "", "ToString"], [175, 2, 1, "", "add_blank_extension"], [176, 2, 1, "", "add_feature"], [177, 2, 1, "", "add_features"], [178, 2, 1, "", "compute_aabb"], [179, 2, 1, "", "compute_collision_mesh"], [180, 2, 1, "", "compute_geometry"], [181, 2, 1, "", "compute_obb"], [182, 2, 1, "", "compute_worldtransformation"], [183, 2, 1, "", "copy"], [184, 2, 1, "", "endpoint_closest_to_point"], [185, 2, 1, "", "extension_to_plane"], [186, 2, 1, "", "from_centerline"], [187, 2, 1, "", "from_endpoints"], [188, 2, 1, "", "from_json"], [189, 2, 1, "", "from_jsonstring"], [190, 2, 1, "", "opposing_side_index"], [191, 2, 1, "", "remove_blank_extension"], [192, 2, 1, "", "remove_features"], [193, 2, 1, "", "reset"], [194, 2, 1, "", "sha256"], [195, 2, 1, "", "side_as_surface"], [196, 2, 1, "", "to_json"], [197, 2, 1, "", "to_jsonstring"], [198, 2, 1, "", "transform"], [199, 2, 1, "", "transformed"], [200, 2, 1, "", "validate_data"]], "compas_timber.fabrication": [[201, 1, 1, "", "BTLx"], [205, 1, 1, "", "BTLxFrenchRidgeLap"], [209, 1, 1, "", "BTLxJackCut"], [212, 1, 1, "", "BTLxProcess"], [213, 1, 1, "", "FrenchRidgeFactory"], [215, 1, 1, "", "LButtFactory"], [217, 1, 1, "", "LMiterFactory"], [219, 1, 1, "", "TButtFactory"]], "compas_timber.fabrication.BTLx": [[202, 2, 1, "", "btlx_string"], [203, 2, 1, "", "process_model"], [204, 2, 1, "", "register_joint"]], "compas_timber.fabrication.BTLxFrenchRidgeLap": [[206, 2, 1, "", "create_process"], [207, 2, 1, "", "get_params"], [208, 2, 1, "", "process_joints"]], "compas_timber.fabrication.BTLxJackCut": [[210, 2, 1, "", "create_process"], [211, 2, 1, "", "generate_process"]], "compas_timber.fabrication.FrenchRidgeFactory": [[214, 2, 1, "", "apply_processings"]], "compas_timber.fabrication.LButtFactory": [[216, 2, 1, "", "apply_processings"]], "compas_timber.fabrication.LMiterFactory": [[218, 2, 1, "", "apply_processings"]], "compas_timber.fabrication.TButtFactory": [[220, 2, 1, "", "apply_processings"]], "compas_timber.model": [[221, 1, 1, "", "TimberModel"]], "compas_timber.model.TimberModel": [[222, 2, 1, "", "ToString"], [223, 2, 1, "", "add_element"], [224, 2, 1, "", "add_elements"], [225, 2, 1, "", "add_group"], [226, 2, 1, "", "add_group_element"], [227, 2, 1, "", "add_interaction"], [228, 2, 1, "", "add_joint"], [229, 2, 1, "", "add_material"], [230, 2, 1, "", "assign_material"], [231, 2, 1, "", "compute_aabb"], [232, 2, 1, "", "compute_obb"], [233, 2, 1, "", "copy"], [234, 2, 1, "", "element_by_guid"], [235, 2, 1, "", "elements"], [236, 2, 1, "", "elements_connected_by"], [237, 2, 1, "", "from_json"], [238, 2, 1, "", "from_jsonstring"], [239, 2, 1, "", "get_elements_in_group"], [240, 2, 1, "", "has_element"], [241, 2, 1, "", "has_group"], [242, 2, 1, "", "has_interaction"], [243, 2, 1, "", "has_material"], [244, 2, 1, "", "interactions"], [245, 2, 1, "", "materials"], [246, 2, 1, "", "process_joinery"], [247, 2, 1, "", "remove_element"], [248, 2, 1, "", "remove_interaction"], [249, 2, 1, "", "remove_joint"], [250, 2, 1, "", "rotate"], [251, 2, 1, "", "rotated"], [252, 2, 1, "", "scale"], [253, 2, 1, "", "scaled"], [254, 2, 1, "", "set_topologies"], [255, 2, 1, "", "sha256"], [256, 2, 1, "", "to_json"], [257, 2, 1, "", "to_jsonstring"], [258, 2, 1, "", "transform"], [259, 2, 1, "", "transform_numpy"], [260, 2, 1, "", "transformed"], [261, 2, 1, "", "transformed_numpy"], [262, 2, 1, "", "translate"], [263, 2, 1, "", "translated"], [264, 2, 1, "", "validate_data"]], "compas_timber.planning": [[265, 1, 1, "", "Actor"], [267, 1, 1, "", "BuildingPlan"], [277, 1, 1, "", "SimpleSequenceGenerator"], [278, 1, 1, "", "Step"]], "compas_timber.planning.Actor": [[266, 2, 1, "", "get_name"]], "compas_timber.planning.BuildingPlan": [[268, 2, 1, "", "ToString"], [269, 2, 1, "", "add_step"], [270, 2, 1, "", "copy"], [271, 2, 1, "", "from_json"], [272, 2, 1, "", "from_jsonstring"], [273, 2, 1, "", "sha256"], [274, 2, 1, "", "to_json"], [275, 2, 1, "", "to_jsonstring"], [276, 2, 1, "", "validate_data"]], "compas_timber.planning.Step": [[279, 2, 1, "", "ToString"], [280, 2, 1, "", "copy"], [281, 2, 1, "", "from_json"], [282, 2, 1, "", "from_jsonstring"], [283, 2, 1, "", "sha256"], [284, 2, 1, "", "to_json"], [285, 2, 1, "", "to_jsonstring"], [286, 2, 1, "", "transform"], [287, 2, 1, "", "validate_data"]], "compas_timber.rhino": [[288, 3, 1, "", "find_neighboring_beams"]]}, "objnames": {"0": ["py", "exception", "Python exception"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:exception", "1": "py:class", "2": "py:method", "3": "py:function"}, "terms": {"": [12, 14, 15, 21, 22, 27, 30, 31, 36, 37, 42, 50, 57, 58, 66, 67, 70, 76, 77, 83, 93, 94, 99, 102, 103, 109, 110, 116, 122, 128, 129, 137, 141, 147, 148, 154, 157, 158, 164, 165, 171, 173, 184, 186, 187, 200, 226, 264, 276, 287, 297, 298, 306], "0": [10, 21, 24, 36, 39, 57, 61, 67, 76, 80, 93, 96, 100, 109, 113, 128, 132, 138, 147, 151, 155, 164, 168, 172, 173, 178, 181, 190, 194, 195, 255, 273, 283, 288, 291, 293, 298], "02": 294, "06": 11, "1": [22, 24, 37, 39, 58, 61, 67, 77, 80, 94, 96, 100, 110, 113, 129, 132, 138, 148, 151, 155, 165, 168, 173, 194, 255, 273, 283, 291, 296, 298, 307], "10": [289, 293], "100": 226, "17": 294, "1e": 11, "2": [173, 291, 296, 307], "200": 226, "2020": 294, "2022": 289, "2023": 289, "3": [173, 293, 296, 307], "300": 226, "3000": 226, "3d": 292, "4": [173, 291, 296], "5": [67, 100, 138, 155, 173, 190, 195], "5000": 226, "5281": 289, "6": 173, "7": 293, "7934267": 289, "A": [8, 10, 12, 18, 28, 33, 52, 67, 72, 89, 105, 124, 143, 160, 172, 173, 176, 186, 187, 201, 214, 216, 218, 220, 221, 223, 229, 239, 243, 289, 294, 298, 299, 303], "AND": 294, "AS": 294, "As": 289, "At": 292, "BE": 294, "BUT": 294, "By": [303, 307], "FOR": 294, "For": [44, 172, 246, 266, 292, 306], "IN": 294, "If": [11, 17, 19, 20, 21, 22, 24, 25, 26, 32, 34, 35, 36, 37, 39, 40, 41, 45, 47, 51, 53, 54, 57, 58, 61, 64, 65, 67, 69, 71, 73, 74, 76, 77, 80, 81, 82, 86, 88, 90, 91, 93, 94, 96, 97, 98, 100, 104, 106, 107, 109, 110, 113, 114, 115, 119, 123, 125, 126, 128, 129, 132, 135, 136, 138, 140, 142, 144, 145, 147, 148, 151, 152, 153, 155, 159, 161, 162, 164, 165, 168, 169, 170, 180, 183, 188, 189, 192, 194, 196, 197, 223, 224, 226, 227, 230, 233, 237, 238, 255, 256, 257, 270, 271, 272, 273, 274, 275, 280, 281, 282, 283, 284, 285, 288, 289, 298, 299, 303, 304], "In": [172, 292, 293], "It": [208, 292, 295, 297, 298, 303, 304, 306], "NO": 294, "NOT": 294, "OF": 294, "OR": 294, "Of": [21, 22, 36, 37, 57, 58, 76, 77, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165], "One": [44, 266, 278], "THE": 294, "TO": 294, "The": [7, 8, 12, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 40, 41, 42, 45, 50, 51, 52, 53, 54, 57, 58, 64, 65, 66, 67, 71, 72, 73, 74, 76, 77, 81, 82, 83, 88, 89, 90, 91, 93, 94, 97, 98, 99, 100, 104, 105, 106, 107, 109, 110, 114, 115, 116, 117, 122, 123, 124, 125, 126, 128, 129, 135, 136, 137, 138, 142, 143, 144, 145, 147, 148, 152, 153, 154, 155, 159, 160, 161, 162, 164, 165, 169, 170, 171, 172, 173, 175, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 204, 205, 209, 212, 214, 216, 218, 220, 221, 223, 224, 225, 226, 227, 228, 230, 233, 234, 236, 237, 238, 239, 240, 241, 242, 246, 247, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 270, 271, 272, 274, 275, 276, 280, 281, 282, 284, 285, 287, 288, 294, 295, 297, 298, 302, 303, 304, 306, 307], "Then": 295, "There": [290, 297, 303, 307], "These": [297, 303], "To": [38, 293, 295, 296, 304, 307], "WITH": 294, "_": 297, "__from_data__": [27, 42, 66, 83, 99, 116, 137, 154, 171, 200, 264, 276, 287], "__init__": 296, "aabb": [172, 173, 178], "abl": [14, 15, 30, 31, 70, 102, 103, 141, 157, 158], "about": [8, 292], "abov": [294, 303], "abstract": 100, "accord": [173, 297], "acknowledg": 289, "action": 294, "activ": [292, 293, 298, 304, 306], "actor": [278, 292], "actual": 184, "ad": [18, 28, 33, 52, 72, 89, 105, 124, 143, 160, 173, 177, 223, 224, 225, 226, 288, 299], "add": [14, 15, 30, 31, 47, 48, 69, 70, 86, 87, 102, 103, 119, 120, 140, 141, 157, 158, 175, 176, 177, 223, 224, 225, 226, 227, 228, 229, 246, 295, 296, 304, 306, 307], "add_beam": 291, "add_el": 226, "addit": [10, 28, 225, 295, 297, 298, 302], "adjac": [18, 33, 52, 72, 89, 105, 124, 143, 160], "adjust": 306, "affect": [14, 15, 30, 31, 70, 102, 103, 141, 157, 158], "after": [23, 60, 79, 95, 112, 131, 150, 167], "against": [27, 42, 66, 83, 99, 116, 137, 154, 171, 200, 264, 276, 287], "aleksandra": 289, "algorithm": [24, 39, 61, 80, 96, 113, 132, 151, 168, 172, 194, 255, 273, 283], "align": [16, 172, 173, 178, 231, 295, 306], "all": [21, 22, 36, 37, 57, 58, 76, 77, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165, 185, 192, 193, 208, 221, 235, 239, 244, 245, 246, 258, 288, 294, 297, 299, 303, 305], "allow": [18, 33, 52, 67, 72, 89, 100, 105, 124, 138, 143, 155, 160, 185, 221, 278, 299], "along": [117, 138, 155, 173, 303], "alreadi": [223, 226], "also": [173, 289, 292, 295, 297, 298, 303], "amount": [172, 175, 185, 288], "an": [8, 10, 12, 17, 18, 19, 20, 25, 26, 27, 32, 33, 34, 35, 40, 41, 42, 45, 51, 52, 53, 54, 64, 65, 66, 67, 71, 72, 73, 74, 81, 82, 83, 84, 88, 89, 90, 91, 97, 98, 99, 100, 104, 105, 106, 107, 114, 115, 116, 117, 123, 124, 125, 126, 135, 136, 137, 138, 142, 143, 144, 145, 152, 153, 154, 155, 159, 160, 161, 162, 169, 170, 171, 173, 183, 188, 189, 196, 197, 200, 207, 211, 223, 226, 227, 228, 230, 233, 237, 238, 242, 247, 256, 257, 264, 265, 270, 271, 272, 274, 275, 276, 280, 281, 282, 284, 285, 287, 289, 290, 292, 293, 294, 295, 297, 298, 303], "analysi": 292, "angl": [84, 205, 250, 251, 303], "ani": [25, 26, 27, 40, 41, 42, 64, 65, 66, 81, 82, 83, 97, 98, 99, 114, 115, 116, 135, 136, 137, 152, 153, 154, 169, 170, 171, 196, 197, 200, 256, 257, 264, 274, 275, 276, 284, 285, 287, 290, 294, 302, 303, 307], "anna": 289, "anoth": [117, 138, 155], "apart": 10, "api": [292, 295], "apolinarska": 289, "append": [212, 296], "appli": [8, 14, 15, 30, 31, 70, 102, 103, 141, 157, 158, 198, 199, 205, 212, 214, 216, 218, 220, 239, 258, 296, 303, 307], "applic": 305, "ar": [10, 11, 13, 16, 18, 21, 22, 29, 33, 36, 37, 38, 45, 46, 52, 57, 58, 68, 72, 76, 77, 85, 89, 93, 94, 101, 105, 109, 110, 118, 124, 128, 129, 139, 143, 147, 148, 156, 160, 164, 165, 172, 174, 212, 222, 227, 230, 268, 278, 279, 290, 296, 297, 298, 301, 302, 303, 304, 306, 307], "argument": 225, "aris": 294, "around": 298, "as_str": [24, 39, 61, 80, 96, 113, 132, 151, 168, 194, 255, 273, 283], "assembl": 278, "assembli": [291, 292, 299, 305], "assemli": 23, "assign": [221, 223, 230, 303, 306], "associ": [12, 38, 45, 67, 84, 100, 117, 138, 155, 205, 216, 220, 278, 294], "attach": [21, 22, 36, 37, 57, 58, 76, 77, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165], "attempt": 305, "attr": [212, 225], "attr1nam": 297, "attr1value_attr2nam": 297, "attr2valu": 297, "attribut": [8, 12, 28, 43, 45, 67, 84, 100, 117, 173, 201, 205, 212, 221, 225, 277, 278, 292, 295, 296, 298], "author": [289, 294], "autom": 295, "automat": [47, 48, 69, 86, 87, 119, 120, 140, 306], "avail": 172, "avoid": [38, 178, 181], "axi": [172, 173, 178, 186, 187, 231, 250, 251, 298, 302, 306], "b": [227, 242, 248], "backend": 292, "bake": 295, "bakewithboxmap": 306, "base": [8, 9, 12, 28, 43, 45, 67, 84, 100, 117, 138, 155, 173, 180, 182, 201, 205, 209, 212, 213, 215, 217, 219, 221, 246, 250, 251, 265, 267, 277, 278, 304, 305, 307], "basic": 292, "beam": [8, 9, 10, 11, 12, 14, 15, 18, 21, 22, 23, 28, 30, 31, 33, 36, 37, 38, 45, 47, 48, 52, 57, 58, 60, 63, 67, 69, 70, 72, 76, 77, 79, 84, 86, 87, 89, 93, 94, 95, 100, 102, 103, 105, 109, 110, 112, 117, 119, 120, 124, 128, 129, 131, 134, 138, 140, 141, 143, 147, 148, 150, 155, 157, 158, 160, 164, 165, 167, 172, 205, 209, 221, 226, 228, 234, 246, 288, 291, 292, 295, 297, 302, 303, 304, 306, 307], "beam_a": [11, 12, 21, 22, 36, 37, 57, 58, 76, 77, 84, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165, 226], "beam_a_kei": 221, "beam_b": [11, 12, 21, 22, 36, 37, 57, 58, 76, 77, 84, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165], "beam_b_kei": 221, "beam_width": 299, "beamjoinningerror": [14, 15, 30, 31, 47, 69, 70, 86, 102, 103, 119, 140, 141, 157, 158, 292], "becaus": 303, "been": [18, 33, 52, 72, 89, 105, 124, 143, 160, 223, 278], "befor": [18, 33, 52, 72, 89, 105, 124, 143, 160, 223], "being": 292, "belong": [18, 33, 52, 72, 89, 105, 124, 143, 160], "between": [67, 84, 100, 138, 155, 221, 227, 242, 244, 248, 297, 299, 303, 307], "bird": [50, 122], "birdsmouth": [50, 122, 303], "bisector": [84, 303], "bit": 299, "bitmap": 306, "blank": [173, 175, 191, 246, 298], "blender": 290, "bool": [10, 17, 21, 22, 24, 25, 26, 32, 36, 37, 39, 40, 41, 45, 51, 57, 58, 61, 64, 65, 67, 71, 76, 77, 80, 81, 82, 88, 93, 94, 96, 97, 98, 100, 104, 109, 110, 113, 114, 115, 123, 128, 129, 132, 135, 136, 138, 142, 147, 148, 151, 152, 153, 155, 159, 164, 165, 168, 169, 170, 180, 183, 194, 196, 197, 205, 233, 240, 241, 242, 243, 255, 256, 257, 270, 273, 274, 275, 278, 280, 283, 284, 285], "boolean": [295, 299, 302, 304], "both": [12, 48, 87, 227, 230], "bottom": [12, 23, 205, 303], "bound": [172, 173, 178, 181, 231, 232, 288], "box": [172, 173, 178, 181, 231, 232, 278, 288, 295, 298], "break": [50, 63, 122, 134], "brep": [180, 292, 306], "brepdrillholefeatur": 302, "brepsubtractionfeatur": 302, "btlx": [50, 63, 122, 134, 173, 205, 212, 292, 295], "btlx_2_1_0": 296, "btlx_process": [212, 296], "btlx_string": 201, "btlxfrenchridgelap": 292, "btlxjackcut": [212, 292], "btlxjoint": 296, "btlxpart": [201, 205, 209, 212, 214, 216, 218, 220, 296], "btlxprocess": [292, 296], "build": [267, 277, 278, 293, 307], "buildingplan": [277, 292], "built": [292, 295], "butt": [45, 50, 117, 122, 215, 219, 299], "buttjoint": [45, 117], "byte": [24, 39, 61, 80, 96, 113, 132, 151, 168, 194, 255, 273, 283], "c": [293, 294], "cad": [278, 290], "calcul": [8, 14, 15, 21, 22, 30, 31, 36, 37, 47, 50, 57, 58, 69, 70, 76, 77, 86, 93, 94, 102, 103, 109, 110, 119, 122, 128, 129, 140, 141, 147, 148, 157, 158, 164, 165, 221, 246, 254], "call": [18, 33, 38, 47, 48, 52, 69, 72, 86, 87, 89, 105, 119, 120, 124, 140, 143, 160, 212, 296, 298], "callabl": 239, "can": [8, 27, 42, 66, 83, 99, 116, 137, 154, 171, 200, 212, 223, 264, 267, 276, 278, 287, 290, 295, 296, 298, 303, 307], "cannot": 298, "canva": 303, "care": 307, "casa": 289, "case": [299, 304], "categori": [297, 298, 307], "cd": 293, "center": [21, 22, 36, 37, 57, 58, 76, 77, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165, 221, 289], "center_of_mass": 221, "centerlin": [21, 22, 36, 37, 57, 58, 76, 77, 84, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165, 173, 184, 186, 187, 295, 297, 298, 306], "centerline_end": 173, "centerline_start": 173, "centr": 303, "centrelin": 298, "chang": 303, "charg": 294, "check": [16, 240, 241, 288, 292], "checkstandardattribut": 297, "chen": 289, "chosen": [21, 22, 36, 37, 57, 58, 76, 77, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165], "circular": 38, "cite": 292, "cl": [17, 32, 51, 71, 88, 104, 123, 142, 159, 183, 233, 270, 280], "claim": 294, "class": [9, 12, 13, 28, 29, 43, 45, 46, 67, 68, 84, 85, 100, 101, 117, 118, 138, 139, 155, 156, 173, 174, 201, 204, 205, 209, 212, 213, 215, 217, 219, 221, 222, 228, 258, 265, 267, 268, 277, 278, 279, 292, 296], "classmethod": [10, 18, 19, 20, 27, 33, 34, 35, 42, 44, 52, 53, 54, 66, 72, 73, 74, 83, 89, 90, 91, 99, 105, 106, 107, 116, 124, 125, 126, 137, 143, 144, 145, 154, 160, 161, 162, 171, 186, 187, 188, 189, 200, 204, 206, 210, 214, 216, 218, 220, 237, 238, 264, 266, 271, 272, 276, 281, 282, 287], "clean": 303, "click": 303, "clone": 293, "closer": 184, "closest": [21, 22, 36, 37, 57, 58, 76, 77, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165, 299], "code": [18, 33, 50, 52, 63, 72, 89, 105, 122, 124, 134, 143, 160, 290, 292], "collect": [267, 288, 304], "collis": 179, "colon": 297, "com": [289, 293, 296], "combin": 212, "common": 100, "compa": [17, 19, 20, 24, 32, 34, 35, 39, 51, 53, 54, 61, 71, 73, 74, 80, 88, 90, 91, 96, 104, 106, 107, 113, 123, 125, 126, 132, 142, 144, 145, 151, 159, 161, 162, 168, 173, 179, 180, 181, 182, 183, 188, 189, 194, 198, 199, 231, 232, 233, 237, 238, 250, 251, 255, 258, 262, 263, 270, 271, 272, 273, 278, 280, 281, 282, 283, 289, 295, 299, 301, 305], "compact": [25, 26, 40, 41, 64, 65, 81, 82, 97, 98, 114, 115, 135, 136, 152, 153, 169, 170, 196, 197, 256, 257, 274, 275, 284, 285], "comparison": [24, 39, 61, 80, 96, 113, 132, 151, 168, 194, 255, 273, 283], "compas_model": [199, 226, 236, 239, 241, 277], "compas_rhino": 293, "compas_timb": [0, 8, 9, 12, 18, 28, 33, 38, 43, 45, 52, 67, 72, 84, 89, 100, 105, 117, 124, 138, 143, 155, 160, 172, 173, 201, 204, 205, 209, 212, 213, 215, 217, 219, 221, 226, 265, 267, 277, 278, 288, 289, 292, 293], "compat": [12, 13, 29, 45, 46, 67, 68, 84, 85, 101, 117, 118, 138, 139, 155, 156, 172, 174, 222, 268, 279], "compet": 289, "compil": 293, "complet": [67, 100, 138, 155], "complex": 292, "compon": [293, 297, 298, 299, 301, 302, 304, 307], "componen": 295, "compos": 304, "comput": [11, 24, 39, 61, 80, 96, 113, 132, 151, 168, 178, 179, 180, 181, 182, 194, 231, 232, 255, 273, 283], "computation": 304, "concaten": 297, "concept": [290, 295], "concret": 38, "condit": 294, "connect": [0, 8, 9, 12, 13, 18, 28, 29, 33, 38, 43, 45, 46, 52, 67, 68, 72, 84, 85, 89, 100, 101, 105, 117, 118, 124, 138, 139, 143, 155, 156, 160, 172, 174, 214, 216, 218, 220, 222, 236, 268, 279, 292, 294, 303, 304], "connectionsolv": [254, 292], "consid": [10, 11, 303], "consist": 11, "construct": [19, 20, 27, 34, 35, 42, 53, 54, 66, 73, 74, 83, 90, 91, 99, 106, 107, 116, 125, 126, 137, 144, 145, 154, 161, 162, 171, 188, 189, 200, 237, 238, 264, 271, 272, 276, 281, 282, 287, 292, 299], "contain": [7, 8, 10, 12, 18, 19, 20, 21, 22, 33, 34, 35, 36, 37, 52, 53, 54, 57, 58, 72, 73, 74, 76, 77, 89, 90, 91, 93, 94, 105, 106, 107, 109, 110, 124, 125, 126, 128, 129, 143, 144, 145, 147, 148, 160, 161, 162, 164, 165, 172, 173, 188, 189, 221, 223, 226, 235, 237, 238, 240, 243, 245, 258, 267, 271, 272, 278, 281, 282, 288], "content": 301, "context": 7, "continu": 292, "contract": 294, "contribut": [292, 295], "contributor": 289, "control": [24, 39, 61, 80, 96, 113, 132, 151, 168, 194, 255, 273, 283], "convent": 298, "convers": [13, 29, 46, 68, 85, 101, 118, 139, 156, 174, 222, 268, 279], "convert": [13, 25, 26, 29, 40, 41, 46, 64, 65, 68, 81, 82, 85, 97, 98, 101, 114, 115, 118, 135, 136, 139, 152, 153, 156, 169, 170, 174, 196, 197, 222, 256, 257, 268, 274, 275, 279, 284, 285], "coordin": [173, 182, 298], "copi": [199, 251, 253, 260, 261, 263, 294], "copy_guid": [17, 32, 51, 71, 88, 104, 123, 142, 159, 183, 233, 270, 280], "copyright": 294, "corner": 303, "correct": [19, 20, 34, 35, 53, 54, 73, 74, 90, 91, 106, 107, 125, 126, 144, 145, 161, 162, 188, 189, 237, 238, 271, 272, 281, 282], "correctli": 297, "correspond": [173, 184, 204, 297, 298, 306], "could": [47, 69, 86, 119, 140, 265], "cover": 212, "cpython": [13, 29, 46, 68, 85, 101, 118, 139, 156, 174, 222, 268, 279], "crate": 303, "creat": [12, 16, 28, 45, 47, 48, 67, 69, 84, 86, 87, 100, 117, 119, 120, 138, 140, 155, 186, 187, 199, 204, 205, 213, 215, 217, 219, 290, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 307], "creategeometri": [299, 304], "criteria": 297, "cross": [11, 38, 45, 50, 60, 63, 67, 79, 95, 100, 112, 117, 120, 122, 131, 134, 138, 150, 155, 167, 173, 186, 187, 298, 299, 303], "cross_beam": [45, 67, 100, 117, 138, 155, 291], "cross_beam_kei": 67, "cross_part": [50, 122], "current": [17, 32, 51, 71, 88, 104, 123, 142, 159, 183, 233, 270, 280, 292], "curv": 298, "custom": 292, "custom_dimens": 299, "cut": [45, 67, 100, 138, 155, 209, 295, 298, 302, 303, 304], "cut_plane_bia": [67, 100, 138, 155, 303], "cutoff": 303, "cylind": 278, "damag": 294, "data": [17, 19, 20, 24, 25, 26, 27, 32, 34, 35, 39, 40, 41, 42, 51, 53, 54, 61, 64, 65, 66, 71, 73, 74, 80, 81, 82, 83, 88, 90, 91, 96, 97, 98, 99, 104, 106, 107, 113, 114, 115, 116, 123, 125, 126, 132, 135, 136, 137, 142, 144, 145, 151, 152, 153, 154, 159, 161, 162, 168, 169, 170, 171, 183, 188, 189, 194, 196, 197, 200, 201, 233, 237, 238, 255, 256, 257, 259, 260, 261, 264, 267, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 287, 301, 305], "datastructur": [24, 39, 61, 80, 96, 113, 132, 151, 168, 179, 194, 231, 232, 250, 252, 255, 260, 261, 262, 263, 273, 283], "de": [23, 38, 60, 79, 95, 112, 131, 150, 167], "deal": 294, "debug": [8, 299, 304, 305], "debug_geometri": 8, "debug_info": [8, 193], "debuginfo": [299, 304], "deeper": [67, 100, 138, 155], "default": [13, 17, 29, 32, 45, 46, 51, 67, 68, 71, 85, 88, 100, 101, 104, 118, 123, 138, 139, 142, 155, 156, 159, 174, 183, 186, 187, 209, 222, 233, 250, 251, 252, 253, 268, 270, 279, 280, 292, 298, 299, 304, 306], "defin": [14, 15, 30, 31, 70, 102, 103, 141, 157, 158, 186, 205, 297, 298, 299, 303, 306, 307], "definit": [296, 304], "degre": 205, "deleteattribut": 297, "demo": 300, "depend": [184, 186, 187, 293, 296, 303], "depth": [291, 303], "deriv": [212, 296], "describ": [212, 296], "desigen": 11, "design": [172, 289, 292, 295, 297, 298], "design2machin": 296, "desir": 306, "detail": 295, "detect": [9, 304], "detected_topo": 221, "determin": [16, 303], "dev": 293, "develop": [289, 292], "deviat": 306, "dfab": 289, "diamet": [205, 302], "dict": [12, 28, 201, 205, 208, 212, 214, 216, 218, 220, 221, 225, 296], "dictionari": [12, 28, 201, 214, 216, 218, 220], "differ": [221, 290, 296, 299, 303], "digest": [24, 39, 61, 80, 96, 113, 132, 151, 168, 194, 255, 273, 283], "digit": 289, "dimens": [173, 298], "direct": [173, 185, 186, 187, 252, 253, 288, 298, 299, 307], "directli": [28, 100, 223, 224, 299, 303], "disabl": 304, "displai": [13, 29, 46, 68, 85, 101, 118, 139, 156, 174, 222, 268, 279, 297, 305], "distanc": [10, 11, 299, 304], "distribut": 294, "do": [100, 294, 296], "document": [294, 296, 297, 298, 306], "doe": [18, 33, 52, 72, 89, 105, 124, 143, 160, 296, 298], "doesn": 303, "doi": 289, "done": [21, 22, 36, 37, 57, 58, 76, 77, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165], "doublecut": [50, 122], "down": 303, "drawn": 298, "drill": 205, "drill_hole_diamet": 205, "drop": 303, "dure": [24, 38, 39, 61, 80, 96, 113, 132, 151, 168, 194, 255, 273, 278, 283], "dynam": [299, 303], "e": [11, 38, 45, 290, 297, 306], "each": [21, 22, 28, 36, 37, 57, 58, 76, 77, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165, 185, 212, 267, 296, 297, 303, 305], "easi": 295, "eclips": 290, "ecosystem": 292, "edg": [173, 227, 299, 303], "edge_stud": [299, 303], "edge_stud_offset": 299, "edit": 293, "editor": 290, "eg": 212, "either": [67, 100, 138, 155, 184, 299], "element": [0, 172, 173, 178, 179, 180, 181, 182, 184, 193, 198, 199, 212, 221, 223, 224, 226, 227, 230, 234, 236, 239, 240, 242, 244, 247, 248, 277, 278, 292, 304], "element_id": 278, "elementnod": [223, 224], "elements_held": 278, "els": [50, 122], "encod": 297, "encompass": 292, "end": [12, 21, 22, 28, 36, 37, 45, 57, 58, 63, 67, 76, 77, 84, 93, 94, 109, 110, 117, 128, 129, 134, 138, 147, 148, 155, 164, 165, 173, 175, 184, 185, 187, 205, 303], "end_point": 187, "endpoint": [184, 187], "enlarg": 172, "entail": [292, 297], "entiti": 292, "entri": 297, "enum": 265, "enumer": 43, "environ": [290, 292, 293, 298], "equal": 173, "error": [8, 178, 181, 297, 299, 304], "et": 212, "et_el": 212, "etc": [173, 201, 202, 290, 292, 298], "eth": [289, 292], "event": 294, "eventu": [50, 122], "everi": 303, "exampl": [24, 38, 39, 61, 80, 96, 113, 132, 151, 168, 172, 194, 226, 255, 273, 283, 292, 295, 297, 298, 307], "except": [8, 227], "exclud": [25, 26, 40, 41, 64, 65, 81, 82, 97, 98, 114, 115, 135, 136, 152, 153, 169, 170, 196, 197, 256, 257, 274, 275, 284, 285], "execut": [265, 278, 290], "exist": [13, 29, 46, 68, 85, 101, 118, 139, 156, 174, 222, 226, 241, 268, 279, 296], "expand": 292, "expect": [18, 33, 52, 72, 89, 105, 124, 143, 160], "expens": 304, "explain": 295, "express": [221, 294], "extend": [45, 175, 185, 246, 303], "extens": [14, 30, 47, 48, 69, 86, 87, 102, 119, 140, 157, 175, 185, 191, 193, 246], "extract": [298, 305], "fabric": [0, 201, 204, 205, 208, 209, 212, 213, 215, 217, 219, 289, 292, 295], "face": [12, 16, 21, 22, 24, 36, 37, 39, 45, 57, 58, 61, 76, 77, 80, 93, 94, 96, 109, 110, 113, 128, 129, 132, 147, 148, 151, 164, 165, 168, 173, 185, 194, 205, 255, 273, 283, 303], "face_index": [21, 22, 36, 37, 57, 58, 76, 77, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165], "factor": [252, 253], "factori": [204, 212, 213, 215, 217, 219, 296], "fals": [10, 17, 24, 25, 26, 32, 39, 40, 41, 45, 51, 61, 64, 65, 71, 80, 81, 82, 88, 96, 97, 98, 104, 113, 114, 115, 123, 132, 135, 136, 142, 151, 152, 153, 159, 168, 169, 170, 180, 183, 194, 196, 197, 233, 255, 256, 257, 270, 273, 274, 275, 280, 283, 284, 285, 299, 304], "fast": 292, "featur": [8, 15, 28, 31, 48, 50, 67, 70, 87, 103, 120, 122, 141, 158, 173, 176, 177, 180, 192, 193, 246, 292, 295, 298, 299, 304, 307], "fibr": [173, 295], "file": [19, 25, 34, 40, 53, 64, 73, 81, 90, 97, 106, 114, 125, 135, 144, 152, 161, 169, 188, 196, 201, 237, 256, 271, 274, 281, 284, 294, 296, 300, 301], "filepath": [19, 25, 34, 40, 53, 64, 73, 81, 90, 97, 106, 114, 125, 135, 144, 152, 161, 169, 188, 196, 237, 256, 271, 274, 281, 284], "filter": [239, 297], "filter_": 239, "final": 307, "find": [10, 172, 236, 288, 298, 303], "find_neighboring_beam": 292, "first": [11, 84, 184, 227, 242, 246, 303, 307], "fit": 294, "fix": [13, 29, 46, 68, 85, 101, 118, 139, 156, 174, 222, 268, 279], "flag": 205, "flip": [67, 100, 138, 155, 303], "flip_lap_sid": [67, 100, 138, 155, 303], "float": [10, 11, 67, 100, 138, 155, 172, 173, 175, 178, 181, 185, 186, 187, 205, 221, 250, 251, 252, 253, 288], "flush": [299, 303], "follow": [294, 295, 296, 298, 303], "forg": 293, "fork": 293, "format": [24, 25, 26, 39, 40, 41, 61, 64, 65, 80, 81, 82, 96, 97, 98, 113, 114, 115, 132, 135, 136, 151, 152, 153, 168, 169, 170, 194, 196, 197, 201, 255, 256, 257, 273, 274, 275, 283, 284, 285, 297], "found": 296, "foundat": 289, "four": [297, 303], "frame": [21, 22, 28, 36, 37, 57, 58, 76, 77, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165, 173, 185, 205, 209, 210, 226, 278, 291, 292, 295, 298, 299, 307], "frame_depth": 299, "framework": 292, "free": 294, "french": [12, 16, 205, 213], "frenchridgefactori": 292, "frenchridgelap": 205, "frenchridgelapjoint": 292, "from": [11, 19, 20, 24, 25, 26, 34, 35, 39, 40, 41, 53, 54, 61, 63, 64, 65, 73, 74, 80, 81, 82, 90, 91, 96, 97, 98, 106, 107, 113, 114, 115, 125, 126, 132, 134, 135, 136, 144, 145, 151, 152, 153, 161, 162, 168, 169, 170, 186, 187, 188, 189, 191, 192, 194, 196, 197, 212, 226, 237, 238, 247, 249, 255, 256, 257, 271, 272, 273, 274, 275, 281, 282, 283, 284, 285, 290, 292, 294, 295, 296, 297, 298, 299, 301, 302, 303, 305], "from_obj": [24, 39, 61, 80, 96, 113, 132, 151, 168, 194, 255, 273, 283], "fulli": 303, "fullnam": [13, 29, 46, 68, 85, 101, 118, 139, 156, 174, 222, 268, 279], "function": [7, 50, 63, 100, 122, 134, 172, 212, 239, 295, 296], "furnish": 294, "furthest": 299, "futur": 292, "g": [11, 38, 290, 297], "gener": [11, 203, 207, 211, 212, 221, 239, 277, 296, 298, 299, 303, 307], "geometr": [205, 208, 212, 292, 296, 302, 304], "geometri": [8, 173, 179, 180, 181, 182, 198, 199, 231, 232, 250, 251, 253, 258, 262, 263, 278, 288, 292, 295, 298, 299, 302, 303, 304, 305, 306, 307], "geometry_typ": 291, "get": [24, 39, 61, 80, 96, 113, 132, 151, 168, 194, 234, 239, 255, 273, 283, 293, 295, 297], "getcustomattribut": 297, "getstandardattribut": 297, "gettyp": [13, 29, 46, 68, 85, 101, 118, 139, 156, 174, 222, 268, 279], "gh": [201, 202], "ghpython": [0, 292, 295], "ghuser": 293, "git": 293, "github": [289, 293], "given": [10, 11, 18, 33, 44, 52, 72, 89, 105, 124, 143, 160, 172, 184, 185, 187, 190, 240, 266, 297], "global": 305, "gonzalo": 289, "gramazio": [289, 292, 294], "gramaziokohl": 289, "grant": 294, "graph": 227, "grasshopp": [13, 29, 46, 68, 85, 101, 118, 139, 156, 174, 222, 268, 279, 290, 292, 293, 298, 303, 307], "group": [223, 224, 225, 226, 236, 239, 241, 297], "group_nam": [239, 241], "groupnod": [223, 224, 225, 226], "grssshopper": 303, "guid": [17, 25, 26, 32, 40, 41, 51, 64, 65, 71, 81, 82, 88, 97, 98, 104, 114, 115, 123, 135, 136, 142, 152, 153, 159, 169, 170, 183, 196, 197, 233, 234, 256, 257, 270, 274, 275, 280, 284, 285, 292, 295, 298, 303], "ha": [8, 19, 20, 34, 35, 53, 54, 73, 74, 90, 91, 106, 107, 125, 126, 144, 145, 161, 162, 172, 188, 189, 226, 237, 238, 271, 272, 278, 281, 282, 298, 303, 306], "half": 303, "handl": 292, "has_group": 226, "hash": [24, 39, 61, 80, 96, 113, 132, 151, 168, 194, 255, 273, 283], "have": [17, 18, 32, 33, 51, 52, 71, 72, 88, 89, 104, 105, 123, 124, 142, 143, 159, 160, 173, 183, 212, 223, 233, 242, 270, 280, 298], "header": [205, 299, 303], "header_attribut": [205, 212, 296], "height": [173, 186, 187, 291, 297, 298, 299], "held": 278, "help": 299, "here": [63, 134, 246, 296, 299, 300, 306], "hereaft": 303, "herebi": 294, "hexadecim": [24, 39, 61, 80, 96, 113, 132, 151, 168, 194, 255, 273, 283], "hierarchi": [182, 221, 223, 307], "highest": 303, "highli": 303, "histori": 201, "hold": [50, 122], "holder": 294, "hole": [205, 295], "how": [295, 303, 307], "http": [289, 293, 296], "human": [266, 278], "hybrid": 297, "i": [10, 11, 12, 14, 16, 18, 19, 20, 21, 22, 27, 28, 30, 33, 34, 35, 36, 37, 38, 42, 45, 47, 48, 50, 52, 53, 54, 57, 58, 66, 67, 69, 72, 73, 74, 76, 77, 83, 84, 86, 87, 89, 90, 91, 93, 94, 99, 100, 102, 105, 106, 107, 109, 110, 116, 117, 119, 120, 122, 124, 125, 126, 128, 129, 137, 138, 140, 143, 144, 145, 147, 148, 154, 155, 157, 160, 161, 162, 164, 165, 171, 172, 173, 175, 184, 185, 188, 189, 200, 201, 205, 207, 208, 211, 221, 223, 226, 230, 237, 238, 246, 258, 264, 267, 271, 272, 276, 277, 281, 282, 287, 289, 292, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 306, 307], "id": [278, 290], "idea": 295, "identifi": [28, 172, 234], "ignor": [21, 22, 36, 37, 57, 58, 76, 77, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165], "ignore_end": [21, 22, 36, 37, 57, 58, 76, 77, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165], "imag": 306, "implement": [14, 28, 30, 38, 102, 157, 288, 292, 303], "impli": [294, 304], "implicit": [13, 29, 46, 68, 85, 101, 118, 139, 156, 174, 222, 268, 279], "import": [24, 39, 61, 80, 96, 113, 132, 151, 168, 194, 226, 246, 255, 273, 283, 296, 307], "includ": [180, 294, 296], "include_featur": 180, "increment": 278, "indent": [25, 26, 40, 41, 64, 65, 81, 82, 97, 98, 114, 115, 135, 136, 152, 153, 169, 170, 196, 197, 256, 257, 274, 275, 284, 285], "independ": [17, 32, 51, 71, 88, 104, 123, 142, 159, 183, 233, 270, 280], "index": [21, 22, 36, 37, 57, 58, 76, 77, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165, 190, 195, 205, 292], "indic": [8, 12, 186, 187, 205, 297, 298], "individu": 212, "inflat": [172, 178, 181, 288], "inflate_bi": [172, 288], "inform": [8, 292, 299, 304, 305, 306], "inherit": [12, 28, 45, 67, 84, 100, 117, 138, 155, 173, 221, 267, 278, 292, 296], "initi": 193, "inner": [21, 22, 36, 37, 57, 58, 76, 77, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165, 303], "input": [11, 172, 212, 295, 296, 297, 298, 299, 301, 302, 303, 304], "insid": [254, 290], "inspect": 305, "instal": 292, "instanc": [12, 13, 18, 19, 20, 29, 33, 34, 35, 45, 46, 52, 53, 54, 67, 68, 72, 73, 74, 84, 85, 89, 90, 91, 100, 101, 105, 106, 107, 117, 118, 124, 125, 126, 138, 139, 143, 144, 145, 155, 156, 160, 161, 162, 174, 188, 189, 212, 222, 228, 237, 238, 268, 271, 272, 279, 281, 282, 290, 296], "instanti": [28, 100, 212, 296], "instead": [28, 298], "instruct": [246, 265, 267, 278], "int": [44, 173, 175, 190, 191, 195, 205, 227, 266, 278], "integ": 173, "intend": [297, 298], "interact": [28, 221, 227, 236, 242, 248, 290, 307], "interaction_typ": 236, "interest": 184, "interfac": 292, "intern": [207, 211], "intersect": [9, 10, 11], "introduct": 292, "intuit": 292, "invok": 293, "involv": 218, "ironpython": [13, 29, 46, 68, 85, 101, 118, 139, 156, 174, 222, 268, 279], "is_built": 278, "is_plan": 278, "is_top": [205, 206], "iter": 246, "its": [13, 21, 22, 25, 26, 29, 36, 37, 40, 41, 46, 57, 58, 64, 65, 68, 76, 77, 81, 82, 85, 93, 94, 97, 98, 101, 109, 110, 114, 115, 118, 128, 129, 135, 136, 139, 147, 148, 152, 153, 156, 164, 165, 169, 170, 174, 182, 186, 193, 196, 197, 204, 216, 220, 222, 234, 256, 257, 268, 274, 275, 279, 284, 285, 293, 297, 303], "jack": [209, 299], "jack_stud": [299, 303], "jo": [18, 33, 52, 72, 89, 105, 124, 143, 160], "join": [8, 12, 18, 28, 33, 45, 52, 67, 72, 84, 89, 100, 105, 117, 124, 138, 143, 155, 160, 205, 228, 299, 304], "joineri": 246, "joint": [8, 9, 12, 14, 15, 18, 43, 45, 47, 48, 50, 52, 67, 69, 70, 72, 84, 86, 87, 89, 100, 102, 103, 105, 117, 119, 120, 122, 124, 138, 140, 141, 143, 155, 157, 158, 160, 175, 191, 201, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 228, 246, 249, 290, 292, 295, 296, 298, 299, 304, 307], "joint_factori": [204, 212, 296], "joint_kei": [175, 191], "joint_nam": [209, 210], "joint_overrid": 299, "joint_typ": [12, 67, 204], "jointfactori": 204, "jointrul": 304, "jointtopologi": [11, 221, 292], "joist": 298, "json": [19, 20, 25, 26, 34, 35, 40, 41, 53, 54, 64, 65, 73, 74, 81, 82, 90, 91, 97, 98, 106, 107, 114, 115, 125, 126, 135, 136, 144, 145, 152, 153, 161, 162, 169, 170, 188, 189, 196, 197, 237, 238, 256, 257, 271, 272, 274, 275, 281, 282, 284, 285], "kasir": 289, "keep": 303, "kei": [28, 38, 67, 173, 175, 191, 214, 216, 218, 220, 297], "keyword": 225, "kick": [13, 29, 46, 68, 85, 101, 118, 139, 156, 174, 222, 268, 279], "kind": [294, 303], "king": 299, "king_stud": [299, 303], "kohler": [289, 292, 294], "kwarg": [18, 33, 52, 72, 89, 105, 124, 143, 160, 225], "l": [12, 45, 50, 67, 84, 100, 122, 215, 217, 218, 305], "lap": [12, 16, 67, 100, 138, 155, 205], "lapfeatur": [63, 134], "lapjoint": [67, 138, 155, 292], "larger": [173, 298, 303], "later": [297, 298], "latest": 293, "latter": 298, "layer": 306, "lbuttfactori": 292, "lbuttjoint": [12, 292], "least": [50, 122], "lement": 176, "length": [117, 138, 155, 173, 186], "less": [18, 33, 52, 72, 89, 105, 124, 143, 160, 173], "level": 303, "lhalflapjoint": 292, "li": [298, 306], "liabil": 294, "liabl": 294, "librari": [289, 290, 292, 295], "licens": 292, "lie": [18, 33, 52, 72, 89, 105, 124, 143, 160], "like": [292, 295, 304], "limit": 294, "line": [173, 186, 292, 297, 298, 299, 302], "linear": 298, "linecurv": 298, "lintel_post": 299, "list": [8, 10, 12, 18, 28, 33, 52, 67, 72, 89, 105, 124, 143, 160, 172, 173, 176, 177, 184, 192, 201, 212, 221, 224, 230, 236, 278, 288, 296, 303, 305], "lmiterfactori": 292, "lmiterjoint": 292, "local": [173, 298], "locat": [173, 278, 298], "log": [44, 266], "long": [173, 185], "long_edg": 173, "lower": 303, "lowest": 303, "ly": 302, "m": 293, "machin": [16, 173, 296, 301], "made": 303, "mai": [297, 304], "main": [11, 38, 45, 50, 60, 67, 79, 95, 100, 112, 117, 120, 122, 131, 138, 150, 155, 167, 303], "main_beam": [45, 67, 100, 117, 138, 155, 291], "main_beam_kei": 67, "main_part": [50, 122], "maintain": [208, 292], "major": [173, 298], "make": [13, 17, 29, 32, 46, 51, 68, 71, 85, 88, 101, 104, 118, 123, 139, 142, 156, 159, 174, 183, 222, 233, 268, 270, 279, 280], "mani": [289, 290, 292], "map": [28, 295, 306], "mapsiz": 306, "mass": 221, "match": [212, 296, 303], "materi": [173, 223, 229, 230, 243, 298, 306], "mathemat": 11, "max": 304, "max_dist": [10, 11], "maxdist": 304, "maximum": 11, "mayb": 226, "meant": 7, "meet": 303, "merchant": 294, "merg": 294, "mesh": [24, 39, 61, 80, 96, 113, 132, 151, 168, 179, 194, 255, 273, 283, 291], "method": [9, 11, 12, 13, 16, 18, 28, 29, 33, 38, 43, 45, 46, 47, 48, 52, 67, 68, 69, 72, 84, 85, 86, 87, 89, 100, 101, 105, 117, 118, 119, 120, 124, 138, 139, 140, 143, 155, 156, 160, 173, 174, 201, 205, 207, 209, 211, 213, 215, 217, 219, 221, 222, 246, 265, 267, 268, 278, 279, 292, 296], "metric": 185, "middl": [173, 303], "midpoint": 173, "might": [295, 303], "mill_depth": 303, "mind": 296, "minim": [25, 26, 40, 41, 64, 65, 81, 82, 97, 98, 114, 115, 135, 136, 152, 153, 169, 170, 196, 197, 256, 257, 274, 275, 284, 285], "minimum": 185, "misc": 289, "miss": 297, "mit": 294, "miter": [84, 217, 218], "mode": 293, "model": [0, 12, 18, 23, 33, 38, 45, 52, 60, 67, 72, 79, 84, 89, 95, 100, 105, 112, 117, 124, 131, 138, 143, 150, 155, 160, 167, 173, 182, 201, 203, 221, 223, 224, 225, 226, 227, 228, 229, 230, 235, 240, 241, 243, 244, 245, 246, 247, 249, 254, 258, 265, 277, 292, 295, 298, 301, 302, 307], "modifi": [258, 294], "modify_cross": [45, 303], "modul": [7, 212, 292, 296], "more": [8, 50, 63, 122, 134, 177, 292, 295, 296, 298, 303], "most": [21, 22, 36, 37, 57, 58, 76, 77, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165], "mouth": [50, 122], "move": [50, 122], "multipl": [212, 224, 290, 296], "must": [246, 299], "myenvnam": 293, "n": 293, "name": [209, 212, 225, 226, 239, 241, 296, 297, 305], "nation": 289, "nativ": [25, 26, 40, 41, 64, 65, 81, 82, 97, 98, 114, 115, 135, 136, 152, 153, 169, 170, 196, 197, 256, 257, 274, 275, 284, 285], "nccr": 289, "necessari": [16, 47, 69, 86, 119, 140, 293, 296], "need": [212, 296, 297, 307], "neighbor": [10, 172, 288], "neightbor": [10, 288], "neither": 230, "net": [13, 29, 46, 68, 85, 101, 118, 139, 156, 174, 222, 268, 279], "new": [18, 33, 52, 72, 89, 105, 124, 143, 160, 293, 296, 298], "newlin": [25, 26, 40, 41, 64, 65, 81, 82, 97, 98, 114, 115, 135, 136, 152, 153, 169, 170, 196, 197, 256, 257, 274, 275, 284, 285], "node": [223, 224, 225, 226], "non": 10, "none": [11, 17, 32, 51, 71, 88, 104, 123, 142, 159, 175, 176, 183, 186, 187, 191, 192, 198, 204, 209, 210, 214, 216, 218, 220, 223, 224, 225, 226, 227, 229, 230, 233, 239, 247, 248, 250, 251, 252, 253, 258, 259, 262, 270, 280, 298], "noninfring": 294, "normal": [21, 22, 36, 37, 57, 58, 76, 77, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165, 173], "note": [172, 223, 289], "notic": 294, "now": 303, "number": [299, 307], "obb": 181, "obj": [24, 39, 61, 80, 96, 113, 132, 151, 168, 194, 255, 273, 278, 283], "object": [9, 10, 13, 17, 18, 19, 20, 25, 26, 27, 29, 32, 33, 34, 35, 38, 40, 41, 42, 43, 46, 50, 51, 52, 53, 54, 64, 65, 66, 68, 71, 72, 73, 74, 81, 82, 83, 85, 88, 89, 90, 91, 97, 98, 99, 101, 104, 105, 106, 107, 114, 115, 116, 118, 122, 123, 124, 125, 126, 135, 136, 137, 139, 142, 143, 144, 145, 152, 153, 154, 156, 159, 160, 161, 162, 169, 170, 171, 172, 174, 183, 188, 189, 196, 197, 200, 201, 205, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 227, 228, 233, 237, 238, 249, 256, 257, 264, 265, 268, 270, 271, 272, 274, 275, 276, 277, 279, 280, 281, 282, 284, 285, 287, 292, 297, 298, 299, 304, 306], "obtain": 294, "occ": 292, "occur": [8, 305], "offset": [178, 181, 299], "onc": [173, 298], "one": [21, 22, 36, 37, 57, 58, 67, 76, 77, 93, 94, 100, 109, 110, 128, 129, 138, 147, 148, 155, 164, 165, 177, 227, 230, 277, 278, 296, 298, 303, 305], "onli": [14, 30, 38, 50, 102, 122, 157, 180, 246, 297], "onto": 299, "open": [289, 292], "opencascad": 292, "oper": [302, 304], "oppos": 190, "opposit": [45, 303], "option": [10, 11, 14, 17, 21, 22, 24, 25, 26, 30, 32, 36, 37, 39, 40, 41, 51, 57, 58, 61, 64, 65, 71, 76, 77, 80, 81, 82, 88, 93, 94, 96, 97, 98, 102, 104, 109, 110, 113, 114, 115, 123, 128, 129, 132, 135, 136, 142, 147, 148, 151, 152, 153, 157, 159, 164, 165, 168, 169, 170, 172, 173, 178, 180, 183, 194, 196, 197, 209, 223, 224, 225, 226, 227, 230, 233, 239, 248, 250, 251, 252, 253, 255, 256, 257, 270, 273, 274, 275, 280, 283, 284, 285, 298, 307], "order": [11, 172, 208, 277], "ordereddict": 208, "orient": [181, 186, 187, 205, 232, 306], "origin": [17, 32, 51, 71, 88, 104, 123, 142, 159, 173, 183, 208, 233, 250, 251, 270, 280, 298, 306], "orthogon": [21, 36, 57, 76, 93, 109, 128, 147, 164], "other": [13, 21, 22, 29, 36, 37, 46, 57, 58, 67, 68, 76, 77, 85, 93, 94, 100, 101, 109, 110, 118, 128, 129, 138, 139, 147, 148, 155, 156, 164, 165, 174, 205, 222, 226, 268, 279, 289, 294, 303, 307], "other_beam": 205, "otherwis": [11, 45, 294, 298], "out": 294, "outer": 303, "output": [11, 13, 25, 26, 29, 40, 41, 46, 64, 65, 68, 81, 82, 85, 97, 98, 101, 114, 115, 118, 135, 136, 139, 152, 153, 156, 169, 170, 174, 196, 197, 222, 256, 257, 268, 274, 275, 279, 284, 285, 298, 299, 301, 302, 304], "overal": 295, "overlap": 303, "overrid": [13, 29, 46, 68, 85, 101, 118, 139, 156, 174, 222, 268, 279, 299], "overwrit": [303, 307], "own": 303, "packag": [292, 293, 296], "pair": [10, 11, 172, 288, 297], "panel": [13, 29, 46, 68, 85, 101, 118, 139, 156, 174, 222, 268, 279], "parallel": [278, 298, 303], "param": 212, "paramet": [10, 11, 12, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 51, 52, 53, 54, 57, 58, 61, 64, 65, 66, 67, 71, 72, 73, 74, 76, 77, 80, 81, 82, 83, 84, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 104, 105, 106, 107, 109, 110, 113, 114, 115, 116, 117, 123, 124, 125, 126, 128, 129, 132, 135, 136, 137, 138, 142, 143, 144, 145, 147, 148, 151, 152, 153, 154, 155, 159, 160, 161, 162, 164, 165, 168, 169, 170, 171, 172, 173, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 211, 212, 214, 216, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 287, 288, 296, 297, 306], "parametr": [173, 195, 292], "parent": [223, 224, 225, 226], "part": [16, 38, 50, 63, 122, 134, 201, 203, 205, 206, 209, 210, 214, 216, 218, 220, 223, 230, 288, 292, 296, 298, 302], "particular": 294, "pass": 185, "path": [19, 25, 34, 40, 53, 64, 73, 81, 90, 97, 106, 114, 125, 135, 144, 152, 161, 169, 188, 196, 237, 256, 271, 274, 281, 284, 301], "pdf": 296, "per": 277, "permiss": 294, "permit": 294, "perpendicular": 298, "person": 294, "pip": 293, "place": [13, 29, 46, 68, 85, 101, 118, 139, 156, 174, 222, 258, 268, 279, 303], "plan": [0, 265, 267, 277, 278, 292], "planar": [195, 295, 299, 303], "plane": [45, 84, 120, 185, 209, 298, 302, 303, 306], "plate": [221, 299, 304], "pleas": [12, 45, 67, 84, 100, 117, 138, 155, 289], "pln": 185, "plug": 292, "pluggabl": 172, "plugin": [172, 292], "point": [173, 178, 181, 184, 187, 221, 250, 251, 292, 303, 306], "point_end": 187, "point_start": 187, "portion": 294, "posit": [173, 182, 302], "possibl": [43, 297], "present": [290, 303], "pretti": [25, 26, 40, 41, 64, 65, 81, 82, 97, 98, 114, 115, 135, 136, 152, 153, 169, 170, 196, 197, 201, 202, 256, 257, 274, 275, 284, 285], "prevent": 303, "preview": 305, "print": [13, 29, 46, 68, 85, 101, 118, 139, 156, 174, 222, 268, 279], "prior": 288, "prioriti": [278, 303], "process": [173, 203, 205, 207, 208, 209, 211, 212, 214, 216, 218, 220, 246, 292, 295, 296, 307], "process_param": 296, "process_paramet": [205, 212], "process_typ": [205, 212, 296], "produc": 173, "product": [21, 22, 36, 37, 57, 58, 76, 77, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165], "programm": 289, "project": [289, 292], "proper": [13, 29, 46, 68, 85, 101, 118, 139, 156, 174, 222, 268, 279], "properli": [12, 45, 67, 84, 100, 117, 138, 155], "properti": 208, "provid": [9, 223, 226, 230, 294, 295, 298, 304], "publish": 294, "purpos": 294, "py": 296, "python": [290, 292, 293, 295], "queri": [239, 241], "r": [10, 172, 293], "radian": [250, 251], "rafter": 298, "rais": [14, 15, 18, 19, 20, 30, 31, 33, 34, 35, 47, 52, 53, 54, 69, 70, 72, 73, 74, 86, 89, 90, 91, 102, 103, 105, 106, 107, 119, 124, 125, 126, 140, 141, 143, 144, 145, 157, 158, 160, 161, 162, 188, 189, 223, 226, 227, 230, 237, 238, 271, 272, 281, 282], "random": 306, "rather": [24, 39, 61, 80, 96, 113, 132, 151, 168, 194, 255, 273, 283], "ratio": 306, "raw": [27, 42, 66, 83, 99, 116, 137, 154, 171, 200, 264, 276, 287, 298], "readabl": [50, 63, 122, 134], "reason": 246, "recogn": 305, "rectangular": [173, 298], "ref_edg": 173, "ref_fac": 205, "ref_face_index": 205, "ref_fram": 173, "ref_sid": 173, "refer": [12, 16, 23, 38, 60, 79, 95, 112, 131, 150, 167, 173, 190, 195, 205, 292, 295, 296, 297], "referenc": [298, 299], "reference_face_indic": 12, "regard": 172, "regist": 204, "register_joint": [212, 296], "reject": 45, "reject_i": [45, 303], "relat": [63, 134, 212, 296], "remain": 303, "remov": [175, 191, 192, 193, 247, 248, 249, 297, 302, 303], "render": [295, 306], "repositori": 293, "repres": [12, 45, 67, 84, 117, 138, 155, 173, 201, 205, 209, 221, 227, 265, 298], "represent": [12, 13, 25, 26, 29, 40, 41, 44, 46, 64, 65, 67, 68, 81, 82, 85, 97, 98, 101, 114, 115, 118, 135, 136, 139, 152, 153, 156, 169, 170, 174, 196, 197, 222, 256, 257, 266, 268, 274, 275, 279, 284, 285, 296], "request": 195, "requir": [14, 30, 48, 87, 102, 157, 175, 191, 208, 212, 293], "requr": 296, "research": [289, 292, 294], "resolv": 292, "respect": [28, 38], "respons": [18, 33, 52, 72, 89, 105, 124, 143, 160], "restor": [23, 38, 60, 79, 95, 112, 131, 150, 167], "restrict": 294, "result": [21, 22, 36, 37, 57, 58, 76, 77, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165, 184, 277, 298, 299], "retriev": [234, 297], "return": [10, 11, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 41, 42, 44, 51, 52, 53, 54, 57, 58, 61, 63, 65, 66, 71, 72, 73, 74, 76, 77, 80, 82, 83, 88, 89, 90, 91, 93, 94, 96, 98, 99, 104, 105, 106, 107, 109, 110, 113, 115, 116, 123, 124, 125, 126, 128, 129, 132, 134, 136, 137, 142, 143, 144, 145, 147, 148, 151, 153, 154, 159, 160, 161, 162, 164, 165, 168, 170, 171, 172, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 197, 198, 199, 200, 201, 202, 204, 208, 214, 216, 218, 220, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 247, 248, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 270, 271, 272, 273, 275, 276, 280, 281, 282, 283, 285, 287, 288], "rhino": [0, 13, 29, 46, 68, 85, 101, 118, 139, 156, 172, 174, 222, 268, 279, 288, 290, 292, 293, 297, 298, 303, 306], "rhinocero": 292, "rhinocommon": 292, "ridg": [12, 16, 205, 213], "right": [294, 303], "robot": [266, 278], "role": [11, 38], "root": [223, 224], "rotat": [252, 253, 262, 263, 298], "rtree": [10, 288], "rule": [292, 295, 298, 299, 304, 307], "run": [290, 292], "sai": 298, "same": [11, 17, 32, 45, 51, 71, 88, 104, 123, 142, 159, 183, 226, 233, 270, 277, 278, 280], "save": [23, 25, 26, 40, 41, 60, 64, 65, 79, 81, 82, 95, 97, 98, 112, 114, 115, 131, 135, 136, 150, 152, 153, 167, 169, 170, 196, 197, 256, 257, 274, 275, 284, 285, 301], "scale": [250, 251, 262, 263, 306], "schema": [19, 20, 27, 34, 35, 42, 53, 54, 66, 73, 74, 83, 90, 91, 99, 106, 107, 116, 125, 126, 137, 144, 145, 154, 161, 162, 171, 188, 189, 200, 237, 238, 264, 271, 272, 276, 281, 282, 287], "scienc": 289, "sdk": 292, "search": [10, 172], "second": [11, 84, 184, 227, 242, 246], "section": [45, 173, 186, 187, 290, 295, 298, 299, 303], "secur": 303, "see": [38, 221, 295, 298, 300, 302, 303, 306], "select": [299, 303, 305], "self": [13, 29, 46, 68, 85, 101, 118, 139, 156, 174, 212, 222, 268, 279, 296], "sell": 294, "semant": 292, "sensit": 11, "separ": 297, "sequenc": [246, 277, 292], "sequenti": 303, "serial": [23, 38, 60, 79, 95, 112, 131, 150, 167], "serv": 306, "session": 290, "set": [10, 172, 242, 288, 297, 298, 299, 303, 304], "setcustomattribut": 297, "setstandardattribut": 297, "shall": [226, 294], "shape": 173, "sheet": 299, "sheeting_insid": 299, "sheeting_outsid": 299, "shift": [67, 100, 138, 155, 303], "shorten": 303, "should": [8, 14, 15, 28, 30, 31, 38, 50, 63, 67, 70, 100, 102, 103, 122, 134, 138, 141, 155, 157, 158, 172, 175, 185, 212, 223, 228, 296, 303], "shouldn": [50, 122], "show": [292, 295], "side": [67, 100, 138, 155, 173, 190, 195, 299, 302, 303], "side_index": [190, 195], "sill": [299, 303], "similar": [13, 29, 46, 68, 85, 101, 118, 139, 156, 174, 222, 268, 279, 303], "simpl": [277, 292, 295], "simplesequencegener": 292, "sinc": [38, 246], "singl": [278, 296], "size": [298, 306], "slat": 173, "small_beam_butt": [45, 303], "smaller": [45, 50, 63, 122, 134, 173, 298], "so": [212, 294, 296], "softwar": [292, 294], "solid": [173, 304], "some": [50, 122, 212, 295, 306], "sourc": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 297, 298], "space": 299, "spatial": 182, "specialist": 292, "specif": [11, 38, 212, 236, 243, 292, 296, 298, 299, 303], "specifi": [234, 299], "stage": 292, "standard": [173, 299], "start": [173, 175, 184, 185, 187, 295, 298], "state": 193, "static": [21, 22, 36, 37, 57, 58, 76, 77, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165], "step": [267, 269, 277, 292, 296], "still": 10, "stock": [173, 298], "store": [38, 297, 298], "str": [8, 12, 19, 20, 24, 25, 26, 28, 34, 35, 39, 40, 41, 44, 53, 54, 61, 64, 65, 67, 73, 74, 80, 81, 82, 90, 91, 96, 97, 98, 106, 107, 113, 114, 115, 125, 126, 132, 135, 136, 144, 145, 151, 152, 153, 161, 162, 168, 169, 170, 184, 188, 189, 194, 196, 197, 201, 205, 209, 212, 225, 226, 234, 237, 238, 239, 241, 255, 256, 257, 266, 271, 272, 273, 274, 275, 278, 281, 282, 283, 284, 285], "straight": 298, "string": [8, 12, 13, 20, 26, 29, 35, 41, 44, 46, 54, 65, 67, 68, 74, 82, 85, 91, 98, 101, 107, 115, 118, 126, 136, 139, 145, 153, 156, 162, 170, 174, 189, 197, 201, 202, 222, 238, 257, 266, 268, 272, 275, 279, 282, 285, 297, 298, 303], "structur": [259, 260, 261, 289, 292, 295, 299, 304, 307], "stud": [173, 298, 299, 303], "stud_direct": 299, "stud_spac": 299, "studio": 290, "style": 295, "sub": 100, "subject": 294, "sublicens": 294, "sublim": 290, "substanti": 294, "subtract": [63, 134, 304], "summaris": 303, "support": [278, 289, 290], "suppos": 8, "surfac": [195, 205, 296, 302], "swiss": 289, "system": [173, 298], "t": [50, 100, 117, 122, 138, 155, 219, 305], "take": [13, 29, 46, 68, 85, 101, 118, 139, 156, 174, 222, 268, 279, 296, 307], "tbuttfactori": 292, "tbuttjoint": [38, 291, 292], "termin": [201, 202], "text": [290, 301], "textur": [295, 306], "thalflapjoint": 292, "than": [18, 24, 33, 39, 52, 61, 72, 80, 89, 96, 105, 113, 124, 132, 143, 151, 160, 168, 194, 255, 273, 283], "thei": [11, 303, 307], "them": [18, 33, 52, 72, 84, 89, 105, 124, 143, 160, 212, 242, 290, 296, 297, 303], "thi": [8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 45, 46, 47, 48, 50, 51, 52, 53, 54, 57, 58, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 171, 172, 173, 174, 175, 182, 183, 185, 188, 189, 191, 200, 205, 207, 208, 211, 212, 214, 216, 218, 220, 221, 222, 226, 233, 237, 238, 239, 241, 246, 249, 251, 253, 260, 261, 263, 264, 268, 270, 271, 272, 276, 278, 279, 280, 281, 282, 287, 288, 290, 294, 296, 297, 299, 303, 307], "thick": 299, "third": 303, "three": [303, 307], "through": [67, 100, 138, 155, 185, 289, 303], "tilt": 303, "timber": [173, 201, 209, 221, 289, 295, 298, 299, 301, 305, 307], "timberassembli": 291, "timberel": [173, 226], "timbermodel": [18, 33, 52, 72, 89, 105, 124, 143, 160, 292], "titl": 289, "todo": [50, 63, 122, 134, 185, 226, 239, 241, 254, 303], "togeth": [18, 33, 52, 72, 89, 105, 124, 143, 160, 298], "tol": 11, "toler": [11, 304], "tool": [9, 292, 295, 305, 306], "top": [12, 23, 205, 295, 303], "topo_i": 43, "topo_l": [43, 44], "topo_t": [43, 44], "topo_unknown": [43, 44], "topo_x": [43, 44], "topologi": [9, 11, 12, 18, 33, 43, 44, 45, 52, 67, 72, 84, 89, 105, 117, 124, 138, 143, 155, 160, 221, 254, 303, 304, 307], "tort": 294, "total": 221, "touch": 10, "transform": [182, 250, 251, 252, 253, 259, 261, 262, 263], "translat": [250, 251, 252, 253], "tree": [10, 172, 223], "trim": [45, 48, 67, 84, 87, 117, 120, 138, 155, 304], "trimfeatur": 302, "true": [10, 17, 21, 22, 24, 25, 26, 32, 36, 37, 39, 40, 41, 45, 51, 57, 58, 61, 64, 65, 67, 71, 76, 77, 80, 81, 82, 88, 93, 94, 96, 97, 98, 100, 104, 109, 110, 113, 114, 115, 123, 128, 129, 132, 135, 136, 138, 142, 147, 148, 151, 152, 153, 155, 159, 164, 165, 168, 169, 170, 180, 183, 185, 194, 196, 197, 226, 233, 240, 241, 242, 255, 256, 257, 270, 273, 274, 275, 280, 283, 284, 285, 298, 299, 301, 303, 304], "try": 8, "tupl": [11, 21, 22, 28, 36, 37, 57, 58, 76, 77, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165, 173, 185, 227, 228], "two": [8, 11, 12, 18, 28, 33, 45, 52, 67, 72, 84, 89, 105, 124, 143, 160, 184, 227, 228, 242, 248, 303], "txt": 293, "type": [7, 11, 12, 13, 17, 19, 20, 27, 29, 32, 34, 35, 42, 45, 46, 51, 53, 54, 66, 67, 68, 71, 73, 74, 83, 84, 85, 88, 90, 91, 99, 100, 101, 104, 106, 107, 116, 117, 118, 123, 125, 126, 137, 138, 139, 142, 144, 145, 154, 155, 156, 159, 161, 162, 171, 174, 183, 188, 189, 200, 204, 205, 208, 212, 222, 233, 236, 237, 238, 264, 265, 268, 270, 271, 272, 276, 278, 279, 280, 281, 282, 287, 292, 296, 299, 307], "typeerror": [19, 20, 34, 35, 53, 54, 73, 74, 90, 91, 106, 107, 125, 126, 144, 145, 161, 162, 188, 189, 237, 238, 271, 272, 281, 282], "typic": [212, 278, 296], "unchang": 303, "under": [223, 224], "underscor": 297, "uniqu": [28, 173, 234], "unit": [11, 172, 185], "unlik": 303, "up": [63, 134], "updaterefobj": 298, "upon": 292, "upper": 303, "upstream": [226, 239, 241], "url": 289, "us": [7, 8, 10, 11, 12, 13, 16, 24, 27, 28, 29, 39, 42, 44, 45, 46, 61, 66, 67, 68, 80, 83, 84, 85, 96, 99, 100, 101, 113, 116, 117, 118, 132, 137, 138, 139, 151, 154, 155, 156, 168, 171, 172, 174, 185, 194, 200, 201, 208, 222, 226, 254, 255, 259, 260, 261, 262, 263, 264, 266, 268, 273, 276, 278, 279, 283, 287, 288, 289, 292, 294, 295, 296, 297, 298, 299, 301, 302, 303, 305, 306], "user": [297, 299], "usual": [13, 29, 46, 68, 85, 101, 118, 139, 156, 173, 174, 222, 268, 279], "util": [292, 295], "v1": [24, 39, 61, 80, 96, 113, 132, 151, 168, 194, 255, 273, 283], "v2": [24, 39, 61, 80, 96, 113, 132, 151, 168, 194, 255, 273, 283], "v3": [24, 39, 61, 80, 96, 113, 132, 151, 168, 194, 255, 273, 283], "v7": 293, "valid": [27, 42, 66, 83, 99, 116, 137, 154, 171, 200, 264, 276, 287], "valu": [44, 67, 100, 138, 155, 172, 173, 266, 297], "valueerror": [18, 33, 52, 72, 89, 105, 124, 143, 160, 223, 226, 230], "variabl": 303, "vector": [186, 187, 250, 251, 262, 263, 292, 298, 299], "verifi": [18, 33, 52, 72, 89, 105, 124, 143, 160, 185, 243], "version": [24, 39, 61, 80, 96, 113, 132, 151, 168, 194, 255, 273, 283, 293], "vertex_attribut": [24, 39, 61, 80, 96, 113, 132, 151, 168, 194, 255, 273, 283], "vertex_sampl": [24, 39, 61, 80, 96, 113, 132, 151, 168, 194, 255, 273, 283], "vertic": [298, 303], "via": 292, "visual": [8, 201, 202, 267, 278, 290], "visualis": 304, "vocabulari": 299, "volum": [63, 134, 221], "wa": [8, 14, 15, 30, 31, 70, 102, 103, 141, 157, 158], "wai": 290, "wall": [221, 226, 299], "wall1": 226, "wall1_group": 226, "warranti": 294, "well": [175, 226], "were": [8, 11, 28, 297], "when": [10, 13, 29, 46, 47, 48, 68, 69, 85, 86, 87, 101, 118, 119, 120, 139, 140, 156, 174, 175, 222, 268, 279, 297, 303], "whenev": [14, 15, 30, 31, 70, 102, 103, 141, 157, 158], "where": [50, 122, 296, 298, 301, 303, 306], "whether": [16, 278, 294], "which": [8, 10, 11, 12, 16, 18, 21, 22, 28, 33, 36, 37, 45, 52, 57, 58, 67, 72, 76, 77, 84, 89, 93, 94, 105, 109, 110, 117, 124, 128, 129, 138, 143, 147, 148, 155, 160, 164, 165, 172, 175, 184, 185, 191, 205, 212, 225, 226, 265, 267, 278, 296, 298, 299, 304], "while": [8, 303, 305], "whitespac": [25, 26, 40, 41, 64, 65, 81, 82, 97, 98, 114, 115, 135, 136, 152, 153, 169, 170, 196, 197, 256, 257, 274, 275, 284, 285], "whom": 294, "whose": [21, 22, 36, 37, 57, 58, 76, 77, 93, 94, 109, 110, 128, 129, 147, 148, 164, 165], "whould": [18, 33, 52, 72, 89, 105, 124, 143, 160], "wide": 173, "width": [173, 186, 187, 291, 297, 298, 299], "within": [11, 278, 298], "without": [25, 26, 40, 41, 64, 65, 67, 81, 82, 97, 98, 100, 114, 115, 135, 136, 138, 152, 153, 155, 169, 170, 196, 197, 256, 257, 274, 275, 284, 285, 294, 298], "wood": 173, "work": [289, 299], "workflow": [292, 295, 297, 298], "world": [182, 298, 299], "worldx": [186, 187], "worldxi": [226, 291], "worldz": [186, 187], "write": [297, 298], "written": 292, "x": [100, 155, 173, 252, 253, 298, 305, 306], "xhalflapjoint": 292, "xmax": 173, "xmin": 173, "xml": [201, 202, 301], "y": [173, 252, 253, 298, 306], "ye": 293, "year": 289, "yet": 303, "yield": [235, 244, 245], "ymax": 173, "ymin": 173, "you": [289, 295, 299, 303, 307], "your": 289, "yourgithub_usernam": 293, "z": [24, 39, 61, 80, 96, 113, 132, 151, 168, 173, 186, 187, 194, 250, 251, 252, 253, 255, 273, 283, 298, 299, 302, 306], "z_vector": [186, 187], "zenodo": 289, "zero": 299, "zmax": 173, "zmin": 173, "zurich": [289, 292], "zvector": [297, 298]}, "titles": ["API Reference", "compas_timber.connections", "compas_timber.elements", "compas_timber.fabrication", "compas_timber.ghpython", "compas_timber.model", "compas_timber.planning", "rhino", "BeamJoinningError", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "FrenchRidgeLapJoint", "FrenchRidgeLapJoint.ToString", "FrenchRidgeLapJoint.add_extensions", "FrenchRidgeLapJoint.add_features", "FrenchRidgeLapJoint.check_geometry", "FrenchRidgeLapJoint.copy", "FrenchRidgeLapJoint.create", "FrenchRidgeLapJoint.from_json", "FrenchRidgeLapJoint.from_jsonstring", "FrenchRidgeLapJoint.get_face_most_ortho_to_beam", "FrenchRidgeLapJoint.get_face_most_towards_beam", "FrenchRidgeLapJoint.restore_beams_from_keys", "FrenchRidgeLapJoint.sha256", "FrenchRidgeLapJoint.to_json", "FrenchRidgeLapJoint.to_jsonstring", "FrenchRidgeLapJoint.validate_data", "Joint", "Joint.ToString", "Joint.add_extensions", "Joint.add_features", "Joint.copy", "Joint.create", "Joint.from_json", "Joint.from_jsonstring", "Joint.get_face_most_ortho_to_beam", "Joint.get_face_most_towards_beam", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_json", "Joint.to_jsonstring", "Joint.validate_data", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_extensions", "LButtJoint.add_features", "LButtJoint.back_surface_main", "LButtJoint.calc_params_birdsmouth", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.from_json", "LButtJoint.from_jsonstring", "LButtJoint.front_back_surface_main", "LButtJoint.get_cross_cutting_plane", "LButtJoint.get_face_most_ortho_to_beam", "LButtJoint.get_face_most_towards_beam", "LButtJoint.get_main_cutting_plane", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.side_surfaces_cross", "LButtJoint.subtraction_volume", "LButtJoint.to_json", "LButtJoint.to_jsonstring", "LButtJoint.validate_data", "LHalfLapJoint", "LHalfLapJoint.ToString", "LHalfLapJoint.add_extensions", "LHalfLapJoint.add_features", "LHalfLapJoint.copy", "LHalfLapJoint.create", "LHalfLapJoint.from_json", "LHalfLapJoint.from_jsonstring", "LHalfLapJoint.get_cross_cutting_frame", "LHalfLapJoint.get_face_most_ortho_to_beam", "LHalfLapJoint.get_face_most_towards_beam", "LHalfLapJoint.get_main_cutting_frame", "LHalfLapJoint.restore_beams_from_keys", "LHalfLapJoint.sha256", "LHalfLapJoint.to_json", "LHalfLapJoint.to_jsonstring", "LHalfLapJoint.validate_data", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_extensions", "LMiterJoint.add_features", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.from_json", "LMiterJoint.from_jsonstring", "LMiterJoint.get_cutting_planes", "LMiterJoint.get_face_most_ortho_to_beam", "LMiterJoint.get_face_most_towards_beam", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_json", "LMiterJoint.to_jsonstring", "LMiterJoint.validate_data", "LapJoint", "LapJoint.ToString", "LapJoint.add_extensions", "LapJoint.add_features", "LapJoint.copy", "LapJoint.create", "LapJoint.from_json", "LapJoint.from_jsonstring", "LapJoint.get_cross_cutting_frame", "LapJoint.get_face_most_ortho_to_beam", "LapJoint.get_face_most_towards_beam", "LapJoint.get_main_cutting_frame", "LapJoint.restore_beams_from_keys", "LapJoint.sha256", "LapJoint.to_json", "LapJoint.to_jsonstring", "LapJoint.validate_data", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_extensions", "TButtJoint.add_features", "TButtJoint.back_surface_main", "TButtJoint.calc_params_birdsmouth", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.from_json", "TButtJoint.from_jsonstring", "TButtJoint.front_back_surface_main", "TButtJoint.get_face_most_ortho_to_beam", "TButtJoint.get_face_most_towards_beam", "TButtJoint.get_main_cutting_plane", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.side_surfaces_cross", "TButtJoint.subtraction_volume", "TButtJoint.to_json", "TButtJoint.to_jsonstring", "TButtJoint.validate_data", "THalfLapJoint", "THalfLapJoint.ToString", "THalfLapJoint.add_extensions", "THalfLapJoint.add_features", "THalfLapJoint.copy", "THalfLapJoint.create", "THalfLapJoint.from_json", "THalfLapJoint.from_jsonstring", "THalfLapJoint.get_cross_cutting_frame", "THalfLapJoint.get_face_most_ortho_to_beam", "THalfLapJoint.get_face_most_towards_beam", "THalfLapJoint.get_main_cutting_frame", "THalfLapJoint.restore_beams_from_keys", "THalfLapJoint.sha256", "THalfLapJoint.to_json", "THalfLapJoint.to_jsonstring", "THalfLapJoint.validate_data", "XHalfLapJoint", "XHalfLapJoint.ToString", "XHalfLapJoint.add_extensions", "XHalfLapJoint.add_features", "XHalfLapJoint.copy", "XHalfLapJoint.create", "XHalfLapJoint.from_json", "XHalfLapJoint.from_jsonstring", "XHalfLapJoint.get_cross_cutting_frame", "XHalfLapJoint.get_face_most_ortho_to_beam", "XHalfLapJoint.get_face_most_towards_beam", "XHalfLapJoint.get_main_cutting_frame", "XHalfLapJoint.restore_beams_from_keys", "XHalfLapJoint.sha256", "XHalfLapJoint.to_json", "XHalfLapJoint.to_jsonstring", "XHalfLapJoint.validate_data", "find_neighboring_beams", "Beam", "Beam.ToString", "Beam.add_blank_extension", "Beam.add_feature", "Beam.add_features", "Beam.compute_aabb", "Beam.compute_collision_mesh", "Beam.compute_geometry", "Beam.compute_obb", "Beam.compute_worldtransformation", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_endpoints", "Beam.from_json", "Beam.from_jsonstring", "Beam.opposing_side_index", "Beam.remove_blank_extension", "Beam.remove_features", "Beam.reset", "Beam.sha256", "Beam.side_as_surface", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transformed", "Beam.validate_data", "BTLx", "BTLx.btlx_string", "BTLx.process_model", "BTLx.register_joint", "BTLxFrenchRidgeLap", "BTLxFrenchRidgeLap.create_process", "BTLxFrenchRidgeLap.get_params", "BTLxFrenchRidgeLap.process_joints", "BTLxJackCut", "BTLxJackCut.create_process", "BTLxJackCut.generate_process", "BTLxProcess", "FrenchRidgeFactory", "FrenchRidgeFactory.apply_processings", "LButtFactory", "LButtFactory.apply_processings", "LMiterFactory", "LMiterFactory.apply_processings", "TButtFactory", "TButtFactory.apply_processings", "TimberModel", "TimberModel.ToString", "TimberModel.add_element", "TimberModel.add_elements", "TimberModel.add_group", "TimberModel.add_group_element", "TimberModel.add_interaction", "TimberModel.add_joint", "TimberModel.add_material", "TimberModel.assign_material", "TimberModel.compute_aabb", "TimberModel.compute_obb", "TimberModel.copy", "TimberModel.element_by_guid", "TimberModel.elements", "TimberModel.elements_connected_by", "TimberModel.from_json", "TimberModel.from_jsonstring", "TimberModel.get_elements_in_group", "TimberModel.has_element", "TimberModel.has_group", "TimberModel.has_interaction", "TimberModel.has_material", "TimberModel.interactions", "TimberModel.materials", "TimberModel.process_joinery", "TimberModel.remove_element", "TimberModel.remove_interaction", "TimberModel.remove_joint", "TimberModel.rotate", "TimberModel.rotated", "TimberModel.scale", "TimberModel.scaled", "TimberModel.set_topologies", "TimberModel.sha256", "TimberModel.to_json", "TimberModel.to_jsonstring", "TimberModel.transform", "TimberModel.transform_numpy", "TimberModel.transformed", "TimberModel.transformed_numpy", "TimberModel.translate", "TimberModel.translated", "TimberModel.validate_data", "Actor", "Actor.get_name", "BuildingPlan", "BuildingPlan.ToString", "BuildingPlan.add_step", "BuildingPlan.copy", "BuildingPlan.from_json", "BuildingPlan.from_jsonstring", "BuildingPlan.sha256", "BuildingPlan.to_json", "BuildingPlan.to_jsonstring", "BuildingPlan.validate_data", "SimpleSequenceGenerator", "Step", "Step.ToString", "Step.copy", "Step.from_json", "Step.from_jsonstring", "Step.sha256", "Step.to_json", "Step.to_jsonstring", "Step.transform", "Step.validate_data", "find_neighboring_beams", "Citing", "Examples", "Create Joint", "COMPAS Timber Documentation", "Installation", "License", "Grasshopper plugin", "BTLx Contribution Guide", "Attributes", "Beams", "Design", "Examples", "Fabrication", "Features", "Joint Rules", "Model", "Show", "Utils", "Workflow"], "titleterms": {"actor": [265, 266], "add_blank_extens": 175, "add_el": [223, 224], "add_extens": [14, 30, 47, 69, 86, 102, 119, 140, 157], "add_featur": [15, 31, 48, 70, 87, 103, 120, 141, 158, 176, 177], "add_group": 225, "add_group_el": 226, "add_interact": 227, "add_joint": 228, "add_materi": 229, "add_step": 269, "api": 0, "apply_process": [214, 216, 218, 220], "assembli": 290, "assign_materi": 230, "attribut": 297, "back_surface_main": [49, 121], "bake": 306, "beam": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 298, 299, 305], "beamjoinningerror": 8, "boxmap": 306, "brep": 302, "btlx": [201, 202, 203, 204, 296, 301], "btlx_string": 202, "btlxfrenchridgelap": [205, 206, 207, 208], "btlxjackcut": [209, 210, 211], "btlxprocess": 212, "buildingplan": [267, 268, 269, 270, 271, 272, 273, 274, 275, 276], "butt": 303, "calc_params_birdsmouth": [50, 122], "categori": 303, "check": 297, "check_geometri": 16, "cite": 289, "class": [1, 2, 3, 4, 5, 6], "compa": 292, "compas_timb": [1, 2, 3, 4, 5, 6], "compon": 303, "compute_aabb": [178, 231], "compute_collision_mesh": 179, "compute_geometri": 180, "compute_obb": [181, 232], "compute_worldtransform": 182, "conda": 293, "connect": 1, "connectionsolv": [9, 10, 11], "content": 292, "contribut": 296, "copi": [17, 32, 51, 71, 88, 104, 123, 142, 159, 183, 233, 270, 280], "creat": [18, 33, 52, 72, 89, 105, 124, 143, 160, 291], "create_process": [206, 210], "custom": [297, 299], "decomposebeam": 298, "default": 303, "delet": 297, "depend": 292, "design": 299, "develop": 293, "dimens": 299, "direct": 303, "document": 292, "drill": 302, "element": [2, 235], "element_by_guid": 234, "elements_connected_bi": 236, "endpoint_closest_to_point": 184, "error": 305, "exampl": [290, 300], "except": 1, "extension_to_plan": 185, "fabric": [3, 301], "face": 305, "featur": [302, 305], "find_intersecting_pair": 10, "find_neighboring_beam": [172, 288], "find_topologi": 11, "findbeambyrhinoguid": 298, "french": 303, "frenchridgefactori": [213, 214], "frenchridgelapjoint": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "from_centerlin": 186, "from_endpoint": 187, "from_json": [19, 34, 53, 73, 90, 106, 125, 144, 161, 188, 237, 271, 281], "from_jsonstr": [20, 35, 54, 74, 91, 107, 126, 145, 162, 189, 238, 272, 282], "front_back_surface_main": [55, 127], "function": 1, "generate_process": 211, "get_cross_cutting_fram": [75, 108, 146, 163], "get_cross_cutting_plan": 56, "get_cutting_plan": 92, "get_elements_in_group": 239, "get_face_most_ortho_to_beam": [21, 36, 57, 76, 93, 109, 128, 147, 164], "get_face_most_towards_beam": [22, 37, 58, 77, 94, 110, 129, 148, 165], "get_main_cutting_fram": [78, 111, 149, 166], "get_main_cutting_plan": [59, 130], "get_nam": [44, 266], "get_param": 207, "ghpython": 4, "grasshopp": 295, "guid": 296, "halflap": 303, "has_el": 240, "has_group": 241, "has_interact": 242, "has_materi": 243, "hole": 302, "index": 305, "indic": 292, "instal": 293, "interact": 244, "join": 305, "joint": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 291, 303, 305], "jointtopologi": [43, 44], "l": 303, "lap": 303, "lapjoint": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "lbuttfactori": [215, 216], "lbuttjoint": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "lhalflapjoint": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], "licens": 294, "lmiterfactori": [217, 218], "lmiterjoint": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "materi": 245, "miter": 303, "model": [5, 299, 303, 304, 305], "opposing_side_index": 190, "option": 299, "overrid": 303, "packag": 0, "paramet": [50, 122], "plan": 6, "plugin": [7, 295], "process_joineri": 246, "process_joint": 208, "process_model": 203, "refer": 0, "register_joint": 204, "remove_blank_extens": 191, "remove_el": 247, "remove_featur": 192, "remove_interact": 248, "remove_joint": 249, "reset": 193, "restore_beams_from_kei": [23, 38, 60, 79, 95, 112, 131, 150, 167], "rhino": 7, "ridg": 303, "rotat": [250, 251], "rule": 303, "scale": [252, 253], "set_topologi": 254, "sha256": [24, 39, 61, 80, 96, 113, 132, 151, 168, 194, 255, 273, 283], "show": 305, "side_as_surfac": 195, "side_surfaces_cross": [62, 133], "simplesequencegener": 277, "stabl": 293, "standard": 297, "step": [278, 279, 280, 281, 282, 283, 284, 285, 286, 287], "subtract": 302, "subtraction_volum": [63, 134], "summari": 303, "surfac": [299, 303, 305], "t": 303, "tabl": [292, 303], "tbuttfactori": [219, 220], "tbuttjoint": [117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "thalflapjoint": [138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "timber": [290, 292], "timbermodel": [221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], "to_json": [25, 40, 64, 81, 97, 114, 135, 152, 169, 196, 256, 274, 284], "to_jsonstr": [26, 41, 65, 82, 98, 115, 136, 153, 170, 197, 257, 275, 285], "topolog": 303, "topologi": 305, "tostr": [13, 29, 46, 68, 85, 101, 118, 139, 156, 174, 222, 268, 279], "transform": [198, 199, 258, 260, 286], "transform_numpi": 259, "transformed_numpi": 261, "translat": [262, 263], "trim": 302, "type": [303, 305], "util": 306, "validate_data": [27, 42, 66, 83, 99, 116, 137, 154, 171, 200, 264, 276, 287], "workflow": 307, "write": 301, "x": 303, "xhalflapjoint": [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171]}})