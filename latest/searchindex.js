Search.setIndex({"alltitles": {"API Reference": [[0, null]], "Actor": [[742, null]], "Actor.get_name": [[743, null]], "Attributes": [[817, null]], "BTLx Contribution Guide": [[816, null]], "BTLxPart": [[495, null]], "BTLxPart.et_point_vals": [[496, null]], "BTLxPart.ref_side_from_face": [[497, null]], "BTLxProcessing": [[498, null]], "BTLxProcessing.ToString": [[499, null]], "BTLxProcessing.add_subprocessing": [[500, null]], "BTLxProcessing.copy": [[501, null]], "BTLxProcessing.from_json": [[502, null]], "BTLxProcessing.from_jsonstring": [[503, null]], "BTLxProcessing.sha256": [[504, null]], "BTLxProcessing.to_json": [[505, null]], "BTLxProcessing.to_jsonstring": [[506, null]], "BTLxProcessing.validate_data": [[507, null]], "BTLxWriter": [[508, null]], "BTLxWriter.model_to_xml": [[509, null]], "BTLxWriter.write": [[510, null]], "Bake with BoxMap": [[826, "bake-with-boxmap"]], "BallNodeJoint": [[10, null]], "BallNodeJoint.ToString": [[11, null]], "BallNodeJoint.add_extensions": [[12, null]], "BallNodeJoint.add_features": [[13, null]], "BallNodeJoint.check_elements_compatibility": [[14, null]], "BallNodeJoint.copy": [[15, null]], "BallNodeJoint.create": [[16, null]], "BallNodeJoint.element_count_complies": [[17, null]], "BallNodeJoint.from_json": [[18, null]], "BallNodeJoint.from_jsonstring": [[19, null]], "BallNodeJoint.get_face_most_ortho_to_beam": [[20, null]], "BallNodeJoint.get_face_most_towards_beam": [[21, null]], "BallNodeJoint.restore_beams_from_keys": [[22, null]], "BallNodeJoint.sha256": [[23, null]], "BallNodeJoint.to_json": [[24, null]], "BallNodeJoint.to_jsonstring": [[25, null]], "BallNodeJoint.validate_data": [[26, null]], "Beam": [[368, null]], "Beam.ToString": [[369, null]], "Beam.add_blank_extension": [[370, null]], "Beam.add_feature": [[371, null]], "Beam.add_features": [[372, null]], "Beam.compute_aabb": [[373, null]], "Beam.compute_collision_mesh": [[374, null]], "Beam.compute_geometry": [[375, null]], "Beam.compute_obb": [[376, null]], "Beam.compute_worldtransformation": [[377, null]], "Beam.copy": [[378, null]], "Beam.endpoint_closest_to_point": [[379, null]], "Beam.extension_to_plane": [[380, null]], "Beam.from_centerline": [[381, null]], "Beam.from_endpoints": [[382, null]], "Beam.from_json": [[383, null]], "Beam.from_jsonstring": [[384, null]], "Beam.get_dimensions_relative_to_side": [[385, null]], "Beam.opposing_side_index": [[386, null]], "Beam.remove_blank_extension": [[387, null]], "Beam.remove_features": [[388, null]], "Beam.reset": [[389, null]], "Beam.sha256": [[390, null]], "Beam.side_as_surface": [[391, null]], "Beam.to_json": [[392, null]], "Beam.to_jsonstring": [[393, null]], "Beam.transform": [[394, null]], "Beam.transformed": [[395, null]], "Beam.validate_data": [[396, null]], "BeamJoiningError": [[492, null]], "Beams": [[818, null]], "BuildingPlan": [[744, null]], "BuildingPlan.ToString": [[745, null]], "BuildingPlan.add_step": [[746, null]], "BuildingPlan.copy": [[747, null]], "BuildingPlan.from_json": [[748, null]], "BuildingPlan.from_jsonstring": [[749, null]], "BuildingPlan.sha256": [[750, null]], "BuildingPlan.to_json": [[751, null]], "BuildingPlan.to_jsonstring": [[752, null]], "BuildingPlan.validate_data": [[753, null]], "BuildingPlanParser": [[754, null]], "BuildingPlanParser.parse": [[755, null]], "BuildingPlanParser.serialize": [[756, null]], "COMPAS Timber Documentation": [[812, null]], "Category Joint Rules": [[823, "category-joint-rules"]], "CategoryRule": [[308, null]], "CategoryRule.ToString": [[309, null]], "CategoryRule.comply": [[310, null]], "CategoryRule.get_category_rules": [[311, null]], "CategoryRule.get_direct_rules": [[312, null]], "CategoryRule.get_topology_rules": [[313, null]], "CategoryRule.joints_from_beams_and_rules": [[314, null]], "CategoryRule.reorder": [[315, null]], "Check Attributes": [[817, "check-attributes"]], "Citing": [[809, null]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"]], "ConnectionSolver": [[27, null]], "ConnectionSolver.find_intersecting_pairs": [[28, null]], "ConnectionSolver.find_topology": [[29, null]], "ConnectionSolver.find_wall_wall_topology": [[30, null]], "Create Joint": [[811, null]], "Custom Attributes": [[817, "custom-attributes"]], "Custom Beam Dimensions": [[819, "custom-beam-dimensions"]], "DebugInfomation": [[316, null]], "DebugInfomation.ToString": [[317, null]], "DebugInfomation.add_fastener_error": [[318, null]], "DebugInfomation.add_feature_error": [[319, null]], "DebugInfomation.add_joint_error": [[320, null]], "DecomposeBeam": [[818, "decomposebeam"]], "Default Joint Rules": [[823, "default-joint-rules"]], "Delete Attributes": [[817, "delete-attributes"]], "Dependencies": [[812, "dependencies"]], "Design": [[819, null]], "Development": [[813, "development"]], "Direct Joint Rules": [[823, "direct-joint-rules"]], "DirectRule": [[321, null]], "DirectRule.ToString": [[322, null]], "DirectRule.comply": [[323, null]], "DirectRule.contains": [[324, null]], "DirectRule.get_category_rules": [[325, null]], "DirectRule.get_direct_rules": [[326, null]], "DirectRule.get_topology_rules": [[327, null]], "DirectRule.joints_from_beams_and_rules": [[328, null]], "Double Cut Feature": [[822, "double-cut-feature"]], "DoubleCut": [[511, null]], "DoubleCut.ToString": [[512, null]], "DoubleCut.add_subprocessing": [[513, null]], "DoubleCut.apply": [[514, null]], "DoubleCut.copy": [[515, null]], "DoubleCut.from_json": [[516, null]], "DoubleCut.from_jsonstring": [[517, null]], "DoubleCut.from_planes_and_beam": [[518, null]], "DoubleCut.from_shapes_and_element": [[519, null]], "DoubleCut.planes_from_params_and_beam": [[520, null]], "DoubleCut.sha256": [[521, null]], "DoubleCut.to_json": [[522, null]], "DoubleCut.to_jsonstring": [[523, null]], "DoubleCut.validate_data": [[524, null]], "DovetailMortise": [[525, null]], "DovetailMortise.ToString": [[526, null]], "DovetailMortise.add_subprocessing": [[527, null]], "DovetailMortise.apply": [[528, null]], "DovetailMortise.copy": [[529, null]], "DovetailMortise.define_dovetail_tool": [[530, null]], "DovetailMortise.dovetail_cutting_frames_from_params_and_beam": [[531, null]], "DovetailMortise.dovetail_volume_from_params_and_beam": [[532, null]], "DovetailMortise.frame_from_params_and_beam": [[533, null]], "DovetailMortise.from_frame_and_beam": [[534, null]], "DovetailMortise.from_json": [[535, null]], "DovetailMortise.from_jsonstring": [[536, null]], "DovetailMortise.sha256": [[537, null]], "DovetailMortise.to_json": [[538, null]], "DovetailMortise.to_jsonstring": [[539, null]], "DovetailMortise.validate_data": [[540, null]], "DovetailTenon": [[541, null]], "DovetailTenon.ToString": [[542, null]], "DovetailTenon.add_subprocessing": [[543, null]], "DovetailTenon.apply": [[544, null]], "DovetailTenon.copy": [[545, null]], "DovetailTenon.define_dovetail_tool": [[546, null]], "DovetailTenon.dovetail_cutting_frames_from_params_and_beam": [[547, null]], "DovetailTenon.dovetail_volume_from_params_and_beam": [[548, null]], "DovetailTenon.frame_from_params_and_beam": [[549, null]], "DovetailTenon.from_json": [[550, null]], "DovetailTenon.from_jsonstring": [[551, null]], "DovetailTenon.from_plane_and_beam": [[552, null]], "DovetailTenon.sha256": [[553, null]], "DovetailTenon.to_json": [[554, null]], "DovetailTenon.to_jsonstring": [[555, null]], "DovetailTenon.validate_data": [[556, null]], "Drilling": [[557, null]], "Drilling Feature": [[822, "drilling-feature"]], "Drilling.ToString": [[558, null]], "Drilling.add_subprocessing": [[559, null]], "Drilling.apply": [[560, null]], "Drilling.copy": [[561, null]], "Drilling.cylinder_from_params_and_element": [[562, null]], "Drilling.from_json": [[563, null]], "Drilling.from_jsonstring": [[564, null]], "Drilling.from_line_and_element": [[565, null]], "Drilling.from_shapes_and_element": [[566, null]], "Drilling.sha256": [[567, null]], "Drilling.to_json": [[568, null]], "Drilling.to_jsonstring": [[569, null]], "Drilling.validate_data": [[570, null]], "EdgePositionType": [[571, null]], "Examples": [[810, null], [820, null]], "Exceptions": [[1, "exceptions"]], "Fabrication": [[821, null]], "Fastener": [[397, null]], "Fastener.ToString": [[398, null]], "Fastener.add_feature": [[399, null]], "Fastener.compute_aabb": [[400, null]], "Fastener.compute_collision_mesh": [[401, null]], "Fastener.compute_geometry": [[402, null]], "Fastener.compute_obb": [[403, null]], "Fastener.compute_worldtransformation": [[404, null]], "Fastener.copy": [[405, null]], "Fastener.from_json": [[406, null]], "Fastener.from_jsonstring": [[407, null]], "Fastener.remove_blank_extension": [[408, null]], "Fastener.remove_features": [[409, null]], "Fastener.reset": [[410, null]], "Fastener.sha256": [[411, null]], "Fastener.to_json": [[412, null]], "Fastener.to_jsonstring": [[413, null]], "Fastener.transform": [[414, null]], "Fastener.transformed": [[415, null]], "Fastener.validate_data": [[416, null]], "FastenerApplicationError": [[493, null]], "FastenerTimberInterface": [[417, null]], "FastenerTimberInterface.ToString": [[418, null]], "FastenerTimberInterface.copy": [[419, null]], "FastenerTimberInterface.from_json": [[420, null]], "FastenerTimberInterface.from_jsonstring": [[421, null]], "FastenerTimberInterface.get_features": [[422, null]], "FastenerTimberInterface.sha256": [[423, null]], "FastenerTimberInterface.to_json": [[424, null]], "FastenerTimberInterface.to_jsonstring": [[425, null]], "FastenerTimberInterface.validate_data": [[426, null]], "FeatureApplicationError": [[494, null]], "FeatureDefinition": [[329, null]], "FeatureDefinition.ToString": [[330, null]], "Features": [[822, null]], "FindBeamByRhinoGuid": [[818, "findbeambyrhinoguid"]], "French Ridge Lap": [[823, "french-ridge-lap"]], "FrenchRidgeLap": [[572, null]], "FrenchRidgeLap.ToString": [[573, null]], "FrenchRidgeLap.add_subprocessing": [[574, null]], "FrenchRidgeLap.apply": [[575, null]], "FrenchRidgeLap.copy": [[576, null]], "FrenchRidgeLap.frame_from_params_and_beam": [[577, null]], "FrenchRidgeLap.from_beam_beam_and_plane": [[578, null]], "FrenchRidgeLap.from_json": [[579, null]], "FrenchRidgeLap.from_jsonstring": [[580, null]], "FrenchRidgeLap.lap_volume_from_params_and_beam": [[581, null]], "FrenchRidgeLap.sha256": [[582, null]], "FrenchRidgeLap.to_json": [[583, null]], "FrenchRidgeLap.to_jsonstring": [[584, null]], "FrenchRidgeLap.validate_data": [[585, null]], "Functions": [[1, "functions"], [2, "functions"], [6, "functions"]], "Grasshopper plugin": [[815, null]], "Indices and tables": [[812, "indices-and-tables"]], "Install with conda": [[813, "install-with-conda"]], "Installation": [[813, null]], "Instruction": [[757, null]], "Instruction.ToString": [[758, null]], "Instruction.copy": [[759, null]], "Instruction.from_json": [[760, null]], "Instruction.from_jsonstring": [[761, null]], "Instruction.sha256": [[762, null]], "Instruction.to_json": [[763, null]], "Instruction.to_jsonstring": [[764, null]], "Instruction.transform": [[765, null]], "Instruction.validate_data": [[766, null]], "Jack Rafter Cut Feature": [[822, "jack-rafter-cut-feature"]], "JackRafterCut": [[586, null]], "JackRafterCut.ToString": [[587, null]], "JackRafterCut.add_subprocessing": [[588, null]], "JackRafterCut.apply": [[589, null]], "JackRafterCut.copy": [[590, null]], "JackRafterCut.from_json": [[591, null]], "JackRafterCut.from_jsonstring": [[592, null]], "JackRafterCut.from_plane_and_beam": [[593, null]], "JackRafterCut.from_shapes_and_element": [[594, null]], "JackRafterCut.plane_from_params_and_beam": [[595, null]], "JackRafterCut.sha256": [[596, null]], "JackRafterCut.to_json": [[597, null]], "JackRafterCut.to_jsonstring": [[598, null]], "JackRafterCut.validate_data": [[599, null]], "Joint": [[31, null]], "Joint Rules": [[823, null]], "Joint Rules Components": [[823, "joint-rules-components"]], "Joint Types": [[823, "joint-types"]], "Joint.ToString": [[32, null]], "Joint.add_extensions": [[33, null]], "Joint.add_features": [[34, null]], "Joint.check_elements_compatibility": [[35, null]], "Joint.copy": [[36, null]], "Joint.create": [[37, null]], "Joint.element_count_complies": [[38, null]], "Joint.from_json": [[39, null]], "Joint.from_jsonstring": [[40, null]], "Joint.get_face_most_ortho_to_beam": [[41, null]], "Joint.get_face_most_towards_beam": [[42, null]], "Joint.restore_beams_from_keys": [[43, null]], "Joint.sha256": [[44, null]], "Joint.to_json": [[45, null]], "Joint.to_jsonstring": [[46, null]], "Joint.validate_data": [[47, null]], "JointDefinition": [[331, null]], "JointDefinition.ToString": [[332, null]], "JointDefinition.is_identical": [[333, null]], "JointDefinition.match": [[334, null]], "JointRule": [[335, null]], "JointRule.comply": [[336, null]], "JointRule.get_category_rules": [[337, null]], "JointRule.get_direct_rules": [[338, null]], "JointRule.get_topology_rules": [[339, null]], "JointRule.joints_from_beams_and_rules": [[340, null]], "JointTopology": [[48, null]], "JointTopology.get_name": [[49, null]], "L-Butt": [[823, "l-butt"]], "L-Lap": [[823, "l-lap"]], "L-Miter": [[823, "l-miter"]], "LButtJoint": [[50, null]], "LButtJoint.ToString": [[51, null]], "LButtJoint.add_extensions": [[52, null]], "LButtJoint.add_features": [[53, null]], "LButtJoint.check_elements_compatibility": [[54, null]], "LButtJoint.copy": [[55, null]], "LButtJoint.create": [[56, null]], "LButtJoint.element_count_complies": [[57, null]], "LButtJoint.from_json": [[58, null]], "LButtJoint.from_jsonstring": [[59, null]], "LButtJoint.get_face_most_ortho_to_beam": [[60, null]], "LButtJoint.get_face_most_towards_beam": [[61, null]], "LButtJoint.restore_beams_from_keys": [[62, null]], "LButtJoint.sha256": [[63, null]], "LButtJoint.to_json": [[64, null]], "LButtJoint.to_jsonstring": [[65, null]], "LButtJoint.update_beam_roles": [[66, null]], "LButtJoint.validate_data": [[67, null]], "LFrenchRidgeLapJoint": [[68, null]], "LFrenchRidgeLapJoint.ToString": [[69, null]], "LFrenchRidgeLapJoint.add_extensions": [[70, null]], "LFrenchRidgeLapJoint.add_features": [[71, null]], "LFrenchRidgeLapJoint.check_elements_compatibility": [[72, null]], "LFrenchRidgeLapJoint.copy": [[73, null]], "LFrenchRidgeLapJoint.create": [[74, null]], "LFrenchRidgeLapJoint.element_count_complies": [[75, null]], "LFrenchRidgeLapJoint.from_json": [[76, null]], "LFrenchRidgeLapJoint.from_jsonstring": [[77, null]], "LFrenchRidgeLapJoint.get_cross_cutting_frame": [[78, null]], "LFrenchRidgeLapJoint.get_face_most_ortho_to_beam": [[79, null]], "LFrenchRidgeLapJoint.get_face_most_towards_beam": [[80, null]], "LFrenchRidgeLapJoint.get_main_cutting_frame": [[81, null]], "LFrenchRidgeLapJoint.restore_beams_from_keys": [[82, null]], "LFrenchRidgeLapJoint.sha256": [[83, null]], "LFrenchRidgeLapJoint.to_json": [[84, null]], "LFrenchRidgeLapJoint.to_jsonstring": [[85, null]], "LFrenchRidgeLapJoint.validate_data": [[86, null]], "LLapJoint": [[87, null]], "LLapJoint.ToString": [[88, null]], "LLapJoint.add_extensions": [[89, null]], "LLapJoint.add_features": [[90, null]], "LLapJoint.check_elements_compatibility": [[91, null]], "LLapJoint.copy": [[92, null]], "LLapJoint.create": [[93, null]], "LLapJoint.element_count_complies": [[94, null]], "LLapJoint.from_json": [[95, null]], "LLapJoint.from_jsonstring": [[96, null]], "LLapJoint.get_cross_cutting_frame": [[97, null]], "LLapJoint.get_face_most_ortho_to_beam": [[98, null]], "LLapJoint.get_face_most_towards_beam": [[99, null]], "LLapJoint.get_main_cutting_frame": [[100, null]], "LLapJoint.restore_beams_from_keys": [[101, null]], "LLapJoint.sha256": [[102, null]], "LLapJoint.to_json": [[103, null]], "LLapJoint.to_jsonstring": [[104, null]], "LLapJoint.validate_data": [[105, null]], "LMiterJoint": [[106, null]], "LMiterJoint.ToString": [[107, null]], "LMiterJoint.add_extensions": [[108, null]], "LMiterJoint.add_features": [[109, null]], "LMiterJoint.check_elements_compatibility": [[110, null]], "LMiterJoint.copy": [[111, null]], "LMiterJoint.create": [[112, null]], "LMiterJoint.element_count_complies": [[113, null]], "LMiterJoint.from_json": [[114, null]], "LMiterJoint.from_jsonstring": [[115, null]], "LMiterJoint.get_cutting_planes": [[116, null]], "LMiterJoint.get_face_most_ortho_to_beam": [[117, null]], "LMiterJoint.get_face_most_towards_beam": [[118, null]], "LMiterJoint.restore_beams_from_keys": [[119, null]], "LMiterJoint.sha256": [[120, null]], "LMiterJoint.to_json": [[121, null]], "LMiterJoint.to_jsonstring": [[122, null]], "LMiterJoint.validate_data": [[123, null]], "Lap": [[600, null]], "Lap.ToString": [[601, null]], "Lap.add_subprocessing": [[602, null]], "Lap.apply": [[603, null]], "Lap.copy": [[604, null]], "Lap.from_json": [[605, null]], "Lap.from_jsonstring": [[606, null]], "Lap.from_plane_and_beam": [[607, null]], "Lap.planes_from_params_and_beam": [[608, null]], "Lap.sha256": [[609, null]], "Lap.to_json": [[610, null]], "Lap.to_jsonstring": [[611, null]], "Lap.validate_data": [[612, null]], "Lap.volume_from_params_and_beam": [[613, null]], "LapJoint": [[124, null]], "LapJoint.ToString": [[125, null]], "LapJoint.add_extensions": [[126, null]], "LapJoint.add_features": [[127, null]], "LapJoint.check_elements_compatibility": [[128, null]], "LapJoint.copy": [[129, null]], "LapJoint.create": [[130, null]], "LapJoint.element_count_complies": [[131, null]], "LapJoint.from_json": [[132, null]], "LapJoint.from_jsonstring": [[133, null]], "LapJoint.get_cross_cutting_frame": [[134, null]], "LapJoint.get_face_most_ortho_to_beam": [[135, null]], "LapJoint.get_face_most_towards_beam": [[136, null]], "LapJoint.get_main_cutting_frame": [[137, null]], "LapJoint.restore_beams_from_keys": [[138, null]], "LapJoint.sha256": [[139, null]], "LapJoint.to_json": [[140, null]], "LapJoint.to_jsonstring": [[141, null]], "LapJoint.validate_data": [[142, null]], "License": [[814, null]], "LimitationTopType": [[614, null]], "LinearDimension": [[767, null]], "LinearDimension.ToString": [[768, null]], "LinearDimension.copy": [[769, null]], "LinearDimension.from_json": [[770, null]], "LinearDimension.from_jsonstring": [[771, null]], "LinearDimension.sha256": [[772, null]], "LinearDimension.to_json": [[773, null]], "LinearDimension.to_jsonstring": [[774, null]], "LinearDimension.transform": [[775, null]], "LinearDimension.validate_data": [[776, null]], "MachiningLimits": [[615, null]], "Model": [[824, null]], "Model3d": [[777, null]], "Model3d.ToString": [[778, null]], "Model3d.copy": [[779, null]], "Model3d.from_json": [[780, null]], "Model3d.from_jsonstring": [[781, null]], "Model3d.sha256": [[782, null]], "Model3d.to_json": [[783, null]], "Model3d.to_jsonstring": [[784, null]], "Model3d.transform": [[785, null]], "Model3d.validate_data": [[786, null]], "Mortise": [[616, null]], "Mortise.ToString": [[617, null]], "Mortise.add_subprocessing": [[618, null]], "Mortise.apply": [[619, null]], "Mortise.copy": [[620, null]], "Mortise.frame_from_params_and_beam": [[621, null]], "Mortise.from_frame_and_beam": [[622, null]], "Mortise.from_json": [[623, null]], "Mortise.from_jsonstring": [[624, null]], "Mortise.sha256": [[625, null]], "Mortise.to_json": [[626, null]], "Mortise.to_jsonstring": [[627, null]], "Mortise.validate_data": [[628, null]], "Mortise.volume_from_params_and_beam": [[629, null]], "NullJoint": [[143, null]], "NullJoint.ToString": [[144, null]], "NullJoint.add_extensions": [[145, null]], "NullJoint.add_features": [[146, null]], "NullJoint.check_elements_compatibility": [[147, null]], "NullJoint.copy": [[148, null]], "NullJoint.create": [[149, null]], "NullJoint.element_count_complies": [[150, null]], "NullJoint.from_json": [[151, null]], "NullJoint.from_jsonstring": [[152, null]], "NullJoint.get_face_most_ortho_to_beam": [[153, null]], "NullJoint.get_face_most_towards_beam": [[154, null]], "NullJoint.restore_beams_from_keys": [[155, null]], "NullJoint.sha256": [[156, null]], "NullJoint.to_json": [[157, null]], "NullJoint.to_jsonstring": [[158, null]], "NullJoint.validate_data": [[159, null]], "OrientationType": [[630, null]], "Packages": [[0, "packages"]], "Plate": [[427, null]], "Plate.ToString": [[428, null]], "Plate.add_feature": [[429, null]], "Plate.add_features": [[430, null]], "Plate.compute_aabb": [[431, null]], "Plate.compute_collision_mesh": [[432, null]], "Plate.compute_geometry": [[433, null]], "Plate.compute_obb": [[434, null]], "Plate.compute_worldtransformation": [[435, null]], "Plate.copy": [[436, null]], "Plate.from_json": [[437, null]], "Plate.from_jsonstring": [[438, null]], "Plate.remove_blank_extension": [[439, null]], "Plate.remove_features": [[440, null]], "Plate.reset": [[441, null]], "Plate.set_frame_and_outline": [[442, null]], "Plate.sha256": [[443, null]], "Plate.to_json": [[444, null]], "Plate.to_jsonstring": [[445, null]], "Plate.transform": [[446, null]], "Plate.transformed": [[447, null]], "Plate.validate_data": [[448, null]], "Plugins": [[9, "plugins"]], "Show": [[825, null]], "Show Beam Face Index": [[825, "show-beam-face-index"]], "Show Beam Index": [[825, "show-beam-index"]], "Show Feature Errors": [[825, "show-feature-errors"]], "Show Joining Errors": [[825, "show-joining-errors"]], "Show Joint Types": [[825, "show-joint-types"]], "Show Surface Model Beam Types": [[825, "show-surface-model-beam-types"]], "Show Topology Types": [[825, "show-topology-types"]], "SimpleSequenceGenerator": [[787, null]], "Slot": [[631, null]], "Slot.ToString": [[632, null]], "Slot.add_subprocessing": [[633, null]], "Slot.apply": [[634, null]], "Slot.copy": [[635, null]], "Slot.from_json": [[636, null]], "Slot.from_jsonstring": [[637, null]], "Slot.from_plane_and_beam": [[638, null]], "Slot.sha256": [[639, null]], "Slot.to_json": [[640, null]], "Slot.to_jsonstring": [[641, null]], "Slot.validate_data": [[642, null]], "Stable": [[813, "stable"]], "Standard Attributes": [[817, "standard-attributes"]], "Step": [[788, null]], "Step.ToString": [[789, null]], "Step.copy": [[790, null]], "Step.from_json": [[791, null]], "Step.from_jsonstring": [[792, null]], "Step.sha256": [[793, null]], "Step.to_json": [[794, null]], "Step.to_jsonstring": [[795, null]], "Step.transform": [[796, null]], "Step.validate_data": [[797, null]], "StepJoint": [[643, null]], "StepJoint.ToString": [[644, null]], "StepJoint.add_subprocessing": [[645, null]], "StepJoint.add_tenon": [[646, null]], "StepJoint.apply": [[647, null]], "StepJoint.copy": [[648, null]], "StepJoint.from_json": [[649, null]], "StepJoint.from_jsonstring": [[650, null]], "StepJoint.from_plane_and_beam": [[651, null]], "StepJoint.planes_from_params_and_beam": [[652, null]], "StepJoint.sha256": [[653, null]], "StepJoint.tenon_volume_from_params_and_beam": [[654, null]], "StepJoint.to_json": [[655, null]], "StepJoint.to_jsonstring": [[656, null]], "StepJoint.validate_data": [[657, null]], "StepJointNotch": [[658, null]], "StepJointNotch.ToString": [[659, null]], "StepJointNotch.add_mortise": [[660, null]], "StepJointNotch.add_subprocessing": [[661, null]], "StepJointNotch.apply": [[662, null]], "StepJointNotch.copy": [[663, null]], "StepJointNotch.from_json": [[664, null]], "StepJointNotch.from_jsonstring": [[665, null]], "StepJointNotch.from_plane_and_beam": [[666, null]], "StepJointNotch.mortise_volume_from_params_and_beam": [[667, null]], "StepJointNotch.planes_from_params_and_beam": [[668, null]], "StepJointNotch.sha256": [[669, null]], "StepJointNotch.to_json": [[670, null]], "StepJointNotch.to_jsonstring": [[671, null]], "StepJointNotch.validate_data": [[672, null]], "StepShapeType": [[673, null]], "Summary Table": [[823, "summary-table"]], "Surface Model": [[819, "surface-model"]], "Surface Model Joint Override": [[823, "surface-model-joint-override"]], "Surface Model Options": [[819, "surface-model-options"]], "SurfaceModel": [[341, null]], "SurfaceModel.beam_category_names": [[342, null]], "SurfaceModel.create_model": [[343, null]], "SurfaceModel.cull_overlaps": [[344, null]], "SurfaceModel.distance_between_elements": [[345, null]], "SurfaceModel.generate_frame": [[346, null]], "SurfaceModel.generate_perimeter_beams": [[347, null]], "SurfaceModel.generate_plates": [[348, null]], "SurfaceModel.generate_stud_lines": [[349, null]], "SurfaceModel.generate_studs": [[350, null]], "SurfaceModel.generate_windows": [[351, null]], "SurfaceModel.get_beam_intersections": [[352, null]], "SurfaceModel.get_interior_segment_indices": [[353, null]], "SurfaceModel.offset_elements": [[354, null]], "SurfaceModel.parse_loops": [[355, null]], "SurfaceModel.trim_jack_studs": [[356, null]], "SurfaceModel.trim_king_studs": [[357, null]], "SurfaceModel.trim_studs": [[358, null]], "T-Birdsmouth": [[823, "t-birdsmouth"]], "T-Butt": [[823, "t-butt"]], "T-Dovetail": [[823, "t-dovetail"]], "T-Lap": [[823, "t-lap"]], "T-Step": [[823, "t-step"]], "TBirdsmouthJoint": [[160, null]], "TBirdsmouthJoint.ToString": [[161, null]], "TBirdsmouthJoint.add_extensions": [[162, null]], "TBirdsmouthJoint.add_features": [[163, null]], "TBirdsmouthJoint.check_elements_compatibility": [[164, null]], "TBirdsmouthJoint.copy": [[165, null]], "TBirdsmouthJoint.create": [[166, null]], "TBirdsmouthJoint.element_count_complies": [[167, null]], "TBirdsmouthJoint.from_json": [[168, null]], "TBirdsmouthJoint.from_jsonstring": [[169, null]], "TBirdsmouthJoint.get_face_most_ortho_to_beam": [[170, null]], "TBirdsmouthJoint.get_face_most_towards_beam": [[171, null]], "TBirdsmouthJoint.restore_beams_from_keys": [[172, null]], "TBirdsmouthJoint.sha256": [[173, null]], "TBirdsmouthJoint.to_json": [[174, null]], "TBirdsmouthJoint.to_jsonstring": [[175, null]], "TBirdsmouthJoint.validate_data": [[176, null]], "TButtJoint": [[177, null]], "TButtJoint.ToString": [[178, null]], "TButtJoint.add_extensions": [[179, null]], "TButtJoint.add_features": [[180, null]], "TButtJoint.check_elements_compatibility": [[181, null]], "TButtJoint.copy": [[182, null]], "TButtJoint.create": [[183, null]], "TButtJoint.element_count_complies": [[184, null]], "TButtJoint.from_json": [[185, null]], "TButtJoint.from_jsonstring": [[186, null]], "TButtJoint.get_face_most_ortho_to_beam": [[187, null]], "TButtJoint.get_face_most_towards_beam": [[188, null]], "TButtJoint.restore_beams_from_keys": [[189, null]], "TButtJoint.sha256": [[190, null]], "TButtJoint.to_json": [[191, null]], "TButtJoint.to_jsonstring": [[192, null]], "TButtJoint.validate_data": [[193, null]], "TDovetailJoint": [[194, null]], "TDovetailJoint.ToString": [[195, null]], "TDovetailJoint.add_extensions": [[196, null]], "TDovetailJoint.add_features": [[197, null]], "TDovetailJoint.check_elements_compatibility": [[198, null]], "TDovetailJoint.copy": [[199, null]], "TDovetailJoint.create": [[200, null]], "TDovetailJoint.define_dovetail_tool": [[201, null]], "TDovetailJoint.element_count_complies": [[202, null]], "TDovetailJoint.from_json": [[203, null]], "TDovetailJoint.from_jsonstring": [[204, null]], "TDovetailJoint.get_face_most_ortho_to_beam": [[205, null]], "TDovetailJoint.get_face_most_towards_beam": [[206, null]], "TDovetailJoint.restore_beams_from_keys": [[207, null]], "TDovetailJoint.sha256": [[208, null]], "TDovetailJoint.to_json": [[209, null]], "TDovetailJoint.to_jsonstring": [[210, null]], "TDovetailJoint.validate_data": [[211, null]], "TLapJoint": [[212, null]], "TLapJoint.ToString": [[213, null]], "TLapJoint.add_extensions": [[214, null]], "TLapJoint.add_features": [[215, null]], "TLapJoint.check_elements_compatibility": [[216, null]], "TLapJoint.copy": [[217, null]], "TLapJoint.create": [[218, null]], "TLapJoint.element_count_complies": [[219, null]], "TLapJoint.from_json": [[220, null]], "TLapJoint.from_jsonstring": [[221, null]], "TLapJoint.get_cross_cutting_frame": [[222, null]], "TLapJoint.get_face_most_ortho_to_beam": [[223, null]], "TLapJoint.get_face_most_towards_beam": [[224, null]], "TLapJoint.get_main_cutting_frame": [[225, null]], "TLapJoint.restore_beams_from_keys": [[226, null]], "TLapJoint.sha256": [[227, null]], "TLapJoint.to_json": [[228, null]], "TLapJoint.to_jsonstring": [[229, null]], "TLapJoint.validate_data": [[230, null]], "TStepJoint": [[231, null]], "TStepJoint.ToString": [[232, null]], "TStepJoint.add_extensions": [[233, null]], "TStepJoint.add_features": [[234, null]], "TStepJoint.check_elements_compatibility": [[235, null]], "TStepJoint.copy": [[236, null]], "TStepJoint.create": [[237, null]], "TStepJoint.element_count_complies": [[238, null]], "TStepJoint.from_json": [[239, null]], "TStepJoint.from_jsonstring": [[240, null]], "TStepJoint.get_face_most_ortho_to_beam": [[241, null]], "TStepJoint.get_face_most_towards_beam": [[242, null]], "TStepJoint.restore_beams_from_keys": [[243, null]], "TStepJoint.set_step_depths": [[244, null]], "TStepJoint.sha256": [[245, null]], "TStepJoint.to_json": [[246, null]], "TStepJoint.to_jsonstring": [[247, null]], "TStepJoint.validate_data": [[248, null]], "Table of Contents": [[812, "table-of-contents"]], "Tenon": [[674, null]], "Tenon and Mortise": [[823, "tenon-and-mortise"], [823, "id1"]], "Tenon.ToString": [[675, null]], "Tenon.add_subprocessing": [[676, null]], "Tenon.apply": [[677, null]], "Tenon.copy": [[678, null]], "Tenon.frame_from_params_and_beam": [[679, null]], "Tenon.from_json": [[680, null]], "Tenon.from_jsonstring": [[681, null]], "Tenon.from_plane_and_beam": [[682, null]], "Tenon.sha256": [[683, null]], "Tenon.to_json": [[684, null]], "Tenon.to_jsonstring": [[685, null]], "Tenon.validate_data": [[686, null]], "Tenon.volume_from_params_and_beam": [[687, null]], "TenonMortiseJoint": [[249, null]], "TenonMortiseJoint.ToString": [[250, null]], "TenonMortiseJoint.add_extensions": [[251, null]], "TenonMortiseJoint.add_features": [[252, null]], "TenonMortiseJoint.check_elements_compatibility": [[253, null]], "TenonMortiseJoint.copy": [[254, null]], "TenonMortiseJoint.create": [[255, null]], "TenonMortiseJoint.element_count_complies": [[256, null]], "TenonMortiseJoint.from_json": [[257, null]], "TenonMortiseJoint.from_jsonstring": [[258, null]], "TenonMortiseJoint.get_face_most_ortho_to_beam": [[259, null]], "TenonMortiseJoint.get_face_most_towards_beam": [[260, null]], "TenonMortiseJoint.restore_beams_from_keys": [[261, null]], "TenonMortiseJoint.set_default_values": [[262, null]], "TenonMortiseJoint.sha256": [[263, null]], "TenonMortiseJoint.to_json": [[264, null]], "TenonMortiseJoint.to_jsonstring": [[265, null]], "TenonMortiseJoint.validate_data": [[266, null]], "TenonShapeType": [[688, null]], "Text3d": [[798, null]], "Text3d.ToString": [[799, null]], "Text3d.copy": [[800, null]], "Text3d.from_json": [[801, null]], "Text3d.from_jsonstring": [[802, null]], "Text3d.sha256": [[803, null]], "Text3d.to_json": [[804, null]], "Text3d.to_jsonstring": [[805, null]], "Text3d.transform": [[806, null]], "Text3d.validate_data": [[807, null]], "Timber Assembly Examples": [[810, "timber-assembly-examples"]], "TimberElement": [[449, null]], "TimberElement.ToString": [[450, null]], "TimberElement.add_feature": [[451, null]], "TimberElement.compute_aabb": [[452, null]], "TimberElement.compute_collision_mesh": [[453, null]], "TimberElement.compute_geometry": [[454, null]], "TimberElement.compute_obb": [[455, null]], "TimberElement.compute_worldtransformation": [[456, null]], "TimberElement.copy": [[457, null]], "TimberElement.from_json": [[458, null]], "TimberElement.from_jsonstring": [[459, null]], "TimberElement.remove_blank_extension": [[460, null]], "TimberElement.remove_features": [[461, null]], "TimberElement.reset": [[462, null]], "TimberElement.sha256": [[463, null]], "TimberElement.to_json": [[464, null]], "TimberElement.to_jsonstring": [[465, null]], "TimberElement.transform": [[466, null]], "TimberElement.transformed": [[467, null]], "TimberElement.validate_data": [[468, null]], "TimberModel": [[696, null]], "TimberModel.ToString": [[697, null]], "TimberModel.add_element": [[698, null]], "TimberModel.add_elements": [[699, null]], "TimberModel.add_group": [[700, null]], "TimberModel.add_group_element": [[701, null]], "TimberModel.add_interaction": [[702, null]], "TimberModel.add_joint": [[703, null]], "TimberModel.add_material": [[704, null]], "TimberModel.assign_material": [[705, null]], "TimberModel.compute_aabb": [[706, null]], "TimberModel.compute_obb": [[707, null]], "TimberModel.connect_adjacent_walls": [[708, null]], "TimberModel.copy": [[709, null]], "TimberModel.element_by_guid": [[710, null]], "TimberModel.elements": [[711, null]], "TimberModel.elements_connected_by": [[712, null]], "TimberModel.from_json": [[713, null]], "TimberModel.from_jsonstring": [[714, null]], "TimberModel.get_elements_in_group": [[715, null]], "TimberModel.get_interactions_for_element": [[716, null]], "TimberModel.has_element": [[717, null]], "TimberModel.has_group": [[718, null]], "TimberModel.has_interaction": [[719, null]], "TimberModel.has_material": [[720, null]], "TimberModel.interactions": [[721, null]], "TimberModel.materials": [[722, null]], "TimberModel.process_joinery": [[723, null]], "TimberModel.remove_element": [[724, null]], "TimberModel.remove_interaction": [[725, null]], "TimberModel.remove_joint": [[726, null]], "TimberModel.rotate": [[727, null]], "TimberModel.rotated": [[728, null]], "TimberModel.scale": [[729, null]], "TimberModel.scaled": [[730, null]], "TimberModel.set_topologies": [[731, null]], "TimberModel.sha256": [[732, null]], "TimberModel.to_json": [[733, null]], "TimberModel.to_jsonstring": [[734, null]], "TimberModel.transform": [[735, null]], "TimberModel.transform_numpy": [[736, null]], "TimberModel.transformed": [[737, null]], "TimberModel.transformed_numpy": [[738, null]], "TimberModel.translate": [[739, null]], "TimberModel.translated": [[740, null]], "TimberModel.validate_data": [[741, null]], "Topological Joint Rules": [[823, "topological-joint-rules"]], "TopologyRule": [[359, null]], "TopologyRule.ToString": [[360, null]], "TopologyRule.comply": [[361, null]], "TopologyRule.get_category_rules": [[362, null]], "TopologyRule.get_direct_rules": [[363, null]], "TopologyRule.get_topology_rules": [[364, null]], "TopologyRule.joints_from_beams_and_rules": [[365, null]], "Utils": [[826, null]], "Wall": [[469, null]], "Wall.ToString": [[470, null]], "Wall.add_feature": [[471, null]], "Wall.compute_aabb": [[472, null]], "Wall.compute_collision_mesh": [[473, null]], "Wall.compute_geometry": [[474, null]], "Wall.compute_obb": [[475, null]], "Wall.compute_worldtransformation": [[476, null]], "Wall.copy": [[477, null]], "Wall.from_boundary": [[478, null]], "Wall.from_brep": [[479, null]], "Wall.from_json": [[480, null]], "Wall.from_jsonstring": [[481, null]], "Wall.remove_blank_extension": [[482, null]], "Wall.remove_features": [[483, null]], "Wall.reset": [[484, null]], "Wall.rotate": [[485, null]], "Wall.sha256": [[486, null]], "Wall.to_json": [[487, null]], "Wall.to_jsonstring": [[488, null]], "Wall.transform": [[489, null]], "Wall.transformed": [[490, null]], "Wall.validate_data": [[491, null]], "Workflow": [[827, null]], "Write BTLx": [[821, "write-btlx"]], "X-Lap": [[823, "x-lap"]], "XLapJoint": [[267, null]], "XLapJoint.ToString": [[268, null]], "XLapJoint.add_extensions": [[269, null]], "XLapJoint.add_features": [[270, null]], "XLapJoint.check_elements_compatibility": [[271, null]], "XLapJoint.copy": [[272, null]], "XLapJoint.create": [[273, null]], "XLapJoint.element_count_complies": [[274, null]], "XLapJoint.from_json": [[275, null]], "XLapJoint.from_jsonstring": [[276, null]], "XLapJoint.get_cross_cutting_frame": [[277, null]], "XLapJoint.get_face_most_ortho_to_beam": [[278, null]], "XLapJoint.get_face_most_towards_beam": [[279, null]], "XLapJoint.get_main_cutting_frame": [[280, null]], "XLapJoint.restore_beams_from_keys": [[281, null]], "XLapJoint.sha256": [[282, null]], "XLapJoint.to_json": [[283, null]], "XLapJoint.to_jsonstring": [[284, null]], "XLapJoint.validate_data": [[285, null]], "YButtJoint": [[286, null]], "YButtJoint.ToString": [[287, null]], "YButtJoint.add_extensions": [[288, null]], "YButtJoint.add_features": [[289, null]], "YButtJoint.check_beam_compatibility": [[290, null]], "YButtJoint.check_elements_compatibility": [[291, null]], "YButtJoint.copy": [[292, null]], "YButtJoint.create": [[293, null]], "YButtJoint.cross_beam_ref_side_index": [[294, null]], "YButtJoint.element_count_complies": [[295, null]], "YButtJoint.from_json": [[296, null]], "YButtJoint.from_jsonstring": [[297, null]], "YButtJoint.get_face_most_ortho_to_beam": [[298, null]], "YButtJoint.get_face_most_towards_beam": [[299, null]], "YButtJoint.get_miter_planes": [[300, null]], "YButtJoint.main_beam_ref_side_index": [[301, null]], "YButtJoint.restore_beams_from_keys": [[302, null]], "YButtJoint.sha256": [[303, null]], "YButtJoint.to_json": [[304, null]], "YButtJoint.to_jsonstring": [[305, null]], "YButtJoint.validate_data": [[306, null]], "add_gh_param": [[689, null]], "clear_gh_params": [[690, null]], "compas_timber.connections": [[1, null]], "compas_timber.design": [[2, null]], "compas_timber.elements": [[3, null]], "compas_timber.errors": [[4, null]], "compas_timber.fabrication": [[5, null]], "compas_timber.ghpython": [[6, null]], "compas_timber.model": [[7, null]], "compas_timber.planning": [[8, null]], "compas_timber.rhino": [[9, null]], "find_neighboring_elements": [[307, null], [808, null]], "get_leaf_subclasses": [[691, null]], "guess_joint_topology_2beams": [[366, null]], "item_input_valid": [[692, null]], "list_input_valid": [[693, null]], "manage_dynamic_params": [[694, null]], "rename_gh_input": [[695, null]], "set_default_joints": [[367, null]]}, "docnames": ["api", "api/compas_timber.connections", "api/compas_timber.design", "api/compas_timber.elements", "api/compas_timber.errors", "api/compas_timber.fabrication", "api/compas_timber.ghpython", "api/compas_timber.model", "api/compas_timber.planning", "api/compas_timber.rhino", "api/generated/compas_timber.connections.BallNodeJoint", "api/generated/compas_timber.connections.BallNodeJoint.ToString", "api/generated/compas_timber.connections.BallNodeJoint.add_extensions", "api/generated/compas_timber.connections.BallNodeJoint.add_features", "api/generated/compas_timber.connections.BallNodeJoint.check_elements_compatibility", "api/generated/compas_timber.connections.BallNodeJoint.copy", "api/generated/compas_timber.connections.BallNodeJoint.create", "api/generated/compas_timber.connections.BallNodeJoint.element_count_complies", "api/generated/compas_timber.connections.BallNodeJoint.from_json", "api/generated/compas_timber.connections.BallNodeJoint.from_jsonstring", "api/generated/compas_timber.connections.BallNodeJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.BallNodeJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.BallNodeJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.BallNodeJoint.sha256", "api/generated/compas_timber.connections.BallNodeJoint.to_json", "api/generated/compas_timber.connections.BallNodeJoint.to_jsonstring", "api/generated/compas_timber.connections.BallNodeJoint.validate_data", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.ConnectionSolver.find_wall_wall_topology", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_extensions", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.check_elements_compatibility", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.element_count_complies", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.from_jsonstring", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.to_jsonstring", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_extensions", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.element_count_complies", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring", "api/generated/compas_timber.connections.LButtJoint.update_beam_roles", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.ToString", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.add_extensions", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.add_features", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.copy", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.create", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.element_count_complies", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.from_json", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.from_jsonstring", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.sha256", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.to_json", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.to_jsonstring", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.validate_data", "api/generated/compas_timber.connections.LLapJoint", "api/generated/compas_timber.connections.LLapJoint.ToString", "api/generated/compas_timber.connections.LLapJoint.add_extensions", "api/generated/compas_timber.connections.LLapJoint.add_features", "api/generated/compas_timber.connections.LLapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LLapJoint.copy", "api/generated/compas_timber.connections.LLapJoint.create", "api/generated/compas_timber.connections.LLapJoint.element_count_complies", "api/generated/compas_timber.connections.LLapJoint.from_json", "api/generated/compas_timber.connections.LLapJoint.from_jsonstring", "api/generated/compas_timber.connections.LLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LLapJoint.sha256", "api/generated/compas_timber.connections.LLapJoint.to_json", "api/generated/compas_timber.connections.LLapJoint.to_jsonstring", "api/generated/compas_timber.connections.LLapJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_extensions", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.element_count_complies", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.LapJoint", "api/generated/compas_timber.connections.LapJoint.ToString", "api/generated/compas_timber.connections.LapJoint.add_extensions", "api/generated/compas_timber.connections.LapJoint.add_features", "api/generated/compas_timber.connections.LapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LapJoint.copy", "api/generated/compas_timber.connections.LapJoint.create", "api/generated/compas_timber.connections.LapJoint.element_count_complies", "api/generated/compas_timber.connections.LapJoint.from_json", "api/generated/compas_timber.connections.LapJoint.from_jsonstring", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LapJoint.sha256", "api/generated/compas_timber.connections.LapJoint.to_json", "api/generated/compas_timber.connections.LapJoint.to_jsonstring", "api/generated/compas_timber.connections.LapJoint.validate_data", "api/generated/compas_timber.connections.NullJoint", "api/generated/compas_timber.connections.NullJoint.ToString", "api/generated/compas_timber.connections.NullJoint.add_extensions", "api/generated/compas_timber.connections.NullJoint.add_features", "api/generated/compas_timber.connections.NullJoint.check_elements_compatibility", "api/generated/compas_timber.connections.NullJoint.copy", "api/generated/compas_timber.connections.NullJoint.create", "api/generated/compas_timber.connections.NullJoint.element_count_complies", "api/generated/compas_timber.connections.NullJoint.from_json", "api/generated/compas_timber.connections.NullJoint.from_jsonstring", "api/generated/compas_timber.connections.NullJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.NullJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.NullJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.NullJoint.sha256", "api/generated/compas_timber.connections.NullJoint.to_json", "api/generated/compas_timber.connections.NullJoint.to_jsonstring", "api/generated/compas_timber.connections.NullJoint.validate_data", "api/generated/compas_timber.connections.TBirdsmouthJoint", "api/generated/compas_timber.connections.TBirdsmouthJoint.ToString", "api/generated/compas_timber.connections.TBirdsmouthJoint.add_extensions", "api/generated/compas_timber.connections.TBirdsmouthJoint.add_features", "api/generated/compas_timber.connections.TBirdsmouthJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TBirdsmouthJoint.copy", "api/generated/compas_timber.connections.TBirdsmouthJoint.create", "api/generated/compas_timber.connections.TBirdsmouthJoint.element_count_complies", "api/generated/compas_timber.connections.TBirdsmouthJoint.from_json", "api/generated/compas_timber.connections.TBirdsmouthJoint.from_jsonstring", "api/generated/compas_timber.connections.TBirdsmouthJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TBirdsmouthJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TBirdsmouthJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TBirdsmouthJoint.sha256", "api/generated/compas_timber.connections.TBirdsmouthJoint.to_json", "api/generated/compas_timber.connections.TBirdsmouthJoint.to_jsonstring", "api/generated/compas_timber.connections.TBirdsmouthJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_extensions", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.element_count_complies", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.TDovetailJoint", "api/generated/compas_timber.connections.TDovetailJoint.ToString", "api/generated/compas_timber.connections.TDovetailJoint.add_extensions", "api/generated/compas_timber.connections.TDovetailJoint.add_features", "api/generated/compas_timber.connections.TDovetailJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TDovetailJoint.copy", "api/generated/compas_timber.connections.TDovetailJoint.create", "api/generated/compas_timber.connections.TDovetailJoint.define_dovetail_tool", "api/generated/compas_timber.connections.TDovetailJoint.element_count_complies", "api/generated/compas_timber.connections.TDovetailJoint.from_json", "api/generated/compas_timber.connections.TDovetailJoint.from_jsonstring", "api/generated/compas_timber.connections.TDovetailJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TDovetailJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TDovetailJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TDovetailJoint.sha256", "api/generated/compas_timber.connections.TDovetailJoint.to_json", "api/generated/compas_timber.connections.TDovetailJoint.to_jsonstring", "api/generated/compas_timber.connections.TDovetailJoint.validate_data", "api/generated/compas_timber.connections.TLapJoint", "api/generated/compas_timber.connections.TLapJoint.ToString", "api/generated/compas_timber.connections.TLapJoint.add_extensions", "api/generated/compas_timber.connections.TLapJoint.add_features", "api/generated/compas_timber.connections.TLapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TLapJoint.copy", "api/generated/compas_timber.connections.TLapJoint.create", "api/generated/compas_timber.connections.TLapJoint.element_count_complies", "api/generated/compas_timber.connections.TLapJoint.from_json", "api/generated/compas_timber.connections.TLapJoint.from_jsonstring", "api/generated/compas_timber.connections.TLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.TLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.TLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TLapJoint.sha256", "api/generated/compas_timber.connections.TLapJoint.to_json", "api/generated/compas_timber.connections.TLapJoint.to_jsonstring", "api/generated/compas_timber.connections.TLapJoint.validate_data", "api/generated/compas_timber.connections.TStepJoint", "api/generated/compas_timber.connections.TStepJoint.ToString", "api/generated/compas_timber.connections.TStepJoint.add_extensions", "api/generated/compas_timber.connections.TStepJoint.add_features", "api/generated/compas_timber.connections.TStepJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TStepJoint.copy", "api/generated/compas_timber.connections.TStepJoint.create", "api/generated/compas_timber.connections.TStepJoint.element_count_complies", "api/generated/compas_timber.connections.TStepJoint.from_json", "api/generated/compas_timber.connections.TStepJoint.from_jsonstring", "api/generated/compas_timber.connections.TStepJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TStepJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TStepJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TStepJoint.set_step_depths", "api/generated/compas_timber.connections.TStepJoint.sha256", "api/generated/compas_timber.connections.TStepJoint.to_json", "api/generated/compas_timber.connections.TStepJoint.to_jsonstring", "api/generated/compas_timber.connections.TStepJoint.validate_data", "api/generated/compas_timber.connections.TenonMortiseJoint", "api/generated/compas_timber.connections.TenonMortiseJoint.ToString", "api/generated/compas_timber.connections.TenonMortiseJoint.add_extensions", "api/generated/compas_timber.connections.TenonMortiseJoint.add_features", "api/generated/compas_timber.connections.TenonMortiseJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TenonMortiseJoint.copy", "api/generated/compas_timber.connections.TenonMortiseJoint.create", "api/generated/compas_timber.connections.TenonMortiseJoint.element_count_complies", "api/generated/compas_timber.connections.TenonMortiseJoint.from_json", "api/generated/compas_timber.connections.TenonMortiseJoint.from_jsonstring", "api/generated/compas_timber.connections.TenonMortiseJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TenonMortiseJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TenonMortiseJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TenonMortiseJoint.set_default_values", "api/generated/compas_timber.connections.TenonMortiseJoint.sha256", "api/generated/compas_timber.connections.TenonMortiseJoint.to_json", "api/generated/compas_timber.connections.TenonMortiseJoint.to_jsonstring", "api/generated/compas_timber.connections.TenonMortiseJoint.validate_data", "api/generated/compas_timber.connections.XLapJoint", "api/generated/compas_timber.connections.XLapJoint.ToString", "api/generated/compas_timber.connections.XLapJoint.add_extensions", "api/generated/compas_timber.connections.XLapJoint.add_features", "api/generated/compas_timber.connections.XLapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.XLapJoint.copy", "api/generated/compas_timber.connections.XLapJoint.create", "api/generated/compas_timber.connections.XLapJoint.element_count_complies", "api/generated/compas_timber.connections.XLapJoint.from_json", "api/generated/compas_timber.connections.XLapJoint.from_jsonstring", "api/generated/compas_timber.connections.XLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.XLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.XLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.XLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.XLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.XLapJoint.sha256", "api/generated/compas_timber.connections.XLapJoint.to_json", "api/generated/compas_timber.connections.XLapJoint.to_jsonstring", "api/generated/compas_timber.connections.XLapJoint.validate_data", "api/generated/compas_timber.connections.YButtJoint", "api/generated/compas_timber.connections.YButtJoint.ToString", "api/generated/compas_timber.connections.YButtJoint.add_extensions", "api/generated/compas_timber.connections.YButtJoint.add_features", "api/generated/compas_timber.connections.YButtJoint.check_beam_compatibility", "api/generated/compas_timber.connections.YButtJoint.check_elements_compatibility", "api/generated/compas_timber.connections.YButtJoint.copy", "api/generated/compas_timber.connections.YButtJoint.create", "api/generated/compas_timber.connections.YButtJoint.cross_beam_ref_side_index", "api/generated/compas_timber.connections.YButtJoint.element_count_complies", "api/generated/compas_timber.connections.YButtJoint.from_json", "api/generated/compas_timber.connections.YButtJoint.from_jsonstring", "api/generated/compas_timber.connections.YButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.YButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.YButtJoint.get_miter_planes", "api/generated/compas_timber.connections.YButtJoint.main_beam_ref_side_index", "api/generated/compas_timber.connections.YButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.YButtJoint.sha256", "api/generated/compas_timber.connections.YButtJoint.to_json", "api/generated/compas_timber.connections.YButtJoint.to_jsonstring", "api/generated/compas_timber.connections.YButtJoint.validate_data", "api/generated/compas_timber.connections.find_neighboring_elements", "api/generated/compas_timber.design.CategoryRule", "api/generated/compas_timber.design.CategoryRule.ToString", "api/generated/compas_timber.design.CategoryRule.comply", "api/generated/compas_timber.design.CategoryRule.get_category_rules", "api/generated/compas_timber.design.CategoryRule.get_direct_rules", "api/generated/compas_timber.design.CategoryRule.get_topology_rules", "api/generated/compas_timber.design.CategoryRule.joints_from_beams_and_rules", "api/generated/compas_timber.design.CategoryRule.reorder", "api/generated/compas_timber.design.DebugInfomation", "api/generated/compas_timber.design.DebugInfomation.ToString", "api/generated/compas_timber.design.DebugInfomation.add_fastener_error", "api/generated/compas_timber.design.DebugInfomation.add_feature_error", "api/generated/compas_timber.design.DebugInfomation.add_joint_error", "api/generated/compas_timber.design.DirectRule", "api/generated/compas_timber.design.DirectRule.ToString", "api/generated/compas_timber.design.DirectRule.comply", "api/generated/compas_timber.design.DirectRule.contains", "api/generated/compas_timber.design.DirectRule.get_category_rules", "api/generated/compas_timber.design.DirectRule.get_direct_rules", "api/generated/compas_timber.design.DirectRule.get_topology_rules", "api/generated/compas_timber.design.DirectRule.joints_from_beams_and_rules", "api/generated/compas_timber.design.FeatureDefinition", "api/generated/compas_timber.design.FeatureDefinition.ToString", "api/generated/compas_timber.design.JointDefinition", "api/generated/compas_timber.design.JointDefinition.ToString", "api/generated/compas_timber.design.JointDefinition.is_identical", "api/generated/compas_timber.design.JointDefinition.match", "api/generated/compas_timber.design.JointRule", "api/generated/compas_timber.design.JointRule.comply", "api/generated/compas_timber.design.JointRule.get_category_rules", "api/generated/compas_timber.design.JointRule.get_direct_rules", "api/generated/compas_timber.design.JointRule.get_topology_rules", "api/generated/compas_timber.design.JointRule.joints_from_beams_and_rules", "api/generated/compas_timber.design.SurfaceModel", "api/generated/compas_timber.design.SurfaceModel.beam_category_names", "api/generated/compas_timber.design.SurfaceModel.create_model", "api/generated/compas_timber.design.SurfaceModel.cull_overlaps", "api/generated/compas_timber.design.SurfaceModel.distance_between_elements", "api/generated/compas_timber.design.SurfaceModel.generate_frame", "api/generated/compas_timber.design.SurfaceModel.generate_perimeter_beams", "api/generated/compas_timber.design.SurfaceModel.generate_plates", "api/generated/compas_timber.design.SurfaceModel.generate_stud_lines", "api/generated/compas_timber.design.SurfaceModel.generate_studs", "api/generated/compas_timber.design.SurfaceModel.generate_windows", "api/generated/compas_timber.design.SurfaceModel.get_beam_intersections", "api/generated/compas_timber.design.SurfaceModel.get_interior_segment_indices", "api/generated/compas_timber.design.SurfaceModel.offset_elements", "api/generated/compas_timber.design.SurfaceModel.parse_loops", "api/generated/compas_timber.design.SurfaceModel.trim_jack_studs", "api/generated/compas_timber.design.SurfaceModel.trim_king_studs", "api/generated/compas_timber.design.SurfaceModel.trim_studs", "api/generated/compas_timber.design.TopologyRule", "api/generated/compas_timber.design.TopologyRule.ToString", "api/generated/compas_timber.design.TopologyRule.comply", "api/generated/compas_timber.design.TopologyRule.get_category_rules", "api/generated/compas_timber.design.TopologyRule.get_direct_rules", "api/generated/compas_timber.design.TopologyRule.get_topology_rules", "api/generated/compas_timber.design.TopologyRule.joints_from_beams_and_rules", "api/generated/compas_timber.design.guess_joint_topology_2beams", "api/generated/compas_timber.design.set_default_joints", "api/generated/compas_timber.elements.Beam", "api/generated/compas_timber.elements.Beam.ToString", "api/generated/compas_timber.elements.Beam.add_blank_extension", "api/generated/compas_timber.elements.Beam.add_feature", "api/generated/compas_timber.elements.Beam.add_features", "api/generated/compas_timber.elements.Beam.compute_aabb", "api/generated/compas_timber.elements.Beam.compute_collision_mesh", "api/generated/compas_timber.elements.Beam.compute_geometry", "api/generated/compas_timber.elements.Beam.compute_obb", "api/generated/compas_timber.elements.Beam.compute_worldtransformation", "api/generated/compas_timber.elements.Beam.copy", "api/generated/compas_timber.elements.Beam.endpoint_closest_to_point", "api/generated/compas_timber.elements.Beam.extension_to_plane", "api/generated/compas_timber.elements.Beam.from_centerline", "api/generated/compas_timber.elements.Beam.from_endpoints", "api/generated/compas_timber.elements.Beam.from_json", "api/generated/compas_timber.elements.Beam.from_jsonstring", "api/generated/compas_timber.elements.Beam.get_dimensions_relative_to_side", "api/generated/compas_timber.elements.Beam.opposing_side_index", "api/generated/compas_timber.elements.Beam.remove_blank_extension", "api/generated/compas_timber.elements.Beam.remove_features", "api/generated/compas_timber.elements.Beam.reset", "api/generated/compas_timber.elements.Beam.sha256", "api/generated/compas_timber.elements.Beam.side_as_surface", "api/generated/compas_timber.elements.Beam.to_json", "api/generated/compas_timber.elements.Beam.to_jsonstring", "api/generated/compas_timber.elements.Beam.transform", "api/generated/compas_timber.elements.Beam.transformed", "api/generated/compas_timber.elements.Beam.validate_data", "api/generated/compas_timber.elements.Fastener", "api/generated/compas_timber.elements.Fastener.ToString", "api/generated/compas_timber.elements.Fastener.add_feature", "api/generated/compas_timber.elements.Fastener.compute_aabb", "api/generated/compas_timber.elements.Fastener.compute_collision_mesh", "api/generated/compas_timber.elements.Fastener.compute_geometry", "api/generated/compas_timber.elements.Fastener.compute_obb", "api/generated/compas_timber.elements.Fastener.compute_worldtransformation", "api/generated/compas_timber.elements.Fastener.copy", "api/generated/compas_timber.elements.Fastener.from_json", "api/generated/compas_timber.elements.Fastener.from_jsonstring", "api/generated/compas_timber.elements.Fastener.remove_blank_extension", "api/generated/compas_timber.elements.Fastener.remove_features", "api/generated/compas_timber.elements.Fastener.reset", "api/generated/compas_timber.elements.Fastener.sha256", "api/generated/compas_timber.elements.Fastener.to_json", "api/generated/compas_timber.elements.Fastener.to_jsonstring", "api/generated/compas_timber.elements.Fastener.transform", "api/generated/compas_timber.elements.Fastener.transformed", "api/generated/compas_timber.elements.Fastener.validate_data", "api/generated/compas_timber.elements.FastenerTimberInterface", "api/generated/compas_timber.elements.FastenerTimberInterface.ToString", "api/generated/compas_timber.elements.FastenerTimberInterface.copy", "api/generated/compas_timber.elements.FastenerTimberInterface.from_json", "api/generated/compas_timber.elements.FastenerTimberInterface.from_jsonstring", "api/generated/compas_timber.elements.FastenerTimberInterface.get_features", "api/generated/compas_timber.elements.FastenerTimberInterface.sha256", "api/generated/compas_timber.elements.FastenerTimberInterface.to_json", "api/generated/compas_timber.elements.FastenerTimberInterface.to_jsonstring", "api/generated/compas_timber.elements.FastenerTimberInterface.validate_data", "api/generated/compas_timber.elements.Plate", "api/generated/compas_timber.elements.Plate.ToString", "api/generated/compas_timber.elements.Plate.add_feature", "api/generated/compas_timber.elements.Plate.add_features", "api/generated/compas_timber.elements.Plate.compute_aabb", "api/generated/compas_timber.elements.Plate.compute_collision_mesh", "api/generated/compas_timber.elements.Plate.compute_geometry", "api/generated/compas_timber.elements.Plate.compute_obb", "api/generated/compas_timber.elements.Plate.compute_worldtransformation", "api/generated/compas_timber.elements.Plate.copy", "api/generated/compas_timber.elements.Plate.from_json", "api/generated/compas_timber.elements.Plate.from_jsonstring", "api/generated/compas_timber.elements.Plate.remove_blank_extension", "api/generated/compas_timber.elements.Plate.remove_features", "api/generated/compas_timber.elements.Plate.reset", "api/generated/compas_timber.elements.Plate.set_frame_and_outline", "api/generated/compas_timber.elements.Plate.sha256", "api/generated/compas_timber.elements.Plate.to_json", "api/generated/compas_timber.elements.Plate.to_jsonstring", "api/generated/compas_timber.elements.Plate.transform", "api/generated/compas_timber.elements.Plate.transformed", "api/generated/compas_timber.elements.Plate.validate_data", "api/generated/compas_timber.elements.TimberElement", "api/generated/compas_timber.elements.TimberElement.ToString", "api/generated/compas_timber.elements.TimberElement.add_feature", "api/generated/compas_timber.elements.TimberElement.compute_aabb", "api/generated/compas_timber.elements.TimberElement.compute_collision_mesh", "api/generated/compas_timber.elements.TimberElement.compute_geometry", "api/generated/compas_timber.elements.TimberElement.compute_obb", "api/generated/compas_timber.elements.TimberElement.compute_worldtransformation", "api/generated/compas_timber.elements.TimberElement.copy", "api/generated/compas_timber.elements.TimberElement.from_json", "api/generated/compas_timber.elements.TimberElement.from_jsonstring", "api/generated/compas_timber.elements.TimberElement.remove_blank_extension", "api/generated/compas_timber.elements.TimberElement.remove_features", "api/generated/compas_timber.elements.TimberElement.reset", "api/generated/compas_timber.elements.TimberElement.sha256", "api/generated/compas_timber.elements.TimberElement.to_json", "api/generated/compas_timber.elements.TimberElement.to_jsonstring", "api/generated/compas_timber.elements.TimberElement.transform", "api/generated/compas_timber.elements.TimberElement.transformed", "api/generated/compas_timber.elements.TimberElement.validate_data", "api/generated/compas_timber.elements.Wall", "api/generated/compas_timber.elements.Wall.ToString", "api/generated/compas_timber.elements.Wall.add_feature", "api/generated/compas_timber.elements.Wall.compute_aabb", "api/generated/compas_timber.elements.Wall.compute_collision_mesh", "api/generated/compas_timber.elements.Wall.compute_geometry", "api/generated/compas_timber.elements.Wall.compute_obb", "api/generated/compas_timber.elements.Wall.compute_worldtransformation", "api/generated/compas_timber.elements.Wall.copy", "api/generated/compas_timber.elements.Wall.from_boundary", "api/generated/compas_timber.elements.Wall.from_brep", "api/generated/compas_timber.elements.Wall.from_json", "api/generated/compas_timber.elements.Wall.from_jsonstring", "api/generated/compas_timber.elements.Wall.remove_blank_extension", "api/generated/compas_timber.elements.Wall.remove_features", "api/generated/compas_timber.elements.Wall.reset", "api/generated/compas_timber.elements.Wall.rotate", "api/generated/compas_timber.elements.Wall.sha256", "api/generated/compas_timber.elements.Wall.to_json", "api/generated/compas_timber.elements.Wall.to_jsonstring", "api/generated/compas_timber.elements.Wall.transform", "api/generated/compas_timber.elements.Wall.transformed", "api/generated/compas_timber.elements.Wall.validate_data", "api/generated/compas_timber.errors.BeamJoiningError", "api/generated/compas_timber.errors.FastenerApplicationError", "api/generated/compas_timber.errors.FeatureApplicationError", "api/generated/compas_timber.fabrication.BTLxPart", "api/generated/compas_timber.fabrication.BTLxPart.et_point_vals", "api/generated/compas_timber.fabrication.BTLxPart.ref_side_from_face", "api/generated/compas_timber.fabrication.BTLxProcessing", "api/generated/compas_timber.fabrication.BTLxProcessing.ToString", "api/generated/compas_timber.fabrication.BTLxProcessing.add_subprocessing", "api/generated/compas_timber.fabrication.BTLxProcessing.copy", "api/generated/compas_timber.fabrication.BTLxProcessing.from_json", "api/generated/compas_timber.fabrication.BTLxProcessing.from_jsonstring", "api/generated/compas_timber.fabrication.BTLxProcessing.sha256", "api/generated/compas_timber.fabrication.BTLxProcessing.to_json", "api/generated/compas_timber.fabrication.BTLxProcessing.to_jsonstring", "api/generated/compas_timber.fabrication.BTLxProcessing.validate_data", "api/generated/compas_timber.fabrication.BTLxWriter", "api/generated/compas_timber.fabrication.BTLxWriter.model_to_xml", "api/generated/compas_timber.fabrication.BTLxWriter.write", "api/generated/compas_timber.fabrication.DoubleCut", "api/generated/compas_timber.fabrication.DoubleCut.ToString", "api/generated/compas_timber.fabrication.DoubleCut.add_subprocessing", "api/generated/compas_timber.fabrication.DoubleCut.apply", "api/generated/compas_timber.fabrication.DoubleCut.copy", "api/generated/compas_timber.fabrication.DoubleCut.from_json", "api/generated/compas_timber.fabrication.DoubleCut.from_jsonstring", "api/generated/compas_timber.fabrication.DoubleCut.from_planes_and_beam", "api/generated/compas_timber.fabrication.DoubleCut.from_shapes_and_element", "api/generated/compas_timber.fabrication.DoubleCut.planes_from_params_and_beam", "api/generated/compas_timber.fabrication.DoubleCut.sha256", "api/generated/compas_timber.fabrication.DoubleCut.to_json", "api/generated/compas_timber.fabrication.DoubleCut.to_jsonstring", "api/generated/compas_timber.fabrication.DoubleCut.validate_data", "api/generated/compas_timber.fabrication.DovetailMortise", "api/generated/compas_timber.fabrication.DovetailMortise.ToString", "api/generated/compas_timber.fabrication.DovetailMortise.add_subprocessing", "api/generated/compas_timber.fabrication.DovetailMortise.apply", "api/generated/compas_timber.fabrication.DovetailMortise.copy", "api/generated/compas_timber.fabrication.DovetailMortise.define_dovetail_tool", "api/generated/compas_timber.fabrication.DovetailMortise.dovetail_cutting_frames_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailMortise.dovetail_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailMortise.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailMortise.from_frame_and_beam", "api/generated/compas_timber.fabrication.DovetailMortise.from_json", "api/generated/compas_timber.fabrication.DovetailMortise.from_jsonstring", "api/generated/compas_timber.fabrication.DovetailMortise.sha256", "api/generated/compas_timber.fabrication.DovetailMortise.to_json", "api/generated/compas_timber.fabrication.DovetailMortise.to_jsonstring", "api/generated/compas_timber.fabrication.DovetailMortise.validate_data", "api/generated/compas_timber.fabrication.DovetailTenon", "api/generated/compas_timber.fabrication.DovetailTenon.ToString", "api/generated/compas_timber.fabrication.DovetailTenon.add_subprocessing", "api/generated/compas_timber.fabrication.DovetailTenon.apply", "api/generated/compas_timber.fabrication.DovetailTenon.copy", "api/generated/compas_timber.fabrication.DovetailTenon.define_dovetail_tool", "api/generated/compas_timber.fabrication.DovetailTenon.dovetail_cutting_frames_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailTenon.dovetail_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailTenon.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailTenon.from_json", "api/generated/compas_timber.fabrication.DovetailTenon.from_jsonstring", "api/generated/compas_timber.fabrication.DovetailTenon.from_plane_and_beam", "api/generated/compas_timber.fabrication.DovetailTenon.sha256", "api/generated/compas_timber.fabrication.DovetailTenon.to_json", "api/generated/compas_timber.fabrication.DovetailTenon.to_jsonstring", "api/generated/compas_timber.fabrication.DovetailTenon.validate_data", "api/generated/compas_timber.fabrication.Drilling", "api/generated/compas_timber.fabrication.Drilling.ToString", "api/generated/compas_timber.fabrication.Drilling.add_subprocessing", "api/generated/compas_timber.fabrication.Drilling.apply", "api/generated/compas_timber.fabrication.Drilling.copy", "api/generated/compas_timber.fabrication.Drilling.cylinder_from_params_and_element", "api/generated/compas_timber.fabrication.Drilling.from_json", "api/generated/compas_timber.fabrication.Drilling.from_jsonstring", "api/generated/compas_timber.fabrication.Drilling.from_line_and_element", "api/generated/compas_timber.fabrication.Drilling.from_shapes_and_element", "api/generated/compas_timber.fabrication.Drilling.sha256", "api/generated/compas_timber.fabrication.Drilling.to_json", "api/generated/compas_timber.fabrication.Drilling.to_jsonstring", "api/generated/compas_timber.fabrication.Drilling.validate_data", "api/generated/compas_timber.fabrication.EdgePositionType", "api/generated/compas_timber.fabrication.FrenchRidgeLap", "api/generated/compas_timber.fabrication.FrenchRidgeLap.ToString", "api/generated/compas_timber.fabrication.FrenchRidgeLap.add_subprocessing", "api/generated/compas_timber.fabrication.FrenchRidgeLap.apply", "api/generated/compas_timber.fabrication.FrenchRidgeLap.copy", "api/generated/compas_timber.fabrication.FrenchRidgeLap.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_beam_beam_and_plane", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_json", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_jsonstring", "api/generated/compas_timber.fabrication.FrenchRidgeLap.lap_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.FrenchRidgeLap.sha256", "api/generated/compas_timber.fabrication.FrenchRidgeLap.to_json", "api/generated/compas_timber.fabrication.FrenchRidgeLap.to_jsonstring", "api/generated/compas_timber.fabrication.FrenchRidgeLap.validate_data", "api/generated/compas_timber.fabrication.JackRafterCut", "api/generated/compas_timber.fabrication.JackRafterCut.ToString", "api/generated/compas_timber.fabrication.JackRafterCut.add_subprocessing", "api/generated/compas_timber.fabrication.JackRafterCut.apply", "api/generated/compas_timber.fabrication.JackRafterCut.copy", "api/generated/compas_timber.fabrication.JackRafterCut.from_json", "api/generated/compas_timber.fabrication.JackRafterCut.from_jsonstring", "api/generated/compas_timber.fabrication.JackRafterCut.from_plane_and_beam", "api/generated/compas_timber.fabrication.JackRafterCut.from_shapes_and_element", "api/generated/compas_timber.fabrication.JackRafterCut.plane_from_params_and_beam", "api/generated/compas_timber.fabrication.JackRafterCut.sha256", "api/generated/compas_timber.fabrication.JackRafterCut.to_json", "api/generated/compas_timber.fabrication.JackRafterCut.to_jsonstring", "api/generated/compas_timber.fabrication.JackRafterCut.validate_data", "api/generated/compas_timber.fabrication.Lap", "api/generated/compas_timber.fabrication.Lap.ToString", "api/generated/compas_timber.fabrication.Lap.add_subprocessing", "api/generated/compas_timber.fabrication.Lap.apply", "api/generated/compas_timber.fabrication.Lap.copy", "api/generated/compas_timber.fabrication.Lap.from_json", "api/generated/compas_timber.fabrication.Lap.from_jsonstring", "api/generated/compas_timber.fabrication.Lap.from_plane_and_beam", "api/generated/compas_timber.fabrication.Lap.planes_from_params_and_beam", "api/generated/compas_timber.fabrication.Lap.sha256", "api/generated/compas_timber.fabrication.Lap.to_json", "api/generated/compas_timber.fabrication.Lap.to_jsonstring", "api/generated/compas_timber.fabrication.Lap.validate_data", "api/generated/compas_timber.fabrication.Lap.volume_from_params_and_beam", "api/generated/compas_timber.fabrication.LimitationTopType", "api/generated/compas_timber.fabrication.MachiningLimits", "api/generated/compas_timber.fabrication.Mortise", "api/generated/compas_timber.fabrication.Mortise.ToString", "api/generated/compas_timber.fabrication.Mortise.add_subprocessing", "api/generated/compas_timber.fabrication.Mortise.apply", "api/generated/compas_timber.fabrication.Mortise.copy", "api/generated/compas_timber.fabrication.Mortise.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.Mortise.from_frame_and_beam", "api/generated/compas_timber.fabrication.Mortise.from_json", "api/generated/compas_timber.fabrication.Mortise.from_jsonstring", "api/generated/compas_timber.fabrication.Mortise.sha256", "api/generated/compas_timber.fabrication.Mortise.to_json", "api/generated/compas_timber.fabrication.Mortise.to_jsonstring", "api/generated/compas_timber.fabrication.Mortise.validate_data", "api/generated/compas_timber.fabrication.Mortise.volume_from_params_and_beam", "api/generated/compas_timber.fabrication.OrientationType", "api/generated/compas_timber.fabrication.Slot", "api/generated/compas_timber.fabrication.Slot.ToString", "api/generated/compas_timber.fabrication.Slot.add_subprocessing", "api/generated/compas_timber.fabrication.Slot.apply", "api/generated/compas_timber.fabrication.Slot.copy", "api/generated/compas_timber.fabrication.Slot.from_json", "api/generated/compas_timber.fabrication.Slot.from_jsonstring", "api/generated/compas_timber.fabrication.Slot.from_plane_and_beam", "api/generated/compas_timber.fabrication.Slot.sha256", "api/generated/compas_timber.fabrication.Slot.to_json", "api/generated/compas_timber.fabrication.Slot.to_jsonstring", "api/generated/compas_timber.fabrication.Slot.validate_data", "api/generated/compas_timber.fabrication.StepJoint", "api/generated/compas_timber.fabrication.StepJoint.ToString", "api/generated/compas_timber.fabrication.StepJoint.add_subprocessing", "api/generated/compas_timber.fabrication.StepJoint.add_tenon", "api/generated/compas_timber.fabrication.StepJoint.apply", "api/generated/compas_timber.fabrication.StepJoint.copy", "api/generated/compas_timber.fabrication.StepJoint.from_json", "api/generated/compas_timber.fabrication.StepJoint.from_jsonstring", "api/generated/compas_timber.fabrication.StepJoint.from_plane_and_beam", "api/generated/compas_timber.fabrication.StepJoint.planes_from_params_and_beam", "api/generated/compas_timber.fabrication.StepJoint.sha256", "api/generated/compas_timber.fabrication.StepJoint.tenon_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.StepJoint.to_json", "api/generated/compas_timber.fabrication.StepJoint.to_jsonstring", "api/generated/compas_timber.fabrication.StepJoint.validate_data", "api/generated/compas_timber.fabrication.StepJointNotch", "api/generated/compas_timber.fabrication.StepJointNotch.ToString", "api/generated/compas_timber.fabrication.StepJointNotch.add_mortise", "api/generated/compas_timber.fabrication.StepJointNotch.add_subprocessing", "api/generated/compas_timber.fabrication.StepJointNotch.apply", "api/generated/compas_timber.fabrication.StepJointNotch.copy", "api/generated/compas_timber.fabrication.StepJointNotch.from_json", "api/generated/compas_timber.fabrication.StepJointNotch.from_jsonstring", "api/generated/compas_timber.fabrication.StepJointNotch.from_plane_and_beam", "api/generated/compas_timber.fabrication.StepJointNotch.mortise_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.StepJointNotch.planes_from_params_and_beam", "api/generated/compas_timber.fabrication.StepJointNotch.sha256", "api/generated/compas_timber.fabrication.StepJointNotch.to_json", "api/generated/compas_timber.fabrication.StepJointNotch.to_jsonstring", "api/generated/compas_timber.fabrication.StepJointNotch.validate_data", "api/generated/compas_timber.fabrication.StepShapeType", "api/generated/compas_timber.fabrication.Tenon", "api/generated/compas_timber.fabrication.Tenon.ToString", "api/generated/compas_timber.fabrication.Tenon.add_subprocessing", "api/generated/compas_timber.fabrication.Tenon.apply", "api/generated/compas_timber.fabrication.Tenon.copy", "api/generated/compas_timber.fabrication.Tenon.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.Tenon.from_json", "api/generated/compas_timber.fabrication.Tenon.from_jsonstring", "api/generated/compas_timber.fabrication.Tenon.from_plane_and_beam", "api/generated/compas_timber.fabrication.Tenon.sha256", "api/generated/compas_timber.fabrication.Tenon.to_json", "api/generated/compas_timber.fabrication.Tenon.to_jsonstring", "api/generated/compas_timber.fabrication.Tenon.validate_data", "api/generated/compas_timber.fabrication.Tenon.volume_from_params_and_beam", "api/generated/compas_timber.fabrication.TenonShapeType", "api/generated/compas_timber.ghpython.add_gh_param", "api/generated/compas_timber.ghpython.clear_gh_params", "api/generated/compas_timber.ghpython.get_leaf_subclasses", "api/generated/compas_timber.ghpython.item_input_valid", "api/generated/compas_timber.ghpython.list_input_valid", "api/generated/compas_timber.ghpython.manage_dynamic_params", "api/generated/compas_timber.ghpython.rename_gh_input", "api/generated/compas_timber.model.TimberModel", "api/generated/compas_timber.model.TimberModel.ToString", "api/generated/compas_timber.model.TimberModel.add_element", "api/generated/compas_timber.model.TimberModel.add_elements", "api/generated/compas_timber.model.TimberModel.add_group", "api/generated/compas_timber.model.TimberModel.add_group_element", "api/generated/compas_timber.model.TimberModel.add_interaction", "api/generated/compas_timber.model.TimberModel.add_joint", "api/generated/compas_timber.model.TimberModel.add_material", "api/generated/compas_timber.model.TimberModel.assign_material", "api/generated/compas_timber.model.TimberModel.compute_aabb", "api/generated/compas_timber.model.TimberModel.compute_obb", "api/generated/compas_timber.model.TimberModel.connect_adjacent_walls", "api/generated/compas_timber.model.TimberModel.copy", "api/generated/compas_timber.model.TimberModel.element_by_guid", "api/generated/compas_timber.model.TimberModel.elements", "api/generated/compas_timber.model.TimberModel.elements_connected_by", "api/generated/compas_timber.model.TimberModel.from_json", "api/generated/compas_timber.model.TimberModel.from_jsonstring", "api/generated/compas_timber.model.TimberModel.get_elements_in_group", "api/generated/compas_timber.model.TimberModel.get_interactions_for_element", "api/generated/compas_timber.model.TimberModel.has_element", "api/generated/compas_timber.model.TimberModel.has_group", "api/generated/compas_timber.model.TimberModel.has_interaction", "api/generated/compas_timber.model.TimberModel.has_material", "api/generated/compas_timber.model.TimberModel.interactions", "api/generated/compas_timber.model.TimberModel.materials", "api/generated/compas_timber.model.TimberModel.process_joinery", "api/generated/compas_timber.model.TimberModel.remove_element", "api/generated/compas_timber.model.TimberModel.remove_interaction", "api/generated/compas_timber.model.TimberModel.remove_joint", "api/generated/compas_timber.model.TimberModel.rotate", "api/generated/compas_timber.model.TimberModel.rotated", "api/generated/compas_timber.model.TimberModel.scale", "api/generated/compas_timber.model.TimberModel.scaled", "api/generated/compas_timber.model.TimberModel.set_topologies", "api/generated/compas_timber.model.TimberModel.sha256", "api/generated/compas_timber.model.TimberModel.to_json", "api/generated/compas_timber.model.TimberModel.to_jsonstring", "api/generated/compas_timber.model.TimberModel.transform", "api/generated/compas_timber.model.TimberModel.transform_numpy", "api/generated/compas_timber.model.TimberModel.transformed", "api/generated/compas_timber.model.TimberModel.transformed_numpy", "api/generated/compas_timber.model.TimberModel.translate", "api/generated/compas_timber.model.TimberModel.translated", "api/generated/compas_timber.model.TimberModel.validate_data", "api/generated/compas_timber.planning.Actor", "api/generated/compas_timber.planning.Actor.get_name", "api/generated/compas_timber.planning.BuildingPlan", "api/generated/compas_timber.planning.BuildingPlan.ToString", "api/generated/compas_timber.planning.BuildingPlan.add_step", "api/generated/compas_timber.planning.BuildingPlan.copy", "api/generated/compas_timber.planning.BuildingPlan.from_json", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.sha256", "api/generated/compas_timber.planning.BuildingPlan.to_json", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.validate_data", "api/generated/compas_timber.planning.BuildingPlanParser", "api/generated/compas_timber.planning.BuildingPlanParser.parse", "api/generated/compas_timber.planning.BuildingPlanParser.serialize", "api/generated/compas_timber.planning.Instruction", "api/generated/compas_timber.planning.Instruction.ToString", "api/generated/compas_timber.planning.Instruction.copy", "api/generated/compas_timber.planning.Instruction.from_json", "api/generated/compas_timber.planning.Instruction.from_jsonstring", "api/generated/compas_timber.planning.Instruction.sha256", "api/generated/compas_timber.planning.Instruction.to_json", "api/generated/compas_timber.planning.Instruction.to_jsonstring", "api/generated/compas_timber.planning.Instruction.transform", "api/generated/compas_timber.planning.Instruction.validate_data", "api/generated/compas_timber.planning.LinearDimension", "api/generated/compas_timber.planning.LinearDimension.ToString", "api/generated/compas_timber.planning.LinearDimension.copy", "api/generated/compas_timber.planning.LinearDimension.from_json", "api/generated/compas_timber.planning.LinearDimension.from_jsonstring", "api/generated/compas_timber.planning.LinearDimension.sha256", "api/generated/compas_timber.planning.LinearDimension.to_json", "api/generated/compas_timber.planning.LinearDimension.to_jsonstring", "api/generated/compas_timber.planning.LinearDimension.transform", "api/generated/compas_timber.planning.LinearDimension.validate_data", "api/generated/compas_timber.planning.Model3d", "api/generated/compas_timber.planning.Model3d.ToString", "api/generated/compas_timber.planning.Model3d.copy", "api/generated/compas_timber.planning.Model3d.from_json", "api/generated/compas_timber.planning.Model3d.from_jsonstring", "api/generated/compas_timber.planning.Model3d.sha256", "api/generated/compas_timber.planning.Model3d.to_json", "api/generated/compas_timber.planning.Model3d.to_jsonstring", "api/generated/compas_timber.planning.Model3d.transform", "api/generated/compas_timber.planning.Model3d.validate_data", "api/generated/compas_timber.planning.SimpleSequenceGenerator", "api/generated/compas_timber.planning.Step", "api/generated/compas_timber.planning.Step.ToString", "api/generated/compas_timber.planning.Step.copy", "api/generated/compas_timber.planning.Step.from_json", "api/generated/compas_timber.planning.Step.from_jsonstring", "api/generated/compas_timber.planning.Step.sha256", "api/generated/compas_timber.planning.Step.to_json", "api/generated/compas_timber.planning.Step.to_jsonstring", "api/generated/compas_timber.planning.Step.transform", "api/generated/compas_timber.planning.Step.validate_data", "api/generated/compas_timber.planning.Text3d", "api/generated/compas_timber.planning.Text3d.ToString", "api/generated/compas_timber.planning.Text3d.copy", "api/generated/compas_timber.planning.Text3d.from_json", "api/generated/compas_timber.planning.Text3d.from_jsonstring", "api/generated/compas_timber.planning.Text3d.sha256", "api/generated/compas_timber.planning.Text3d.to_json", "api/generated/compas_timber.planning.Text3d.to_jsonstring", "api/generated/compas_timber.planning.Text3d.transform", "api/generated/compas_timber.planning.Text3d.validate_data", "api/generated/compas_timber.rhino.find_neighboring_elements", "citing", "examples", "examples/create_joint", "index", "installation", "license", "tutorials", "tutorials/BTLx_contribution_guide", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beams", "tutorials/grasshopper/design", "tutorials/grasshopper/examples", "tutorials/grasshopper/fabrication", "tutorials/grasshopper/features", "tutorials/grasshopper/joint_rules", "tutorials/grasshopper/model", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api.rst", "api/compas_timber.connections.rst", "api/compas_timber.design.rst", "api/compas_timber.elements.rst", "api/compas_timber.errors.rst", "api/compas_timber.fabrication.rst", "api/compas_timber.ghpython.rst", "api/compas_timber.model.rst", "api/compas_timber.planning.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.connections.BallNodeJoint.rst", "api/generated/compas_timber.connections.BallNodeJoint.ToString.rst", "api/generated/compas_timber.connections.BallNodeJoint.add_extensions.rst", "api/generated/compas_timber.connections.BallNodeJoint.add_features.rst", "api/generated/compas_timber.connections.BallNodeJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.BallNodeJoint.copy.rst", "api/generated/compas_timber.connections.BallNodeJoint.create.rst", "api/generated/compas_timber.connections.BallNodeJoint.element_count_complies.rst", "api/generated/compas_timber.connections.BallNodeJoint.from_json.rst", "api/generated/compas_timber.connections.BallNodeJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.BallNodeJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.BallNodeJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.BallNodeJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.BallNodeJoint.sha256.rst", "api/generated/compas_timber.connections.BallNodeJoint.to_json.rst", "api/generated/compas_timber.connections.BallNodeJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.BallNodeJoint.validate_data.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_wall_wall_topology.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_extensions.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.element_count_complies.rst", "api/generated/compas_timber.connections.Joint.from_json.rst", "api/generated/compas_timber.connections.Joint.from_jsonstring.rst", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_json.rst", "api/generated/compas_timber.connections.Joint.to_jsonstring.rst", "api/generated/compas_timber.connections.Joint.validate_data.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_extensions.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LButtJoint.from_json.rst", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.to_json.rst", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.update_beam_roles.rst", "api/generated/compas_timber.connections.LButtJoint.validate_data.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.ToString.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.add_features.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.copy.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.create.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.from_json.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.sha256.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.to_json.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.validate_data.rst", "api/generated/compas_timber.connections.LLapJoint.rst", "api/generated/compas_timber.connections.LLapJoint.ToString.rst", "api/generated/compas_timber.connections.LLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.LLapJoint.add_features.rst", "api/generated/compas_timber.connections.LLapJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.LLapJoint.copy.rst", "api/generated/compas_timber.connections.LLapJoint.create.rst", "api/generated/compas_timber.connections.LLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LLapJoint.from_json.rst", "api/generated/compas_timber.connections.LLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LLapJoint.sha256.rst", "api/generated/compas_timber.connections.LLapJoint.to_json.rst", "api/generated/compas_timber.connections.LLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LLapJoint.validate_data.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_extensions.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LMiterJoint.from_json.rst", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_json.rst", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_data.rst", "api/generated/compas_timber.connections.LapJoint.rst", "api/generated/compas_timber.connections.LapJoint.ToString.rst", "api/generated/compas_timber.connections.LapJoint.add_extensions.rst", "api/generated/compas_timber.connections.LapJoint.add_features.rst", "api/generated/compas_timber.connections.LapJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.LapJoint.copy.rst", "api/generated/compas_timber.connections.LapJoint.create.rst", "api/generated/compas_timber.connections.LapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LapJoint.from_json.rst", "api/generated/compas_timber.connections.LapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LapJoint.sha256.rst", "api/generated/compas_timber.connections.LapJoint.to_json.rst", "api/generated/compas_timber.connections.LapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.validate_data.rst", "api/generated/compas_timber.connections.NullJoint.rst", "api/generated/compas_timber.connections.NullJoint.ToString.rst", "api/generated/compas_timber.connections.NullJoint.add_extensions.rst", "api/generated/compas_timber.connections.NullJoint.add_features.rst", "api/generated/compas_timber.connections.NullJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.NullJoint.copy.rst", "api/generated/compas_timber.connections.NullJoint.create.rst", "api/generated/compas_timber.connections.NullJoint.element_count_complies.rst", "api/generated/compas_timber.connections.NullJoint.from_json.rst", "api/generated/compas_timber.connections.NullJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.NullJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.NullJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.NullJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.NullJoint.sha256.rst", "api/generated/compas_timber.connections.NullJoint.to_json.rst", "api/generated/compas_timber.connections.NullJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.NullJoint.validate_data.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.ToString.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.add_extensions.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.add_features.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.copy.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.create.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.from_json.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.sha256.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.to_json.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.validate_data.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_extensions.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TButtJoint.from_json.rst", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.to_json.rst", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.validate_data.rst", "api/generated/compas_timber.connections.TDovetailJoint.rst", "api/generated/compas_timber.connections.TDovetailJoint.ToString.rst", "api/generated/compas_timber.connections.TDovetailJoint.add_extensions.rst", "api/generated/compas_timber.connections.TDovetailJoint.add_features.rst", "api/generated/compas_timber.connections.TDovetailJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TDovetailJoint.copy.rst", "api/generated/compas_timber.connections.TDovetailJoint.create.rst", "api/generated/compas_timber.connections.TDovetailJoint.define_dovetail_tool.rst", "api/generated/compas_timber.connections.TDovetailJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TDovetailJoint.from_json.rst", "api/generated/compas_timber.connections.TDovetailJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TDovetailJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TDovetailJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TDovetailJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TDovetailJoint.sha256.rst", "api/generated/compas_timber.connections.TDovetailJoint.to_json.rst", "api/generated/compas_timber.connections.TDovetailJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TDovetailJoint.validate_data.rst", "api/generated/compas_timber.connections.TLapJoint.rst", "api/generated/compas_timber.connections.TLapJoint.ToString.rst", "api/generated/compas_timber.connections.TLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.TLapJoint.add_features.rst", "api/generated/compas_timber.connections.TLapJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TLapJoint.copy.rst", "api/generated/compas_timber.connections.TLapJoint.create.rst", "api/generated/compas_timber.connections.TLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TLapJoint.from_json.rst", "api/generated/compas_timber.connections.TLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.TLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.TLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TLapJoint.sha256.rst", "api/generated/compas_timber.connections.TLapJoint.to_json.rst", "api/generated/compas_timber.connections.TLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TLapJoint.validate_data.rst", "api/generated/compas_timber.connections.TStepJoint.rst", "api/generated/compas_timber.connections.TStepJoint.ToString.rst", "api/generated/compas_timber.connections.TStepJoint.add_extensions.rst", "api/generated/compas_timber.connections.TStepJoint.add_features.rst", "api/generated/compas_timber.connections.TStepJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TStepJoint.copy.rst", "api/generated/compas_timber.connections.TStepJoint.create.rst", "api/generated/compas_timber.connections.TStepJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TStepJoint.from_json.rst", "api/generated/compas_timber.connections.TStepJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TStepJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TStepJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TStepJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TStepJoint.set_step_depths.rst", "api/generated/compas_timber.connections.TStepJoint.sha256.rst", "api/generated/compas_timber.connections.TStepJoint.to_json.rst", "api/generated/compas_timber.connections.TStepJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TStepJoint.validate_data.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.ToString.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.add_extensions.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.add_features.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.copy.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.create.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.from_json.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.set_default_values.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.sha256.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.to_json.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.validate_data.rst", "api/generated/compas_timber.connections.XLapJoint.rst", "api/generated/compas_timber.connections.XLapJoint.ToString.rst", "api/generated/compas_timber.connections.XLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.XLapJoint.add_features.rst", "api/generated/compas_timber.connections.XLapJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.XLapJoint.copy.rst", "api/generated/compas_timber.connections.XLapJoint.create.rst", "api/generated/compas_timber.connections.XLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.XLapJoint.from_json.rst", "api/generated/compas_timber.connections.XLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.XLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.XLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.XLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.XLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.XLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.XLapJoint.sha256.rst", "api/generated/compas_timber.connections.XLapJoint.to_json.rst", "api/generated/compas_timber.connections.XLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.XLapJoint.validate_data.rst", "api/generated/compas_timber.connections.YButtJoint.rst", "api/generated/compas_timber.connections.YButtJoint.ToString.rst", "api/generated/compas_timber.connections.YButtJoint.add_extensions.rst", "api/generated/compas_timber.connections.YButtJoint.add_features.rst", "api/generated/compas_timber.connections.YButtJoint.check_beam_compatibility.rst", "api/generated/compas_timber.connections.YButtJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.YButtJoint.copy.rst", "api/generated/compas_timber.connections.YButtJoint.create.rst", "api/generated/compas_timber.connections.YButtJoint.cross_beam_ref_side_index.rst", "api/generated/compas_timber.connections.YButtJoint.element_count_complies.rst", "api/generated/compas_timber.connections.YButtJoint.from_json.rst", "api/generated/compas_timber.connections.YButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.YButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.YButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.YButtJoint.get_miter_planes.rst", "api/generated/compas_timber.connections.YButtJoint.main_beam_ref_side_index.rst", "api/generated/compas_timber.connections.YButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.YButtJoint.sha256.rst", "api/generated/compas_timber.connections.YButtJoint.to_json.rst", "api/generated/compas_timber.connections.YButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.YButtJoint.validate_data.rst", "api/generated/compas_timber.connections.find_neighboring_elements.rst", "api/generated/compas_timber.design.CategoryRule.rst", "api/generated/compas_timber.design.CategoryRule.ToString.rst", "api/generated/compas_timber.design.CategoryRule.comply.rst", "api/generated/compas_timber.design.CategoryRule.get_category_rules.rst", "api/generated/compas_timber.design.CategoryRule.get_direct_rules.rst", "api/generated/compas_timber.design.CategoryRule.get_topology_rules.rst", "api/generated/compas_timber.design.CategoryRule.joints_from_beams_and_rules.rst", "api/generated/compas_timber.design.CategoryRule.reorder.rst", "api/generated/compas_timber.design.DebugInfomation.rst", "api/generated/compas_timber.design.DebugInfomation.ToString.rst", "api/generated/compas_timber.design.DebugInfomation.add_fastener_error.rst", "api/generated/compas_timber.design.DebugInfomation.add_feature_error.rst", "api/generated/compas_timber.design.DebugInfomation.add_joint_error.rst", "api/generated/compas_timber.design.DirectRule.rst", "api/generated/compas_timber.design.DirectRule.ToString.rst", "api/generated/compas_timber.design.DirectRule.comply.rst", "api/generated/compas_timber.design.DirectRule.contains.rst", "api/generated/compas_timber.design.DirectRule.get_category_rules.rst", "api/generated/compas_timber.design.DirectRule.get_direct_rules.rst", "api/generated/compas_timber.design.DirectRule.get_topology_rules.rst", "api/generated/compas_timber.design.DirectRule.joints_from_beams_and_rules.rst", "api/generated/compas_timber.design.FeatureDefinition.rst", "api/generated/compas_timber.design.FeatureDefinition.ToString.rst", "api/generated/compas_timber.design.JointDefinition.rst", "api/generated/compas_timber.design.JointDefinition.ToString.rst", "api/generated/compas_timber.design.JointDefinition.is_identical.rst", "api/generated/compas_timber.design.JointDefinition.match.rst", "api/generated/compas_timber.design.JointRule.rst", "api/generated/compas_timber.design.JointRule.comply.rst", "api/generated/compas_timber.design.JointRule.get_category_rules.rst", "api/generated/compas_timber.design.JointRule.get_direct_rules.rst", "api/generated/compas_timber.design.JointRule.get_topology_rules.rst", "api/generated/compas_timber.design.JointRule.joints_from_beams_and_rules.rst", "api/generated/compas_timber.design.SurfaceModel.rst", "api/generated/compas_timber.design.SurfaceModel.beam_category_names.rst", "api/generated/compas_timber.design.SurfaceModel.create_model.rst", "api/generated/compas_timber.design.SurfaceModel.cull_overlaps.rst", "api/generated/compas_timber.design.SurfaceModel.distance_between_elements.rst", "api/generated/compas_timber.design.SurfaceModel.generate_frame.rst", "api/generated/compas_timber.design.SurfaceModel.generate_perimeter_beams.rst", "api/generated/compas_timber.design.SurfaceModel.generate_plates.rst", "api/generated/compas_timber.design.SurfaceModel.generate_stud_lines.rst", "api/generated/compas_timber.design.SurfaceModel.generate_studs.rst", "api/generated/compas_timber.design.SurfaceModel.generate_windows.rst", "api/generated/compas_timber.design.SurfaceModel.get_beam_intersections.rst", "api/generated/compas_timber.design.SurfaceModel.get_interior_segment_indices.rst", "api/generated/compas_timber.design.SurfaceModel.offset_elements.rst", "api/generated/compas_timber.design.SurfaceModel.parse_loops.rst", "api/generated/compas_timber.design.SurfaceModel.trim_jack_studs.rst", "api/generated/compas_timber.design.SurfaceModel.trim_king_studs.rst", "api/generated/compas_timber.design.SurfaceModel.trim_studs.rst", "api/generated/compas_timber.design.TopologyRule.rst", "api/generated/compas_timber.design.TopologyRule.ToString.rst", "api/generated/compas_timber.design.TopologyRule.comply.rst", "api/generated/compas_timber.design.TopologyRule.get_category_rules.rst", "api/generated/compas_timber.design.TopologyRule.get_direct_rules.rst", "api/generated/compas_timber.design.TopologyRule.get_topology_rules.rst", "api/generated/compas_timber.design.TopologyRule.joints_from_beams_and_rules.rst", "api/generated/compas_timber.design.guess_joint_topology_2beams.rst", "api/generated/compas_timber.design.set_default_joints.rst", "api/generated/compas_timber.elements.Beam.rst", "api/generated/compas_timber.elements.Beam.ToString.rst", "api/generated/compas_timber.elements.Beam.add_blank_extension.rst", "api/generated/compas_timber.elements.Beam.add_feature.rst", "api/generated/compas_timber.elements.Beam.add_features.rst", "api/generated/compas_timber.elements.Beam.compute_aabb.rst", "api/generated/compas_timber.elements.Beam.compute_collision_mesh.rst", "api/generated/compas_timber.elements.Beam.compute_geometry.rst", "api/generated/compas_timber.elements.Beam.compute_obb.rst", "api/generated/compas_timber.elements.Beam.compute_worldtransformation.rst", "api/generated/compas_timber.elements.Beam.copy.rst", "api/generated/compas_timber.elements.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.elements.Beam.extension_to_plane.rst", "api/generated/compas_timber.elements.Beam.from_centerline.rst", "api/generated/compas_timber.elements.Beam.from_endpoints.rst", "api/generated/compas_timber.elements.Beam.from_json.rst", "api/generated/compas_timber.elements.Beam.from_jsonstring.rst", "api/generated/compas_timber.elements.Beam.get_dimensions_relative_to_side.rst", "api/generated/compas_timber.elements.Beam.opposing_side_index.rst", "api/generated/compas_timber.elements.Beam.remove_blank_extension.rst", "api/generated/compas_timber.elements.Beam.remove_features.rst", "api/generated/compas_timber.elements.Beam.reset.rst", "api/generated/compas_timber.elements.Beam.sha256.rst", "api/generated/compas_timber.elements.Beam.side_as_surface.rst", "api/generated/compas_timber.elements.Beam.to_json.rst", "api/generated/compas_timber.elements.Beam.to_jsonstring.rst", "api/generated/compas_timber.elements.Beam.transform.rst", "api/generated/compas_timber.elements.Beam.transformed.rst", "api/generated/compas_timber.elements.Beam.validate_data.rst", "api/generated/compas_timber.elements.Fastener.rst", "api/generated/compas_timber.elements.Fastener.ToString.rst", "api/generated/compas_timber.elements.Fastener.add_feature.rst", "api/generated/compas_timber.elements.Fastener.compute_aabb.rst", "api/generated/compas_timber.elements.Fastener.compute_collision_mesh.rst", "api/generated/compas_timber.elements.Fastener.compute_geometry.rst", "api/generated/compas_timber.elements.Fastener.compute_obb.rst", "api/generated/compas_timber.elements.Fastener.compute_worldtransformation.rst", "api/generated/compas_timber.elements.Fastener.copy.rst", "api/generated/compas_timber.elements.Fastener.from_json.rst", "api/generated/compas_timber.elements.Fastener.from_jsonstring.rst", "api/generated/compas_timber.elements.Fastener.remove_blank_extension.rst", "api/generated/compas_timber.elements.Fastener.remove_features.rst", "api/generated/compas_timber.elements.Fastener.reset.rst", "api/generated/compas_timber.elements.Fastener.sha256.rst", "api/generated/compas_timber.elements.Fastener.to_json.rst", "api/generated/compas_timber.elements.Fastener.to_jsonstring.rst", "api/generated/compas_timber.elements.Fastener.transform.rst", "api/generated/compas_timber.elements.Fastener.transformed.rst", "api/generated/compas_timber.elements.Fastener.validate_data.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.ToString.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.copy.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.from_json.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.from_jsonstring.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.get_features.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.sha256.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.to_json.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.to_jsonstring.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.validate_data.rst", "api/generated/compas_timber.elements.Plate.rst", "api/generated/compas_timber.elements.Plate.ToString.rst", "api/generated/compas_timber.elements.Plate.add_feature.rst", "api/generated/compas_timber.elements.Plate.add_features.rst", "api/generated/compas_timber.elements.Plate.compute_aabb.rst", "api/generated/compas_timber.elements.Plate.compute_collision_mesh.rst", "api/generated/compas_timber.elements.Plate.compute_geometry.rst", "api/generated/compas_timber.elements.Plate.compute_obb.rst", "api/generated/compas_timber.elements.Plate.compute_worldtransformation.rst", "api/generated/compas_timber.elements.Plate.copy.rst", "api/generated/compas_timber.elements.Plate.from_json.rst", "api/generated/compas_timber.elements.Plate.from_jsonstring.rst", "api/generated/compas_timber.elements.Plate.remove_blank_extension.rst", "api/generated/compas_timber.elements.Plate.remove_features.rst", "api/generated/compas_timber.elements.Plate.reset.rst", "api/generated/compas_timber.elements.Plate.set_frame_and_outline.rst", "api/generated/compas_timber.elements.Plate.sha256.rst", "api/generated/compas_timber.elements.Plate.to_json.rst", "api/generated/compas_timber.elements.Plate.to_jsonstring.rst", "api/generated/compas_timber.elements.Plate.transform.rst", "api/generated/compas_timber.elements.Plate.transformed.rst", "api/generated/compas_timber.elements.Plate.validate_data.rst", "api/generated/compas_timber.elements.TimberElement.rst", "api/generated/compas_timber.elements.TimberElement.ToString.rst", "api/generated/compas_timber.elements.TimberElement.add_feature.rst", "api/generated/compas_timber.elements.TimberElement.compute_aabb.rst", "api/generated/compas_timber.elements.TimberElement.compute_collision_mesh.rst", "api/generated/compas_timber.elements.TimberElement.compute_geometry.rst", "api/generated/compas_timber.elements.TimberElement.compute_obb.rst", "api/generated/compas_timber.elements.TimberElement.compute_worldtransformation.rst", "api/generated/compas_timber.elements.TimberElement.copy.rst", "api/generated/compas_timber.elements.TimberElement.from_json.rst", "api/generated/compas_timber.elements.TimberElement.from_jsonstring.rst", "api/generated/compas_timber.elements.TimberElement.remove_blank_extension.rst", "api/generated/compas_timber.elements.TimberElement.remove_features.rst", "api/generated/compas_timber.elements.TimberElement.reset.rst", "api/generated/compas_timber.elements.TimberElement.sha256.rst", "api/generated/compas_timber.elements.TimberElement.to_json.rst", "api/generated/compas_timber.elements.TimberElement.to_jsonstring.rst", "api/generated/compas_timber.elements.TimberElement.transform.rst", "api/generated/compas_timber.elements.TimberElement.transformed.rst", "api/generated/compas_timber.elements.TimberElement.validate_data.rst", "api/generated/compas_timber.elements.Wall.rst", "api/generated/compas_timber.elements.Wall.ToString.rst", "api/generated/compas_timber.elements.Wall.add_feature.rst", "api/generated/compas_timber.elements.Wall.compute_aabb.rst", "api/generated/compas_timber.elements.Wall.compute_collision_mesh.rst", "api/generated/compas_timber.elements.Wall.compute_geometry.rst", "api/generated/compas_timber.elements.Wall.compute_obb.rst", "api/generated/compas_timber.elements.Wall.compute_worldtransformation.rst", "api/generated/compas_timber.elements.Wall.copy.rst", "api/generated/compas_timber.elements.Wall.from_boundary.rst", "api/generated/compas_timber.elements.Wall.from_brep.rst", "api/generated/compas_timber.elements.Wall.from_json.rst", "api/generated/compas_timber.elements.Wall.from_jsonstring.rst", "api/generated/compas_timber.elements.Wall.remove_blank_extension.rst", "api/generated/compas_timber.elements.Wall.remove_features.rst", "api/generated/compas_timber.elements.Wall.reset.rst", "api/generated/compas_timber.elements.Wall.rotate.rst", "api/generated/compas_timber.elements.Wall.sha256.rst", "api/generated/compas_timber.elements.Wall.to_json.rst", "api/generated/compas_timber.elements.Wall.to_jsonstring.rst", "api/generated/compas_timber.elements.Wall.transform.rst", "api/generated/compas_timber.elements.Wall.transformed.rst", "api/generated/compas_timber.elements.Wall.validate_data.rst", "api/generated/compas_timber.errors.BeamJoiningError.rst", "api/generated/compas_timber.errors.FastenerApplicationError.rst", "api/generated/compas_timber.errors.FeatureApplicationError.rst", "api/generated/compas_timber.fabrication.BTLxPart.rst", "api/generated/compas_timber.fabrication.BTLxPart.et_point_vals.rst", "api/generated/compas_timber.fabrication.BTLxPart.ref_side_from_face.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.ToString.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.add_subprocessing.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.copy.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.from_json.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.from_jsonstring.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.sha256.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.to_json.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.to_jsonstring.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.validate_data.rst", "api/generated/compas_timber.fabrication.BTLxWriter.rst", "api/generated/compas_timber.fabrication.BTLxWriter.model_to_xml.rst", "api/generated/compas_timber.fabrication.BTLxWriter.write.rst", "api/generated/compas_timber.fabrication.DoubleCut.rst", "api/generated/compas_timber.fabrication.DoubleCut.ToString.rst", "api/generated/compas_timber.fabrication.DoubleCut.add_subprocessing.rst", "api/generated/compas_timber.fabrication.DoubleCut.apply.rst", "api/generated/compas_timber.fabrication.DoubleCut.copy.rst", "api/generated/compas_timber.fabrication.DoubleCut.from_json.rst", "api/generated/compas_timber.fabrication.DoubleCut.from_jsonstring.rst", "api/generated/compas_timber.fabrication.DoubleCut.from_planes_and_beam.rst", "api/generated/compas_timber.fabrication.DoubleCut.from_shapes_and_element.rst", "api/generated/compas_timber.fabrication.DoubleCut.planes_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DoubleCut.sha256.rst", "api/generated/compas_timber.fabrication.DoubleCut.to_json.rst", "api/generated/compas_timber.fabrication.DoubleCut.to_jsonstring.rst", "api/generated/compas_timber.fabrication.DoubleCut.validate_data.rst", "api/generated/compas_timber.fabrication.DovetailMortise.rst", "api/generated/compas_timber.fabrication.DovetailMortise.ToString.rst", "api/generated/compas_timber.fabrication.DovetailMortise.add_subprocessing.rst", "api/generated/compas_timber.fabrication.DovetailMortise.apply.rst", "api/generated/compas_timber.fabrication.DovetailMortise.copy.rst", "api/generated/compas_timber.fabrication.DovetailMortise.define_dovetail_tool.rst", "api/generated/compas_timber.fabrication.DovetailMortise.dovetail_cutting_frames_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailMortise.dovetail_volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailMortise.frame_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailMortise.from_frame_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailMortise.from_json.rst", "api/generated/compas_timber.fabrication.DovetailMortise.from_jsonstring.rst", "api/generated/compas_timber.fabrication.DovetailMortise.sha256.rst", "api/generated/compas_timber.fabrication.DovetailMortise.to_json.rst", "api/generated/compas_timber.fabrication.DovetailMortise.to_jsonstring.rst", "api/generated/compas_timber.fabrication.DovetailMortise.validate_data.rst", "api/generated/compas_timber.fabrication.DovetailTenon.rst", "api/generated/compas_timber.fabrication.DovetailTenon.ToString.rst", "api/generated/compas_timber.fabrication.DovetailTenon.add_subprocessing.rst", "api/generated/compas_timber.fabrication.DovetailTenon.apply.rst", "api/generated/compas_timber.fabrication.DovetailTenon.copy.rst", "api/generated/compas_timber.fabrication.DovetailTenon.define_dovetail_tool.rst", "api/generated/compas_timber.fabrication.DovetailTenon.dovetail_cutting_frames_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailTenon.dovetail_volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailTenon.frame_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailTenon.from_json.rst", "api/generated/compas_timber.fabrication.DovetailTenon.from_jsonstring.rst", "api/generated/compas_timber.fabrication.DovetailTenon.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailTenon.sha256.rst", "api/generated/compas_timber.fabrication.DovetailTenon.to_json.rst", "api/generated/compas_timber.fabrication.DovetailTenon.to_jsonstring.rst", "api/generated/compas_timber.fabrication.DovetailTenon.validate_data.rst", "api/generated/compas_timber.fabrication.Drilling.rst", "api/generated/compas_timber.fabrication.Drilling.ToString.rst", "api/generated/compas_timber.fabrication.Drilling.add_subprocessing.rst", "api/generated/compas_timber.fabrication.Drilling.apply.rst", "api/generated/compas_timber.fabrication.Drilling.copy.rst", "api/generated/compas_timber.fabrication.Drilling.cylinder_from_params_and_element.rst", "api/generated/compas_timber.fabrication.Drilling.from_json.rst", "api/generated/compas_timber.fabrication.Drilling.from_jsonstring.rst", "api/generated/compas_timber.fabrication.Drilling.from_line_and_element.rst", "api/generated/compas_timber.fabrication.Drilling.from_shapes_and_element.rst", "api/generated/compas_timber.fabrication.Drilling.sha256.rst", "api/generated/compas_timber.fabrication.Drilling.to_json.rst", "api/generated/compas_timber.fabrication.Drilling.to_jsonstring.rst", "api/generated/compas_timber.fabrication.Drilling.validate_data.rst", "api/generated/compas_timber.fabrication.EdgePositionType.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.ToString.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.add_subprocessing.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.apply.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.copy.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.frame_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_beam_beam_and_plane.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_json.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_jsonstring.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.lap_volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.sha256.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.to_json.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.to_jsonstring.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.validate_data.rst", "api/generated/compas_timber.fabrication.JackRafterCut.rst", "api/generated/compas_timber.fabrication.JackRafterCut.ToString.rst", "api/generated/compas_timber.fabrication.JackRafterCut.add_subprocessing.rst", "api/generated/compas_timber.fabrication.JackRafterCut.apply.rst", "api/generated/compas_timber.fabrication.JackRafterCut.copy.rst", "api/generated/compas_timber.fabrication.JackRafterCut.from_json.rst", "api/generated/compas_timber.fabrication.JackRafterCut.from_jsonstring.rst", "api/generated/compas_timber.fabrication.JackRafterCut.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.JackRafterCut.from_shapes_and_element.rst", "api/generated/compas_timber.fabrication.JackRafterCut.plane_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.JackRafterCut.sha256.rst", "api/generated/compas_timber.fabrication.JackRafterCut.to_json.rst", "api/generated/compas_timber.fabrication.JackRafterCut.to_jsonstring.rst", "api/generated/compas_timber.fabrication.JackRafterCut.validate_data.rst", "api/generated/compas_timber.fabrication.Lap.rst", "api/generated/compas_timber.fabrication.Lap.ToString.rst", "api/generated/compas_timber.fabrication.Lap.add_subprocessing.rst", "api/generated/compas_timber.fabrication.Lap.apply.rst", "api/generated/compas_timber.fabrication.Lap.copy.rst", "api/generated/compas_timber.fabrication.Lap.from_json.rst", "api/generated/compas_timber.fabrication.Lap.from_jsonstring.rst", "api/generated/compas_timber.fabrication.Lap.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.Lap.planes_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.Lap.sha256.rst", "api/generated/compas_timber.fabrication.Lap.to_json.rst", "api/generated/compas_timber.fabrication.Lap.to_jsonstring.rst", "api/generated/compas_timber.fabrication.Lap.validate_data.rst", "api/generated/compas_timber.fabrication.Lap.volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.LimitationTopType.rst", "api/generated/compas_timber.fabrication.MachiningLimits.rst", "api/generated/compas_timber.fabrication.Mortise.rst", "api/generated/compas_timber.fabrication.Mortise.ToString.rst", "api/generated/compas_timber.fabrication.Mortise.add_subprocessing.rst", "api/generated/compas_timber.fabrication.Mortise.apply.rst", "api/generated/compas_timber.fabrication.Mortise.copy.rst", "api/generated/compas_timber.fabrication.Mortise.frame_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.Mortise.from_frame_and_beam.rst", "api/generated/compas_timber.fabrication.Mortise.from_json.rst", "api/generated/compas_timber.fabrication.Mortise.from_jsonstring.rst", "api/generated/compas_timber.fabrication.Mortise.sha256.rst", "api/generated/compas_timber.fabrication.Mortise.to_json.rst", "api/generated/compas_timber.fabrication.Mortise.to_jsonstring.rst", "api/generated/compas_timber.fabrication.Mortise.validate_data.rst", "api/generated/compas_timber.fabrication.Mortise.volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.OrientationType.rst", "api/generated/compas_timber.fabrication.Slot.rst", "api/generated/compas_timber.fabrication.Slot.ToString.rst", "api/generated/compas_timber.fabrication.Slot.add_subprocessing.rst", "api/generated/compas_timber.fabrication.Slot.apply.rst", "api/generated/compas_timber.fabrication.Slot.copy.rst", "api/generated/compas_timber.fabrication.Slot.from_json.rst", "api/generated/compas_timber.fabrication.Slot.from_jsonstring.rst", "api/generated/compas_timber.fabrication.Slot.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.Slot.sha256.rst", "api/generated/compas_timber.fabrication.Slot.to_json.rst", "api/generated/compas_timber.fabrication.Slot.to_jsonstring.rst", "api/generated/compas_timber.fabrication.Slot.validate_data.rst", "api/generated/compas_timber.fabrication.StepJoint.rst", "api/generated/compas_timber.fabrication.StepJoint.ToString.rst", "api/generated/compas_timber.fabrication.StepJoint.add_subprocessing.rst", "api/generated/compas_timber.fabrication.StepJoint.add_tenon.rst", "api/generated/compas_timber.fabrication.StepJoint.apply.rst", "api/generated/compas_timber.fabrication.StepJoint.copy.rst", "api/generated/compas_timber.fabrication.StepJoint.from_json.rst", "api/generated/compas_timber.fabrication.StepJoint.from_jsonstring.rst", "api/generated/compas_timber.fabrication.StepJoint.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.StepJoint.planes_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.StepJoint.sha256.rst", "api/generated/compas_timber.fabrication.StepJoint.tenon_volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.StepJoint.to_json.rst", "api/generated/compas_timber.fabrication.StepJoint.to_jsonstring.rst", "api/generated/compas_timber.fabrication.StepJoint.validate_data.rst", "api/generated/compas_timber.fabrication.StepJointNotch.rst", "api/generated/compas_timber.fabrication.StepJointNotch.ToString.rst", "api/generated/compas_timber.fabrication.StepJointNotch.add_mortise.rst", "api/generated/compas_timber.fabrication.StepJointNotch.add_subprocessing.rst", "api/generated/compas_timber.fabrication.StepJointNotch.apply.rst", "api/generated/compas_timber.fabrication.StepJointNotch.copy.rst", "api/generated/compas_timber.fabrication.StepJointNotch.from_json.rst", "api/generated/compas_timber.fabrication.StepJointNotch.from_jsonstring.rst", "api/generated/compas_timber.fabrication.StepJointNotch.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.StepJointNotch.mortise_volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.StepJointNotch.planes_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.StepJointNotch.sha256.rst", "api/generated/compas_timber.fabrication.StepJointNotch.to_json.rst", "api/generated/compas_timber.fabrication.StepJointNotch.to_jsonstring.rst", "api/generated/compas_timber.fabrication.StepJointNotch.validate_data.rst", "api/generated/compas_timber.fabrication.StepShapeType.rst", "api/generated/compas_timber.fabrication.Tenon.rst", "api/generated/compas_timber.fabrication.Tenon.ToString.rst", "api/generated/compas_timber.fabrication.Tenon.add_subprocessing.rst", "api/generated/compas_timber.fabrication.Tenon.apply.rst", "api/generated/compas_timber.fabrication.Tenon.copy.rst", "api/generated/compas_timber.fabrication.Tenon.frame_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.Tenon.from_json.rst", "api/generated/compas_timber.fabrication.Tenon.from_jsonstring.rst", "api/generated/compas_timber.fabrication.Tenon.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.Tenon.sha256.rst", "api/generated/compas_timber.fabrication.Tenon.to_json.rst", "api/generated/compas_timber.fabrication.Tenon.to_jsonstring.rst", "api/generated/compas_timber.fabrication.Tenon.validate_data.rst", "api/generated/compas_timber.fabrication.Tenon.volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.TenonShapeType.rst", "api/generated/compas_timber.ghpython.add_gh_param.rst", "api/generated/compas_timber.ghpython.clear_gh_params.rst", "api/generated/compas_timber.ghpython.get_leaf_subclasses.rst", "api/generated/compas_timber.ghpython.item_input_valid.rst", "api/generated/compas_timber.ghpython.list_input_valid.rst", "api/generated/compas_timber.ghpython.manage_dynamic_params.rst", "api/generated/compas_timber.ghpython.rename_gh_input.rst", "api/generated/compas_timber.model.TimberModel.rst", "api/generated/compas_timber.model.TimberModel.ToString.rst", "api/generated/compas_timber.model.TimberModel.add_element.rst", "api/generated/compas_timber.model.TimberModel.add_elements.rst", "api/generated/compas_timber.model.TimberModel.add_group.rst", "api/generated/compas_timber.model.TimberModel.add_group_element.rst", "api/generated/compas_timber.model.TimberModel.add_interaction.rst", "api/generated/compas_timber.model.TimberModel.add_joint.rst", "api/generated/compas_timber.model.TimberModel.add_material.rst", "api/generated/compas_timber.model.TimberModel.assign_material.rst", "api/generated/compas_timber.model.TimberModel.compute_aabb.rst", "api/generated/compas_timber.model.TimberModel.compute_obb.rst", "api/generated/compas_timber.model.TimberModel.connect_adjacent_walls.rst", "api/generated/compas_timber.model.TimberModel.copy.rst", "api/generated/compas_timber.model.TimberModel.element_by_guid.rst", "api/generated/compas_timber.model.TimberModel.elements.rst", "api/generated/compas_timber.model.TimberModel.elements_connected_by.rst", "api/generated/compas_timber.model.TimberModel.from_json.rst", "api/generated/compas_timber.model.TimberModel.from_jsonstring.rst", "api/generated/compas_timber.model.TimberModel.get_elements_in_group.rst", "api/generated/compas_timber.model.TimberModel.get_interactions_for_element.rst", "api/generated/compas_timber.model.TimberModel.has_element.rst", "api/generated/compas_timber.model.TimberModel.has_group.rst", "api/generated/compas_timber.model.TimberModel.has_interaction.rst", "api/generated/compas_timber.model.TimberModel.has_material.rst", "api/generated/compas_timber.model.TimberModel.interactions.rst", "api/generated/compas_timber.model.TimberModel.materials.rst", "api/generated/compas_timber.model.TimberModel.process_joinery.rst", "api/generated/compas_timber.model.TimberModel.remove_element.rst", "api/generated/compas_timber.model.TimberModel.remove_interaction.rst", "api/generated/compas_timber.model.TimberModel.remove_joint.rst", "api/generated/compas_timber.model.TimberModel.rotate.rst", "api/generated/compas_timber.model.TimberModel.rotated.rst", "api/generated/compas_timber.model.TimberModel.scale.rst", "api/generated/compas_timber.model.TimberModel.scaled.rst", "api/generated/compas_timber.model.TimberModel.set_topologies.rst", "api/generated/compas_timber.model.TimberModel.sha256.rst", "api/generated/compas_timber.model.TimberModel.to_json.rst", "api/generated/compas_timber.model.TimberModel.to_jsonstring.rst", "api/generated/compas_timber.model.TimberModel.transform.rst", "api/generated/compas_timber.model.TimberModel.transform_numpy.rst", "api/generated/compas_timber.model.TimberModel.transformed.rst", "api/generated/compas_timber.model.TimberModel.transformed_numpy.rst", "api/generated/compas_timber.model.TimberModel.translate.rst", "api/generated/compas_timber.model.TimberModel.translated.rst", "api/generated/compas_timber.model.TimberModel.validate_data.rst", "api/generated/compas_timber.planning.Actor.rst", "api/generated/compas_timber.planning.Actor.get_name.rst", "api/generated/compas_timber.planning.BuildingPlan.rst", "api/generated/compas_timber.planning.BuildingPlan.ToString.rst", "api/generated/compas_timber.planning.BuildingPlan.add_step.rst", "api/generated/compas_timber.planning.BuildingPlan.copy.rst", "api/generated/compas_timber.planning.BuildingPlan.from_json.rst", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.sha256.rst", "api/generated/compas_timber.planning.BuildingPlan.to_json.rst", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.validate_data.rst", "api/generated/compas_timber.planning.BuildingPlanParser.rst", "api/generated/compas_timber.planning.BuildingPlanParser.parse.rst", "api/generated/compas_timber.planning.BuildingPlanParser.serialize.rst", "api/generated/compas_timber.planning.Instruction.rst", "api/generated/compas_timber.planning.Instruction.ToString.rst", "api/generated/compas_timber.planning.Instruction.copy.rst", "api/generated/compas_timber.planning.Instruction.from_json.rst", "api/generated/compas_timber.planning.Instruction.from_jsonstring.rst", "api/generated/compas_timber.planning.Instruction.sha256.rst", "api/generated/compas_timber.planning.Instruction.to_json.rst", "api/generated/compas_timber.planning.Instruction.to_jsonstring.rst", "api/generated/compas_timber.planning.Instruction.transform.rst", "api/generated/compas_timber.planning.Instruction.validate_data.rst", "api/generated/compas_timber.planning.LinearDimension.rst", "api/generated/compas_timber.planning.LinearDimension.ToString.rst", "api/generated/compas_timber.planning.LinearDimension.copy.rst", "api/generated/compas_timber.planning.LinearDimension.from_json.rst", "api/generated/compas_timber.planning.LinearDimension.from_jsonstring.rst", "api/generated/compas_timber.planning.LinearDimension.sha256.rst", "api/generated/compas_timber.planning.LinearDimension.to_json.rst", "api/generated/compas_timber.planning.LinearDimension.to_jsonstring.rst", "api/generated/compas_timber.planning.LinearDimension.transform.rst", "api/generated/compas_timber.planning.LinearDimension.validate_data.rst", "api/generated/compas_timber.planning.Model3d.rst", "api/generated/compas_timber.planning.Model3d.ToString.rst", "api/generated/compas_timber.planning.Model3d.copy.rst", "api/generated/compas_timber.planning.Model3d.from_json.rst", "api/generated/compas_timber.planning.Model3d.from_jsonstring.rst", "api/generated/compas_timber.planning.Model3d.sha256.rst", "api/generated/compas_timber.planning.Model3d.to_json.rst", "api/generated/compas_timber.planning.Model3d.to_jsonstring.rst", "api/generated/compas_timber.planning.Model3d.transform.rst", "api/generated/compas_timber.planning.Model3d.validate_data.rst", "api/generated/compas_timber.planning.SimpleSequenceGenerator.rst", "api/generated/compas_timber.planning.Step.rst", "api/generated/compas_timber.planning.Step.ToString.rst", "api/generated/compas_timber.planning.Step.copy.rst", "api/generated/compas_timber.planning.Step.from_json.rst", "api/generated/compas_timber.planning.Step.from_jsonstring.rst", "api/generated/compas_timber.planning.Step.sha256.rst", "api/generated/compas_timber.planning.Step.to_json.rst", "api/generated/compas_timber.planning.Step.to_jsonstring.rst", "api/generated/compas_timber.planning.Step.transform.rst", "api/generated/compas_timber.planning.Step.validate_data.rst", "api/generated/compas_timber.planning.Text3d.rst", "api/generated/compas_timber.planning.Text3d.ToString.rst", "api/generated/compas_timber.planning.Text3d.copy.rst", "api/generated/compas_timber.planning.Text3d.from_json.rst", "api/generated/compas_timber.planning.Text3d.from_jsonstring.rst", "api/generated/compas_timber.planning.Text3d.sha256.rst", "api/generated/compas_timber.planning.Text3d.to_json.rst", "api/generated/compas_timber.planning.Text3d.to_jsonstring.rst", "api/generated/compas_timber.planning.Text3d.transform.rst", "api/generated/compas_timber.planning.Text3d.validate_data.rst", "api/generated/compas_timber.rhino.find_neighboring_elements.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "license.rst", "tutorials.rst", "tutorials/BTLx_contribution_guide.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beams.rst", "tutorials/grasshopper/design.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/fabrication.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joint_rules.rst", "tutorials/grasshopper/model.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "indexentries": {"actor (class in compas_timber.planning)": [[742, "compas_timber.planning.Actor", false]], "add_blank_extension() (compas_timber.elements.beam method)": [[370, "compas_timber.elements.Beam.add_blank_extension", false]], "add_element() (compas_timber.model.timbermodel method)": [[698, "compas_timber.model.TimberModel.add_element", false]], "add_elements() (compas_timber.model.timbermodel method)": [[699, "compas_timber.model.TimberModel.add_elements", false]], "add_extensions() (compas_timber.connections.ballnodejoint method)": [[12, "compas_timber.connections.BallNodeJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.joint method)": [[33, "compas_timber.connections.Joint.add_extensions", false]], "add_extensions() (compas_timber.connections.lapjoint method)": [[126, "compas_timber.connections.LapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lbuttjoint method)": [[52, "compas_timber.connections.LButtJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lfrenchridgelapjoint method)": [[70, "compas_timber.connections.LFrenchRidgeLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.llapjoint method)": [[89, "compas_timber.connections.LLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lmiterjoint method)": [[108, "compas_timber.connections.LMiterJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.nulljoint method)": [[145, "compas_timber.connections.NullJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tbirdsmouthjoint method)": [[162, "compas_timber.connections.TBirdsmouthJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tbuttjoint method)": [[179, "compas_timber.connections.TButtJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tdovetailjoint method)": [[196, "compas_timber.connections.TDovetailJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tenonmortisejoint method)": [[251, "compas_timber.connections.TenonMortiseJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tlapjoint method)": [[214, "compas_timber.connections.TLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tstepjoint method)": [[233, "compas_timber.connections.TStepJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.xlapjoint method)": [[269, "compas_timber.connections.XLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.ybuttjoint method)": [[288, "compas_timber.connections.YButtJoint.add_extensions", false]], "add_fastener_error() (compas_timber.design.debuginfomation method)": [[318, "compas_timber.design.DebugInfomation.add_fastener_error", false]], "add_feature() (compas_timber.elements.beam method)": [[371, "compas_timber.elements.Beam.add_feature", false]], "add_feature() (compas_timber.elements.fastener method)": [[399, "compas_timber.elements.Fastener.add_feature", false]], "add_feature() (compas_timber.elements.plate method)": [[429, "compas_timber.elements.Plate.add_feature", false]], "add_feature() (compas_timber.elements.timberelement method)": [[451, "compas_timber.elements.TimberElement.add_feature", false]], "add_feature() (compas_timber.elements.wall method)": [[471, "compas_timber.elements.Wall.add_feature", false]], "add_feature_error() (compas_timber.design.debuginfomation method)": [[319, "compas_timber.design.DebugInfomation.add_feature_error", false]], "add_features() (compas_timber.connections.ballnodejoint method)": [[13, "compas_timber.connections.BallNodeJoint.add_features", false]], "add_features() (compas_timber.connections.joint method)": [[34, "compas_timber.connections.Joint.add_features", false]], "add_features() (compas_timber.connections.lapjoint method)": [[127, "compas_timber.connections.LapJoint.add_features", false]], "add_features() (compas_timber.connections.lbuttjoint method)": [[53, "compas_timber.connections.LButtJoint.add_features", false]], "add_features() (compas_timber.connections.lfrenchridgelapjoint method)": [[71, "compas_timber.connections.LFrenchRidgeLapJoint.add_features", false]], "add_features() (compas_timber.connections.llapjoint method)": [[90, "compas_timber.connections.LLapJoint.add_features", false]], "add_features() (compas_timber.connections.lmiterjoint method)": [[109, "compas_timber.connections.LMiterJoint.add_features", false]], "add_features() (compas_timber.connections.nulljoint method)": [[146, "compas_timber.connections.NullJoint.add_features", false]], "add_features() (compas_timber.connections.tbirdsmouthjoint method)": [[163, "compas_timber.connections.TBirdsmouthJoint.add_features", false]], "add_features() (compas_timber.connections.tbuttjoint method)": [[180, "compas_timber.connections.TButtJoint.add_features", false]], "add_features() (compas_timber.connections.tdovetailjoint method)": [[197, "compas_timber.connections.TDovetailJoint.add_features", false]], "add_features() (compas_timber.connections.tenonmortisejoint method)": [[252, "compas_timber.connections.TenonMortiseJoint.add_features", false]], "add_features() (compas_timber.connections.tlapjoint method)": [[215, "compas_timber.connections.TLapJoint.add_features", false]], "add_features() (compas_timber.connections.tstepjoint method)": [[234, "compas_timber.connections.TStepJoint.add_features", false]], "add_features() (compas_timber.connections.xlapjoint method)": [[270, "compas_timber.connections.XLapJoint.add_features", false]], "add_features() (compas_timber.connections.ybuttjoint method)": [[289, "compas_timber.connections.YButtJoint.add_features", false]], "add_features() (compas_timber.elements.beam method)": [[372, "compas_timber.elements.Beam.add_features", false]], "add_features() (compas_timber.elements.plate method)": [[430, "compas_timber.elements.Plate.add_features", false]], "add_gh_param() (in module compas_timber.ghpython)": [[689, "compas_timber.ghpython.add_gh_param", false]], "add_group() (compas_timber.model.timbermodel method)": [[700, "compas_timber.model.TimberModel.add_group", false]], "add_group_element() (compas_timber.model.timbermodel method)": [[701, "compas_timber.model.TimberModel.add_group_element", false]], "add_interaction() (compas_timber.model.timbermodel method)": [[702, "compas_timber.model.TimberModel.add_interaction", false]], "add_joint() (compas_timber.model.timbermodel method)": [[703, "compas_timber.model.TimberModel.add_joint", false]], "add_joint_error() (compas_timber.design.debuginfomation method)": [[320, "compas_timber.design.DebugInfomation.add_joint_error", false]], "add_material() (compas_timber.model.timbermodel method)": [[704, "compas_timber.model.TimberModel.add_material", false]], "add_mortise() (compas_timber.fabrication.stepjointnotch method)": [[660, "compas_timber.fabrication.StepJointNotch.add_mortise", false]], "add_step() (compas_timber.planning.buildingplan method)": [[746, "compas_timber.planning.BuildingPlan.add_step", false]], "add_subprocessing() (compas_timber.fabrication.btlxprocessing method)": [[500, "compas_timber.fabrication.BTLxProcessing.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.doublecut method)": [[513, "compas_timber.fabrication.DoubleCut.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.dovetailmortise method)": [[527, "compas_timber.fabrication.DovetailMortise.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.dovetailtenon method)": [[543, "compas_timber.fabrication.DovetailTenon.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.drilling method)": [[559, "compas_timber.fabrication.Drilling.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.frenchridgelap method)": [[574, "compas_timber.fabrication.FrenchRidgeLap.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.jackraftercut method)": [[588, "compas_timber.fabrication.JackRafterCut.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.lap method)": [[602, "compas_timber.fabrication.Lap.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.mortise method)": [[618, "compas_timber.fabrication.Mortise.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.slot method)": [[633, "compas_timber.fabrication.Slot.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.stepjoint method)": [[645, "compas_timber.fabrication.StepJoint.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.stepjointnotch method)": [[661, "compas_timber.fabrication.StepJointNotch.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.tenon method)": [[676, "compas_timber.fabrication.Tenon.add_subprocessing", false]], "add_tenon() (compas_timber.fabrication.stepjoint method)": [[646, "compas_timber.fabrication.StepJoint.add_tenon", false]], "apply() (compas_timber.fabrication.doublecut method)": [[514, "compas_timber.fabrication.DoubleCut.apply", false]], "apply() (compas_timber.fabrication.dovetailmortise method)": [[528, "compas_timber.fabrication.DovetailMortise.apply", false]], "apply() (compas_timber.fabrication.dovetailtenon method)": [[544, "compas_timber.fabrication.DovetailTenon.apply", false]], "apply() (compas_timber.fabrication.drilling method)": [[560, "compas_timber.fabrication.Drilling.apply", false]], "apply() (compas_timber.fabrication.frenchridgelap method)": [[575, "compas_timber.fabrication.FrenchRidgeLap.apply", false]], "apply() (compas_timber.fabrication.jackraftercut method)": [[589, "compas_timber.fabrication.JackRafterCut.apply", false]], "apply() (compas_timber.fabrication.lap method)": [[603, "compas_timber.fabrication.Lap.apply", false]], "apply() (compas_timber.fabrication.mortise method)": [[619, "compas_timber.fabrication.Mortise.apply", false]], "apply() (compas_timber.fabrication.slot method)": [[634, "compas_timber.fabrication.Slot.apply", false]], "apply() (compas_timber.fabrication.stepjoint method)": [[647, "compas_timber.fabrication.StepJoint.apply", false]], "apply() (compas_timber.fabrication.stepjointnotch method)": [[662, "compas_timber.fabrication.StepJointNotch.apply", false]], "apply() (compas_timber.fabrication.tenon method)": [[677, "compas_timber.fabrication.Tenon.apply", false]], "assign_material() (compas_timber.model.timbermodel method)": [[705, "compas_timber.model.TimberModel.assign_material", false]], "ballnodejoint (class in compas_timber.connections)": [[10, "compas_timber.connections.BallNodeJoint", false]], "beam (class in compas_timber.elements)": [[368, "compas_timber.elements.Beam", false]], "beam_category_names() (compas_timber.design.surfacemodel class method)": [[342, "compas_timber.design.SurfaceModel.beam_category_names", false]], "beamjoiningerror": [[492, "compas_timber.errors.BeamJoiningError", false]], "btlxpart (class in compas_timber.fabrication)": [[495, "compas_timber.fabrication.BTLxPart", false]], "btlxprocessing (class in compas_timber.fabrication)": [[498, "compas_timber.fabrication.BTLxProcessing", false]], "btlxwriter (class in compas_timber.fabrication)": [[508, "compas_timber.fabrication.BTLxWriter", false]], "buildingplan (class in compas_timber.planning)": [[744, "compas_timber.planning.BuildingPlan", false]], "buildingplanparser (class in compas_timber.planning)": [[754, "compas_timber.planning.BuildingPlanParser", false]], "categoryrule (class in compas_timber.design)": [[308, "compas_timber.design.CategoryRule", false]], "check_beam_compatibility() (compas_timber.connections.ybuttjoint method)": [[290, "compas_timber.connections.YButtJoint.check_beam_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.ballnodejoint method)": [[14, "compas_timber.connections.BallNodeJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.joint method)": [[35, "compas_timber.connections.Joint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.lapjoint method)": [[128, "compas_timber.connections.LapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.lbuttjoint method)": [[54, "compas_timber.connections.LButtJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.lfrenchridgelapjoint method)": [[72, "compas_timber.connections.LFrenchRidgeLapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.llapjoint method)": [[91, "compas_timber.connections.LLapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.lmiterjoint method)": [[110, "compas_timber.connections.LMiterJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.nulljoint method)": [[147, "compas_timber.connections.NullJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tbirdsmouthjoint method)": [[164, "compas_timber.connections.TBirdsmouthJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tbuttjoint method)": [[181, "compas_timber.connections.TButtJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tdovetailjoint method)": [[198, "compas_timber.connections.TDovetailJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tenonmortisejoint method)": [[253, "compas_timber.connections.TenonMortiseJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tlapjoint method)": [[216, "compas_timber.connections.TLapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tstepjoint method)": [[235, "compas_timber.connections.TStepJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.xlapjoint method)": [[271, "compas_timber.connections.XLapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.ybuttjoint method)": [[291, "compas_timber.connections.YButtJoint.check_elements_compatibility", false]], "clear_gh_params() (in module compas_timber.ghpython)": [[690, "compas_timber.ghpython.clear_gh_params", false]], "comply() (compas_timber.design.categoryrule method)": [[310, "compas_timber.design.CategoryRule.comply", false]], "comply() (compas_timber.design.directrule method)": [[323, "compas_timber.design.DirectRule.comply", false]], "comply() (compas_timber.design.jointrule method)": [[336, "compas_timber.design.JointRule.comply", false]], "comply() (compas_timber.design.topologyrule method)": [[361, "compas_timber.design.TopologyRule.comply", false]], "compute_aabb() (compas_timber.elements.beam method)": [[373, "compas_timber.elements.Beam.compute_aabb", false]], "compute_aabb() (compas_timber.elements.fastener method)": [[400, "compas_timber.elements.Fastener.compute_aabb", false]], "compute_aabb() (compas_timber.elements.plate method)": [[431, "compas_timber.elements.Plate.compute_aabb", false]], "compute_aabb() (compas_timber.elements.timberelement method)": [[452, "compas_timber.elements.TimberElement.compute_aabb", false]], "compute_aabb() (compas_timber.elements.wall method)": [[472, "compas_timber.elements.Wall.compute_aabb", false]], "compute_aabb() (compas_timber.model.timbermodel method)": [[706, "compas_timber.model.TimberModel.compute_aabb", false]], "compute_collision_mesh() (compas_timber.elements.beam method)": [[374, "compas_timber.elements.Beam.compute_collision_mesh", false]], "compute_collision_mesh() (compas_timber.elements.fastener method)": [[401, "compas_timber.elements.Fastener.compute_collision_mesh", false]], "compute_collision_mesh() (compas_timber.elements.plate method)": [[432, "compas_timber.elements.Plate.compute_collision_mesh", false]], "compute_collision_mesh() (compas_timber.elements.timberelement method)": [[453, "compas_timber.elements.TimberElement.compute_collision_mesh", false]], "compute_collision_mesh() (compas_timber.elements.wall method)": [[473, "compas_timber.elements.Wall.compute_collision_mesh", false]], "compute_geometry() (compas_timber.elements.beam method)": [[375, "compas_timber.elements.Beam.compute_geometry", false]], "compute_geometry() (compas_timber.elements.fastener method)": [[402, "compas_timber.elements.Fastener.compute_geometry", false]], "compute_geometry() (compas_timber.elements.plate method)": [[433, "compas_timber.elements.Plate.compute_geometry", false]], "compute_geometry() (compas_timber.elements.timberelement method)": [[454, "compas_timber.elements.TimberElement.compute_geometry", false]], "compute_geometry() (compas_timber.elements.wall method)": [[474, "compas_timber.elements.Wall.compute_geometry", false]], "compute_obb() (compas_timber.elements.beam method)": [[376, "compas_timber.elements.Beam.compute_obb", false]], "compute_obb() (compas_timber.elements.fastener method)": [[403, "compas_timber.elements.Fastener.compute_obb", false]], "compute_obb() (compas_timber.elements.plate method)": [[434, "compas_timber.elements.Plate.compute_obb", false]], "compute_obb() (compas_timber.elements.timberelement method)": [[455, "compas_timber.elements.TimberElement.compute_obb", false]], "compute_obb() (compas_timber.elements.wall method)": [[475, "compas_timber.elements.Wall.compute_obb", false]], "compute_obb() (compas_timber.model.timbermodel method)": [[707, "compas_timber.model.TimberModel.compute_obb", false]], "compute_worldtransformation() (compas_timber.elements.beam method)": [[377, "compas_timber.elements.Beam.compute_worldtransformation", false]], "compute_worldtransformation() (compas_timber.elements.fastener method)": [[404, "compas_timber.elements.Fastener.compute_worldtransformation", false]], "compute_worldtransformation() (compas_timber.elements.plate method)": [[435, "compas_timber.elements.Plate.compute_worldtransformation", false]], "compute_worldtransformation() (compas_timber.elements.timberelement method)": [[456, "compas_timber.elements.TimberElement.compute_worldtransformation", false]], "compute_worldtransformation() (compas_timber.elements.wall method)": [[476, "compas_timber.elements.Wall.compute_worldtransformation", false]], "connect_adjacent_walls() (compas_timber.model.timbermodel method)": [[708, "compas_timber.model.TimberModel.connect_adjacent_walls", false]], "connectionsolver (class in compas_timber.connections)": [[27, "compas_timber.connections.ConnectionSolver", false]], "contains() (compas_timber.design.directrule method)": [[324, "compas_timber.design.DirectRule.contains", false]], "copy() (compas_timber.connections.ballnodejoint method)": [[15, "compas_timber.connections.BallNodeJoint.copy", false]], "copy() (compas_timber.connections.joint method)": [[36, "compas_timber.connections.Joint.copy", false]], "copy() (compas_timber.connections.lapjoint method)": [[129, "compas_timber.connections.LapJoint.copy", false]], "copy() (compas_timber.connections.lbuttjoint method)": [[55, "compas_timber.connections.LButtJoint.copy", false]], "copy() (compas_timber.connections.lfrenchridgelapjoint method)": [[73, "compas_timber.connections.LFrenchRidgeLapJoint.copy", false]], "copy() (compas_timber.connections.llapjoint method)": [[92, "compas_timber.connections.LLapJoint.copy", false]], "copy() (compas_timber.connections.lmiterjoint method)": [[111, "compas_timber.connections.LMiterJoint.copy", false]], "copy() (compas_timber.connections.nulljoint method)": [[148, "compas_timber.connections.NullJoint.copy", false]], "copy() (compas_timber.connections.tbirdsmouthjoint method)": [[165, "compas_timber.connections.TBirdsmouthJoint.copy", false]], "copy() (compas_timber.connections.tbuttjoint method)": [[182, "compas_timber.connections.TButtJoint.copy", false]], "copy() (compas_timber.connections.tdovetailjoint method)": [[199, "compas_timber.connections.TDovetailJoint.copy", false]], "copy() (compas_timber.connections.tenonmortisejoint method)": [[254, "compas_timber.connections.TenonMortiseJoint.copy", false]], "copy() (compas_timber.connections.tlapjoint method)": [[217, "compas_timber.connections.TLapJoint.copy", false]], "copy() (compas_timber.connections.tstepjoint method)": [[236, "compas_timber.connections.TStepJoint.copy", false]], "copy() (compas_timber.connections.xlapjoint method)": [[272, "compas_timber.connections.XLapJoint.copy", false]], "copy() (compas_timber.connections.ybuttjoint method)": [[292, "compas_timber.connections.YButtJoint.copy", false]], "copy() (compas_timber.elements.beam method)": [[378, "compas_timber.elements.Beam.copy", false]], "copy() (compas_timber.elements.fastener method)": [[405, "compas_timber.elements.Fastener.copy", false]], "copy() (compas_timber.elements.fastenertimberinterface method)": [[419, "compas_timber.elements.FastenerTimberInterface.copy", false]], "copy() (compas_timber.elements.plate method)": [[436, "compas_timber.elements.Plate.copy", false]], "copy() (compas_timber.elements.timberelement method)": [[457, "compas_timber.elements.TimberElement.copy", false]], "copy() (compas_timber.elements.wall method)": [[477, "compas_timber.elements.Wall.copy", false]], "copy() (compas_timber.fabrication.btlxprocessing method)": [[501, "compas_timber.fabrication.BTLxProcessing.copy", false]], "copy() (compas_timber.fabrication.doublecut method)": [[515, "compas_timber.fabrication.DoubleCut.copy", false]], "copy() (compas_timber.fabrication.dovetailmortise method)": [[529, "compas_timber.fabrication.DovetailMortise.copy", false]], "copy() (compas_timber.fabrication.dovetailtenon method)": [[545, "compas_timber.fabrication.DovetailTenon.copy", false]], "copy() (compas_timber.fabrication.drilling method)": [[561, "compas_timber.fabrication.Drilling.copy", false]], "copy() (compas_timber.fabrication.frenchridgelap method)": [[576, "compas_timber.fabrication.FrenchRidgeLap.copy", false]], "copy() (compas_timber.fabrication.jackraftercut method)": [[590, "compas_timber.fabrication.JackRafterCut.copy", false]], "copy() (compas_timber.fabrication.lap method)": [[604, "compas_timber.fabrication.Lap.copy", false]], "copy() (compas_timber.fabrication.mortise method)": [[620, "compas_timber.fabrication.Mortise.copy", false]], "copy() (compas_timber.fabrication.slot method)": [[635, "compas_timber.fabrication.Slot.copy", false]], "copy() (compas_timber.fabrication.stepjoint method)": [[648, "compas_timber.fabrication.StepJoint.copy", false]], "copy() (compas_timber.fabrication.stepjointnotch method)": [[663, "compas_timber.fabrication.StepJointNotch.copy", false]], "copy() (compas_timber.fabrication.tenon method)": [[678, "compas_timber.fabrication.Tenon.copy", false]], "copy() (compas_timber.model.timbermodel method)": [[709, "compas_timber.model.TimberModel.copy", false]], "copy() (compas_timber.planning.buildingplan method)": [[747, "compas_timber.planning.BuildingPlan.copy", false]], "copy() (compas_timber.planning.instruction method)": [[759, "compas_timber.planning.Instruction.copy", false]], "copy() (compas_timber.planning.lineardimension method)": [[769, "compas_timber.planning.LinearDimension.copy", false]], "copy() (compas_timber.planning.model3d method)": [[779, "compas_timber.planning.Model3d.copy", false]], "copy() (compas_timber.planning.step method)": [[790, "compas_timber.planning.Step.copy", false]], "copy() (compas_timber.planning.text3d method)": [[800, "compas_timber.planning.Text3d.copy", false]], "create() (compas_timber.connections.ballnodejoint class method)": [[16, "compas_timber.connections.BallNodeJoint.create", false]], "create() (compas_timber.connections.joint class method)": [[37, "compas_timber.connections.Joint.create", false]], "create() (compas_timber.connections.lapjoint class method)": [[130, "compas_timber.connections.LapJoint.create", false]], "create() (compas_timber.connections.lbuttjoint class method)": [[56, "compas_timber.connections.LButtJoint.create", false]], "create() (compas_timber.connections.lfrenchridgelapjoint class method)": [[74, "compas_timber.connections.LFrenchRidgeLapJoint.create", false]], "create() (compas_timber.connections.llapjoint class method)": [[93, "compas_timber.connections.LLapJoint.create", false]], "create() (compas_timber.connections.lmiterjoint class method)": [[112, "compas_timber.connections.LMiterJoint.create", false]], "create() (compas_timber.connections.nulljoint class method)": [[149, "compas_timber.connections.NullJoint.create", false]], "create() (compas_timber.connections.tbirdsmouthjoint class method)": [[166, "compas_timber.connections.TBirdsmouthJoint.create", false]], "create() (compas_timber.connections.tbuttjoint class method)": [[183, "compas_timber.connections.TButtJoint.create", false]], "create() (compas_timber.connections.tdovetailjoint class method)": [[200, "compas_timber.connections.TDovetailJoint.create", false]], "create() (compas_timber.connections.tenonmortisejoint class method)": [[255, "compas_timber.connections.TenonMortiseJoint.create", false]], "create() (compas_timber.connections.tlapjoint class method)": [[218, "compas_timber.connections.TLapJoint.create", false]], "create() (compas_timber.connections.tstepjoint class method)": [[237, "compas_timber.connections.TStepJoint.create", false]], "create() (compas_timber.connections.xlapjoint class method)": [[273, "compas_timber.connections.XLapJoint.create", false]], "create() (compas_timber.connections.ybuttjoint class method)": [[293, "compas_timber.connections.YButtJoint.create", false]], "create_model() (compas_timber.design.surfacemodel method)": [[343, "compas_timber.design.SurfaceModel.create_model", false]], "cross_beam_ref_side_index() (compas_timber.connections.ybuttjoint method)": [[294, "compas_timber.connections.YButtJoint.cross_beam_ref_side_index", false]], "cull_overlaps() (compas_timber.design.surfacemodel method)": [[344, "compas_timber.design.SurfaceModel.cull_overlaps", false]], "cylinder_from_params_and_element() (compas_timber.fabrication.drilling method)": [[562, "compas_timber.fabrication.Drilling.cylinder_from_params_and_element", false]], "debuginfomation (class in compas_timber.design)": [[316, "compas_timber.design.DebugInfomation", false]], "define_dovetail_tool() (compas_timber.connections.tdovetailjoint method)": [[201, "compas_timber.connections.TDovetailJoint.define_dovetail_tool", false]], "define_dovetail_tool() (compas_timber.fabrication.dovetailmortise class method)": [[530, "compas_timber.fabrication.DovetailMortise.define_dovetail_tool", false]], "define_dovetail_tool() (compas_timber.fabrication.dovetailtenon class method)": [[546, "compas_timber.fabrication.DovetailTenon.define_dovetail_tool", false]], "directrule (class in compas_timber.design)": [[321, "compas_timber.design.DirectRule", false]], "distance_between_elements() (compas_timber.design.surfacemodel method)": [[345, "compas_timber.design.SurfaceModel.distance_between_elements", false]], "doublecut (class in compas_timber.fabrication)": [[511, "compas_timber.fabrication.DoubleCut", false]], "dovetail_cutting_frames_from_params_and_beam() (compas_timber.fabrication.dovetailmortise method)": [[531, "compas_timber.fabrication.DovetailMortise.dovetail_cutting_frames_from_params_and_beam", false]], "dovetail_cutting_frames_from_params_and_beam() (compas_timber.fabrication.dovetailtenon method)": [[547, "compas_timber.fabrication.DovetailTenon.dovetail_cutting_frames_from_params_and_beam", false]], "dovetail_volume_from_params_and_beam() (compas_timber.fabrication.dovetailmortise method)": [[532, "compas_timber.fabrication.DovetailMortise.dovetail_volume_from_params_and_beam", false]], "dovetail_volume_from_params_and_beam() (compas_timber.fabrication.dovetailtenon method)": [[548, "compas_timber.fabrication.DovetailTenon.dovetail_volume_from_params_and_beam", false]], "dovetailmortise (class in compas_timber.fabrication)": [[525, "compas_timber.fabrication.DovetailMortise", false]], "dovetailtenon (class in compas_timber.fabrication)": [[541, "compas_timber.fabrication.DovetailTenon", false]], "drilling (class in compas_timber.fabrication)": [[557, "compas_timber.fabrication.Drilling", false]], "edgepositiontype (class in compas_timber.fabrication)": [[571, "compas_timber.fabrication.EdgePositionType", false]], "element_by_guid() (compas_timber.model.timbermodel method)": [[710, "compas_timber.model.TimberModel.element_by_guid", false]], "element_count_complies() (compas_timber.connections.ballnodejoint class method)": [[17, "compas_timber.connections.BallNodeJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.joint class method)": [[38, "compas_timber.connections.Joint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lapjoint class method)": [[131, "compas_timber.connections.LapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lbuttjoint class method)": [[57, "compas_timber.connections.LButtJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lfrenchridgelapjoint class method)": [[75, "compas_timber.connections.LFrenchRidgeLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.llapjoint class method)": [[94, "compas_timber.connections.LLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lmiterjoint class method)": [[113, "compas_timber.connections.LMiterJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.nulljoint class method)": [[150, "compas_timber.connections.NullJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tbirdsmouthjoint class method)": [[167, "compas_timber.connections.TBirdsmouthJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tbuttjoint class method)": [[184, "compas_timber.connections.TButtJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tdovetailjoint class method)": [[202, "compas_timber.connections.TDovetailJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tenonmortisejoint class method)": [[256, "compas_timber.connections.TenonMortiseJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tlapjoint class method)": [[219, "compas_timber.connections.TLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tstepjoint class method)": [[238, "compas_timber.connections.TStepJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.xlapjoint class method)": [[274, "compas_timber.connections.XLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.ybuttjoint class method)": [[295, "compas_timber.connections.YButtJoint.element_count_complies", false]], "elements() (compas_timber.model.timbermodel method)": [[711, "compas_timber.model.TimberModel.elements", false]], "elements_connected_by() (compas_timber.model.timbermodel method)": [[712, "compas_timber.model.TimberModel.elements_connected_by", false]], "endpoint_closest_to_point() (compas_timber.elements.beam method)": [[379, "compas_timber.elements.Beam.endpoint_closest_to_point", false]], "et_point_vals() (compas_timber.fabrication.btlxpart method)": [[496, "compas_timber.fabrication.BTLxPart.et_point_vals", false]], "extension_to_plane() (compas_timber.elements.beam method)": [[380, "compas_timber.elements.Beam.extension_to_plane", false]], "fastener (class in compas_timber.elements)": [[397, "compas_timber.elements.Fastener", false]], "fastenerapplicationerror": [[493, "compas_timber.errors.FastenerApplicationError", false]], "fastenertimberinterface (class in compas_timber.elements)": [[417, "compas_timber.elements.FastenerTimberInterface", false]], "featureapplicationerror": [[494, "compas_timber.errors.FeatureApplicationError", false]], "featuredefinition (class in compas_timber.design)": [[329, "compas_timber.design.FeatureDefinition", false]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[28, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs", false]], "find_neighboring_elements() (in module compas_timber.connections)": [[307, "compas_timber.connections.find_neighboring_elements", false]], "find_neighboring_elements() (in module compas_timber.rhino)": [[808, "compas_timber.rhino.find_neighboring_elements", false]], "find_topology() (compas_timber.connections.connectionsolver method)": [[29, "compas_timber.connections.ConnectionSolver.find_topology", false]], "find_wall_wall_topology() (compas_timber.connections.connectionsolver method)": [[30, "compas_timber.connections.ConnectionSolver.find_wall_wall_topology", false]], "frame_from_params_and_beam() (compas_timber.fabrication.dovetailmortise method)": [[533, "compas_timber.fabrication.DovetailMortise.frame_from_params_and_beam", false]], "frame_from_params_and_beam() (compas_timber.fabrication.dovetailtenon method)": [[549, "compas_timber.fabrication.DovetailTenon.frame_from_params_and_beam", false]], "frame_from_params_and_beam() (compas_timber.fabrication.frenchridgelap method)": [[577, "compas_timber.fabrication.FrenchRidgeLap.frame_from_params_and_beam", false]], "frame_from_params_and_beam() (compas_timber.fabrication.mortise method)": [[621, "compas_timber.fabrication.Mortise.frame_from_params_and_beam", false]], "frame_from_params_and_beam() (compas_timber.fabrication.tenon method)": [[679, "compas_timber.fabrication.Tenon.frame_from_params_and_beam", false]], "frenchridgelap (class in compas_timber.fabrication)": [[572, "compas_timber.fabrication.FrenchRidgeLap", false]], "from_beam_beam_and_plane() (compas_timber.fabrication.frenchridgelap class method)": [[578, "compas_timber.fabrication.FrenchRidgeLap.from_beam_beam_and_plane", false]], "from_boundary() (compas_timber.elements.wall class method)": [[478, "compas_timber.elements.Wall.from_boundary", false]], "from_brep() (compas_timber.elements.wall class method)": [[479, "compas_timber.elements.Wall.from_brep", false]], "from_centerline() (compas_timber.elements.beam class method)": [[381, "compas_timber.elements.Beam.from_centerline", false]], "from_endpoints() (compas_timber.elements.beam class method)": [[382, "compas_timber.elements.Beam.from_endpoints", false]], "from_frame_and_beam() (compas_timber.fabrication.dovetailmortise class method)": [[534, "compas_timber.fabrication.DovetailMortise.from_frame_and_beam", false]], "from_frame_and_beam() (compas_timber.fabrication.mortise class method)": [[622, "compas_timber.fabrication.Mortise.from_frame_and_beam", false]], "from_json() (compas_timber.connections.ballnodejoint class method)": [[18, "compas_timber.connections.BallNodeJoint.from_json", false]], "from_json() (compas_timber.connections.joint class method)": [[39, "compas_timber.connections.Joint.from_json", false]], "from_json() (compas_timber.connections.lapjoint class method)": [[132, "compas_timber.connections.LapJoint.from_json", false]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[58, "compas_timber.connections.LButtJoint.from_json", false]], "from_json() (compas_timber.connections.lfrenchridgelapjoint class method)": [[76, "compas_timber.connections.LFrenchRidgeLapJoint.from_json", false]], "from_json() (compas_timber.connections.llapjoint class method)": [[95, "compas_timber.connections.LLapJoint.from_json", false]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[114, "compas_timber.connections.LMiterJoint.from_json", false]], "from_json() (compas_timber.connections.nulljoint class method)": [[151, "compas_timber.connections.NullJoint.from_json", false]], "from_json() (compas_timber.connections.tbirdsmouthjoint class method)": [[168, "compas_timber.connections.TBirdsmouthJoint.from_json", false]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[185, "compas_timber.connections.TButtJoint.from_json", false]], "from_json() (compas_timber.connections.tdovetailjoint class method)": [[203, "compas_timber.connections.TDovetailJoint.from_json", false]], "from_json() (compas_timber.connections.tenonmortisejoint class method)": [[257, "compas_timber.connections.TenonMortiseJoint.from_json", false]], "from_json() (compas_timber.connections.tlapjoint class method)": [[220, "compas_timber.connections.TLapJoint.from_json", false]], "from_json() (compas_timber.connections.tstepjoint class method)": [[239, "compas_timber.connections.TStepJoint.from_json", false]], "from_json() (compas_timber.connections.xlapjoint class method)": [[275, "compas_timber.connections.XLapJoint.from_json", false]], "from_json() (compas_timber.connections.ybuttjoint class method)": [[296, "compas_timber.connections.YButtJoint.from_json", false]], "from_json() (compas_timber.elements.beam class method)": [[383, "compas_timber.elements.Beam.from_json", false]], "from_json() (compas_timber.elements.fastener class method)": [[406, "compas_timber.elements.Fastener.from_json", false]], "from_json() (compas_timber.elements.fastenertimberinterface class method)": [[420, "compas_timber.elements.FastenerTimberInterface.from_json", false]], "from_json() (compas_timber.elements.plate class method)": [[437, "compas_timber.elements.Plate.from_json", false]], "from_json() (compas_timber.elements.timberelement class method)": [[458, "compas_timber.elements.TimberElement.from_json", false]], "from_json() (compas_timber.elements.wall class method)": [[480, "compas_timber.elements.Wall.from_json", false]], "from_json() (compas_timber.fabrication.btlxprocessing class method)": [[502, "compas_timber.fabrication.BTLxProcessing.from_json", false]], "from_json() (compas_timber.fabrication.doublecut class method)": [[516, "compas_timber.fabrication.DoubleCut.from_json", false]], "from_json() (compas_timber.fabrication.dovetailmortise class method)": [[535, "compas_timber.fabrication.DovetailMortise.from_json", false]], "from_json() (compas_timber.fabrication.dovetailtenon class method)": [[550, "compas_timber.fabrication.DovetailTenon.from_json", false]], "from_json() (compas_timber.fabrication.drilling class method)": [[563, "compas_timber.fabrication.Drilling.from_json", false]], "from_json() (compas_timber.fabrication.frenchridgelap class method)": [[579, "compas_timber.fabrication.FrenchRidgeLap.from_json", false]], "from_json() (compas_timber.fabrication.jackraftercut class method)": [[591, "compas_timber.fabrication.JackRafterCut.from_json", false]], "from_json() (compas_timber.fabrication.lap class method)": [[605, "compas_timber.fabrication.Lap.from_json", false]], "from_json() (compas_timber.fabrication.mortise class method)": [[623, "compas_timber.fabrication.Mortise.from_json", false]], "from_json() (compas_timber.fabrication.slot class method)": [[636, "compas_timber.fabrication.Slot.from_json", false]], "from_json() (compas_timber.fabrication.stepjoint class method)": [[649, "compas_timber.fabrication.StepJoint.from_json", false]], "from_json() (compas_timber.fabrication.stepjointnotch class method)": [[664, "compas_timber.fabrication.StepJointNotch.from_json", false]], "from_json() (compas_timber.fabrication.tenon class method)": [[680, "compas_timber.fabrication.Tenon.from_json", false]], "from_json() (compas_timber.model.timbermodel class method)": [[713, "compas_timber.model.TimberModel.from_json", false]], "from_json() (compas_timber.planning.buildingplan class method)": [[748, "compas_timber.planning.BuildingPlan.from_json", false]], "from_json() (compas_timber.planning.instruction class method)": [[760, "compas_timber.planning.Instruction.from_json", false]], "from_json() (compas_timber.planning.lineardimension class method)": [[770, "compas_timber.planning.LinearDimension.from_json", false]], "from_json() (compas_timber.planning.model3d class method)": [[780, "compas_timber.planning.Model3d.from_json", false]], "from_json() (compas_timber.planning.step class method)": [[791, "compas_timber.planning.Step.from_json", false]], "from_json() (compas_timber.planning.text3d class method)": [[801, "compas_timber.planning.Text3d.from_json", false]], "from_jsonstring() (compas_timber.connections.ballnodejoint class method)": [[19, "compas_timber.connections.BallNodeJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.joint class method)": [[40, "compas_timber.connections.Joint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lapjoint class method)": [[133, "compas_timber.connections.LapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[59, "compas_timber.connections.LButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lfrenchridgelapjoint class method)": [[77, "compas_timber.connections.LFrenchRidgeLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.llapjoint class method)": [[96, "compas_timber.connections.LLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[115, "compas_timber.connections.LMiterJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.nulljoint class method)": [[152, "compas_timber.connections.NullJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tbirdsmouthjoint class method)": [[169, "compas_timber.connections.TBirdsmouthJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[186, "compas_timber.connections.TButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tdovetailjoint class method)": [[204, "compas_timber.connections.TDovetailJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tenonmortisejoint class method)": [[258, "compas_timber.connections.TenonMortiseJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tlapjoint class method)": [[221, "compas_timber.connections.TLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tstepjoint class method)": [[240, "compas_timber.connections.TStepJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.xlapjoint class method)": [[276, "compas_timber.connections.XLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.ybuttjoint class method)": [[297, "compas_timber.connections.YButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.beam class method)": [[384, "compas_timber.elements.Beam.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.fastener class method)": [[407, "compas_timber.elements.Fastener.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.fastenertimberinterface class method)": [[421, "compas_timber.elements.FastenerTimberInterface.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.plate class method)": [[438, "compas_timber.elements.Plate.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.timberelement class method)": [[459, "compas_timber.elements.TimberElement.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.wall class method)": [[481, "compas_timber.elements.Wall.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.btlxprocessing class method)": [[503, "compas_timber.fabrication.BTLxProcessing.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.doublecut class method)": [[517, "compas_timber.fabrication.DoubleCut.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.dovetailmortise class method)": [[536, "compas_timber.fabrication.DovetailMortise.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.dovetailtenon class method)": [[551, "compas_timber.fabrication.DovetailTenon.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.drilling class method)": [[564, "compas_timber.fabrication.Drilling.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.frenchridgelap class method)": [[580, "compas_timber.fabrication.FrenchRidgeLap.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.jackraftercut class method)": [[592, "compas_timber.fabrication.JackRafterCut.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.lap class method)": [[606, "compas_timber.fabrication.Lap.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.mortise class method)": [[624, "compas_timber.fabrication.Mortise.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.slot class method)": [[637, "compas_timber.fabrication.Slot.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.stepjoint class method)": [[650, "compas_timber.fabrication.StepJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.stepjointnotch class method)": [[665, "compas_timber.fabrication.StepJointNotch.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.tenon class method)": [[681, "compas_timber.fabrication.Tenon.from_jsonstring", false]], "from_jsonstring() (compas_timber.model.timbermodel class method)": [[714, "compas_timber.model.TimberModel.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.buildingplan class method)": [[749, "compas_timber.planning.BuildingPlan.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.instruction class method)": [[761, "compas_timber.planning.Instruction.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.lineardimension class method)": [[771, "compas_timber.planning.LinearDimension.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.model3d class method)": [[781, "compas_timber.planning.Model3d.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.step class method)": [[792, "compas_timber.planning.Step.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.text3d class method)": [[802, "compas_timber.planning.Text3d.from_jsonstring", false]], "from_line_and_element() (compas_timber.fabrication.drilling class method)": [[565, "compas_timber.fabrication.Drilling.from_line_and_element", false]], "from_plane_and_beam() (compas_timber.fabrication.dovetailtenon class method)": [[552, "compas_timber.fabrication.DovetailTenon.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.jackraftercut class method)": [[593, "compas_timber.fabrication.JackRafterCut.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.lap class method)": [[607, "compas_timber.fabrication.Lap.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.slot class method)": [[638, "compas_timber.fabrication.Slot.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.stepjoint class method)": [[651, "compas_timber.fabrication.StepJoint.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.stepjointnotch class method)": [[666, "compas_timber.fabrication.StepJointNotch.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.tenon class method)": [[682, "compas_timber.fabrication.Tenon.from_plane_and_beam", false]], "from_planes_and_beam() (compas_timber.fabrication.doublecut class method)": [[518, "compas_timber.fabrication.DoubleCut.from_planes_and_beam", false]], "from_shapes_and_element() (compas_timber.fabrication.doublecut class method)": [[519, "compas_timber.fabrication.DoubleCut.from_shapes_and_element", false]], "from_shapes_and_element() (compas_timber.fabrication.drilling class method)": [[566, "compas_timber.fabrication.Drilling.from_shapes_and_element", false]], "from_shapes_and_element() (compas_timber.fabrication.jackraftercut class method)": [[594, "compas_timber.fabrication.JackRafterCut.from_shapes_and_element", false]], "generate_frame() (compas_timber.design.surfacemodel method)": [[346, "compas_timber.design.SurfaceModel.generate_frame", false]], "generate_perimeter_beams() (compas_timber.design.surfacemodel method)": [[347, "compas_timber.design.SurfaceModel.generate_perimeter_beams", false]], "generate_plates() (compas_timber.design.surfacemodel method)": [[348, "compas_timber.design.SurfaceModel.generate_plates", false]], "generate_stud_lines() (compas_timber.design.surfacemodel method)": [[349, "compas_timber.design.SurfaceModel.generate_stud_lines", false]], "generate_studs() (compas_timber.design.surfacemodel method)": [[350, "compas_timber.design.SurfaceModel.generate_studs", false]], "generate_windows() (compas_timber.design.surfacemodel method)": [[351, "compas_timber.design.SurfaceModel.generate_windows", false]], "get_beam_intersections() (compas_timber.design.surfacemodel method)": [[352, "compas_timber.design.SurfaceModel.get_beam_intersections", false]], "get_category_rules() (compas_timber.design.categoryrule static method)": [[311, "compas_timber.design.CategoryRule.get_category_rules", false]], "get_category_rules() (compas_timber.design.directrule static method)": [[325, "compas_timber.design.DirectRule.get_category_rules", false]], "get_category_rules() (compas_timber.design.jointrule static method)": [[337, "compas_timber.design.JointRule.get_category_rules", false]], "get_category_rules() (compas_timber.design.topologyrule static method)": [[362, "compas_timber.design.TopologyRule.get_category_rules", false]], "get_cross_cutting_frame() (compas_timber.connections.lapjoint method)": [[134, "compas_timber.connections.LapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.lfrenchridgelapjoint method)": [[78, "compas_timber.connections.LFrenchRidgeLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.llapjoint method)": [[97, "compas_timber.connections.LLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.tlapjoint method)": [[222, "compas_timber.connections.TLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.xlapjoint method)": [[277, "compas_timber.connections.XLapJoint.get_cross_cutting_frame", false]], "get_cutting_planes() (compas_timber.connections.lmiterjoint method)": [[116, "compas_timber.connections.LMiterJoint.get_cutting_planes", false]], "get_dimensions_relative_to_side() (compas_timber.elements.beam method)": [[385, "compas_timber.elements.Beam.get_dimensions_relative_to_side", false]], "get_direct_rules() (compas_timber.design.categoryrule static method)": [[312, "compas_timber.design.CategoryRule.get_direct_rules", false]], "get_direct_rules() (compas_timber.design.directrule static method)": [[326, "compas_timber.design.DirectRule.get_direct_rules", false]], "get_direct_rules() (compas_timber.design.jointrule static method)": [[338, "compas_timber.design.JointRule.get_direct_rules", false]], "get_direct_rules() (compas_timber.design.topologyrule static method)": [[363, "compas_timber.design.TopologyRule.get_direct_rules", false]], "get_elements_in_group() (compas_timber.model.timbermodel method)": [[715, "compas_timber.model.TimberModel.get_elements_in_group", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.ballnodejoint static method)": [[20, "compas_timber.connections.BallNodeJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.joint static method)": [[41, "compas_timber.connections.Joint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lapjoint static method)": [[135, "compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lbuttjoint static method)": [[60, "compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lfrenchridgelapjoint static method)": [[79, "compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.llapjoint static method)": [[98, "compas_timber.connections.LLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lmiterjoint static method)": [[117, "compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.nulljoint static method)": [[153, "compas_timber.connections.NullJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tbirdsmouthjoint static method)": [[170, "compas_timber.connections.TBirdsmouthJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tbuttjoint static method)": [[187, "compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tdovetailjoint static method)": [[205, "compas_timber.connections.TDovetailJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tenonmortisejoint static method)": [[259, "compas_timber.connections.TenonMortiseJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tlapjoint static method)": [[223, "compas_timber.connections.TLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tstepjoint static method)": [[241, "compas_timber.connections.TStepJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.xlapjoint static method)": [[278, "compas_timber.connections.XLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.ybuttjoint static method)": [[298, "compas_timber.connections.YButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.ballnodejoint static method)": [[21, "compas_timber.connections.BallNodeJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.joint static method)": [[42, "compas_timber.connections.Joint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lapjoint static method)": [[136, "compas_timber.connections.LapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lbuttjoint static method)": [[61, "compas_timber.connections.LButtJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lfrenchridgelapjoint static method)": [[80, "compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.llapjoint static method)": [[99, "compas_timber.connections.LLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lmiterjoint static method)": [[118, "compas_timber.connections.LMiterJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.nulljoint static method)": [[154, "compas_timber.connections.NullJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tbirdsmouthjoint static method)": [[171, "compas_timber.connections.TBirdsmouthJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tbuttjoint static method)": [[188, "compas_timber.connections.TButtJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tdovetailjoint static method)": [[206, "compas_timber.connections.TDovetailJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tenonmortisejoint static method)": [[260, "compas_timber.connections.TenonMortiseJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tlapjoint static method)": [[224, "compas_timber.connections.TLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tstepjoint static method)": [[242, "compas_timber.connections.TStepJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.xlapjoint static method)": [[279, "compas_timber.connections.XLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.ybuttjoint static method)": [[299, "compas_timber.connections.YButtJoint.get_face_most_towards_beam", false]], "get_features() (compas_timber.elements.fastenertimberinterface method)": [[422, "compas_timber.elements.FastenerTimberInterface.get_features", false]], "get_interactions_for_element() (compas_timber.model.timbermodel method)": [[716, "compas_timber.model.TimberModel.get_interactions_for_element", false]], "get_interior_segment_indices() (compas_timber.design.surfacemodel method)": [[353, "compas_timber.design.SurfaceModel.get_interior_segment_indices", false]], "get_leaf_subclasses() (in module compas_timber.ghpython)": [[691, "compas_timber.ghpython.get_leaf_subclasses", false]], "get_main_cutting_frame() (compas_timber.connections.lapjoint method)": [[137, "compas_timber.connections.LapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.lfrenchridgelapjoint method)": [[81, "compas_timber.connections.LFrenchRidgeLapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.llapjoint method)": [[100, "compas_timber.connections.LLapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.tlapjoint method)": [[225, "compas_timber.connections.TLapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.xlapjoint method)": [[280, "compas_timber.connections.XLapJoint.get_main_cutting_frame", false]], "get_miter_planes() (compas_timber.connections.ybuttjoint method)": [[300, "compas_timber.connections.YButtJoint.get_miter_planes", false]], "get_name() (compas_timber.connections.jointtopology class method)": [[49, "compas_timber.connections.JointTopology.get_name", false]], "get_name() (compas_timber.planning.actor class method)": [[743, "compas_timber.planning.Actor.get_name", false]], "get_topology_rules() (compas_timber.design.categoryrule static method)": [[313, "compas_timber.design.CategoryRule.get_topology_rules", false]], "get_topology_rules() (compas_timber.design.directrule static method)": [[327, "compas_timber.design.DirectRule.get_topology_rules", false]], "get_topology_rules() (compas_timber.design.jointrule static method)": [[339, "compas_timber.design.JointRule.get_topology_rules", false]], "get_topology_rules() (compas_timber.design.topologyrule static method)": [[364, "compas_timber.design.TopologyRule.get_topology_rules", false]], "guess_joint_topology_2beams() (in module compas_timber.design)": [[366, "compas_timber.design.guess_joint_topology_2beams", false]], "has_element() (compas_timber.model.timbermodel method)": [[717, "compas_timber.model.TimberModel.has_element", false]], "has_group() (compas_timber.model.timbermodel method)": [[718, "compas_timber.model.TimberModel.has_group", false]], "has_interaction() (compas_timber.model.timbermodel method)": [[719, "compas_timber.model.TimberModel.has_interaction", false]], "has_material() (compas_timber.model.timbermodel method)": [[720, "compas_timber.model.TimberModel.has_material", false]], "instruction (class in compas_timber.planning)": [[757, "compas_timber.planning.Instruction", false]], "interactions() (compas_timber.model.timbermodel method)": [[721, "compas_timber.model.TimberModel.interactions", false]], "is_identical() (compas_timber.design.jointdefinition method)": [[333, "compas_timber.design.JointDefinition.is_identical", false]], "item_input_valid() (in module compas_timber.ghpython)": [[692, "compas_timber.ghpython.item_input_valid", false]], "jackraftercut (class in compas_timber.fabrication)": [[586, "compas_timber.fabrication.JackRafterCut", false]], "joint (class in compas_timber.connections)": [[31, "compas_timber.connections.Joint", false]], "jointdefinition (class in compas_timber.design)": [[331, "compas_timber.design.JointDefinition", false]], "jointrule (class in compas_timber.design)": [[335, "compas_timber.design.JointRule", false]], "joints_from_beams_and_rules() (compas_timber.design.categoryrule static method)": [[314, "compas_timber.design.CategoryRule.joints_from_beams_and_rules", false]], "joints_from_beams_and_rules() (compas_timber.design.directrule static method)": [[328, "compas_timber.design.DirectRule.joints_from_beams_and_rules", false]], "joints_from_beams_and_rules() (compas_timber.design.jointrule static method)": [[340, "compas_timber.design.JointRule.joints_from_beams_and_rules", false]], "joints_from_beams_and_rules() (compas_timber.design.topologyrule static method)": [[365, "compas_timber.design.TopologyRule.joints_from_beams_and_rules", false]], "jointtopology (class in compas_timber.connections)": [[48, "compas_timber.connections.JointTopology", false]], "lap (class in compas_timber.fabrication)": [[600, "compas_timber.fabrication.Lap", false]], "lap_volume_from_params_and_beam() (compas_timber.fabrication.frenchridgelap method)": [[581, "compas_timber.fabrication.FrenchRidgeLap.lap_volume_from_params_and_beam", false]], "lapjoint (class in compas_timber.connections)": [[124, "compas_timber.connections.LapJoint", false]], "lbuttjoint (class in compas_timber.connections)": [[50, "compas_timber.connections.LButtJoint", false]], "lfrenchridgelapjoint (class in compas_timber.connections)": [[68, "compas_timber.connections.LFrenchRidgeLapJoint", false]], "limitationtoptype (class in compas_timber.fabrication)": [[614, "compas_timber.fabrication.LimitationTopType", false]], "lineardimension (class in compas_timber.planning)": [[767, "compas_timber.planning.LinearDimension", false]], "list_input_valid() (in module compas_timber.ghpython)": [[693, "compas_timber.ghpython.list_input_valid", false]], "llapjoint (class in compas_timber.connections)": [[87, "compas_timber.connections.LLapJoint", false]], "lmiterjoint (class in compas_timber.connections)": [[106, "compas_timber.connections.LMiterJoint", false]], "machininglimits (class in compas_timber.fabrication)": [[615, "compas_timber.fabrication.MachiningLimits", false]], "main_beam_ref_side_index() (compas_timber.connections.ybuttjoint method)": [[301, "compas_timber.connections.YButtJoint.main_beam_ref_side_index", false]], "manage_dynamic_params() (in module compas_timber.ghpython)": [[694, "compas_timber.ghpython.manage_dynamic_params", false]], "match() (compas_timber.design.jointdefinition method)": [[334, "compas_timber.design.JointDefinition.match", false]], "materials() (compas_timber.model.timbermodel method)": [[722, "compas_timber.model.TimberModel.materials", false]], "model3d (class in compas_timber.planning)": [[777, "compas_timber.planning.Model3d", false]], "model_to_xml() (compas_timber.fabrication.btlxwriter method)": [[509, "compas_timber.fabrication.BTLxWriter.model_to_xml", false]], "mortise (class in compas_timber.fabrication)": [[616, "compas_timber.fabrication.Mortise", false]], "mortise_volume_from_params_and_beam() (compas_timber.fabrication.stepjointnotch method)": [[667, "compas_timber.fabrication.StepJointNotch.mortise_volume_from_params_and_beam", false]], "nulljoint (class in compas_timber.connections)": [[143, "compas_timber.connections.NullJoint", false]], "offset_elements() (compas_timber.design.surfacemodel method)": [[354, "compas_timber.design.SurfaceModel.offset_elements", false]], "opposing_side_index() (compas_timber.elements.beam method)": [[386, "compas_timber.elements.Beam.opposing_side_index", false]], "orientationtype (class in compas_timber.fabrication)": [[630, "compas_timber.fabrication.OrientationType", false]], "parse() (compas_timber.planning.buildingplanparser class method)": [[755, "compas_timber.planning.BuildingPlanParser.parse", false]], "parse_loops() (compas_timber.design.surfacemodel method)": [[355, "compas_timber.design.SurfaceModel.parse_loops", false]], "plane_from_params_and_beam() (compas_timber.fabrication.jackraftercut method)": [[595, "compas_timber.fabrication.JackRafterCut.plane_from_params_and_beam", false]], "planes_from_params_and_beam() (compas_timber.fabrication.doublecut method)": [[520, "compas_timber.fabrication.DoubleCut.planes_from_params_and_beam", false]], "planes_from_params_and_beam() (compas_timber.fabrication.lap method)": [[608, "compas_timber.fabrication.Lap.planes_from_params_and_beam", false]], "planes_from_params_and_beam() (compas_timber.fabrication.stepjoint method)": [[652, "compas_timber.fabrication.StepJoint.planes_from_params_and_beam", false]], "planes_from_params_and_beam() (compas_timber.fabrication.stepjointnotch method)": [[668, "compas_timber.fabrication.StepJointNotch.planes_from_params_and_beam", false]], "plate (class in compas_timber.elements)": [[427, "compas_timber.elements.Plate", false]], "process_joinery() (compas_timber.model.timbermodel method)": [[723, "compas_timber.model.TimberModel.process_joinery", false]], "ref_side_from_face() (compas_timber.fabrication.btlxpart method)": [[497, "compas_timber.fabrication.BTLxPart.ref_side_from_face", false]], "remove_blank_extension() (compas_timber.elements.beam method)": [[387, "compas_timber.elements.Beam.remove_blank_extension", false]], "remove_blank_extension() (compas_timber.elements.fastener method)": [[408, "compas_timber.elements.Fastener.remove_blank_extension", false]], "remove_blank_extension() (compas_timber.elements.plate method)": [[439, "compas_timber.elements.Plate.remove_blank_extension", false]], "remove_blank_extension() (compas_timber.elements.timberelement method)": [[460, "compas_timber.elements.TimberElement.remove_blank_extension", false]], "remove_blank_extension() (compas_timber.elements.wall method)": [[482, "compas_timber.elements.Wall.remove_blank_extension", false]], "remove_element() (compas_timber.model.timbermodel method)": [[724, "compas_timber.model.TimberModel.remove_element", false]], "remove_features() (compas_timber.elements.beam method)": [[388, "compas_timber.elements.Beam.remove_features", false]], "remove_features() (compas_timber.elements.fastener method)": [[409, "compas_timber.elements.Fastener.remove_features", false]], "remove_features() (compas_timber.elements.plate method)": [[440, "compas_timber.elements.Plate.remove_features", false]], "remove_features() (compas_timber.elements.timberelement method)": [[461, "compas_timber.elements.TimberElement.remove_features", false]], "remove_features() (compas_timber.elements.wall method)": [[483, "compas_timber.elements.Wall.remove_features", false]], "remove_interaction() (compas_timber.model.timbermodel method)": [[725, "compas_timber.model.TimberModel.remove_interaction", false]], "remove_joint() (compas_timber.model.timbermodel method)": [[726, "compas_timber.model.TimberModel.remove_joint", false]], "rename_gh_input() (in module compas_timber.ghpython)": [[695, "compas_timber.ghpython.rename_gh_input", false]], "reorder() (compas_timber.design.categoryrule method)": [[315, "compas_timber.design.CategoryRule.reorder", false]], "reset() (compas_timber.elements.beam method)": [[389, "compas_timber.elements.Beam.reset", false]], "reset() (compas_timber.elements.fastener method)": [[410, "compas_timber.elements.Fastener.reset", false]], "reset() (compas_timber.elements.plate method)": [[441, "compas_timber.elements.Plate.reset", false]], "reset() (compas_timber.elements.timberelement method)": [[462, "compas_timber.elements.TimberElement.reset", false]], "reset() (compas_timber.elements.wall method)": [[484, "compas_timber.elements.Wall.reset", false]], "restore_beams_from_keys() (compas_timber.connections.ballnodejoint method)": [[22, "compas_timber.connections.BallNodeJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[43, "compas_timber.connections.Joint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lapjoint method)": [[138, "compas_timber.connections.LapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[62, "compas_timber.connections.LButtJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lfrenchridgelapjoint method)": [[82, "compas_timber.connections.LFrenchRidgeLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.llapjoint method)": [[101, "compas_timber.connections.LLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[119, "compas_timber.connections.LMiterJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.nulljoint method)": [[155, "compas_timber.connections.NullJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tbirdsmouthjoint method)": [[172, "compas_timber.connections.TBirdsmouthJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[189, "compas_timber.connections.TButtJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tdovetailjoint method)": [[207, "compas_timber.connections.TDovetailJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tenonmortisejoint method)": [[261, "compas_timber.connections.TenonMortiseJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tlapjoint method)": [[226, "compas_timber.connections.TLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tstepjoint method)": [[243, "compas_timber.connections.TStepJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.xlapjoint method)": [[281, "compas_timber.connections.XLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.ybuttjoint method)": [[302, "compas_timber.connections.YButtJoint.restore_beams_from_keys", false]], "rotate() (compas_timber.elements.wall method)": [[485, "compas_timber.elements.Wall.rotate", false]], "rotate() (compas_timber.model.timbermodel method)": [[727, "compas_timber.model.TimberModel.rotate", false]], "rotated() (compas_timber.model.timbermodel method)": [[728, "compas_timber.model.TimberModel.rotated", false]], "scale() (compas_timber.model.timbermodel method)": [[729, "compas_timber.model.TimberModel.scale", false]], "scaled() (compas_timber.model.timbermodel method)": [[730, "compas_timber.model.TimberModel.scaled", false]], "serialize() (compas_timber.planning.buildingplanparser class method)": [[756, "compas_timber.planning.BuildingPlanParser.serialize", false]], "set_default_joints() (in module compas_timber.design)": [[367, "compas_timber.design.set_default_joints", false]], "set_default_values() (compas_timber.connections.tenonmortisejoint method)": [[262, "compas_timber.connections.TenonMortiseJoint.set_default_values", false]], "set_frame_and_outline() (compas_timber.elements.plate method)": [[442, "compas_timber.elements.Plate.set_frame_and_outline", false]], "set_step_depths() (compas_timber.connections.tstepjoint method)": [[244, "compas_timber.connections.TStepJoint.set_step_depths", false]], "set_topologies() (compas_timber.model.timbermodel method)": [[731, "compas_timber.model.TimberModel.set_topologies", false]], "sha256() (compas_timber.connections.ballnodejoint method)": [[23, "compas_timber.connections.BallNodeJoint.sha256", false]], "sha256() (compas_timber.connections.joint method)": [[44, "compas_timber.connections.Joint.sha256", false]], "sha256() (compas_timber.connections.lapjoint method)": [[139, "compas_timber.connections.LapJoint.sha256", false]], "sha256() (compas_timber.connections.lbuttjoint method)": [[63, "compas_timber.connections.LButtJoint.sha256", false]], "sha256() (compas_timber.connections.lfrenchridgelapjoint method)": [[83, "compas_timber.connections.LFrenchRidgeLapJoint.sha256", false]], "sha256() (compas_timber.connections.llapjoint method)": [[102, "compas_timber.connections.LLapJoint.sha256", false]], "sha256() (compas_timber.connections.lmiterjoint method)": [[120, "compas_timber.connections.LMiterJoint.sha256", false]], "sha256() (compas_timber.connections.nulljoint method)": [[156, "compas_timber.connections.NullJoint.sha256", false]], "sha256() (compas_timber.connections.tbirdsmouthjoint method)": [[173, "compas_timber.connections.TBirdsmouthJoint.sha256", false]], "sha256() (compas_timber.connections.tbuttjoint method)": [[190, "compas_timber.connections.TButtJoint.sha256", false]], "sha256() (compas_timber.connections.tdovetailjoint method)": [[208, "compas_timber.connections.TDovetailJoint.sha256", false]], "sha256() (compas_timber.connections.tenonmortisejoint method)": [[263, "compas_timber.connections.TenonMortiseJoint.sha256", false]], "sha256() (compas_timber.connections.tlapjoint method)": [[227, "compas_timber.connections.TLapJoint.sha256", false]], "sha256() (compas_timber.connections.tstepjoint method)": [[245, "compas_timber.connections.TStepJoint.sha256", false]], "sha256() (compas_timber.connections.xlapjoint method)": [[282, "compas_timber.connections.XLapJoint.sha256", false]], "sha256() (compas_timber.connections.ybuttjoint method)": [[303, "compas_timber.connections.YButtJoint.sha256", false]], "sha256() (compas_timber.elements.beam method)": [[390, "compas_timber.elements.Beam.sha256", false]], "sha256() (compas_timber.elements.fastener method)": [[411, "compas_timber.elements.Fastener.sha256", false]], "sha256() (compas_timber.elements.fastenertimberinterface method)": [[423, "compas_timber.elements.FastenerTimberInterface.sha256", false]], "sha256() (compas_timber.elements.plate method)": [[443, "compas_timber.elements.Plate.sha256", false]], "sha256() (compas_timber.elements.timberelement method)": [[463, "compas_timber.elements.TimberElement.sha256", false]], "sha256() (compas_timber.elements.wall method)": [[486, "compas_timber.elements.Wall.sha256", false]], "sha256() (compas_timber.fabrication.btlxprocessing method)": [[504, "compas_timber.fabrication.BTLxProcessing.sha256", false]], "sha256() (compas_timber.fabrication.doublecut method)": [[521, "compas_timber.fabrication.DoubleCut.sha256", false]], "sha256() (compas_timber.fabrication.dovetailmortise method)": [[537, "compas_timber.fabrication.DovetailMortise.sha256", false]], "sha256() (compas_timber.fabrication.dovetailtenon method)": [[553, "compas_timber.fabrication.DovetailTenon.sha256", false]], "sha256() (compas_timber.fabrication.drilling method)": [[567, "compas_timber.fabrication.Drilling.sha256", false]], "sha256() (compas_timber.fabrication.frenchridgelap method)": [[582, "compas_timber.fabrication.FrenchRidgeLap.sha256", false]], "sha256() (compas_timber.fabrication.jackraftercut method)": [[596, "compas_timber.fabrication.JackRafterCut.sha256", false]], "sha256() (compas_timber.fabrication.lap method)": [[609, "compas_timber.fabrication.Lap.sha256", false]], "sha256() (compas_timber.fabrication.mortise method)": [[625, "compas_timber.fabrication.Mortise.sha256", false]], "sha256() (compas_timber.fabrication.slot method)": [[639, "compas_timber.fabrication.Slot.sha256", false]], "sha256() (compas_timber.fabrication.stepjoint method)": [[653, "compas_timber.fabrication.StepJoint.sha256", false]], "sha256() (compas_timber.fabrication.stepjointnotch method)": [[669, "compas_timber.fabrication.StepJointNotch.sha256", false]], "sha256() (compas_timber.fabrication.tenon method)": [[683, "compas_timber.fabrication.Tenon.sha256", false]], "sha256() (compas_timber.model.timbermodel method)": [[732, "compas_timber.model.TimberModel.sha256", false]], "sha256() (compas_timber.planning.buildingplan method)": [[750, "compas_timber.planning.BuildingPlan.sha256", false]], "sha256() (compas_timber.planning.instruction method)": [[762, "compas_timber.planning.Instruction.sha256", false]], "sha256() (compas_timber.planning.lineardimension method)": [[772, "compas_timber.planning.LinearDimension.sha256", false]], "sha256() (compas_timber.planning.model3d method)": [[782, "compas_timber.planning.Model3d.sha256", false]], "sha256() (compas_timber.planning.step method)": [[793, "compas_timber.planning.Step.sha256", false]], "sha256() (compas_timber.planning.text3d method)": [[803, "compas_timber.planning.Text3d.sha256", false]], "side_as_surface() (compas_timber.elements.beam method)": [[391, "compas_timber.elements.Beam.side_as_surface", false]], "simplesequencegenerator (class in compas_timber.planning)": [[787, "compas_timber.planning.SimpleSequenceGenerator", false]], "slot (class in compas_timber.fabrication)": [[631, "compas_timber.fabrication.Slot", false]], "step (class in compas_timber.planning)": [[788, "compas_timber.planning.Step", false]], "stepjoint (class in compas_timber.fabrication)": [[643, "compas_timber.fabrication.StepJoint", false]], "stepjointnotch (class in compas_timber.fabrication)": [[658, "compas_timber.fabrication.StepJointNotch", false]], "stepshapetype (class in compas_timber.fabrication)": [[673, "compas_timber.fabrication.StepShapeType", false]], "surfacemodel (class in compas_timber.design)": [[341, "compas_timber.design.SurfaceModel", false]], "tbirdsmouthjoint (class in compas_timber.connections)": [[160, "compas_timber.connections.TBirdsmouthJoint", false]], "tbuttjoint (class in compas_timber.connections)": [[177, "compas_timber.connections.TButtJoint", false]], "tdovetailjoint (class in compas_timber.connections)": [[194, "compas_timber.connections.TDovetailJoint", false]], "tenon (class in compas_timber.fabrication)": [[674, "compas_timber.fabrication.Tenon", false]], "tenon_volume_from_params_and_beam() (compas_timber.fabrication.stepjoint method)": [[654, "compas_timber.fabrication.StepJoint.tenon_volume_from_params_and_beam", false]], "tenonmortisejoint (class in compas_timber.connections)": [[249, "compas_timber.connections.TenonMortiseJoint", false]], "tenonshapetype (class in compas_timber.fabrication)": [[688, "compas_timber.fabrication.TenonShapeType", false]], "text3d (class in compas_timber.planning)": [[798, "compas_timber.planning.Text3d", false]], "timberelement (class in compas_timber.elements)": [[449, "compas_timber.elements.TimberElement", false]], "timbermodel (class in compas_timber.model)": [[696, "compas_timber.model.TimberModel", false]], "tlapjoint (class in compas_timber.connections)": [[212, "compas_timber.connections.TLapJoint", false]], "to_json() (compas_timber.connections.ballnodejoint method)": [[24, "compas_timber.connections.BallNodeJoint.to_json", false]], "to_json() (compas_timber.connections.joint method)": [[45, "compas_timber.connections.Joint.to_json", false]], "to_json() (compas_timber.connections.lapjoint method)": [[140, "compas_timber.connections.LapJoint.to_json", false]], "to_json() (compas_timber.connections.lbuttjoint method)": [[64, "compas_timber.connections.LButtJoint.to_json", false]], "to_json() (compas_timber.connections.lfrenchridgelapjoint method)": [[84, "compas_timber.connections.LFrenchRidgeLapJoint.to_json", false]], "to_json() (compas_timber.connections.llapjoint method)": [[103, "compas_timber.connections.LLapJoint.to_json", false]], "to_json() (compas_timber.connections.lmiterjoint method)": [[121, "compas_timber.connections.LMiterJoint.to_json", false]], "to_json() (compas_timber.connections.nulljoint method)": [[157, "compas_timber.connections.NullJoint.to_json", false]], "to_json() (compas_timber.connections.tbirdsmouthjoint method)": [[174, "compas_timber.connections.TBirdsmouthJoint.to_json", false]], "to_json() (compas_timber.connections.tbuttjoint method)": [[191, "compas_timber.connections.TButtJoint.to_json", false]], "to_json() (compas_timber.connections.tdovetailjoint method)": [[209, "compas_timber.connections.TDovetailJoint.to_json", false]], "to_json() (compas_timber.connections.tenonmortisejoint method)": [[264, "compas_timber.connections.TenonMortiseJoint.to_json", false]], "to_json() (compas_timber.connections.tlapjoint method)": [[228, "compas_timber.connections.TLapJoint.to_json", false]], "to_json() (compas_timber.connections.tstepjoint method)": [[246, "compas_timber.connections.TStepJoint.to_json", false]], "to_json() (compas_timber.connections.xlapjoint method)": [[283, "compas_timber.connections.XLapJoint.to_json", false]], "to_json() (compas_timber.connections.ybuttjoint method)": [[304, "compas_timber.connections.YButtJoint.to_json", false]], "to_json() (compas_timber.elements.beam method)": [[392, "compas_timber.elements.Beam.to_json", false]], "to_json() (compas_timber.elements.fastener method)": [[412, "compas_timber.elements.Fastener.to_json", false]], "to_json() (compas_timber.elements.fastenertimberinterface method)": [[424, "compas_timber.elements.FastenerTimberInterface.to_json", false]], "to_json() (compas_timber.elements.plate method)": [[444, "compas_timber.elements.Plate.to_json", false]], "to_json() (compas_timber.elements.timberelement method)": [[464, "compas_timber.elements.TimberElement.to_json", false]], "to_json() (compas_timber.elements.wall method)": [[487, "compas_timber.elements.Wall.to_json", false]], "to_json() (compas_timber.fabrication.btlxprocessing method)": [[505, "compas_timber.fabrication.BTLxProcessing.to_json", false]], "to_json() (compas_timber.fabrication.doublecut method)": [[522, "compas_timber.fabrication.DoubleCut.to_json", false]], "to_json() (compas_timber.fabrication.dovetailmortise method)": [[538, "compas_timber.fabrication.DovetailMortise.to_json", false]], "to_json() (compas_timber.fabrication.dovetailtenon method)": [[554, "compas_timber.fabrication.DovetailTenon.to_json", false]], "to_json() (compas_timber.fabrication.drilling method)": [[568, "compas_timber.fabrication.Drilling.to_json", false]], "to_json() (compas_timber.fabrication.frenchridgelap method)": [[583, "compas_timber.fabrication.FrenchRidgeLap.to_json", false]], "to_json() (compas_timber.fabrication.jackraftercut method)": [[597, "compas_timber.fabrication.JackRafterCut.to_json", false]], "to_json() (compas_timber.fabrication.lap method)": [[610, "compas_timber.fabrication.Lap.to_json", false]], "to_json() (compas_timber.fabrication.mortise method)": [[626, "compas_timber.fabrication.Mortise.to_json", false]], "to_json() (compas_timber.fabrication.slot method)": [[640, "compas_timber.fabrication.Slot.to_json", false]], "to_json() (compas_timber.fabrication.stepjoint method)": [[655, "compas_timber.fabrication.StepJoint.to_json", false]], "to_json() (compas_timber.fabrication.stepjointnotch method)": [[670, "compas_timber.fabrication.StepJointNotch.to_json", false]], "to_json() (compas_timber.fabrication.tenon method)": [[684, "compas_timber.fabrication.Tenon.to_json", false]], "to_json() (compas_timber.model.timbermodel method)": [[733, "compas_timber.model.TimberModel.to_json", false]], "to_json() (compas_timber.planning.buildingplan method)": [[751, "compas_timber.planning.BuildingPlan.to_json", false]], "to_json() (compas_timber.planning.instruction method)": [[763, "compas_timber.planning.Instruction.to_json", false]], "to_json() (compas_timber.planning.lineardimension method)": [[773, "compas_timber.planning.LinearDimension.to_json", false]], "to_json() (compas_timber.planning.model3d method)": [[783, "compas_timber.planning.Model3d.to_json", false]], "to_json() (compas_timber.planning.step method)": [[794, "compas_timber.planning.Step.to_json", false]], "to_json() (compas_timber.planning.text3d method)": [[804, "compas_timber.planning.Text3d.to_json", false]], "to_jsonstring() (compas_timber.connections.ballnodejoint method)": [[25, "compas_timber.connections.BallNodeJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.joint method)": [[46, "compas_timber.connections.Joint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lapjoint method)": [[141, "compas_timber.connections.LapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lbuttjoint method)": [[65, "compas_timber.connections.LButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lfrenchridgelapjoint method)": [[85, "compas_timber.connections.LFrenchRidgeLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.llapjoint method)": [[104, "compas_timber.connections.LLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lmiterjoint method)": [[122, "compas_timber.connections.LMiterJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.nulljoint method)": [[158, "compas_timber.connections.NullJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tbirdsmouthjoint method)": [[175, "compas_timber.connections.TBirdsmouthJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tbuttjoint method)": [[192, "compas_timber.connections.TButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tdovetailjoint method)": [[210, "compas_timber.connections.TDovetailJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tenonmortisejoint method)": [[265, "compas_timber.connections.TenonMortiseJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tlapjoint method)": [[229, "compas_timber.connections.TLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tstepjoint method)": [[247, "compas_timber.connections.TStepJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.xlapjoint method)": [[284, "compas_timber.connections.XLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.ybuttjoint method)": [[305, "compas_timber.connections.YButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.beam method)": [[393, "compas_timber.elements.Beam.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.fastener method)": [[413, "compas_timber.elements.Fastener.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.fastenertimberinterface method)": [[425, "compas_timber.elements.FastenerTimberInterface.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.plate method)": [[445, "compas_timber.elements.Plate.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.timberelement method)": [[465, "compas_timber.elements.TimberElement.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.wall method)": [[488, "compas_timber.elements.Wall.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.btlxprocessing method)": [[506, "compas_timber.fabrication.BTLxProcessing.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.doublecut method)": [[523, "compas_timber.fabrication.DoubleCut.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.dovetailmortise method)": [[539, "compas_timber.fabrication.DovetailMortise.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.dovetailtenon method)": [[555, "compas_timber.fabrication.DovetailTenon.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.drilling method)": [[569, "compas_timber.fabrication.Drilling.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.frenchridgelap method)": [[584, "compas_timber.fabrication.FrenchRidgeLap.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.jackraftercut method)": [[598, "compas_timber.fabrication.JackRafterCut.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.lap method)": [[611, "compas_timber.fabrication.Lap.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.mortise method)": [[627, "compas_timber.fabrication.Mortise.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.slot method)": [[641, "compas_timber.fabrication.Slot.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.stepjoint method)": [[656, "compas_timber.fabrication.StepJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.stepjointnotch method)": [[671, "compas_timber.fabrication.StepJointNotch.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.tenon method)": [[685, "compas_timber.fabrication.Tenon.to_jsonstring", false]], "to_jsonstring() (compas_timber.model.timbermodel method)": [[734, "compas_timber.model.TimberModel.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.buildingplan method)": [[752, "compas_timber.planning.BuildingPlan.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.instruction method)": [[764, "compas_timber.planning.Instruction.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.lineardimension method)": [[774, "compas_timber.planning.LinearDimension.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.model3d method)": [[784, "compas_timber.planning.Model3d.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.step method)": [[795, "compas_timber.planning.Step.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.text3d method)": [[805, "compas_timber.planning.Text3d.to_jsonstring", false]], "topologyrule (class in compas_timber.design)": [[359, "compas_timber.design.TopologyRule", false]], "tostring() (compas_timber.connections.ballnodejoint method)": [[11, "compas_timber.connections.BallNodeJoint.ToString", false]], "tostring() (compas_timber.connections.joint method)": [[32, "compas_timber.connections.Joint.ToString", false]], "tostring() (compas_timber.connections.lapjoint method)": [[125, "compas_timber.connections.LapJoint.ToString", false]], "tostring() (compas_timber.connections.lbuttjoint method)": [[51, "compas_timber.connections.LButtJoint.ToString", false]], "tostring() (compas_timber.connections.lfrenchridgelapjoint method)": [[69, "compas_timber.connections.LFrenchRidgeLapJoint.ToString", false]], "tostring() (compas_timber.connections.llapjoint method)": [[88, "compas_timber.connections.LLapJoint.ToString", false]], "tostring() (compas_timber.connections.lmiterjoint method)": [[107, "compas_timber.connections.LMiterJoint.ToString", false]], "tostring() (compas_timber.connections.nulljoint method)": [[144, "compas_timber.connections.NullJoint.ToString", false]], "tostring() (compas_timber.connections.tbirdsmouthjoint method)": [[161, "compas_timber.connections.TBirdsmouthJoint.ToString", false]], "tostring() (compas_timber.connections.tbuttjoint method)": [[178, "compas_timber.connections.TButtJoint.ToString", false]], "tostring() (compas_timber.connections.tdovetailjoint method)": [[195, "compas_timber.connections.TDovetailJoint.ToString", false]], "tostring() (compas_timber.connections.tenonmortisejoint method)": [[250, "compas_timber.connections.TenonMortiseJoint.ToString", false]], "tostring() (compas_timber.connections.tlapjoint method)": [[213, "compas_timber.connections.TLapJoint.ToString", false]], "tostring() (compas_timber.connections.tstepjoint method)": [[232, "compas_timber.connections.TStepJoint.ToString", false]], "tostring() (compas_timber.connections.xlapjoint method)": [[268, "compas_timber.connections.XLapJoint.ToString", false]], "tostring() (compas_timber.connections.ybuttjoint method)": [[287, "compas_timber.connections.YButtJoint.ToString", false]], "tostring() (compas_timber.design.categoryrule method)": [[309, "compas_timber.design.CategoryRule.ToString", false]], "tostring() (compas_timber.design.debuginfomation method)": [[317, "compas_timber.design.DebugInfomation.ToString", false]], "tostring() (compas_timber.design.directrule method)": [[322, "compas_timber.design.DirectRule.ToString", false]], "tostring() (compas_timber.design.featuredefinition method)": [[330, "compas_timber.design.FeatureDefinition.ToString", false]], "tostring() (compas_timber.design.jointdefinition method)": [[332, "compas_timber.design.JointDefinition.ToString", false]], "tostring() (compas_timber.design.topologyrule method)": [[360, "compas_timber.design.TopologyRule.ToString", false]], "tostring() (compas_timber.elements.beam method)": [[369, "compas_timber.elements.Beam.ToString", false]], "tostring() (compas_timber.elements.fastener method)": [[398, "compas_timber.elements.Fastener.ToString", false]], "tostring() (compas_timber.elements.fastenertimberinterface method)": [[418, "compas_timber.elements.FastenerTimberInterface.ToString", false]], "tostring() (compas_timber.elements.plate method)": [[428, "compas_timber.elements.Plate.ToString", false]], "tostring() (compas_timber.elements.timberelement method)": [[450, "compas_timber.elements.TimberElement.ToString", false]], "tostring() (compas_timber.elements.wall method)": [[470, "compas_timber.elements.Wall.ToString", false]], "tostring() (compas_timber.fabrication.btlxprocessing method)": [[499, "compas_timber.fabrication.BTLxProcessing.ToString", false]], "tostring() (compas_timber.fabrication.doublecut method)": [[512, "compas_timber.fabrication.DoubleCut.ToString", false]], "tostring() (compas_timber.fabrication.dovetailmortise method)": [[526, "compas_timber.fabrication.DovetailMortise.ToString", false]], "tostring() (compas_timber.fabrication.dovetailtenon method)": [[542, "compas_timber.fabrication.DovetailTenon.ToString", false]], "tostring() (compas_timber.fabrication.drilling method)": [[558, "compas_timber.fabrication.Drilling.ToString", false]], "tostring() (compas_timber.fabrication.frenchridgelap method)": [[573, "compas_timber.fabrication.FrenchRidgeLap.ToString", false]], "tostring() (compas_timber.fabrication.jackraftercut method)": [[587, "compas_timber.fabrication.JackRafterCut.ToString", false]], "tostring() (compas_timber.fabrication.lap method)": [[601, "compas_timber.fabrication.Lap.ToString", false]], "tostring() (compas_timber.fabrication.mortise method)": [[617, "compas_timber.fabrication.Mortise.ToString", false]], "tostring() (compas_timber.fabrication.slot method)": [[632, "compas_timber.fabrication.Slot.ToString", false]], "tostring() (compas_timber.fabrication.stepjoint method)": [[644, "compas_timber.fabrication.StepJoint.ToString", false]], "tostring() (compas_timber.fabrication.stepjointnotch method)": [[659, "compas_timber.fabrication.StepJointNotch.ToString", false]], "tostring() (compas_timber.fabrication.tenon method)": [[675, "compas_timber.fabrication.Tenon.ToString", false]], "tostring() (compas_timber.model.timbermodel method)": [[697, "compas_timber.model.TimberModel.ToString", false]], "tostring() (compas_timber.planning.buildingplan method)": [[745, "compas_timber.planning.BuildingPlan.ToString", false]], "tostring() (compas_timber.planning.instruction method)": [[758, "compas_timber.planning.Instruction.ToString", false]], "tostring() (compas_timber.planning.lineardimension method)": [[768, "compas_timber.planning.LinearDimension.ToString", false]], "tostring() (compas_timber.planning.model3d method)": [[778, "compas_timber.planning.Model3d.ToString", false]], "tostring() (compas_timber.planning.step method)": [[789, "compas_timber.planning.Step.ToString", false]], "tostring() (compas_timber.planning.text3d method)": [[799, "compas_timber.planning.Text3d.ToString", false]], "transform() (compas_timber.elements.beam method)": [[394, "compas_timber.elements.Beam.transform", false]], "transform() (compas_timber.elements.fastener method)": [[414, "compas_timber.elements.Fastener.transform", false]], "transform() (compas_timber.elements.plate method)": [[446, "compas_timber.elements.Plate.transform", false]], "transform() (compas_timber.elements.timberelement method)": [[466, "compas_timber.elements.TimberElement.transform", false]], "transform() (compas_timber.elements.wall method)": [[489, "compas_timber.elements.Wall.transform", false]], "transform() (compas_timber.model.timbermodel method)": [[735, "compas_timber.model.TimberModel.transform", false]], "transform() (compas_timber.planning.instruction method)": [[765, "compas_timber.planning.Instruction.transform", false]], "transform() (compas_timber.planning.lineardimension method)": [[775, "compas_timber.planning.LinearDimension.transform", false]], "transform() (compas_timber.planning.model3d method)": [[785, "compas_timber.planning.Model3d.transform", false]], "transform() (compas_timber.planning.step method)": [[796, "compas_timber.planning.Step.transform", false]], "transform() (compas_timber.planning.text3d method)": [[806, "compas_timber.planning.Text3d.transform", false]], "transform_numpy() (compas_timber.model.timbermodel method)": [[736, "compas_timber.model.TimberModel.transform_numpy", false]], "transformed() (compas_timber.elements.beam method)": [[395, "compas_timber.elements.Beam.transformed", false]], "transformed() (compas_timber.elements.fastener method)": [[415, "compas_timber.elements.Fastener.transformed", false]], "transformed() (compas_timber.elements.plate method)": [[447, "compas_timber.elements.Plate.transformed", false]], "transformed() (compas_timber.elements.timberelement method)": [[467, "compas_timber.elements.TimberElement.transformed", false]], "transformed() (compas_timber.elements.wall method)": [[490, "compas_timber.elements.Wall.transformed", false]], "transformed() (compas_timber.model.timbermodel method)": [[737, "compas_timber.model.TimberModel.transformed", false]], "transformed_numpy() (compas_timber.model.timbermodel method)": [[738, "compas_timber.model.TimberModel.transformed_numpy", false]], "translate() (compas_timber.model.timbermodel method)": [[739, "compas_timber.model.TimberModel.translate", false]], "translated() (compas_timber.model.timbermodel method)": [[740, "compas_timber.model.TimberModel.translated", false]], "trim_jack_studs() (compas_timber.design.surfacemodel method)": [[356, "compas_timber.design.SurfaceModel.trim_jack_studs", false]], "trim_king_studs() (compas_timber.design.surfacemodel method)": [[357, "compas_timber.design.SurfaceModel.trim_king_studs", false]], "trim_studs() (compas_timber.design.surfacemodel method)": [[358, "compas_timber.design.SurfaceModel.trim_studs", false]], "tstepjoint (class in compas_timber.connections)": [[231, "compas_timber.connections.TStepJoint", false]], "update_beam_roles() (compas_timber.connections.lbuttjoint method)": [[66, "compas_timber.connections.LButtJoint.update_beam_roles", false]], "validate_data() (compas_timber.connections.ballnodejoint class method)": [[26, "compas_timber.connections.BallNodeJoint.validate_data", false]], "validate_data() (compas_timber.connections.joint class method)": [[47, "compas_timber.connections.Joint.validate_data", false]], "validate_data() (compas_timber.connections.lapjoint class method)": [[142, "compas_timber.connections.LapJoint.validate_data", false]], "validate_data() (compas_timber.connections.lbuttjoint class method)": [[67, "compas_timber.connections.LButtJoint.validate_data", false]], "validate_data() (compas_timber.connections.lfrenchridgelapjoint class method)": [[86, "compas_timber.connections.LFrenchRidgeLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.llapjoint class method)": [[105, "compas_timber.connections.LLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.lmiterjoint class method)": [[123, "compas_timber.connections.LMiterJoint.validate_data", false]], "validate_data() (compas_timber.connections.nulljoint class method)": [[159, "compas_timber.connections.NullJoint.validate_data", false]], "validate_data() (compas_timber.connections.tbirdsmouthjoint class method)": [[176, "compas_timber.connections.TBirdsmouthJoint.validate_data", false]], "validate_data() (compas_timber.connections.tbuttjoint class method)": [[193, "compas_timber.connections.TButtJoint.validate_data", false]], "validate_data() (compas_timber.connections.tdovetailjoint class method)": [[211, "compas_timber.connections.TDovetailJoint.validate_data", false]], "validate_data() (compas_timber.connections.tenonmortisejoint class method)": [[266, "compas_timber.connections.TenonMortiseJoint.validate_data", false]], "validate_data() (compas_timber.connections.tlapjoint class method)": [[230, "compas_timber.connections.TLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.tstepjoint class method)": [[248, "compas_timber.connections.TStepJoint.validate_data", false]], "validate_data() (compas_timber.connections.xlapjoint class method)": [[285, "compas_timber.connections.XLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.ybuttjoint class method)": [[306, "compas_timber.connections.YButtJoint.validate_data", false]], "validate_data() (compas_timber.elements.beam class method)": [[396, "compas_timber.elements.Beam.validate_data", false]], "validate_data() (compas_timber.elements.fastener class method)": [[416, "compas_timber.elements.Fastener.validate_data", false]], "validate_data() (compas_timber.elements.fastenertimberinterface class method)": [[426, "compas_timber.elements.FastenerTimberInterface.validate_data", false]], "validate_data() (compas_timber.elements.plate class method)": [[448, "compas_timber.elements.Plate.validate_data", false]], "validate_data() (compas_timber.elements.timberelement class method)": [[468, "compas_timber.elements.TimberElement.validate_data", false]], "validate_data() (compas_timber.elements.wall class method)": [[491, "compas_timber.elements.Wall.validate_data", false]], "validate_data() (compas_timber.fabrication.btlxprocessing class method)": [[507, "compas_timber.fabrication.BTLxProcessing.validate_data", false]], "validate_data() (compas_timber.fabrication.doublecut class method)": [[524, "compas_timber.fabrication.DoubleCut.validate_data", false]], "validate_data() (compas_timber.fabrication.dovetailmortise class method)": [[540, "compas_timber.fabrication.DovetailMortise.validate_data", false]], "validate_data() (compas_timber.fabrication.dovetailtenon class method)": [[556, "compas_timber.fabrication.DovetailTenon.validate_data", false]], "validate_data() (compas_timber.fabrication.drilling class method)": [[570, "compas_timber.fabrication.Drilling.validate_data", false]], "validate_data() (compas_timber.fabrication.frenchridgelap class method)": [[585, "compas_timber.fabrication.FrenchRidgeLap.validate_data", false]], "validate_data() (compas_timber.fabrication.jackraftercut class method)": [[599, "compas_timber.fabrication.JackRafterCut.validate_data", false]], "validate_data() (compas_timber.fabrication.lap class method)": [[612, "compas_timber.fabrication.Lap.validate_data", false]], "validate_data() (compas_timber.fabrication.mortise class method)": [[628, "compas_timber.fabrication.Mortise.validate_data", false]], "validate_data() (compas_timber.fabrication.slot class method)": [[642, "compas_timber.fabrication.Slot.validate_data", false]], "validate_data() (compas_timber.fabrication.stepjoint class method)": [[657, "compas_timber.fabrication.StepJoint.validate_data", false]], "validate_data() (compas_timber.fabrication.stepjointnotch class method)": [[672, "compas_timber.fabrication.StepJointNotch.validate_data", false]], "validate_data() (compas_timber.fabrication.tenon class method)": [[686, "compas_timber.fabrication.Tenon.validate_data", false]], "validate_data() (compas_timber.model.timbermodel class method)": [[741, "compas_timber.model.TimberModel.validate_data", false]], "validate_data() (compas_timber.planning.buildingplan class method)": [[753, "compas_timber.planning.BuildingPlan.validate_data", false]], "validate_data() (compas_timber.planning.instruction class method)": [[766, "compas_timber.planning.Instruction.validate_data", false]], "validate_data() (compas_timber.planning.lineardimension class method)": [[776, "compas_timber.planning.LinearDimension.validate_data", false]], "validate_data() (compas_timber.planning.model3d class method)": [[786, "compas_timber.planning.Model3d.validate_data", false]], "validate_data() (compas_timber.planning.step class method)": [[797, "compas_timber.planning.Step.validate_data", false]], "validate_data() (compas_timber.planning.text3d class method)": [[807, "compas_timber.planning.Text3d.validate_data", false]], "volume_from_params_and_beam() (compas_timber.fabrication.lap method)": [[613, "compas_timber.fabrication.Lap.volume_from_params_and_beam", false]], "volume_from_params_and_beam() (compas_timber.fabrication.mortise method)": [[629, "compas_timber.fabrication.Mortise.volume_from_params_and_beam", false]], "volume_from_params_and_beam() (compas_timber.fabrication.tenon method)": [[687, "compas_timber.fabrication.Tenon.volume_from_params_and_beam", false]], "wall (class in compas_timber.elements)": [[469, "compas_timber.elements.Wall", false]], "write() (compas_timber.fabrication.btlxwriter method)": [[510, "compas_timber.fabrication.BTLxWriter.write", false]], "xlapjoint (class in compas_timber.connections)": [[267, "compas_timber.connections.XLapJoint", false]], "ybuttjoint (class in compas_timber.connections)": [[286, "compas_timber.connections.YButtJoint", false]]}, "objects": {"compas_timber.connections": [[10, 0, 1, "", "BallNodeJoint"], [27, 0, 1, "", "ConnectionSolver"], [31, 0, 1, "", "Joint"], [48, 0, 1, "", "JointTopology"], [50, 0, 1, "", "LButtJoint"], [68, 0, 1, "", "LFrenchRidgeLapJoint"], [87, 0, 1, "", "LLapJoint"], [106, 0, 1, "", "LMiterJoint"], [124, 0, 1, "", "LapJoint"], [143, 0, 1, "", "NullJoint"], [160, 0, 1, "", "TBirdsmouthJoint"], [177, 0, 1, "", "TButtJoint"], [194, 0, 1, "", "TDovetailJoint"], [212, 0, 1, "", "TLapJoint"], [231, 0, 1, "", "TStepJoint"], [249, 0, 1, "", "TenonMortiseJoint"], [267, 0, 1, "", "XLapJoint"], [286, 0, 1, "", "YButtJoint"], [307, 2, 1, "", "find_neighboring_elements"]], "compas_timber.connections.BallNodeJoint": [[11, 1, 1, "", "ToString"], [12, 1, 1, "", "add_extensions"], [13, 1, 1, "", "add_features"], [14, 1, 1, "", "check_elements_compatibility"], [15, 1, 1, "", "copy"], [16, 1, 1, "", "create"], [17, 1, 1, "", "element_count_complies"], [18, 1, 1, "", "from_json"], [19, 1, 1, "", "from_jsonstring"], [20, 1, 1, "", "get_face_most_ortho_to_beam"], [21, 1, 1, "", "get_face_most_towards_beam"], [22, 1, 1, "", "restore_beams_from_keys"], [23, 1, 1, "", "sha256"], [24, 1, 1, "", "to_json"], [25, 1, 1, "", "to_jsonstring"], [26, 1, 1, "", "validate_data"]], "compas_timber.connections.ConnectionSolver": [[28, 1, 1, "", "find_intersecting_pairs"], [29, 1, 1, "", "find_topology"], [30, 1, 1, "", "find_wall_wall_topology"]], "compas_timber.connections.Joint": [[32, 1, 1, "", "ToString"], [33, 1, 1, "", "add_extensions"], [34, 1, 1, "", "add_features"], [35, 1, 1, "", "check_elements_compatibility"], [36, 1, 1, "", "copy"], [37, 1, 1, "", "create"], [38, 1, 1, "", "element_count_complies"], [39, 1, 1, "", "from_json"], [40, 1, 1, "", "from_jsonstring"], [41, 1, 1, "", "get_face_most_ortho_to_beam"], [42, 1, 1, "", "get_face_most_towards_beam"], [43, 1, 1, "", "restore_beams_from_keys"], [44, 1, 1, "", "sha256"], [45, 1, 1, "", "to_json"], [46, 1, 1, "", "to_jsonstring"], [47, 1, 1, "", "validate_data"]], "compas_timber.connections.JointTopology": [[49, 1, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[51, 1, 1, "", "ToString"], [52, 1, 1, "", "add_extensions"], [53, 1, 1, "", "add_features"], [54, 1, 1, "", "check_elements_compatibility"], [55, 1, 1, "", "copy"], [56, 1, 1, "", "create"], [57, 1, 1, "", "element_count_complies"], [58, 1, 1, "", "from_json"], [59, 1, 1, "", "from_jsonstring"], [60, 1, 1, "", "get_face_most_ortho_to_beam"], [61, 1, 1, "", "get_face_most_towards_beam"], [62, 1, 1, "", "restore_beams_from_keys"], [63, 1, 1, "", "sha256"], [64, 1, 1, "", "to_json"], [65, 1, 1, "", "to_jsonstring"], [66, 1, 1, "", "update_beam_roles"], [67, 1, 1, "", "validate_data"]], "compas_timber.connections.LFrenchRidgeLapJoint": [[69, 1, 1, "", "ToString"], [70, 1, 1, "", "add_extensions"], [71, 1, 1, "", "add_features"], [72, 1, 1, "", "check_elements_compatibility"], [73, 1, 1, "", "copy"], [74, 1, 1, "", "create"], [75, 1, 1, "", "element_count_complies"], [76, 1, 1, "", "from_json"], [77, 1, 1, "", "from_jsonstring"], [78, 1, 1, "", "get_cross_cutting_frame"], [79, 1, 1, "", "get_face_most_ortho_to_beam"], [80, 1, 1, "", "get_face_most_towards_beam"], [81, 1, 1, "", "get_main_cutting_frame"], [82, 1, 1, "", "restore_beams_from_keys"], [83, 1, 1, "", "sha256"], [84, 1, 1, "", "to_json"], [85, 1, 1, "", "to_jsonstring"], [86, 1, 1, "", "validate_data"]], "compas_timber.connections.LLapJoint": [[88, 1, 1, "", "ToString"], [89, 1, 1, "", "add_extensions"], [90, 1, 1, "", "add_features"], [91, 1, 1, "", "check_elements_compatibility"], [92, 1, 1, "", "copy"], [93, 1, 1, "", "create"], [94, 1, 1, "", "element_count_complies"], [95, 1, 1, "", "from_json"], [96, 1, 1, "", "from_jsonstring"], [97, 1, 1, "", "get_cross_cutting_frame"], [98, 1, 1, "", "get_face_most_ortho_to_beam"], [99, 1, 1, "", "get_face_most_towards_beam"], [100, 1, 1, "", "get_main_cutting_frame"], [101, 1, 1, "", "restore_beams_from_keys"], [102, 1, 1, "", "sha256"], [103, 1, 1, "", "to_json"], [104, 1, 1, "", "to_jsonstring"], [105, 1, 1, "", "validate_data"]], "compas_timber.connections.LMiterJoint": [[107, 1, 1, "", "ToString"], [108, 1, 1, "", "add_extensions"], [109, 1, 1, "", "add_features"], [110, 1, 1, "", "check_elements_compatibility"], [111, 1, 1, "", "copy"], [112, 1, 1, "", "create"], [113, 1, 1, "", "element_count_complies"], [114, 1, 1, "", "from_json"], [115, 1, 1, "", "from_jsonstring"], [116, 1, 1, "", "get_cutting_planes"], [117, 1, 1, "", "get_face_most_ortho_to_beam"], [118, 1, 1, "", "get_face_most_towards_beam"], [119, 1, 1, "", "restore_beams_from_keys"], [120, 1, 1, "", "sha256"], [121, 1, 1, "", "to_json"], [122, 1, 1, "", "to_jsonstring"], [123, 1, 1, "", "validate_data"]], "compas_timber.connections.LapJoint": [[125, 1, 1, "", "ToString"], [126, 1, 1, "", "add_extensions"], [127, 1, 1, "", "add_features"], [128, 1, 1, "", "check_elements_compatibility"], [129, 1, 1, "", "copy"], [130, 1, 1, "", "create"], [131, 1, 1, "", "element_count_complies"], [132, 1, 1, "", "from_json"], [133, 1, 1, "", "from_jsonstring"], [134, 1, 1, "", "get_cross_cutting_frame"], [135, 1, 1, "", "get_face_most_ortho_to_beam"], [136, 1, 1, "", "get_face_most_towards_beam"], [137, 1, 1, "", "get_main_cutting_frame"], [138, 1, 1, "", "restore_beams_from_keys"], [139, 1, 1, "", "sha256"], [140, 1, 1, "", "to_json"], [141, 1, 1, "", "to_jsonstring"], [142, 1, 1, "", "validate_data"]], "compas_timber.connections.NullJoint": [[144, 1, 1, "", "ToString"], [145, 1, 1, "", "add_extensions"], [146, 1, 1, "", "add_features"], [147, 1, 1, "", "check_elements_compatibility"], [148, 1, 1, "", "copy"], [149, 1, 1, "", "create"], [150, 1, 1, "", "element_count_complies"], [151, 1, 1, "", "from_json"], [152, 1, 1, "", "from_jsonstring"], [153, 1, 1, "", "get_face_most_ortho_to_beam"], [154, 1, 1, "", "get_face_most_towards_beam"], [155, 1, 1, "", "restore_beams_from_keys"], [156, 1, 1, "", "sha256"], [157, 1, 1, "", "to_json"], [158, 1, 1, "", "to_jsonstring"], [159, 1, 1, "", "validate_data"]], "compas_timber.connections.TBirdsmouthJoint": [[161, 1, 1, "", "ToString"], [162, 1, 1, "", "add_extensions"], [163, 1, 1, "", "add_features"], [164, 1, 1, "", "check_elements_compatibility"], [165, 1, 1, "", "copy"], [166, 1, 1, "", "create"], [167, 1, 1, "", "element_count_complies"], [168, 1, 1, "", "from_json"], [169, 1, 1, "", "from_jsonstring"], [170, 1, 1, "", "get_face_most_ortho_to_beam"], [171, 1, 1, "", "get_face_most_towards_beam"], [172, 1, 1, "", "restore_beams_from_keys"], [173, 1, 1, "", "sha256"], [174, 1, 1, "", "to_json"], [175, 1, 1, "", "to_jsonstring"], [176, 1, 1, "", "validate_data"]], "compas_timber.connections.TButtJoint": [[178, 1, 1, "", "ToString"], [179, 1, 1, "", "add_extensions"], [180, 1, 1, "", "add_features"], [181, 1, 1, "", "check_elements_compatibility"], [182, 1, 1, "", "copy"], [183, 1, 1, "", "create"], [184, 1, 1, "", "element_count_complies"], [185, 1, 1, "", "from_json"], [186, 1, 1, "", "from_jsonstring"], [187, 1, 1, "", "get_face_most_ortho_to_beam"], [188, 1, 1, "", "get_face_most_towards_beam"], [189, 1, 1, "", "restore_beams_from_keys"], [190, 1, 1, "", "sha256"], [191, 1, 1, "", "to_json"], [192, 1, 1, "", "to_jsonstring"], [193, 1, 1, "", "validate_data"]], "compas_timber.connections.TDovetailJoint": [[195, 1, 1, "", "ToString"], [196, 1, 1, "", "add_extensions"], [197, 1, 1, "", "add_features"], [198, 1, 1, "", "check_elements_compatibility"], [199, 1, 1, "", "copy"], [200, 1, 1, "", "create"], [201, 1, 1, "", "define_dovetail_tool"], [202, 1, 1, "", "element_count_complies"], [203, 1, 1, "", "from_json"], [204, 1, 1, "", "from_jsonstring"], [205, 1, 1, "", "get_face_most_ortho_to_beam"], [206, 1, 1, "", "get_face_most_towards_beam"], [207, 1, 1, "", "restore_beams_from_keys"], [208, 1, 1, "", "sha256"], [209, 1, 1, "", "to_json"], [210, 1, 1, "", "to_jsonstring"], [211, 1, 1, "", "validate_data"]], "compas_timber.connections.TLapJoint": [[213, 1, 1, "", "ToString"], [214, 1, 1, "", "add_extensions"], [215, 1, 1, "", "add_features"], [216, 1, 1, "", "check_elements_compatibility"], [217, 1, 1, "", "copy"], [218, 1, 1, "", "create"], [219, 1, 1, "", "element_count_complies"], [220, 1, 1, "", "from_json"], [221, 1, 1, "", "from_jsonstring"], [222, 1, 1, "", "get_cross_cutting_frame"], [223, 1, 1, "", "get_face_most_ortho_to_beam"], [224, 1, 1, "", "get_face_most_towards_beam"], [225, 1, 1, "", "get_main_cutting_frame"], [226, 1, 1, "", "restore_beams_from_keys"], [227, 1, 1, "", "sha256"], [228, 1, 1, "", "to_json"], [229, 1, 1, "", "to_jsonstring"], [230, 1, 1, "", "validate_data"]], "compas_timber.connections.TStepJoint": [[232, 1, 1, "", "ToString"], [233, 1, 1, "", "add_extensions"], [234, 1, 1, "", "add_features"], [235, 1, 1, "", "check_elements_compatibility"], [236, 1, 1, "", "copy"], [237, 1, 1, "", "create"], [238, 1, 1, "", "element_count_complies"], [239, 1, 1, "", "from_json"], [240, 1, 1, "", "from_jsonstring"], [241, 1, 1, "", "get_face_most_ortho_to_beam"], [242, 1, 1, "", "get_face_most_towards_beam"], [243, 1, 1, "", "restore_beams_from_keys"], [244, 1, 1, "", "set_step_depths"], [245, 1, 1, "", "sha256"], [246, 1, 1, "", "to_json"], [247, 1, 1, "", "to_jsonstring"], [248, 1, 1, "", "validate_data"]], "compas_timber.connections.TenonMortiseJoint": [[250, 1, 1, "", "ToString"], [251, 1, 1, "", "add_extensions"], [252, 1, 1, "", "add_features"], [253, 1, 1, "", "check_elements_compatibility"], [254, 1, 1, "", "copy"], [255, 1, 1, "", "create"], [256, 1, 1, "", "element_count_complies"], [257, 1, 1, "", "from_json"], [258, 1, 1, "", "from_jsonstring"], [259, 1, 1, "", "get_face_most_ortho_to_beam"], [260, 1, 1, "", "get_face_most_towards_beam"], [261, 1, 1, "", "restore_beams_from_keys"], [262, 1, 1, "", "set_default_values"], [263, 1, 1, "", "sha256"], [264, 1, 1, "", "to_json"], [265, 1, 1, "", "to_jsonstring"], [266, 1, 1, "", "validate_data"]], "compas_timber.connections.XLapJoint": [[268, 1, 1, "", "ToString"], [269, 1, 1, "", "add_extensions"], [270, 1, 1, "", "add_features"], [271, 1, 1, "", "check_elements_compatibility"], [272, 1, 1, "", "copy"], [273, 1, 1, "", "create"], [274, 1, 1, "", "element_count_complies"], [275, 1, 1, "", "from_json"], [276, 1, 1, "", "from_jsonstring"], [277, 1, 1, "", "get_cross_cutting_frame"], [278, 1, 1, "", "get_face_most_ortho_to_beam"], [279, 1, 1, "", "get_face_most_towards_beam"], [280, 1, 1, "", "get_main_cutting_frame"], [281, 1, 1, "", "restore_beams_from_keys"], [282, 1, 1, "", "sha256"], [283, 1, 1, "", "to_json"], [284, 1, 1, "", "to_jsonstring"], [285, 1, 1, "", "validate_data"]], "compas_timber.connections.YButtJoint": [[287, 1, 1, "", "ToString"], [288, 1, 1, "", "add_extensions"], [289, 1, 1, "", "add_features"], [290, 1, 1, "", "check_beam_compatibility"], [291, 1, 1, "", "check_elements_compatibility"], [292, 1, 1, "", "copy"], [293, 1, 1, "", "create"], [294, 1, 1, "", "cross_beam_ref_side_index"], [295, 1, 1, "", "element_count_complies"], [296, 1, 1, "", "from_json"], [297, 1, 1, "", "from_jsonstring"], [298, 1, 1, "", "get_face_most_ortho_to_beam"], [299, 1, 1, "", "get_face_most_towards_beam"], [300, 1, 1, "", "get_miter_planes"], [301, 1, 1, "", "main_beam_ref_side_index"], [302, 1, 1, "", "restore_beams_from_keys"], [303, 1, 1, "", "sha256"], [304, 1, 1, "", "to_json"], [305, 1, 1, "", "to_jsonstring"], [306, 1, 1, "", "validate_data"]], "compas_timber.design": [[308, 0, 1, "", "CategoryRule"], [316, 0, 1, "", "DebugInfomation"], [321, 0, 1, "", "DirectRule"], [329, 0, 1, "", "FeatureDefinition"], [331, 0, 1, "", "JointDefinition"], [335, 0, 1, "", "JointRule"], [341, 0, 1, "", "SurfaceModel"], [359, 0, 1, "", "TopologyRule"], [366, 2, 1, "", "guess_joint_topology_2beams"], [367, 2, 1, "", "set_default_joints"]], "compas_timber.design.CategoryRule": [[309, 1, 1, "", "ToString"], [310, 1, 1, "", "comply"], [311, 1, 1, "", "get_category_rules"], [312, 1, 1, "", "get_direct_rules"], [313, 1, 1, "", "get_topology_rules"], [314, 1, 1, "", "joints_from_beams_and_rules"], [315, 1, 1, "", "reorder"]], "compas_timber.design.DebugInfomation": [[317, 1, 1, "", "ToString"], [318, 1, 1, "", "add_fastener_error"], [319, 1, 1, "", "add_feature_error"], [320, 1, 1, "", "add_joint_error"]], "compas_timber.design.DirectRule": [[322, 1, 1, "", "ToString"], [323, 1, 1, "", "comply"], [324, 1, 1, "", "contains"], [325, 1, 1, "", "get_category_rules"], [326, 1, 1, "", "get_direct_rules"], [327, 1, 1, "", "get_topology_rules"], [328, 1, 1, "", "joints_from_beams_and_rules"]], "compas_timber.design.FeatureDefinition": [[330, 1, 1, "", "ToString"]], "compas_timber.design.JointDefinition": [[332, 1, 1, "", "ToString"], [333, 1, 1, "", "is_identical"], [334, 1, 1, "", "match"]], "compas_timber.design.JointRule": [[336, 1, 1, "", "comply"], [337, 1, 1, "", "get_category_rules"], [338, 1, 1, "", "get_direct_rules"], [339, 1, 1, "", "get_topology_rules"], [340, 1, 1, "", "joints_from_beams_and_rules"]], "compas_timber.design.SurfaceModel": [[342, 1, 1, "", "beam_category_names"], [343, 1, 1, "", "create_model"], [344, 1, 1, "", "cull_overlaps"], [345, 1, 1, "", "distance_between_elements"], [346, 1, 1, "", "generate_frame"], [347, 1, 1, "", "generate_perimeter_beams"], [348, 1, 1, "", "generate_plates"], [349, 1, 1, "", "generate_stud_lines"], [350, 1, 1, "", "generate_studs"], [351, 1, 1, "", "generate_windows"], [352, 1, 1, "", "get_beam_intersections"], [353, 1, 1, "", "get_interior_segment_indices"], [354, 1, 1, "", "offset_elements"], [355, 1, 1, "", "parse_loops"], [356, 1, 1, "", "trim_jack_studs"], [357, 1, 1, "", "trim_king_studs"], [358, 1, 1, "", "trim_studs"]], "compas_timber.design.TopologyRule": [[360, 1, 1, "", "ToString"], [361, 1, 1, "", "comply"], [362, 1, 1, "", "get_category_rules"], [363, 1, 1, "", "get_direct_rules"], [364, 1, 1, "", "get_topology_rules"], [365, 1, 1, "", "joints_from_beams_and_rules"]], "compas_timber.elements": [[368, 0, 1, "", "Beam"], [397, 0, 1, "", "Fastener"], [417, 0, 1, "", "FastenerTimberInterface"], [427, 0, 1, "", "Plate"], [449, 0, 1, "", "TimberElement"], [469, 0, 1, "", "Wall"]], "compas_timber.elements.Beam": [[369, 1, 1, "", "ToString"], [370, 1, 1, "", "add_blank_extension"], [371, 1, 1, "", "add_feature"], [372, 1, 1, "", "add_features"], [373, 1, 1, "", "compute_aabb"], [374, 1, 1, "", "compute_collision_mesh"], [375, 1, 1, "", "compute_geometry"], [376, 1, 1, "", "compute_obb"], [377, 1, 1, "", "compute_worldtransformation"], [378, 1, 1, "", "copy"], [379, 1, 1, "", "endpoint_closest_to_point"], [380, 1, 1, "", "extension_to_plane"], [381, 1, 1, "", "from_centerline"], [382, 1, 1, "", "from_endpoints"], [383, 1, 1, "", "from_json"], [384, 1, 1, "", "from_jsonstring"], [385, 1, 1, "", "get_dimensions_relative_to_side"], [386, 1, 1, "", "opposing_side_index"], [387, 1, 1, "", "remove_blank_extension"], [388, 1, 1, "", "remove_features"], [389, 1, 1, "", "reset"], [390, 1, 1, "", "sha256"], [391, 1, 1, "", "side_as_surface"], [392, 1, 1, "", "to_json"], [393, 1, 1, "", "to_jsonstring"], [394, 1, 1, "", "transform"], [395, 1, 1, "", "transformed"], [396, 1, 1, "", "validate_data"]], "compas_timber.elements.Fastener": [[398, 1, 1, "", "ToString"], [399, 1, 1, "", "add_feature"], [400, 1, 1, "", "compute_aabb"], [401, 1, 1, "", "compute_collision_mesh"], [402, 1, 1, "", "compute_geometry"], [403, 1, 1, "", "compute_obb"], [404, 1, 1, "", "compute_worldtransformation"], [405, 1, 1, "", "copy"], [406, 1, 1, "", "from_json"], [407, 1, 1, "", "from_jsonstring"], [408, 1, 1, "", "remove_blank_extension"], [409, 1, 1, "", "remove_features"], [410, 1, 1, "", "reset"], [411, 1, 1, "", "sha256"], [412, 1, 1, "", "to_json"], [413, 1, 1, "", "to_jsonstring"], [414, 1, 1, "", "transform"], [415, 1, 1, "", "transformed"], [416, 1, 1, "", "validate_data"]], "compas_timber.elements.FastenerTimberInterface": [[418, 1, 1, "", "ToString"], [419, 1, 1, "", "copy"], [420, 1, 1, "", "from_json"], [421, 1, 1, "", "from_jsonstring"], [422, 1, 1, "", "get_features"], [423, 1, 1, "", "sha256"], [424, 1, 1, "", "to_json"], [425, 1, 1, "", "to_jsonstring"], [426, 1, 1, "", "validate_data"]], "compas_timber.elements.Plate": [[428, 1, 1, "", "ToString"], [429, 1, 1, "", "add_feature"], [430, 1, 1, "", "add_features"], [431, 1, 1, "", "compute_aabb"], [432, 1, 1, "", "compute_collision_mesh"], [433, 1, 1, "", "compute_geometry"], [434, 1, 1, "", "compute_obb"], [435, 1, 1, "", "compute_worldtransformation"], [436, 1, 1, "", "copy"], [437, 1, 1, "", "from_json"], [438, 1, 1, "", "from_jsonstring"], [439, 1, 1, "", "remove_blank_extension"], [440, 1, 1, "", "remove_features"], [441, 1, 1, "", "reset"], [442, 1, 1, "", "set_frame_and_outline"], [443, 1, 1, "", "sha256"], [444, 1, 1, "", "to_json"], [445, 1, 1, "", "to_jsonstring"], [446, 1, 1, "", "transform"], [447, 1, 1, "", "transformed"], [448, 1, 1, "", "validate_data"]], "compas_timber.elements.TimberElement": [[450, 1, 1, "", "ToString"], [451, 1, 1, "", "add_feature"], [452, 1, 1, "", "compute_aabb"], [453, 1, 1, "", "compute_collision_mesh"], [454, 1, 1, "", "compute_geometry"], [455, 1, 1, "", "compute_obb"], [456, 1, 1, "", "compute_worldtransformation"], [457, 1, 1, "", "copy"], [458, 1, 1, "", "from_json"], [459, 1, 1, "", "from_jsonstring"], [460, 1, 1, "", "remove_blank_extension"], [461, 1, 1, "", "remove_features"], [462, 1, 1, "", "reset"], [463, 1, 1, "", "sha256"], [464, 1, 1, "", "to_json"], [465, 1, 1, "", "to_jsonstring"], [466, 1, 1, "", "transform"], [467, 1, 1, "", "transformed"], [468, 1, 1, "", "validate_data"]], "compas_timber.elements.Wall": [[470, 1, 1, "", "ToString"], [471, 1, 1, "", "add_feature"], [472, 1, 1, "", "compute_aabb"], [473, 1, 1, "", "compute_collision_mesh"], [474, 1, 1, "", "compute_geometry"], [475, 1, 1, "", "compute_obb"], [476, 1, 1, "", "compute_worldtransformation"], [477, 1, 1, "", "copy"], [478, 1, 1, "", "from_boundary"], [479, 1, 1, "", "from_brep"], [480, 1, 1, "", "from_json"], [481, 1, 1, "", "from_jsonstring"], [482, 1, 1, "", "remove_blank_extension"], [483, 1, 1, "", "remove_features"], [484, 1, 1, "", "reset"], [485, 1, 1, "", "rotate"], [486, 1, 1, "", "sha256"], [487, 1, 1, "", "to_json"], [488, 1, 1, "", "to_jsonstring"], [489, 1, 1, "", "transform"], [490, 1, 1, "", "transformed"], [491, 1, 1, "", "validate_data"]], "compas_timber.errors": [[492, 3, 1, "", "BeamJoiningError"], [493, 3, 1, "", "FastenerApplicationError"], [494, 3, 1, "", "FeatureApplicationError"]], "compas_timber.fabrication": [[495, 0, 1, "", "BTLxPart"], [498, 0, 1, "", "BTLxProcessing"], [508, 0, 1, "", "BTLxWriter"], [511, 0, 1, "", "DoubleCut"], [525, 0, 1, "", "DovetailMortise"], [541, 0, 1, "", "DovetailTenon"], [557, 0, 1, "", "Drilling"], [571, 0, 1, "", "EdgePositionType"], [572, 0, 1, "", "FrenchRidgeLap"], [586, 0, 1, "", "JackRafterCut"], [600, 0, 1, "", "Lap"], [614, 0, 1, "", "LimitationTopType"], [615, 0, 1, "", "MachiningLimits"], [616, 0, 1, "", "Mortise"], [630, 0, 1, "", "OrientationType"], [631, 0, 1, "", "Slot"], [643, 0, 1, "", "StepJoint"], [658, 0, 1, "", "StepJointNotch"], [673, 0, 1, "", "StepShapeType"], [674, 0, 1, "", "Tenon"], [688, 0, 1, "", "TenonShapeType"]], "compas_timber.fabrication.BTLxPart": [[496, 1, 1, "", "et_point_vals"], [497, 1, 1, "", "ref_side_from_face"]], "compas_timber.fabrication.BTLxProcessing": [[499, 1, 1, "", "ToString"], [500, 1, 1, "", "add_subprocessing"], [501, 1, 1, "", "copy"], [502, 1, 1, "", "from_json"], [503, 1, 1, "", "from_jsonstring"], [504, 1, 1, "", "sha256"], [505, 1, 1, "", "to_json"], [506, 1, 1, "", "to_jsonstring"], [507, 1, 1, "", "validate_data"]], "compas_timber.fabrication.BTLxWriter": [[509, 1, 1, "", "model_to_xml"], [510, 1, 1, "", "write"]], "compas_timber.fabrication.DoubleCut": [[512, 1, 1, "", "ToString"], [513, 1, 1, "", "add_subprocessing"], [514, 1, 1, "", "apply"], [515, 1, 1, "", "copy"], [516, 1, 1, "", "from_json"], [517, 1, 1, "", "from_jsonstring"], [518, 1, 1, "", "from_planes_and_beam"], [519, 1, 1, "", "from_shapes_and_element"], [520, 1, 1, "", "planes_from_params_and_beam"], [521, 1, 1, "", "sha256"], [522, 1, 1, "", "to_json"], [523, 1, 1, "", "to_jsonstring"], [524, 1, 1, "", "validate_data"]], "compas_timber.fabrication.DovetailMortise": [[526, 1, 1, "", "ToString"], [527, 1, 1, "", "add_subprocessing"], [528, 1, 1, "", "apply"], [529, 1, 1, "", "copy"], [530, 1, 1, "", "define_dovetail_tool"], [531, 1, 1, "", "dovetail_cutting_frames_from_params_and_beam"], [532, 1, 1, "", "dovetail_volume_from_params_and_beam"], [533, 1, 1, "", "frame_from_params_and_beam"], [534, 1, 1, "", "from_frame_and_beam"], [535, 1, 1, "", "from_json"], [536, 1, 1, "", "from_jsonstring"], [537, 1, 1, "", "sha256"], [538, 1, 1, "", "to_json"], [539, 1, 1, "", "to_jsonstring"], [540, 1, 1, "", "validate_data"]], "compas_timber.fabrication.DovetailTenon": [[542, 1, 1, "", "ToString"], [543, 1, 1, "", "add_subprocessing"], [544, 1, 1, "", "apply"], [545, 1, 1, "", "copy"], [546, 1, 1, "", "define_dovetail_tool"], [547, 1, 1, "", "dovetail_cutting_frames_from_params_and_beam"], [548, 1, 1, "", "dovetail_volume_from_params_and_beam"], [549, 1, 1, "", "frame_from_params_and_beam"], [550, 1, 1, "", "from_json"], [551, 1, 1, "", "from_jsonstring"], [552, 1, 1, "", "from_plane_and_beam"], [553, 1, 1, "", "sha256"], [554, 1, 1, "", "to_json"], [555, 1, 1, "", "to_jsonstring"], [556, 1, 1, "", "validate_data"]], "compas_timber.fabrication.Drilling": [[558, 1, 1, "", "ToString"], [559, 1, 1, "", "add_subprocessing"], [560, 1, 1, "", "apply"], [561, 1, 1, "", "copy"], [562, 1, 1, "", "cylinder_from_params_and_element"], [563, 1, 1, "", "from_json"], [564, 1, 1, "", "from_jsonstring"], [565, 1, 1, "", "from_line_and_element"], [566, 1, 1, "", "from_shapes_and_element"], [567, 1, 1, "", "sha256"], [568, 1, 1, "", "to_json"], [569, 1, 1, "", "to_jsonstring"], [570, 1, 1, "", "validate_data"]], "compas_timber.fabrication.FrenchRidgeLap": [[573, 1, 1, "", "ToString"], [574, 1, 1, "", "add_subprocessing"], [575, 1, 1, "", "apply"], [576, 1, 1, "", "copy"], [577, 1, 1, "", "frame_from_params_and_beam"], [578, 1, 1, "", "from_beam_beam_and_plane"], [579, 1, 1, "", "from_json"], [580, 1, 1, "", "from_jsonstring"], [581, 1, 1, "", "lap_volume_from_params_and_beam"], [582, 1, 1, "", "sha256"], [583, 1, 1, "", "to_json"], [584, 1, 1, "", "to_jsonstring"], [585, 1, 1, "", "validate_data"]], "compas_timber.fabrication.JackRafterCut": [[587, 1, 1, "", "ToString"], [588, 1, 1, "", "add_subprocessing"], [589, 1, 1, "", "apply"], [590, 1, 1, "", "copy"], [591, 1, 1, "", "from_json"], [592, 1, 1, "", "from_jsonstring"], [593, 1, 1, "", "from_plane_and_beam"], [594, 1, 1, "", "from_shapes_and_element"], [595, 1, 1, "", "plane_from_params_and_beam"], [596, 1, 1, "", "sha256"], [597, 1, 1, "", "to_json"], [598, 1, 1, "", "to_jsonstring"], [599, 1, 1, "", "validate_data"]], "compas_timber.fabrication.Lap": [[601, 1, 1, "", "ToString"], [602, 1, 1, "", "add_subprocessing"], [603, 1, 1, "", "apply"], [604, 1, 1, "", "copy"], [605, 1, 1, "", "from_json"], [606, 1, 1, "", "from_jsonstring"], [607, 1, 1, "", "from_plane_and_beam"], [608, 1, 1, "", "planes_from_params_and_beam"], [609, 1, 1, "", "sha256"], [610, 1, 1, "", "to_json"], [611, 1, 1, "", "to_jsonstring"], [612, 1, 1, "", "validate_data"], [613, 1, 1, "", "volume_from_params_and_beam"]], "compas_timber.fabrication.Mortise": [[617, 1, 1, "", "ToString"], [618, 1, 1, "", "add_subprocessing"], [619, 1, 1, "", "apply"], [620, 1, 1, "", "copy"], [621, 1, 1, "", "frame_from_params_and_beam"], [622, 1, 1, "", "from_frame_and_beam"], [623, 1, 1, "", "from_json"], [624, 1, 1, "", "from_jsonstring"], [625, 1, 1, "", "sha256"], [626, 1, 1, "", "to_json"], [627, 1, 1, "", "to_jsonstring"], [628, 1, 1, "", "validate_data"], [629, 1, 1, "", "volume_from_params_and_beam"]], "compas_timber.fabrication.Slot": [[632, 1, 1, "", "ToString"], [633, 1, 1, "", "add_subprocessing"], [634, 1, 1, "", "apply"], [635, 1, 1, "", "copy"], [636, 1, 1, "", "from_json"], [637, 1, 1, "", "from_jsonstring"], [638, 1, 1, "", "from_plane_and_beam"], [639, 1, 1, "", "sha256"], [640, 1, 1, "", "to_json"], [641, 1, 1, "", "to_jsonstring"], [642, 1, 1, "", "validate_data"]], "compas_timber.fabrication.StepJoint": [[644, 1, 1, "", "ToString"], [645, 1, 1, "", "add_subprocessing"], [646, 1, 1, "", "add_tenon"], [647, 1, 1, "", "apply"], [648, 1, 1, "", "copy"], [649, 1, 1, "", "from_json"], [650, 1, 1, "", "from_jsonstring"], [651, 1, 1, "", "from_plane_and_beam"], [652, 1, 1, "", "planes_from_params_and_beam"], [653, 1, 1, "", "sha256"], [654, 1, 1, "", "tenon_volume_from_params_and_beam"], [655, 1, 1, "", "to_json"], [656, 1, 1, "", "to_jsonstring"], [657, 1, 1, "", "validate_data"]], "compas_timber.fabrication.StepJointNotch": [[659, 1, 1, "", "ToString"], [660, 1, 1, "", "add_mortise"], [661, 1, 1, "", "add_subprocessing"], [662, 1, 1, "", "apply"], [663, 1, 1, "", "copy"], [664, 1, 1, "", "from_json"], [665, 1, 1, "", "from_jsonstring"], [666, 1, 1, "", "from_plane_and_beam"], [667, 1, 1, "", "mortise_volume_from_params_and_beam"], [668, 1, 1, "", "planes_from_params_and_beam"], [669, 1, 1, "", "sha256"], [670, 1, 1, "", "to_json"], [671, 1, 1, "", "to_jsonstring"], [672, 1, 1, "", "validate_data"]], "compas_timber.fabrication.Tenon": [[675, 1, 1, "", "ToString"], [676, 1, 1, "", "add_subprocessing"], [677, 1, 1, "", "apply"], [678, 1, 1, "", "copy"], [679, 1, 1, "", "frame_from_params_and_beam"], [680, 1, 1, "", "from_json"], [681, 1, 1, "", "from_jsonstring"], [682, 1, 1, "", "from_plane_and_beam"], [683, 1, 1, "", "sha256"], [684, 1, 1, "", "to_json"], [685, 1, 1, "", "to_jsonstring"], [686, 1, 1, "", "validate_data"], [687, 1, 1, "", "volume_from_params_and_beam"]], "compas_timber.ghpython": [[689, 2, 1, "", "add_gh_param"], [690, 2, 1, "", "clear_gh_params"], [691, 2, 1, "", "get_leaf_subclasses"], [692, 2, 1, "", "item_input_valid"], [693, 2, 1, "", "list_input_valid"], [694, 2, 1, "", "manage_dynamic_params"], [695, 2, 1, "", "rename_gh_input"]], "compas_timber.model": [[696, 0, 1, "", "TimberModel"]], "compas_timber.model.TimberModel": [[697, 1, 1, "", "ToString"], [698, 1, 1, "", "add_element"], [699, 1, 1, "", "add_elements"], [700, 1, 1, "", "add_group"], [701, 1, 1, "", "add_group_element"], [702, 1, 1, "", "add_interaction"], [703, 1, 1, "", "add_joint"], [704, 1, 1, "", "add_material"], [705, 1, 1, "", "assign_material"], [706, 1, 1, "", "compute_aabb"], [707, 1, 1, "", "compute_obb"], [708, 1, 1, "", "connect_adjacent_walls"], [709, 1, 1, "", "copy"], [710, 1, 1, "", "element_by_guid"], [711, 1, 1, "", "elements"], [712, 1, 1, "", "elements_connected_by"], [713, 1, 1, "", "from_json"], [714, 1, 1, "", "from_jsonstring"], [715, 1, 1, "", "get_elements_in_group"], [716, 1, 1, "", "get_interactions_for_element"], [717, 1, 1, "", "has_element"], [718, 1, 1, "", "has_group"], [719, 1, 1, "", "has_interaction"], [720, 1, 1, "", "has_material"], [721, 1, 1, "", "interactions"], [722, 1, 1, "", "materials"], [723, 1, 1, "", "process_joinery"], [724, 1, 1, "", "remove_element"], [725, 1, 1, "", "remove_interaction"], [726, 1, 1, "", "remove_joint"], [727, 1, 1, "", "rotate"], [728, 1, 1, "", "rotated"], [729, 1, 1, "", "scale"], [730, 1, 1, "", "scaled"], [731, 1, 1, "", "set_topologies"], [732, 1, 1, "", "sha256"], [733, 1, 1, "", "to_json"], [734, 1, 1, "", "to_jsonstring"], [735, 1, 1, "", "transform"], [736, 1, 1, "", "transform_numpy"], [737, 1, 1, "", "transformed"], [738, 1, 1, "", "transformed_numpy"], [739, 1, 1, "", "translate"], [740, 1, 1, "", "translated"], [741, 1, 1, "", "validate_data"]], "compas_timber.planning": [[742, 0, 1, "", "Actor"], [744, 0, 1, "", "BuildingPlan"], [754, 0, 1, "", "BuildingPlanParser"], [757, 0, 1, "", "Instruction"], [767, 0, 1, "", "LinearDimension"], [777, 0, 1, "", "Model3d"], [787, 0, 1, "", "SimpleSequenceGenerator"], [788, 0, 1, "", "Step"], [798, 0, 1, "", "Text3d"]], "compas_timber.planning.Actor": [[743, 1, 1, "", "get_name"]], "compas_timber.planning.BuildingPlan": [[745, 1, 1, "", "ToString"], [746, 1, 1, "", "add_step"], [747, 1, 1, "", "copy"], [748, 1, 1, "", "from_json"], [749, 1, 1, "", "from_jsonstring"], [750, 1, 1, "", "sha256"], [751, 1, 1, "", "to_json"], [752, 1, 1, "", "to_jsonstring"], [753, 1, 1, "", "validate_data"]], "compas_timber.planning.BuildingPlanParser": [[755, 1, 1, "", "parse"], [756, 1, 1, "", "serialize"]], "compas_timber.planning.Instruction": [[758, 1, 1, "", "ToString"], [759, 1, 1, "", "copy"], [760, 1, 1, "", "from_json"], [761, 1, 1, "", "from_jsonstring"], [762, 1, 1, "", "sha256"], [763, 1, 1, "", "to_json"], [764, 1, 1, "", "to_jsonstring"], [765, 1, 1, "", "transform"], [766, 1, 1, "", "validate_data"]], "compas_timber.planning.LinearDimension": [[768, 1, 1, "", "ToString"], [769, 1, 1, "", "copy"], [770, 1, 1, "", "from_json"], [771, 1, 1, "", "from_jsonstring"], [772, 1, 1, "", "sha256"], [773, 1, 1, "", "to_json"], [774, 1, 1, "", "to_jsonstring"], [775, 1, 1, "", "transform"], [776, 1, 1, "", "validate_data"]], "compas_timber.planning.Model3d": [[778, 1, 1, "", "ToString"], [779, 1, 1, "", "copy"], [780, 1, 1, "", "from_json"], [781, 1, 1, "", "from_jsonstring"], [782, 1, 1, "", "sha256"], [783, 1, 1, "", "to_json"], [784, 1, 1, "", "to_jsonstring"], [785, 1, 1, "", "transform"], [786, 1, 1, "", "validate_data"]], "compas_timber.planning.Step": [[789, 1, 1, "", "ToString"], [790, 1, 1, "", "copy"], [791, 1, 1, "", "from_json"], [792, 1, 1, "", "from_jsonstring"], [793, 1, 1, "", "sha256"], [794, 1, 1, "", "to_json"], [795, 1, 1, "", "to_jsonstring"], [796, 1, 1, "", "transform"], [797, 1, 1, "", "validate_data"]], "compas_timber.planning.Text3d": [[799, 1, 1, "", "ToString"], [800, 1, 1, "", "copy"], [801, 1, 1, "", "from_json"], [802, 1, 1, "", "from_jsonstring"], [803, 1, 1, "", "sha256"], [804, 1, 1, "", "to_json"], [805, 1, 1, "", "to_jsonstring"], [806, 1, 1, "", "transform"], [807, 1, 1, "", "validate_data"]], "compas_timber.rhino": [[808, 2, 1, "", "find_neighboring_elements"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:exception"}, "terms": {"": [12, 20, 21, 26, 33, 34, 41, 42, 47, 60, 61, 67, 72, 79, 80, 86, 98, 99, 105, 117, 118, 123, 126, 127, 135, 136, 142, 145, 153, 154, 159, 160, 170, 171, 176, 187, 188, 193, 194, 205, 206, 211, 223, 224, 230, 231, 241, 242, 248, 249, 259, 260, 266, 269, 278, 279, 285, 298, 299, 306, 368, 379, 381, 382, 396, 397, 416, 417, 426, 448, 468, 491, 507, 524, 534, 540, 556, 570, 585, 599, 612, 622, 628, 642, 657, 658, 672, 686, 701, 741, 753, 766, 776, 786, 797, 807, 817, 818, 823, 826], "0": [20, 23, 28, 41, 44, 60, 63, 79, 83, 87, 98, 102, 117, 120, 124, 135, 139, 153, 156, 170, 173, 187, 190, 194, 205, 208, 212, 223, 227, 231, 241, 245, 249, 259, 263, 267, 278, 282, 298, 303, 307, 368, 373, 376, 386, 390, 391, 400, 403, 411, 423, 431, 434, 443, 452, 455, 463, 472, 475, 486, 498, 504, 511, 518, 521, 525, 534, 537, 541, 552, 553, 557, 567, 572, 578, 582, 586, 593, 596, 600, 607, 609, 616, 622, 625, 639, 643, 646, 651, 653, 658, 660, 666, 669, 674, 682, 683, 694, 708, 732, 750, 762, 772, 782, 793, 803, 808, 811, 813, 818, 822, 823], "01": [822, 823], "02": 814, "06": [29, 30, 366], "09": [310, 314, 323, 328, 340, 361, 365], "1": [21, 23, 42, 44, 61, 63, 80, 83, 87, 99, 102, 118, 120, 124, 136, 139, 154, 156, 171, 173, 188, 190, 194, 206, 208, 212, 224, 227, 231, 242, 245, 249, 260, 263, 267, 279, 282, 299, 303, 368, 390, 411, 423, 443, 463, 472, 486, 497, 504, 511, 521, 525, 537, 541, 553, 567, 572, 582, 586, 596, 600, 609, 616, 625, 639, 643, 653, 658, 669, 674, 683, 690, 732, 750, 762, 772, 782, 793, 803, 811, 816, 818, 823, 827], "10": [534, 552, 809, 813], "100": 701, "1000": [525, 541, 616, 643, 646, 658, 660, 674], "100000": [511, 525, 541, 572, 586, 600, 616, 643, 658, 674], "15": [534, 552], "17": 814, "179": [511, 525, 541, 572, 586, 600, 616, 643, 658, 674, 822], "180": [525, 616], "1e": [29, 30, 310, 314, 323, 328, 340, 361, 365, 366], "2": [194, 231, 249, 368, 811, 816, 823, 827], "20": [534, 552, 557, 622, 651, 666, 682], "200": 701, "2020": 814, "2022": 809, "2023": 809, "28": [534, 552, 622, 682], "3": [194, 249, 368, 813, 816, 823, 827], "30": [525, 541], "300": 701, "3000": 701, "35": [525, 541], "3d": [767, 777, 812], "4": [194, 249, 368, 811, 816, 823], "40": [534, 552, 622, 682], "5": [87, 124, 212, 267, 368, 386, 391, 498, 525, 541], "50": [552, 557, 682], "5000": [525, 541, 616, 674, 701], "50000": [511, 586, 600, 643, 658], "5281": 809, "6": [368, 427, 497], "7": 813, "7934267": 809, "80": [534, 552, 622, 682], "89": 600, "9": [511, 525, 541, 572, 586, 600, 616, 643, 658, 674, 822], "99": 823, "A": [16, 28, 31, 37, 56, 74, 93, 112, 130, 143, 149, 166, 183, 194, 200, 218, 237, 249, 255, 273, 293, 307, 310, 314, 315, 323, 328, 340, 361, 365, 368, 371, 381, 382, 397, 399, 417, 427, 429, 451, 471, 492, 495, 508, 673, 696, 698, 704, 715, 716, 720, 723, 809, 814, 818, 819, 823], "AND": 814, "AS": 814, "As": 809, "At": 812, "BE": 814, "BUT": 814, "By": [823, 827], "FOR": 814, "For": [49, 307, 723, 743, 812, 826], "IN": 814, "If": [15, 18, 19, 20, 21, 23, 24, 25, 29, 36, 39, 40, 41, 42, 44, 45, 46, 50, 52, 55, 58, 59, 60, 61, 63, 64, 65, 68, 70, 72, 73, 76, 77, 79, 80, 83, 84, 85, 87, 89, 91, 92, 95, 96, 98, 99, 102, 103, 104, 108, 111, 114, 115, 117, 118, 120, 121, 122, 124, 128, 129, 132, 133, 135, 136, 139, 140, 141, 148, 151, 152, 153, 154, 156, 157, 158, 162, 165, 168, 169, 170, 171, 173, 174, 175, 179, 182, 185, 186, 187, 188, 190, 191, 192, 196, 199, 203, 204, 205, 206, 208, 209, 210, 212, 214, 216, 217, 220, 221, 223, 224, 227, 228, 229, 231, 233, 235, 236, 239, 240, 241, 242, 245, 246, 247, 251, 254, 257, 258, 259, 260, 263, 264, 265, 267, 271, 272, 275, 276, 278, 279, 282, 283, 284, 288, 290, 292, 296, 297, 298, 299, 303, 304, 305, 361, 375, 378, 383, 384, 388, 390, 392, 393, 405, 406, 407, 411, 412, 413, 419, 420, 421, 423, 424, 425, 433, 436, 437, 438, 440, 443, 444, 445, 454, 457, 458, 459, 463, 464, 465, 474, 477, 480, 481, 486, 487, 488, 501, 502, 503, 504, 505, 506, 514, 515, 516, 517, 521, 522, 523, 528, 529, 535, 536, 537, 538, 539, 544, 545, 550, 551, 553, 554, 555, 557, 560, 561, 563, 564, 567, 568, 569, 575, 576, 579, 580, 582, 583, 584, 589, 590, 591, 592, 596, 597, 598, 603, 604, 605, 606, 607, 609, 610, 611, 619, 620, 623, 624, 625, 626, 627, 634, 635, 636, 637, 639, 640, 641, 647, 648, 649, 650, 653, 655, 656, 658, 662, 663, 664, 665, 669, 670, 671, 677, 678, 680, 681, 683, 684, 685, 698, 699, 701, 702, 705, 709, 713, 714, 723, 732, 733, 734, 747, 748, 749, 750, 751, 752, 759, 760, 761, 762, 763, 764, 769, 770, 771, 772, 773, 774, 779, 780, 781, 782, 783, 784, 790, 791, 792, 793, 794, 795, 800, 801, 802, 803, 804, 805, 808, 809, 818, 819, 823, 824], "In": [13, 307, 557, 812, 813], "It": [71, 310, 361, 397, 469, 658, 812, 815, 817, 818, 823, 824, 826], "NO": 814, "NOT": 814, "No": 614, "OF": 814, "OR": 814, "Of": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 117, 118, 135, 136, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 278, 279, 298, 299], "One": [49, 743, 788], "THE": 814, "TO": 814, "The": [1, 9, 10, 15, 16, 18, 19, 20, 21, 24, 25, 26, 31, 36, 37, 39, 40, 41, 42, 45, 46, 47, 50, 55, 56, 58, 59, 60, 61, 64, 65, 67, 68, 73, 74, 76, 77, 79, 80, 84, 85, 86, 87, 92, 93, 95, 96, 98, 99, 103, 104, 105, 111, 112, 114, 115, 117, 118, 121, 122, 123, 124, 129, 130, 132, 133, 135, 136, 140, 141, 142, 148, 149, 151, 152, 153, 154, 157, 158, 159, 165, 166, 168, 169, 170, 171, 174, 175, 176, 177, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 199, 200, 201, 203, 204, 205, 206, 209, 210, 211, 212, 217, 218, 220, 221, 223, 224, 228, 229, 230, 236, 237, 239, 240, 241, 242, 246, 247, 248, 249, 254, 255, 257, 258, 259, 260, 264, 265, 266, 267, 272, 273, 275, 276, 278, 279, 283, 284, 285, 286, 292, 293, 296, 297, 298, 299, 304, 305, 306, 307, 308, 310, 314, 315, 321, 323, 328, 340, 341, 359, 361, 365, 368, 370, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 400, 401, 403, 405, 406, 407, 412, 413, 414, 415, 416, 417, 419, 420, 421, 424, 425, 426, 427, 430, 431, 432, 434, 436, 437, 438, 440, 444, 445, 446, 447, 448, 452, 453, 455, 457, 458, 459, 464, 465, 466, 467, 468, 472, 473, 475, 477, 480, 481, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 544, 545, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 572, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 589, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 634, 635, 636, 637, 638, 640, 641, 642, 643, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 660, 662, 663, 664, 665, 666, 667, 668, 670, 671, 672, 674, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 689, 690, 694, 695, 696, 698, 699, 700, 701, 702, 705, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 723, 724, 726, 727, 728, 729, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741, 747, 748, 749, 751, 752, 753, 759, 760, 761, 763, 764, 766, 769, 770, 771, 773, 774, 776, 779, 780, 781, 783, 784, 786, 790, 791, 792, 794, 795, 797, 800, 801, 802, 804, 805, 807, 808, 814, 815, 817, 818, 822, 823, 824, 826, 827], "Then": 815, "There": [329, 810, 817, 823, 827], "These": [417, 817, 823], "To": [22, 43, 813, 815, 816, 824, 827], "WITH": 814, "_": [474, 817], "__from_data__": [26, 47, 67, 86, 105, 123, 142, 159, 176, 193, 211, 230, 248, 266, 285, 306, 396, 416, 426, 448, 468, 491, 507, 524, 540, 556, 570, 585, 599, 612, 628, 642, 657, 672, 686, 741, 753, 766, 776, 786, 797, 807], "__init__": 816, "aabb": [307, 368, 373, 400, 427, 431, 452, 472], "abl": [12, 33, 34, 126, 127, 145, 269], "about": [492, 812], "abov": [814, 823], "absolut": [310, 323, 361], "abstract": [124, 397, 449], "accord": [315, 368, 817], "accross": 638, "acknowledg": 809, "act": 495, "action": 814, "activ": [812, 813, 818, 824, 826], "actor": [788, 812], "actual": [329, 331, 379], "ad": [12, 16, 31, 33, 37, 56, 71, 74, 93, 112, 126, 130, 145, 149, 166, 183, 200, 218, 237, 249, 255, 269, 273, 293, 368, 372, 427, 430, 698, 699, 700, 701, 808, 819, 823], "adapt": [13, 329], "add": [12, 13, 33, 34, 52, 53, 70, 71, 89, 90, 108, 109, 126, 127, 145, 146, 162, 163, 179, 180, 196, 197, 214, 215, 233, 234, 251, 252, 269, 270, 288, 289, 370, 371, 372, 399, 422, 429, 430, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 646, 660, 661, 676, 689, 698, 699, 700, 701, 702, 703, 704, 723, 815, 816, 824, 826, 827], "add_beam": 811, "add_el": 701, "add_extens": 71, "add_gh_param": 812, "addit": [28, 31, 700, 815, 817, 818, 822], "addition": 72, "adjac": [16, 37, 56, 74, 93, 112, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293, 708], "adjust": 826, "affect": [12, 33, 34, 126, 127, 145, 269], "after": [62, 71, 82, 101, 119, 138, 155, 172, 189, 207, 226, 243, 261, 281, 302, 514, 528, 544, 560, 575, 589, 603, 619, 634, 647, 662, 677], "against": [26, 47, 67, 86, 105, 123, 142, 159, 176, 193, 211, 230, 248, 266, 285, 306, 396, 416, 426, 448, 468, 491, 507, 524, 540, 556, 570, 585, 599, 612, 628, 642, 657, 672, 686, 741, 753, 766, 776, 786, 797, 807], "aka": 341, "aleksandra": 809, "algorithm": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 307, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 732, 750, 762, 772, 782, 793, 803], "align": [68, 307, 368, 373, 400, 427, 431, 452, 472, 706, 815, 826], "all": [12, 20, 21, 33, 41, 42, 60, 61, 79, 80, 98, 99, 117, 118, 126, 135, 136, 145, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 269, 278, 279, 298, 299, 380, 388, 389, 410, 417, 440, 441, 449, 462, 484, 690, 694, 696, 711, 715, 716, 721, 722, 723, 735, 808, 814, 817, 819, 823, 825], "allow": [16, 37, 56, 74, 87, 93, 112, 124, 130, 149, 166, 183, 200, 212, 218, 237, 255, 267, 273, 293, 315, 316, 329, 331, 380, 696, 788, 819, 823], "along": [160, 177, 194, 212, 231, 249, 267, 368, 385, 525, 534, 552, 616, 622, 682, 823], "alreadi": [310, 323, 361, 698, 701], "also": [368, 809, 812, 815, 817, 818, 823], "alt": 565, "altern": 329, "amount": [307, 370, 380, 808], "an": [10, 15, 16, 18, 19, 24, 25, 26, 28, 36, 37, 39, 40, 45, 46, 47, 50, 55, 56, 58, 59, 64, 65, 67, 68, 73, 74, 76, 77, 84, 85, 86, 87, 92, 93, 95, 96, 103, 104, 105, 106, 111, 112, 114, 115, 121, 122, 123, 124, 129, 130, 132, 133, 140, 141, 142, 143, 148, 149, 151, 152, 157, 158, 159, 160, 165, 166, 168, 169, 174, 175, 176, 177, 182, 183, 185, 186, 191, 192, 193, 194, 199, 200, 203, 204, 209, 210, 211, 212, 217, 218, 220, 221, 228, 229, 230, 231, 236, 237, 239, 240, 246, 247, 248, 249, 254, 255, 257, 258, 264, 265, 266, 267, 272, 273, 275, 276, 283, 284, 285, 286, 292, 293, 296, 297, 304, 305, 306, 368, 378, 383, 384, 392, 393, 396, 397, 405, 406, 407, 412, 413, 416, 417, 419, 420, 421, 424, 425, 426, 427, 436, 437, 438, 444, 445, 448, 449, 457, 458, 459, 464, 465, 468, 469, 477, 480, 481, 487, 488, 491, 492, 494, 501, 502, 503, 505, 506, 507, 509, 515, 516, 517, 519, 522, 523, 524, 529, 535, 536, 538, 539, 540, 545, 550, 551, 552, 554, 555, 556, 561, 563, 564, 568, 569, 570, 576, 579, 580, 583, 584, 585, 590, 591, 592, 597, 598, 599, 604, 605, 606, 610, 611, 612, 620, 623, 624, 626, 627, 628, 635, 636, 637, 640, 641, 642, 648, 649, 650, 655, 656, 657, 663, 664, 665, 670, 671, 672, 678, 680, 681, 682, 684, 685, 686, 698, 701, 702, 703, 705, 709, 713, 714, 719, 723, 724, 733, 734, 741, 742, 747, 748, 749, 751, 752, 753, 759, 760, 761, 763, 764, 766, 769, 770, 771, 773, 774, 776, 779, 780, 781, 783, 784, 786, 790, 791, 792, 794, 795, 797, 800, 801, 802, 804, 805, 807, 809, 810, 812, 813, 814, 815, 817, 818, 823], "analysi": 812, "angl": [106, 194, 201, 385, 511, 525, 530, 534, 541, 546, 552, 557, 572, 586, 600, 616, 622, 674, 682, 727, 728, 822, 823], "angle_1": 511, "angle_2": 511, "ani": [24, 25, 26, 45, 46, 47, 64, 65, 67, 84, 85, 86, 103, 104, 105, 121, 122, 123, 140, 141, 142, 143, 146, 157, 158, 159, 174, 175, 176, 191, 192, 193, 209, 210, 211, 228, 229, 230, 246, 247, 248, 264, 265, 266, 283, 284, 285, 304, 305, 306, 392, 393, 396, 412, 413, 416, 424, 425, 426, 444, 445, 448, 464, 465, 468, 487, 488, 491, 505, 506, 507, 522, 523, 524, 528, 538, 539, 540, 544, 554, 555, 556, 568, 569, 570, 583, 584, 585, 597, 598, 599, 610, 611, 612, 619, 626, 627, 628, 640, 641, 642, 647, 655, 656, 657, 662, 670, 671, 672, 677, 684, 685, 686, 733, 734, 741, 751, 752, 753, 763, 764, 766, 773, 774, 776, 783, 784, 786, 794, 795, 797, 804, 805, 807, 810, 814, 823, 827], "anna": 809, "anoth": [177, 212], "apart": 28, "api": [812, 815], "apolinarska": 809, "append": 816, "appli": [12, 33, 34, 126, 127, 145, 194, 249, 269, 308, 314, 321, 328, 329, 340, 359, 365, 394, 395, 414, 415, 417, 446, 447, 466, 467, 489, 490, 492, 493, 494, 495, 607, 715, 735, 816, 823, 827], "applic": [194, 249, 316, 823, 825], "appropri": 397, "ar": [11, 12, 14, 16, 20, 21, 22, 28, 29, 30, 32, 33, 35, 37, 41, 42, 43, 51, 54, 56, 60, 61, 68, 69, 72, 74, 79, 80, 88, 91, 93, 98, 99, 107, 110, 112, 117, 118, 125, 126, 128, 130, 135, 136, 144, 145, 147, 149, 153, 154, 161, 164, 166, 170, 171, 178, 181, 183, 187, 188, 195, 198, 200, 205, 206, 213, 216, 218, 223, 224, 231, 232, 235, 237, 241, 242, 244, 250, 253, 255, 259, 260, 262, 268, 269, 271, 273, 278, 279, 287, 290, 291, 293, 298, 299, 307, 308, 315, 324, 334, 361, 369, 398, 417, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 674, 675, 682, 697, 702, 705, 745, 758, 768, 778, 788, 789, 799, 810, 816, 817, 818, 821, 822, 823, 824, 826, 827], "argument": [16, 308, 321, 329, 359, 700], "aris": 814, "around": [194, 249, 557, 818, 823], "as_str": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 732, 750, 762, 772, 782, 793, 803], "asap": 29, "assembl": 788, "assembli": [341, 811, 812, 819, 825], "assign": [308, 359, 696, 698, 705, 823, 826], "associ": [10, 22, 43, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 286, 788, 814], "assum": 417, "attach": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 117, 118, 135, 136, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 278, 279, 298, 299, 308], "attempt": [417, 825], "attr": [495, 700], "attr1nam": 817, "attr1value_attr2nam": 817, "attr2valu": 817, "attribut": [10, 31, 48, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 262, 267, 286, 308, 310, 315, 316, 341, 368, 397, 417, 427, 449, 492, 493, 494, 495, 498, 571, 614, 615, 630, 673, 688, 696, 700, 787, 788, 812, 815, 816, 818], "author": [809, 814], "autom": 815, "automat": [52, 53, 70, 89, 90, 108, 109, 162, 163, 179, 180, 194, 196, 197, 214, 215, 233, 234, 249, 251, 252, 270, 288, 289, 525, 534, 541, 552, 616, 622, 674, 682, 688, 823, 826], "avail": 307, "avoid": [22, 43, 373, 376, 400, 403, 431, 434, 452, 455, 472, 475], "awai": 630, "axi": [194, 249, 307, 368, 373, 381, 382, 400, 427, 431, 452, 472, 525, 534, 541, 557, 600, 616, 622, 674, 706, 727, 728, 818, 822, 823, 826], "b": [702, 719, 725], "back": 615, "backend": 812, "bake": 815, "bakewithboxmap": 826, "ball": 10, "ball_diamet": 10, "ballnodejoint": [417, 812], "base": [10, 27, 31, 48, 50, 66, 68, 87, 106, 124, 143, 160, 177, 194, 201, 212, 231, 244, 249, 267, 286, 308, 316, 321, 329, 331, 335, 341, 359, 368, 375, 377, 397, 404, 417, 427, 433, 435, 449, 454, 456, 469, 474, 476, 492, 493, 494, 495, 497, 498, 508, 511, 525, 530, 541, 546, 557, 571, 572, 586, 600, 614, 615, 616, 630, 631, 643, 658, 673, 674, 688, 696, 723, 727, 728, 742, 744, 754, 757, 767, 777, 787, 788, 798, 824, 825, 827], "base_interfac": 10, "basic": 812, "beam": [10, 12, 13, 14, 16, 20, 21, 22, 27, 28, 29, 30, 31, 33, 34, 35, 37, 41, 42, 43, 50, 52, 53, 54, 56, 60, 61, 62, 66, 68, 70, 71, 72, 74, 79, 80, 82, 87, 89, 90, 93, 98, 99, 101, 106, 108, 109, 110, 112, 117, 118, 119, 124, 126, 127, 130, 135, 136, 138, 143, 145, 146, 147, 149, 153, 154, 155, 160, 162, 163, 164, 166, 170, 171, 172, 177, 179, 180, 181, 183, 187, 188, 189, 194, 196, 197, 198, 200, 205, 206, 207, 212, 214, 215, 218, 223, 224, 226, 231, 233, 234, 237, 241, 242, 243, 249, 251, 252, 253, 255, 259, 260, 261, 267, 269, 270, 273, 278, 279, 281, 286, 288, 289, 290, 291, 293, 294, 298, 299, 301, 302, 307, 316, 341, 449, 469, 492, 495, 497, 498, 511, 514, 518, 520, 525, 528, 531, 532, 533, 534, 541, 544, 547, 548, 549, 552, 572, 575, 577, 578, 581, 586, 589, 593, 594, 595, 600, 603, 607, 608, 613, 616, 619, 621, 622, 629, 630, 634, 638, 643, 647, 651, 652, 654, 658, 660, 662, 666, 667, 668, 674, 677, 679, 682, 687, 696, 701, 710, 723, 777, 808, 811, 812, 815, 817, 822, 823, 824, 826, 827], "beam_a": [20, 21, 29, 41, 42, 60, 61, 79, 80, 98, 99, 106, 117, 118, 135, 136, 143, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 278, 279, 298, 299, 300, 701], "beam_a_kei": 696, "beam_b": [20, 21, 29, 41, 42, 60, 61, 79, 80, 98, 99, 106, 117, 118, 135, 136, 143, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 278, 279, 298, 299, 300], "beam_b_kei": 696, "beam_def": 352, "beam_fac": 497, "beam_width": [341, 819], "beama": 366, "beamb": 366, "beamdefinit": 341, "beamjoiningerror": [1, 12, 14, 33, 34, 35, 52, 54, 70, 72, 89, 108, 110, 126, 127, 145, 147, 162, 164, 179, 181, 196, 198, 214, 233, 235, 251, 253, 269, 288, 290, 291, 316, 723, 812], "becaus": 823, "been": [16, 37, 56, 71, 74, 93, 112, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293, 698, 788], "befor": [12, 16, 33, 37, 56, 74, 93, 112, 126, 130, 145, 149, 166, 183, 200, 218, 237, 255, 269, 273, 293, 329, 698], "being": 812, "belong": [16, 37, 56, 74, 93, 112, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293], "between": [10, 30, 68, 87, 106, 124, 212, 267, 323, 341, 417, 497, 525, 541, 616, 674, 696, 702, 708, 719, 721, 725, 817, 819, 822, 823, 827], "birdsmouth": 160, "bisector": [106, 823], "bit": 819, "bitmap": 826, "blank": [368, 370, 387, 495, 577, 723, 818], "blank_fram": 495, "blank_length": 495, "blender": 810, "bodi": 469, "bool": [15, 20, 21, 23, 24, 25, 28, 36, 41, 42, 44, 45, 46, 50, 55, 60, 61, 63, 64, 65, 68, 73, 79, 80, 83, 84, 85, 87, 92, 98, 99, 102, 103, 104, 111, 117, 118, 120, 121, 122, 124, 129, 135, 136, 139, 140, 141, 148, 153, 154, 156, 157, 158, 165, 170, 171, 173, 174, 175, 182, 187, 188, 190, 191, 192, 199, 205, 206, 208, 209, 210, 212, 217, 223, 224, 227, 228, 229, 231, 236, 241, 242, 245, 246, 247, 254, 259, 260, 263, 264, 265, 267, 272, 278, 279, 282, 283, 284, 292, 298, 299, 303, 304, 305, 310, 323, 336, 361, 375, 378, 390, 392, 393, 405, 411, 412, 413, 417, 419, 423, 424, 425, 433, 436, 443, 444, 445, 449, 454, 457, 463, 464, 465, 474, 477, 486, 487, 488, 501, 504, 505, 506, 515, 521, 522, 523, 525, 529, 537, 538, 539, 541, 545, 553, 554, 555, 557, 561, 567, 568, 569, 572, 576, 582, 583, 584, 590, 596, 597, 598, 600, 604, 607, 609, 610, 611, 615, 616, 620, 625, 626, 627, 635, 639, 640, 641, 648, 653, 655, 656, 658, 663, 669, 670, 671, 674, 678, 682, 683, 684, 685, 709, 717, 718, 719, 720, 723, 732, 733, 734, 747, 750, 751, 752, 759, 762, 763, 764, 769, 772, 773, 774, 779, 782, 783, 784, 788, 790, 793, 794, 795, 800, 803, 804, 805], "boolean": [417, 815, 819, 822, 824], "both": [53, 90, 109, 163, 180, 197, 215, 234, 249, 252, 270, 289, 702, 705, 822, 823], "bottom": [525, 541, 552, 615, 616, 674, 682, 823], "bound": [307, 368, 373, 376, 400, 403, 427, 431, 434, 452, 455, 472, 475, 706, 707, 808], "box": [307, 368, 373, 376, 400, 403, 427, 431, 434, 452, 455, 472, 475, 495, 667, 706, 707, 788, 808, 815, 818], "bracket": 397, "brep": [375, 427, 433, 454, 474, 479, 514, 528, 532, 544, 548, 560, 575, 581, 589, 603, 619, 629, 634, 647, 654, 662, 677, 687, 812, 826], "btlx": [368, 495, 497, 498, 508, 509, 510, 812, 815], "btlx_2_1_0": 816, "btlx_process": 816, "btlxfromgeometrydefinit": 417, "btlxjoint": 816, "btlxpart": [812, 816], "btlxprocess": [511, 525, 534, 541, 557, 572, 586, 600, 616, 622, 631, 643, 658, 674, 812, 816], "btlxwriter": 812, "build": [744, 754, 755, 756, 787, 788, 813, 827], "building_plan": 756, "buildingplan": [755, 756, 787, 812], "buildingplanpars": 812, "built": [812, 815], "butt": [50, 177, 286, 367, 819], "byte": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 732, 750, 762, 772, 782, 793, 803], "c": [813, 814], "cad": [788, 810], "calcul": [12, 20, 21, 30, 33, 34, 41, 42, 52, 60, 61, 70, 79, 80, 89, 98, 99, 108, 117, 118, 126, 127, 135, 136, 145, 153, 154, 162, 170, 171, 179, 187, 188, 196, 205, 206, 214, 223, 224, 233, 241, 242, 251, 259, 260, 269, 278, 279, 288, 298, 299, 385, 492, 520, 531, 532, 533, 547, 548, 549, 577, 581, 595, 608, 613, 621, 629, 652, 654, 667, 668, 679, 687, 696, 723, 731], "call": [16, 22, 37, 43, 52, 53, 56, 70, 71, 74, 89, 90, 93, 108, 109, 112, 130, 149, 162, 163, 166, 179, 180, 183, 196, 197, 200, 214, 215, 218, 233, 234, 237, 251, 252, 255, 270, 273, 288, 289, 293, 329, 816, 818], "callabl": 715, "can": [26, 47, 67, 68, 86, 105, 123, 142, 143, 159, 176, 193, 194, 211, 230, 248, 266, 285, 306, 314, 328, 340, 365, 396, 416, 417, 426, 448, 449, 468, 491, 492, 507, 524, 540, 552, 556, 565, 570, 585, 599, 612, 628, 642, 657, 672, 682, 686, 698, 741, 744, 753, 766, 776, 786, 788, 797, 807, 810, 815, 816, 818, 823, 827], "cannot": [493, 494, 818, 823], "canva": 823, "care": 827, "casa": 809, "case": [534, 622, 819, 824], "categori": [308, 310, 315, 817, 818, 827], "category_a": 308, "category_b": [308, 315], "categoryrul": [341, 812], "catergory_a": 315, "caus": 565, "caviti": 341, "cd": 813, "center": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 117, 118, 135, 136, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 278, 279, 298, 299, 696, 809, 823], "center_of_mass": 696, "centerlin": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 106, 117, 118, 135, 136, 153, 154, 160, 170, 171, 187, 188, 194, 205, 206, 223, 224, 231, 241, 242, 249, 259, 260, 278, 279, 290, 298, 299, 323, 341, 368, 379, 381, 382, 815, 817, 818, 826], "centerline_end": 368, "centerline_start": 368, "centr": 823, "centrelin": 818, "chamfer": [674, 682], "chang": [565, 823], "charg": 814, "check": [14, 35, 54, 72, 91, 110, 128, 147, 164, 181, 198, 216, 235, 253, 271, 290, 291, 310, 323, 361, 717, 718, 723, 808, 812], "checkstandardattribut": 817, "chen": 809, "chosen": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 117, 118, 135, 136, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 278, 279, 298, 299], "circular": [22, 43], "cite": 812, "cl": [15, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272, 292, 308, 321, 359, 378, 405, 419, 436, 457, 477, 501, 515, 529, 545, 561, 576, 590, 604, 620, 635, 648, 663, 678, 691, 709, 747, 759, 769, 779, 790, 800], "claim": 814, "class": [10, 11, 27, 31, 32, 48, 50, 51, 68, 69, 87, 88, 106, 107, 124, 125, 143, 144, 160, 161, 177, 178, 194, 195, 212, 213, 231, 232, 249, 250, 267, 268, 286, 287, 308, 316, 321, 329, 331, 335, 341, 359, 368, 369, 397, 398, 417, 418, 427, 428, 449, 450, 469, 470, 493, 495, 498, 499, 508, 511, 512, 525, 526, 541, 542, 557, 558, 571, 572, 573, 586, 587, 600, 601, 614, 615, 616, 617, 630, 631, 632, 643, 644, 658, 659, 666, 673, 674, 675, 688, 696, 697, 703, 735, 742, 744, 745, 754, 757, 758, 767, 768, 777, 778, 787, 788, 789, 798, 799, 812, 816], "classmethod": [16, 17, 18, 19, 26, 28, 37, 38, 39, 40, 47, 49, 56, 57, 58, 59, 67, 74, 75, 76, 77, 86, 93, 94, 95, 96, 105, 112, 113, 114, 115, 123, 130, 131, 132, 133, 142, 149, 150, 151, 152, 159, 166, 167, 168, 169, 176, 183, 184, 185, 186, 193, 200, 202, 203, 204, 211, 218, 219, 220, 221, 230, 237, 238, 239, 240, 248, 255, 256, 257, 258, 266, 273, 274, 275, 276, 285, 293, 295, 296, 297, 306, 342, 381, 382, 383, 384, 396, 406, 407, 416, 420, 421, 426, 437, 438, 448, 458, 459, 468, 478, 479, 480, 481, 491, 502, 503, 507, 516, 517, 518, 519, 524, 530, 534, 535, 536, 540, 546, 550, 551, 552, 556, 563, 564, 565, 566, 570, 578, 579, 580, 585, 591, 592, 593, 594, 599, 605, 606, 607, 612, 622, 623, 624, 628, 636, 637, 638, 642, 649, 650, 651, 657, 664, 665, 666, 672, 680, 681, 682, 686, 713, 714, 741, 743, 748, 749, 753, 755, 756, 760, 761, 766, 770, 771, 776, 780, 781, 786, 791, 792, 797, 801, 802, 807], "clean": 823, "clear": [397, 690, 694], "clear_gh_param": 812, "clearli": 417, "click": 823, "clone": 813, "closer": 379, "closest": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 117, 118, 135, 136, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 278, 279, 298, 299, 819], "clt": 427, "code": [16, 37, 56, 74, 93, 112, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293, 810, 812], "collect": [744, 808, 824], "collis": [374, 401, 432, 453, 473], "colon": 817, "com": [809, 813, 816], "combin": [231, 823], "comment": 508, "common": 124, "compa": [15, 18, 19, 23, 36, 39, 40, 44, 55, 58, 59, 63, 73, 76, 77, 83, 92, 95, 96, 102, 111, 114, 115, 120, 129, 132, 133, 139, 148, 151, 152, 156, 165, 168, 169, 173, 182, 185, 186, 190, 199, 203, 204, 208, 217, 220, 221, 227, 236, 239, 240, 245, 254, 257, 258, 263, 272, 275, 276, 282, 292, 296, 297, 303, 341, 368, 374, 375, 376, 377, 378, 383, 384, 390, 394, 395, 400, 401, 403, 404, 405, 406, 407, 411, 414, 415, 417, 419, 420, 421, 423, 432, 433, 434, 435, 436, 437, 438, 443, 446, 447, 452, 453, 454, 455, 456, 457, 458, 459, 463, 466, 467, 472, 473, 474, 475, 476, 477, 480, 481, 486, 489, 490, 501, 502, 503, 504, 515, 516, 517, 519, 521, 528, 529, 531, 532, 533, 535, 536, 537, 544, 545, 548, 549, 550, 551, 553, 560, 561, 562, 563, 564, 565, 566, 567, 576, 577, 579, 580, 581, 582, 590, 591, 592, 594, 595, 596, 604, 605, 606, 608, 609, 613, 619, 620, 621, 623, 624, 625, 629, 635, 636, 637, 639, 647, 648, 649, 650, 652, 653, 654, 663, 664, 665, 666, 667, 668, 669, 677, 678, 679, 680, 681, 683, 687, 706, 707, 709, 713, 714, 727, 728, 732, 735, 739, 740, 747, 748, 749, 750, 754, 759, 760, 761, 762, 769, 770, 771, 772, 779, 780, 781, 782, 788, 790, 791, 792, 793, 800, 801, 802, 803, 809, 815, 819, 821, 825], "compact": [24, 25, 45, 46, 64, 65, 84, 85, 103, 104, 121, 122, 140, 141, 157, 158, 174, 175, 191, 192, 209, 210, 228, 229, 246, 247, 264, 265, 283, 284, 304, 305, 392, 393, 412, 413, 424, 425, 444, 445, 464, 465, 487, 488, 505, 506, 522, 523, 538, 539, 554, 555, 568, 569, 583, 584, 597, 598, 610, 611, 626, 627, 640, 641, 655, 656, 670, 671, 684, 685, 733, 734, 751, 752, 763, 764, 773, 774, 783, 784, 794, 795, 804, 805], "compani": 508, "company_nam": 508, "compar": 72, "comparison": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 732, 750, 762, 772, 782, 793, 803], "compas_model": [395, 415, 447, 467, 490, 701, 712, 715, 718, 787], "compas_rhino": 813, "compas_timb": [0, 10, 16, 22, 27, 31, 37, 43, 48, 50, 56, 68, 74, 87, 93, 106, 112, 124, 130, 143, 149, 160, 166, 177, 183, 194, 200, 212, 218, 231, 237, 249, 255, 267, 273, 286, 293, 307, 308, 316, 321, 329, 331, 335, 341, 359, 366, 367, 368, 397, 417, 427, 449, 469, 492, 493, 494, 495, 498, 508, 511, 514, 519, 520, 525, 528, 531, 532, 533, 541, 544, 548, 549, 557, 560, 562, 565, 566, 571, 572, 575, 577, 581, 586, 589, 594, 595, 600, 603, 608, 613, 614, 615, 616, 619, 621, 629, 630, 631, 634, 643, 647, 652, 654, 658, 662, 667, 668, 673, 674, 677, 679, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 701, 742, 744, 754, 757, 767, 777, 787, 788, 798, 808, 809, 812, 813], "compat": [11, 14, 32, 35, 50, 51, 54, 68, 69, 72, 87, 88, 91, 106, 107, 110, 125, 128, 144, 147, 160, 161, 164, 177, 178, 181, 194, 195, 198, 212, 213, 216, 231, 232, 235, 249, 250, 253, 267, 268, 271, 287, 290, 291, 307, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799], "compet": 809, "compil": 813, "complet": [87, 124, 212, 267, 469], "complex": 812, "compli": [14, 35, 54, 110, 147, 164, 181, 198, 253, 291], "complianc": 323, "compon": [329, 331, 689, 690, 692, 693, 694, 695, 813, 817, 818, 819, 821, 822, 824, 827], "componen": 815, "compos": 824, "comput": [23, 29, 30, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 373, 374, 375, 376, 377, 390, 400, 401, 403, 404, 411, 423, 431, 432, 433, 434, 435, 443, 452, 453, 454, 455, 456, 463, 472, 473, 474, 475, 476, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 706, 707, 732, 750, 762, 772, 782, 793, 803], "computation": 824, "concaten": 817, "concept": [810, 815], "concret": [22, 43], "condit": 814, "cone": [525, 534, 541, 552], "cone_angl": [194, 525, 534, 541, 552, 823], "configur": 615, "connect": [0, 10, 11, 16, 22, 27, 31, 32, 37, 43, 48, 50, 51, 56, 68, 69, 74, 87, 88, 93, 106, 107, 112, 124, 125, 130, 143, 144, 149, 160, 161, 166, 177, 178, 183, 194, 195, 200, 212, 213, 218, 231, 232, 237, 249, 250, 255, 267, 268, 273, 286, 287, 293, 307, 359, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 708, 712, 745, 758, 768, 778, 789, 799, 812, 814, 823, 824], "connectionsolv": [731, 812], "consid": [28, 29, 30, 308, 310, 314, 321, 323, 328, 340, 359, 361, 365, 708, 823], "consist": 29, "constant": 359, "construct": [18, 19, 26, 39, 40, 47, 58, 59, 67, 76, 77, 86, 95, 96, 105, 114, 115, 123, 132, 133, 142, 151, 152, 159, 168, 169, 176, 185, 186, 193, 203, 204, 211, 220, 221, 230, 239, 240, 248, 257, 258, 266, 275, 276, 285, 296, 297, 306, 383, 384, 396, 406, 407, 416, 420, 421, 426, 437, 438, 448, 458, 459, 468, 480, 481, 491, 502, 503, 507, 516, 517, 519, 524, 535, 536, 540, 550, 551, 556, 562, 563, 564, 565, 566, 570, 579, 580, 585, 591, 592, 594, 599, 605, 606, 612, 623, 624, 628, 636, 637, 638, 642, 649, 650, 657, 664, 665, 672, 680, 681, 686, 713, 714, 741, 748, 749, 753, 760, 761, 766, 770, 771, 776, 780, 781, 786, 791, 792, 797, 801, 802, 807, 812, 819], "constructor": [16, 329, 565], "contain": [9, 16, 18, 19, 20, 21, 28, 37, 39, 40, 41, 42, 56, 58, 59, 60, 61, 74, 76, 77, 79, 80, 93, 95, 96, 98, 99, 112, 114, 115, 117, 118, 130, 132, 133, 135, 136, 149, 151, 152, 153, 154, 166, 168, 169, 170, 171, 183, 185, 186, 187, 188, 200, 203, 204, 205, 206, 218, 220, 221, 223, 224, 237, 239, 240, 241, 242, 255, 257, 258, 259, 260, 273, 275, 276, 278, 279, 293, 296, 297, 298, 299, 307, 310, 315, 316, 323, 329, 331, 361, 368, 383, 384, 406, 407, 420, 421, 437, 438, 449, 458, 459, 469, 480, 481, 492, 502, 503, 516, 517, 535, 536, 550, 551, 563, 564, 579, 580, 591, 592, 605, 606, 623, 624, 636, 637, 649, 650, 664, 665, 680, 681, 696, 698, 701, 711, 713, 714, 717, 720, 722, 735, 744, 748, 749, 760, 761, 770, 771, 780, 781, 788, 791, 792, 801, 802, 808], "content": 821, "context": 9, "continu": 812, "contract": 814, "contribut": [812, 815], "contributor": 809, "control": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 732, 750, 762, 772, 782, 793, 803], "convent": 818, "convers": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799], "convert": [11, 24, 25, 32, 45, 46, 51, 64, 65, 69, 84, 85, 88, 103, 104, 107, 121, 122, 125, 140, 141, 144, 157, 158, 161, 174, 175, 178, 191, 192, 195, 209, 210, 213, 228, 229, 232, 246, 247, 250, 264, 265, 268, 283, 284, 287, 304, 305, 329, 369, 392, 393, 398, 412, 413, 418, 424, 425, 428, 444, 445, 450, 464, 465, 470, 487, 488, 496, 499, 505, 506, 509, 512, 522, 523, 526, 538, 539, 542, 554, 555, 558, 568, 569, 573, 583, 584, 587, 597, 598, 601, 610, 611, 617, 626, 627, 632, 640, 641, 644, 655, 656, 659, 670, 671, 675, 684, 685, 697, 733, 734, 745, 751, 752, 758, 763, 764, 768, 773, 774, 778, 783, 784, 789, 794, 795, 799, 804, 805], "coordin": [368, 377, 404, 417, 427, 435, 456, 476, 495, 511, 525, 541, 552, 557, 572, 586, 600, 616, 643, 658, 674, 682, 818], "copi": [395, 415, 447, 467, 490, 728, 730, 737, 738, 740, 814], "copy_guid": [15, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272, 292, 378, 405, 419, 436, 457, 477, 501, 515, 529, 545, 561, 576, 590, 604, 620, 635, 648, 663, 678, 709, 747, 759, 769, 779, 790, 800], "copyright": 814, "corner": [495, 823], "correct": [18, 19, 39, 40, 58, 59, 76, 77, 95, 96, 114, 115, 132, 133, 151, 152, 168, 169, 185, 186, 203, 204, 220, 221, 239, 240, 257, 258, 275, 276, 296, 297, 361, 383, 384, 406, 407, 420, 421, 437, 438, 458, 459, 480, 481, 502, 503, 516, 517, 535, 536, 550, 551, 563, 564, 579, 580, 591, 592, 605, 606, 613, 623, 624, 636, 637, 649, 650, 664, 665, 680, 681, 713, 714, 748, 749, 760, 761, 770, 771, 780, 781, 791, 792, 801, 802], "correctli": [478, 613, 817], "correspond": [194, 249, 368, 379, 498, 817, 818, 823, 826], "could": [52, 70, 89, 108, 162, 179, 196, 214, 233, 251, 288, 493, 494, 534, 552, 622, 651, 666, 682, 742], "coupl": 417, "cpython": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799], "crate": 823, "creat": [10, 13, 31, 50, 52, 53, 68, 70, 87, 89, 90, 106, 108, 109, 124, 143, 160, 162, 163, 177, 179, 180, 194, 196, 197, 212, 214, 215, 231, 233, 234, 249, 251, 252, 267, 270, 286, 288, 289, 321, 329, 341, 381, 382, 395, 415, 447, 467, 479, 490, 518, 528, 534, 544, 552, 578, 593, 607, 608, 619, 622, 647, 651, 662, 666, 677, 682, 810, 812, 813, 815, 816, 817, 818, 819, 821, 823, 824, 827], "creategeometri": [819, 824], "creation": [14, 35, 54, 72, 91, 110, 128, 147, 164, 181, 198, 216, 235, 253, 271, 291, 823], "criteria": 817, "cross": [22, 29, 43, 50, 62, 66, 68, 82, 101, 119, 124, 138, 155, 160, 172, 177, 189, 194, 207, 212, 226, 231, 243, 249, 261, 281, 286, 290, 302, 368, 381, 382, 534, 552, 622, 651, 658, 666, 682, 818, 819, 823], "cross_beam": [50, 68, 87, 124, 160, 177, 194, 212, 231, 249, 267, 286, 811], "cross_beam_guid": 249, "current": [15, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272, 292, 378, 405, 419, 436, 457, 477, 501, 515, 529, 545, 561, 576, 590, 604, 620, 635, 648, 663, 678, 709, 747, 759, 769, 779, 790, 800, 812], "curv": 818, "custom": 812, "custom_dimens": 819, "cut": [50, 87, 124, 194, 201, 212, 231, 267, 286, 498, 511, 514, 518, 519, 520, 525, 528, 530, 531, 532, 533, 534, 541, 544, 546, 547, 548, 549, 552, 560, 571, 572, 575, 577, 578, 581, 586, 589, 593, 594, 595, 600, 603, 607, 608, 613, 614, 615, 616, 619, 621, 622, 629, 630, 634, 638, 643, 647, 651, 652, 654, 658, 662, 666, 667, 668, 673, 674, 677, 679, 682, 687, 688, 815, 818, 823, 824], "cut_plane_bia": [87, 124, 212, 267, 823], "cutoff": 823, "cutter": [201, 530, 546], "cylind": [562, 788], "cylindr": 822, "damag": 814, "data": [15, 18, 19, 23, 24, 25, 26, 36, 39, 40, 44, 45, 46, 47, 55, 58, 59, 63, 64, 65, 67, 73, 76, 77, 83, 84, 85, 86, 92, 95, 96, 102, 103, 104, 105, 111, 114, 115, 120, 121, 122, 123, 129, 132, 133, 139, 140, 141, 142, 148, 151, 152, 156, 157, 158, 159, 165, 168, 169, 173, 174, 175, 176, 182, 185, 186, 190, 191, 192, 193, 199, 203, 204, 208, 209, 210, 211, 217, 220, 221, 227, 228, 229, 230, 236, 239, 240, 245, 246, 247, 248, 254, 257, 258, 263, 264, 265, 266, 272, 275, 276, 282, 283, 284, 285, 292, 296, 297, 303, 304, 305, 306, 378, 383, 384, 390, 392, 393, 396, 405, 406, 407, 411, 412, 413, 416, 417, 419, 420, 421, 423, 424, 425, 426, 436, 437, 438, 443, 444, 445, 448, 457, 458, 459, 463, 464, 465, 468, 477, 480, 481, 486, 487, 488, 491, 498, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 517, 521, 522, 523, 524, 529, 535, 536, 537, 538, 539, 540, 545, 550, 551, 553, 554, 555, 556, 561, 563, 564, 567, 568, 569, 570, 576, 579, 580, 582, 583, 584, 585, 590, 591, 592, 596, 597, 598, 599, 604, 605, 606, 609, 610, 611, 612, 620, 623, 624, 625, 626, 627, 628, 635, 636, 637, 639, 640, 641, 642, 648, 649, 650, 653, 655, 656, 657, 663, 664, 665, 669, 670, 671, 672, 678, 680, 681, 683, 684, 685, 686, 709, 713, 714, 732, 733, 734, 736, 737, 738, 741, 744, 747, 748, 749, 750, 751, 752, 753, 757, 759, 760, 761, 762, 763, 764, 766, 769, 770, 771, 772, 773, 774, 776, 779, 780, 781, 782, 783, 784, 786, 788, 790, 791, 792, 793, 794, 795, 797, 800, 801, 802, 803, 804, 805, 807, 821, 825], "datastructur": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 374, 390, 401, 411, 423, 432, 433, 443, 453, 454, 463, 473, 474, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 706, 707, 727, 729, 732, 737, 738, 739, 740, 750, 762, 772, 782, 793, 803], "de": [22, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 243, 261, 281, 302], "deal": 814, "debug": [316, 492, 819, 824, 825], "debug_geometri": 492, "debug_info": [389, 410, 441, 462, 484, 492], "debuginfo": [819, 824], "debuginfom": 812, "deeper": [87, 124, 212, 267], "default": [11, 15, 32, 36, 50, 51, 55, 69, 73, 87, 88, 92, 107, 111, 124, 125, 129, 144, 148, 161, 165, 178, 182, 195, 199, 212, 213, 217, 232, 236, 244, 250, 254, 262, 267, 268, 272, 287, 292, 310, 323, 341, 361, 369, 378, 381, 382, 398, 405, 418, 419, 427, 428, 436, 450, 457, 470, 477, 499, 501, 508, 512, 515, 518, 526, 529, 534, 542, 545, 552, 557, 558, 561, 573, 576, 578, 587, 590, 593, 600, 601, 604, 607, 617, 620, 622, 632, 635, 644, 648, 651, 659, 663, 666, 675, 678, 682, 690, 694, 697, 708, 709, 723, 727, 728, 729, 730, 745, 747, 758, 759, 768, 769, 778, 779, 789, 790, 799, 800, 812, 818, 819, 824, 826], "defin": [12, 33, 34, 126, 127, 145, 194, 201, 249, 269, 324, 334, 336, 381, 417, 518, 530, 546, 552, 607, 682, 817, 818, 819, 823, 826, 827], "define_dovetail_tool": [552, 682], "definit": [314, 328, 340, 365, 816, 824], "degre": 557, "delai": [329, 331], "delet": [690, 694], "deleteattribut": 817, "demo": 820, "depend": [379, 381, 382, 813, 816, 823], "depth": [50, 177, 194, 231, 244, 249, 286, 525, 534, 541, 552, 557, 586, 600, 607, 616, 622, 638, 643, 658, 674, 682, 811, 823], "depth_limit": 557, "deriv": 816, "describ": [10, 816], "desigen": [29, 30], "design": [0, 307, 308, 316, 321, 329, 331, 335, 341, 359, 366, 367, 809, 812, 815, 817, 818], "design2machin": 816, "desir": 826, "detail": [1, 815], "detect": [27, 824], "detected_topo": 696, "determin": [194, 315, 341, 823], "dev": 813, "develop": [809, 812], "deviat": 826, "dfab": 809, "diamet": [10, 68, 194, 201, 417, 530, 546, 557, 565, 566, 572, 578, 822, 823], "dict": [31, 308, 321, 359, 417, 495, 496, 600, 696, 700, 816], "dictionari": [31, 615], "did": [14, 35, 54, 110, 147, 164, 181, 198, 253, 291], "differ": [16, 696, 754, 810, 816, 819, 823], "differec": 417, "digest": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 732, 750, 762, 772, 782, 793, 803], "digit": 809, "dimens": [68, 72, 368, 385, 767, 818], "direct": [368, 380, 381, 382, 385, 689, 729, 730, 808, 818, 819, 827], "directli": [31, 124, 321, 449, 698, 699, 819, 823], "directrul": 812, "disabl": 824, "displai": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799, 817, 825], "distanc": [28, 29, 30, 308, 310, 314, 321, 323, 328, 340, 359, 361, 365, 525, 541, 607, 616, 674, 708, 819, 824], "distribut": 814, "do": [124, 528, 544, 619, 647, 662, 677, 814, 816], "doblecut": 823, "docstr": 469, "document": [814, 816, 817, 818, 826], "doe": [16, 37, 56, 74, 93, 112, 130, 143, 146, 149, 166, 183, 200, 218, 237, 255, 273, 293, 310, 323, 361, 397, 514, 560, 575, 589, 603, 634, 754, 816, 818], "doi": 809, "done": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 117, 118, 135, 136, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 278, 279, 298, 299], "doubl": [231, 286, 511, 518, 519, 643, 658, 673, 823], "doublecut": [812, 822, 823], "dovetail": [194, 201, 525, 530, 531, 532, 534, 541, 546, 547, 548, 552, 682], "dovetail_shap": [194, 823], "dovetailmortis": 812, "dovetailtenon": [534, 682, 812], "dowel": [397, 823], "down": 823, "downstream": [329, 331], "drawn": 818, "drill": [68, 572, 594, 812], "drillhol": [572, 578], "drillhole_diam": [68, 572, 578, 823], "drop": 823, "dure": [22, 23, 43, 44, 63, 71, 83, 102, 120, 139, 156, 173, 190, 194, 208, 227, 245, 263, 282, 303, 316, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 723, 732, 750, 762, 772, 782, 788, 793, 803], "dynam": [819, 823], "e": [22, 29, 43, 518, 534, 552, 578, 593, 607, 622, 651, 666, 682, 810, 817, 826], "each": [10, 20, 21, 31, 41, 42, 60, 61, 79, 80, 98, 99, 117, 118, 135, 136, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 278, 279, 298, 299, 380, 744, 816, 817, 823, 825], "easi": 815, "eclips": 810, "ecosystem": 812, "edg": [341, 368, 525, 534, 541, 552, 571, 616, 622, 638, 674, 682, 702, 819, 823], "edge_stud": [341, 819, 823], "edge_stud_offset": 819, "edgepositiontyp": [572, 812], "edit": 813, "editor": 810, "either": [87, 124, 212, 267, 379, 511, 525, 541, 572, 586, 600, 616, 643, 658, 674, 689, 819], "element": [0, 10, 13, 14, 16, 17, 35, 37, 38, 54, 56, 57, 72, 74, 75, 91, 93, 94, 110, 112, 113, 124, 128, 130, 131, 147, 149, 150, 164, 166, 167, 181, 183, 184, 198, 200, 202, 216, 218, 219, 235, 237, 238, 249, 253, 255, 256, 271, 273, 274, 291, 293, 295, 307, 308, 310, 314, 315, 321, 323, 324, 328, 329, 331, 334, 336, 340, 341, 359, 361, 365, 368, 373, 374, 375, 376, 377, 379, 389, 394, 395, 397, 400, 401, 403, 404, 410, 414, 415, 417, 422, 427, 431, 432, 433, 434, 435, 441, 446, 447, 449, 452, 453, 454, 455, 456, 462, 466, 467, 469, 472, 473, 474, 475, 476, 484, 489, 490, 493, 494, 496, 514, 519, 520, 528, 531, 532, 533, 544, 548, 549, 557, 560, 562, 565, 566, 575, 577, 581, 589, 594, 595, 603, 608, 613, 619, 621, 629, 634, 647, 652, 654, 662, 667, 668, 677, 679, 687, 696, 698, 699, 701, 702, 705, 710, 712, 715, 716, 717, 719, 721, 724, 725, 787, 788, 808, 812, 824], "element_geometri": 494, "element_id": 788, "element_lists_to_intersect": 352, "element_loop": 354, "element_on": 345, "element_two": 345, "elementnod": [698, 699], "elements_held": 788, "encod": 817, "encompass": 812, "encount": 723, "end": [10, 20, 21, 31, 41, 42, 50, 60, 61, 68, 79, 80, 87, 98, 99, 106, 117, 118, 135, 136, 153, 154, 160, 170, 171, 177, 187, 188, 194, 205, 206, 212, 223, 224, 231, 241, 242, 249, 259, 260, 278, 279, 286, 298, 299, 368, 370, 379, 380, 382, 511, 541, 572, 586, 600, 615, 630, 638, 643, 658, 674, 823], "end_point": 382, "endpoint": [379, 382], "enlarg": 307, "ensur": 613, "entail": [812, 817], "entir": 397, "entiti": 812, "entri": 817, "enum": [571, 614, 630, 673, 688, 742], "enumer": 48, "envelop": 469, "environ": [689, 690, 694, 695, 810, 812, 813, 818], "equal": [368, 638], "equival": [534, 622], "error": [0, 1, 316, 318, 319, 320, 373, 376, 400, 403, 431, 434, 452, 455, 472, 475, 492, 493, 494, 560, 723, 812, 817, 819, 824], "essenti": 497, "et": 496, "etc": [368, 427, 777, 810, 812, 818], "eth": [809, 812], "event": 814, "everi": 823, "exactli": 638, "exampl": [22, 23, 43, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 307, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 701, 732, 750, 762, 772, 782, 793, 803, 812, 815, 817, 818, 827], "exceed": [310, 361, 577, 578], "except": [492, 493, 494, 702, 723], "exclud": [24, 25, 45, 46, 64, 65, 84, 85, 103, 104, 121, 122, 140, 141, 157, 158, 174, 175, 191, 192, 209, 210, 228, 229, 246, 247, 264, 265, 283, 284, 304, 305, 392, 393, 412, 413, 424, 425, 444, 445, 464, 465, 487, 488, 505, 506, 522, 523, 538, 539, 554, 555, 568, 569, 583, 584, 597, 598, 610, 611, 626, 627, 640, 641, 655, 656, 670, 671, 684, 685, 733, 734, 751, 752, 763, 764, 773, 774, 783, 784, 794, 795, 804, 805], "execut": [71, 742, 788, 810], "exist": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 646, 659, 660, 675, 697, 701, 718, 745, 758, 768, 778, 789, 799, 816], "expand": 812, "expect": [16, 37, 56, 74, 93, 112, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293, 310, 615], "expected_kei": 615, "expens": 824, "explain": 815, "express": [696, 814], "extend": [50, 370, 380, 723, 823], "extens": [12, 33, 52, 53, 70, 71, 89, 108, 109, 126, 145, 162, 179, 180, 196, 214, 215, 233, 251, 269, 270, 288, 289, 370, 380, 387, 389, 410, 441, 462, 484, 723], "extra": 417, "extract": [818, 825], "extrus": 427, "f": 30, "fabric": [0, 417, 495, 498, 508, 511, 519, 525, 541, 557, 565, 566, 571, 572, 586, 594, 600, 614, 615, 616, 630, 631, 643, 658, 673, 674, 688, 809, 812, 815], "face": [20, 21, 23, 41, 42, 44, 50, 60, 61, 63, 79, 80, 83, 98, 99, 102, 117, 118, 120, 135, 136, 139, 153, 154, 156, 170, 171, 173, 187, 188, 190, 205, 206, 208, 223, 224, 227, 241, 242, 245, 259, 260, 263, 278, 279, 282, 298, 299, 303, 368, 380, 390, 411, 423, 443, 463, 479, 486, 497, 504, 521, 537, 541, 553, 567, 582, 596, 609, 613, 615, 625, 638, 639, 653, 669, 674, 683, 732, 750, 762, 772, 782, 793, 803, 823], "face_index": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 117, 118, 135, 136, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 278, 279, 298, 299], "face_limited_back": 615, "face_limited_bottom": 615, "face_limited_end": 615, "face_limited_front": 615, "face_limited_start": 615, "face_limited_top": 615, "factor": [729, 730], "factori": 816, "fail": [528, 544, 619, 647, 662, 677], "fals": [15, 23, 24, 25, 28, 36, 44, 45, 46, 50, 55, 63, 64, 65, 73, 83, 84, 85, 92, 102, 103, 104, 111, 120, 121, 122, 129, 139, 140, 141, 148, 156, 157, 158, 165, 173, 174, 175, 182, 190, 191, 192, 199, 208, 209, 210, 217, 227, 228, 229, 236, 245, 246, 247, 254, 263, 264, 265, 272, 282, 283, 284, 292, 303, 304, 305, 310, 313, 323, 327, 336, 339, 361, 364, 375, 378, 390, 392, 393, 405, 411, 412, 413, 419, 423, 424, 425, 433, 436, 443, 444, 445, 454, 457, 463, 464, 465, 474, 477, 486, 487, 488, 501, 504, 505, 506, 515, 521, 522, 523, 525, 529, 537, 538, 539, 541, 545, 553, 554, 555, 561, 567, 568, 569, 576, 582, 583, 584, 590, 596, 597, 598, 604, 607, 609, 610, 611, 616, 620, 625, 626, 627, 635, 639, 640, 641, 648, 651, 653, 655, 656, 663, 666, 669, 670, 671, 674, 678, 682, 683, 684, 685, 709, 723, 732, 733, 734, 747, 750, 751, 752, 759, 762, 763, 764, 769, 772, 773, 774, 779, 782, 783, 784, 790, 793, 794, 795, 800, 803, 804, 805, 819, 824], "fast": 812, "fasten": [10, 13, 417, 493, 812], "fastenerapplicationerror": [1, 812], "fastenertimberinterfac": [10, 13, 812], "feasibl": 723, "featru": [231, 823], "featur": [12, 13, 31, 33, 34, 53, 71, 90, 109, 126, 127, 143, 145, 146, 163, 180, 194, 197, 201, 215, 231, 234, 249, 252, 269, 270, 289, 316, 329, 368, 371, 372, 375, 388, 389, 399, 410, 417, 422, 429, 430, 433, 440, 441, 451, 454, 462, 471, 474, 484, 492, 494, 511, 514, 525, 528, 530, 541, 544, 546, 560, 572, 575, 586, 589, 600, 603, 616, 619, 634, 638, 643, 647, 658, 662, 674, 677, 723, 812, 815, 818, 819, 823, 824, 827], "feature_error": 316, "feature_geometri": 494, "featureapplicationerror": [1, 316, 514, 528, 544, 560, 575, 589, 603, 619, 634, 647, 662, 677, 812], "featuredefinit": 812, "fibr": [368, 815], "file": [18, 24, 39, 45, 58, 64, 76, 84, 95, 103, 114, 121, 132, 140, 151, 157, 168, 174, 185, 191, 203, 209, 220, 228, 239, 246, 257, 264, 275, 283, 296, 304, 383, 392, 406, 412, 420, 424, 437, 444, 458, 464, 480, 487, 502, 505, 508, 509, 510, 516, 522, 535, 538, 550, 554, 563, 568, 579, 583, 591, 597, 605, 610, 623, 626, 636, 640, 649, 655, 664, 670, 680, 684, 713, 733, 748, 751, 754, 755, 756, 760, 763, 770, 773, 780, 783, 791, 794, 801, 804, 814, 816, 820, 821], "file_nam": 508, "file_path": 510, "filepath": [18, 24, 39, 45, 58, 64, 76, 84, 95, 103, 114, 121, 132, 140, 151, 157, 168, 174, 185, 191, 203, 209, 220, 228, 239, 246, 257, 264, 275, 283, 296, 304, 383, 392, 406, 412, 420, 424, 437, 444, 458, 464, 480, 487, 502, 505, 516, 522, 535, 538, 550, 554, 563, 568, 579, 583, 591, 597, 605, 610, 623, 626, 636, 640, 649, 655, 664, 670, 680, 684, 713, 733, 748, 751, 755, 756, 760, 763, 770, 773, 780, 783, 791, 794, 801, 804], "filter": [715, 817], "filter_": 715, "final": 827, "find": [28, 307, 497, 712, 808, 818, 823], "find_neighboring_el": 812, "first": [29, 30, 87, 106, 143, 160, 194, 231, 249, 267, 308, 315, 379, 511, 519, 702, 719, 723, 822, 823, 827], "fit": [194, 231, 249, 814, 823], "fix": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799], "flag": 572, "flank": [194, 525, 534, 541, 552], "flank_angl": [194, 525, 534, 541, 552], "flip": [66, 68, 87, 124, 212, 267, 565, 823], "flip_lap_sid": [68, 87, 124, 212, 267, 823], "float": [10, 28, 29, 30, 50, 68, 87, 124, 177, 194, 201, 212, 231, 249, 267, 286, 307, 308, 310, 314, 321, 323, 328, 340, 341, 359, 361, 365, 368, 370, 373, 376, 380, 381, 382, 385, 400, 403, 417, 427, 431, 434, 452, 455, 472, 475, 495, 511, 525, 530, 534, 541, 546, 552, 557, 565, 566, 572, 578, 586, 600, 607, 616, 622, 643, 646, 658, 660, 674, 682, 696, 708, 727, 728, 729, 730, 808, 823], "flush": [819, 823], "follow": [1, 417, 814, 815, 816, 818, 823], "fom": 16, "forg": 813, "fork": 813, "form": 469, "format": [23, 24, 25, 44, 45, 46, 63, 64, 65, 83, 84, 85, 102, 103, 104, 120, 121, 122, 139, 140, 141, 156, 157, 158, 173, 174, 175, 190, 191, 192, 208, 209, 210, 227, 228, 229, 245, 246, 247, 263, 264, 265, 282, 283, 284, 303, 304, 305, 390, 392, 393, 411, 412, 413, 423, 424, 425, 443, 444, 445, 463, 464, 465, 486, 487, 488, 496, 504, 505, 506, 508, 521, 522, 523, 537, 538, 539, 553, 554, 555, 567, 568, 569, 582, 583, 584, 596, 597, 598, 609, 610, 611, 625, 626, 627, 639, 640, 641, 653, 655, 656, 669, 670, 671, 683, 684, 685, 732, 733, 734, 750, 751, 752, 754, 762, 763, 764, 772, 773, 774, 782, 783, 784, 793, 794, 795, 803, 804, 805, 817], "found": 816, "foundat": 809, "four": [817, 823], "fragil": 565, "frame": [20, 21, 31, 41, 42, 60, 61, 79, 80, 98, 99, 117, 118, 135, 136, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 278, 279, 298, 299, 341, 368, 380, 397, 417, 427, 495, 497, 518, 531, 533, 534, 544, 547, 549, 552, 577, 593, 594, 621, 622, 651, 666, 677, 679, 682, 701, 788, 811, 812, 815, 818, 819, 827], "frame_depth": [341, 819], "framework": 812, "free": 814, "french": [572, 581], "frenchridgelap": [68, 812], "from": [18, 19, 23, 24, 25, 29, 39, 40, 44, 45, 46, 58, 59, 63, 64, 65, 76, 77, 83, 84, 85, 95, 96, 102, 103, 104, 114, 115, 120, 121, 122, 132, 133, 139, 140, 141, 151, 152, 156, 157, 158, 168, 169, 173, 174, 175, 185, 186, 190, 191, 192, 194, 203, 204, 208, 209, 210, 220, 221, 227, 228, 229, 239, 240, 245, 246, 247, 249, 257, 258, 263, 264, 265, 275, 276, 282, 283, 284, 296, 297, 303, 304, 305, 341, 381, 382, 383, 384, 387, 388, 390, 392, 393, 397, 406, 407, 411, 412, 413, 417, 420, 421, 423, 424, 425, 437, 438, 440, 443, 444, 445, 458, 459, 463, 464, 465, 479, 480, 481, 486, 487, 488, 497, 502, 503, 504, 505, 506, 508, 516, 517, 518, 519, 520, 521, 522, 523, 525, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 547, 548, 549, 550, 551, 552, 553, 554, 555, 563, 564, 565, 566, 567, 568, 569, 577, 578, 579, 580, 581, 582, 583, 584, 591, 592, 593, 594, 595, 596, 597, 598, 605, 606, 607, 608, 609, 610, 611, 613, 616, 621, 622, 623, 624, 625, 626, 627, 629, 636, 637, 639, 640, 641, 649, 650, 651, 652, 653, 654, 655, 656, 664, 665, 666, 667, 668, 669, 670, 671, 674, 679, 680, 681, 682, 683, 684, 685, 687, 690, 694, 701, 713, 714, 724, 726, 732, 733, 734, 748, 749, 750, 751, 752, 754, 755, 760, 761, 762, 763, 764, 770, 771, 772, 773, 774, 780, 781, 782, 783, 784, 791, 792, 793, 794, 795, 801, 802, 803, 804, 805, 810, 812, 814, 815, 816, 817, 818, 819, 821, 822, 823, 825], "from_obj": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 732, 750, 762, 772, 782, 793, 803], "front": 615, "full": 638, "fullnam": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799], "function": [9, 124, 307, 715, 815, 816], "furnish": 814, "furthest": [578, 819], "futur": 812, "g": [22, 29, 43, 810, 817], "gener": [10, 13, 16, 29, 30, 231, 397, 417, 696, 715, 787, 816, 818, 819, 823, 827], "generated_el": 10, "geometr": [417, 812, 816, 822, 824], "geometri": [341, 368, 374, 375, 376, 377, 394, 395, 397, 400, 401, 402, 403, 404, 414, 415, 417, 427, 432, 433, 434, 435, 446, 447, 452, 453, 454, 455, 456, 466, 467, 472, 473, 474, 475, 476, 489, 490, 492, 494, 495, 514, 519, 528, 531, 532, 533, 544, 548, 549, 560, 562, 565, 566, 575, 577, 581, 589, 594, 595, 603, 608, 613, 619, 621, 629, 634, 647, 652, 654, 662, 666, 667, 668, 677, 679, 687, 706, 707, 727, 728, 730, 735, 739, 740, 788, 808, 812, 815, 818, 819, 824, 825, 826, 827], "geometry_typ": 811, "get": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 710, 715, 716, 732, 750, 762, 772, 782, 793, 803, 813, 815, 817], "get_leaf_subclass": 812, "getcustomattribut": 817, "getstandardattribut": 817, "gettyp": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799], "ghenv": [689, 690, 694, 695], "ghpython": [0, 689, 690, 691, 692, 693, 694, 695, 812, 815], "ghuser": 813, "git": 813, "github": [809, 813], "given": [16, 28, 29, 37, 49, 56, 74, 93, 112, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293, 307, 310, 314, 315, 323, 324, 328, 340, 359, 361, 365, 379, 380, 382, 385, 386, 496, 497, 508, 510, 520, 531, 532, 533, 547, 548, 549, 577, 581, 595, 607, 608, 613, 621, 629, 652, 654, 667, 668, 679, 687, 716, 717, 743, 817], "global": [359, 825], "go": 557, "goe": 417, "gonzalo": 809, "gramazio": [508, 809, 812, 814], "gramaziokohl": 809, "grant": 814, "graph": 702, "grasshopp": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 689, 690, 694, 695, 697, 745, 758, 768, 778, 789, 799, 810, 812, 813, 818, 823, 827], "group": [469, 698, 699, 700, 701, 712, 715, 718, 817], "group_nam": [715, 718], "groupnod": [698, 699, 700, 701], "guess_joint_topology_2beam": 812, "guid": [15, 24, 25, 36, 45, 46, 55, 64, 65, 73, 84, 85, 92, 103, 104, 111, 121, 122, 129, 140, 141, 148, 157, 158, 165, 174, 175, 182, 191, 192, 199, 209, 210, 217, 228, 229, 236, 246, 247, 249, 254, 264, 265, 272, 283, 284, 292, 304, 305, 378, 392, 393, 405, 412, 413, 419, 424, 425, 436, 444, 445, 457, 464, 465, 477, 487, 488, 501, 505, 506, 515, 522, 523, 529, 538, 539, 545, 554, 555, 561, 568, 569, 576, 583, 584, 590, 597, 598, 604, 610, 611, 620, 626, 627, 635, 640, 641, 648, 655, 656, 663, 670, 671, 678, 684, 685, 709, 710, 733, 734, 747, 751, 752, 759, 763, 764, 769, 773, 774, 779, 783, 784, 790, 794, 795, 800, 804, 805, 812, 815, 818, 823], "ha": [18, 19, 39, 40, 58, 59, 71, 76, 77, 95, 96, 114, 115, 132, 133, 151, 152, 168, 169, 185, 186, 203, 204, 220, 221, 239, 240, 257, 258, 275, 276, 296, 297, 307, 383, 384, 406, 407, 420, 421, 437, 438, 458, 459, 480, 481, 492, 502, 503, 516, 517, 535, 536, 550, 551, 563, 564, 579, 580, 591, 592, 605, 606, 623, 624, 636, 637, 649, 650, 664, 665, 680, 681, 701, 713, 714, 748, 749, 760, 761, 770, 771, 780, 781, 788, 791, 792, 801, 802, 818, 823, 826], "half": 823, "halflap": 823, "handl": 812, "handled_pair": [314, 328, 340, 365], "has_group": 701, "hash": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 732, 750, 762, 772, 782, 793, 803], "have": [15, 16, 36, 37, 55, 56, 68, 71, 73, 74, 92, 93, 111, 112, 129, 130, 143, 148, 149, 165, 166, 182, 183, 199, 200, 217, 218, 236, 237, 254, 255, 272, 273, 292, 293, 310, 323, 361, 368, 378, 405, 419, 427, 436, 457, 477, 501, 515, 529, 545, 561, 576, 590, 604, 620, 635, 648, 663, 678, 698, 709, 719, 747, 759, 769, 779, 790, 800, 818], "header": [341, 819, 823], "header_attribut": 816, "heel": [231, 244, 643, 658, 673, 823], "heel_depth": [231, 244, 643, 651, 658, 666, 823], "height": [194, 201, 231, 249, 341, 368, 381, 382, 495, 530, 534, 541, 546, 552, 622, 643, 646, 658, 660, 674, 682, 811, 817, 818, 819, 823], "held": 788, "help": 819, "here": [417, 723, 816, 819, 820, 826], "hereaft": 823, "herebi": 814, "hexadecim": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 732, 750, 762, 772, 782, 793, 803], "hierarchi": [377, 404, 435, 456, 476, 696, 698, 827], "highest": 823, "highli": 823, "holder": 814, "hole": [68, 417, 572, 815, 822, 823], "horizont": [511, 572, 586, 600, 638], "hous": [534, 622], "how": [815, 823, 827], "http": [809, 813, 816], "human": [743, 788], "hybrid": 817, "i": [12, 14, 16, 18, 19, 20, 21, 22, 26, 28, 29, 31, 33, 35, 37, 39, 40, 41, 42, 43, 47, 50, 52, 53, 54, 56, 58, 59, 60, 61, 66, 67, 68, 70, 71, 74, 76, 77, 79, 80, 86, 87, 89, 90, 93, 95, 96, 98, 99, 105, 106, 108, 109, 110, 112, 114, 115, 117, 118, 123, 124, 126, 130, 132, 133, 135, 136, 142, 143, 145, 147, 149, 151, 152, 153, 154, 159, 160, 162, 163, 164, 166, 168, 169, 170, 171, 176, 177, 179, 180, 181, 183, 185, 186, 187, 188, 193, 194, 196, 197, 198, 200, 203, 204, 205, 206, 211, 212, 214, 215, 218, 220, 221, 223, 224, 230, 231, 233, 234, 237, 239, 240, 241, 242, 248, 249, 251, 252, 253, 255, 257, 258, 259, 260, 266, 267, 269, 270, 273, 275, 276, 278, 279, 285, 288, 289, 290, 291, 293, 296, 297, 298, 299, 306, 307, 310, 323, 341, 359, 361, 368, 370, 379, 380, 383, 384, 396, 397, 406, 407, 416, 417, 420, 421, 426, 427, 437, 438, 448, 449, 458, 459, 468, 469, 478, 480, 481, 491, 502, 503, 507, 508, 514, 516, 517, 518, 520, 524, 525, 528, 531, 532, 533, 534, 535, 536, 540, 541, 544, 548, 549, 550, 551, 552, 556, 557, 563, 564, 565, 566, 570, 575, 577, 578, 579, 580, 581, 585, 589, 591, 592, 593, 595, 599, 600, 603, 605, 606, 607, 608, 612, 613, 616, 619, 621, 622, 623, 624, 628, 629, 630, 634, 636, 637, 638, 642, 647, 649, 650, 651, 652, 654, 657, 658, 662, 664, 665, 666, 667, 668, 672, 674, 677, 679, 680, 681, 682, 686, 687, 690, 694, 696, 698, 701, 705, 708, 713, 714, 723, 735, 741, 744, 748, 749, 753, 760, 761, 766, 770, 771, 776, 780, 781, 786, 787, 791, 792, 797, 801, 802, 807, 809, 812, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 826, 827], "id": [498, 788, 810], "idea": 815, "identifi": [31, 307, 710], "ignor": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 117, 118, 135, 136, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 278, 279, 298, 299], "ignore_end": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 117, 118, 135, 136, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 278, 279, 298, 299], "imag": 826, "implement": [12, 14, 22, 31, 33, 35, 43, 54, 110, 126, 145, 147, 164, 181, 198, 253, 269, 291, 397, 754, 808, 812], "implemet": 754, "impli": [814, 824], "implicit": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799], "import": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 701, 723, 732, 750, 762, 772, 782, 793, 803, 816, 827], "inclin": [525, 541, 557, 586, 600, 616, 643, 658, 674], "inclination_1": 511, "inclination_2": 511, "includ": [375, 433, 454, 474, 508, 814, 816], "include_featur": [375, 433, 454, 474], "incorpor": 777, "increment": 788, "indent": [24, 25, 45, 46, 64, 65, 84, 85, 103, 104, 121, 122, 140, 141, 157, 158, 174, 175, 191, 192, 209, 210, 228, 229, 246, 247, 264, 265, 283, 284, 304, 305, 392, 393, 412, 413, 424, 425, 444, 445, 464, 465, 487, 488, 505, 506, 522, 523, 538, 539, 554, 555, 568, 569, 583, 584, 597, 598, 610, 611, 626, 627, 640, 641, 655, 656, 670, 671, 684, 685, 733, 734, 751, 752, 763, 764, 773, 774, 783, 784, 794, 795, 804, 805], "independ": [15, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272, 292, 378, 405, 419, 436, 457, 477, 501, 515, 529, 545, 561, 576, 590, 604, 620, 635, 648, 663, 678, 709, 747, 759, 769, 779, 790, 800], "index": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 117, 118, 135, 136, 153, 154, 170, 171, 187, 188, 194, 205, 206, 223, 224, 241, 242, 249, 259, 260, 278, 279, 298, 299, 385, 386, 391, 497, 498, 518, 534, 552, 578, 593, 607, 622, 651, 666, 682, 689, 695, 812, 823], "indic": [381, 382, 492, 572, 817, 818], "inflat": [307, 373, 376, 400, 403, 431, 434, 452, 455, 472, 475, 808], "inflate_bi": [307, 472, 475, 808], "inform": [316, 492, 812, 819, 824, 825, 826], "inherit": [10, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 286, 308, 321, 359, 368, 397, 417, 427, 449, 469, 498, 511, 525, 541, 557, 572, 586, 600, 616, 631, 643, 658, 674, 696, 744, 757, 767, 777, 788, 798, 812, 816], "initi": [194, 389, 410, 441, 462, 484], "inner": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 117, 118, 135, 136, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 278, 279, 298, 299, 823], "input": [29, 307, 417, 689, 690, 694, 815, 816, 817, 818, 819, 821, 822, 823, 824], "input_nam": [694, 695], "insid": [341, 731, 810], "inspect": [316, 825], "instal": 812, "instanc": [10, 11, 16, 18, 19, 32, 37, 39, 40, 50, 51, 56, 58, 59, 68, 69, 74, 76, 77, 87, 88, 93, 95, 96, 106, 107, 112, 114, 115, 124, 125, 130, 132, 133, 143, 144, 149, 151, 152, 160, 161, 166, 168, 169, 177, 178, 183, 185, 186, 194, 195, 200, 203, 204, 212, 213, 218, 220, 221, 231, 232, 237, 239, 240, 249, 250, 255, 257, 258, 267, 268, 273, 275, 276, 286, 287, 293, 296, 297, 336, 369, 383, 384, 398, 406, 407, 417, 418, 420, 421, 428, 437, 438, 450, 458, 459, 470, 480, 481, 499, 502, 503, 512, 514, 516, 517, 518, 520, 526, 528, 531, 532, 533, 534, 535, 536, 542, 544, 547, 548, 549, 550, 551, 552, 558, 562, 563, 564, 573, 575, 577, 578, 579, 580, 581, 587, 589, 591, 592, 593, 595, 601, 603, 605, 606, 607, 608, 613, 617, 619, 621, 622, 623, 624, 629, 632, 634, 636, 637, 638, 644, 646, 647, 649, 650, 651, 652, 654, 659, 660, 662, 664, 665, 666, 667, 668, 675, 677, 679, 680, 681, 682, 687, 697, 703, 713, 714, 745, 748, 749, 758, 760, 761, 768, 770, 771, 778, 780, 781, 789, 791, 792, 799, 801, 802, 810, 816], "instanti": [31, 71, 124, 449, 816], "instead": [16, 31, 565, 818], "instruct": [723, 742, 744, 767, 777, 788, 798, 812], "int": [49, 194, 231, 249, 368, 370, 385, 386, 387, 391, 427, 498, 511, 518, 534, 541, 552, 572, 578, 586, 593, 600, 607, 622, 643, 651, 658, 666, 674, 682, 690, 694, 695, 702, 743, 788], "integ": [194, 249, 368, 427, 823], "intend": [817, 818], "interact": [31, 696, 702, 712, 716, 719, 725, 810, 827], "interaction_typ": 712, "interest": 379, "interfac": [10, 417, 422, 812], "intersect": [27, 28, 29, 30, 308, 310, 314, 321, 323, 328, 340, 359, 361, 365, 514, 560, 575, 589, 603, 634, 638], "introduct": 812, "intuit": 812, "invok": 813, "io": 689, "ironpython": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799], "is_beam": 449, "is_built": 788, "is_group_el": 449, "is_plan": 788, "is_plat": 449, "is_pocket": 607, "is_wal": 449, "issu": 565, "item_input_valid": 812, "iter": 723, "itersect": [528, 544, 619, 647, 662, 677], "its": [11, 20, 21, 24, 25, 32, 41, 42, 45, 46, 51, 60, 61, 64, 65, 69, 79, 80, 84, 85, 88, 98, 99, 103, 104, 107, 117, 118, 121, 122, 125, 135, 136, 140, 141, 144, 153, 154, 157, 158, 161, 170, 171, 174, 175, 178, 187, 188, 191, 192, 194, 195, 205, 206, 209, 210, 213, 223, 224, 228, 229, 232, 241, 242, 246, 247, 249, 250, 259, 260, 264, 265, 268, 278, 279, 283, 284, 287, 298, 299, 304, 305, 369, 377, 381, 389, 392, 393, 398, 404, 410, 412, 413, 418, 424, 425, 428, 435, 441, 444, 445, 450, 456, 462, 464, 465, 470, 476, 484, 487, 488, 499, 505, 506, 512, 522, 523, 526, 538, 539, 542, 554, 555, 558, 568, 569, 573, 583, 584, 587, 597, 598, 601, 610, 611, 617, 626, 627, 632, 638, 640, 641, 644, 655, 656, 659, 670, 671, 675, 684, 685, 697, 710, 733, 734, 745, 751, 752, 758, 763, 764, 768, 773, 774, 778, 783, 784, 789, 794, 795, 799, 804, 805, 813, 817, 823], "jack": [341, 586, 594, 819], "jack_stud": [341, 819, 823], "jackraftercut": [812, 822], "jo": [16, 37, 56, 74, 93, 112, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293], "join": [10, 16, 31, 37, 50, 56, 68, 74, 87, 93, 106, 112, 124, 130, 143, 149, 160, 166, 177, 183, 194, 200, 212, 218, 231, 237, 249, 255, 267, 273, 286, 293, 314, 316, 321, 328, 331, 340, 365, 492, 819, 824], "joineri": 723, "joint": [10, 12, 13, 14, 16, 22, 27, 48, 50, 52, 53, 54, 56, 66, 68, 70, 71, 72, 74, 87, 89, 90, 91, 93, 106, 108, 109, 110, 112, 124, 126, 127, 128, 130, 143, 145, 146, 147, 149, 160, 162, 163, 164, 166, 177, 179, 180, 181, 183, 194, 196, 197, 198, 200, 212, 214, 215, 216, 218, 231, 233, 234, 235, 237, 244, 249, 251, 252, 253, 255, 267, 269, 270, 271, 273, 286, 288, 289, 290, 291, 293, 308, 310, 314, 316, 321, 328, 331, 340, 359, 365, 370, 387, 417, 469, 492, 493, 534, 552, 622, 643, 651, 658, 666, 682, 696, 703, 723, 726, 810, 812, 815, 816, 818, 819, 824, 827], "joint_error": 316, "joint_factori": 816, "joint_kei": [370, 387], "joint_overrid": 819, "joint_typ": [308, 321, 359], "jointdefinit": [314, 328, 340, 365, 812], "jointrul": [308, 314, 321, 328, 359, 365, 812, 824], "jointtopologi": [29, 30, 308, 323, 359, 696, 812], "joist": 818, "json": [18, 19, 24, 25, 39, 40, 45, 46, 58, 59, 64, 65, 76, 77, 84, 85, 95, 96, 103, 104, 114, 115, 121, 122, 132, 133, 140, 141, 151, 152, 157, 158, 168, 169, 174, 175, 185, 186, 191, 192, 203, 204, 209, 210, 220, 221, 228, 229, 239, 240, 246, 247, 257, 258, 264, 265, 275, 276, 283, 284, 296, 297, 304, 305, 383, 384, 392, 393, 406, 407, 412, 413, 420, 421, 424, 425, 437, 438, 444, 445, 458, 459, 464, 465, 480, 481, 487, 488, 502, 503, 505, 506, 516, 517, 522, 523, 535, 536, 538, 539, 550, 551, 554, 555, 563, 564, 568, 569, 579, 580, 583, 584, 591, 592, 597, 598, 605, 606, 610, 611, 623, 624, 626, 627, 636, 637, 640, 641, 649, 650, 655, 656, 664, 665, 670, 671, 680, 681, 684, 685, 713, 714, 733, 734, 748, 749, 751, 752, 754, 755, 756, 760, 761, 763, 764, 770, 771, 773, 774, 780, 781, 783, 784, 791, 792, 794, 795, 801, 802, 804, 805], "just": 417, "k": 359, "kasir": 809, "keep": 823, "keep_connect": 694, "kei": [22, 31, 43, 368, 370, 387, 427, 495, 497, 615, 817], "keyword": [308, 321, 359, 700], "kick": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799], "kind": [814, 823], "king": [341, 819], "king_stud": [341, 819, 823], "kohler": [508, 809, 812, 814], "kwarg": [16, 37, 56, 74, 93, 112, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293, 308, 321, 359, 478, 479, 519, 566, 594, 698, 700], "l": [50, 68, 87, 106, 124, 249, 359, 367, 825], "l_default": 367, "lap": [68, 87, 124, 212, 267, 367, 572, 581, 812], "lapjoint": [68, 72, 87, 212, 267, 812], "larger": [368, 818, 823], "later": [194, 817, 818], "latest": 813, "latter": 818, "layer": 826, "lbuttjoint": 812, "lead": 600, "lead_angl": 600, "lead_angle_parallel": 600, "lead_inclin": 600, "lead_inclination_parallel": 600, "lement": [371, 399, 429, 451, 471], "length": [177, 194, 212, 249, 267, 341, 368, 381, 495, 525, 534, 541, 552, 600, 607, 616, 622, 638, 674, 682, 823], "length_limited_bottom": [525, 541, 616, 674, 682], "length_limited_top": [541, 616, 674, 682], "less": [16, 37, 56, 74, 93, 112, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293, 323, 368], "level": 823, "lfrenchridgelapjoint": 812, "li": [818, 826], "liabil": 814, "liabl": 814, "librari": [809, 810, 812, 815], "licens": 812, "lie": [16, 37, 56, 74, 93, 112, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293], "like": [614, 812, 815, 824], "limit": [525, 541, 557, 600, 614, 615, 616, 658, 674, 682, 814], "limitation_top": 525, "limitationtoptyp": 812, "line": [341, 368, 381, 427, 565, 566, 812, 817, 818, 819, 822], "linear": [767, 818], "lineardimens": 812, "linecurv": 818, "link": 329, "lintel_post": 819, "list": [10, 16, 28, 31, 37, 56, 74, 93, 112, 124, 130, 149, 166, 183, 194, 200, 218, 237, 249, 255, 273, 286, 293, 307, 308, 314, 316, 321, 328, 336, 340, 341, 361, 365, 368, 371, 372, 379, 388, 399, 417, 429, 430, 440, 451, 471, 492, 493, 495, 518, 520, 531, 608, 694, 696, 699, 705, 712, 716, 723, 788, 808, 816, 823, 825], "list_input_valid": 812, "liter": [571, 614, 630, 673, 688], "llapjoint": 812, "lmiterjoint": 812, "local": [368, 557, 818], "locat": [368, 788, 818], "log": [49, 743], "long": [368, 380], "long_edg": 368, "lower": 823, "lowest": 823, "ly": 822, "m": 813, "machin": [194, 249, 368, 520, 531, 532, 533, 547, 548, 549, 577, 581, 595, 600, 608, 613, 615, 621, 629, 652, 654, 667, 668, 679, 687, 816, 821], "machining_limit": 600, "machininglimit": 812, "made": [68, 194, 231, 249, 511, 525, 541, 565, 566, 572, 586, 600, 616, 643, 658, 674, 823], "mai": [1, 817, 824], "main": [10, 22, 29, 43, 50, 62, 66, 68, 82, 101, 119, 124, 138, 155, 160, 172, 177, 189, 194, 207, 212, 226, 231, 243, 249, 261, 281, 286, 302, 552, 622, 651, 666, 682, 823], "main_beam": [50, 68, 87, 124, 160, 177, 194, 212, 231, 249, 267, 286, 607, 811], "main_beam_guid": 249, "maintain": 812, "major": [368, 818], "make": [11, 15, 32, 36, 51, 55, 69, 73, 88, 92, 107, 111, 125, 129, 144, 148, 161, 165, 178, 182, 195, 199, 213, 217, 232, 236, 250, 254, 268, 272, 287, 292, 369, 378, 398, 405, 417, 418, 419, 428, 436, 450, 457, 470, 477, 478, 499, 501, 512, 515, 526, 529, 542, 545, 558, 561, 565, 573, 576, 587, 590, 601, 604, 617, 620, 632, 635, 638, 644, 648, 659, 663, 675, 678, 697, 709, 745, 747, 758, 759, 768, 769, 778, 779, 789, 790, 799, 800], "manage_dynamic_param": 812, "mani": [809, 810, 812], "map": [31, 815, 826], "mapsiz": 826, "margin": [525, 541, 616, 674], "mass": 696, "match": [72, 361, 497, 816, 823], "materi": [368, 427, 698, 704, 705, 720, 818, 826], "mathemat": [29, 30], "max": 824, "max_dist": [28, 29, 30, 308, 310, 314, 321, 323, 328, 340, 359, 361, 365, 366, 708], "maxdist": 824, "maximum": [29, 30, 308, 310, 314, 321, 323, 328, 340, 359, 361, 365, 708], "mayb": 701, "meant": 9, "measur": 385, "meet": 823, "merchant": 814, "merg": 814, "mesh": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 374, 390, 401, 411, 423, 432, 433, 443, 453, 454, 463, 473, 474, 486, 504, 521, 537, 553, 567, 582, 596, 609, 613, 625, 639, 653, 669, 683, 732, 750, 762, 772, 782, 793, 803, 811], "messag": [493, 494], "method": [10, 11, 16, 22, 27, 29, 31, 32, 37, 43, 48, 50, 51, 52, 53, 56, 68, 69, 70, 71, 72, 74, 87, 88, 89, 90, 93, 106, 107, 108, 109, 112, 124, 125, 130, 143, 144, 149, 160, 161, 162, 163, 166, 177, 178, 179, 180, 183, 194, 195, 196, 197, 200, 212, 213, 214, 215, 218, 231, 232, 233, 234, 237, 249, 250, 251, 252, 255, 267, 268, 270, 273, 286, 287, 288, 289, 290, 293, 308, 316, 321, 329, 331, 335, 341, 359, 368, 369, 397, 398, 417, 418, 427, 428, 449, 450, 469, 470, 495, 498, 499, 508, 511, 512, 525, 526, 541, 542, 552, 557, 558, 572, 573, 586, 587, 600, 601, 607, 616, 617, 631, 632, 643, 644, 658, 659, 674, 675, 682, 696, 697, 723, 742, 744, 745, 754, 757, 758, 767, 768, 777, 778, 788, 789, 798, 799, 812, 816], "metric": 380, "middl": [368, 823], "midpoint": 368, "might": [815, 823], "mill": [50, 177, 286, 528, 544, 619, 647, 662, 677, 823], "mill_depth": [50, 177, 286, 823], "mind": 816, "minim": [24, 25, 45, 46, 64, 65, 84, 85, 103, 104, 121, 122, 140, 141, 157, 158, 174, 175, 191, 192, 209, 210, 228, 229, 246, 247, 264, 265, 283, 284, 304, 305, 392, 393, 412, 413, 417, 424, 425, 444, 445, 464, 465, 487, 488, 505, 506, 522, 523, 538, 539, 554, 555, 568, 569, 583, 584, 597, 598, 610, 611, 626, 627, 640, 641, 655, 656, 670, 671, 684, 685, 733, 734, 751, 752, 763, 764, 773, 774, 783, 784, 794, 795, 804, 805], "minimum": 380, "misc": 809, "miss": 817, "mit": 814, "miter": [106, 286, 290, 367], "mm": 557, "mode": 813, "model": [0, 10, 16, 22, 37, 43, 50, 56, 62, 68, 71, 74, 82, 87, 93, 101, 106, 112, 119, 124, 130, 138, 143, 149, 155, 160, 166, 172, 177, 183, 189, 194, 200, 207, 212, 218, 226, 231, 237, 243, 249, 255, 261, 267, 273, 281, 286, 293, 302, 341, 367, 368, 377, 402, 404, 417, 427, 435, 456, 476, 508, 509, 510, 696, 698, 699, 700, 701, 702, 703, 704, 705, 708, 711, 717, 718, 720, 721, 722, 723, 724, 726, 731, 735, 742, 777, 787, 812, 815, 818, 821, 822, 827], "model3d": 812, "model_max_dist": [310, 323, 361], "model_to_xml": 510, "modifi": [494, 735, 814], "modify_cross": [50, 823], "modul": [1, 9, 812, 816], "more": [231, 372, 417, 430, 492, 812, 815, 816, 818, 823], "mortis": [231, 249, 525, 531, 532, 534, 658, 660, 667, 812], "mortise_height": [658, 660], "mortise_width": [658, 660], "most": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 117, 118, 135, 136, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 278, 279, 298, 299], "move": 417, "multipl": [10, 321, 699, 810, 816], "must": [341, 511, 525, 541, 572, 586, 600, 616, 638, 643, 658, 674, 723, 819, 822], "myenvnam": 813, "n": 813, "name": [329, 498, 508, 689, 692, 693, 694, 695, 700, 701, 715, 718, 816, 817, 825], "nation": 809, "nativ": [24, 25, 45, 46, 64, 65, 84, 85, 103, 104, 121, 122, 140, 141, 157, 158, 174, 175, 191, 192, 209, 210, 228, 229, 246, 247, 264, 265, 283, 284, 304, 305, 392, 393, 412, 413, 424, 425, 444, 445, 464, 465, 487, 488, 505, 506, 522, 523, 538, 539, 554, 555, 568, 569, 583, 584, 597, 598, 610, 611, 626, 627, 640, 641, 655, 656, 670, 671, 684, 685, 733, 734, 751, 752, 763, 764, 773, 774, 783, 784, 794, 795, 804, 805], "nccr": 809, "necessari": [52, 70, 71, 89, 108, 162, 179, 196, 214, 233, 251, 288, 813, 816], "need": [29, 329, 417, 816, 817, 827], "neighbor": [28, 307, 808], "neightbor": [28, 808], "neither": 705, "nest": [500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 661, 676], "net": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799], "new": [16, 37, 56, 74, 93, 112, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293, 695, 813, 816, 818], "newlin": [24, 25, 45, 46, 64, 65, 84, 85, 103, 104, 121, 122, 140, 141, 157, 158, 174, 175, 191, 192, 209, 210, 228, 229, 246, 247, 264, 265, 283, 284, 304, 305, 392, 393, 412, 413, 424, 425, 444, 445, 464, 465, 487, 488, 505, 506, 522, 523, 538, 539, 554, 555, 568, 569, 583, 584, 597, 598, 610, 611, 626, 627, 640, 641, 655, 656, 670, 671, 684, 685, 733, 734, 751, 752, 763, 764, 773, 774, 783, 784, 794, 795, 804, 805], "node": [10, 698, 699, 700, 701], "non": 28, "none": [15, 29, 30, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 231, 236, 244, 254, 272, 292, 314, 328, 340, 365, 370, 371, 378, 381, 382, 387, 388, 394, 399, 405, 414, 417, 419, 427, 429, 436, 440, 442, 446, 451, 457, 466, 471, 477, 478, 489, 501, 508, 515, 518, 529, 545, 561, 576, 590, 600, 604, 620, 635, 648, 663, 678, 689, 690, 694, 695, 698, 699, 700, 701, 702, 704, 705, 708, 709, 715, 724, 725, 727, 728, 729, 730, 735, 736, 739, 747, 759, 769, 779, 790, 800, 818, 823], "noninfring": 814, "normal": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 117, 118, 135, 136, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 278, 279, 298, 299, 341, 368, 478, 497, 552, 682], "notch": [194, 231, 658, 823], "notch_limit": [658, 666], "notch_width": [658, 666], "note": [12, 33, 126, 145, 269, 307, 698, 809], "notic": 814, "now": 823, "null": 143, "nulljoint": 812, "number": [690, 694, 819, 827], "obb": [376, 403, 434, 455, 475], "obj": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 732, 750, 762, 772, 782, 788, 793, 803], "object": [11, 15, 16, 18, 19, 22, 24, 25, 26, 27, 28, 32, 36, 37, 39, 40, 43, 45, 46, 47, 48, 51, 55, 56, 58, 59, 64, 65, 67, 69, 73, 74, 76, 77, 84, 85, 86, 88, 92, 93, 95, 96, 103, 104, 105, 107, 111, 112, 114, 115, 121, 122, 123, 125, 129, 130, 132, 133, 140, 141, 142, 144, 148, 149, 151, 152, 157, 158, 159, 161, 165, 166, 168, 169, 174, 175, 176, 178, 182, 183, 185, 186, 191, 192, 193, 195, 199, 200, 203, 204, 209, 210, 211, 213, 217, 218, 220, 221, 228, 229, 230, 232, 236, 237, 239, 240, 246, 247, 248, 250, 254, 255, 257, 258, 264, 265, 266, 268, 272, 273, 275, 276, 283, 284, 285, 287, 292, 293, 296, 297, 304, 305, 306, 307, 316, 329, 331, 335, 341, 369, 378, 383, 384, 392, 393, 396, 398, 405, 406, 407, 412, 413, 416, 418, 419, 420, 421, 424, 425, 426, 428, 436, 437, 438, 444, 445, 448, 450, 457, 458, 459, 464, 465, 468, 470, 477, 480, 481, 487, 488, 491, 495, 499, 501, 502, 503, 505, 506, 507, 508, 509, 510, 512, 515, 516, 517, 522, 523, 524, 526, 529, 535, 536, 538, 539, 540, 542, 545, 550, 551, 554, 555, 556, 558, 561, 562, 563, 564, 568, 569, 570, 571, 573, 576, 579, 580, 583, 584, 585, 587, 590, 591, 592, 597, 598, 599, 601, 604, 605, 606, 610, 611, 612, 614, 615, 617, 620, 623, 624, 626, 627, 628, 630, 632, 635, 636, 637, 640, 641, 642, 644, 648, 649, 650, 655, 656, 657, 659, 663, 664, 665, 670, 671, 672, 673, 675, 678, 680, 681, 684, 685, 686, 688, 689, 690, 694, 695, 696, 697, 702, 703, 709, 713, 714, 726, 733, 734, 741, 742, 745, 747, 748, 749, 751, 752, 753, 754, 758, 759, 760, 761, 763, 764, 766, 768, 769, 770, 771, 773, 774, 776, 778, 779, 780, 781, 783, 784, 786, 787, 789, 790, 791, 792, 794, 795, 797, 799, 800, 801, 802, 804, 805, 807, 812, 817, 818, 819, 824, 826], "obtain": 814, "occ": 812, "occur": [316, 492, 723, 825], "offset": [373, 376, 400, 403, 431, 434, 452, 455, 472, 475, 534, 552, 622, 682, 819], "often": 469, "onc": [368, 427, 818], "one": [20, 21, 41, 42, 60, 61, 72, 79, 80, 87, 98, 99, 117, 118, 124, 135, 136, 153, 154, 160, 170, 171, 187, 188, 194, 205, 206, 212, 223, 224, 231, 241, 242, 249, 259, 260, 267, 278, 279, 298, 299, 315, 372, 430, 497, 638, 702, 705, 787, 788, 816, 818, 823, 825], "onli": [12, 14, 22, 33, 35, 43, 54, 68, 110, 126, 145, 147, 164, 181, 198, 253, 269, 291, 310, 323, 361, 375, 433, 454, 474, 723, 817], "onto": 819, "open": [478, 809, 812], "opencascad": 812, "oper": [822, 824], "oppedg": [571, 572], "oppos": 386, "opposit": [50, 571, 823], "option": [12, 14, 15, 20, 21, 23, 24, 25, 28, 29, 30, 33, 35, 36, 41, 42, 44, 45, 46, 54, 55, 60, 61, 63, 64, 65, 73, 79, 80, 83, 84, 85, 92, 98, 99, 102, 103, 104, 110, 111, 117, 118, 120, 121, 122, 126, 129, 135, 136, 139, 140, 141, 145, 147, 148, 153, 154, 156, 157, 158, 164, 165, 170, 171, 173, 174, 175, 181, 182, 187, 188, 190, 191, 192, 194, 198, 199, 205, 206, 208, 209, 210, 217, 223, 224, 227, 228, 229, 236, 241, 242, 245, 246, 247, 253, 254, 259, 260, 263, 264, 265, 269, 272, 278, 279, 282, 283, 284, 291, 292, 298, 299, 303, 304, 305, 307, 308, 310, 314, 321, 323, 328, 340, 341, 359, 361, 365, 368, 373, 375, 378, 390, 392, 393, 400, 405, 411, 412, 413, 417, 419, 423, 424, 425, 427, 431, 433, 436, 443, 444, 445, 452, 454, 457, 463, 464, 465, 472, 474, 477, 486, 487, 488, 501, 504, 505, 506, 508, 515, 518, 521, 522, 523, 529, 534, 537, 538, 539, 545, 552, 553, 554, 555, 561, 567, 568, 569, 576, 578, 582, 583, 584, 590, 593, 596, 597, 598, 600, 604, 607, 609, 610, 611, 620, 622, 625, 626, 627, 635, 639, 640, 641, 648, 651, 653, 655, 656, 663, 666, 669, 670, 671, 678, 682, 683, 684, 685, 690, 694, 698, 699, 700, 701, 702, 705, 708, 709, 715, 723, 725, 727, 728, 729, 730, 732, 733, 734, 747, 750, 751, 752, 759, 762, 763, 764, 769, 772, 773, 774, 779, 782, 783, 784, 790, 793, 794, 795, 800, 803, 804, 805, 818, 827], "order": [29, 307, 315, 329, 361, 787], "orient": [341, 376, 381, 382, 403, 434, 455, 475, 478, 511, 541, 572, 586, 600, 613, 630, 638, 643, 658, 674, 707, 826], "orientationtyp": [511, 541, 572, 586, 600, 643, 658, 674, 812], "origin": [15, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272, 292, 368, 378, 405, 419, 436, 457, 477, 501, 515, 529, 545, 561, 576, 590, 604, 620, 635, 648, 663, 678, 709, 727, 728, 747, 759, 769, 779, 790, 800, 818, 826], "orthogon": [20, 41, 60, 79, 98, 117, 135, 153, 170, 187, 205, 223, 241, 259, 278, 298], "other": [11, 20, 21, 32, 41, 42, 51, 60, 61, 68, 69, 79, 80, 87, 88, 98, 99, 107, 117, 118, 124, 125, 135, 136, 144, 153, 154, 160, 161, 170, 171, 178, 187, 188, 194, 195, 205, 206, 212, 213, 223, 224, 231, 232, 241, 242, 249, 250, 259, 260, 267, 268, 278, 279, 287, 298, 299, 333, 369, 398, 418, 428, 449, 450, 469, 470, 499, 512, 526, 542, 558, 573, 578, 587, 601, 617, 632, 644, 659, 675, 697, 701, 745, 758, 768, 778, 789, 799, 809, 814, 823, 827], "other_beam": 578, "otherwis": [29, 50, 310, 323, 336, 361, 557, 814, 818], "out": 814, "outer": 823, "outlin": [417, 427, 442], "outline_point": 417, "output": [11, 24, 25, 29, 32, 45, 46, 51, 64, 65, 69, 84, 85, 88, 103, 104, 107, 121, 122, 125, 140, 141, 144, 157, 158, 161, 174, 175, 178, 191, 192, 195, 209, 210, 213, 228, 229, 232, 246, 247, 250, 264, 265, 268, 283, 284, 287, 304, 305, 369, 392, 393, 398, 412, 413, 418, 424, 425, 428, 444, 445, 450, 464, 465, 470, 487, 488, 499, 505, 506, 512, 522, 523, 526, 538, 539, 542, 554, 555, 558, 568, 569, 573, 583, 584, 587, 597, 598, 601, 610, 611, 617, 626, 627, 632, 640, 641, 644, 655, 656, 659, 670, 671, 675, 684, 685, 689, 697, 733, 734, 745, 751, 752, 758, 763, 764, 768, 773, 774, 778, 783, 784, 789, 794, 795, 799, 804, 805, 818, 819, 821, 822, 824], "over": 417, "overal": 815, "overlai": 798, "overlap": 823, "overrid": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 359, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799, 819], "overwrit": [823, 827], "own": [754, 823], "packag": [812, 813, 816], "pair": [28, 29, 307, 808, 817], "panel": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 341, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799], "panel_height": 341, "panel_length": 341, "parallel": [385, 600, 607, 638, 788, 818, 823], "param": [692, 693], "paramet": [10, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 73, 74, 76, 77, 79, 80, 83, 84, 85, 86, 87, 92, 93, 95, 96, 98, 99, 102, 103, 104, 105, 106, 111, 112, 114, 115, 117, 118, 120, 121, 122, 123, 124, 129, 130, 132, 133, 135, 136, 139, 140, 141, 142, 143, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 160, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 217, 218, 220, 221, 223, 224, 227, 228, 229, 230, 231, 236, 237, 239, 240, 241, 242, 245, 246, 247, 248, 249, 254, 255, 257, 258, 259, 260, 263, 264, 265, 266, 267, 272, 273, 275, 276, 278, 279, 282, 283, 284, 285, 286, 292, 293, 296, 297, 298, 299, 303, 304, 305, 306, 307, 308, 310, 314, 315, 321, 323, 328, 336, 340, 341, 359, 361, 365, 368, 371, 372, 373, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 403, 405, 406, 407, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 423, 424, 425, 426, 427, 429, 430, 431, 433, 434, 436, 437, 438, 440, 443, 444, 445, 446, 447, 448, 451, 452, 454, 455, 457, 458, 459, 463, 464, 465, 466, 467, 468, 471, 472, 474, 475, 477, 480, 481, 486, 487, 488, 489, 490, 491, 495, 496, 497, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 694, 695, 698, 699, 700, 701, 702, 703, 704, 705, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 743, 747, 748, 749, 750, 751, 752, 753, 755, 756, 759, 760, 761, 762, 763, 764, 766, 769, 770, 771, 772, 773, 774, 776, 779, 780, 781, 782, 783, 784, 786, 787, 790, 791, 792, 793, 794, 795, 797, 800, 801, 802, 803, 804, 805, 807, 808, 816, 817, 826], "parametr": [368, 391, 511, 525, 541, 552, 572, 586, 600, 616, 643, 658, 674, 682, 812], "parent": [698, 699, 700, 701], "pars": 754, "part": [22, 43, 495, 577, 578, 698, 705, 808, 812, 816, 818, 822], "particular": 814, "pass": [16, 30, 308, 321, 359, 380], "path": [18, 24, 39, 45, 58, 64, 76, 84, 95, 103, 114, 121, 132, 140, 151, 157, 168, 174, 185, 191, 203, 209, 220, 228, 239, 246, 257, 264, 275, 283, 296, 304, 383, 392, 406, 412, 420, 424, 437, 444, 458, 464, 480, 487, 502, 505, 508, 510, 516, 522, 535, 538, 550, 554, 563, 568, 579, 583, 591, 597, 605, 610, 623, 626, 636, 640, 649, 655, 664, 670, 680, 684, 713, 733, 748, 751, 755, 756, 760, 763, 770, 773, 780, 783, 791, 794, 801, 804, 821], "pdf": 816, "per": 787, "perhap": 417, "permanent_param_count": [690, 694], "permiss": 814, "permit": 814, "perpendicular": [290, 385, 417, 818], "person": 814, "pip": 813, "place": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 735, 745, 758, 768, 778, 789, 799, 823], "plan": [0, 742, 744, 754, 755, 756, 757, 767, 777, 787, 788, 798, 812], "plana": 666, "planar": [341, 391, 479, 815, 819, 823], "plane": [50, 106, 290, 380, 514, 518, 519, 520, 528, 534, 552, 560, 575, 578, 589, 593, 594, 595, 603, 607, 608, 619, 622, 634, 638, 647, 651, 652, 662, 666, 668, 679, 682, 818, 822, 823, 826], "plane_a": [519, 822], "plane_b": [519, 822], "plate": [341, 417, 449, 696, 812, 819, 824], "pleas": [10, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 286, 809], "pln": 380, "plug": 812, "pluggabl": 307, "plugin": [307, 812], "plywood": 427, "pocket": [50, 177, 286, 525, 607, 614, 823], "point": [368, 373, 376, 379, 382, 400, 403, 417, 431, 434, 452, 455, 472, 475, 496, 525, 541, 557, 565, 616, 674, 696, 727, 728, 812, 823, 826], "point_end": 382, "point_start": 382, "polylin": [353, 417, 427, 478], "portion": 814, "posit": [194, 249, 368, 377, 404, 435, 456, 476, 495, 571, 572, 822, 823], "possibl": [48, 329, 817], "post": 341, "potenti": 30, "prefabr": 469, "prehap": 417, "presenc": [643, 658], "present": [810, 823], "pretti": [24, 25, 45, 46, 64, 65, 84, 85, 103, 104, 121, 122, 140, 141, 157, 158, 174, 175, 191, 192, 209, 210, 228, 229, 246, 247, 264, 265, 283, 284, 304, 305, 392, 393, 412, 413, 424, 425, 444, 445, 464, 465, 487, 488, 505, 506, 522, 523, 538, 539, 554, 555, 568, 569, 583, 584, 597, 598, 610, 611, 626, 627, 640, 641, 655, 656, 670, 671, 684, 685, 733, 734, 751, 752, 763, 764, 773, 774, 783, 784, 794, 795, 804, 805], "prevent": 823, "preview": 825, "princip": 578, "print": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799], "prior": 808, "priorit": 66, "prioriti": [498, 788, 823], "process": [71, 194, 249, 314, 328, 329, 340, 365, 368, 495, 498, 514, 519, 528, 544, 557, 560, 565, 566, 575, 589, 594, 603, 619, 634, 647, 662, 677, 723, 812, 815, 816, 827], "process_id": 498, "process_joineri": 71, "process_param": 816, "process_typ": 816, "processing_nam": 498, "produc": 368, "product": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 117, 118, 135, 136, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 278, 279, 290, 298, 299], "programm": 809, "project": [809, 812], "proper": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799], "properli": [10, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 286], "provid": [27, 244, 262, 336, 638, 698, 701, 705, 754, 814, 815, 818, 824], "publish": 814, "purpos": 814, "put": [417, 495], "py": 816, "python": [810, 812, 813, 815], "queri": [715, 716, 718], "r": [28, 307, 813], "radian": [727, 728], "radiu": [194, 249, 525, 534, 541, 552, 616, 622, 674, 682, 688, 823], "rafter": [586, 594, 818], "rais": [1, 12, 14, 16, 18, 19, 33, 34, 35, 37, 39, 40, 52, 54, 56, 58, 59, 70, 72, 74, 76, 77, 89, 91, 93, 95, 96, 108, 110, 112, 114, 115, 126, 127, 128, 130, 132, 133, 145, 147, 149, 151, 152, 162, 164, 166, 168, 169, 179, 181, 183, 185, 186, 196, 198, 200, 203, 204, 214, 216, 218, 220, 221, 233, 235, 237, 239, 240, 251, 253, 255, 257, 258, 269, 271, 273, 275, 276, 288, 290, 291, 293, 296, 297, 383, 384, 406, 407, 420, 421, 437, 438, 458, 459, 480, 481, 493, 494, 502, 503, 514, 516, 517, 528, 535, 536, 544, 550, 551, 560, 563, 564, 575, 579, 580, 589, 591, 592, 603, 605, 606, 619, 623, 624, 634, 636, 637, 647, 649, 650, 662, 664, 665, 677, 680, 681, 698, 701, 702, 705, 713, 714, 723, 748, 749, 760, 761, 770, 771, 780, 781, 791, 792, 801, 802], "random": 826, "rang": 823, "rather": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 732, 750, 762, 772, 782, 793, 803], "ratio": 826, "raw": [26, 47, 67, 86, 105, 123, 142, 159, 176, 193, 211, 230, 248, 266, 285, 306, 396, 416, 426, 448, 468, 491, 507, 524, 540, 556, 570, 585, 599, 612, 628, 642, 657, 672, 686, 741, 753, 766, 776, 786, 797, 807, 818], "reason": 723, "recogn": 825, "rectangular": [368, 818], "reder": [525, 541, 616, 674], "ref_edg": 368, "ref_fram": 368, "ref_posit": 572, "ref_sid": [368, 534, 552, 622, 651, 666, 682], "ref_side_index": [385, 498, 518, 534, 552, 578, 593, 607, 622, 651, 666, 682], "refedg": [571, 572], "refer": [22, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 243, 261, 281, 302, 368, 385, 386, 391, 469, 497, 498, 511, 518, 525, 534, 541, 552, 557, 565, 571, 572, 578, 586, 593, 600, 607, 616, 622, 643, 651, 658, 666, 674, 682, 812, 815, 816, 817], "referenc": [818, 819], "regard": [307, 534, 622], "register_joint": 816, "reject": 50, "reject_i": [50, 823], "relat": [316, 469, 552, 682, 816], "remain": 823, "remov": [370, 387, 388, 389, 410, 440, 441, 462, 484, 724, 725, 726, 817, 822, 823], "renam": [694, 695], "rename_count": 694, "rename_gh_input": 812, "render": [815, 826], "repositori": 813, "repres": [10, 50, 68, 87, 106, 160, 177, 194, 212, 231, 249, 267, 286, 368, 397, 417, 427, 469, 495, 508, 511, 525, 541, 557, 572, 586, 600, 616, 643, 658, 674, 696, 702, 742, 818, 823], "represent": [11, 24, 25, 32, 45, 46, 49, 51, 64, 65, 69, 84, 85, 88, 103, 104, 107, 121, 122, 125, 140, 141, 144, 157, 158, 161, 174, 175, 178, 191, 192, 195, 209, 210, 213, 228, 229, 232, 246, 247, 250, 264, 265, 268, 283, 284, 287, 304, 305, 369, 392, 393, 398, 412, 413, 417, 418, 424, 425, 428, 444, 445, 450, 464, 465, 470, 487, 488, 499, 505, 506, 512, 522, 523, 526, 538, 539, 542, 554, 555, 558, 568, 569, 573, 583, 584, 587, 597, 598, 601, 610, 611, 617, 626, 627, 632, 640, 641, 644, 655, 656, 659, 670, 671, 675, 684, 685, 697, 733, 734, 743, 745, 751, 752, 758, 763, 764, 768, 773, 774, 778, 783, 784, 789, 794, 795, 799, 804, 805, 816], "request": 391, "requir": [12, 14, 33, 35, 53, 54, 90, 109, 110, 126, 145, 147, 163, 164, 180, 181, 197, 198, 215, 234, 252, 253, 269, 270, 289, 291, 329, 370, 387, 813], "requr": 816, "research": [508, 809, 812, 814], "resolv": 812, "respect": [22, 31, 43], "respons": [16, 37, 56, 74, 93, 112, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293, 417], "restor": [22, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 243, 261, 281, 302], "restrict": 814, "result": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 117, 118, 135, 136, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 278, 279, 298, 299, 379, 417, 514, 528, 544, 560, 575, 589, 603, 619, 634, 647, 662, 677, 787, 818, 819], "rethink": 397, "retriev": [710, 817], "return": [15, 16, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 36, 37, 39, 40, 41, 42, 44, 46, 47, 49, 55, 56, 58, 59, 60, 61, 63, 65, 67, 73, 74, 76, 77, 79, 80, 83, 85, 86, 92, 93, 95, 96, 98, 99, 102, 104, 105, 111, 112, 114, 115, 117, 118, 120, 122, 123, 129, 130, 132, 133, 135, 136, 139, 141, 142, 148, 149, 151, 152, 153, 154, 156, 158, 159, 165, 166, 168, 169, 170, 171, 173, 175, 176, 182, 183, 185, 186, 187, 188, 190, 192, 193, 199, 200, 203, 204, 205, 206, 208, 210, 211, 217, 218, 220, 221, 223, 224, 227, 229, 230, 236, 237, 239, 240, 241, 242, 245, 247, 248, 254, 255, 257, 258, 259, 260, 263, 265, 266, 272, 273, 275, 276, 278, 279, 282, 284, 285, 292, 293, 296, 297, 298, 299, 303, 305, 306, 307, 310, 314, 315, 323, 324, 328, 334, 336, 340, 361, 365, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 391, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 411, 413, 414, 415, 416, 417, 419, 420, 421, 423, 425, 426, 429, 431, 432, 433, 434, 435, 436, 437, 438, 443, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 463, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 480, 481, 486, 488, 489, 490, 491, 496, 497, 501, 502, 503, 504, 506, 507, 509, 510, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 528, 529, 531, 532, 533, 534, 535, 536, 537, 539, 540, 544, 545, 548, 549, 550, 551, 552, 553, 555, 556, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 634, 635, 636, 637, 638, 639, 641, 642, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 689, 690, 694, 695, 698, 699, 700, 701, 702, 704, 705, 706, 707, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 723, 724, 725, 727, 728, 729, 730, 732, 734, 735, 736, 737, 738, 739, 740, 741, 743, 747, 748, 749, 750, 752, 753, 755, 759, 760, 761, 762, 764, 766, 769, 770, 771, 772, 774, 776, 779, 780, 781, 782, 784, 786, 790, 791, 792, 793, 795, 797, 800, 801, 802, 803, 805, 807, 808], "revers": 361, "rework": [29, 30], "rhino": [0, 11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 307, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799, 808, 810, 812, 813, 817, 818, 823, 826], "rhinocero": 812, "rhinocommon": 812, "rhinocurv": 427, "ridg": [68, 572, 581], "right": [385, 814, 823], "robot": [743, 788], "role": [22, 29, 43, 315], "root": [698, 699], "rotat": [194, 249, 541, 552, 557, 674, 682, 729, 730, 739, 740, 818, 823], "round": [194, 249, 525, 541, 616, 674, 688, 823], "rs1": [498, 518, 534, 552, 578, 593, 607, 622, 651, 666, 682], "rs6": 498, "rtree": [28, 808], "rule": [308, 310, 311, 312, 313, 314, 321, 323, 325, 326, 327, 328, 336, 337, 338, 339, 340, 341, 359, 361, 362, 363, 364, 365, 812, 815, 818, 819, 824, 827], "run": [810, 812], "sai": 818, "same": [15, 29, 36, 50, 55, 68, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272, 292, 378, 385, 405, 419, 436, 457, 477, 501, 515, 529, 545, 561, 576, 590, 604, 620, 635, 648, 663, 678, 701, 709, 747, 759, 769, 779, 787, 788, 790, 800], "save": [24, 25, 45, 46, 62, 64, 65, 82, 84, 85, 101, 103, 104, 119, 121, 122, 138, 140, 141, 155, 157, 158, 172, 174, 175, 189, 191, 192, 207, 209, 210, 226, 228, 229, 243, 246, 247, 261, 264, 265, 281, 283, 284, 302, 304, 305, 392, 393, 412, 413, 424, 425, 444, 445, 464, 465, 487, 488, 505, 506, 522, 523, 538, 539, 554, 555, 568, 569, 583, 584, 597, 598, 610, 611, 626, 627, 640, 641, 655, 656, 670, 671, 684, 685, 733, 734, 751, 752, 763, 764, 773, 774, 783, 784, 794, 795, 804, 805, 821], "scale": [727, 728, 739, 740, 826], "schema": [18, 19, 26, 39, 40, 47, 58, 59, 67, 76, 77, 86, 95, 96, 105, 114, 115, 123, 132, 133, 142, 151, 152, 159, 168, 169, 176, 185, 186, 193, 203, 204, 211, 220, 221, 230, 239, 240, 248, 257, 258, 266, 275, 276, 285, 296, 297, 306, 383, 384, 396, 406, 407, 416, 420, 421, 426, 437, 438, 448, 458, 459, 468, 480, 481, 491, 502, 503, 507, 516, 517, 524, 535, 536, 540, 550, 551, 556, 563, 564, 570, 579, 580, 585, 591, 592, 599, 605, 606, 612, 623, 624, 628, 636, 637, 642, 649, 650, 657, 664, 665, 672, 680, 681, 686, 713, 714, 741, 748, 749, 753, 760, 761, 766, 770, 771, 776, 780, 781, 786, 791, 792, 797, 801, 802, 807], "scienc": 809, "screw": [397, 777], "sdk": 812, "search": [28, 307], "second": [29, 30, 87, 106, 143, 160, 194, 231, 249, 267, 308, 315, 379, 511, 519, 702, 719, 723, 822], "section": [50, 66, 368, 381, 382, 810, 815, 818, 819, 823], "secur": 823, "see": [1, 22, 43, 696, 815, 818, 820, 822, 823, 826], "seem": 417, "select": [819, 823, 825], "self": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799, 816], "sell": 814, "semant": 812, "sens": 417, "sensit": 29, "separ": [16, 817], "sequenc": [723, 787, 812], "sequenti": 823, "serial": [22, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 243, 261, 281, 302, 754], "serv": [469, 826], "session": 810, "set": [28, 194, 244, 262, 307, 310, 323, 359, 361, 615, 719, 808, 817, 818, 819, 823, 824], "set_default_joint": 812, "setcustomattribut": 817, "setstandardattribut": 817, "shall": [331, 701, 814], "shape": [194, 231, 249, 368, 417, 427, 525, 534, 541, 552, 594, 616, 622, 643, 658, 673, 674, 682, 688, 823], "shape_radiu": [194, 249, 525, 534, 541, 552, 616, 622, 674, 682, 823], "sheet": 819, "sheeting_insid": 819, "sheeting_outsid": 819, "shift": [87, 124, 212, 267, 823], "shorten": 823, "should": [12, 14, 22, 30, 31, 33, 34, 35, 43, 54, 87, 110, 124, 126, 127, 145, 147, 164, 181, 198, 212, 253, 267, 269, 291, 307, 329, 370, 380, 385, 397, 417, 449, 492, 518, 525, 534, 552, 572, 593, 622, 651, 666, 682, 690, 694, 698, 816, 823], "shouldn": 143, "show": [812, 815], "side": [68, 87, 124, 212, 267, 368, 385, 386, 391, 497, 498, 511, 518, 525, 534, 541, 552, 557, 565, 572, 578, 586, 593, 600, 607, 616, 622, 638, 643, 651, 658, 666, 674, 682, 819, 822, 823], "side_index": [386, 391], "sill": [341, 819, 823], "similar": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799, 823], "simpl": [787, 812, 815], "simplesequencegener": 812, "sinc": [22, 43, 723], "singl": [469, 479, 788, 816], "size": [818, 826], "slab": 469, "slat": 368, "slope": [525, 600, 616], "slot": 812, "small": 638, "small_beam_butt": [50, 66, 823], "smaller": [50, 66, 368, 818], "so": [814, 816], "softwar": [812, 814], "solid": [368, 417, 824], "some": [417, 815, 826], "somewher": 267, "sort": 315, "sourc": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 812, 817, 818], "space": [341, 511, 525, 541, 552, 572, 586, 600, 616, 643, 658, 674, 682, 819], "spatial": [377, 404, 435, 456, 476], "specialist": 812, "specif": [22, 29, 43, 712, 720, 812, 816, 818, 819, 823], "specifi": [638, 710, 819], "squar": [194, 249, 525, 541, 616, 674, 688, 823], "stage": 812, "standard": [368, 819], "start": [194, 249, 368, 370, 379, 380, 382, 511, 525, 534, 541, 552, 557, 572, 586, 600, 615, 616, 622, 630, 643, 658, 674, 682, 815, 818, 823], "start_depth": [194, 249, 525, 534, 541, 552, 586, 616, 622, 674, 682, 823], "start_i": [194, 249, 511, 525, 541, 552, 557, 586, 600, 616, 658, 666, 674, 682, 823], "start_x": [511, 525, 541, 557, 572, 586, 600, 616, 643, 658, 674], "state": [389, 410, 441, 462, 484], "static": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 117, 118, 135, 136, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 278, 279, 298, 299, 311, 312, 313, 314, 325, 326, 327, 328, 337, 338, 339, 340, 362, 363, 364, 365], "step": [231, 244, 528, 544, 619, 643, 647, 658, 662, 673, 677, 744, 746, 787, 812, 816], "step_depth": [231, 244, 643, 651, 658, 666, 823], "step_shap": [231, 643, 658, 823], "stepjoint": 812, "stepjointnotch": [646, 812], "stepshapetyp": [658, 812], "still": 28, "stock": [368, 818], "stop_on_first_error": 723, "store": [22, 43, 817, 818], "str": [18, 19, 23, 24, 25, 31, 39, 40, 44, 45, 46, 49, 58, 59, 63, 64, 65, 76, 77, 83, 84, 85, 95, 96, 102, 103, 104, 114, 115, 120, 121, 122, 132, 133, 139, 140, 141, 151, 152, 156, 157, 158, 168, 169, 173, 174, 175, 185, 186, 190, 191, 192, 203, 204, 208, 209, 210, 220, 221, 227, 228, 229, 239, 240, 245, 246, 247, 249, 257, 258, 263, 264, 265, 275, 276, 282, 283, 284, 296, 297, 303, 304, 305, 308, 379, 383, 384, 390, 392, 393, 406, 407, 411, 412, 413, 420, 421, 423, 424, 425, 437, 438, 443, 444, 445, 458, 459, 463, 464, 465, 480, 481, 486, 487, 488, 492, 493, 494, 495, 497, 498, 502, 503, 504, 505, 506, 508, 509, 510, 516, 517, 521, 522, 523, 525, 534, 535, 536, 537, 538, 539, 541, 550, 551, 552, 553, 554, 555, 563, 564, 567, 568, 569, 579, 580, 582, 583, 584, 591, 592, 596, 597, 598, 605, 606, 609, 610, 611, 616, 622, 623, 624, 625, 626, 627, 636, 637, 639, 640, 641, 643, 649, 650, 653, 655, 656, 658, 664, 665, 669, 670, 671, 674, 680, 681, 682, 683, 684, 685, 689, 694, 695, 700, 701, 710, 713, 714, 715, 718, 732, 733, 734, 743, 748, 749, 750, 751, 752, 755, 756, 760, 761, 762, 763, 764, 770, 771, 772, 773, 774, 780, 781, 782, 783, 784, 788, 791, 792, 793, 794, 795, 801, 802, 803, 804, 805], "straight": [565, 818], "string": [11, 19, 25, 32, 40, 46, 49, 51, 59, 65, 69, 77, 85, 88, 96, 104, 107, 115, 122, 125, 133, 141, 144, 152, 158, 161, 169, 175, 178, 186, 192, 195, 204, 210, 213, 221, 229, 232, 240, 247, 250, 258, 265, 268, 276, 284, 287, 297, 305, 369, 384, 393, 398, 407, 413, 418, 421, 425, 428, 438, 445, 450, 459, 465, 470, 481, 488, 492, 499, 503, 506, 509, 510, 512, 517, 523, 526, 536, 539, 542, 551, 555, 558, 564, 569, 573, 580, 584, 587, 592, 598, 601, 606, 611, 617, 624, 627, 632, 637, 641, 644, 650, 656, 659, 665, 671, 675, 681, 685, 697, 714, 734, 743, 745, 749, 752, 758, 761, 764, 768, 771, 774, 778, 781, 784, 789, 792, 795, 799, 802, 805, 817, 818, 823], "structur": [417, 736, 737, 738, 809, 812, 815, 819, 824, 827], "strut": [643, 658], "strut_height": [658, 666], "strut_inclin": [643, 658], "stud": [341, 368, 818, 819, 823], "stud_direct": 819, "stud_spac": [341, 819], "studio": 810, "stuff": 417, "style": 815, "sub": 124, "subject": 814, "sublicens": 814, "sublim": 810, "subprocess": [500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 661, 676], "substanti": 814, "subtract": [822, 824], "summaris": 823, "support": [308, 310, 788, 809, 810], "suppos": 492, "sure": 478, "surfac": [194, 249, 341, 391, 497, 534, 552, 651, 666, 816, 822], "surfaceassembli": 341, "surfacemodel": 812, "swiss": 809, "system": [368, 427, 497, 557, 818], "t": [124, 143, 160, 177, 194, 212, 231, 249, 359, 367, 825], "t_default": 367, "take": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 565, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799, 816, 827], "taper": [194, 231, 673, 823], "tapered_heel": [231, 651, 658, 666, 673, 823], "taperedheel": [643, 673], "tbirdsmouth": 160, "tbirdsmouthjoint": 812, "tbuttjoint": [22, 43, 811, 812], "tdovetailjoint": 812, "tenon": [231, 249, 541, 547, 548, 552, 622, 643, 646, 654, 688, 812], "tenon_height": [643, 646], "tenon_mortise_height": [231, 823], "tenon_width": [643, 646], "tenonmortis": 249, "tenonmortisejoint": 812, "tenonshapetyp": 812, "text": [798, 810, 821], "text3d": 812, "textur": [815, 826], "than": [16, 23, 37, 44, 56, 63, 74, 83, 93, 102, 112, 120, 130, 139, 149, 156, 166, 173, 183, 190, 200, 208, 218, 227, 237, 245, 255, 263, 273, 282, 293, 303, 323, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 732, 750, 762, 772, 782, 793, 803], "thei": [29, 244, 262, 361, 417, 518, 823, 827], "them": [16, 37, 56, 68, 74, 93, 106, 112, 130, 149, 160, 166, 183, 194, 200, 218, 231, 237, 249, 255, 273, 293, 469, 708, 719, 810, 816, 817, 823], "therefor": [13, 638], "thi": [1, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 99, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 118, 123, 125, 126, 127, 129, 130, 132, 133, 135, 136, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 211, 212, 213, 214, 215, 217, 218, 220, 221, 223, 224, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 242, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 266, 267, 268, 269, 270, 272, 273, 275, 276, 278, 279, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 306, 307, 308, 310, 315, 323, 324, 329, 331, 334, 336, 359, 361, 368, 369, 370, 377, 378, 380, 383, 384, 387, 396, 397, 398, 404, 405, 406, 407, 416, 417, 418, 419, 420, 421, 426, 427, 428, 435, 436, 437, 438, 448, 449, 450, 456, 457, 458, 459, 468, 469, 470, 476, 477, 478, 480, 481, 491, 492, 495, 497, 499, 501, 502, 503, 507, 512, 514, 515, 516, 517, 518, 520, 524, 526, 528, 529, 531, 532, 533, 534, 535, 536, 540, 542, 544, 545, 547, 548, 549, 550, 551, 552, 556, 558, 561, 562, 563, 564, 565, 570, 573, 575, 576, 577, 578, 579, 580, 581, 585, 587, 589, 590, 591, 592, 593, 595, 599, 601, 603, 604, 605, 606, 607, 608, 612, 613, 617, 619, 620, 621, 622, 623, 624, 628, 629, 632, 634, 635, 636, 637, 638, 642, 644, 647, 648, 649, 650, 651, 652, 654, 657, 659, 662, 663, 664, 665, 666, 667, 668, 672, 675, 677, 678, 679, 680, 681, 682, 686, 687, 696, 697, 701, 709, 713, 714, 715, 718, 723, 726, 728, 730, 737, 738, 740, 741, 745, 747, 748, 749, 753, 754, 758, 759, 760, 761, 766, 768, 769, 770, 771, 776, 778, 779, 780, 781, 786, 788, 789, 790, 791, 792, 797, 799, 800, 801, 802, 807, 808, 810, 814, 816, 817, 819, 823, 827], "thick": [341, 417, 427, 478, 479, 638, 819], "third": 823, "thought": 417, "three": [286, 823, 827], "through": [30, 87, 124, 212, 267, 380, 417, 557, 565, 809, 823], "tightli": 417, "tilt": 823, "timber": [10, 13, 341, 368, 397, 417, 427, 449, 469, 508, 696, 809, 815, 818, 819, 821, 825, 827], "timberassembli": 811, "timberel": [310, 314, 315, 321, 323, 328, 336, 340, 361, 365, 368, 397, 427, 493, 701, 812], "timbermodel": [16, 37, 56, 74, 93, 112, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293, 509, 510, 812], "titl": 809, "tlapjoint": 812, "todo": [29, 30, 329, 380, 397, 417, 469, 565, 701, 715, 718, 731, 823], "togeth": [16, 37, 56, 74, 93, 112, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293, 469, 818], "tol": [29, 30, 310, 323, 361, 366], "toler": [29, 30, 824], "too": 565, "tool": [27, 194, 201, 525, 530, 541, 546, 552, 682, 812, 815, 823, 825, 826], "tool_angl": [194, 201, 530, 546, 823], "tool_diamet": [194, 201, 530, 546, 823], "tool_height": [194, 201, 530, 546, 823], "top": [525, 541, 614, 615, 616, 674, 682, 815, 823], "topo": 308, "topo_i": 48, "topo_l": [48, 49], "topo_t": [48, 49], "topo_unknown": [48, 49], "topo_x": [48, 49], "topologi": [16, 27, 29, 30, 37, 48, 49, 50, 56, 68, 74, 87, 93, 106, 112, 130, 149, 160, 166, 177, 183, 194, 200, 212, 218, 231, 237, 249, 255, 267, 273, 293, 308, 310, 359, 361, 696, 731, 823, 824, 827], "topology_typ": 359, "topologyrul": 812, "tort": 814, "total": 696, "touch": 28, "tranform": [765, 775, 785, 806], "transform": [329, 377, 404, 435, 456, 476, 727, 728, 729, 730, 736, 738, 739, 740], "translat": [497, 727, 728, 729, 730], "tree": [28, 307, 698], "trim": [10, 50, 53, 106, 109, 163, 177, 180, 197, 215, 234, 252, 270, 286, 289, 581, 613, 822, 824], "true": [15, 20, 21, 23, 24, 25, 28, 36, 41, 42, 44, 45, 46, 50, 55, 60, 61, 63, 64, 65, 66, 68, 73, 79, 80, 83, 84, 85, 87, 92, 98, 99, 102, 103, 104, 111, 117, 118, 120, 121, 122, 124, 129, 135, 136, 139, 140, 141, 148, 153, 154, 156, 157, 158, 165, 170, 171, 173, 174, 175, 182, 187, 188, 190, 191, 192, 199, 205, 206, 208, 209, 210, 212, 217, 223, 224, 227, 228, 229, 231, 236, 241, 242, 245, 246, 247, 254, 259, 260, 263, 264, 265, 267, 272, 278, 279, 282, 283, 284, 292, 298, 299, 303, 304, 305, 310, 323, 324, 334, 336, 361, 375, 378, 380, 390, 392, 393, 405, 411, 412, 413, 417, 419, 423, 424, 425, 433, 436, 443, 444, 445, 449, 454, 457, 463, 464, 465, 474, 477, 486, 487, 488, 501, 504, 505, 506, 515, 521, 522, 523, 525, 529, 537, 538, 539, 541, 545, 553, 554, 555, 557, 561, 567, 568, 569, 576, 582, 583, 584, 590, 596, 597, 598, 604, 607, 609, 610, 611, 616, 620, 625, 626, 627, 635, 639, 640, 641, 648, 653, 655, 656, 658, 663, 669, 670, 671, 674, 678, 682, 683, 684, 685, 694, 701, 709, 717, 718, 719, 723, 732, 733, 734, 747, 750, 751, 752, 759, 762, 763, 764, 769, 772, 773, 774, 779, 782, 783, 784, 790, 793, 794, 795, 800, 803, 804, 805, 818, 819, 821, 823, 824], "try": 492, "tstepjoint": 812, "tupl": [20, 21, 29, 30, 31, 41, 42, 60, 61, 79, 80, 98, 99, 117, 118, 135, 136, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 278, 279, 298, 299, 310, 315, 323, 361, 368, 380, 385, 427, 702], "two": [16, 29, 30, 31, 37, 50, 56, 68, 74, 87, 93, 106, 112, 130, 149, 160, 166, 183, 194, 200, 218, 231, 237, 249, 255, 267, 273, 293, 308, 310, 314, 315, 321, 323, 328, 340, 359, 361, 365, 379, 492, 518, 519, 578, 638, 702, 719, 725, 822, 823], "txt": 813, "type": [9, 10, 11, 15, 18, 19, 26, 29, 32, 36, 39, 40, 47, 50, 51, 55, 58, 59, 67, 68, 69, 73, 76, 77, 86, 87, 88, 92, 95, 96, 105, 106, 107, 111, 114, 115, 123, 124, 125, 129, 132, 133, 142, 144, 148, 151, 152, 159, 160, 161, 165, 168, 169, 176, 177, 178, 182, 185, 186, 193, 194, 195, 199, 203, 204, 211, 212, 213, 217, 220, 221, 230, 231, 232, 236, 239, 240, 244, 248, 249, 250, 254, 257, 258, 266, 267, 268, 272, 275, 276, 285, 286, 287, 292, 296, 297, 306, 308, 321, 331, 359, 369, 378, 383, 384, 396, 398, 405, 406, 407, 416, 418, 419, 420, 421, 426, 428, 436, 437, 438, 448, 450, 457, 458, 459, 468, 470, 477, 480, 481, 491, 499, 501, 502, 503, 507, 512, 515, 516, 517, 524, 525, 526, 529, 535, 536, 540, 542, 545, 550, 551, 556, 558, 561, 563, 564, 570, 573, 576, 579, 580, 585, 587, 590, 591, 592, 599, 601, 604, 605, 606, 612, 617, 620, 623, 624, 628, 632, 635, 636, 637, 642, 644, 648, 649, 650, 657, 659, 663, 664, 665, 672, 675, 678, 680, 681, 686, 697, 709, 712, 713, 714, 741, 742, 745, 747, 748, 749, 753, 758, 759, 760, 761, 766, 768, 769, 770, 771, 776, 778, 779, 780, 781, 786, 788, 789, 790, 791, 792, 797, 799, 800, 801, 802, 807, 812, 816, 819, 827], "typeerror": [18, 19, 39, 40, 58, 59, 76, 77, 95, 96, 114, 115, 132, 133, 151, 152, 168, 169, 185, 186, 203, 204, 220, 221, 239, 240, 257, 258, 275, 276, 296, 297, 383, 384, 406, 407, 420, 421, 437, 438, 458, 459, 480, 481, 502, 503, 516, 517, 535, 536, 550, 551, 563, 564, 579, 580, 591, 592, 605, 606, 623, 624, 636, 637, 649, 650, 664, 665, 680, 681, 713, 714, 748, 749, 760, 761, 770, 771, 780, 781, 791, 792, 801, 802], "typic": [788, 816], "unchang": 823, "under": [698, 699], "underscor": 817, "uniform": 427, "uniqu": [31, 368, 427, 710], "unit": [29, 30, 307, 380, 469], "unlik": 823, "unlimit": [525, 614], "updaterefobj": 818, "upon": 812, "upper": 823, "upstream": [701, 715, 718], "url": 809, "us": [9, 10, 11, 23, 26, 28, 29, 30, 31, 32, 44, 47, 49, 50, 51, 63, 67, 68, 69, 83, 86, 87, 88, 102, 105, 106, 107, 120, 123, 124, 125, 139, 142, 143, 144, 156, 159, 160, 161, 173, 176, 177, 178, 190, 193, 194, 195, 208, 211, 212, 213, 227, 230, 231, 232, 245, 248, 249, 250, 263, 266, 267, 268, 282, 285, 286, 287, 303, 306, 307, 310, 315, 323, 361, 369, 380, 390, 396, 398, 411, 416, 418, 423, 426, 428, 443, 448, 449, 450, 463, 468, 470, 478, 486, 491, 492, 499, 504, 507, 508, 512, 521, 524, 525, 526, 534, 537, 540, 541, 542, 552, 553, 556, 558, 562, 567, 570, 573, 578, 582, 585, 587, 596, 599, 601, 607, 609, 612, 617, 622, 625, 628, 632, 639, 642, 644, 653, 657, 659, 669, 672, 675, 682, 683, 686, 697, 701, 731, 732, 736, 737, 738, 739, 740, 741, 743, 745, 750, 753, 754, 758, 762, 766, 768, 772, 776, 778, 782, 786, 788, 789, 793, 797, 799, 803, 807, 808, 809, 812, 814, 815, 816, 817, 818, 819, 821, 822, 823, 825, 826], "use_default": [313, 327, 339, 364], "use_flank_angl": [525, 541], "user": [817, 819], "userwarn": [91, 128, 216, 271], "usual": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 368, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799], "util": [812, 815], "v": 417, "v1": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 732, 750, 762, 772, 782, 793, 803], "v2": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 732, 750, 762, 772, 782, 793, 803], "v3": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 732, 750, 762, 772, 782, 793, 803], "v7": 813, "valid": [26, 47, 67, 86, 105, 123, 142, 159, 176, 193, 211, 230, 248, 266, 285, 306, 396, 416, 426, 448, 468, 491, 507, 524, 540, 556, 570, 585, 599, 612, 628, 642, 657, 672, 686, 741, 753, 766, 776, 786, 797, 807], "valu": [49, 87, 124, 212, 262, 267, 307, 368, 427, 496, 534, 622, 658, 743, 817], "valueerror": [16, 37, 56, 74, 93, 112, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293, 698, 701, 705], "variabl": 823, "vector": [341, 381, 382, 417, 427, 442, 565, 727, 728, 739, 740, 812, 818, 819], "verifi": [16, 37, 56, 74, 93, 112, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293, 380, 720], "version": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 732, 750, 762, 772, 782, 793, 803, 813], "vertex_attribut": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 732, 750, 762, 772, 782, 793, 803], "vertex_sampl": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 732, 750, 762, 772, 782, 793, 803], "vertic": [511, 586, 600, 638, 818, 823], "via": [71, 812], "visual": [316, 492, 744, 788, 810], "visualis": 824, "vocabulari": 819, "volum": [528, 532, 544, 548, 581, 613, 619, 629, 647, 654, 662, 667, 677, 687, 696], "wa": [12, 33, 34, 126, 127, 145, 269, 492], "wai": [329, 754, 810], "wall": [30, 341, 449, 696, 701, 708, 812, 819], "wall1": 701, "wall1_group": 701, "wall_a": 30, "wall_b": 30, "want": 754, "warranti": 814, "we": [397, 417], "well": [370, 701], "were": [29, 31, 492, 817], "what": 417, "when": [11, 28, 32, 51, 52, 53, 69, 70, 88, 89, 90, 107, 108, 109, 125, 144, 161, 162, 163, 178, 179, 180, 195, 196, 197, 213, 214, 215, 232, 233, 234, 250, 251, 252, 268, 270, 287, 288, 289, 369, 370, 398, 418, 428, 450, 470, 493, 494, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799, 817, 823], "whenev": [12, 14, 33, 34, 35, 54, 110, 126, 127, 145, 147, 164, 181, 198, 253, 269, 291], "where": [816, 818, 821, 823, 826], "whether": [525, 541, 616, 658, 674, 682, 788, 814], "which": [10, 16, 20, 21, 28, 29, 30, 31, 37, 41, 42, 50, 56, 60, 61, 68, 74, 79, 80, 87, 93, 98, 99, 106, 112, 117, 118, 130, 135, 136, 143, 149, 153, 154, 160, 166, 170, 171, 177, 183, 187, 188, 194, 200, 205, 206, 212, 218, 223, 224, 231, 237, 241, 242, 249, 255, 259, 260, 267, 273, 278, 279, 286, 293, 298, 299, 307, 329, 359, 370, 379, 380, 385, 387, 492, 493, 552, 565, 566, 638, 682, 700, 701, 742, 744, 777, 788, 816, 818, 819, 824], "while": [417, 492, 823, 825], "whitespac": [24, 25, 45, 46, 64, 65, 84, 85, 103, 104, 121, 122, 140, 141, 157, 158, 174, 175, 191, 192, 209, 210, 228, 229, 246, 247, 264, 265, 283, 284, 304, 305, 392, 393, 412, 413, 424, 425, 444, 445, 464, 465, 487, 488, 505, 506, 522, 523, 538, 539, 554, 555, 568, 569, 583, 584, 597, 598, 610, 611, 626, 627, 640, 641, 655, 656, 670, 671, 684, 685, 733, 734, 751, 752, 763, 764, 773, 774, 783, 784, 794, 795, 804, 805], "whom": 814, "whose": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 117, 118, 135, 136, 153, 154, 170, 171, 187, 188, 205, 206, 223, 224, 241, 242, 259, 260, 278, 279, 298, 299], "whould": [16, 37, 56, 74, 93, 112, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293], "wide": [368, 427], "width": [194, 249, 341, 368, 381, 382, 495, 525, 534, 541, 552, 600, 616, 622, 643, 646, 658, 660, 674, 682, 811, 817, 818, 819, 823], "within": [29, 324, 334, 788, 818], "without": [24, 25, 45, 46, 64, 65, 84, 85, 87, 103, 104, 121, 122, 124, 140, 141, 157, 158, 174, 175, 191, 192, 209, 210, 212, 228, 229, 246, 247, 264, 265, 267, 283, 284, 304, 305, 392, 393, 412, 413, 424, 425, 444, 445, 464, 465, 487, 488, 505, 506, 522, 523, 538, 539, 554, 555, 568, 569, 583, 584, 597, 598, 610, 611, 626, 627, 640, 641, 655, 656, 670, 671, 684, 685, 733, 734, 751, 752, 763, 764, 773, 774, 783, 784, 794, 795, 804, 805, 814, 818], "wood": 368, "work": [809, 819], "workflow": [812, 815, 817, 818], "world": [377, 404, 417, 435, 456, 476, 818, 819], "worldx": [381, 382], "worldxi": [701, 811], "worldz": [381, 382], "would": 417, "wrapper": 495, "write": [508, 509, 756, 817, 818], "written": 812, "x": [124, 267, 359, 367, 368, 511, 525, 541, 557, 572, 586, 600, 616, 643, 658, 674, 729, 730, 818, 825, 826], "x_default": 367, "xlapjoint": 812, "xmax": [368, 427], "xmin": [368, 427], "xml": [509, 510, 821], "y": [194, 249, 286, 368, 511, 525, 534, 541, 552, 557, 586, 600, 616, 622, 658, 674, 682, 729, 730, 818, 823, 826], "ybuttjoint": 812, "ye": [643, 658, 813], "year": 809, "yield": [711, 721, 722], "ymax": [368, 427], "ymin": [368, 427], "you": [754, 809, 815, 819, 823, 827], "your": [754, 809], "yourgithub_usernam": 813, "z": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 368, 381, 382, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 557, 567, 582, 596, 609, 625, 639, 653, 669, 683, 727, 728, 729, 730, 732, 750, 762, 772, 782, 793, 803, 818, 819, 822, 826], "z_axi": 341, "z_vector": [381, 382], "zaxi": 341, "zenodo": 809, "zero": [498, 819], "zmax": [368, 427], "zmin": [368, 427], "zurich": [809, 812], "zvector": [817, 818]}, "titles": ["API Reference", "compas_timber.connections", "compas_timber.design", "compas_timber.elements", "compas_timber.errors", "compas_timber.fabrication", "compas_timber.ghpython", "compas_timber.model", "compas_timber.planning", "compas_timber.rhino", "BallNodeJoint", "BallNodeJoint.ToString", "BallNodeJoint.add_extensions", "BallNodeJoint.add_features", "BallNodeJoint.check_elements_compatibility", "BallNodeJoint.copy", "BallNodeJoint.create", "BallNodeJoint.element_count_complies", "BallNodeJoint.from_json", "BallNodeJoint.from_jsonstring", "BallNodeJoint.get_face_most_ortho_to_beam", "BallNodeJoint.get_face_most_towards_beam", "BallNodeJoint.restore_beams_from_keys", "BallNodeJoint.sha256", "BallNodeJoint.to_json", "BallNodeJoint.to_jsonstring", "BallNodeJoint.validate_data", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "ConnectionSolver.find_wall_wall_topology", "Joint", "Joint.ToString", "Joint.add_extensions", "Joint.add_features", "Joint.check_elements_compatibility", "Joint.copy", "Joint.create", "Joint.element_count_complies", "Joint.from_json", "Joint.from_jsonstring", "Joint.get_face_most_ortho_to_beam", "Joint.get_face_most_towards_beam", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_json", "Joint.to_jsonstring", "Joint.validate_data", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_extensions", "LButtJoint.add_features", "LButtJoint.check_elements_compatibility", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.element_count_complies", "LButtJoint.from_json", "LButtJoint.from_jsonstring", "LButtJoint.get_face_most_ortho_to_beam", "LButtJoint.get_face_most_towards_beam", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.to_json", "LButtJoint.to_jsonstring", "LButtJoint.update_beam_roles", "LButtJoint.validate_data", "LFrenchRidgeLapJoint", "LFrenchRidgeLapJoint.ToString", "LFrenchRidgeLapJoint.add_extensions", "LFrenchRidgeLapJoint.add_features", "LFrenchRidgeLapJoint.check_elements_compatibility", "LFrenchRidgeLapJoint.copy", "LFrenchRidgeLapJoint.create", "LFrenchRidgeLapJoint.element_count_complies", "LFrenchRidgeLapJoint.from_json", "LFrenchRidgeLapJoint.from_jsonstring", "LFrenchRidgeLapJoint.get_cross_cutting_frame", "LFrenchRidgeLapJoint.get_face_most_ortho_to_beam", "LFrenchRidgeLapJoint.get_face_most_towards_beam", "LFrenchRidgeLapJoint.get_main_cutting_frame", "LFrenchRidgeLapJoint.restore_beams_from_keys", "LFrenchRidgeLapJoint.sha256", "LFrenchRidgeLapJoint.to_json", "LFrenchRidgeLapJoint.to_jsonstring", "LFrenchRidgeLapJoint.validate_data", "LLapJoint", "LLapJoint.ToString", "LLapJoint.add_extensions", "LLapJoint.add_features", "LLapJoint.check_elements_compatibility", "LLapJoint.copy", "LLapJoint.create", "LLapJoint.element_count_complies", "LLapJoint.from_json", "LLapJoint.from_jsonstring", "LLapJoint.get_cross_cutting_frame", "LLapJoint.get_face_most_ortho_to_beam", "LLapJoint.get_face_most_towards_beam", "LLapJoint.get_main_cutting_frame", "LLapJoint.restore_beams_from_keys", "LLapJoint.sha256", "LLapJoint.to_json", "LLapJoint.to_jsonstring", "LLapJoint.validate_data", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_extensions", "LMiterJoint.add_features", "LMiterJoint.check_elements_compatibility", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.element_count_complies", "LMiterJoint.from_json", "LMiterJoint.from_jsonstring", "LMiterJoint.get_cutting_planes", "LMiterJoint.get_face_most_ortho_to_beam", "LMiterJoint.get_face_most_towards_beam", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_json", "LMiterJoint.to_jsonstring", "LMiterJoint.validate_data", "LapJoint", "LapJoint.ToString", "LapJoint.add_extensions", "LapJoint.add_features", "LapJoint.check_elements_compatibility", "LapJoint.copy", "LapJoint.create", "LapJoint.element_count_complies", "LapJoint.from_json", "LapJoint.from_jsonstring", "LapJoint.get_cross_cutting_frame", "LapJoint.get_face_most_ortho_to_beam", "LapJoint.get_face_most_towards_beam", "LapJoint.get_main_cutting_frame", "LapJoint.restore_beams_from_keys", "LapJoint.sha256", "LapJoint.to_json", "LapJoint.to_jsonstring", "LapJoint.validate_data", "NullJoint", "NullJoint.ToString", "NullJoint.add_extensions", "NullJoint.add_features", "NullJoint.check_elements_compatibility", "NullJoint.copy", "NullJoint.create", "NullJoint.element_count_complies", "NullJoint.from_json", "NullJoint.from_jsonstring", "NullJoint.get_face_most_ortho_to_beam", "NullJoint.get_face_most_towards_beam", "NullJoint.restore_beams_from_keys", "NullJoint.sha256", "NullJoint.to_json", "NullJoint.to_jsonstring", "NullJoint.validate_data", "TBirdsmouthJoint", "TBirdsmouthJoint.ToString", "TBirdsmouthJoint.add_extensions", "TBirdsmouthJoint.add_features", "TBirdsmouthJoint.check_elements_compatibility", "TBirdsmouthJoint.copy", "TBirdsmouthJoint.create", "TBirdsmouthJoint.element_count_complies", "TBirdsmouthJoint.from_json", "TBirdsmouthJoint.from_jsonstring", "TBirdsmouthJoint.get_face_most_ortho_to_beam", "TBirdsmouthJoint.get_face_most_towards_beam", "TBirdsmouthJoint.restore_beams_from_keys", "TBirdsmouthJoint.sha256", "TBirdsmouthJoint.to_json", "TBirdsmouthJoint.to_jsonstring", "TBirdsmouthJoint.validate_data", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_extensions", "TButtJoint.add_features", "TButtJoint.check_elements_compatibility", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.element_count_complies", "TButtJoint.from_json", "TButtJoint.from_jsonstring", "TButtJoint.get_face_most_ortho_to_beam", "TButtJoint.get_face_most_towards_beam", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.to_json", "TButtJoint.to_jsonstring", "TButtJoint.validate_data", "TDovetailJoint", "TDovetailJoint.ToString", "TDovetailJoint.add_extensions", "TDovetailJoint.add_features", "TDovetailJoint.check_elements_compatibility", "TDovetailJoint.copy", "TDovetailJoint.create", "TDovetailJoint.define_dovetail_tool", "TDovetailJoint.element_count_complies", "TDovetailJoint.from_json", "TDovetailJoint.from_jsonstring", "TDovetailJoint.get_face_most_ortho_to_beam", "TDovetailJoint.get_face_most_towards_beam", "TDovetailJoint.restore_beams_from_keys", "TDovetailJoint.sha256", "TDovetailJoint.to_json", "TDovetailJoint.to_jsonstring", "TDovetailJoint.validate_data", "TLapJoint", "TLapJoint.ToString", "TLapJoint.add_extensions", "TLapJoint.add_features", "TLapJoint.check_elements_compatibility", "TLapJoint.copy", "TLapJoint.create", "TLapJoint.element_count_complies", "TLapJoint.from_json", "TLapJoint.from_jsonstring", "TLapJoint.get_cross_cutting_frame", "TLapJoint.get_face_most_ortho_to_beam", "TLapJoint.get_face_most_towards_beam", "TLapJoint.get_main_cutting_frame", "TLapJoint.restore_beams_from_keys", "TLapJoint.sha256", "TLapJoint.to_json", "TLapJoint.to_jsonstring", "TLapJoint.validate_data", "TStepJoint", "TStepJoint.ToString", "TStepJoint.add_extensions", "TStepJoint.add_features", "TStepJoint.check_elements_compatibility", "TStepJoint.copy", "TStepJoint.create", "TStepJoint.element_count_complies", "TStepJoint.from_json", "TStepJoint.from_jsonstring", "TStepJoint.get_face_most_ortho_to_beam", "TStepJoint.get_face_most_towards_beam", "TStepJoint.restore_beams_from_keys", "TStepJoint.set_step_depths", "TStepJoint.sha256", "TStepJoint.to_json", "TStepJoint.to_jsonstring", "TStepJoint.validate_data", "TenonMortiseJoint", "TenonMortiseJoint.ToString", "TenonMortiseJoint.add_extensions", "TenonMortiseJoint.add_features", "TenonMortiseJoint.check_elements_compatibility", "TenonMortiseJoint.copy", "TenonMortiseJoint.create", "TenonMortiseJoint.element_count_complies", "TenonMortiseJoint.from_json", "TenonMortiseJoint.from_jsonstring", "TenonMortiseJoint.get_face_most_ortho_to_beam", "TenonMortiseJoint.get_face_most_towards_beam", "TenonMortiseJoint.restore_beams_from_keys", "TenonMortiseJoint.set_default_values", "TenonMortiseJoint.sha256", "TenonMortiseJoint.to_json", "TenonMortiseJoint.to_jsonstring", "TenonMortiseJoint.validate_data", "XLapJoint", "XLapJoint.ToString", "XLapJoint.add_extensions", "XLapJoint.add_features", "XLapJoint.check_elements_compatibility", "XLapJoint.copy", "XLapJoint.create", "XLapJoint.element_count_complies", "XLapJoint.from_json", "XLapJoint.from_jsonstring", "XLapJoint.get_cross_cutting_frame", "XLapJoint.get_face_most_ortho_to_beam", "XLapJoint.get_face_most_towards_beam", "XLapJoint.get_main_cutting_frame", "XLapJoint.restore_beams_from_keys", "XLapJoint.sha256", "XLapJoint.to_json", "XLapJoint.to_jsonstring", "XLapJoint.validate_data", "YButtJoint", "YButtJoint.ToString", "YButtJoint.add_extensions", "YButtJoint.add_features", "YButtJoint.check_beam_compatibility", "YButtJoint.check_elements_compatibility", "YButtJoint.copy", "YButtJoint.create", "YButtJoint.cross_beam_ref_side_index", "YButtJoint.element_count_complies", "YButtJoint.from_json", "YButtJoint.from_jsonstring", "YButtJoint.get_face_most_ortho_to_beam", "YButtJoint.get_face_most_towards_beam", "YButtJoint.get_miter_planes", "YButtJoint.main_beam_ref_side_index", "YButtJoint.restore_beams_from_keys", "YButtJoint.sha256", "YButtJoint.to_json", "YButtJoint.to_jsonstring", "YButtJoint.validate_data", "find_neighboring_elements", "CategoryRule", "CategoryRule.ToString", "CategoryRule.comply", "CategoryRule.get_category_rules", "CategoryRule.get_direct_rules", "CategoryRule.get_topology_rules", "CategoryRule.joints_from_beams_and_rules", "CategoryRule.reorder", "DebugInfomation", "DebugInfomation.ToString", "DebugInfomation.add_fastener_error", "DebugInfomation.add_feature_error", "DebugInfomation.add_joint_error", "DirectRule", "DirectRule.ToString", "DirectRule.comply", "DirectRule.contains", "DirectRule.get_category_rules", "DirectRule.get_direct_rules", "DirectRule.get_topology_rules", "DirectRule.joints_from_beams_and_rules", "FeatureDefinition", "FeatureDefinition.ToString", "JointDefinition", "JointDefinition.ToString", "JointDefinition.is_identical", "JointDefinition.match", "JointRule", "JointRule.comply", "JointRule.get_category_rules", "JointRule.get_direct_rules", "JointRule.get_topology_rules", "JointRule.joints_from_beams_and_rules", "SurfaceModel", "SurfaceModel.beam_category_names", "SurfaceModel.create_model", "SurfaceModel.cull_overlaps", "SurfaceModel.distance_between_elements", "SurfaceModel.generate_frame", "SurfaceModel.generate_perimeter_beams", "SurfaceModel.generate_plates", "SurfaceModel.generate_stud_lines", "SurfaceModel.generate_studs", "SurfaceModel.generate_windows", "SurfaceModel.get_beam_intersections", "SurfaceModel.get_interior_segment_indices", "SurfaceModel.offset_elements", "SurfaceModel.parse_loops", "SurfaceModel.trim_jack_studs", "SurfaceModel.trim_king_studs", "SurfaceModel.trim_studs", "TopologyRule", "TopologyRule.ToString", "TopologyRule.comply", "TopologyRule.get_category_rules", "TopologyRule.get_direct_rules", "TopologyRule.get_topology_rules", "TopologyRule.joints_from_beams_and_rules", "guess_joint_topology_2beams", "set_default_joints", "Beam", "Beam.ToString", "Beam.add_blank_extension", "Beam.add_feature", "Beam.add_features", "Beam.compute_aabb", "Beam.compute_collision_mesh", "Beam.compute_geometry", "Beam.compute_obb", "Beam.compute_worldtransformation", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_endpoints", "Beam.from_json", "Beam.from_jsonstring", "Beam.get_dimensions_relative_to_side", "Beam.opposing_side_index", "Beam.remove_blank_extension", "Beam.remove_features", "Beam.reset", "Beam.sha256", "Beam.side_as_surface", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transformed", "Beam.validate_data", "Fastener", "Fastener.ToString", "Fastener.add_feature", "Fastener.compute_aabb", "Fastener.compute_collision_mesh", "Fastener.compute_geometry", "Fastener.compute_obb", "Fastener.compute_worldtransformation", "Fastener.copy", "Fastener.from_json", "Fastener.from_jsonstring", "Fastener.remove_blank_extension", "Fastener.remove_features", "Fastener.reset", "Fastener.sha256", "Fastener.to_json", "Fastener.to_jsonstring", "Fastener.transform", "Fastener.transformed", "Fastener.validate_data", "FastenerTimberInterface", "FastenerTimberInterface.ToString", "FastenerTimberInterface.copy", "FastenerTimberInterface.from_json", "FastenerTimberInterface.from_jsonstring", "FastenerTimberInterface.get_features", "FastenerTimberInterface.sha256", "FastenerTimberInterface.to_json", "FastenerTimberInterface.to_jsonstring", "FastenerTimberInterface.validate_data", "Plate", "Plate.ToString", "Plate.add_feature", "Plate.add_features", "Plate.compute_aabb", "Plate.compute_collision_mesh", "Plate.compute_geometry", "Plate.compute_obb", "Plate.compute_worldtransformation", "Plate.copy", "Plate.from_json", "Plate.from_jsonstring", "Plate.remove_blank_extension", "Plate.remove_features", "Plate.reset", "Plate.set_frame_and_outline", "Plate.sha256", "Plate.to_json", "Plate.to_jsonstring", "Plate.transform", "Plate.transformed", "Plate.validate_data", "TimberElement", "TimberElement.ToString", "TimberElement.add_feature", "TimberElement.compute_aabb", "TimberElement.compute_collision_mesh", "TimberElement.compute_geometry", "TimberElement.compute_obb", "TimberElement.compute_worldtransformation", "TimberElement.copy", "TimberElement.from_json", "TimberElement.from_jsonstring", "TimberElement.remove_blank_extension", "TimberElement.remove_features", "TimberElement.reset", "TimberElement.sha256", "TimberElement.to_json", "TimberElement.to_jsonstring", "TimberElement.transform", "TimberElement.transformed", "TimberElement.validate_data", "Wall", "Wall.ToString", "Wall.add_feature", "Wall.compute_aabb", "Wall.compute_collision_mesh", "Wall.compute_geometry", "Wall.compute_obb", "Wall.compute_worldtransformation", "Wall.copy", "Wall.from_boundary", "Wall.from_brep", "Wall.from_json", "Wall.from_jsonstring", "Wall.remove_blank_extension", "Wall.remove_features", "Wall.reset", "Wall.rotate", "Wall.sha256", "Wall.to_json", "Wall.to_jsonstring", "Wall.transform", "Wall.transformed", "Wall.validate_data", "BeamJoiningError", "FastenerApplicationError", "FeatureApplicationError", "BTLxPart", "BTLxPart.et_point_vals", "BTLxPart.ref_side_from_face", "BTLxProcessing", "BTLxProcessing.ToString", "BTLxProcessing.add_subprocessing", "BTLxProcessing.copy", "BTLxProcessing.from_json", "BTLxProcessing.from_jsonstring", "BTLxProcessing.sha256", "BTLxProcessing.to_json", "BTLxProcessing.to_jsonstring", "BTLxProcessing.validate_data", "BTLxWriter", "BTLxWriter.model_to_xml", "BTLxWriter.write", "DoubleCut", "DoubleCut.ToString", "DoubleCut.add_subprocessing", "DoubleCut.apply", "DoubleCut.copy", "DoubleCut.from_json", "DoubleCut.from_jsonstring", "DoubleCut.from_planes_and_beam", "DoubleCut.from_shapes_and_element", "DoubleCut.planes_from_params_and_beam", "DoubleCut.sha256", "DoubleCut.to_json", "DoubleCut.to_jsonstring", "DoubleCut.validate_data", "DovetailMortise", "DovetailMortise.ToString", "DovetailMortise.add_subprocessing", "DovetailMortise.apply", "DovetailMortise.copy", "DovetailMortise.define_dovetail_tool", "DovetailMortise.dovetail_cutting_frames_from_params_and_beam", "DovetailMortise.dovetail_volume_from_params_and_beam", "DovetailMortise.frame_from_params_and_beam", "DovetailMortise.from_frame_and_beam", "DovetailMortise.from_json", "DovetailMortise.from_jsonstring", "DovetailMortise.sha256", "DovetailMortise.to_json", "DovetailMortise.to_jsonstring", "DovetailMortise.validate_data", "DovetailTenon", "DovetailTenon.ToString", "DovetailTenon.add_subprocessing", "DovetailTenon.apply", "DovetailTenon.copy", "DovetailTenon.define_dovetail_tool", "DovetailTenon.dovetail_cutting_frames_from_params_and_beam", "DovetailTenon.dovetail_volume_from_params_and_beam", "DovetailTenon.frame_from_params_and_beam", "DovetailTenon.from_json", "DovetailTenon.from_jsonstring", "DovetailTenon.from_plane_and_beam", "DovetailTenon.sha256", "DovetailTenon.to_json", "DovetailTenon.to_jsonstring", "DovetailTenon.validate_data", "Drilling", "Drilling.ToString", "Drilling.add_subprocessing", "Drilling.apply", "Drilling.copy", "Drilling.cylinder_from_params_and_element", "Drilling.from_json", "Drilling.from_jsonstring", "Drilling.from_line_and_element", "Drilling.from_shapes_and_element", "Drilling.sha256", "Drilling.to_json", "Drilling.to_jsonstring", "Drilling.validate_data", "EdgePositionType", "FrenchRidgeLap", "FrenchRidgeLap.ToString", "FrenchRidgeLap.add_subprocessing", "FrenchRidgeLap.apply", "FrenchRidgeLap.copy", "FrenchRidgeLap.frame_from_params_and_beam", "FrenchRidgeLap.from_beam_beam_and_plane", "FrenchRidgeLap.from_json", "FrenchRidgeLap.from_jsonstring", "FrenchRidgeLap.lap_volume_from_params_and_beam", "FrenchRidgeLap.sha256", "FrenchRidgeLap.to_json", "FrenchRidgeLap.to_jsonstring", "FrenchRidgeLap.validate_data", "JackRafterCut", "JackRafterCut.ToString", "JackRafterCut.add_subprocessing", "JackRafterCut.apply", "JackRafterCut.copy", "JackRafterCut.from_json", "JackRafterCut.from_jsonstring", "JackRafterCut.from_plane_and_beam", "JackRafterCut.from_shapes_and_element", "JackRafterCut.plane_from_params_and_beam", "JackRafterCut.sha256", "JackRafterCut.to_json", "JackRafterCut.to_jsonstring", "JackRafterCut.validate_data", "Lap", "Lap.ToString", "Lap.add_subprocessing", "Lap.apply", "Lap.copy", "Lap.from_json", "Lap.from_jsonstring", "Lap.from_plane_and_beam", "Lap.planes_from_params_and_beam", "Lap.sha256", "Lap.to_json", "Lap.to_jsonstring", "Lap.validate_data", "Lap.volume_from_params_and_beam", "LimitationTopType", "MachiningLimits", "Mortise", "Mortise.ToString", "Mortise.add_subprocessing", "Mortise.apply", "Mortise.copy", "Mortise.frame_from_params_and_beam", "Mortise.from_frame_and_beam", "Mortise.from_json", "Mortise.from_jsonstring", "Mortise.sha256", "Mortise.to_json", "Mortise.to_jsonstring", "Mortise.validate_data", "Mortise.volume_from_params_and_beam", "OrientationType", "Slot", "Slot.ToString", "Slot.add_subprocessing", "Slot.apply", "Slot.copy", "Slot.from_json", "Slot.from_jsonstring", "Slot.from_plane_and_beam", "Slot.sha256", "Slot.to_json", "Slot.to_jsonstring", "Slot.validate_data", "StepJoint", "StepJoint.ToString", "StepJoint.add_subprocessing", "StepJoint.add_tenon", "StepJoint.apply", "StepJoint.copy", "StepJoint.from_json", "StepJoint.from_jsonstring", "StepJoint.from_plane_and_beam", "StepJoint.planes_from_params_and_beam", "StepJoint.sha256", "StepJoint.tenon_volume_from_params_and_beam", "StepJoint.to_json", "StepJoint.to_jsonstring", "StepJoint.validate_data", "StepJointNotch", "StepJointNotch.ToString", "StepJointNotch.add_mortise", "StepJointNotch.add_subprocessing", "StepJointNotch.apply", "StepJointNotch.copy", "StepJointNotch.from_json", "StepJointNotch.from_jsonstring", "StepJointNotch.from_plane_and_beam", "StepJointNotch.mortise_volume_from_params_and_beam", "StepJointNotch.planes_from_params_and_beam", "StepJointNotch.sha256", "StepJointNotch.to_json", "StepJointNotch.to_jsonstring", "StepJointNotch.validate_data", "StepShapeType", "Tenon", "Tenon.ToString", "Tenon.add_subprocessing", "Tenon.apply", "Tenon.copy", "Tenon.frame_from_params_and_beam", "Tenon.from_json", "Tenon.from_jsonstring", "Tenon.from_plane_and_beam", "Tenon.sha256", "Tenon.to_json", "Tenon.to_jsonstring", "Tenon.validate_data", "Tenon.volume_from_params_and_beam", "TenonShapeType", "add_gh_param", "clear_gh_params", "get_leaf_subclasses", "item_input_valid", "list_input_valid", "manage_dynamic_params", "rename_gh_input", "TimberModel", "TimberModel.ToString", "TimberModel.add_element", "TimberModel.add_elements", "TimberModel.add_group", "TimberModel.add_group_element", "TimberModel.add_interaction", "TimberModel.add_joint", "TimberModel.add_material", "TimberModel.assign_material", "TimberModel.compute_aabb", "TimberModel.compute_obb", "TimberModel.connect_adjacent_walls", "TimberModel.copy", "TimberModel.element_by_guid", "TimberModel.elements", "TimberModel.elements_connected_by", "TimberModel.from_json", "TimberModel.from_jsonstring", "TimberModel.get_elements_in_group", "TimberModel.get_interactions_for_element", "TimberModel.has_element", "TimberModel.has_group", "TimberModel.has_interaction", "TimberModel.has_material", "TimberModel.interactions", "TimberModel.materials", "TimberModel.process_joinery", "TimberModel.remove_element", "TimberModel.remove_interaction", "TimberModel.remove_joint", "TimberModel.rotate", "TimberModel.rotated", "TimberModel.scale", "TimberModel.scaled", "TimberModel.set_topologies", "TimberModel.sha256", "TimberModel.to_json", "TimberModel.to_jsonstring", "TimberModel.transform", "TimberModel.transform_numpy", "TimberModel.transformed", "TimberModel.transformed_numpy", "TimberModel.translate", "TimberModel.translated", "TimberModel.validate_data", "Actor", "Actor.get_name", "BuildingPlan", "BuildingPlan.ToString", "BuildingPlan.add_step", "BuildingPlan.copy", "BuildingPlan.from_json", "BuildingPlan.from_jsonstring", "BuildingPlan.sha256", "BuildingPlan.to_json", "BuildingPlan.to_jsonstring", "BuildingPlan.validate_data", "BuildingPlanParser", "BuildingPlanParser.parse", "BuildingPlanParser.serialize", "Instruction", "Instruction.ToString", "Instruction.copy", "Instruction.from_json", "Instruction.from_jsonstring", "Instruction.sha256", "Instruction.to_json", "Instruction.to_jsonstring", "Instruction.transform", "Instruction.validate_data", "LinearDimension", "LinearDimension.ToString", "LinearDimension.copy", "LinearDimension.from_json", "LinearDimension.from_jsonstring", "LinearDimension.sha256", "LinearDimension.to_json", "LinearDimension.to_jsonstring", "LinearDimension.transform", "LinearDimension.validate_data", "Model3d", "Model3d.ToString", "Model3d.copy", "Model3d.from_json", "Model3d.from_jsonstring", "Model3d.sha256", "Model3d.to_json", "Model3d.to_jsonstring", "Model3d.transform", "Model3d.validate_data", "SimpleSequenceGenerator", "Step", "Step.ToString", "Step.copy", "Step.from_json", "Step.from_jsonstring", "Step.sha256", "Step.to_json", "Step.to_jsonstring", "Step.transform", "Step.validate_data", "Text3d", "Text3d.ToString", "Text3d.copy", "Text3d.from_json", "Text3d.from_jsonstring", "Text3d.sha256", "Text3d.to_json", "Text3d.to_jsonstring", "Text3d.transform", "Text3d.validate_data", "find_neighboring_elements", "Citing", "Examples", "Create Joint", "COMPAS Timber Documentation", "Installation", "License", "Grasshopper plugin", "BTLx Contribution Guide", "Attributes", "Beams", "Design", "Examples", "Fabrication", "Features", "Joint Rules", "Model", "Show", "Utils", "Workflow"], "titleterms": {"actor": [742, 743], "add_blank_extens": 370, "add_el": [698, 699], "add_extens": [12, 33, 52, 70, 89, 108, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288], "add_fastener_error": 318, "add_featur": [13, 34, 53, 71, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270, 289, 371, 372, 399, 429, 430, 451, 471], "add_feature_error": 319, "add_gh_param": 689, "add_group": 700, "add_group_el": 701, "add_interact": 702, "add_joint": 703, "add_joint_error": 320, "add_materi": 704, "add_mortis": 660, "add_step": 746, "add_subprocess": [500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 661, 676], "add_tenon": 646, "api": 0, "appli": [514, 528, 544, 560, 575, 589, 603, 619, 634, 647, 662, 677], "assembli": 810, "assign_materi": 705, "attribut": 817, "bake": 826, "ballnodejoint": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "beam": [368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 818, 819, 825], "beam_category_nam": 342, "beamjoiningerror": 492, "birdsmouth": 823, "boxmap": 826, "btlx": [816, 821], "btlxpart": [495, 496, 497], "btlxprocess": [498, 499, 500, 501, 502, 503, 504, 505, 506, 507], "btlxwriter": [508, 509, 510], "buildingplan": [744, 745, 746, 747, 748, 749, 750, 751, 752, 753], "buildingplanpars": [754, 755, 756], "butt": 823, "categori": 823, "categoryrul": [308, 309, 310, 311, 312, 313, 314, 315], "check": 817, "check_beam_compat": 290, "check_elements_compat": [14, 35, 54, 72, 91, 110, 128, 147, 164, 181, 198, 216, 235, 253, 271, 291], "cite": 809, "class": [1, 2, 3, 4, 5, 7, 8], "clear_gh_param": 690, "compa": 812, "compas_timb": [1, 2, 3, 4, 5, 6, 7, 8, 9], "compli": [310, 323, 336, 361], "compon": 823, "compute_aabb": [373, 400, 431, 452, 472, 706], "compute_collision_mesh": [374, 401, 432, 453, 473], "compute_geometri": [375, 402, 433, 454, 474], "compute_obb": [376, 403, 434, 455, 475, 707], "compute_worldtransform": [377, 404, 435, 456, 476], "conda": 813, "connect": 1, "connect_adjacent_wal": 708, "connectionsolv": [27, 28, 29, 30], "contain": 324, "content": 812, "contribut": 816, "copi": [15, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272, 292, 378, 405, 419, 436, 457, 477, 501, 515, 529, 545, 561, 576, 590, 604, 620, 635, 648, 663, 678, 709, 747, 759, 769, 779, 790, 800], "creat": [16, 37, 56, 74, 93, 112, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293, 811], "create_model": 343, "cross_beam_ref_side_index": 294, "cull_overlap": 344, "custom": [817, 819], "cut": 822, "cylinder_from_params_and_el": 562, "debuginfom": [316, 317, 318, 319, 320], "decomposebeam": 818, "default": 823, "define_dovetail_tool": [201, 530, 546], "delet": 817, "depend": 812, "design": [2, 819], "develop": 813, "dimens": 819, "direct": 823, "directrul": [321, 322, 323, 324, 325, 326, 327, 328], "distance_between_el": 345, "document": 812, "doubl": 822, "doublecut": [511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524], "dovetail": 823, "dovetail_cutting_frames_from_params_and_beam": [531, 547], "dovetail_volume_from_params_and_beam": [532, 548], "dovetailmortis": [525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540], "dovetailtenon": [541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556], "drill": [557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 822], "edgepositiontyp": 571, "element": [3, 711], "element_by_guid": 710, "element_count_compli": [17, 38, 57, 75, 94, 113, 131, 150, 167, 184, 202, 219, 238, 256, 274, 295], "elements_connected_bi": 712, "endpoint_closest_to_point": 379, "error": [4, 825], "et_point_v": 496, "exampl": [810, 820], "except": 1, "extension_to_plan": 380, "fabric": [5, 821], "face": 825, "fasten": [397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416], "fastenerapplicationerror": 493, "fastenertimberinterfac": [417, 418, 419, 420, 421, 422, 423, 424, 425, 426], "featur": [822, 825], "featureapplicationerror": 494, "featuredefinit": [329, 330], "find_intersecting_pair": 28, "find_neighboring_el": [307, 808], "find_topologi": 29, "find_wall_wall_topologi": 30, "findbeambyrhinoguid": 818, "frame_from_params_and_beam": [533, 549, 577, 621, 679], "french": 823, "frenchridgelap": [572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585], "from_beam_beam_and_plan": 578, "from_boundari": 478, "from_brep": 479, "from_centerlin": 381, "from_endpoint": 382, "from_frame_and_beam": [534, 622], "from_json": [18, 39, 58, 76, 95, 114, 132, 151, 168, 185, 203, 220, 239, 257, 275, 296, 383, 406, 420, 437, 458, 480, 502, 516, 535, 550, 563, 579, 591, 605, 623, 636, 649, 664, 680, 713, 748, 760, 770, 780, 791, 801], "from_jsonstr": [19, 40, 59, 77, 96, 115, 133, 152, 169, 186, 204, 221, 240, 258, 276, 297, 384, 407, 421, 438, 459, 481, 503, 517, 536, 551, 564, 580, 592, 606, 624, 637, 650, 665, 681, 714, 749, 761, 771, 781, 792, 802], "from_line_and_el": 565, "from_plane_and_beam": [552, 593, 607, 638, 651, 666, 682], "from_planes_and_beam": 518, "from_shapes_and_el": [519, 566, 594], "function": [1, 2, 6], "generate_fram": 346, "generate_perimeter_beam": 347, "generate_pl": 348, "generate_stud": 350, "generate_stud_lin": 349, "generate_window": 351, "get_beam_intersect": 352, "get_category_rul": [311, 325, 337, 362], "get_cross_cutting_fram": [78, 97, 134, 222, 277], "get_cutting_plan": 116, "get_dimensions_relative_to_sid": 385, "get_direct_rul": [312, 326, 338, 363], "get_elements_in_group": 715, "get_face_most_ortho_to_beam": [20, 41, 60, 79, 98, 117, 135, 153, 170, 187, 205, 223, 241, 259, 278, 298], "get_face_most_towards_beam": [21, 42, 61, 80, 99, 118, 136, 154, 171, 188, 206, 224, 242, 260, 279, 299], "get_featur": 422, "get_interactions_for_el": 716, "get_interior_segment_indic": 353, "get_leaf_subclass": 691, "get_main_cutting_fram": [81, 100, 137, 225, 280], "get_miter_plan": 300, "get_nam": [49, 743], "get_topology_rul": [313, 327, 339, 364], "ghpython": 6, "grasshopp": 815, "guess_joint_topology_2beam": 366, "guid": 816, "has_el": 717, "has_group": 718, "has_interact": 719, "has_materi": 720, "index": 825, "indic": 812, "instal": 813, "instruct": [757, 758, 759, 760, 761, 762, 763, 764, 765, 766], "interact": 721, "is_ident": 333, "item_input_valid": 692, "jack": 822, "jackraftercut": [586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599], "join": 825, "joint": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 811, 823, 825], "jointdefinit": [331, 332, 333, 334], "jointrul": [335, 336, 337, 338, 339, 340], "joints_from_beams_and_rul": [314, 328, 340, 365], "jointtopologi": [48, 49], "l": 823, "lap": [600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 823], "lap_volume_from_params_and_beam": 581, "lapjoint": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "lbuttjoint": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "lfrenchridgelapjoint": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "licens": 814, "limitationtoptyp": 614, "lineardimens": [767, 768, 769, 770, 771, 772, 773, 774, 775, 776], "list_input_valid": 693, "llapjoint": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "lmiterjoint": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "machininglimit": 615, "main_beam_ref_side_index": 301, "manage_dynamic_param": 694, "match": 334, "materi": 722, "miter": 823, "model": [7, 819, 823, 824, 825], "model3d": [777, 778, 779, 780, 781, 782, 783, 784, 785, 786], "model_to_xml": 509, "mortis": [616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 823], "mortise_volume_from_params_and_beam": 667, "nulljoint": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159], "offset_el": 354, "opposing_side_index": 386, "option": 819, "orientationtyp": 630, "overrid": 823, "packag": 0, "pars": 755, "parse_loop": 355, "plan": 8, "plane_from_params_and_beam": 595, "planes_from_params_and_beam": [520, 608, 652, 668], "plate": [427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "plugin": [9, 815], "process_joineri": 723, "rafter": 822, "ref_side_from_fac": 497, "refer": 0, "remove_blank_extens": [387, 408, 439, 460, 482], "remove_el": 724, "remove_featur": [388, 409, 440, 461, 483], "remove_interact": 725, "remove_joint": 726, "rename_gh_input": 695, "reorder": 315, "reset": [389, 410, 441, 462, 484], "restore_beams_from_kei": [22, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 243, 261, 281, 302], "rhino": 9, "ridg": 823, "rotat": [485, 727, 728], "rule": 823, "scale": [729, 730], "serial": 756, "set_default_joint": 367, "set_default_valu": 262, "set_frame_and_outlin": 442, "set_step_depth": 244, "set_topologi": 731, "sha256": [23, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 303, 390, 411, 423, 443, 463, 486, 504, 521, 537, 553, 567, 582, 596, 609, 625, 639, 653, 669, 683, 732, 750, 762, 772, 782, 793, 803], "show": 825, "side_as_surfac": 391, "simplesequencegener": 787, "slot": [631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642], "stabl": 813, "standard": 817, "step": [788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 823], "stepjoint": [643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657], "stepjointnotch": [658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672], "stepshapetyp": 673, "summari": 823, "surfac": [819, 823, 825], "surfacemodel": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358], "t": 823, "tabl": [812, 823], "tbirdsmouthjoint": [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "tbuttjoint": [177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "tdovetailjoint": [194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "tenon": [674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 823], "tenon_volume_from_params_and_beam": 654, "tenonmortisejoint": [249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "tenonshapetyp": 688, "text3d": [798, 799, 800, 801, 802, 803, 804, 805, 806, 807], "timber": [810, 812], "timberel": [449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "timbermodel": [696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741], "tlapjoint": [212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "to_json": [24, 45, 64, 84, 103, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 392, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 655, 670, 684, 733, 751, 763, 773, 783, 794, 804], "to_jsonstr": [25, 46, 65, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 284, 305, 393, 413, 425, 445, 465, 488, 506, 523, 539, 555, 569, 584, 598, 611, 627, 641, 656, 671, 685, 734, 752, 764, 774, 784, 795, 805], "topolog": 823, "topologi": 825, "topologyrul": [359, 360, 361, 362, 363, 364, 365], "tostr": [11, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 309, 317, 322, 330, 332, 360, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799], "transform": [394, 395, 414, 415, 446, 447, 466, 467, 489, 490, 735, 737, 765, 775, 785, 796, 806], "transform_numpi": 736, "transformed_numpi": 738, "translat": [739, 740], "trim_jack_stud": 356, "trim_king_stud": 357, "trim_stud": 358, "tstepjoint": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248], "type": [823, 825], "update_beam_rol": 66, "util": 826, "validate_data": [26, 47, 67, 86, 105, 123, 142, 159, 176, 193, 211, 230, 248, 266, 285, 306, 396, 416, 426, 448, 468, 491, 507, 524, 540, 556, 570, 585, 599, 612, 628, 642, 657, 672, 686, 741, 753, 766, 776, 786, 797, 807], "volume_from_params_and_beam": [613, 629, 687], "wall": [469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491], "workflow": 827, "write": [510, 821], "x": 823, "xlapjoint": [267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285], "ybuttjoint": [286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306]}})