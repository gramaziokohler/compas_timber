Search.setIndex({"docnames": ["api", "api/compas_timber.assembly", "api/compas_timber.connections", "api/compas_timber.consumers", "api/compas_timber.fabrication", "api/compas_timber.ghpython", "api/compas_timber.parts", "api/compas_timber.planning", "api/compas_timber.rhino", "api/generated/compas_timber.assembly.TimberAssembly", "api/generated/compas_timber.assembly.TimberAssembly.ToString", "api/generated/compas_timber.assembly.TimberAssembly.add_beam", "api/generated/compas_timber.assembly.TimberAssembly.add_connection", "api/generated/compas_timber.assembly.TimberAssembly.add_joint", "api/generated/compas_timber.assembly.TimberAssembly.add_part", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined", "api/generated/compas_timber.assembly.TimberAssembly.compute_aabb", "api/generated/compas_timber.assembly.TimberAssembly.compute_obb", "api/generated/compas_timber.assembly.TimberAssembly.connections", "api/generated/compas_timber.assembly.TimberAssembly.contains", "api/generated/compas_timber.assembly.TimberAssembly.copy", "api/generated/compas_timber.assembly.TimberAssembly.delete_connection", "api/generated/compas_timber.assembly.TimberAssembly.delete_part", "api/generated/compas_timber.assembly.TimberAssembly.find", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key", "api/generated/compas_timber.assembly.TimberAssembly.from_json", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.parts", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint", "api/generated/compas_timber.assembly.TimberAssembly.rotate", "api/generated/compas_timber.assembly.TimberAssembly.rotated", "api/generated/compas_timber.assembly.TimberAssembly.scale", "api/generated/compas_timber.assembly.TimberAssembly.scaled", "api/generated/compas_timber.assembly.TimberAssembly.set_topologies", "api/generated/compas_timber.assembly.TimberAssembly.sha256", "api/generated/compas_timber.assembly.TimberAssembly.to_json", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.transform", "api/generated/compas_timber.assembly.TimberAssembly.transform_numpy", "api/generated/compas_timber.assembly.TimberAssembly.transformed", "api/generated/compas_timber.assembly.TimberAssembly.transformed_numpy", "api/generated/compas_timber.assembly.TimberAssembly.translate", "api/generated/compas_timber.assembly.TimberAssembly.translated", "api/generated/compas_timber.assembly.TimberAssembly.validate_data", "api/generated/compas_timber.connections.BeamJoinningError", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.FrenchRidgeLapJoint", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.ToString", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_features", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.check_geometry", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.copy", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.create", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_json", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.sha256", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_json", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.validate_data", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.from_jsonstring", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.to_jsonstring", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring", "api/generated/compas_timber.connections.LButtJoint.get_cross_cutting_plane", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LButtJoint.get_main_cutting_plane", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LHalfLapJoint", "api/generated/compas_timber.connections.LHalfLapJoint.ToString", "api/generated/compas_timber.connections.LHalfLapJoint.add_features", "api/generated/compas_timber.connections.LHalfLapJoint.copy", "api/generated/compas_timber.connections.LHalfLapJoint.create", "api/generated/compas_timber.connections.LHalfLapJoint.from_json", "api/generated/compas_timber.connections.LHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LHalfLapJoint.sha256", "api/generated/compas_timber.connections.LHalfLapJoint.to_json", "api/generated/compas_timber.connections.LHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.LapJoint", "api/generated/compas_timber.connections.LapJoint.ToString", "api/generated/compas_timber.connections.LapJoint.add_features", "api/generated/compas_timber.connections.LapJoint.copy", "api/generated/compas_timber.connections.LapJoint.create", "api/generated/compas_timber.connections.LapJoint.from_json", "api/generated/compas_timber.connections.LapJoint.from_jsonstring", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LapJoint.sha256", "api/generated/compas_timber.connections.LapJoint.to_json", "api/generated/compas_timber.connections.LapJoint.to_jsonstring", "api/generated/compas_timber.connections.LapJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring", "api/generated/compas_timber.connections.TButtJoint.get_cutting_plane", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.THalfLapJoint", "api/generated/compas_timber.connections.THalfLapJoint.ToString", "api/generated/compas_timber.connections.THalfLapJoint.add_features", "api/generated/compas_timber.connections.THalfLapJoint.copy", "api/generated/compas_timber.connections.THalfLapJoint.create", "api/generated/compas_timber.connections.THalfLapJoint.from_json", "api/generated/compas_timber.connections.THalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.THalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.THalfLapJoint.sha256", "api/generated/compas_timber.connections.THalfLapJoint.to_json", "api/generated/compas_timber.connections.THalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.validate_data", "api/generated/compas_timber.connections.XHalfLapJoint", "api/generated/compas_timber.connections.XHalfLapJoint.ToString", "api/generated/compas_timber.connections.XHalfLapJoint.add_features", "api/generated/compas_timber.connections.XHalfLapJoint.copy", "api/generated/compas_timber.connections.XHalfLapJoint.create", "api/generated/compas_timber.connections.XHalfLapJoint.from_json", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.XHalfLapJoint.sha256", "api/generated/compas_timber.connections.XHalfLapJoint.to_json", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data", "api/generated/compas_timber.connections.find_neighboring_beams", "api/generated/compas_timber.consumers.BeamGeometry", "api/generated/compas_timber.consumers.BrepGeometryConsumer", "api/generated/compas_timber.consumers.CutFeature", "api/generated/compas_timber.consumers.CutFeature.ToString", "api/generated/compas_timber.consumers.CutFeature.copy", "api/generated/compas_timber.consumers.CutFeature.from_json", "api/generated/compas_timber.consumers.CutFeature.from_jsonstring", "api/generated/compas_timber.consumers.CutFeature.sha256", "api/generated/compas_timber.consumers.CutFeature.to_json", "api/generated/compas_timber.consumers.CutFeature.to_jsonstring", "api/generated/compas_timber.consumers.CutFeature.validate_data", "api/generated/compas_timber.consumers.CutFeatureGeometry", "api/generated/compas_timber.consumers.CutFeatureGeometry.apply", "api/generated/compas_timber.consumers.DrillFeature", "api/generated/compas_timber.consumers.DrillFeature.ToString", "api/generated/compas_timber.consumers.DrillFeature.copy", "api/generated/compas_timber.consumers.DrillFeature.from_json", "api/generated/compas_timber.consumers.DrillFeature.from_jsonstring", "api/generated/compas_timber.consumers.DrillFeature.sha256", "api/generated/compas_timber.consumers.DrillFeature.to_json", "api/generated/compas_timber.consumers.DrillFeature.to_jsonstring", "api/generated/compas_timber.consumers.DrillFeature.validate_data", "api/generated/compas_timber.consumers.DrillFeatureGeometry", "api/generated/compas_timber.consumers.DrillFeatureGeometry.apply", "api/generated/compas_timber.consumers.FeatureApplicationError", "api/generated/compas_timber.consumers.FeatureApplicator", "api/generated/compas_timber.consumers.FeatureApplicator.apply", "api/generated/compas_timber.consumers.MillVolume", "api/generated/compas_timber.consumers.MillVolume.ToString", "api/generated/compas_timber.consumers.MillVolume.copy", "api/generated/compas_timber.consumers.MillVolume.from_json", "api/generated/compas_timber.consumers.MillVolume.from_jsonstring", "api/generated/compas_timber.consumers.MillVolume.sha256", "api/generated/compas_timber.consumers.MillVolume.to_json", "api/generated/compas_timber.consumers.MillVolume.to_jsonstring", "api/generated/compas_timber.consumers.MillVolume.validate_data", "api/generated/compas_timber.consumers.MillVolumeGeometry", "api/generated/compas_timber.consumers.MillVolumeGeometry.apply", "api/generated/compas_timber.fabrication.BTLx", "api/generated/compas_timber.fabrication.BTLx.btlx_string", "api/generated/compas_timber.fabrication.BTLx.process_assembly", "api/generated/compas_timber.fabrication.BTLx.register_joint", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints", "api/generated/compas_timber.fabrication.BTLxJackCut", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process", "api/generated/compas_timber.fabrication.BTLxProcess", "api/generated/compas_timber.fabrication.FrenchRidgeFactory", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings", "api/generated/compas_timber.fabrication.LButtFactory", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings", "api/generated/compas_timber.fabrication.LMiterFactory", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings", "api/generated/compas_timber.fabrication.TButtFactory", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings", "api/generated/compas_timber.ghpython.CategoryRule", "api/generated/compas_timber.ghpython.CategoryRule.ToString", "api/generated/compas_timber.ghpython.CategoryRule.comply", "api/generated/compas_timber.ghpython.CategoryRule.reorder", "api/generated/compas_timber.ghpython.DebugInfomation", "api/generated/compas_timber.ghpython.DebugInfomation.ToString", "api/generated/compas_timber.ghpython.DebugInfomation.add_feature_error", "api/generated/compas_timber.ghpython.DebugInfomation.add_joint_error", "api/generated/compas_timber.ghpython.DirectRule", "api/generated/compas_timber.ghpython.DirectRule.ToString", "api/generated/compas_timber.ghpython.DirectRule.comply", "api/generated/compas_timber.ghpython.FeatureDefinition", "api/generated/compas_timber.ghpython.FeatureDefinition.ToString", "api/generated/compas_timber.ghpython.JointDefinition", "api/generated/compas_timber.ghpython.JointDefinition.ToString", "api/generated/compas_timber.ghpython.JointDefinition.is_identical", "api/generated/compas_timber.ghpython.JointDefinition.match", "api/generated/compas_timber.ghpython.JointOptions", "api/generated/compas_timber.ghpython.JointOptions.ToString", "api/generated/compas_timber.ghpython.JointOptions.is_identical", "api/generated/compas_timber.ghpython.TopologyRule", "api/generated/compas_timber.ghpython.TopologyRule.ToString", "api/generated/compas_timber.ghpython.TopologyRule.comply", "api/generated/compas_timber.parts.Beam", "api/generated/compas_timber.parts.Beam.ToString", "api/generated/compas_timber.parts.Beam.add_blank_extension", "api/generated/compas_timber.parts.Beam.add_feature", "api/generated/compas_timber.parts.Beam.add_features", "api/generated/compas_timber.parts.Beam.align_z", "api/generated/compas_timber.parts.Beam.clear_features", "api/generated/compas_timber.parts.Beam.compute_aabb", "api/generated/compas_timber.parts.Beam.compute_obb", "api/generated/compas_timber.parts.Beam.copy", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point", "api/generated/compas_timber.parts.Beam.extension_to_plane", "api/generated/compas_timber.parts.Beam.from_centerline", "api/generated/compas_timber.parts.Beam.from_endpoints", "api/generated/compas_timber.parts.Beam.from_json", "api/generated/compas_timber.parts.Beam.from_jsonstring", "api/generated/compas_timber.parts.Beam.get_geometry", "api/generated/compas_timber.parts.Beam.remove_blank_extension", "api/generated/compas_timber.parts.Beam.remove_features", "api/generated/compas_timber.parts.Beam.rotate", "api/generated/compas_timber.parts.Beam.rotated", "api/generated/compas_timber.parts.Beam.scale", "api/generated/compas_timber.parts.Beam.scaled", "api/generated/compas_timber.parts.Beam.sha256", "api/generated/compas_timber.parts.Beam.to_json", "api/generated/compas_timber.parts.Beam.to_jsonstring", "api/generated/compas_timber.parts.Beam.transform", "api/generated/compas_timber.parts.Beam.transform_numpy", "api/generated/compas_timber.parts.Beam.transformed", "api/generated/compas_timber.parts.Beam.transformed_numpy", "api/generated/compas_timber.parts.Beam.translate", "api/generated/compas_timber.parts.Beam.translated", "api/generated/compas_timber.parts.Beam.validate_data", "api/generated/compas_timber.planning.Actor", "api/generated/compas_timber.planning.Actor.get_name", "api/generated/compas_timber.planning.BuildingPlan", "api/generated/compas_timber.planning.BuildingPlan.ToString", "api/generated/compas_timber.planning.BuildingPlan.add_step", "api/generated/compas_timber.planning.BuildingPlan.copy", "api/generated/compas_timber.planning.BuildingPlan.from_json", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.sha256", "api/generated/compas_timber.planning.BuildingPlan.to_json", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.validate_data", "api/generated/compas_timber.planning.SimpleSequenceGenerator", "api/generated/compas_timber.planning.Step", "api/generated/compas_timber.planning.Step.ToString", "api/generated/compas_timber.planning.Step.copy", "api/generated/compas_timber.planning.Step.from_json", "api/generated/compas_timber.planning.Step.from_jsonstring", "api/generated/compas_timber.planning.Step.sha256", "api/generated/compas_timber.planning.Step.to_json", "api/generated/compas_timber.planning.Step.to_jsonstring", "api/generated/compas_timber.planning.Step.transform", "api/generated/compas_timber.planning.Step.validate_data", "api/generated/compas_timber.rhino.find_neighboring_beams", "citing", "examples", "examples/create_joint", "index", "installation", "license", "tutorials", "tutorials/BTLx_contribution_guide", "tutorials/grasshopper/assembly", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beam", "tutorials/grasshopper/examples", "tutorials/grasshopper/features", "tutorials/grasshopper/joints", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "filenames": ["api.rst", "api/compas_timber.assembly.rst", "api/compas_timber.connections.rst", "api/compas_timber.consumers.rst", "api/compas_timber.fabrication.rst", "api/compas_timber.ghpython.rst", "api/compas_timber.parts.rst", "api/compas_timber.planning.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.assembly.TimberAssembly.rst", "api/generated/compas_timber.assembly.TimberAssembly.ToString.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_beam.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined.rst", "api/generated/compas_timber.assembly.TimberAssembly.compute_aabb.rst", "api/generated/compas_timber.assembly.TimberAssembly.compute_obb.rst", "api/generated/compas_timber.assembly.TimberAssembly.connections.rst", "api/generated/compas_timber.assembly.TimberAssembly.contains.rst", "api/generated/compas_timber.assembly.TimberAssembly.copy.rst", "api/generated/compas_timber.assembly.TimberAssembly.delete_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.delete_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.find.rst", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.parts.rst", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.rotate.rst", "api/generated/compas_timber.assembly.TimberAssembly.rotated.rst", "api/generated/compas_timber.assembly.TimberAssembly.scale.rst", "api/generated/compas_timber.assembly.TimberAssembly.scaled.rst", "api/generated/compas_timber.assembly.TimberAssembly.set_topologies.rst", "api/generated/compas_timber.assembly.TimberAssembly.sha256.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.transform.rst", "api/generated/compas_timber.assembly.TimberAssembly.transform_numpy.rst", "api/generated/compas_timber.assembly.TimberAssembly.transformed.rst", "api/generated/compas_timber.assembly.TimberAssembly.transformed_numpy.rst", "api/generated/compas_timber.assembly.TimberAssembly.translate.rst", "api/generated/compas_timber.assembly.TimberAssembly.translated.rst", "api/generated/compas_timber.assembly.TimberAssembly.validate_data.rst", "api/generated/compas_timber.connections.BeamJoinningError.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.ToString.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_features.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.check_geometry.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.copy.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.create.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_json.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.sha256.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_json.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.validate_data.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.from_json.rst", "api/generated/compas_timber.connections.Joint.from_jsonstring.rst", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_json.rst", "api/generated/compas_timber.connections.Joint.to_jsonstring.rst", "api/generated/compas_timber.connections.Joint.validate_data.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.from_json.rst", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.get_cross_cutting_plane.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LButtJoint.get_main_cutting_plane.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.to_json.rst", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.validate_data.rst", "api/generated/compas_timber.connections.LHalfLapJoint.rst", "api/generated/compas_timber.connections.LHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.LHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.LHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.LHalfLapJoint.create.rst", "api/generated/compas_timber.connections.LHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.LHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.LHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.LHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.from_json.rst", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_json.rst", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_data.rst", "api/generated/compas_timber.connections.LapJoint.rst", "api/generated/compas_timber.connections.LapJoint.ToString.rst", "api/generated/compas_timber.connections.LapJoint.add_features.rst", "api/generated/compas_timber.connections.LapJoint.copy.rst", "api/generated/compas_timber.connections.LapJoint.create.rst", "api/generated/compas_timber.connections.LapJoint.from_json.rst", "api/generated/compas_timber.connections.LapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LapJoint.sha256.rst", "api/generated/compas_timber.connections.LapJoint.to_json.rst", "api/generated/compas_timber.connections.LapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.validate_data.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.from_json.rst", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.get_cutting_plane.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.to_json.rst", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.validate_data.rst", "api/generated/compas_timber.connections.THalfLapJoint.rst", "api/generated/compas_timber.connections.THalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.THalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.THalfLapJoint.copy.rst", "api/generated/compas_timber.connections.THalfLapJoint.create.rst", "api/generated/compas_timber.connections.THalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.THalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.THalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.THalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.THalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.THalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.THalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.rst", "api/generated/compas_timber.connections.XHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.XHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.XHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.XHalfLapJoint.create.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.XHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.find_neighboring_beams.rst", "api/generated/compas_timber.consumers.BeamGeometry.rst", "api/generated/compas_timber.consumers.BrepGeometryConsumer.rst", "api/generated/compas_timber.consumers.CutFeature.rst", "api/generated/compas_timber.consumers.CutFeature.ToString.rst", "api/generated/compas_timber.consumers.CutFeature.copy.rst", "api/generated/compas_timber.consumers.CutFeature.from_json.rst", "api/generated/compas_timber.consumers.CutFeature.from_jsonstring.rst", "api/generated/compas_timber.consumers.CutFeature.sha256.rst", "api/generated/compas_timber.consumers.CutFeature.to_json.rst", "api/generated/compas_timber.consumers.CutFeature.to_jsonstring.rst", "api/generated/compas_timber.consumers.CutFeature.validate_data.rst", "api/generated/compas_timber.consumers.CutFeatureGeometry.rst", "api/generated/compas_timber.consumers.CutFeatureGeometry.apply.rst", "api/generated/compas_timber.consumers.DrillFeature.rst", "api/generated/compas_timber.consumers.DrillFeature.ToString.rst", "api/generated/compas_timber.consumers.DrillFeature.copy.rst", "api/generated/compas_timber.consumers.DrillFeature.from_json.rst", "api/generated/compas_timber.consumers.DrillFeature.from_jsonstring.rst", "api/generated/compas_timber.consumers.DrillFeature.sha256.rst", "api/generated/compas_timber.consumers.DrillFeature.to_json.rst", "api/generated/compas_timber.consumers.DrillFeature.to_jsonstring.rst", "api/generated/compas_timber.consumers.DrillFeature.validate_data.rst", "api/generated/compas_timber.consumers.DrillFeatureGeometry.rst", "api/generated/compas_timber.consumers.DrillFeatureGeometry.apply.rst", "api/generated/compas_timber.consumers.FeatureApplicationError.rst", "api/generated/compas_timber.consumers.FeatureApplicator.rst", "api/generated/compas_timber.consumers.FeatureApplicator.apply.rst", "api/generated/compas_timber.consumers.MillVolume.rst", "api/generated/compas_timber.consumers.MillVolume.ToString.rst", "api/generated/compas_timber.consumers.MillVolume.copy.rst", "api/generated/compas_timber.consumers.MillVolume.from_json.rst", "api/generated/compas_timber.consumers.MillVolume.from_jsonstring.rst", "api/generated/compas_timber.consumers.MillVolume.sha256.rst", "api/generated/compas_timber.consumers.MillVolume.to_json.rst", "api/generated/compas_timber.consumers.MillVolume.to_jsonstring.rst", "api/generated/compas_timber.consumers.MillVolume.validate_data.rst", "api/generated/compas_timber.consumers.MillVolumeGeometry.rst", "api/generated/compas_timber.consumers.MillVolumeGeometry.apply.rst", "api/generated/compas_timber.fabrication.BTLx.rst", "api/generated/compas_timber.fabrication.BTLx.btlx_string.rst", "api/generated/compas_timber.fabrication.BTLx.process_assembly.rst", "api/generated/compas_timber.fabrication.BTLx.register_joint.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process.rst", "api/generated/compas_timber.fabrication.BTLxProcess.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LButtFactory.rst", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LMiterFactory.rst", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.TButtFactory.rst", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings.rst", "api/generated/compas_timber.ghpython.CategoryRule.rst", "api/generated/compas_timber.ghpython.CategoryRule.ToString.rst", "api/generated/compas_timber.ghpython.CategoryRule.comply.rst", "api/generated/compas_timber.ghpython.CategoryRule.reorder.rst", "api/generated/compas_timber.ghpython.DebugInfomation.rst", "api/generated/compas_timber.ghpython.DebugInfomation.ToString.rst", "api/generated/compas_timber.ghpython.DebugInfomation.add_feature_error.rst", "api/generated/compas_timber.ghpython.DebugInfomation.add_joint_error.rst", "api/generated/compas_timber.ghpython.DirectRule.rst", "api/generated/compas_timber.ghpython.DirectRule.ToString.rst", "api/generated/compas_timber.ghpython.DirectRule.comply.rst", "api/generated/compas_timber.ghpython.FeatureDefinition.rst", "api/generated/compas_timber.ghpython.FeatureDefinition.ToString.rst", "api/generated/compas_timber.ghpython.JointDefinition.rst", "api/generated/compas_timber.ghpython.JointDefinition.ToString.rst", "api/generated/compas_timber.ghpython.JointDefinition.is_identical.rst", "api/generated/compas_timber.ghpython.JointDefinition.match.rst", "api/generated/compas_timber.ghpython.JointOptions.rst", "api/generated/compas_timber.ghpython.JointOptions.ToString.rst", "api/generated/compas_timber.ghpython.JointOptions.is_identical.rst", "api/generated/compas_timber.ghpython.TopologyRule.rst", "api/generated/compas_timber.ghpython.TopologyRule.ToString.rst", "api/generated/compas_timber.ghpython.TopologyRule.comply.rst", "api/generated/compas_timber.parts.Beam.rst", "api/generated/compas_timber.parts.Beam.ToString.rst", "api/generated/compas_timber.parts.Beam.add_blank_extension.rst", "api/generated/compas_timber.parts.Beam.add_feature.rst", "api/generated/compas_timber.parts.Beam.add_features.rst", "api/generated/compas_timber.parts.Beam.align_z.rst", "api/generated/compas_timber.parts.Beam.clear_features.rst", "api/generated/compas_timber.parts.Beam.compute_aabb.rst", "api/generated/compas_timber.parts.Beam.compute_obb.rst", "api/generated/compas_timber.parts.Beam.copy.rst", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.parts.Beam.extension_to_plane.rst", "api/generated/compas_timber.parts.Beam.from_centerline.rst", "api/generated/compas_timber.parts.Beam.from_endpoints.rst", "api/generated/compas_timber.parts.Beam.from_json.rst", "api/generated/compas_timber.parts.Beam.from_jsonstring.rst", "api/generated/compas_timber.parts.Beam.get_geometry.rst", "api/generated/compas_timber.parts.Beam.remove_blank_extension.rst", "api/generated/compas_timber.parts.Beam.remove_features.rst", "api/generated/compas_timber.parts.Beam.rotate.rst", "api/generated/compas_timber.parts.Beam.rotated.rst", "api/generated/compas_timber.parts.Beam.scale.rst", "api/generated/compas_timber.parts.Beam.scaled.rst", "api/generated/compas_timber.parts.Beam.sha256.rst", "api/generated/compas_timber.parts.Beam.to_json.rst", "api/generated/compas_timber.parts.Beam.to_jsonstring.rst", "api/generated/compas_timber.parts.Beam.transform.rst", "api/generated/compas_timber.parts.Beam.transform_numpy.rst", "api/generated/compas_timber.parts.Beam.transformed.rst", "api/generated/compas_timber.parts.Beam.transformed_numpy.rst", "api/generated/compas_timber.parts.Beam.translate.rst", "api/generated/compas_timber.parts.Beam.translated.rst", "api/generated/compas_timber.parts.Beam.validate_data.rst", "api/generated/compas_timber.planning.Actor.rst", "api/generated/compas_timber.planning.Actor.get_name.rst", "api/generated/compas_timber.planning.BuildingPlan.rst", "api/generated/compas_timber.planning.BuildingPlan.ToString.rst", "api/generated/compas_timber.planning.BuildingPlan.add_step.rst", "api/generated/compas_timber.planning.BuildingPlan.copy.rst", "api/generated/compas_timber.planning.BuildingPlan.from_json.rst", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.sha256.rst", "api/generated/compas_timber.planning.BuildingPlan.to_json.rst", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.validate_data.rst", "api/generated/compas_timber.planning.SimpleSequenceGenerator.rst", "api/generated/compas_timber.planning.Step.rst", "api/generated/compas_timber.planning.Step.ToString.rst", "api/generated/compas_timber.planning.Step.copy.rst", "api/generated/compas_timber.planning.Step.from_json.rst", "api/generated/compas_timber.planning.Step.from_jsonstring.rst", "api/generated/compas_timber.planning.Step.sha256.rst", "api/generated/compas_timber.planning.Step.to_json.rst", "api/generated/compas_timber.planning.Step.to_jsonstring.rst", "api/generated/compas_timber.planning.Step.transform.rst", "api/generated/compas_timber.planning.Step.validate_data.rst", "api/generated/compas_timber.rhino.find_neighboring_beams.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "license.rst", "tutorials.rst", "tutorials/BTLx_contribution_guide.rst", "tutorials/grasshopper/assembly.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beam.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joints.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "titles": ["API Reference", "compas_timber.assembly", "compas_timber.connections", "compas_timber.consumers", "compas_timber.fabrication", "compas_timber.ghpython", "compas_timber.parts", "compas_timber.planning", "rhino", "TimberAssembly", "TimberAssembly.ToString", "TimberAssembly.add_beam", "TimberAssembly.add_connection", "TimberAssembly.add_joint", "TimberAssembly.add_part", "TimberAssembly.are_parts_joined", "TimberAssembly.compute_aabb", "TimberAssembly.compute_obb", "TimberAssembly.connections", "TimberAssembly.contains", "TimberAssembly.copy", "TimberAssembly.delete_connection", "TimberAssembly.delete_part", "TimberAssembly.find", "TimberAssembly.find_by_key", "TimberAssembly.from_json", "TimberAssembly.from_jsonstring", "TimberAssembly.parts", "TimberAssembly.remove_joint", "TimberAssembly.rotate", "TimberAssembly.rotated", "TimberAssembly.scale", "TimberAssembly.scaled", "TimberAssembly.set_topologies", "TimberAssembly.sha256", "TimberAssembly.to_json", "TimberAssembly.to_jsonstring", "TimberAssembly.transform", "TimberAssembly.transform_numpy", "TimberAssembly.transformed", "TimberAssembly.transformed_numpy", "TimberAssembly.translate", "TimberAssembly.translated", "TimberAssembly.validate_data", "BeamJoinningError", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "FrenchRidgeLapJoint", "FrenchRidgeLapJoint.ToString", "FrenchRidgeLapJoint.add_features", "FrenchRidgeLapJoint.check_geometry", "FrenchRidgeLapJoint.copy", "FrenchRidgeLapJoint.create", "FrenchRidgeLapJoint.from_json", "FrenchRidgeLapJoint.from_jsonstring", "FrenchRidgeLapJoint.get_face_most_ortho_to_beam", "FrenchRidgeLapJoint.get_face_most_towards_beam", "FrenchRidgeLapJoint.restore_beams_from_keys", "FrenchRidgeLapJoint.sha256", "FrenchRidgeLapJoint.to_json", "FrenchRidgeLapJoint.to_jsonstring", "FrenchRidgeLapJoint.validate_data", "Joint", "Joint.ToString", "Joint.add_features", "Joint.copy", "Joint.create", "Joint.from_json", "Joint.from_jsonstring", "Joint.get_face_most_ortho_to_beam", "Joint.get_face_most_towards_beam", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_json", "Joint.to_jsonstring", "Joint.validate_data", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_features", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.from_json", "LButtJoint.from_jsonstring", "LButtJoint.get_cross_cutting_plane", "LButtJoint.get_face_most_ortho_to_beam", "LButtJoint.get_face_most_towards_beam", "LButtJoint.get_main_cutting_plane", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.to_json", "LButtJoint.to_jsonstring", "LButtJoint.validate_data", "LHalfLapJoint", "LHalfLapJoint.ToString", "LHalfLapJoint.add_features", "LHalfLapJoint.copy", "LHalfLapJoint.create", "LHalfLapJoint.from_json", "LHalfLapJoint.from_jsonstring", "LHalfLapJoint.get_cross_cutting_frame", "LHalfLapJoint.get_face_most_ortho_to_beam", "LHalfLapJoint.get_face_most_towards_beam", "LHalfLapJoint.get_main_cutting_frame", "LHalfLapJoint.restore_beams_from_keys", "LHalfLapJoint.sha256", "LHalfLapJoint.to_json", "LHalfLapJoint.to_jsonstring", "LHalfLapJoint.validate_data", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_features", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.from_json", "LMiterJoint.from_jsonstring", "LMiterJoint.get_cutting_planes", "LMiterJoint.get_face_most_ortho_to_beam", "LMiterJoint.get_face_most_towards_beam", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_json", "LMiterJoint.to_jsonstring", "LMiterJoint.validate_data", "LapJoint", "LapJoint.ToString", "LapJoint.add_features", "LapJoint.copy", "LapJoint.create", "LapJoint.from_json", "LapJoint.from_jsonstring", "LapJoint.get_cross_cutting_frame", "LapJoint.get_face_most_ortho_to_beam", "LapJoint.get_face_most_towards_beam", "LapJoint.get_main_cutting_frame", "LapJoint.restore_beams_from_keys", "LapJoint.sha256", "LapJoint.to_json", "LapJoint.to_jsonstring", "LapJoint.validate_data", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_features", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.from_json", "TButtJoint.from_jsonstring", "TButtJoint.get_cutting_plane", "TButtJoint.get_face_most_ortho_to_beam", "TButtJoint.get_face_most_towards_beam", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.to_json", "TButtJoint.to_jsonstring", "TButtJoint.validate_data", "THalfLapJoint", "THalfLapJoint.ToString", "THalfLapJoint.add_features", "THalfLapJoint.copy", "THalfLapJoint.create", "THalfLapJoint.from_json", "THalfLapJoint.from_jsonstring", "THalfLapJoint.get_cross_cutting_frame", "THalfLapJoint.get_face_most_ortho_to_beam", "THalfLapJoint.get_face_most_towards_beam", "THalfLapJoint.get_main_cutting_frame", "THalfLapJoint.restore_beams_from_keys", "THalfLapJoint.sha256", "THalfLapJoint.to_json", "THalfLapJoint.to_jsonstring", "THalfLapJoint.validate_data", "XHalfLapJoint", "XHalfLapJoint.ToString", "XHalfLapJoint.add_features", "XHalfLapJoint.copy", "XHalfLapJoint.create", "XHalfLapJoint.from_json", "XHalfLapJoint.from_jsonstring", "XHalfLapJoint.get_cross_cutting_frame", "XHalfLapJoint.get_face_most_ortho_to_beam", "XHalfLapJoint.get_face_most_towards_beam", "XHalfLapJoint.get_main_cutting_frame", "XHalfLapJoint.restore_beams_from_keys", "XHalfLapJoint.sha256", "XHalfLapJoint.to_json", "XHalfLapJoint.to_jsonstring", "XHalfLapJoint.validate_data", "find_neighboring_beams", "BeamGeometry", "BrepGeometryConsumer", "CutFeature", "CutFeature.ToString", "CutFeature.copy", "CutFeature.from_json", "CutFeature.from_jsonstring", "CutFeature.sha256", "CutFeature.to_json", "CutFeature.to_jsonstring", "CutFeature.validate_data", "CutFeatureGeometry", "CutFeatureGeometry.apply", "DrillFeature", "DrillFeature.ToString", "DrillFeature.copy", "DrillFeature.from_json", "DrillFeature.from_jsonstring", "DrillFeature.sha256", "DrillFeature.to_json", "DrillFeature.to_jsonstring", "DrillFeature.validate_data", "DrillFeatureGeometry", "DrillFeatureGeometry.apply", "FeatureApplicationError", "FeatureApplicator", "FeatureApplicator.apply", "MillVolume", "MillVolume.ToString", "MillVolume.copy", "MillVolume.from_json", "MillVolume.from_jsonstring", "MillVolume.sha256", "MillVolume.to_json", "MillVolume.to_jsonstring", "MillVolume.validate_data", "MillVolumeGeometry", "MillVolumeGeometry.apply", "BTLx", "BTLx.btlx_string", "BTLx.process_assembly", "BTLx.register_joint", "BTLxFrenchRidgeLap", "BTLxFrenchRidgeLap.create_process", "BTLxFrenchRidgeLap.get_params", "BTLxFrenchRidgeLap.process_joints", "BTLxJackCut", "BTLxJackCut.create_process", "BTLxJackCut.generate_process", "BTLxProcess", "FrenchRidgeFactory", "FrenchRidgeFactory.apply_processings", "LButtFactory", "LButtFactory.apply_processings", "LMiterFactory", "LMiterFactory.apply_processings", "TButtFactory", "TButtFactory.apply_processings", "CategoryRule", "CategoryRule.ToString", "CategoryRule.comply", "CategoryRule.reorder", "DebugInfomation", "DebugInfomation.ToString", "DebugInfomation.add_feature_error", "DebugInfomation.add_joint_error", "DirectRule", "DirectRule.ToString", "DirectRule.comply", "FeatureDefinition", "FeatureDefinition.ToString", "JointDefinition", "JointDefinition.ToString", "JointDefinition.is_identical", "JointDefinition.match", "JointOptions", "JointOptions.ToString", "JointOptions.is_identical", "TopologyRule", "TopologyRule.ToString", "TopologyRule.comply", "Beam", "Beam.ToString", "Beam.add_blank_extension", "Beam.add_feature", "Beam.add_features", "Beam.align_z", "Beam.clear_features", "Beam.compute_aabb", "Beam.compute_obb", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_endpoints", "Beam.from_json", "Beam.from_jsonstring", "Beam.get_geometry", "Beam.remove_blank_extension", "Beam.remove_features", "Beam.rotate", "Beam.rotated", "Beam.scale", "Beam.scaled", "Beam.sha256", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transform_numpy", "Beam.transformed", "Beam.transformed_numpy", "Beam.translate", "Beam.translated", "Beam.validate_data", "Actor", "Actor.get_name", "BuildingPlan", "BuildingPlan.ToString", "BuildingPlan.add_step", "BuildingPlan.copy", "BuildingPlan.from_json", "BuildingPlan.from_jsonstring", "BuildingPlan.sha256", "BuildingPlan.to_json", "BuildingPlan.to_jsonstring", "BuildingPlan.validate_data", "SimpleSequenceGenerator", "Step", "Step.ToString", "Step.copy", "Step.from_json", "Step.from_jsonstring", "Step.sha256", "Step.to_json", "Step.to_jsonstring", "Step.transform", "Step.validate_data", "find_neighboring_beams", "Citing", "Examples", "Create Joint", "COMPAS TIMBER", "Installation", "License", "Grasshopper plugin", "BTLx Contribution Guide", "Assembly", "Attributes", "Beam", "Examples", "Features", "Joints", "Show", "Utils", "Workflow"], "terms": {"compas_timb": [0, 9, 44, 45, 48, 53, 63, 67, 72, 77, 79, 83, 95, 99, 111, 115, 126, 130, 142, 146, 157, 161, 173, 177, 189, 190, 191, 192, 201, 202, 203, 212, 213, 214, 215, 217, 226, 227, 228, 231, 232, 236, 239, 240, 242, 244, 246, 248, 252, 256, 259, 261, 265, 268, 271, 304, 306, 316, 317, 327, 328, 331, 332], "assembli": [0, 9, 11, 12, 13, 14, 19, 22, 23, 24, 27, 28, 48, 53, 58, 67, 72, 79, 83, 90, 95, 99, 106, 111, 115, 121, 126, 130, 137, 142, 146, 152, 157, 161, 168, 173, 177, 184, 191, 228, 230, 274, 304, 316, 330, 331, 334, 341, 342, 344], "part": [0, 9, 12, 13, 14, 15, 18, 21, 22, 23, 24, 51, 72, 201, 212, 226, 228, 230, 232, 233, 236, 237, 241, 243, 245, 247, 271, 274, 287, 327, 331, 335, 338, 340, 342], "connect": [0, 10, 12, 21, 44, 45, 48, 49, 53, 63, 64, 67, 72, 77, 79, 80, 83, 95, 96, 99, 111, 112, 115, 126, 127, 130, 142, 143, 146, 157, 158, 161, 173, 174, 177, 189, 193, 204, 218, 241, 243, 245, 247, 256, 265, 268, 272, 307, 318, 331, 333, 336, 341], "consum": [0, 190, 191, 192, 201, 202, 203, 212, 213, 214, 215, 217, 226, 227, 331], "fabric": [0, 228, 231, 232, 235, 236, 239, 240, 242, 244, 246, 328, 331], "plan": [0, 304, 306, 316, 317, 331], "ghpython": [0, 248, 252, 256, 259, 261, 265, 268, 331, 334], "rhino": [0, 10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 189, 193, 204, 218, 272, 307, 318, 327, 329, 331, 332, 337, 338, 343], "The": [8, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 74, 75, 76, 79, 82, 83, 84, 85, 87, 88, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 108, 109, 110, 111, 114, 115, 116, 117, 119, 120, 123, 124, 125, 126, 129, 130, 131, 132, 134, 135, 139, 140, 141, 142, 145, 146, 147, 148, 150, 151, 154, 155, 156, 157, 160, 161, 162, 163, 165, 166, 170, 171, 172, 173, 176, 177, 178, 179, 181, 182, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 231, 232, 236, 239, 241, 243, 245, 247, 251, 265, 268, 271, 273, 274, 275, 276, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 309, 310, 311, 313, 314, 315, 319, 320, 321, 323, 324, 326, 327, 333, 334, 337, 338, 340, 341, 343, 344], "modul": [8, 239, 331, 335], "contain": [8, 9, 25, 26, 44, 46, 48, 53, 54, 55, 56, 57, 67, 68, 69, 70, 71, 83, 84, 85, 87, 88, 99, 100, 101, 103, 104, 115, 116, 117, 119, 120, 130, 131, 132, 134, 135, 146, 147, 148, 150, 151, 161, 162, 163, 165, 166, 177, 178, 179, 181, 182, 189, 190, 195, 196, 206, 207, 213, 220, 221, 251, 252, 259, 261, 265, 271, 285, 286, 306, 310, 311, 317, 320, 321, 327], "function": [8, 126, 189, 239, 334, 335], "type": [8, 10, 20, 25, 26, 43, 47, 48, 49, 52, 54, 55, 62, 64, 66, 68, 69, 76, 79, 80, 82, 84, 85, 94, 95, 96, 98, 100, 101, 110, 111, 112, 114, 116, 117, 125, 126, 127, 129, 131, 132, 141, 142, 143, 145, 147, 148, 156, 157, 158, 160, 162, 163, 172, 173, 174, 176, 178, 179, 188, 191, 193, 194, 195, 196, 200, 204, 205, 206, 207, 211, 218, 219, 220, 221, 225, 231, 232, 235, 239, 256, 261, 265, 268, 272, 280, 285, 286, 287, 303, 304, 307, 309, 310, 311, 315, 317, 318, 319, 320, 321, 326, 331, 335, 341, 342], "meant": 8, "us": [8, 10, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 59, 62, 63, 64, 73, 76, 78, 79, 80, 91, 94, 95, 96, 107, 110, 111, 112, 122, 125, 126, 127, 138, 141, 142, 143, 153, 156, 157, 158, 169, 172, 173, 174, 185, 188, 189, 193, 197, 200, 204, 208, 211, 218, 222, 225, 228, 235, 251, 272, 276, 282, 294, 297, 298, 299, 300, 301, 302, 303, 305, 307, 312, 315, 317, 318, 322, 326, 327, 328, 331, 333, 334, 335, 336, 337, 338, 341, 343], "context": [8, 14], "class": [9, 10, 13, 19, 45, 48, 49, 63, 64, 77, 79, 80, 95, 96, 111, 112, 126, 127, 142, 143, 157, 158, 173, 174, 190, 191, 192, 193, 201, 203, 204, 212, 215, 217, 218, 226, 228, 231, 232, 236, 239, 240, 242, 244, 246, 248, 252, 256, 259, 261, 265, 268, 271, 272, 304, 306, 307, 316, 317, 318, 331, 335], "sourc": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 337, 338], "base": [9, 29, 30, 44, 45, 48, 63, 77, 79, 95, 111, 126, 142, 157, 173, 190, 191, 192, 201, 203, 212, 214, 215, 217, 226, 228, 232, 236, 239, 240, 242, 244, 246, 248, 252, 256, 259, 261, 265, 268, 271, 290, 291, 304, 306, 316, 317, 336, 341, 344], "repres": [9, 48, 79, 95, 111, 142, 157, 173, 228, 232, 236, 271, 304, 338], "timber": [9, 228, 236, 271, 328, 334, 338, 341, 344], "beam": [9, 11, 13, 44, 45, 46, 47, 48, 50, 53, 56, 57, 58, 63, 65, 67, 70, 71, 72, 79, 81, 83, 87, 88, 90, 95, 97, 99, 103, 104, 106, 111, 113, 115, 119, 120, 121, 126, 128, 130, 134, 135, 137, 142, 144, 146, 150, 151, 152, 157, 159, 161, 165, 166, 168, 173, 175, 177, 181, 182, 184, 189, 190, 191, 192, 201, 202, 203, 212, 213, 214, 216, 217, 226, 227, 232, 236, 248, 250, 251, 252, 258, 259, 261, 264, 265, 270, 327, 330, 331, 334, 336, 337, 340, 341, 342, 343, 344], "joint": [9, 13, 15, 28, 44, 45, 48, 50, 53, 77, 79, 81, 83, 95, 97, 99, 111, 113, 115, 126, 128, 130, 142, 144, 146, 157, 159, 161, 173, 175, 177, 228, 231, 232, 233, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 252, 256, 261, 265, 268, 273, 288, 329, 331, 334, 335, 336, 338, 342, 344], "etc": [9, 228, 229, 271, 329, 331, 338], "attribut": [9, 12, 18, 44, 48, 63, 77, 79, 95, 111, 126, 142, 157, 173, 191, 214, 228, 232, 239, 248, 251, 252, 265, 271, 316, 317, 331, 334, 335, 338], "list": [9, 13, 15, 44, 46, 48, 53, 63, 67, 79, 83, 95, 99, 111, 115, 126, 130, 142, 146, 157, 161, 173, 177, 189, 228, 239, 250, 252, 258, 270, 271, 275, 281, 289, 317, 327, 335, 341, 344], "A": [9, 23, 44, 46, 48, 53, 67, 79, 83, 95, 99, 111, 115, 126, 130, 142, 146, 157, 161, 173, 177, 189, 190, 191, 217, 228, 241, 243, 245, 247, 251, 271, 283, 284, 328, 333, 338], "assign": [9, 14, 23, 248, 256, 268, 341, 343], "thi": [9, 10, 11, 19, 20, 23, 25, 26, 28, 30, 32, 39, 40, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 87, 88, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 188, 189, 193, 194, 195, 196, 200, 204, 205, 206, 207, 211, 218, 219, 220, 221, 225, 232, 234, 235, 238, 239, 241, 243, 245, 247, 248, 250, 251, 256, 258, 259, 261, 264, 265, 268, 270, 271, 272, 273, 274, 280, 282, 285, 286, 288, 291, 293, 299, 300, 302, 303, 307, 309, 310, 311, 315, 317, 318, 319, 320, 321, 326, 327, 329, 333, 335, 337, 338, 342, 344], "part_kei": 9, "int": [9, 11, 12, 13, 14, 18, 24, 78, 232, 273, 288, 305, 317], "kei": [9, 11, 14, 24, 72, 95, 126, 157, 173, 241, 243, 245, 247, 273, 288, 337], "includ": [9, 287, 333, 335], "beam_kei": 9, "joint_kei": [9, 273, 288], "topologi": [9, 33, 45, 47, 48, 53, 67, 77, 78, 79, 83, 95, 99, 111, 115, 130, 142, 146, 157, 161, 173, 177, 256, 268], "dict": [9, 12, 14, 18, 48, 63, 191, 228, 232, 235, 239, 241, 243, 245, 247, 265, 268, 335], "jointtopologi": [9, 47, 268, 331], "i": [9, 14, 15, 18, 23, 25, 26, 43, 46, 47, 48, 51, 53, 54, 55, 56, 57, 62, 63, 67, 68, 69, 70, 71, 72, 76, 79, 81, 83, 84, 85, 87, 88, 94, 95, 99, 100, 101, 103, 104, 110, 111, 113, 115, 116, 117, 119, 120, 125, 126, 130, 131, 132, 134, 135, 141, 142, 144, 146, 147, 148, 150, 151, 156, 157, 161, 162, 163, 165, 166, 172, 173, 177, 178, 179, 181, 182, 188, 189, 195, 196, 200, 203, 206, 207, 211, 213, 220, 221, 225, 228, 232, 234, 235, 238, 256, 268, 271, 273, 274, 281, 282, 285, 286, 303, 306, 310, 311, 315, 316, 320, 321, 326, 328, 331, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343], "detected_topo": 9, "beam_a_kei": 9, "beam_b_kei": 9, "see": [9, 72, 334, 338, 339, 343], "method": [9, 10, 45, 47, 48, 49, 51, 53, 63, 64, 67, 72, 77, 79, 80, 81, 83, 95, 96, 99, 111, 112, 113, 115, 126, 127, 130, 142, 143, 144, 146, 157, 158, 161, 173, 174, 177, 192, 193, 201, 203, 204, 212, 215, 217, 218, 226, 228, 232, 234, 236, 238, 240, 242, 244, 246, 248, 252, 256, 259, 261, 265, 268, 271, 272, 304, 306, 307, 317, 318, 331, 335], "inherit": [9, 48, 63, 79, 95, 111, 126, 142, 157, 173, 192, 203, 217, 268, 271, 306, 317, 331, 335], "convert": [10, 35, 36, 49, 60, 61, 64, 74, 75, 80, 92, 93, 96, 108, 109, 112, 123, 124, 127, 139, 140, 143, 154, 155, 158, 170, 171, 174, 186, 187, 193, 198, 199, 204, 209, 210, 218, 223, 224, 272, 295, 296, 307, 313, 314, 318, 323, 324], "instanc": [10, 13, 25, 26, 48, 49, 53, 54, 55, 64, 67, 68, 69, 79, 80, 83, 84, 85, 95, 96, 99, 100, 101, 111, 112, 115, 116, 117, 126, 127, 130, 131, 132, 142, 143, 146, 147, 148, 157, 158, 161, 162, 163, 173, 174, 177, 178, 179, 193, 195, 196, 204, 206, 207, 218, 220, 221, 239, 250, 258, 270, 272, 285, 286, 307, 310, 311, 318, 320, 321, 329, 335], "string": [10, 26, 36, 44, 48, 49, 55, 61, 64, 69, 75, 78, 79, 80, 85, 93, 95, 96, 101, 109, 111, 112, 117, 124, 126, 127, 132, 140, 142, 143, 148, 155, 157, 158, 163, 171, 173, 174, 179, 187, 193, 196, 199, 204, 207, 210, 218, 221, 224, 228, 229, 272, 286, 296, 305, 307, 311, 314, 318, 321, 324, 337, 338], "exist": [10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 272, 307, 318, 335], "net": [10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 272, 307, 318], "compat": [10, 48, 49, 64, 79, 80, 95, 96, 111, 112, 127, 142, 143, 157, 158, 173, 174, 189, 193, 204, 218, 272, 307, 318], "when": [10, 23, 46, 49, 64, 80, 81, 96, 112, 113, 127, 143, 144, 158, 174, 193, 204, 214, 218, 272, 273, 307, 318, 337, 341], "ironpython": [10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 272, 307, 318], "implicit": [10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 272, 307, 318], "convers": [10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 272, 307, 318], "usual": [10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 271, 272, 307, 318], "take": [10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 272, 307, 318, 335, 344], "place": [10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 272, 307, 318], "cpython": [10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 272, 307, 318], "kick": [10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 272, 307, 318], "its": [10, 18, 23, 24, 35, 36, 49, 56, 57, 60, 61, 64, 70, 71, 74, 75, 80, 87, 88, 92, 93, 96, 103, 104, 108, 109, 112, 119, 120, 123, 124, 127, 134, 135, 139, 140, 143, 150, 151, 154, 155, 158, 165, 166, 170, 171, 174, 181, 182, 186, 187, 193, 198, 199, 204, 209, 210, 218, 223, 224, 231, 243, 247, 272, 283, 295, 296, 307, 313, 314, 318, 323, 324, 332, 337, 338, 341], "default": [10, 14, 20, 29, 30, 31, 32, 35, 36, 49, 52, 60, 61, 64, 66, 74, 75, 79, 80, 82, 92, 93, 95, 96, 98, 108, 109, 112, 114, 123, 124, 126, 127, 129, 139, 140, 143, 145, 154, 155, 157, 158, 160, 170, 171, 173, 174, 176, 186, 187, 193, 194, 198, 199, 204, 205, 209, 210, 218, 219, 223, 224, 236, 272, 280, 283, 284, 290, 291, 292, 293, 295, 296, 307, 309, 313, 314, 318, 319, 323, 324, 331, 336, 338, 341, 343], "print": [10, 35, 36, 49, 60, 61, 64, 74, 75, 80, 92, 93, 96, 108, 109, 112, 123, 124, 127, 139, 140, 143, 154, 155, 158, 170, 171, 174, 186, 187, 193, 198, 199, 204, 209, 210, 218, 223, 224, 272, 295, 296, 307, 313, 314, 318, 323, 324], "self": [10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 239, 272, 307, 318, 335], "gettyp": [10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 272, 307, 318], "fullnam": [10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 272, 307, 318], "similar": [10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 272, 307, 318, 341], "overrid": [10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 272, 307, 318, 344], "object": [10, 13, 19, 20, 25, 26, 28, 35, 36, 43, 45, 46, 49, 52, 53, 54, 55, 60, 61, 62, 64, 66, 67, 68, 69, 72, 74, 75, 76, 77, 80, 82, 83, 84, 85, 92, 93, 94, 96, 98, 99, 100, 101, 108, 109, 110, 112, 114, 115, 116, 117, 123, 124, 125, 127, 129, 130, 131, 132, 139, 140, 141, 143, 145, 146, 147, 148, 154, 155, 156, 158, 160, 161, 162, 163, 170, 171, 172, 174, 176, 177, 178, 179, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 204, 205, 206, 207, 209, 210, 211, 215, 218, 219, 220, 221, 223, 224, 225, 228, 232, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 252, 259, 261, 265, 272, 280, 285, 286, 287, 295, 296, 303, 304, 307, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 323, 324, 326, 331, 336, 337, 338, 342, 343], "fix": [10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 272, 307, 318], "make": [10, 20, 49, 52, 64, 66, 80, 82, 96, 98, 112, 114, 127, 129, 143, 145, 158, 160, 174, 176, 193, 194, 204, 205, 218, 219, 272, 280, 307, 309, 318, 319], "grasshopp": [10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 272, 307, 318, 329, 331, 332, 338], "displai": [10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 272, 307, 318, 337, 342], "proper": [10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 272, 307, 318], "represent": [10, 35, 36, 48, 49, 60, 61, 64, 74, 75, 78, 79, 80, 92, 93, 95, 96, 108, 109, 111, 112, 123, 124, 126, 127, 139, 140, 142, 143, 154, 155, 157, 158, 170, 171, 173, 174, 186, 187, 193, 198, 199, 204, 209, 210, 218, 223, 224, 272, 295, 296, 305, 307, 313, 314, 318, 323, 324, 335], "ar": [10, 12, 23, 46, 47, 49, 51, 53, 56, 57, 64, 67, 70, 71, 72, 79, 80, 83, 87, 88, 96, 99, 103, 104, 112, 115, 119, 120, 127, 130, 134, 135, 143, 146, 150, 151, 158, 161, 165, 166, 174, 177, 181, 182, 189, 193, 204, 218, 239, 251, 264, 272, 307, 317, 318, 329, 335, 336, 337, 340, 341, 342, 343, 344], "panel": [10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 272, 307, 318], "other": [10, 13, 49, 56, 57, 64, 70, 71, 80, 87, 88, 95, 96, 103, 104, 112, 119, 120, 126, 127, 134, 135, 143, 150, 151, 157, 158, 165, 166, 173, 174, 181, 182, 193, 204, 218, 232, 263, 267, 272, 307, 318, 328, 333, 341, 344], "output": [10, 47, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 272, 307, 318, 336], "add": [11, 12, 13, 14, 21, 22, 50, 65, 81, 97, 113, 128, 144, 159, 175, 273, 274, 275, 334, 335, 336, 343], "paramet": [11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 82, 83, 84, 85, 87, 88, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 126, 129, 130, 131, 132, 134, 135, 138, 139, 140, 141, 142, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 160, 161, 162, 163, 165, 166, 169, 170, 171, 172, 173, 176, 177, 178, 179, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 231, 232, 234, 235, 236, 238, 239, 241, 243, 245, 247, 250, 251, 258, 265, 268, 270, 271, 274, 275, 276, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 321, 322, 323, 324, 326, 327, 335, 336, 337, 338, 343], "return": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 66, 67, 68, 69, 70, 71, 73, 75, 76, 78, 82, 83, 84, 85, 87, 88, 91, 93, 94, 98, 99, 100, 101, 103, 104, 107, 109, 110, 114, 115, 116, 117, 119, 120, 122, 124, 125, 129, 130, 131, 132, 134, 135, 138, 140, 141, 145, 146, 147, 148, 150, 151, 153, 155, 156, 160, 161, 162, 163, 165, 166, 169, 171, 172, 176, 177, 178, 179, 181, 182, 185, 187, 188, 189, 194, 195, 196, 197, 199, 200, 202, 205, 206, 207, 208, 210, 211, 213, 216, 219, 220, 221, 222, 224, 225, 227, 228, 229, 231, 235, 241, 243, 245, 247, 250, 251, 258, 264, 270, 274, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 309, 310, 311, 312, 314, 315, 319, 320, 321, 322, 324, 326, 327, 336, 342], "graph": [11, 13, 14], "identifi": [11, 12, 13, 14, 18, 23, 24, 189], "ad": [11, 53, 67, 83, 99, 115, 130, 146, 161, 177, 274, 275, 327], "b": 12, "kwarg": [12, 14, 53, 67, 83, 99, 115, 130, 146, 161, 177, 265, 268], "between": [12, 18, 21, 95, 111, 126, 157, 173, 337, 341, 344], "two": [12, 21, 44, 47, 48, 53, 63, 67, 79, 83, 95, 99, 111, 115, 130, 146, 161, 177, 251, 281, 338, 341, 344], "compa": [12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 34, 41, 42, 52, 54, 55, 59, 66, 68, 69, 73, 82, 84, 85, 91, 98, 100, 101, 107, 114, 116, 117, 122, 129, 131, 132, 138, 145, 147, 148, 153, 160, 162, 163, 169, 176, 178, 179, 185, 192, 194, 195, 196, 197, 201, 202, 203, 205, 206, 207, 208, 212, 213, 216, 217, 219, 220, 221, 222, 226, 227, 271, 274, 278, 279, 280, 285, 286, 287, 290, 291, 294, 301, 302, 309, 310, 311, 312, 316, 317, 319, 320, 321, 322, 328, 334, 341], "datastructur": [12, 14, 16, 17, 21, 22, 23, 24, 27, 29, 31, 34, 39, 40, 41, 42, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 217, 222, 278, 279, 290, 292, 294, 299, 300, 301, 302, 312, 316, 322], "from": [12, 22, 25, 26, 28, 34, 47, 54, 55, 59, 68, 69, 73, 84, 85, 91, 100, 101, 107, 116, 117, 122, 131, 132, 138, 147, 148, 153, 162, 163, 169, 178, 179, 185, 195, 196, 197, 206, 207, 208, 220, 221, 222, 239, 283, 284, 285, 286, 288, 289, 294, 310, 311, 312, 320, 321, 322, 329, 331, 333, 334, 335, 337, 338, 340, 341], "str": [12, 14, 18, 23, 24, 25, 26, 34, 35, 36, 44, 48, 54, 55, 59, 60, 61, 63, 68, 69, 73, 74, 75, 78, 79, 84, 85, 91, 92, 93, 95, 100, 101, 107, 108, 109, 111, 116, 117, 122, 123, 124, 126, 131, 132, 138, 139, 140, 142, 147, 148, 153, 154, 155, 157, 162, 163, 169, 170, 171, 173, 178, 179, 185, 186, 187, 195, 196, 197, 198, 199, 206, 207, 208, 209, 210, 214, 220, 221, 222, 223, 224, 228, 232, 236, 239, 281, 285, 286, 294, 295, 296, 305, 310, 311, 312, 313, 314, 317, 320, 321, 322, 323, 324], "ani": [12, 14, 18, 43, 62, 76, 94, 110, 125, 141, 156, 172, 188, 200, 211, 225, 303, 315, 326, 329, 333, 340, 342], "option": [12, 14, 18, 20, 24, 29, 30, 31, 32, 34, 35, 36, 46, 47, 52, 56, 57, 59, 60, 61, 66, 70, 71, 73, 74, 75, 82, 87, 88, 91, 92, 93, 98, 103, 104, 107, 108, 109, 114, 119, 120, 122, 123, 124, 129, 134, 135, 138, 139, 140, 145, 150, 151, 153, 154, 155, 160, 165, 166, 169, 170, 171, 176, 181, 182, 185, 186, 187, 189, 190, 194, 197, 198, 199, 205, 208, 209, 210, 219, 222, 223, 224, 236, 265, 280, 290, 291, 292, 293, 294, 295, 296, 309, 312, 313, 314, 319, 322, 323, 324, 338, 341, 344], "compil": [12, 332], "name": [12, 14, 236, 239, 335, 337, 341, 342], "argument": [12, 265, 268], "tupl": [12, 18, 47, 56, 57, 70, 71, 87, 88, 103, 104, 111, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182, 251, 271, 282], "node": 12, "rais": [12, 25, 26, 50, 53, 54, 55, 65, 67, 68, 69, 83, 84, 85, 97, 99, 100, 101, 115, 116, 117, 128, 130, 131, 132, 146, 147, 148, 159, 161, 162, 163, 175, 177, 178, 179, 195, 196, 202, 206, 207, 213, 214, 220, 221, 227, 285, 286, 310, 311, 320, 321], "assemblyerror": 12, "If": [12, 18, 25, 26, 34, 35, 36, 47, 54, 55, 56, 57, 59, 60, 61, 68, 69, 70, 71, 73, 74, 75, 79, 84, 85, 87, 88, 91, 92, 93, 95, 100, 101, 103, 104, 107, 108, 109, 116, 117, 119, 120, 122, 123, 124, 126, 131, 132, 134, 135, 138, 139, 140, 147, 148, 150, 151, 153, 154, 155, 157, 162, 163, 165, 166, 169, 170, 171, 173, 178, 179, 181, 182, 185, 186, 187, 195, 196, 197, 198, 199, 202, 206, 207, 208, 209, 210, 213, 220, 221, 222, 223, 224, 227, 274, 285, 286, 289, 294, 295, 296, 310, 311, 312, 313, 314, 320, 321, 322, 323, 324, 327, 328, 338, 341], "an": [13, 14, 20, 25, 26, 35, 36, 43, 44, 46, 48, 52, 53, 54, 55, 60, 61, 62, 66, 67, 68, 69, 74, 75, 76, 79, 82, 83, 84, 85, 92, 93, 94, 95, 98, 99, 100, 101, 108, 109, 110, 111, 114, 115, 116, 117, 123, 124, 125, 126, 129, 130, 131, 132, 139, 140, 141, 142, 145, 146, 147, 148, 154, 155, 156, 157, 160, 161, 162, 163, 170, 171, 172, 173, 176, 177, 178, 179, 186, 187, 188, 190, 194, 195, 196, 198, 199, 200, 205, 206, 207, 209, 210, 211, 219, 220, 221, 223, 224, 225, 234, 238, 271, 280, 285, 286, 295, 296, 303, 304, 309, 310, 311, 313, 314, 315, 319, 320, 321, 323, 324, 326, 328, 329, 331, 332, 333, 334, 336, 337, 338, 341], "dowel": 13, "steel": 13, "plate": 13, "involv": [13, 245], "current": [13, 14, 20, 52, 66, 82, 98, 114, 129, 145, 160, 176, 194, 205, 219, 280, 309, 319, 331], "none": [14, 20, 21, 22, 23, 24, 29, 30, 31, 32, 37, 38, 41, 46, 47, 52, 66, 82, 98, 114, 129, 145, 160, 176, 189, 194, 205, 219, 231, 236, 237, 241, 243, 245, 247, 273, 274, 277, 280, 283, 284, 289, 290, 291, 292, 293, 297, 298, 301, 309, 319, 327, 338], "note": [14, 189, 328, 342], "uniqu": [14, 23], "onli": [14, 72, 274, 337], "nest": 14, "mai": [14, 336, 337], "have": [14, 53, 67, 83, 99, 115, 130, 146, 161, 177, 239, 338], "same": [14, 15, 47, 79, 316, 317, 341, 344], "valu": [14, 78, 95, 126, 157, 173, 189, 271, 305, 337], "one": [14, 56, 57, 70, 71, 87, 88, 95, 103, 104, 119, 120, 126, 134, 135, 150, 151, 157, 165, 166, 173, 181, 182, 251, 275, 316, 317, 335, 338, 341, 344], "which": [14, 44, 46, 47, 48, 51, 53, 56, 57, 67, 70, 71, 79, 83, 87, 88, 95, 99, 103, 104, 111, 115, 119, 120, 130, 134, 135, 142, 146, 150, 151, 157, 161, 165, 166, 173, 177, 181, 182, 189, 203, 232, 239, 259, 268, 273, 276, 281, 282, 288, 304, 306, 317, 335, 336, 338, 341], "case": 14, "automat": [14, 23, 81, 113, 144, 341, 343], "integ": 14, "addit": [14, 18, 46, 334, 337, 338, 340], "collect": [14, 306, 327], "check": [15, 51, 327, 331, 337], "alreadi": 15, "defin": [15, 50, 65, 97, 128, 159, 175, 232, 250, 258, 264, 270, 283, 337, 338, 341, 343, 344], "set": [15, 46, 189, 327, 336, 337, 338, 342], "bool": [15, 18, 19, 34, 35, 36, 46, 56, 57, 59, 60, 61, 70, 71, 73, 74, 75, 79, 87, 88, 91, 92, 93, 95, 103, 104, 107, 108, 109, 119, 120, 122, 123, 124, 126, 134, 135, 138, 139, 140, 150, 151, 153, 154, 155, 157, 165, 166, 169, 170, 171, 173, 181, 182, 185, 186, 187, 197, 198, 199, 208, 209, 210, 222, 223, 224, 232, 250, 258, 270, 274, 287, 294, 295, 296, 312, 313, 314, 317, 322, 323, 324], "comput": [16, 17, 34, 47, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 278, 279, 294, 312, 322], "axi": [16, 29, 30, 189, 271, 278, 283, 284, 290, 291, 338, 343], "align": [16, 51, 189, 271, 276, 278, 334, 343], "bound": [16, 17, 189, 271, 278, 279, 327], "box": [16, 17, 189, 271, 278, 279, 317, 327, 334, 342], "geometri": [16, 17, 29, 30, 32, 41, 42, 44, 190, 191, 192, 201, 202, 203, 212, 213, 214, 216, 217, 226, 227, 271, 278, 279, 287, 290, 291, 293, 301, 302, 317, 327, 331, 334, 336, 338, 340, 342, 343, 344], "orient": [17, 232, 279, 283, 284, 343], "data": [18, 19, 20, 25, 26, 34, 35, 36, 37, 38, 39, 40, 43, 52, 54, 55, 59, 60, 61, 62, 63, 66, 68, 69, 73, 74, 75, 76, 82, 84, 85, 91, 92, 93, 94, 98, 100, 101, 107, 108, 109, 110, 114, 116, 117, 122, 123, 124, 125, 129, 131, 132, 138, 139, 140, 141, 145, 147, 148, 153, 154, 155, 156, 160, 162, 163, 169, 170, 171, 172, 176, 178, 179, 185, 186, 187, 188, 190, 194, 195, 196, 197, 198, 199, 200, 205, 206, 207, 208, 209, 210, 211, 219, 220, 221, 222, 223, 224, 225, 228, 280, 285, 286, 294, 295, 296, 297, 298, 299, 300, 303, 306, 309, 310, 311, 312, 313, 314, 315, 317, 319, 320, 321, 322, 323, 324, 326], "fals": [18, 19, 34, 35, 36, 46, 59, 60, 61, 73, 74, 75, 79, 91, 92, 93, 107, 108, 109, 122, 123, 124, 138, 139, 140, 153, 154, 155, 169, 170, 171, 185, 186, 187, 197, 198, 199, 208, 209, 210, 222, 223, 224, 250, 258, 270, 274, 287, 294, 295, 296, 312, 313, 314, 322, 323, 324], "iter": 18, "over": 18, "true": [18, 19, 34, 35, 36, 46, 56, 57, 59, 60, 61, 70, 71, 73, 74, 75, 79, 87, 88, 91, 92, 93, 95, 103, 104, 107, 108, 109, 119, 120, 122, 123, 124, 126, 134, 135, 138, 139, 140, 150, 151, 153, 154, 155, 157, 165, 166, 169, 170, 171, 173, 181, 182, 185, 186, 187, 197, 198, 199, 208, 209, 210, 222, 223, 224, 250, 258, 264, 270, 274, 282, 287, 294, 295, 296, 312, 313, 314, 322, 323, 324, 336, 338], "yield": [18, 27, 191], "next": 18, "u": 18, "v": 18, "connector": 18, "attr": [18, 239], "obj": [19, 34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 294, 312, 317, 322], "given": [19, 46, 47, 53, 67, 78, 83, 99, 115, 130, 146, 161, 177, 189, 251, 256, 268, 276, 281, 282, 284, 305, 337], "otherwis": [19, 47, 79, 250, 258, 270, 274, 333, 338], "look": 19, "cl": [20, 52, 66, 82, 98, 114, 129, 145, 160, 176, 194, 205, 219, 265, 268, 280, 309, 319], "independ": [20, 52, 66, 82, 98, 114, 129, 145, 160, 176, 194, 205, 219, 280, 309, 319], "edg": 21, "delet": 21, "remov": [22, 28, 273, 288, 289, 337, 340], "guid": [23, 331, 334, 338], "global": 23, "creat": [23, 48, 51, 63, 79, 81, 95, 111, 113, 126, 142, 144, 157, 173, 231, 232, 240, 242, 244, 246, 283, 284, 329, 331, 332, 334, 335, 336, 337, 338, 341, 344], "can": [23, 24, 43, 44, 62, 76, 94, 110, 125, 141, 156, 172, 188, 200, 211, 225, 239, 287, 303, 306, 315, 317, 326, 329, 334, 335, 338, 341], "t": [23, 24, 126, 142, 157, 173, 246, 256, 268], "found": [23, 24, 335], "find": [24, 46, 189, 327, 341], "classmethod": [25, 26, 43, 46, 53, 54, 55, 62, 67, 68, 69, 76, 78, 83, 84, 85, 94, 99, 100, 101, 110, 115, 116, 117, 125, 130, 131, 132, 141, 146, 147, 148, 156, 161, 162, 163, 172, 177, 178, 179, 188, 195, 196, 200, 206, 207, 211, 220, 221, 225, 231, 233, 237, 241, 243, 245, 247, 283, 284, 285, 286, 303, 305, 310, 311, 315, 320, 321, 326], "filepath": [25, 35, 54, 60, 68, 74, 84, 92, 100, 108, 116, 123, 131, 139, 147, 154, 162, 170, 178, 186, 195, 198, 206, 209, 220, 223, 285, 295, 310, 313, 320, 323], "construct": [25, 26, 43, 54, 55, 62, 68, 69, 76, 84, 85, 94, 100, 101, 110, 116, 117, 125, 131, 132, 141, 147, 148, 156, 162, 163, 172, 178, 179, 188, 195, 196, 200, 206, 207, 211, 220, 221, 225, 285, 286, 303, 310, 311, 315, 320, 321, 326, 331], "json": [25, 26, 35, 36, 54, 55, 60, 61, 68, 69, 74, 75, 84, 85, 92, 93, 100, 101, 108, 109, 116, 117, 123, 124, 131, 132, 139, 140, 147, 148, 154, 155, 162, 163, 170, 171, 178, 179, 186, 187, 195, 196, 198, 199, 206, 207, 209, 210, 220, 221, 223, 224, 285, 286, 295, 296, 310, 311, 313, 314, 320, 321, 323, 324], "file": [25, 35, 54, 60, 68, 74, 84, 92, 100, 108, 116, 123, 131, 139, 147, 154, 162, 170, 178, 186, 195, 198, 206, 209, 220, 223, 228, 285, 295, 310, 313, 320, 323, 333, 335, 339], "path": [25, 35, 54, 60, 68, 74, 84, 92, 100, 108, 116, 123, 131, 139, 147, 154, 162, 170, 178, 186, 195, 198, 206, 209, 220, 223, 285, 295, 310, 313, 320, 323], "ha": [25, 26, 44, 54, 55, 68, 69, 84, 85, 100, 101, 116, 117, 131, 132, 147, 148, 162, 163, 178, 179, 189, 195, 196, 206, 207, 220, 221, 285, 286, 310, 311, 317, 320, 321, 338, 341, 342, 343], "correct": [25, 26, 54, 55, 68, 69, 84, 85, 100, 101, 116, 117, 131, 132, 147, 148, 162, 163, 178, 179, 195, 196, 206, 207, 220, 221, 285, 286, 310, 311, 320, 321], "schema": [25, 26, 43, 54, 55, 62, 68, 69, 76, 84, 85, 94, 100, 101, 110, 116, 117, 125, 131, 132, 141, 147, 148, 156, 162, 163, 172, 178, 179, 188, 195, 196, 200, 206, 207, 211, 220, 221, 225, 285, 286, 303, 310, 311, 315, 320, 321, 326], "typeerror": [25, 26, 54, 55, 68, 69, 84, 85, 100, 101, 116, 117, 131, 132, 147, 148, 162, 163, 178, 179, 195, 196, 206, 207, 220, 221, 285, 286, 310, 311, 320, 321], "individu": [27, 239], "angl": [29, 30, 111, 232, 290, 291, 341], "point": [29, 30, 111, 271, 281, 284, 290, 291, 331, 343], "float": [29, 30, 31, 32, 46, 47, 95, 126, 157, 173, 189, 203, 232, 271, 273, 282, 283, 284, 290, 291, 292, 293, 327], "radian": [29, 30, 290, 291], "vector": [29, 30, 41, 42, 276, 283, 284, 290, 291, 301, 302, 331, 338], "z": [29, 30, 31, 32, 34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 271, 283, 284, 290, 291, 292, 293, 294, 312, 322, 338, 340, 343], "origin": [29, 30, 235, 271, 290, 291, 338, 342, 343], "translat": [29, 30, 31, 32, 290, 291, 292, 293], "scale": [29, 30, 41, 42, 290, 291, 301, 302, 343], "transform": [29, 30, 31, 32, 38, 40, 41, 42, 287, 290, 291, 292, 293, 298, 300, 301, 302], "copi": [30, 32, 39, 40, 42, 287, 291, 293, 299, 300, 302, 333], "x": [31, 32, 126, 173, 256, 268, 271, 292, 293, 338, 341, 343], "y": [31, 32, 271, 292, 293, 338, 343], "factor": [31, 32, 292, 293], "direct": [31, 32, 111, 271, 282, 283, 284, 292, 293, 327, 338], "rotat": [31, 32, 41, 42, 292, 293, 301, 302, 338], "as_str": [34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 294, 312, 322], "hash": [34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 294, 312, 322], "comparison": [34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 294, 312, 322], "dure": [34, 59, 72, 73, 91, 107, 122, 138, 153, 169, 185, 190, 197, 208, 222, 252, 294, 312, 317, 322], "version": [34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 294, 312, 322, 332], "control": [34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 294, 312, 322], "algorithm": [34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 189, 197, 208, 222, 294, 312, 322], "digest": [34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 294, 312, 322], "hexadecim": [34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 294, 312, 322], "format": [34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 228, 294, 312, 322, 337], "rather": [34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 294, 312, 322], "than": [34, 53, 59, 67, 73, 83, 91, 99, 107, 115, 122, 130, 138, 146, 153, 161, 169, 177, 185, 197, 208, 222, 294, 312, 322, 341], "byte": [34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 294, 312, 322], "exampl": [34, 59, 72, 73, 91, 107, 122, 138, 153, 169, 185, 189, 197, 208, 222, 294, 312, 322, 331, 334, 337, 338, 341, 344], "import": [34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 294, 312, 322, 335, 344], "mesh": [34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 217, 222, 294, 312, 322, 330], "from_obj": [34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 294, 312, 322], "get": [34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 294, 312, 322, 332, 334], "face": [34, 48, 51, 56, 57, 59, 70, 71, 73, 79, 87, 88, 91, 103, 104, 107, 119, 120, 122, 134, 135, 138, 150, 151, 153, 165, 166, 169, 181, 182, 185, 197, 208, 222, 232, 271, 282, 294, 312, 322], "v1": [34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 294, 312, 322], "v2": [34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 294, 312, 322], "vertex_attribut": [34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 294, 312, 322], "vertex_sampl": [34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 294, 312, 322], "1": [34, 57, 59, 71, 73, 88, 91, 95, 104, 107, 120, 122, 126, 135, 138, 151, 153, 157, 166, 169, 173, 182, 185, 197, 208, 222, 271, 294, 312, 322, 330, 335, 338], "0": [34, 56, 59, 70, 73, 87, 91, 95, 103, 107, 119, 122, 126, 134, 138, 150, 153, 157, 165, 169, 173, 181, 185, 197, 208, 222, 271, 294, 312, 322, 330, 332, 338, 341], "v3": [34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 294, 312, 322], "pretti": [35, 36, 60, 61, 74, 75, 92, 93, 108, 109, 123, 124, 139, 140, 154, 155, 170, 171, 186, 187, 198, 199, 209, 210, 223, 224, 228, 229, 295, 296, 313, 314, 323, 324], "nativ": [35, 36, 60, 61, 74, 75, 92, 93, 108, 109, 123, 124, 139, 140, 154, 155, 170, 171, 186, 187, 198, 199, 209, 210, 223, 224, 295, 296, 313, 314, 323, 324], "save": [35, 36, 58, 60, 61, 74, 75, 90, 92, 93, 106, 108, 109, 121, 123, 124, 137, 139, 140, 152, 154, 155, 168, 170, 171, 184, 186, 187, 198, 199, 209, 210, 223, 224, 295, 296, 313, 314, 323, 324], "structur": [37, 38, 39, 40, 297, 298, 299, 300, 328, 331, 334, 336, 344], "valid": [43, 62, 76, 94, 110, 125, 141, 156, 172, 188, 200, 211, 225, 303, 315, 326], "against": [43, 62, 76, 94, 110, 125, 141, 156, 172, 188, 200, 211, 225, 303, 315, 326], "": [43, 48, 50, 56, 57, 62, 65, 70, 71, 76, 79, 87, 88, 94, 95, 97, 103, 104, 110, 111, 119, 120, 125, 126, 128, 134, 135, 141, 142, 150, 151, 156, 157, 159, 165, 166, 172, 173, 175, 181, 182, 188, 200, 211, 225, 271, 276, 281, 283, 284, 287, 303, 315, 326, 337, 343], "raw": [43, 62, 76, 94, 110, 125, 141, 156, 172, 188, 200, 211, 225, 303, 315, 326], "__from_data__": [43, 62, 76, 94, 110, 125, 141, 156, 172, 188, 200, 211, 225, 303, 315, 326], "except": [44, 214], "indic": [44, 48, 192, 232, 283, 284, 337, 338], "error": [44, 190, 214, 252, 254, 255, 336, 337], "occur": [44, 190, 252], "while": 44, "try": 44, "join": [44, 48, 53, 63, 67, 79, 83, 95, 99, 111, 115, 126, 130, 142, 146, 157, 161, 173, 177, 232, 252, 261, 265, 336, 341], "more": [44, 275, 331, 334, 335], "should": [44, 50, 63, 65, 72, 95, 97, 126, 128, 157, 159, 173, 175, 189, 239, 259, 273, 287, 335, 341], "calcul": [44, 50, 56, 57, 65, 70, 71, 87, 88, 97, 103, 104, 119, 120, 128, 134, 135, 150, 151, 159, 165, 166, 175, 181, 182], "featur": [44, 50, 65, 81, 95, 97, 113, 126, 128, 144, 157, 159, 173, 175, 190, 191, 192, 201, 202, 203, 212, 213, 214, 215, 216, 217, 226, 227, 252, 259, 271, 274, 275, 287, 289, 331, 334, 336, 342, 344], "appli": [44, 50, 65, 97, 128, 159, 175, 190, 191, 201, 212, 214, 226, 232, 239, 241, 243, 245, 247, 259, 268, 274, 335, 336, 341, 342, 344], "were": [44, 47, 337], "suppos": 44, "debug_geometri": 44, "visual": [44, 228, 229, 252, 306, 317, 329, 336], "debug_info": [44, 190], "debug": [44, 190, 252], "inform": [44, 190, 252, 331, 343], "about": [44, 331], "wa": [44, 50, 65, 97, 128, 159, 175], "provid": [45, 250, 258, 270, 333, 334, 336, 338], "tool": [45, 331, 334, 338, 342, 343], "detect": 45, "intersect": [45, 46, 47, 202, 227, 341], "rtree": [46, 327], "max_dist": [46, 47], "pair": [46, 47, 189, 327, 337, 341, 344], "r": [46, 189, 332], "tree": [46, 189], "search": [46, 189], "neighbor": [46, 189, 327], "distanc": [46, 47, 341], "apart": 46, "non": 46, "touch": 46, "still": 46, "consid": [46, 47], "neightbor": [46, 327], "beam_a": [47, 48, 56, 57, 70, 71, 87, 88, 103, 104, 111, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182], "beam_b": [47, 48, 56, 57, 70, 71, 87, 88, 103, 104, 111, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182], "tol": 47, "1e": 47, "06": 47, "within": [47, 264, 317], "role": [47, 72, 251], "sensit": 47, "consist": 47, "specif": [47, 72, 239, 331, 335], "order": [47, 189, 235, 251, 316, 344], "e": [47, 72, 79, 329, 337, 341, 342, 343], "g": [47, 72, 329, 337], "main": [47, 72, 79, 90, 95, 106, 121, 126, 137, 142, 144, 152, 157, 168, 173, 184, 341], "first": [47, 111, 251, 281, 341, 344], "cross": [47, 72, 79, 90, 95, 106, 121, 126, 137, 142, 144, 152, 157, 168, 173, 184, 271, 283, 284, 338, 341], "second": [47, 111, 251, 281, 341], "thei": 47, "input": [47, 189, 239, 334, 335, 337, 338, 341], "gener": [47, 191, 230, 234, 238, 239, 316, 335, 344], "toler": [47, 341], "mathemat": 47, "maximum": 47, "desigen": 47, "unit": [47, 189, 282], "french": [48, 51, 232, 240], "ridg": [48, 51, 232, 240], "lap": [48, 51, 95, 126, 157, 173, 232], "end": [48, 56, 57, 63, 70, 71, 79, 87, 88, 95, 103, 104, 111, 119, 120, 134, 135, 142, 150, 151, 157, 165, 166, 173, 181, 182, 232, 271, 273, 281, 282, 284, 341], "l": [48, 79, 95, 111, 126, 242, 244, 245, 256, 268], "pleas": [48, 79, 95, 111, 126, 142, 157, 173, 328], "lbuttjoint": [48, 331], "properli": [48, 79, 95, 111, 126, 142, 157, 173], "associ": [48, 72, 79, 95, 111, 126, 142, 157, 173, 232, 243, 247, 317, 333], "timberassembli": [48, 79, 111, 142, 330, 331], "top": [48, 58, 232, 334], "bottom": [48, 58, 232], "joint_typ": [48, 79, 95, 111, 126, 142, 157, 173, 231, 268], "reference_face_indic": 48, "dictionari": [48, 228, 241, 243, 245, 247], "refer": [48, 51, 58, 72, 90, 106, 121, 137, 152, 168, 184, 232, 331, 334, 335, 337, 341], "both": [48, 81, 113], "affect": [50, 65, 97, 128, 159, 175], "beamjoinningerror": [50, 65, 97, 128, 159, 175, 331], "whenev": [50, 65, 97, 128, 159, 175], "abl": [50, 65, 97, 128, 159, 175], "whether": [51, 317, 333, 342], "necessari": [51, 332, 335], "determin": [51, 251, 341], "machin": [51, 335], "new": [53, 67, 83, 99, 115, 130, 146, 161, 177, 332, 335, 338], "expect": [53, 67, 83, 99, 115, 130, 146, 161, 177], "been": [53, 67, 83, 99, 115, 130, 146, 161, 177, 317], "befor": [53, 67, 83, 99, 115, 130, 146, 161, 177, 342], "call": [53, 67, 72, 81, 83, 99, 113, 115, 130, 144, 146, 161, 177, 239, 274, 335, 338, 341], "code": [53, 67, 83, 99, 115, 130, 146, 161, 177, 329, 331], "doe": [53, 67, 83, 99, 115, 130, 146, 161, 177, 202, 227, 335, 338, 341], "verifi": [53, 67, 83, 99, 115, 130, 146, 161, 177, 282], "adjac": [53, 67, 83, 99, 115, 130, 146, 161, 177], "lie": [53, 67, 83, 99, 115, 130, 146, 161, 177], "allow": [53, 67, 83, 95, 99, 115, 126, 130, 146, 157, 161, 173, 177, 251, 252, 259, 261, 265, 282, 317], "them": [53, 67, 83, 99, 111, 115, 130, 146, 161, 177, 239, 329, 335, 337, 341], "respons": [53, 67, 83, 99, 115, 130, 146, 161, 177], "valueerror": [53, 67, 83, 99, 115, 130, 146, 161, 177], "less": [53, 67, 83, 99, 115, 130, 146, 161, 177, 271], "assemebli": [53, 67, 83, 99, 115, 130, 146, 161, 177], "jo": [53, 67, 83, 99, 115, 130, 146, 161, 177], "belong": [53, 67, 83, 99, 115, 130, 146, 161, 177], "whould": [53, 67, 83, 99, 115, 130, 146, 161, 177], "togeth": [53, 67, 83, 99, 115, 130, 146, 161, 177, 338], "static": [56, 57, 70, 71, 87, 88, 103, 104, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182], "ignore_end": [56, 57, 70, 71, 87, 88, 103, 104, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182], "Of": [56, 57, 70, 71, 87, 88, 103, 104, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182], "all": [56, 57, 70, 71, 87, 88, 103, 104, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182, 235, 282, 287, 289, 327, 333, 337], "whose": [56, 57, 70, 71, 87, 88, 103, 104, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182], "normal": [56, 57, 70, 71, 87, 88, 103, 104, 111, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182, 271], "most": [56, 57, 70, 71, 87, 88, 103, 104, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182], "orthogon": [56, 70, 87, 103, 119, 134, 150, 165, 181], "done": [56, 57, 70, 71, 87, 88, 103, 104, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182], "inner": [56, 57, 70, 71, 87, 88, 103, 104, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182], "product": [56, 57, 70, 71, 87, 88, 103, 104, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182], "centerlin": [56, 57, 70, 71, 87, 88, 103, 104, 111, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182, 271, 281, 283, 284, 334, 337, 338, 341, 343], "each": [56, 57, 63, 70, 71, 87, 88, 103, 104, 111, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182, 239, 282, 306, 335, 337, 341], "result": [56, 57, 70, 71, 87, 88, 103, 104, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182, 190, 191, 202, 213, 216, 227, 281, 316, 341], "closest": [56, 57, 70, 71, 87, 88, 103, 104, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182], "chosen": [56, 57, 70, 71, 87, 88, 103, 104, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182], "attach": [56, 57, 70, 71, 87, 88, 103, 104, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182, 248], "ignor": [56, 57, 70, 71, 87, 88, 103, 104, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182], "face_index": [56, 57, 70, 71, 87, 88, 103, 104, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182], "frame": [56, 57, 70, 71, 87, 88, 103, 104, 111, 119, 120, 134, 135, 142, 150, 151, 165, 166, 181, 182, 192, 232, 236, 237, 271, 317, 330, 331, 334, 336, 344], "index": [56, 57, 70, 71, 87, 88, 103, 104, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182, 232, 331, 342], "center": [56, 57, 70, 71, 87, 88, 103, 104, 119, 120, 134, 135, 150, 151, 165, 166, 181, 182, 328], "assemli": [58, 90, 106, 121, 137, 168, 184], "after": [58, 90, 106, 121, 137, 152, 168, 184, 190, 191, 202, 213, 216, 227], "de": [58, 72, 90, 106, 121, 137, 152, 168, 184], "serial": [58, 72, 90, 106, 121, 137, 152, 168, 184], "restor": [58, 72], "instanti": [63, 126, 239, 335], "directli": [63, 126], "respect": [63, 72, 341], "implement": [63, 72, 327, 331], "instead": [63, 338], "map": [63, 191, 334, 343], "ehich": 63, "To": [72, 332, 334, 335, 336, 341, 344], "avoid": [72, 341], "circular": 72, "store": [72, 337, 338], "sinc": 72, "concret": 72, "tbuttjoint": [72, 330, 331], "enumer": 77, "possibl": [77, 337], "topo_unknown": [77, 78], "topo_i": 77, "topo_l": [77, 78], "topo_t": [77, 78], "topo_x": [77, 78], "For": [78, 189, 305, 331, 343, 344], "log": [78, 305, 336], "One": [78, 305, 317], "butt": [79, 142, 242, 246], "trim": [79, 81, 95, 111, 113, 142, 144, 157, 173, 336, 340, 341], "main_beam": [79, 95, 126, 142, 157, 173, 330], "cross_beam": [79, 95, 126, 142, 157, 173, 330], "small_beam_butt": 79, "smaller": [79, 271, 338], "section": [79, 271, 283, 284, 329, 334, 338], "modify_cross": 79, "extend": [79, 273, 282], "opposit": [79, 111], "cut": [79, 95, 126, 157, 173, 192, 202, 236, 334, 336, 340, 341], "plane": [79, 111, 144, 192, 202, 203, 236, 282, 338, 340, 343], "reject_i": 79, "reject": 79, "requir": [81, 113, 235, 239, 273, 288, 332], "extens": [81, 113, 273, 282, 288], "resotr": [90, 106, 121, 137, 152, 168, 184], "lapjoint": [95, 157, 173, 331], "flip_lap_sid": [95, 126, 157, 173], "flip": [95, 126, 157, 173], "side": [95, 126, 157, 173, 271, 340, 341], "cut_plane_bia": [95, 126, 157, 173], "shift": [95, 126, 157, 173], "deeper": [95, 126, 157, 173], "without": [95, 126, 157, 173, 333], "complet": [95, 126, 157, 173], "through": [95, 126, 157, 173, 282, 328], "either": [95, 126, 157, 173, 281], "5": [95, 126, 157, 173, 271], "main_beam_kei": [95, 126, 157, 173], "cross_beam_kei": [95, 126, 157, 173], "miter": [111, 244, 245], "bisector": [111, 341], "cutting_plan": [111, 192], "abstract": [126, 336], "common": 126, "do": [126, 333, 335], "sub": 126, "along": [142, 157, 173, 271, 341], "length": [142, 157, 173, 203, 271, 283, 341], "anoth": [142, 157, 173], "cutting_plane_main": 142, "cutting_plane_cross": 142, "inflate_bi": [189, 327], "aabb": [189, 271], "enlarg": 189, "amount": [189, 273, 282, 327], "element": [189, 239, 281, 316, 317], "design": [189, 328, 331, 334, 337, 338], "regard": 189, "inflat": [189, 327], "pluggabl": 189, "In": [189, 331, 332, 341], "plugin": [189, 331, 338], "avail": [189, 287], "process": [190, 191, 202, 213, 216, 227, 230, 232, 234, 235, 236, 238, 239, 241, 243, 245, 247, 331, 334, 335, 344], "featureapplicationerror": [190, 202, 213, 227, 252, 331], "feature_map": 191, "featureappl": [191, 201, 212, 226, 331], "applic": [191, 215, 252], "beamgeometri": [191, 331], "made": [192, 203, 336], "cutfeatur": [201, 331], "beam_geometri": [201, 212, 214, 226], "brep": [201, 202, 212, 213, 226, 227, 331, 336, 340, 342, 343], "parametr": [203, 271, 331], "drill": [203, 213, 232], "hole": [203, 232, 334], "diamet": [203, 232], "depth": [203, 330], "drillfeatur": [212, 331], "volum": [213, 217, 227], "cannot": [214, 338], "feature_geometri": 214, "could": [214, 304], "modifi": [214, 333], "messag": 214, "mill": 217, "out": [217, 333], "polyhedron": 217, "millvolum": [226, 331], "histori": 228, "btlx_string": 228, "xml": [228, 229], "gh": [228, 229], "termin": [228, 229], "btlxpart": [228, 232, 236, 239, 241, 243, 245, 247, 335], "joint_factori": [231, 239, 335], "regist": 231, "correspond": [231, 271, 281, 337, 338, 343], "factori": [231, 239, 240, 242, 244, 246, 335], "jointfactori": 231, "is_top": [232, 233], "flag": 232, "process_typ": [232, 239, 335], "frenchridgelap": 232, "other_beam": 232, "drill_hole_diamet": 232, "ref_face_index": 232, "ref_fac": 232, "surfac": [232, 335], "header_attribut": [232, 239, 335], "header": 232, "process_paramet": [232, 239], "geometr": [232, 235, 239, 331, 335, 336, 340], "btlx": [232, 239, 331, 334], "degre": 232, "intern": [234, 238], "properti": 235, "It": [235, 331, 334, 336, 337, 338, 343], "ordereddict": 235, "maintain": [235, 331], "jack": 236, "joint_nam": [236, 237], "append": [239, 335], "btlx_process": [239, 335], "eg": 239, "btlxjackcut": [239, 331], "match": [239, 335], "describ": [239, 335], "deriv": [239, 335], "relat": [239, 252, 335], "some": [239, 334, 343], "combin": 239, "multipl": [239, 329, 335], "cover": 239, "register_joint": [239, 335], "so": [239, 333, 335], "typic": [239, 317, 335], "need": [239, 276, 335, 337, 344], "param": 239, "et_el": 239, "et": 239, "jointrul": [248, 256, 268], "categori": [248, 251, 337, 338, 341], "rule": [248, 250, 256, 258, 268, 270, 338, 341], "sort": 251, "accord": [251, 337, 341], "catergory_a": 251, "category_b": 251, "inspect": [252, 342], "beamjoiningerror": 252, "feature_error": 252, "joint_error": 252, "k": [256, 268], "link": 259, "delai": [259, 261, 265], "actual": [259, 261, 265, 281], "downstream": [259, 261, 265], "compon": [259, 261, 265, 332, 336, 337, 338, 342], "shall": [261, 333], "pass": [265, 268, 282], "keyword": [265, 268], "topology_typ": 268, "constant": 268, "stud": [271, 338], "slat": 271, "rectangular": [271, 338], "local": [271, 338, 342], "coordin": [271, 338, 342], "system": [271, 338, 342], "locat": [271, 317, 338], "start": [271, 273, 281, 282, 284, 334, 338], "major": [271, 338], "also": [271, 274, 328, 331, 334, 337, 338], "fibr": [271, 334], "solid": [271, 336], "wood": 271, "width": [271, 283, 284, 330, 337, 338], "dimens": [271, 338], "height": [271, 283, 284, 330, 337, 338], "larger": [271, 338], "shape": [271, 338], "blank": [271, 273, 288], "materi": [271, 343], "stock": 271, "produc": 271, "6": 271, "equal": 271, "posit": [271, 340, 341], "2": [271, 330, 335], "3": [271, 332, 335], "4": [271, 330, 335], "line": [271, 283, 331, 337, 338], "centerline_start": 271, "centerline_end": 271, "xmin": 271, "ymin": 271, "zmin": 271, "xmax": 271, "ymax": 271, "zmax": 271, "long_edg": 271, "long": [271, 282], "midpoint": 271, "middl": 271, "well": 273, "user": [274, 337], "must": 274, "apply_featur": 274, "z_axi": 276, "definit": [276, 335, 336], "todo": [276, 282], "Not": 276, "anywher": 276, "features_to_clear": 277, "endpoint": [281, 284], "closer": 281, "interest": 281, "depend": [281, 283, 284, 332, 335, 342], "pln": 282, "metric": 282, "minimum": 282, "z_vector": [283, 284], "worldz": [283, 284], "worldx": [283, 284], "point_start": 284, "point_end": 284, "end_point": 284, "with_featur": 287, "drawn": [287, 338], "scene": 287, "enum": 304, "execut": [304, 317, 329], "instruct": [304, 306, 317], "human": [305, 317], "robot": [305, 317], "build": [306, 316, 317, 332, 344], "step": [306, 308, 316, 331, 335], "simpl": [316, 331, 334], "sequenc": [316, 331], "per": 316, "buildingplan": [316, 331], "assembl": 317, "singl": [317, 335], "actor": [317, 331], "element_id": 317, "cad": [317, 329], "id": [317, 329], "elements_held": 317, "held": 317, "support": [317, 328, 329], "is_built": 317, "is_plan": 317, "increment": 317, "cylind": 317, "prioriti": 317, "parallel": [317, 338], "prior": 327, "research": [328, 331, 333], "project": [328, 331], "develop": [328, 331], "aleksandra": 328, "apolinarska": 328, "chen": 328, "kasir": 328, "gonzalo": 328, "casa": 328, "gramazio": [328, 331, 333], "kohler": [328, 331, 333], "eth": [328, 331], "zurich": [328, 331], "swiss": 328, "nation": 328, "scienc": 328, "foundat": 328, "compet": 328, "digit": 328, "nccr": 328, "dfab": 328, "programm": 328, "As": 328, "open": [328, 331], "mani": [328, 329, 331], "contributor": 328, "you": [328, 334, 338, 341, 344], "your": 328, "work": 328, "acknowledg": 328, "misc": 328, "titl": 328, "librari": [328, 329, 331, 334], "author": [328, 333], "anna": 328, "http": [328, 332, 335], "github": [328, 332], "com": [328, 332, 335], "gramaziokohl": 328, "year": 328, "2022": 328, "2023": 328, "doi": 328, "10": [328, 332], "5281": 328, "zenodo": 328, "7934267": 328, "url": 328, "present": 329, "differ": [329, 335, 341, 344], "concept": [329, 334], "There": [329, 337], "wai": 329, "run": [329, 331], "python": [329, 331, 332, 334], "environ": [329, 331, 332], "interact": 329, "session": 329, "text": 329, "editor": 329, "sublim": 329, "studio": 329, "eclips": 329, "insid": 329, "blender": 329, "worldxi": 330, "geometry_typ": 330, "add_beam": 330, "packag": [331, 332, 335], "model": 331, "written": 331, "ecosystem": 331, "rhinocero": 331, "3d": 331, "plug": 331, "activ": [331, 332, 336, 338, 343], "being": 331, "continu": 331, "At": 331, "stage": 331, "encompass": 331, "fast": 331, "intuit": 331, "custom": [331, 337], "entiti": 331, "semant": 331, "futur": 331, "expand": 331, "entail": [331, 337], "interfac": 331, "analysi": 331, "softwar": [331, 333], "specialist": 331, "built": [331, 334], "upon": 331, "framework": 331, "basic": 331, "like": [331, 334, 336], "complex": 331, "resolv": 331, "backend": 331, "rhinocommon": 331, "sdk": 331, "handl": 331, "opencascad": 331, "via": 331, "occ": 331, "introduct": 331, "instal": 331, "api": [331, 334], "connectionsolv": 331, "frenchridgelapjoint": 331, "lhalflapjoint": 331, "lmiterjoint": 331, "thalflapjoint": 331, "xhalflapjoint": 331, "find_neighboring_beam": 331, "brepgeometryconsum": 331, "cutfeaturegeometri": 331, "drillfeaturegeometri": 331, "millvolumegeometri": 331, "btlxprocess": [331, 335], "btlxfrenchridgelap": 331, "lbuttfactori": 331, "tbuttfactori": 331, "lmiterfactori": 331, "frenchridgefactori": 331, "simplesequencegener": 331, "jointdefinit": 331, "categoryrul": 331, "topologyrul": 331, "directrul": 331, "featuredefinit": 331, "jointopt": 331, "debuginfom": 331, "workflow": [331, 334, 337, 338], "show": [331, 334], "util": [331, 334], "contribut": [331, 334], "licens": 331, "cite": 331, "conda": 332, "n": 332, "myenvnam": 332, "ye": [332, 341], "7": 332, "m": 332, "compas_rhino": 332, "v7": 332, "latest": 332, "fork": 332, "repositori": 332, "clone": 332, "git": 332, "yourgithub_usernam": 332, "cd": 332, "edit": 332, "mode": 332, "dev": 332, "txt": 332, "invok": 332, "ghuser": 332, "mit": 333, "copyright": 333, "c": 333, "2020": 333, "02": 333, "17": 333, "permiss": 333, "herebi": 333, "grant": 333, "free": 333, "charg": 333, "person": 333, "obtain": 333, "document": [333, 335, 337, 338, 343], "deal": 333, "restrict": 333, "limit": 333, "right": 333, "merg": 333, "publish": 333, "distribut": 333, "sublicens": 333, "sell": 333, "permit": 333, "whom": 333, "furnish": 333, "subject": 333, "follow": [333, 334, 335], "condit": 333, "abov": 333, "notic": 333, "substanti": 333, "portion": 333, "THE": 333, "AS": 333, "warranti": 333, "OF": 333, "kind": 333, "express": 333, "OR": 333, "impli": [333, 336], "BUT": 333, "NOT": 333, "TO": 333, "merchant": 333, "fit": 333, "FOR": 333, "particular": 333, "purpos": 333, "AND": 333, "noninfring": 333, "IN": 333, "NO": 333, "event": 333, "holder": 333, "BE": 333, "liabl": 333, "claim": 333, "damag": 333, "liabil": 333, "action": 333, "contract": 333, "tort": 333, "aris": 333, "WITH": 333, "easi": 334, "autom": [334, 341], "bake": 334, "textur": [334, 343], "render": [334, 343], "boolean": [334, 336, 340], "style": 334, "planar": [334, 341], "might": 334, "componen": 334, "detail": 334, "overal": 334, "idea": 334, "how": [334, 341], "Then": [334, 341], "explain": 334, "requr": 335, "here": [335, 339, 341, 343], "design2machin": 335, "btlx_2_1_0": 335, "pdf": 335, "process_param": 335, "where": [335, 338, 343], "btlxjoint": 335, "__init__": 335, "py": 335, "mind": 335, "oper": [336, 340], "subtract": [336, 340], "computation": 336, "expens": 336, "disabl": 336, "applyfeatur": 336, "unsuccess": 336, "showassembli": [336, 342], "group": 337, "intend": [337, 338], "hybrid": 337, "encod": 337, "concaten": 337, "colon": 337, "separ": 337, "entri": [337, 344], "underscor": 337, "_": 337, "attr1nam": 337, "attr1value_attr2nam": 337, "attr2valu": 337, "four": [337, 341], "standard": 337, "zvector": [337, 338], "setstandardattribut": 337, "write": [337, 338], "readstandardattribut": 337, "read": 337, "checkstandardattribut": 337, "correctli": 337, "miss": 337, "retriev": 337, "later": [337, 338, 341], "filter": 337, "criteria": 337, "These": 337, "deleteattribut": 337, "setcustomattribut": 337, "readallattribut": 337, "linear": [338, 341], "straight": 338, "rafter": 338, "joist": 338, "beamfromcurv": 338, "form": [338, 341], "linecurv": 338, "beamfromcurveguid": 338, "referenc": 338, "around": 338, "li": [338, 343], "sai": 338, "perpendicular": 338, "world": 338, "vertic": 338, "convent": 338, "jointcategoryrul": [338, 341], "automaticjoint": 338, "updaterefobj": 338, "onc": 338, "preview": [338, 342], "extract": [338, 342], "demo": 339, "ly": 340, "three": 341, "prefix": 341, "rel": 341, "we": 341, "distinguish": 341, "topolog": 341, "situat": 341, "splice": 341, "co": 341, "corner": 341, "meet": 341, "select": 341, "addition": 341, "clean": 341, "serv": [341, 343], "cata": 341, "catb": 341, "thing": 341, "everi": 341, "tri": 341, "unintend": 341, "maxdist": 341, "exactli": 341, "certain": 341, "000001": 341, "showbeam": 342, "showbeamfram": 342, "showbeamindex": 342, "showjointtyp": 342, "bakewithboxmap": 343, "layer": 343, "desir": 343, "random": 343, "deviat": 343, "mapsiz": 343, "adjust": 343, "size": 343, "imag": 343, "ratio": 343, "bitmap": 343, "care": 344, "final": 344, "matter": 344, "last": 344, "earlier": 344}, "objects": {"compas_timber.assembly": [[9, 0, 1, "", "TimberAssembly"]], "compas_timber.assembly.TimberAssembly": [[10, 1, 1, "", "ToString"], [11, 1, 1, "", "add_beam"], [12, 1, 1, "", "add_connection"], [13, 1, 1, "", "add_joint"], [14, 1, 1, "", "add_part"], [15, 1, 1, "", "are_parts_joined"], [16, 1, 1, "", "compute_aabb"], [17, 1, 1, "", "compute_obb"], [18, 1, 1, "", "connections"], [19, 1, 1, "", "contains"], [20, 1, 1, "", "copy"], [21, 1, 1, "", "delete_connection"], [22, 1, 1, "", "delete_part"], [23, 1, 1, "", "find"], [24, 1, 1, "", "find_by_key"], [25, 1, 1, "", "from_json"], [26, 1, 1, "", "from_jsonstring"], [27, 1, 1, "", "parts"], [28, 1, 1, "", "remove_joint"], [29, 1, 1, "", "rotate"], [30, 1, 1, "", "rotated"], [31, 1, 1, "", "scale"], [32, 1, 1, "", "scaled"], [33, 1, 1, "", "set_topologies"], [34, 1, 1, "", "sha256"], [35, 1, 1, "", "to_json"], [36, 1, 1, "", "to_jsonstring"], [37, 1, 1, "", "transform"], [38, 1, 1, "", "transform_numpy"], [39, 1, 1, "", "transformed"], [40, 1, 1, "", "transformed_numpy"], [41, 1, 1, "", "translate"], [42, 1, 1, "", "translated"], [43, 1, 1, "", "validate_data"]], "compas_timber.connections": [[44, 2, 1, "", "BeamJoinningError"], [45, 0, 1, "", "ConnectionSolver"], [48, 0, 1, "", "FrenchRidgeLapJoint"], [63, 0, 1, "", "Joint"], [77, 0, 1, "", "JointTopology"], [79, 0, 1, "", "LButtJoint"], [95, 0, 1, "", "LHalfLapJoint"], [111, 0, 1, "", "LMiterJoint"], [126, 0, 1, "", "LapJoint"], [142, 0, 1, "", "TButtJoint"], [157, 0, 1, "", "THalfLapJoint"], [173, 0, 1, "", "XHalfLapJoint"], [189, 3, 1, "", "find_neighboring_beams"]], "compas_timber.connections.ConnectionSolver": [[46, 1, 1, "", "find_intersecting_pairs"], [47, 1, 1, "", "find_topology"]], "compas_timber.connections.FrenchRidgeLapJoint": [[49, 1, 1, "", "ToString"], [50, 1, 1, "", "add_features"], [51, 1, 1, "", "check_geometry"], [52, 1, 1, "", "copy"], [53, 1, 1, "", "create"], [54, 1, 1, "", "from_json"], [55, 1, 1, "", "from_jsonstring"], [56, 1, 1, "", "get_face_most_ortho_to_beam"], [57, 1, 1, "", "get_face_most_towards_beam"], [58, 1, 1, "", "restore_beams_from_keys"], [59, 1, 1, "", "sha256"], [60, 1, 1, "", "to_json"], [61, 1, 1, "", "to_jsonstring"], [62, 1, 1, "", "validate_data"]], "compas_timber.connections.Joint": [[64, 1, 1, "", "ToString"], [65, 1, 1, "", "add_features"], [66, 1, 1, "", "copy"], [67, 1, 1, "", "create"], [68, 1, 1, "", "from_json"], [69, 1, 1, "", "from_jsonstring"], [70, 1, 1, "", "get_face_most_ortho_to_beam"], [71, 1, 1, "", "get_face_most_towards_beam"], [72, 1, 1, "", "restore_beams_from_keys"], [73, 1, 1, "", "sha256"], [74, 1, 1, "", "to_json"], [75, 1, 1, "", "to_jsonstring"], [76, 1, 1, "", "validate_data"]], "compas_timber.connections.JointTopology": [[78, 1, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[80, 1, 1, "", "ToString"], [81, 1, 1, "", "add_features"], [82, 1, 1, "", "copy"], [83, 1, 1, "", "create"], [84, 1, 1, "", "from_json"], [85, 1, 1, "", "from_jsonstring"], [86, 1, 1, "", "get_cross_cutting_plane"], [87, 1, 1, "", "get_face_most_ortho_to_beam"], [88, 1, 1, "", "get_face_most_towards_beam"], [89, 1, 1, "", "get_main_cutting_plane"], [90, 1, 1, "", "restore_beams_from_keys"], [91, 1, 1, "", "sha256"], [92, 1, 1, "", "to_json"], [93, 1, 1, "", "to_jsonstring"], [94, 1, 1, "", "validate_data"]], "compas_timber.connections.LHalfLapJoint": [[96, 1, 1, "", "ToString"], [97, 1, 1, "", "add_features"], [98, 1, 1, "", "copy"], [99, 1, 1, "", "create"], [100, 1, 1, "", "from_json"], [101, 1, 1, "", "from_jsonstring"], [102, 1, 1, "", "get_cross_cutting_frame"], [103, 1, 1, "", "get_face_most_ortho_to_beam"], [104, 1, 1, "", "get_face_most_towards_beam"], [105, 1, 1, "", "get_main_cutting_frame"], [106, 1, 1, "", "restore_beams_from_keys"], [107, 1, 1, "", "sha256"], [108, 1, 1, "", "to_json"], [109, 1, 1, "", "to_jsonstring"], [110, 1, 1, "", "validate_data"]], "compas_timber.connections.LMiterJoint": [[112, 1, 1, "", "ToString"], [113, 1, 1, "", "add_features"], [114, 1, 1, "", "copy"], [115, 1, 1, "", "create"], [116, 1, 1, "", "from_json"], [117, 1, 1, "", "from_jsonstring"], [118, 1, 1, "", "get_cutting_planes"], [119, 1, 1, "", "get_face_most_ortho_to_beam"], [120, 1, 1, "", "get_face_most_towards_beam"], [121, 1, 1, "", "restore_beams_from_keys"], [122, 1, 1, "", "sha256"], [123, 1, 1, "", "to_json"], [124, 1, 1, "", "to_jsonstring"], [125, 1, 1, "", "validate_data"]], "compas_timber.connections.LapJoint": [[127, 1, 1, "", "ToString"], [128, 1, 1, "", "add_features"], [129, 1, 1, "", "copy"], [130, 1, 1, "", "create"], [131, 1, 1, "", "from_json"], [132, 1, 1, "", "from_jsonstring"], [133, 1, 1, "", "get_cross_cutting_frame"], [134, 1, 1, "", "get_face_most_ortho_to_beam"], [135, 1, 1, "", "get_face_most_towards_beam"], [136, 1, 1, "", "get_main_cutting_frame"], [137, 1, 1, "", "restore_beams_from_keys"], [138, 1, 1, "", "sha256"], [139, 1, 1, "", "to_json"], [140, 1, 1, "", "to_jsonstring"], [141, 1, 1, "", "validate_data"]], "compas_timber.connections.TButtJoint": [[143, 1, 1, "", "ToString"], [144, 1, 1, "", "add_features"], [145, 1, 1, "", "copy"], [146, 1, 1, "", "create"], [147, 1, 1, "", "from_json"], [148, 1, 1, "", "from_jsonstring"], [149, 1, 1, "", "get_cutting_plane"], [150, 1, 1, "", "get_face_most_ortho_to_beam"], [151, 1, 1, "", "get_face_most_towards_beam"], [152, 1, 1, "", "restore_beams_from_keys"], [153, 1, 1, "", "sha256"], [154, 1, 1, "", "to_json"], [155, 1, 1, "", "to_jsonstring"], [156, 1, 1, "", "validate_data"]], "compas_timber.connections.THalfLapJoint": [[158, 1, 1, "", "ToString"], [159, 1, 1, "", "add_features"], [160, 1, 1, "", "copy"], [161, 1, 1, "", "create"], [162, 1, 1, "", "from_json"], [163, 1, 1, "", "from_jsonstring"], [164, 1, 1, "", "get_cross_cutting_frame"], [165, 1, 1, "", "get_face_most_ortho_to_beam"], [166, 1, 1, "", "get_face_most_towards_beam"], [167, 1, 1, "", "get_main_cutting_frame"], [168, 1, 1, "", "restore_beams_from_keys"], [169, 1, 1, "", "sha256"], [170, 1, 1, "", "to_json"], [171, 1, 1, "", "to_jsonstring"], [172, 1, 1, "", "validate_data"]], "compas_timber.connections.XHalfLapJoint": [[174, 1, 1, "", "ToString"], [175, 1, 1, "", "add_features"], [176, 1, 1, "", "copy"], [177, 1, 1, "", "create"], [178, 1, 1, "", "from_json"], [179, 1, 1, "", "from_jsonstring"], [180, 1, 1, "", "get_cross_cutting_frame"], [181, 1, 1, "", "get_face_most_ortho_to_beam"], [182, 1, 1, "", "get_face_most_towards_beam"], [183, 1, 1, "", "get_main_cutting_frame"], [184, 1, 1, "", "restore_beams_from_keys"], [185, 1, 1, "", "sha256"], [186, 1, 1, "", "to_json"], [187, 1, 1, "", "to_jsonstring"], [188, 1, 1, "", "validate_data"]], "compas_timber.consumers": [[190, 0, 1, "", "BeamGeometry"], [191, 0, 1, "", "BrepGeometryConsumer"], [192, 0, 1, "", "CutFeature"], [201, 0, 1, "", "CutFeatureGeometry"], [203, 0, 1, "", "DrillFeature"], [212, 0, 1, "", "DrillFeatureGeometry"], [214, 2, 1, "", "FeatureApplicationError"], [215, 0, 1, "", "FeatureApplicator"], [217, 0, 1, "", "MillVolume"], [226, 0, 1, "", "MillVolumeGeometry"]], "compas_timber.consumers.CutFeature": [[193, 1, 1, "", "ToString"], [194, 1, 1, "", "copy"], [195, 1, 1, "", "from_json"], [196, 1, 1, "", "from_jsonstring"], [197, 1, 1, "", "sha256"], [198, 1, 1, "", "to_json"], [199, 1, 1, "", "to_jsonstring"], [200, 1, 1, "", "validate_data"]], "compas_timber.consumers.CutFeatureGeometry": [[202, 1, 1, "", "apply"]], "compas_timber.consumers.DrillFeature": [[204, 1, 1, "", "ToString"], [205, 1, 1, "", "copy"], [206, 1, 1, "", "from_json"], [207, 1, 1, "", "from_jsonstring"], [208, 1, 1, "", "sha256"], [209, 1, 1, "", "to_json"], [210, 1, 1, "", "to_jsonstring"], [211, 1, 1, "", "validate_data"]], "compas_timber.consumers.DrillFeatureGeometry": [[213, 1, 1, "", "apply"]], "compas_timber.consumers.FeatureApplicator": [[216, 1, 1, "", "apply"]], "compas_timber.consumers.MillVolume": [[218, 1, 1, "", "ToString"], [219, 1, 1, "", "copy"], [220, 1, 1, "", "from_json"], [221, 1, 1, "", "from_jsonstring"], [222, 1, 1, "", "sha256"], [223, 1, 1, "", "to_json"], [224, 1, 1, "", "to_jsonstring"], [225, 1, 1, "", "validate_data"]], "compas_timber.consumers.MillVolumeGeometry": [[227, 1, 1, "", "apply"]], "compas_timber.fabrication": [[228, 0, 1, "", "BTLx"], [232, 0, 1, "", "BTLxFrenchRidgeLap"], [236, 0, 1, "", "BTLxJackCut"], [239, 0, 1, "", "BTLxProcess"], [240, 0, 1, "", "FrenchRidgeFactory"], [242, 0, 1, "", "LButtFactory"], [244, 0, 1, "", "LMiterFactory"], [246, 0, 1, "", "TButtFactory"]], "compas_timber.fabrication.BTLx": [[229, 1, 1, "", "btlx_string"], [230, 1, 1, "", "process_assembly"], [231, 1, 1, "", "register_joint"]], "compas_timber.fabrication.BTLxFrenchRidgeLap": [[233, 1, 1, "", "create_process"], [234, 1, 1, "", "get_params"], [235, 1, 1, "", "process_joints"]], "compas_timber.fabrication.BTLxJackCut": [[237, 1, 1, "", "create_process"], [238, 1, 1, "", "generate_process"]], "compas_timber.fabrication.FrenchRidgeFactory": [[241, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.LButtFactory": [[243, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.LMiterFactory": [[245, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.TButtFactory": [[247, 1, 1, "", "apply_processings"]], "compas_timber.ghpython": [[248, 0, 1, "", "CategoryRule"], [252, 0, 1, "", "DebugInfomation"], [256, 0, 1, "", "DirectRule"], [259, 0, 1, "", "FeatureDefinition"], [261, 0, 1, "", "JointDefinition"], [265, 0, 1, "", "JointOptions"], [268, 0, 1, "", "TopologyRule"]], "compas_timber.ghpython.CategoryRule": [[249, 1, 1, "", "ToString"], [250, 1, 1, "", "comply"], [251, 1, 1, "", "reorder"]], "compas_timber.ghpython.DebugInfomation": [[253, 1, 1, "", "ToString"], [254, 1, 1, "", "add_feature_error"], [255, 1, 1, "", "add_joint_error"]], "compas_timber.ghpython.DirectRule": [[257, 1, 1, "", "ToString"], [258, 1, 1, "", "comply"]], "compas_timber.ghpython.FeatureDefinition": [[260, 1, 1, "", "ToString"]], "compas_timber.ghpython.JointDefinition": [[262, 1, 1, "", "ToString"], [263, 1, 1, "", "is_identical"], [264, 1, 1, "", "match"]], "compas_timber.ghpython.JointOptions": [[266, 1, 1, "", "ToString"], [267, 1, 1, "", "is_identical"]], "compas_timber.ghpython.TopologyRule": [[269, 1, 1, "", "ToString"], [270, 1, 1, "", "comply"]], "compas_timber.parts": [[271, 0, 1, "", "Beam"]], "compas_timber.parts.Beam": [[272, 1, 1, "", "ToString"], [273, 1, 1, "", "add_blank_extension"], [274, 1, 1, "", "add_feature"], [275, 1, 1, "", "add_features"], [276, 1, 1, "", "align_z"], [277, 1, 1, "", "clear_features"], [278, 1, 1, "", "compute_aabb"], [279, 1, 1, "", "compute_obb"], [280, 1, 1, "", "copy"], [281, 1, 1, "", "endpoint_closest_to_point"], [282, 1, 1, "", "extension_to_plane"], [283, 1, 1, "", "from_centerline"], [284, 1, 1, "", "from_endpoints"], [285, 1, 1, "", "from_json"], [286, 1, 1, "", "from_jsonstring"], [287, 1, 1, "", "get_geometry"], [288, 1, 1, "", "remove_blank_extension"], [289, 1, 1, "", "remove_features"], [290, 1, 1, "", "rotate"], [291, 1, 1, "", "rotated"], [292, 1, 1, "", "scale"], [293, 1, 1, "", "scaled"], [294, 1, 1, "", "sha256"], [295, 1, 1, "", "to_json"], [296, 1, 1, "", "to_jsonstring"], [297, 1, 1, "", "transform"], [298, 1, 1, "", "transform_numpy"], [299, 1, 1, "", "transformed"], [300, 1, 1, "", "transformed_numpy"], [301, 1, 1, "", "translate"], [302, 1, 1, "", "translated"], [303, 1, 1, "", "validate_data"]], "compas_timber.planning": [[304, 0, 1, "", "Actor"], [306, 0, 1, "", "BuildingPlan"], [316, 0, 1, "", "SimpleSequenceGenerator"], [317, 0, 1, "", "Step"]], "compas_timber.planning.Actor": [[305, 1, 1, "", "get_name"]], "compas_timber.planning.BuildingPlan": [[307, 1, 1, "", "ToString"], [308, 1, 1, "", "add_step"], [309, 1, 1, "", "copy"], [310, 1, 1, "", "from_json"], [311, 1, 1, "", "from_jsonstring"], [312, 1, 1, "", "sha256"], [313, 1, 1, "", "to_json"], [314, 1, 1, "", "to_jsonstring"], [315, 1, 1, "", "validate_data"]], "compas_timber.planning.Step": [[318, 1, 1, "", "ToString"], [319, 1, 1, "", "copy"], [320, 1, 1, "", "from_json"], [321, 1, 1, "", "from_jsonstring"], [322, 1, 1, "", "sha256"], [323, 1, 1, "", "to_json"], [324, 1, 1, "", "to_jsonstring"], [325, 1, 1, "", "transform"], [326, 1, 1, "", "validate_data"]], "compas_timber.rhino": [[327, 3, 1, "", "find_neighboring_beams"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:exception", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "exception", "Python exception"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "packag": 0, "compas_timb": [1, 2, 3, 4, 5, 6, 7], "assembli": [1, 329, 336], "class": [1, 2, 3, 4, 5, 6, 7], "connect": [2, 18], "function": 2, "except": 2, "consum": 3, "fabric": 4, "ghpython": 5, "part": [6, 27], "plan": 7, "rhino": 8, "plugin": [8, 334], "timberassembli": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "tostr": [10, 49, 64, 80, 96, 112, 127, 143, 158, 174, 193, 204, 218, 249, 253, 257, 260, 262, 266, 269, 272, 307, 318], "add_beam": 11, "add_connect": 12, "add_joint": 13, "add_part": 14, "are_parts_join": 15, "compute_aabb": [16, 278], "compute_obb": [17, 279], "contain": 19, "copi": [20, 52, 66, 82, 98, 114, 129, 145, 160, 176, 194, 205, 219, 280, 309, 319], "delete_connect": 21, "delete_part": 22, "find": 23, "find_by_kei": 24, "from_json": [25, 54, 68, 84, 100, 116, 131, 147, 162, 178, 195, 206, 220, 285, 310, 320], "from_jsonstr": [26, 55, 69, 85, 101, 117, 132, 148, 163, 179, 196, 207, 221, 286, 311, 321], "remove_joint": 28, "rotat": [29, 30, 290, 291], "scale": [31, 32, 292, 293], "set_topologi": 33, "sha256": [34, 59, 73, 91, 107, 122, 138, 153, 169, 185, 197, 208, 222, 294, 312, 322], "to_json": [35, 60, 74, 92, 108, 123, 139, 154, 170, 186, 198, 209, 223, 295, 313, 323], "to_jsonstr": [36, 61, 75, 93, 109, 124, 140, 155, 171, 187, 199, 210, 224, 296, 314, 324], "transform": [37, 39, 297, 299, 325], "transform_numpi": [38, 298], "transformed_numpi": [40, 300], "translat": [41, 42, 301, 302], "validate_data": [43, 62, 76, 94, 110, 125, 141, 156, 172, 188, 200, 211, 225, 303, 315, 326], "beamjoinningerror": 44, "connectionsolv": [45, 46, 47], "find_intersecting_pair": 46, "find_topologi": 47, "frenchridgelapjoint": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "add_featur": [50, 65, 81, 97, 113, 128, 144, 159, 175, 274, 275], "check_geometri": 51, "creat": [53, 67, 83, 99, 115, 130, 146, 161, 177, 330], "get_face_most_ortho_to_beam": [56, 70, 87, 103, 119, 134, 150, 165, 181], "get_face_most_towards_beam": [57, 71, 88, 104, 120, 135, 151, 166, 182], "restore_beams_from_kei": [58, 72, 90, 106, 121, 137, 152, 168, 184], "joint": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 330, 341], "jointtopologi": [77, 78], "get_nam": [78, 305], "lbuttjoint": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "get_cross_cutting_plan": 86, "get_main_cutting_plan": 89, "lhalflapjoint": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "get_cross_cutting_fram": [102, 133, 164, 180], "get_main_cutting_fram": [105, 136, 167, 183], "lmiterjoint": [111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "get_cutting_plan": [118, 149], "lapjoint": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "tbuttjoint": [142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "thalflapjoint": [157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "xhalflapjoint": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], "find_neighboring_beam": [189, 327], "beamgeometri": 190, "brepgeometryconsum": 191, "cutfeatur": [192, 193, 194, 195, 196, 197, 198, 199, 200], "cutfeaturegeometri": [201, 202], "appli": [202, 213, 216, 227], "drillfeatur": [203, 204, 205, 206, 207, 208, 209, 210, 211], "drillfeaturegeometri": [212, 213], "featureapplicationerror": 214, "featureappl": [215, 216], "millvolum": [217, 218, 219, 220, 221, 222, 223, 224, 225], "millvolumegeometri": [226, 227], "btlx": [228, 229, 230, 231, 335], "btlx_string": 229, "process_assembli": 230, "register_joint": 231, "btlxfrenchridgelap": [232, 233, 234, 235], "create_process": [233, 237], "get_param": 234, "process_joint": 235, "btlxjackcut": [236, 237, 238], "generate_process": 238, "btlxprocess": 239, "frenchridgefactori": [240, 241], "apply_process": [241, 243, 245, 247], "lbuttfactori": [242, 243], "lmiterfactori": [244, 245], "tbuttfactori": [246, 247], "categoryrul": [248, 249, 250, 251], "compli": [250, 258, 270], "reorder": 251, "debuginfom": [252, 253, 254, 255], "add_feature_error": 254, "add_joint_error": 255, "directrul": [256, 257, 258], "featuredefinit": [259, 260], "jointdefinit": [261, 262, 263, 264], "is_ident": [263, 267], "match": 264, "jointopt": [265, 266, 267], "topologyrul": [268, 269, 270], "beam": [271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 338], "add_blank_extens": 273, "align_z": 276, "clear_featur": 277, "endpoint_closest_to_point": 281, "extension_to_plan": 282, "from_centerlin": 283, "from_endpoint": 284, "get_geometri": 287, "remove_blank_extens": 288, "remove_featur": 289, "actor": [304, 305], "buildingplan": [306, 307, 308, 309, 310, 311, 312, 313, 314, 315], "add_step": 308, "simplesequencegener": 316, "step": [317, 318, 319, 320, 321, 322, 323, 324, 325, 326], "cite": 328, "exampl": [329, 339], "timber": [329, 331], "compa": 331, "depend": 331, "tabl": 331, "content": 331, "indic": 331, "instal": 332, "stabl": 332, "pip": 332, "develop": 332, "licens": 333, "grasshopp": 334, "contribut": 335, "guid": 335, "attribut": 337, "featur": 340, "topologi": 341, "compon": 341, "t": 341, "butt": 341, "l": 341, "miter": 341, "automaticjoint": 341, "wizzard": 341, "show": 342, "util": 343, "bake": 343, "boxmap": 343, "workflow": 344}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Packages": [[0, "packages"]], "compas_timber.assembly": [[1, "compas-timber-assembly"]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [7, "classes"]], "compas_timber.connections": [[2, "compas-timber-connections"]], "Functions": [[2, "functions"]], "Exceptions": [[2, "exceptions"]], "compas_timber.consumers": [[3, "compas-timber-consumers"]], "compas_timber.fabrication": [[4, "compas-timber-fabrication"]], "compas_timber.ghpython": [[5, "compas-timber-ghpython"]], "compas_timber.parts": [[6, "compas-timber-parts"]], "compas_timber.planning": [[7, "compas-timber-planning"]], "rhino": [[8, "rhino"]], "Plugins": [[8, "plugins"]], "TimberAssembly": [[9, "timberassembly"]], "TimberAssembly.ToString": [[10, "timberassembly-tostring"]], "TimberAssembly.add_beam": [[11, "timberassembly-add-beam"]], "TimberAssembly.add_connection": [[12, "timberassembly-add-connection"]], "TimberAssembly.add_joint": [[13, "timberassembly-add-joint"]], "TimberAssembly.add_part": [[14, "timberassembly-add-part"]], "TimberAssembly.are_parts_joined": [[15, "timberassembly-are-parts-joined"]], "TimberAssembly.compute_aabb": [[16, "timberassembly-compute-aabb"]], "TimberAssembly.compute_obb": [[17, "timberassembly-compute-obb"]], "TimberAssembly.connections": [[18, "timberassembly-connections"]], "TimberAssembly.contains": [[19, "timberassembly-contains"]], "TimberAssembly.copy": [[20, "timberassembly-copy"]], "TimberAssembly.delete_connection": [[21, "timberassembly-delete-connection"]], "TimberAssembly.delete_part": [[22, "timberassembly-delete-part"]], "TimberAssembly.find": [[23, "timberassembly-find"]], "TimberAssembly.find_by_key": [[24, "timberassembly-find-by-key"]], "TimberAssembly.from_json": [[25, "timberassembly-from-json"]], "TimberAssembly.from_jsonstring": [[26, "timberassembly-from-jsonstring"]], "TimberAssembly.parts": [[27, "timberassembly-parts"]], "TimberAssembly.remove_joint": [[28, "timberassembly-remove-joint"]], "TimberAssembly.rotate": [[29, "timberassembly-rotate"]], "TimberAssembly.rotated": [[30, "timberassembly-rotated"]], "TimberAssembly.scale": [[31, "timberassembly-scale"]], "TimberAssembly.scaled": [[32, "timberassembly-scaled"]], "TimberAssembly.set_topologies": [[33, "timberassembly-set-topologies"]], "TimberAssembly.sha256": [[34, "timberassembly-sha256"]], "TimberAssembly.to_json": [[35, "timberassembly-to-json"]], "TimberAssembly.to_jsonstring": [[36, "timberassembly-to-jsonstring"]], "TimberAssembly.transform": [[37, "timberassembly-transform"]], "TimberAssembly.transform_numpy": [[38, "timberassembly-transform-numpy"]], "TimberAssembly.transformed": [[39, "timberassembly-transformed"]], "TimberAssembly.transformed_numpy": [[40, "timberassembly-transformed-numpy"]], "TimberAssembly.translate": [[41, "timberassembly-translate"]], "TimberAssembly.translated": [[42, "timberassembly-translated"]], "TimberAssembly.validate_data": [[43, "timberassembly-validate-data"]], "BeamJoinningError": [[44, "beamjoinningerror"]], "ConnectionSolver": [[45, "connectionsolver"]], "ConnectionSolver.find_intersecting_pairs": [[46, "connectionsolver-find-intersecting-pairs"]], "ConnectionSolver.find_topology": [[47, "connectionsolver-find-topology"]], "FrenchRidgeLapJoint": [[48, "frenchridgelapjoint"]], "FrenchRidgeLapJoint.ToString": [[49, "frenchridgelapjoint-tostring"]], "FrenchRidgeLapJoint.add_features": [[50, "frenchridgelapjoint-add-features"]], "FrenchRidgeLapJoint.check_geometry": [[51, "frenchridgelapjoint-check-geometry"]], "FrenchRidgeLapJoint.copy": [[52, "frenchridgelapjoint-copy"]], "FrenchRidgeLapJoint.create": [[53, "frenchridgelapjoint-create"]], "FrenchRidgeLapJoint.from_json": [[54, "frenchridgelapjoint-from-json"]], "FrenchRidgeLapJoint.from_jsonstring": [[55, "frenchridgelapjoint-from-jsonstring"]], "FrenchRidgeLapJoint.get_face_most_ortho_to_beam": [[56, "frenchridgelapjoint-get-face-most-ortho-to-beam"]], "FrenchRidgeLapJoint.get_face_most_towards_beam": [[57, "frenchridgelapjoint-get-face-most-towards-beam"]], "FrenchRidgeLapJoint.restore_beams_from_keys": [[58, "frenchridgelapjoint-restore-beams-from-keys"]], "FrenchRidgeLapJoint.sha256": [[59, "frenchridgelapjoint-sha256"]], "FrenchRidgeLapJoint.to_json": [[60, "frenchridgelapjoint-to-json"]], "FrenchRidgeLapJoint.to_jsonstring": [[61, "frenchridgelapjoint-to-jsonstring"]], "FrenchRidgeLapJoint.validate_data": [[62, "frenchridgelapjoint-validate-data"]], "Joint": [[63, "joint"]], "Joint.ToString": [[64, "joint-tostring"]], "Joint.add_features": [[65, "joint-add-features"]], "Joint.copy": [[66, "joint-copy"]], "Joint.create": [[67, "joint-create"]], "Joint.from_json": [[68, "joint-from-json"]], "Joint.from_jsonstring": [[69, "joint-from-jsonstring"]], "Joint.get_face_most_ortho_to_beam": [[70, "joint-get-face-most-ortho-to-beam"]], "Joint.get_face_most_towards_beam": [[71, "joint-get-face-most-towards-beam"]], "Joint.restore_beams_from_keys": [[72, "joint-restore-beams-from-keys"]], "Joint.sha256": [[73, "joint-sha256"]], "Joint.to_json": [[74, "joint-to-json"]], "Joint.to_jsonstring": [[75, "joint-to-jsonstring"]], "Joint.validate_data": [[76, "joint-validate-data"]], "JointTopology": [[77, "jointtopology"]], "JointTopology.get_name": [[78, "jointtopology-get-name"]], "LButtJoint": [[79, "lbuttjoint"]], "LButtJoint.ToString": [[80, "lbuttjoint-tostring"]], "LButtJoint.add_features": [[81, "lbuttjoint-add-features"]], "LButtJoint.copy": [[82, "lbuttjoint-copy"]], "LButtJoint.create": [[83, "lbuttjoint-create"]], "LButtJoint.from_json": [[84, "lbuttjoint-from-json"]], "LButtJoint.from_jsonstring": [[85, "lbuttjoint-from-jsonstring"]], "LButtJoint.get_cross_cutting_plane": [[86, "lbuttjoint-get-cross-cutting-plane"]], "LButtJoint.get_face_most_ortho_to_beam": [[87, "lbuttjoint-get-face-most-ortho-to-beam"]], "LButtJoint.get_face_most_towards_beam": [[88, "lbuttjoint-get-face-most-towards-beam"]], "LButtJoint.get_main_cutting_plane": [[89, "lbuttjoint-get-main-cutting-plane"]], "LButtJoint.restore_beams_from_keys": [[90, "lbuttjoint-restore-beams-from-keys"]], "LButtJoint.sha256": [[91, "lbuttjoint-sha256"]], "LButtJoint.to_json": [[92, "lbuttjoint-to-json"]], "LButtJoint.to_jsonstring": [[93, "lbuttjoint-to-jsonstring"]], "LButtJoint.validate_data": [[94, "lbuttjoint-validate-data"]], "LHalfLapJoint": [[95, "lhalflapjoint"]], "LHalfLapJoint.ToString": [[96, "lhalflapjoint-tostring"]], "LHalfLapJoint.add_features": [[97, "lhalflapjoint-add-features"]], "LHalfLapJoint.copy": [[98, "lhalflapjoint-copy"]], "LHalfLapJoint.create": [[99, "lhalflapjoint-create"]], "LHalfLapJoint.from_json": [[100, "lhalflapjoint-from-json"]], "LHalfLapJoint.from_jsonstring": [[101, "lhalflapjoint-from-jsonstring"]], "LHalfLapJoint.get_cross_cutting_frame": [[102, "lhalflapjoint-get-cross-cutting-frame"]], "LHalfLapJoint.get_face_most_ortho_to_beam": [[103, "lhalflapjoint-get-face-most-ortho-to-beam"]], "LHalfLapJoint.get_face_most_towards_beam": [[104, "lhalflapjoint-get-face-most-towards-beam"]], "LHalfLapJoint.get_main_cutting_frame": [[105, "lhalflapjoint-get-main-cutting-frame"]], "LHalfLapJoint.restore_beams_from_keys": [[106, "lhalflapjoint-restore-beams-from-keys"]], "LHalfLapJoint.sha256": [[107, "lhalflapjoint-sha256"]], "LHalfLapJoint.to_json": [[108, "lhalflapjoint-to-json"]], "LHalfLapJoint.to_jsonstring": [[109, "lhalflapjoint-to-jsonstring"]], "LHalfLapJoint.validate_data": [[110, "lhalflapjoint-validate-data"]], "LMiterJoint": [[111, "lmiterjoint"]], "LMiterJoint.ToString": [[112, "lmiterjoint-tostring"]], "LMiterJoint.add_features": [[113, "lmiterjoint-add-features"]], "LMiterJoint.copy": [[114, "lmiterjoint-copy"]], "LMiterJoint.create": [[115, "lmiterjoint-create"]], "LMiterJoint.from_json": [[116, "lmiterjoint-from-json"]], "LMiterJoint.from_jsonstring": [[117, "lmiterjoint-from-jsonstring"]], "LMiterJoint.get_cutting_planes": [[118, "lmiterjoint-get-cutting-planes"]], "LMiterJoint.get_face_most_ortho_to_beam": [[119, "lmiterjoint-get-face-most-ortho-to-beam"]], "LMiterJoint.get_face_most_towards_beam": [[120, "lmiterjoint-get-face-most-towards-beam"]], "LMiterJoint.restore_beams_from_keys": [[121, "lmiterjoint-restore-beams-from-keys"]], "LMiterJoint.sha256": [[122, "lmiterjoint-sha256"]], "LMiterJoint.to_json": [[123, "lmiterjoint-to-json"]], "LMiterJoint.to_jsonstring": [[124, "lmiterjoint-to-jsonstring"]], "LMiterJoint.validate_data": [[125, "lmiterjoint-validate-data"]], "LapJoint": [[126, "lapjoint"]], "LapJoint.ToString": [[127, "lapjoint-tostring"]], "LapJoint.add_features": [[128, "lapjoint-add-features"]], "LapJoint.copy": [[129, "lapjoint-copy"]], "LapJoint.create": [[130, "lapjoint-create"]], "LapJoint.from_json": [[131, "lapjoint-from-json"]], "LapJoint.from_jsonstring": [[132, "lapjoint-from-jsonstring"]], "LapJoint.get_cross_cutting_frame": [[133, "lapjoint-get-cross-cutting-frame"]], "LapJoint.get_face_most_ortho_to_beam": [[134, "lapjoint-get-face-most-ortho-to-beam"]], "LapJoint.get_face_most_towards_beam": [[135, "lapjoint-get-face-most-towards-beam"]], "LapJoint.get_main_cutting_frame": [[136, "lapjoint-get-main-cutting-frame"]], "LapJoint.restore_beams_from_keys": [[137, "lapjoint-restore-beams-from-keys"]], "LapJoint.sha256": [[138, "lapjoint-sha256"]], "LapJoint.to_json": [[139, "lapjoint-to-json"]], "LapJoint.to_jsonstring": [[140, "lapjoint-to-jsonstring"]], "LapJoint.validate_data": [[141, "lapjoint-validate-data"]], "TButtJoint": [[142, "tbuttjoint"]], "TButtJoint.ToString": [[143, "tbuttjoint-tostring"]], "TButtJoint.add_features": [[144, "tbuttjoint-add-features"]], "TButtJoint.copy": [[145, "tbuttjoint-copy"]], "TButtJoint.create": [[146, "tbuttjoint-create"]], "TButtJoint.from_json": [[147, "tbuttjoint-from-json"]], "TButtJoint.from_jsonstring": [[148, "tbuttjoint-from-jsonstring"]], "TButtJoint.get_cutting_plane": [[149, "tbuttjoint-get-cutting-plane"]], "TButtJoint.get_face_most_ortho_to_beam": [[150, "tbuttjoint-get-face-most-ortho-to-beam"]], "TButtJoint.get_face_most_towards_beam": [[151, "tbuttjoint-get-face-most-towards-beam"]], "TButtJoint.restore_beams_from_keys": [[152, "tbuttjoint-restore-beams-from-keys"]], "TButtJoint.sha256": [[153, "tbuttjoint-sha256"]], "TButtJoint.to_json": [[154, "tbuttjoint-to-json"]], "TButtJoint.to_jsonstring": [[155, "tbuttjoint-to-jsonstring"]], "TButtJoint.validate_data": [[156, "tbuttjoint-validate-data"]], "THalfLapJoint": [[157, "thalflapjoint"]], "THalfLapJoint.ToString": [[158, "thalflapjoint-tostring"]], "THalfLapJoint.add_features": [[159, "thalflapjoint-add-features"]], "THalfLapJoint.copy": [[160, "thalflapjoint-copy"]], "THalfLapJoint.create": [[161, "thalflapjoint-create"]], "THalfLapJoint.from_json": [[162, "thalflapjoint-from-json"]], "THalfLapJoint.from_jsonstring": [[163, "thalflapjoint-from-jsonstring"]], "THalfLapJoint.get_cross_cutting_frame": [[164, "thalflapjoint-get-cross-cutting-frame"]], "THalfLapJoint.get_face_most_ortho_to_beam": [[165, "thalflapjoint-get-face-most-ortho-to-beam"]], "THalfLapJoint.get_face_most_towards_beam": [[166, "thalflapjoint-get-face-most-towards-beam"]], "THalfLapJoint.get_main_cutting_frame": [[167, "thalflapjoint-get-main-cutting-frame"]], "THalfLapJoint.restore_beams_from_keys": [[168, "thalflapjoint-restore-beams-from-keys"]], "THalfLapJoint.sha256": [[169, "thalflapjoint-sha256"]], "THalfLapJoint.to_json": [[170, "thalflapjoint-to-json"]], "THalfLapJoint.to_jsonstring": [[171, "thalflapjoint-to-jsonstring"]], "THalfLapJoint.validate_data": [[172, "thalflapjoint-validate-data"]], "XHalfLapJoint": [[173, "xhalflapjoint"]], "XHalfLapJoint.ToString": [[174, "xhalflapjoint-tostring"]], "XHalfLapJoint.add_features": [[175, "xhalflapjoint-add-features"]], "XHalfLapJoint.copy": [[176, "xhalflapjoint-copy"]], "XHalfLapJoint.create": [[177, "xhalflapjoint-create"]], "XHalfLapJoint.from_json": [[178, "xhalflapjoint-from-json"]], "XHalfLapJoint.from_jsonstring": [[179, "xhalflapjoint-from-jsonstring"]], "XHalfLapJoint.get_cross_cutting_frame": [[180, "xhalflapjoint-get-cross-cutting-frame"]], "XHalfLapJoint.get_face_most_ortho_to_beam": [[181, "xhalflapjoint-get-face-most-ortho-to-beam"]], "XHalfLapJoint.get_face_most_towards_beam": [[182, "xhalflapjoint-get-face-most-towards-beam"]], "XHalfLapJoint.get_main_cutting_frame": [[183, "xhalflapjoint-get-main-cutting-frame"]], "XHalfLapJoint.restore_beams_from_keys": [[184, "xhalflapjoint-restore-beams-from-keys"]], "XHalfLapJoint.sha256": [[185, "xhalflapjoint-sha256"]], "XHalfLapJoint.to_json": [[186, "xhalflapjoint-to-json"]], "XHalfLapJoint.to_jsonstring": [[187, "xhalflapjoint-to-jsonstring"]], "XHalfLapJoint.validate_data": [[188, "xhalflapjoint-validate-data"]], "find_neighboring_beams": [[189, "find-neighboring-beams"], [327, "find-neighboring-beams"]], "BeamGeometry": [[190, "beamgeometry"]], "BrepGeometryConsumer": [[191, "brepgeometryconsumer"]], "CutFeature": [[192, "cutfeature"]], "CutFeature.ToString": [[193, "cutfeature-tostring"]], "CutFeature.copy": [[194, "cutfeature-copy"]], "CutFeature.from_json": [[195, "cutfeature-from-json"]], "CutFeature.from_jsonstring": [[196, "cutfeature-from-jsonstring"]], "CutFeature.sha256": [[197, "cutfeature-sha256"]], "CutFeature.to_json": [[198, "cutfeature-to-json"]], "CutFeature.to_jsonstring": [[199, "cutfeature-to-jsonstring"]], "CutFeature.validate_data": [[200, "cutfeature-validate-data"]], "CutFeatureGeometry": [[201, "cutfeaturegeometry"]], "CutFeatureGeometry.apply": [[202, "cutfeaturegeometry-apply"]], "DrillFeature": [[203, "drillfeature"]], "DrillFeature.ToString": [[204, "drillfeature-tostring"]], "DrillFeature.copy": [[205, "drillfeature-copy"]], "DrillFeature.from_json": [[206, "drillfeature-from-json"]], "DrillFeature.from_jsonstring": [[207, "drillfeature-from-jsonstring"]], "DrillFeature.sha256": [[208, "drillfeature-sha256"]], "DrillFeature.to_json": [[209, "drillfeature-to-json"]], "DrillFeature.to_jsonstring": [[210, "drillfeature-to-jsonstring"]], "DrillFeature.validate_data": [[211, "drillfeature-validate-data"]], "DrillFeatureGeometry": [[212, "drillfeaturegeometry"]], "DrillFeatureGeometry.apply": [[213, "drillfeaturegeometry-apply"]], "FeatureApplicationError": [[214, "featureapplicationerror"]], "FeatureApplicator": [[215, "featureapplicator"]], "FeatureApplicator.apply": [[216, "featureapplicator-apply"]], "MillVolume": [[217, "millvolume"]], "MillVolume.ToString": [[218, "millvolume-tostring"]], "MillVolume.copy": [[219, "millvolume-copy"]], "MillVolume.from_json": [[220, "millvolume-from-json"]], "MillVolume.from_jsonstring": [[221, "millvolume-from-jsonstring"]], "MillVolume.sha256": [[222, "millvolume-sha256"]], "MillVolume.to_json": [[223, "millvolume-to-json"]], "MillVolume.to_jsonstring": [[224, "millvolume-to-jsonstring"]], "MillVolume.validate_data": [[225, "millvolume-validate-data"]], "MillVolumeGeometry": [[226, "millvolumegeometry"]], "MillVolumeGeometry.apply": [[227, "millvolumegeometry-apply"]], "BTLx": [[228, "btlx"]], "BTLx.btlx_string": [[229, "btlx-btlx-string"]], "BTLx.process_assembly": [[230, "btlx-process-assembly"]], "BTLx.register_joint": [[231, "btlx-register-joint"]], "BTLxFrenchRidgeLap": [[232, "btlxfrenchridgelap"]], "BTLxFrenchRidgeLap.create_process": [[233, "btlxfrenchridgelap-create-process"]], "BTLxFrenchRidgeLap.get_params": [[234, "btlxfrenchridgelap-get-params"]], "BTLxFrenchRidgeLap.process_joints": [[235, "btlxfrenchridgelap-process-joints"]], "BTLxJackCut": [[236, "btlxjackcut"]], "BTLxJackCut.create_process": [[237, "btlxjackcut-create-process"]], "BTLxJackCut.generate_process": [[238, "btlxjackcut-generate-process"]], "BTLxProcess": [[239, "btlxprocess"]], "FrenchRidgeFactory": [[240, "frenchridgefactory"]], "FrenchRidgeFactory.apply_processings": [[241, "frenchridgefactory-apply-processings"]], "LButtFactory": [[242, "lbuttfactory"]], "LButtFactory.apply_processings": [[243, "lbuttfactory-apply-processings"]], "LMiterFactory": [[244, "lmiterfactory"]], "LMiterFactory.apply_processings": [[245, "lmiterfactory-apply-processings"]], "TButtFactory": [[246, "tbuttfactory"]], "TButtFactory.apply_processings": [[247, "tbuttfactory-apply-processings"]], "CategoryRule": [[248, "categoryrule"]], "CategoryRule.ToString": [[249, "categoryrule-tostring"]], "CategoryRule.comply": [[250, "categoryrule-comply"]], "CategoryRule.reorder": [[251, "categoryrule-reorder"]], "DebugInfomation": [[252, "debuginfomation"]], "DebugInfomation.ToString": [[253, "debuginfomation-tostring"]], "DebugInfomation.add_feature_error": [[254, "debuginfomation-add-feature-error"]], "DebugInfomation.add_joint_error": [[255, "debuginfomation-add-joint-error"]], "DirectRule": [[256, "directrule"]], "DirectRule.ToString": [[257, "directrule-tostring"]], "DirectRule.comply": [[258, "directrule-comply"]], "FeatureDefinition": [[259, "featuredefinition"]], "FeatureDefinition.ToString": [[260, "featuredefinition-tostring"]], "JointDefinition": [[261, "jointdefinition"]], "JointDefinition.ToString": [[262, "jointdefinition-tostring"]], "JointDefinition.is_identical": [[263, "jointdefinition-is-identical"]], "JointDefinition.match": [[264, "jointdefinition-match"]], "JointOptions": [[265, "jointoptions"]], "JointOptions.ToString": [[266, "jointoptions-tostring"]], "JointOptions.is_identical": [[267, "jointoptions-is-identical"]], "TopologyRule": [[268, "topologyrule"]], "TopologyRule.ToString": [[269, "topologyrule-tostring"]], "TopologyRule.comply": [[270, "topologyrule-comply"]], "Beam": [[271, "beam"], [338, "beam"]], "Beam.ToString": [[272, "beam-tostring"]], "Beam.add_blank_extension": [[273, "beam-add-blank-extension"]], "Beam.add_feature": [[274, "beam-add-feature"]], "Beam.add_features": [[275, "beam-add-features"]], "Beam.align_z": [[276, "beam-align-z"]], "Beam.clear_features": [[277, "beam-clear-features"]], "Beam.compute_aabb": [[278, "beam-compute-aabb"]], "Beam.compute_obb": [[279, "beam-compute-obb"]], "Beam.copy": [[280, "beam-copy"]], "Beam.endpoint_closest_to_point": [[281, "beam-endpoint-closest-to-point"]], "Beam.extension_to_plane": [[282, "beam-extension-to-plane"]], "Beam.from_centerline": [[283, "beam-from-centerline"]], "Beam.from_endpoints": [[284, "beam-from-endpoints"]], "Beam.from_json": [[285, "beam-from-json"]], "Beam.from_jsonstring": [[286, "beam-from-jsonstring"]], "Beam.get_geometry": [[287, "beam-get-geometry"]], "Beam.remove_blank_extension": [[288, "beam-remove-blank-extension"]], "Beam.remove_features": [[289, "beam-remove-features"]], "Beam.rotate": [[290, "beam-rotate"]], "Beam.rotated": [[291, "beam-rotated"]], "Beam.scale": [[292, "beam-scale"]], "Beam.scaled": [[293, "beam-scaled"]], "Beam.sha256": [[294, "beam-sha256"]], "Beam.to_json": [[295, "beam-to-json"]], "Beam.to_jsonstring": [[296, "beam-to-jsonstring"]], "Beam.transform": [[297, "beam-transform"]], "Beam.transform_numpy": [[298, "beam-transform-numpy"]], "Beam.transformed": [[299, "beam-transformed"]], "Beam.transformed_numpy": [[300, "beam-transformed-numpy"]], "Beam.translate": [[301, "beam-translate"]], "Beam.translated": [[302, "beam-translated"]], "Beam.validate_data": [[303, "beam-validate-data"]], "Actor": [[304, "actor"]], "Actor.get_name": [[305, "actor-get-name"]], "BuildingPlan": [[306, "buildingplan"]], "BuildingPlan.ToString": [[307, "buildingplan-tostring"]], "BuildingPlan.add_step": [[308, "buildingplan-add-step"]], "BuildingPlan.copy": [[309, "buildingplan-copy"]], "BuildingPlan.from_json": [[310, "buildingplan-from-json"]], "BuildingPlan.from_jsonstring": [[311, "buildingplan-from-jsonstring"]], "BuildingPlan.sha256": [[312, "buildingplan-sha256"]], "BuildingPlan.to_json": [[313, "buildingplan-to-json"]], "BuildingPlan.to_jsonstring": [[314, "buildingplan-to-jsonstring"]], "BuildingPlan.validate_data": [[315, "buildingplan-validate-data"]], "SimpleSequenceGenerator": [[316, "simplesequencegenerator"]], "Step": [[317, "step"]], "Step.ToString": [[318, "step-tostring"]], "Step.copy": [[319, "step-copy"]], "Step.from_json": [[320, "step-from-json"]], "Step.from_jsonstring": [[321, "step-from-jsonstring"]], "Step.sha256": [[322, "step-sha256"]], "Step.to_json": [[323, "step-to-json"]], "Step.to_jsonstring": [[324, "step-to-jsonstring"]], "Step.transform": [[325, "step-transform"]], "Step.validate_data": [[326, "step-validate-data"]], "Citing": [[328, "citing"]], "Examples": [[329, "examples"], [339, "examples"]], "Timber Assembly Examples": [[329, "timber-assembly-examples"]], "Create Joint": [[330, "create-joint"]], "COMPAS TIMBER": [[331, "compas-timber"]], "Dependencies": [[331, "dependencies"]], "Table of Contents": [[331, "table-of-contents"]], "Indices and tables": [[331, "indices-and-tables"]], "Installation": [[332, "installation"]], "Stable": [[332, "stable"]], "Install with pip": [[332, "install-with-pip"]], "Development": [[332, "development"]], "License": [[333, "license"]], "Grasshopper plugin": [[334, "grasshopper-plugin"]], "BTLx Contribution Guide": [[335, "btlx-contribution-guide"]], "Assembly": [[336, "assembly"]], "Attributes": [[337, "attributes"]], "Features": [[340, "features"]], "Joints": [[341, "joints"]], "Joint Topologies": [[341, "joint-topologies"]], "Joint components": [[341, "joint-components"]], "T-Butt": [[341, "t-butt"]], "L-Butt": [[341, "l-butt"]], "L-Miter": [[341, "l-miter"]], "AutomaticJoint wizzard": [[341, "automaticjoint-wizzard"]], "Show": [[342, "show"]], "Utils": [[343, "utils"]], "Bake with BoxMap": [[343, "bake-with-boxmap"]], "Workflow": [[344, "workflow"]]}, "indexentries": {"timberassembly (class in compas_timber.assembly)": [[9, "compas_timber.assembly.TimberAssembly"]], "tostring() (compas_timber.assembly.timberassembly method)": [[10, "compas_timber.assembly.TimberAssembly.ToString"]], "add_beam() (compas_timber.assembly.timberassembly method)": [[11, "compas_timber.assembly.TimberAssembly.add_beam"]], "add_connection() (compas_timber.assembly.timberassembly method)": [[12, "compas_timber.assembly.TimberAssembly.add_connection"]], "add_joint() (compas_timber.assembly.timberassembly method)": [[13, "compas_timber.assembly.TimberAssembly.add_joint"]], "add_part() (compas_timber.assembly.timberassembly method)": [[14, "compas_timber.assembly.TimberAssembly.add_part"]], "are_parts_joined() (compas_timber.assembly.timberassembly method)": [[15, "compas_timber.assembly.TimberAssembly.are_parts_joined"]], "compute_aabb() (compas_timber.assembly.timberassembly method)": [[16, "compas_timber.assembly.TimberAssembly.compute_aabb"]], "compute_obb() (compas_timber.assembly.timberassembly method)": [[17, "compas_timber.assembly.TimberAssembly.compute_obb"]], "connections() (compas_timber.assembly.timberassembly method)": [[18, "compas_timber.assembly.TimberAssembly.connections"]], "contains() (compas_timber.assembly.timberassembly method)": [[19, "compas_timber.assembly.TimberAssembly.contains"]], "copy() (compas_timber.assembly.timberassembly method)": [[20, "compas_timber.assembly.TimberAssembly.copy"]], "delete_connection() (compas_timber.assembly.timberassembly method)": [[21, "compas_timber.assembly.TimberAssembly.delete_connection"]], "delete_part() (compas_timber.assembly.timberassembly method)": [[22, "compas_timber.assembly.TimberAssembly.delete_part"]], "find() (compas_timber.assembly.timberassembly method)": [[23, "compas_timber.assembly.TimberAssembly.find"]], "find_by_key() (compas_timber.assembly.timberassembly method)": [[24, "compas_timber.assembly.TimberAssembly.find_by_key"]], "from_json() (compas_timber.assembly.timberassembly class method)": [[25, "compas_timber.assembly.TimberAssembly.from_json"]], "from_jsonstring() (compas_timber.assembly.timberassembly class method)": [[26, "compas_timber.assembly.TimberAssembly.from_jsonstring"]], "parts() (compas_timber.assembly.timberassembly method)": [[27, "compas_timber.assembly.TimberAssembly.parts"]], "remove_joint() (compas_timber.assembly.timberassembly method)": [[28, "compas_timber.assembly.TimberAssembly.remove_joint"]], "rotate() (compas_timber.assembly.timberassembly method)": [[29, "compas_timber.assembly.TimberAssembly.rotate"]], "rotated() (compas_timber.assembly.timberassembly method)": [[30, "compas_timber.assembly.TimberAssembly.rotated"]], "scale() (compas_timber.assembly.timberassembly method)": [[31, "compas_timber.assembly.TimberAssembly.scale"]], "scaled() (compas_timber.assembly.timberassembly method)": [[32, "compas_timber.assembly.TimberAssembly.scaled"]], "set_topologies() (compas_timber.assembly.timberassembly method)": [[33, "compas_timber.assembly.TimberAssembly.set_topologies"]], "sha256() (compas_timber.assembly.timberassembly method)": [[34, "compas_timber.assembly.TimberAssembly.sha256"]], "to_json() (compas_timber.assembly.timberassembly method)": [[35, "compas_timber.assembly.TimberAssembly.to_json"]], "to_jsonstring() (compas_timber.assembly.timberassembly method)": [[36, "compas_timber.assembly.TimberAssembly.to_jsonstring"]], "transform() (compas_timber.assembly.timberassembly method)": [[37, "compas_timber.assembly.TimberAssembly.transform"]], "transform_numpy() (compas_timber.assembly.timberassembly method)": [[38, "compas_timber.assembly.TimberAssembly.transform_numpy"]], "transformed() (compas_timber.assembly.timberassembly method)": [[39, "compas_timber.assembly.TimberAssembly.transformed"]], "transformed_numpy() (compas_timber.assembly.timberassembly method)": [[40, "compas_timber.assembly.TimberAssembly.transformed_numpy"]], "translate() (compas_timber.assembly.timberassembly method)": [[41, "compas_timber.assembly.TimberAssembly.translate"]], "translated() (compas_timber.assembly.timberassembly method)": [[42, "compas_timber.assembly.TimberAssembly.translated"]], "validate_data() (compas_timber.assembly.timberassembly class method)": [[43, "compas_timber.assembly.TimberAssembly.validate_data"]], "beamjoinningerror": [[44, "compas_timber.connections.BeamJoinningError"]], "connectionsolver (class in compas_timber.connections)": [[45, "compas_timber.connections.ConnectionSolver"]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[46, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs"]], "find_topology() (compas_timber.connections.connectionsolver method)": [[47, "compas_timber.connections.ConnectionSolver.find_topology"]], "frenchridgelapjoint (class in compas_timber.connections)": [[48, "compas_timber.connections.FrenchRidgeLapJoint"]], "tostring() (compas_timber.connections.frenchridgelapjoint method)": [[49, "compas_timber.connections.FrenchRidgeLapJoint.ToString"]], "add_features() (compas_timber.connections.frenchridgelapjoint method)": [[50, "compas_timber.connections.FrenchRidgeLapJoint.add_features"]], "check_geometry() (compas_timber.connections.frenchridgelapjoint method)": [[51, "compas_timber.connections.FrenchRidgeLapJoint.check_geometry"]], "copy() (compas_timber.connections.frenchridgelapjoint method)": [[52, "compas_timber.connections.FrenchRidgeLapJoint.copy"]], "create() (compas_timber.connections.frenchridgelapjoint class method)": [[53, "compas_timber.connections.FrenchRidgeLapJoint.create"]], "from_json() (compas_timber.connections.frenchridgelapjoint class method)": [[54, "compas_timber.connections.FrenchRidgeLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.frenchridgelapjoint class method)": [[55, "compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring"]], "get_face_most_ortho_to_beam() (compas_timber.connections.frenchridgelapjoint static method)": [[56, "compas_timber.connections.FrenchRidgeLapJoint.get_face_most_ortho_to_beam"]], "get_face_most_towards_beam() (compas_timber.connections.frenchridgelapjoint static method)": [[57, "compas_timber.connections.FrenchRidgeLapJoint.get_face_most_towards_beam"]], "restore_beams_from_keys() (compas_timber.connections.frenchridgelapjoint method)": [[58, "compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.frenchridgelapjoint method)": [[59, "compas_timber.connections.FrenchRidgeLapJoint.sha256"]], "to_json() (compas_timber.connections.frenchridgelapjoint method)": [[60, "compas_timber.connections.FrenchRidgeLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.frenchridgelapjoint method)": [[61, "compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.frenchridgelapjoint class method)": [[62, "compas_timber.connections.FrenchRidgeLapJoint.validate_data"]], "joint (class in compas_timber.connections)": [[63, "compas_timber.connections.Joint"]], "tostring() (compas_timber.connections.joint method)": [[64, "compas_timber.connections.Joint.ToString"]], "add_features() (compas_timber.connections.joint method)": [[65, "compas_timber.connections.Joint.add_features"]], "copy() (compas_timber.connections.joint method)": [[66, "compas_timber.connections.Joint.copy"]], "create() (compas_timber.connections.joint class method)": [[67, "compas_timber.connections.Joint.create"]], "from_json() (compas_timber.connections.joint class method)": [[68, "compas_timber.connections.Joint.from_json"]], "from_jsonstring() (compas_timber.connections.joint class method)": [[69, "compas_timber.connections.Joint.from_jsonstring"]], "get_face_most_ortho_to_beam() (compas_timber.connections.joint static method)": [[70, "compas_timber.connections.Joint.get_face_most_ortho_to_beam"]], "get_face_most_towards_beam() (compas_timber.connections.joint static method)": [[71, "compas_timber.connections.Joint.get_face_most_towards_beam"]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[72, "compas_timber.connections.Joint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.joint method)": [[73, "compas_timber.connections.Joint.sha256"]], "to_json() (compas_timber.connections.joint method)": [[74, "compas_timber.connections.Joint.to_json"]], "to_jsonstring() (compas_timber.connections.joint method)": [[75, "compas_timber.connections.Joint.to_jsonstring"]], "validate_data() (compas_timber.connections.joint class method)": [[76, "compas_timber.connections.Joint.validate_data"]], "jointtopology (class in compas_timber.connections)": [[77, "compas_timber.connections.JointTopology"]], "get_name() (compas_timber.connections.jointtopology class method)": [[78, "compas_timber.connections.JointTopology.get_name"]], "lbuttjoint (class in compas_timber.connections)": [[79, "compas_timber.connections.LButtJoint"]], "tostring() (compas_timber.connections.lbuttjoint method)": [[80, "compas_timber.connections.LButtJoint.ToString"]], "add_features() (compas_timber.connections.lbuttjoint method)": [[81, "compas_timber.connections.LButtJoint.add_features"]], "copy() (compas_timber.connections.lbuttjoint method)": [[82, "compas_timber.connections.LButtJoint.copy"]], "create() (compas_timber.connections.lbuttjoint class method)": [[83, "compas_timber.connections.LButtJoint.create"]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[84, "compas_timber.connections.LButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[85, "compas_timber.connections.LButtJoint.from_jsonstring"]], "get_cross_cutting_plane() (compas_timber.connections.lbuttjoint method)": [[86, "compas_timber.connections.LButtJoint.get_cross_cutting_plane"]], "get_face_most_ortho_to_beam() (compas_timber.connections.lbuttjoint static method)": [[87, "compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam"]], "get_face_most_towards_beam() (compas_timber.connections.lbuttjoint static method)": [[88, "compas_timber.connections.LButtJoint.get_face_most_towards_beam"]], "get_main_cutting_plane() (compas_timber.connections.lbuttjoint method)": [[89, "compas_timber.connections.LButtJoint.get_main_cutting_plane"]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[90, "compas_timber.connections.LButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lbuttjoint method)": [[91, "compas_timber.connections.LButtJoint.sha256"]], "to_json() (compas_timber.connections.lbuttjoint method)": [[92, "compas_timber.connections.LButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lbuttjoint method)": [[93, "compas_timber.connections.LButtJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lbuttjoint class method)": [[94, "compas_timber.connections.LButtJoint.validate_data"]], "lhalflapjoint (class in compas_timber.connections)": [[95, "compas_timber.connections.LHalfLapJoint"]], "tostring() (compas_timber.connections.lhalflapjoint method)": [[96, "compas_timber.connections.LHalfLapJoint.ToString"]], "add_features() (compas_timber.connections.lhalflapjoint method)": [[97, "compas_timber.connections.LHalfLapJoint.add_features"]], "copy() (compas_timber.connections.lhalflapjoint method)": [[98, "compas_timber.connections.LHalfLapJoint.copy"]], "create() (compas_timber.connections.lhalflapjoint class method)": [[99, "compas_timber.connections.LHalfLapJoint.create"]], "from_json() (compas_timber.connections.lhalflapjoint class method)": [[100, "compas_timber.connections.LHalfLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lhalflapjoint class method)": [[101, "compas_timber.connections.LHalfLapJoint.from_jsonstring"]], "get_cross_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[102, "compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame"]], "get_face_most_ortho_to_beam() (compas_timber.connections.lhalflapjoint static method)": [[103, "compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam"]], "get_face_most_towards_beam() (compas_timber.connections.lhalflapjoint static method)": [[104, "compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam"]], "get_main_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[105, "compas_timber.connections.LHalfLapJoint.get_main_cutting_frame"]], "restore_beams_from_keys() (compas_timber.connections.lhalflapjoint method)": [[106, "compas_timber.connections.LHalfLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lhalflapjoint method)": [[107, "compas_timber.connections.LHalfLapJoint.sha256"]], "to_json() (compas_timber.connections.lhalflapjoint method)": [[108, "compas_timber.connections.LHalfLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lhalflapjoint method)": [[109, "compas_timber.connections.LHalfLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lhalflapjoint class method)": [[110, "compas_timber.connections.LHalfLapJoint.validate_data"]], "lmiterjoint (class in compas_timber.connections)": [[111, "compas_timber.connections.LMiterJoint"]], "tostring() (compas_timber.connections.lmiterjoint method)": [[112, "compas_timber.connections.LMiterJoint.ToString"]], "add_features() (compas_timber.connections.lmiterjoint method)": [[113, "compas_timber.connections.LMiterJoint.add_features"]], "copy() (compas_timber.connections.lmiterjoint method)": [[114, "compas_timber.connections.LMiterJoint.copy"]], "create() (compas_timber.connections.lmiterjoint class method)": [[115, "compas_timber.connections.LMiterJoint.create"]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[116, "compas_timber.connections.LMiterJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[117, "compas_timber.connections.LMiterJoint.from_jsonstring"]], "get_cutting_planes() (compas_timber.connections.lmiterjoint method)": [[118, "compas_timber.connections.LMiterJoint.get_cutting_planes"]], "get_face_most_ortho_to_beam() (compas_timber.connections.lmiterjoint static method)": [[119, "compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam"]], "get_face_most_towards_beam() (compas_timber.connections.lmiterjoint static method)": [[120, "compas_timber.connections.LMiterJoint.get_face_most_towards_beam"]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[121, "compas_timber.connections.LMiterJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lmiterjoint method)": [[122, "compas_timber.connections.LMiterJoint.sha256"]], "to_json() (compas_timber.connections.lmiterjoint method)": [[123, "compas_timber.connections.LMiterJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lmiterjoint method)": [[124, "compas_timber.connections.LMiterJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lmiterjoint class method)": [[125, "compas_timber.connections.LMiterJoint.validate_data"]], "lapjoint (class in compas_timber.connections)": [[126, "compas_timber.connections.LapJoint"]], "tostring() (compas_timber.connections.lapjoint method)": [[127, "compas_timber.connections.LapJoint.ToString"]], "add_features() (compas_timber.connections.lapjoint method)": [[128, "compas_timber.connections.LapJoint.add_features"]], "copy() (compas_timber.connections.lapjoint method)": [[129, "compas_timber.connections.LapJoint.copy"]], "create() (compas_timber.connections.lapjoint class method)": [[130, "compas_timber.connections.LapJoint.create"]], "from_json() (compas_timber.connections.lapjoint class method)": [[131, "compas_timber.connections.LapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lapjoint class method)": [[132, "compas_timber.connections.LapJoint.from_jsonstring"]], "get_cross_cutting_frame() (compas_timber.connections.lapjoint method)": [[133, "compas_timber.connections.LapJoint.get_cross_cutting_frame"]], "get_face_most_ortho_to_beam() (compas_timber.connections.lapjoint static method)": [[134, "compas_timber.connections.LapJoint.get_face_most_ortho_to_beam"]], "get_face_most_towards_beam() (compas_timber.connections.lapjoint static method)": [[135, "compas_timber.connections.LapJoint.get_face_most_towards_beam"]], "get_main_cutting_frame() (compas_timber.connections.lapjoint method)": [[136, "compas_timber.connections.LapJoint.get_main_cutting_frame"]], "restore_beams_from_keys() (compas_timber.connections.lapjoint method)": [[137, "compas_timber.connections.LapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lapjoint method)": [[138, "compas_timber.connections.LapJoint.sha256"]], "to_json() (compas_timber.connections.lapjoint method)": [[139, "compas_timber.connections.LapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lapjoint method)": [[140, "compas_timber.connections.LapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lapjoint class method)": [[141, "compas_timber.connections.LapJoint.validate_data"]], "tbuttjoint (class in compas_timber.connections)": [[142, "compas_timber.connections.TButtJoint"]], "tostring() (compas_timber.connections.tbuttjoint method)": [[143, "compas_timber.connections.TButtJoint.ToString"]], "add_features() (compas_timber.connections.tbuttjoint method)": [[144, "compas_timber.connections.TButtJoint.add_features"]], "copy() (compas_timber.connections.tbuttjoint method)": [[145, "compas_timber.connections.TButtJoint.copy"]], "create() (compas_timber.connections.tbuttjoint class method)": [[146, "compas_timber.connections.TButtJoint.create"]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[147, "compas_timber.connections.TButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[148, "compas_timber.connections.TButtJoint.from_jsonstring"]], "get_cutting_plane() (compas_timber.connections.tbuttjoint method)": [[149, "compas_timber.connections.TButtJoint.get_cutting_plane"]], "get_face_most_ortho_to_beam() (compas_timber.connections.tbuttjoint static method)": [[150, "compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam"]], "get_face_most_towards_beam() (compas_timber.connections.tbuttjoint static method)": [[151, "compas_timber.connections.TButtJoint.get_face_most_towards_beam"]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[152, "compas_timber.connections.TButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.tbuttjoint method)": [[153, "compas_timber.connections.TButtJoint.sha256"]], "to_json() (compas_timber.connections.tbuttjoint method)": [[154, "compas_timber.connections.TButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.tbuttjoint method)": [[155, "compas_timber.connections.TButtJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.tbuttjoint class method)": [[156, "compas_timber.connections.TButtJoint.validate_data"]], "thalflapjoint (class in compas_timber.connections)": [[157, "compas_timber.connections.THalfLapJoint"]], "tostring() (compas_timber.connections.thalflapjoint method)": [[158, "compas_timber.connections.THalfLapJoint.ToString"]], "add_features() (compas_timber.connections.thalflapjoint method)": [[159, "compas_timber.connections.THalfLapJoint.add_features"]], "copy() (compas_timber.connections.thalflapjoint method)": [[160, "compas_timber.connections.THalfLapJoint.copy"]], "create() (compas_timber.connections.thalflapjoint class method)": [[161, "compas_timber.connections.THalfLapJoint.create"]], "from_json() (compas_timber.connections.thalflapjoint class method)": [[162, "compas_timber.connections.THalfLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.thalflapjoint class method)": [[163, "compas_timber.connections.THalfLapJoint.from_jsonstring"]], "get_cross_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[164, "compas_timber.connections.THalfLapJoint.get_cross_cutting_frame"]], "get_face_most_ortho_to_beam() (compas_timber.connections.thalflapjoint static method)": [[165, "compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam"]], "get_face_most_towards_beam() (compas_timber.connections.thalflapjoint static method)": [[166, "compas_timber.connections.THalfLapJoint.get_face_most_towards_beam"]], "get_main_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[167, "compas_timber.connections.THalfLapJoint.get_main_cutting_frame"]], "restore_beams_from_keys() (compas_timber.connections.thalflapjoint method)": [[168, "compas_timber.connections.THalfLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.thalflapjoint method)": [[169, "compas_timber.connections.THalfLapJoint.sha256"]], "to_json() (compas_timber.connections.thalflapjoint method)": [[170, "compas_timber.connections.THalfLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.thalflapjoint method)": [[171, "compas_timber.connections.THalfLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.thalflapjoint class method)": [[172, "compas_timber.connections.THalfLapJoint.validate_data"]], "xhalflapjoint (class in compas_timber.connections)": [[173, "compas_timber.connections.XHalfLapJoint"]], "tostring() (compas_timber.connections.xhalflapjoint method)": [[174, "compas_timber.connections.XHalfLapJoint.ToString"]], "add_features() (compas_timber.connections.xhalflapjoint method)": [[175, "compas_timber.connections.XHalfLapJoint.add_features"]], "copy() (compas_timber.connections.xhalflapjoint method)": [[176, "compas_timber.connections.XHalfLapJoint.copy"]], "create() (compas_timber.connections.xhalflapjoint class method)": [[177, "compas_timber.connections.XHalfLapJoint.create"]], "from_json() (compas_timber.connections.xhalflapjoint class method)": [[178, "compas_timber.connections.XHalfLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.xhalflapjoint class method)": [[179, "compas_timber.connections.XHalfLapJoint.from_jsonstring"]], "get_cross_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[180, "compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame"]], "get_face_most_ortho_to_beam() (compas_timber.connections.xhalflapjoint static method)": [[181, "compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam"]], "get_face_most_towards_beam() (compas_timber.connections.xhalflapjoint static method)": [[182, "compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam"]], "get_main_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[183, "compas_timber.connections.XHalfLapJoint.get_main_cutting_frame"]], "restore_beams_from_keys() (compas_timber.connections.xhalflapjoint method)": [[184, "compas_timber.connections.XHalfLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.xhalflapjoint method)": [[185, "compas_timber.connections.XHalfLapJoint.sha256"]], "to_json() (compas_timber.connections.xhalflapjoint method)": [[186, "compas_timber.connections.XHalfLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.xhalflapjoint method)": [[187, "compas_timber.connections.XHalfLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.xhalflapjoint class method)": [[188, "compas_timber.connections.XHalfLapJoint.validate_data"]], "find_neighboring_beams() (in module compas_timber.connections)": [[189, "compas_timber.connections.find_neighboring_beams"]], "beamgeometry (class in compas_timber.consumers)": [[190, "compas_timber.consumers.BeamGeometry"]], "brepgeometryconsumer (class in compas_timber.consumers)": [[191, "compas_timber.consumers.BrepGeometryConsumer"]], "cutfeature (class in compas_timber.consumers)": [[192, "compas_timber.consumers.CutFeature"]], "tostring() (compas_timber.consumers.cutfeature method)": [[193, "compas_timber.consumers.CutFeature.ToString"]], "copy() (compas_timber.consumers.cutfeature method)": [[194, "compas_timber.consumers.CutFeature.copy"]], "from_json() (compas_timber.consumers.cutfeature class method)": [[195, "compas_timber.consumers.CutFeature.from_json"]], "from_jsonstring() (compas_timber.consumers.cutfeature class method)": [[196, "compas_timber.consumers.CutFeature.from_jsonstring"]], "sha256() (compas_timber.consumers.cutfeature method)": [[197, "compas_timber.consumers.CutFeature.sha256"]], "to_json() (compas_timber.consumers.cutfeature method)": [[198, "compas_timber.consumers.CutFeature.to_json"]], "to_jsonstring() (compas_timber.consumers.cutfeature method)": [[199, "compas_timber.consumers.CutFeature.to_jsonstring"]], "validate_data() (compas_timber.consumers.cutfeature class method)": [[200, "compas_timber.consumers.CutFeature.validate_data"]], "cutfeaturegeometry (class in compas_timber.consumers)": [[201, "compas_timber.consumers.CutFeatureGeometry"]], "apply() (compas_timber.consumers.cutfeaturegeometry method)": [[202, "compas_timber.consumers.CutFeatureGeometry.apply"]], "drillfeature (class in compas_timber.consumers)": [[203, "compas_timber.consumers.DrillFeature"]], "tostring() (compas_timber.consumers.drillfeature method)": [[204, "compas_timber.consumers.DrillFeature.ToString"]], "copy() (compas_timber.consumers.drillfeature method)": [[205, "compas_timber.consumers.DrillFeature.copy"]], "from_json() (compas_timber.consumers.drillfeature class method)": [[206, "compas_timber.consumers.DrillFeature.from_json"]], "from_jsonstring() (compas_timber.consumers.drillfeature class method)": [[207, "compas_timber.consumers.DrillFeature.from_jsonstring"]], "sha256() (compas_timber.consumers.drillfeature method)": [[208, "compas_timber.consumers.DrillFeature.sha256"]], "to_json() (compas_timber.consumers.drillfeature method)": [[209, "compas_timber.consumers.DrillFeature.to_json"]], "to_jsonstring() (compas_timber.consumers.drillfeature method)": [[210, "compas_timber.consumers.DrillFeature.to_jsonstring"]], "validate_data() (compas_timber.consumers.drillfeature class method)": [[211, "compas_timber.consumers.DrillFeature.validate_data"]], "drillfeaturegeometry (class in compas_timber.consumers)": [[212, "compas_timber.consumers.DrillFeatureGeometry"]], "apply() (compas_timber.consumers.drillfeaturegeometry method)": [[213, "compas_timber.consumers.DrillFeatureGeometry.apply"]], "featureapplicationerror": [[214, "compas_timber.consumers.FeatureApplicationError"]], "featureapplicator (class in compas_timber.consumers)": [[215, "compas_timber.consumers.FeatureApplicator"]], "apply() (compas_timber.consumers.featureapplicator method)": [[216, "compas_timber.consumers.FeatureApplicator.apply"]], "millvolume (class in compas_timber.consumers)": [[217, "compas_timber.consumers.MillVolume"]], "tostring() (compas_timber.consumers.millvolume method)": [[218, "compas_timber.consumers.MillVolume.ToString"]], "copy() (compas_timber.consumers.millvolume method)": [[219, "compas_timber.consumers.MillVolume.copy"]], "from_json() (compas_timber.consumers.millvolume class method)": [[220, "compas_timber.consumers.MillVolume.from_json"]], "from_jsonstring() (compas_timber.consumers.millvolume class method)": [[221, "compas_timber.consumers.MillVolume.from_jsonstring"]], "sha256() (compas_timber.consumers.millvolume method)": [[222, "compas_timber.consumers.MillVolume.sha256"]], "to_json() (compas_timber.consumers.millvolume method)": [[223, "compas_timber.consumers.MillVolume.to_json"]], "to_jsonstring() (compas_timber.consumers.millvolume method)": [[224, "compas_timber.consumers.MillVolume.to_jsonstring"]], "validate_data() (compas_timber.consumers.millvolume class method)": [[225, "compas_timber.consumers.MillVolume.validate_data"]], "millvolumegeometry (class in compas_timber.consumers)": [[226, "compas_timber.consumers.MillVolumeGeometry"]], "apply() (compas_timber.consumers.millvolumegeometry method)": [[227, "compas_timber.consumers.MillVolumeGeometry.apply"]], "btlx (class in compas_timber.fabrication)": [[228, "compas_timber.fabrication.BTLx"]], "btlx_string() (compas_timber.fabrication.btlx method)": [[229, "compas_timber.fabrication.BTLx.btlx_string"]], "process_assembly() (compas_timber.fabrication.btlx method)": [[230, "compas_timber.fabrication.BTLx.process_assembly"]], "register_joint() (compas_timber.fabrication.btlx class method)": [[231, "compas_timber.fabrication.BTLx.register_joint"]], "btlxfrenchridgelap (class in compas_timber.fabrication)": [[232, "compas_timber.fabrication.BTLxFrenchRidgeLap"]], "create_process() (compas_timber.fabrication.btlxfrenchridgelap class method)": [[233, "compas_timber.fabrication.BTLxFrenchRidgeLap.create_process"]], "get_params() (compas_timber.fabrication.btlxfrenchridgelap method)": [[234, "compas_timber.fabrication.BTLxFrenchRidgeLap.get_params"]], "process_joints() (compas_timber.fabrication.btlxfrenchridgelap method)": [[235, "compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints"]], "btlxjackcut (class in compas_timber.fabrication)": [[236, "compas_timber.fabrication.BTLxJackCut"]], "create_process() (compas_timber.fabrication.btlxjackcut class method)": [[237, "compas_timber.fabrication.BTLxJackCut.create_process"]], "generate_process() (compas_timber.fabrication.btlxjackcut method)": [[238, "compas_timber.fabrication.BTLxJackCut.generate_process"]], "btlxprocess (class in compas_timber.fabrication)": [[239, "compas_timber.fabrication.BTLxProcess"]], "frenchridgefactory (class in compas_timber.fabrication)": [[240, "compas_timber.fabrication.FrenchRidgeFactory"]], "apply_processings() (compas_timber.fabrication.frenchridgefactory class method)": [[241, "compas_timber.fabrication.FrenchRidgeFactory.apply_processings"]], "lbuttfactory (class in compas_timber.fabrication)": [[242, "compas_timber.fabrication.LButtFactory"]], "apply_processings() (compas_timber.fabrication.lbuttfactory class method)": [[243, "compas_timber.fabrication.LButtFactory.apply_processings"]], "lmiterfactory (class in compas_timber.fabrication)": [[244, "compas_timber.fabrication.LMiterFactory"]], "apply_processings() (compas_timber.fabrication.lmiterfactory class method)": [[245, "compas_timber.fabrication.LMiterFactory.apply_processings"]], "tbuttfactory (class in compas_timber.fabrication)": [[246, "compas_timber.fabrication.TButtFactory"]], "apply_processings() (compas_timber.fabrication.tbuttfactory class method)": [[247, "compas_timber.fabrication.TButtFactory.apply_processings"]], "categoryrule (class in compas_timber.ghpython)": [[248, "compas_timber.ghpython.CategoryRule"]], "tostring() (compas_timber.ghpython.categoryrule method)": [[249, "compas_timber.ghpython.CategoryRule.ToString"]], "comply() (compas_timber.ghpython.categoryrule method)": [[250, "compas_timber.ghpython.CategoryRule.comply"]], "reorder() (compas_timber.ghpython.categoryrule method)": [[251, "compas_timber.ghpython.CategoryRule.reorder"]], "debuginfomation (class in compas_timber.ghpython)": [[252, "compas_timber.ghpython.DebugInfomation"]], "tostring() (compas_timber.ghpython.debuginfomation method)": [[253, "compas_timber.ghpython.DebugInfomation.ToString"]], "add_feature_error() (compas_timber.ghpython.debuginfomation method)": [[254, "compas_timber.ghpython.DebugInfomation.add_feature_error"]], "add_joint_error() (compas_timber.ghpython.debuginfomation method)": [[255, "compas_timber.ghpython.DebugInfomation.add_joint_error"]], "directrule (class in compas_timber.ghpython)": [[256, "compas_timber.ghpython.DirectRule"]], "tostring() (compas_timber.ghpython.directrule method)": [[257, "compas_timber.ghpython.DirectRule.ToString"]], "comply() (compas_timber.ghpython.directrule method)": [[258, "compas_timber.ghpython.DirectRule.comply"]], "featuredefinition (class in compas_timber.ghpython)": [[259, "compas_timber.ghpython.FeatureDefinition"]], "tostring() (compas_timber.ghpython.featuredefinition method)": [[260, "compas_timber.ghpython.FeatureDefinition.ToString"]], "jointdefinition (class in compas_timber.ghpython)": [[261, "compas_timber.ghpython.JointDefinition"]], "tostring() (compas_timber.ghpython.jointdefinition method)": [[262, "compas_timber.ghpython.JointDefinition.ToString"]], "is_identical() (compas_timber.ghpython.jointdefinition method)": [[263, "compas_timber.ghpython.JointDefinition.is_identical"]], "match() (compas_timber.ghpython.jointdefinition method)": [[264, "compas_timber.ghpython.JointDefinition.match"]], "jointoptions (class in compas_timber.ghpython)": [[265, "compas_timber.ghpython.JointOptions"]], "tostring() (compas_timber.ghpython.jointoptions method)": [[266, "compas_timber.ghpython.JointOptions.ToString"]], "is_identical() (compas_timber.ghpython.jointoptions method)": [[267, "compas_timber.ghpython.JointOptions.is_identical"]], "topologyrule (class in compas_timber.ghpython)": [[268, "compas_timber.ghpython.TopologyRule"]], "tostring() (compas_timber.ghpython.topologyrule method)": [[269, "compas_timber.ghpython.TopologyRule.ToString"]], "comply() (compas_timber.ghpython.topologyrule method)": [[270, "compas_timber.ghpython.TopologyRule.comply"]], "beam (class in compas_timber.parts)": [[271, "compas_timber.parts.Beam"]], "tostring() (compas_timber.parts.beam method)": [[272, "compas_timber.parts.Beam.ToString"]], "add_blank_extension() (compas_timber.parts.beam method)": [[273, "compas_timber.parts.Beam.add_blank_extension"]], "add_feature() (compas_timber.parts.beam method)": [[274, "compas_timber.parts.Beam.add_feature"]], "add_features() (compas_timber.parts.beam method)": [[275, "compas_timber.parts.Beam.add_features"]], "align_z() (compas_timber.parts.beam method)": [[276, "compas_timber.parts.Beam.align_z"]], "clear_features() (compas_timber.parts.beam method)": [[277, "compas_timber.parts.Beam.clear_features"]], "compute_aabb() (compas_timber.parts.beam method)": [[278, "compas_timber.parts.Beam.compute_aabb"]], "compute_obb() (compas_timber.parts.beam method)": [[279, "compas_timber.parts.Beam.compute_obb"]], "copy() (compas_timber.parts.beam method)": [[280, "compas_timber.parts.Beam.copy"]], "endpoint_closest_to_point() (compas_timber.parts.beam method)": [[281, "compas_timber.parts.Beam.endpoint_closest_to_point"]], "extension_to_plane() (compas_timber.parts.beam method)": [[282, "compas_timber.parts.Beam.extension_to_plane"]], "from_centerline() (compas_timber.parts.beam class method)": [[283, "compas_timber.parts.Beam.from_centerline"]], "from_endpoints() (compas_timber.parts.beam class method)": [[284, "compas_timber.parts.Beam.from_endpoints"]], "from_json() (compas_timber.parts.beam class method)": [[285, "compas_timber.parts.Beam.from_json"]], "from_jsonstring() (compas_timber.parts.beam class method)": [[286, "compas_timber.parts.Beam.from_jsonstring"]], "get_geometry() (compas_timber.parts.beam method)": [[287, "compas_timber.parts.Beam.get_geometry"]], "remove_blank_extension() (compas_timber.parts.beam method)": [[288, "compas_timber.parts.Beam.remove_blank_extension"]], "remove_features() (compas_timber.parts.beam method)": [[289, "compas_timber.parts.Beam.remove_features"]], "rotate() (compas_timber.parts.beam method)": [[290, "compas_timber.parts.Beam.rotate"]], "rotated() (compas_timber.parts.beam method)": [[291, "compas_timber.parts.Beam.rotated"]], "scale() (compas_timber.parts.beam method)": [[292, "compas_timber.parts.Beam.scale"]], "scaled() (compas_timber.parts.beam method)": [[293, "compas_timber.parts.Beam.scaled"]], "sha256() (compas_timber.parts.beam method)": [[294, "compas_timber.parts.Beam.sha256"]], "to_json() (compas_timber.parts.beam method)": [[295, "compas_timber.parts.Beam.to_json"]], "to_jsonstring() (compas_timber.parts.beam method)": [[296, "compas_timber.parts.Beam.to_jsonstring"]], "transform() (compas_timber.parts.beam method)": [[297, "compas_timber.parts.Beam.transform"]], "transform_numpy() (compas_timber.parts.beam method)": [[298, "compas_timber.parts.Beam.transform_numpy"]], "transformed() (compas_timber.parts.beam method)": [[299, "compas_timber.parts.Beam.transformed"]], "transformed_numpy() (compas_timber.parts.beam method)": [[300, "compas_timber.parts.Beam.transformed_numpy"]], "translate() (compas_timber.parts.beam method)": [[301, "compas_timber.parts.Beam.translate"]], "translated() (compas_timber.parts.beam method)": [[302, "compas_timber.parts.Beam.translated"]], "validate_data() (compas_timber.parts.beam class method)": [[303, "compas_timber.parts.Beam.validate_data"]], "actor (class in compas_timber.planning)": [[304, "compas_timber.planning.Actor"]], "get_name() (compas_timber.planning.actor class method)": [[305, "compas_timber.planning.Actor.get_name"]], "buildingplan (class in compas_timber.planning)": [[306, "compas_timber.planning.BuildingPlan"]], "tostring() (compas_timber.planning.buildingplan method)": [[307, "compas_timber.planning.BuildingPlan.ToString"]], "add_step() (compas_timber.planning.buildingplan method)": [[308, "compas_timber.planning.BuildingPlan.add_step"]], "copy() (compas_timber.planning.buildingplan method)": [[309, "compas_timber.planning.BuildingPlan.copy"]], "from_json() (compas_timber.planning.buildingplan class method)": [[310, "compas_timber.planning.BuildingPlan.from_json"]], "from_jsonstring() (compas_timber.planning.buildingplan class method)": [[311, "compas_timber.planning.BuildingPlan.from_jsonstring"]], "sha256() (compas_timber.planning.buildingplan method)": [[312, "compas_timber.planning.BuildingPlan.sha256"]], "to_json() (compas_timber.planning.buildingplan method)": [[313, "compas_timber.planning.BuildingPlan.to_json"]], "to_jsonstring() (compas_timber.planning.buildingplan method)": [[314, "compas_timber.planning.BuildingPlan.to_jsonstring"]], "validate_data() (compas_timber.planning.buildingplan class method)": [[315, "compas_timber.planning.BuildingPlan.validate_data"]], "simplesequencegenerator (class in compas_timber.planning)": [[316, "compas_timber.planning.SimpleSequenceGenerator"]], "step (class in compas_timber.planning)": [[317, "compas_timber.planning.Step"]], "tostring() (compas_timber.planning.step method)": [[318, "compas_timber.planning.Step.ToString"]], "copy() (compas_timber.planning.step method)": [[319, "compas_timber.planning.Step.copy"]], "from_json() (compas_timber.planning.step class method)": [[320, "compas_timber.planning.Step.from_json"]], "from_jsonstring() (compas_timber.planning.step class method)": [[321, "compas_timber.planning.Step.from_jsonstring"]], "sha256() (compas_timber.planning.step method)": [[322, "compas_timber.planning.Step.sha256"]], "to_json() (compas_timber.planning.step method)": [[323, "compas_timber.planning.Step.to_json"]], "to_jsonstring() (compas_timber.planning.step method)": [[324, "compas_timber.planning.Step.to_jsonstring"]], "transform() (compas_timber.planning.step method)": [[325, "compas_timber.planning.Step.transform"]], "validate_data() (compas_timber.planning.step class method)": [[326, "compas_timber.planning.Step.validate_data"]], "find_neighboring_beams() (in module compas_timber.rhino)": [[327, "compas_timber.rhino.find_neighboring_beams"]]}})