Search.setIndex({"docnames": ["api", "api/compas_timber.assembly", "api/compas_timber.connections", "api/compas_timber.consumers", "api/compas_timber.fabrication", "api/compas_timber.ghpython", "api/compas_timber.parts", "api/compas_timber.planning", "api/compas_timber.rhino", "api/generated/compas_timber.assembly.TimberAssembly", "api/generated/compas_timber.assembly.TimberAssembly.ToString", "api/generated/compas_timber.assembly.TimberAssembly.add_beam", "api/generated/compas_timber.assembly.TimberAssembly.add_connection", "api/generated/compas_timber.assembly.TimberAssembly.add_joint", "api/generated/compas_timber.assembly.TimberAssembly.add_part", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined", "api/generated/compas_timber.assembly.TimberAssembly.compute_aabb", "api/generated/compas_timber.assembly.TimberAssembly.compute_obb", "api/generated/compas_timber.assembly.TimberAssembly.connections", "api/generated/compas_timber.assembly.TimberAssembly.contains", "api/generated/compas_timber.assembly.TimberAssembly.copy", "api/generated/compas_timber.assembly.TimberAssembly.delete_connection", "api/generated/compas_timber.assembly.TimberAssembly.delete_part", "api/generated/compas_timber.assembly.TimberAssembly.find", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key", "api/generated/compas_timber.assembly.TimberAssembly.from_json", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.parts", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint", "api/generated/compas_timber.assembly.TimberAssembly.rotate", "api/generated/compas_timber.assembly.TimberAssembly.rotated", "api/generated/compas_timber.assembly.TimberAssembly.scale", "api/generated/compas_timber.assembly.TimberAssembly.scaled", "api/generated/compas_timber.assembly.TimberAssembly.set_topologies", "api/generated/compas_timber.assembly.TimberAssembly.sha256", "api/generated/compas_timber.assembly.TimberAssembly.to_json", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.transform", "api/generated/compas_timber.assembly.TimberAssembly.transform_numpy", "api/generated/compas_timber.assembly.TimberAssembly.transformed", "api/generated/compas_timber.assembly.TimberAssembly.transformed_numpy", "api/generated/compas_timber.assembly.TimberAssembly.translate", "api/generated/compas_timber.assembly.TimberAssembly.translated", "api/generated/compas_timber.assembly.TimberAssembly.validate_data", "api/generated/compas_timber.connections.BeamJoinningError", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.FrenchRidgeLapJoint", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.ToString", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_features", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.check_geometry", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.copy", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.create", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_json", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.sha256", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_json", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.validate_data", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.from_jsonstring", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.to_jsonstring", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring", "api/generated/compas_timber.connections.LButtJoint.get_cross_cutting_plane", "api/generated/compas_timber.connections.LButtJoint.get_main_cutting_plane", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LHalfLapJoint", "api/generated/compas_timber.connections.LHalfLapJoint.ToString", "api/generated/compas_timber.connections.LHalfLapJoint.add_features", "api/generated/compas_timber.connections.LHalfLapJoint.copy", "api/generated/compas_timber.connections.LHalfLapJoint.create", "api/generated/compas_timber.connections.LHalfLapJoint.from_json", "api/generated/compas_timber.connections.LHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LHalfLapJoint.sha256", "api/generated/compas_timber.connections.LHalfLapJoint.to_json", "api/generated/compas_timber.connections.LHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.LapJoint", "api/generated/compas_timber.connections.LapJoint.ToString", "api/generated/compas_timber.connections.LapJoint.add_features", "api/generated/compas_timber.connections.LapJoint.copy", "api/generated/compas_timber.connections.LapJoint.create", "api/generated/compas_timber.connections.LapJoint.from_json", "api/generated/compas_timber.connections.LapJoint.from_jsonstring", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LapJoint.sha256", "api/generated/compas_timber.connections.LapJoint.to_json", "api/generated/compas_timber.connections.LapJoint.to_jsonstring", "api/generated/compas_timber.connections.LapJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring", "api/generated/compas_timber.connections.TButtJoint.get_cutting_plane", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.THalfLapJoint", "api/generated/compas_timber.connections.THalfLapJoint.ToString", "api/generated/compas_timber.connections.THalfLapJoint.add_features", "api/generated/compas_timber.connections.THalfLapJoint.copy", "api/generated/compas_timber.connections.THalfLapJoint.create", "api/generated/compas_timber.connections.THalfLapJoint.from_json", "api/generated/compas_timber.connections.THalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.THalfLapJoint.sha256", "api/generated/compas_timber.connections.THalfLapJoint.to_json", "api/generated/compas_timber.connections.THalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.validate_data", "api/generated/compas_timber.connections.XHalfLapJoint", "api/generated/compas_timber.connections.XHalfLapJoint.ToString", "api/generated/compas_timber.connections.XHalfLapJoint.add_features", "api/generated/compas_timber.connections.XHalfLapJoint.copy", "api/generated/compas_timber.connections.XHalfLapJoint.create", "api/generated/compas_timber.connections.XHalfLapJoint.from_json", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.XHalfLapJoint.sha256", "api/generated/compas_timber.connections.XHalfLapJoint.to_json", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data", "api/generated/compas_timber.connections.beam_side_incidence", "api/generated/compas_timber.connections.find_neighboring_beams", "api/generated/compas_timber.consumers.BeamGeometry", "api/generated/compas_timber.consumers.BrepGeometryConsumer", "api/generated/compas_timber.consumers.CutFeature", "api/generated/compas_timber.consumers.CutFeature.ToString", "api/generated/compas_timber.consumers.CutFeature.copy", "api/generated/compas_timber.consumers.CutFeature.from_json", "api/generated/compas_timber.consumers.CutFeature.from_jsonstring", "api/generated/compas_timber.consumers.CutFeature.sha256", "api/generated/compas_timber.consumers.CutFeature.to_json", "api/generated/compas_timber.consumers.CutFeature.to_jsonstring", "api/generated/compas_timber.consumers.CutFeature.validate_data", "api/generated/compas_timber.consumers.CutFeatureGeometry", "api/generated/compas_timber.consumers.CutFeatureGeometry.apply", "api/generated/compas_timber.consumers.DrillFeature", "api/generated/compas_timber.consumers.DrillFeature.ToString", "api/generated/compas_timber.consumers.DrillFeature.copy", "api/generated/compas_timber.consumers.DrillFeature.from_json", "api/generated/compas_timber.consumers.DrillFeature.from_jsonstring", "api/generated/compas_timber.consumers.DrillFeature.sha256", "api/generated/compas_timber.consumers.DrillFeature.to_json", "api/generated/compas_timber.consumers.DrillFeature.to_jsonstring", "api/generated/compas_timber.consumers.DrillFeature.validate_data", "api/generated/compas_timber.consumers.DrillFeatureGeometry", "api/generated/compas_timber.consumers.DrillFeatureGeometry.apply", "api/generated/compas_timber.consumers.FeatureApplicationError", "api/generated/compas_timber.consumers.FeatureApplicator", "api/generated/compas_timber.consumers.FeatureApplicator.apply", "api/generated/compas_timber.consumers.MillVolume", "api/generated/compas_timber.consumers.MillVolume.ToString", "api/generated/compas_timber.consumers.MillVolume.copy", "api/generated/compas_timber.consumers.MillVolume.from_json", "api/generated/compas_timber.consumers.MillVolume.from_jsonstring", "api/generated/compas_timber.consumers.MillVolume.sha256", "api/generated/compas_timber.consumers.MillVolume.to_json", "api/generated/compas_timber.consumers.MillVolume.to_jsonstring", "api/generated/compas_timber.consumers.MillVolume.validate_data", "api/generated/compas_timber.consumers.MillVolumeGeometry", "api/generated/compas_timber.consumers.MillVolumeGeometry.apply", "api/generated/compas_timber.fabrication.BTLx", "api/generated/compas_timber.fabrication.BTLx.btlx_string", "api/generated/compas_timber.fabrication.BTLx.process_assembly", "api/generated/compas_timber.fabrication.BTLx.register_joint", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints", "api/generated/compas_timber.fabrication.BTLxJackCut", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process", "api/generated/compas_timber.fabrication.BTLxProcess", "api/generated/compas_timber.fabrication.FrenchRidgeFactory", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings", "api/generated/compas_timber.fabrication.LButtFactory", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings", "api/generated/compas_timber.fabrication.LMiterFactory", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings", "api/generated/compas_timber.fabrication.TButtFactory", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings", "api/generated/compas_timber.ghpython.CategoryRule", "api/generated/compas_timber.ghpython.CategoryRule.ToString", "api/generated/compas_timber.ghpython.CategoryRule.comply", "api/generated/compas_timber.ghpython.CategoryRule.reorder", "api/generated/compas_timber.ghpython.DebugInfomation", "api/generated/compas_timber.ghpython.DebugInfomation.ToString", "api/generated/compas_timber.ghpython.DebugInfomation.add_feature_error", "api/generated/compas_timber.ghpython.DebugInfomation.add_joint_error", "api/generated/compas_timber.ghpython.DirectRule", "api/generated/compas_timber.ghpython.DirectRule.ToString", "api/generated/compas_timber.ghpython.DirectRule.comply", "api/generated/compas_timber.ghpython.FeatureDefinition", "api/generated/compas_timber.ghpython.FeatureDefinition.ToString", "api/generated/compas_timber.ghpython.JointDefinition", "api/generated/compas_timber.ghpython.JointDefinition.ToString", "api/generated/compas_timber.ghpython.JointDefinition.is_identical", "api/generated/compas_timber.ghpython.JointDefinition.match", "api/generated/compas_timber.ghpython.JointOptions", "api/generated/compas_timber.ghpython.JointOptions.ToString", "api/generated/compas_timber.ghpython.JointOptions.is_identical", "api/generated/compas_timber.ghpython.TopologyRule", "api/generated/compas_timber.ghpython.TopologyRule.ToString", "api/generated/compas_timber.ghpython.TopologyRule.comply", "api/generated/compas_timber.parts.Beam", "api/generated/compas_timber.parts.Beam.ToString", "api/generated/compas_timber.parts.Beam.add_blank_extension", "api/generated/compas_timber.parts.Beam.add_feature", "api/generated/compas_timber.parts.Beam.add_features", "api/generated/compas_timber.parts.Beam.align_z", "api/generated/compas_timber.parts.Beam.clear_features", "api/generated/compas_timber.parts.Beam.compute_aabb", "api/generated/compas_timber.parts.Beam.compute_obb", "api/generated/compas_timber.parts.Beam.copy", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point", "api/generated/compas_timber.parts.Beam.extension_to_plane", "api/generated/compas_timber.parts.Beam.from_centerline", "api/generated/compas_timber.parts.Beam.from_endpoints", "api/generated/compas_timber.parts.Beam.from_json", "api/generated/compas_timber.parts.Beam.from_jsonstring", "api/generated/compas_timber.parts.Beam.get_geometry", "api/generated/compas_timber.parts.Beam.remove_blank_extension", "api/generated/compas_timber.parts.Beam.remove_features", "api/generated/compas_timber.parts.Beam.rotate", "api/generated/compas_timber.parts.Beam.rotated", "api/generated/compas_timber.parts.Beam.scale", "api/generated/compas_timber.parts.Beam.scaled", "api/generated/compas_timber.parts.Beam.sha256", "api/generated/compas_timber.parts.Beam.to_json", "api/generated/compas_timber.parts.Beam.to_jsonstring", "api/generated/compas_timber.parts.Beam.transform", "api/generated/compas_timber.parts.Beam.transform_numpy", "api/generated/compas_timber.parts.Beam.transformed", "api/generated/compas_timber.parts.Beam.transformed_numpy", "api/generated/compas_timber.parts.Beam.translate", "api/generated/compas_timber.parts.Beam.translated", "api/generated/compas_timber.parts.Beam.validate_data", "api/generated/compas_timber.planning.Actor", "api/generated/compas_timber.planning.Actor.get_name", "api/generated/compas_timber.planning.BuildingPlan", "api/generated/compas_timber.planning.BuildingPlan.ToString", "api/generated/compas_timber.planning.BuildingPlan.add_step", "api/generated/compas_timber.planning.BuildingPlan.copy", "api/generated/compas_timber.planning.BuildingPlan.from_json", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.sha256", "api/generated/compas_timber.planning.BuildingPlan.to_json", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.validate_data", "api/generated/compas_timber.planning.SimpleSequenceGenerator", "api/generated/compas_timber.planning.Step", "api/generated/compas_timber.planning.Step.ToString", "api/generated/compas_timber.planning.Step.copy", "api/generated/compas_timber.planning.Step.from_json", "api/generated/compas_timber.planning.Step.from_jsonstring", "api/generated/compas_timber.planning.Step.sha256", "api/generated/compas_timber.planning.Step.to_json", "api/generated/compas_timber.planning.Step.to_jsonstring", "api/generated/compas_timber.planning.Step.transform", "api/generated/compas_timber.planning.Step.validate_data", "api/generated/compas_timber.rhino.find_neighboring_beams", "citing", "examples", "examples/create_joint", "index", "installation", "license", "tutorials", "tutorials/BTLx_contribution_guide", "tutorials/grasshopper/assembly", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beam", "tutorials/grasshopper/examples", "tutorials/grasshopper/features", "tutorials/grasshopper/joints", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "filenames": ["api.rst", "api/compas_timber.assembly.rst", "api/compas_timber.connections.rst", "api/compas_timber.consumers.rst", "api/compas_timber.fabrication.rst", "api/compas_timber.ghpython.rst", "api/compas_timber.parts.rst", "api/compas_timber.planning.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.assembly.TimberAssembly.rst", "api/generated/compas_timber.assembly.TimberAssembly.ToString.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_beam.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined.rst", "api/generated/compas_timber.assembly.TimberAssembly.compute_aabb.rst", "api/generated/compas_timber.assembly.TimberAssembly.compute_obb.rst", "api/generated/compas_timber.assembly.TimberAssembly.connections.rst", "api/generated/compas_timber.assembly.TimberAssembly.contains.rst", "api/generated/compas_timber.assembly.TimberAssembly.copy.rst", "api/generated/compas_timber.assembly.TimberAssembly.delete_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.delete_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.find.rst", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.parts.rst", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.rotate.rst", "api/generated/compas_timber.assembly.TimberAssembly.rotated.rst", "api/generated/compas_timber.assembly.TimberAssembly.scale.rst", "api/generated/compas_timber.assembly.TimberAssembly.scaled.rst", "api/generated/compas_timber.assembly.TimberAssembly.set_topologies.rst", "api/generated/compas_timber.assembly.TimberAssembly.sha256.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.transform.rst", "api/generated/compas_timber.assembly.TimberAssembly.transform_numpy.rst", "api/generated/compas_timber.assembly.TimberAssembly.transformed.rst", "api/generated/compas_timber.assembly.TimberAssembly.transformed_numpy.rst", "api/generated/compas_timber.assembly.TimberAssembly.translate.rst", "api/generated/compas_timber.assembly.TimberAssembly.translated.rst", "api/generated/compas_timber.assembly.TimberAssembly.validate_data.rst", "api/generated/compas_timber.connections.BeamJoinningError.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.ToString.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_features.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.check_geometry.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.copy.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.create.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_json.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.sha256.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_json.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.validate_data.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.from_json.rst", "api/generated/compas_timber.connections.Joint.from_jsonstring.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_json.rst", "api/generated/compas_timber.connections.Joint.to_jsonstring.rst", "api/generated/compas_timber.connections.Joint.validate_data.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.from_json.rst", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.get_cross_cutting_plane.rst", "api/generated/compas_timber.connections.LButtJoint.get_main_cutting_plane.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.to_json.rst", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.validate_data.rst", "api/generated/compas_timber.connections.LHalfLapJoint.rst", "api/generated/compas_timber.connections.LHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.LHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.LHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.LHalfLapJoint.create.rst", "api/generated/compas_timber.connections.LHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.LHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.LHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.LHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.from_json.rst", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_json.rst", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_data.rst", "api/generated/compas_timber.connections.LapJoint.rst", "api/generated/compas_timber.connections.LapJoint.ToString.rst", "api/generated/compas_timber.connections.LapJoint.add_features.rst", "api/generated/compas_timber.connections.LapJoint.copy.rst", "api/generated/compas_timber.connections.LapJoint.create.rst", "api/generated/compas_timber.connections.LapJoint.from_json.rst", "api/generated/compas_timber.connections.LapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LapJoint.sha256.rst", "api/generated/compas_timber.connections.LapJoint.to_json.rst", "api/generated/compas_timber.connections.LapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.validate_data.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.from_json.rst", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.get_cutting_plane.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.to_json.rst", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.validate_data.rst", "api/generated/compas_timber.connections.THalfLapJoint.rst", "api/generated/compas_timber.connections.THalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.THalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.THalfLapJoint.copy.rst", "api/generated/compas_timber.connections.THalfLapJoint.create.rst", "api/generated/compas_timber.connections.THalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.THalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.THalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.THalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.THalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.THalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.THalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.rst", "api/generated/compas_timber.connections.XHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.XHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.XHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.XHalfLapJoint.create.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.XHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.beam_side_incidence.rst", "api/generated/compas_timber.connections.find_neighboring_beams.rst", "api/generated/compas_timber.consumers.BeamGeometry.rst", "api/generated/compas_timber.consumers.BrepGeometryConsumer.rst", "api/generated/compas_timber.consumers.CutFeature.rst", "api/generated/compas_timber.consumers.CutFeature.ToString.rst", "api/generated/compas_timber.consumers.CutFeature.copy.rst", "api/generated/compas_timber.consumers.CutFeature.from_json.rst", "api/generated/compas_timber.consumers.CutFeature.from_jsonstring.rst", "api/generated/compas_timber.consumers.CutFeature.sha256.rst", "api/generated/compas_timber.consumers.CutFeature.to_json.rst", "api/generated/compas_timber.consumers.CutFeature.to_jsonstring.rst", "api/generated/compas_timber.consumers.CutFeature.validate_data.rst", "api/generated/compas_timber.consumers.CutFeatureGeometry.rst", "api/generated/compas_timber.consumers.CutFeatureGeometry.apply.rst", "api/generated/compas_timber.consumers.DrillFeature.rst", "api/generated/compas_timber.consumers.DrillFeature.ToString.rst", "api/generated/compas_timber.consumers.DrillFeature.copy.rst", "api/generated/compas_timber.consumers.DrillFeature.from_json.rst", "api/generated/compas_timber.consumers.DrillFeature.from_jsonstring.rst", "api/generated/compas_timber.consumers.DrillFeature.sha256.rst", "api/generated/compas_timber.consumers.DrillFeature.to_json.rst", "api/generated/compas_timber.consumers.DrillFeature.to_jsonstring.rst", "api/generated/compas_timber.consumers.DrillFeature.validate_data.rst", "api/generated/compas_timber.consumers.DrillFeatureGeometry.rst", "api/generated/compas_timber.consumers.DrillFeatureGeometry.apply.rst", "api/generated/compas_timber.consumers.FeatureApplicationError.rst", "api/generated/compas_timber.consumers.FeatureApplicator.rst", "api/generated/compas_timber.consumers.FeatureApplicator.apply.rst", "api/generated/compas_timber.consumers.MillVolume.rst", "api/generated/compas_timber.consumers.MillVolume.ToString.rst", "api/generated/compas_timber.consumers.MillVolume.copy.rst", "api/generated/compas_timber.consumers.MillVolume.from_json.rst", "api/generated/compas_timber.consumers.MillVolume.from_jsonstring.rst", "api/generated/compas_timber.consumers.MillVolume.sha256.rst", "api/generated/compas_timber.consumers.MillVolume.to_json.rst", "api/generated/compas_timber.consumers.MillVolume.to_jsonstring.rst", "api/generated/compas_timber.consumers.MillVolume.validate_data.rst", "api/generated/compas_timber.consumers.MillVolumeGeometry.rst", "api/generated/compas_timber.consumers.MillVolumeGeometry.apply.rst", "api/generated/compas_timber.fabrication.BTLx.rst", "api/generated/compas_timber.fabrication.BTLx.btlx_string.rst", "api/generated/compas_timber.fabrication.BTLx.process_assembly.rst", "api/generated/compas_timber.fabrication.BTLx.register_joint.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process.rst", "api/generated/compas_timber.fabrication.BTLxProcess.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LButtFactory.rst", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LMiterFactory.rst", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.TButtFactory.rst", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings.rst", "api/generated/compas_timber.ghpython.CategoryRule.rst", "api/generated/compas_timber.ghpython.CategoryRule.ToString.rst", "api/generated/compas_timber.ghpython.CategoryRule.comply.rst", "api/generated/compas_timber.ghpython.CategoryRule.reorder.rst", "api/generated/compas_timber.ghpython.DebugInfomation.rst", "api/generated/compas_timber.ghpython.DebugInfomation.ToString.rst", "api/generated/compas_timber.ghpython.DebugInfomation.add_feature_error.rst", "api/generated/compas_timber.ghpython.DebugInfomation.add_joint_error.rst", "api/generated/compas_timber.ghpython.DirectRule.rst", "api/generated/compas_timber.ghpython.DirectRule.ToString.rst", "api/generated/compas_timber.ghpython.DirectRule.comply.rst", "api/generated/compas_timber.ghpython.FeatureDefinition.rst", "api/generated/compas_timber.ghpython.FeatureDefinition.ToString.rst", "api/generated/compas_timber.ghpython.JointDefinition.rst", "api/generated/compas_timber.ghpython.JointDefinition.ToString.rst", "api/generated/compas_timber.ghpython.JointDefinition.is_identical.rst", "api/generated/compas_timber.ghpython.JointDefinition.match.rst", "api/generated/compas_timber.ghpython.JointOptions.rst", "api/generated/compas_timber.ghpython.JointOptions.ToString.rst", "api/generated/compas_timber.ghpython.JointOptions.is_identical.rst", "api/generated/compas_timber.ghpython.TopologyRule.rst", "api/generated/compas_timber.ghpython.TopologyRule.ToString.rst", "api/generated/compas_timber.ghpython.TopologyRule.comply.rst", "api/generated/compas_timber.parts.Beam.rst", "api/generated/compas_timber.parts.Beam.ToString.rst", "api/generated/compas_timber.parts.Beam.add_blank_extension.rst", "api/generated/compas_timber.parts.Beam.add_feature.rst", "api/generated/compas_timber.parts.Beam.add_features.rst", "api/generated/compas_timber.parts.Beam.align_z.rst", "api/generated/compas_timber.parts.Beam.clear_features.rst", "api/generated/compas_timber.parts.Beam.compute_aabb.rst", "api/generated/compas_timber.parts.Beam.compute_obb.rst", "api/generated/compas_timber.parts.Beam.copy.rst", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.parts.Beam.extension_to_plane.rst", "api/generated/compas_timber.parts.Beam.from_centerline.rst", "api/generated/compas_timber.parts.Beam.from_endpoints.rst", "api/generated/compas_timber.parts.Beam.from_json.rst", "api/generated/compas_timber.parts.Beam.from_jsonstring.rst", "api/generated/compas_timber.parts.Beam.get_geometry.rst", "api/generated/compas_timber.parts.Beam.remove_blank_extension.rst", "api/generated/compas_timber.parts.Beam.remove_features.rst", "api/generated/compas_timber.parts.Beam.rotate.rst", "api/generated/compas_timber.parts.Beam.rotated.rst", "api/generated/compas_timber.parts.Beam.scale.rst", "api/generated/compas_timber.parts.Beam.scaled.rst", "api/generated/compas_timber.parts.Beam.sha256.rst", "api/generated/compas_timber.parts.Beam.to_json.rst", "api/generated/compas_timber.parts.Beam.to_jsonstring.rst", "api/generated/compas_timber.parts.Beam.transform.rst", "api/generated/compas_timber.parts.Beam.transform_numpy.rst", "api/generated/compas_timber.parts.Beam.transformed.rst", "api/generated/compas_timber.parts.Beam.transformed_numpy.rst", "api/generated/compas_timber.parts.Beam.translate.rst", "api/generated/compas_timber.parts.Beam.translated.rst", "api/generated/compas_timber.parts.Beam.validate_data.rst", "api/generated/compas_timber.planning.Actor.rst", "api/generated/compas_timber.planning.Actor.get_name.rst", "api/generated/compas_timber.planning.BuildingPlan.rst", "api/generated/compas_timber.planning.BuildingPlan.ToString.rst", "api/generated/compas_timber.planning.BuildingPlan.add_step.rst", "api/generated/compas_timber.planning.BuildingPlan.copy.rst", "api/generated/compas_timber.planning.BuildingPlan.from_json.rst", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.sha256.rst", "api/generated/compas_timber.planning.BuildingPlan.to_json.rst", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.validate_data.rst", "api/generated/compas_timber.planning.SimpleSequenceGenerator.rst", "api/generated/compas_timber.planning.Step.rst", "api/generated/compas_timber.planning.Step.ToString.rst", "api/generated/compas_timber.planning.Step.copy.rst", "api/generated/compas_timber.planning.Step.from_json.rst", "api/generated/compas_timber.planning.Step.from_jsonstring.rst", "api/generated/compas_timber.planning.Step.sha256.rst", "api/generated/compas_timber.planning.Step.to_json.rst", "api/generated/compas_timber.planning.Step.to_jsonstring.rst", "api/generated/compas_timber.planning.Step.transform.rst", "api/generated/compas_timber.planning.Step.validate_data.rst", "api/generated/compas_timber.rhino.find_neighboring_beams.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "license.rst", "tutorials.rst", "tutorials/BTLx_contribution_guide.rst", "tutorials/grasshopper/assembly.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beam.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joints.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "titles": ["API Reference", "compas_timber.assembly", "compas_timber.connections", "compas_timber.consumers", "compas_timber.fabrication", "compas_timber.ghpython", "compas_timber.parts", "compas_timber.planning", "rhino", "TimberAssembly", "TimberAssembly.ToString", "TimberAssembly.add_beam", "TimberAssembly.add_connection", "TimberAssembly.add_joint", "TimberAssembly.add_part", "TimberAssembly.are_parts_joined", "TimberAssembly.compute_aabb", "TimberAssembly.compute_obb", "TimberAssembly.connections", "TimberAssembly.contains", "TimberAssembly.copy", "TimberAssembly.delete_connection", "TimberAssembly.delete_part", "TimberAssembly.find", "TimberAssembly.find_by_key", "TimberAssembly.from_json", "TimberAssembly.from_jsonstring", "TimberAssembly.parts", "TimberAssembly.remove_joint", "TimberAssembly.rotate", "TimberAssembly.rotated", "TimberAssembly.scale", "TimberAssembly.scaled", "TimberAssembly.set_topologies", "TimberAssembly.sha256", "TimberAssembly.to_json", "TimberAssembly.to_jsonstring", "TimberAssembly.transform", "TimberAssembly.transform_numpy", "TimberAssembly.transformed", "TimberAssembly.transformed_numpy", "TimberAssembly.translate", "TimberAssembly.translated", "TimberAssembly.validate_data", "BeamJoinningError", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "FrenchRidgeLapJoint", "FrenchRidgeLapJoint.ToString", "FrenchRidgeLapJoint.add_features", "FrenchRidgeLapJoint.check_geometry", "FrenchRidgeLapJoint.copy", "FrenchRidgeLapJoint.create", "FrenchRidgeLapJoint.from_json", "FrenchRidgeLapJoint.from_jsonstring", "FrenchRidgeLapJoint.restore_beams_from_keys", "FrenchRidgeLapJoint.sha256", "FrenchRidgeLapJoint.to_json", "FrenchRidgeLapJoint.to_jsonstring", "FrenchRidgeLapJoint.validate_data", "Joint", "Joint.ToString", "Joint.add_features", "Joint.copy", "Joint.create", "Joint.from_json", "Joint.from_jsonstring", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_json", "Joint.to_jsonstring", "Joint.validate_data", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_features", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.from_json", "LButtJoint.from_jsonstring", "LButtJoint.get_cross_cutting_plane", "LButtJoint.get_main_cutting_plane", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.to_json", "LButtJoint.to_jsonstring", "LButtJoint.validate_data", "LHalfLapJoint", "LHalfLapJoint.ToString", "LHalfLapJoint.add_features", "LHalfLapJoint.copy", "LHalfLapJoint.create", "LHalfLapJoint.from_json", "LHalfLapJoint.from_jsonstring", "LHalfLapJoint.get_cross_cutting_frame", "LHalfLapJoint.get_main_cutting_frame", "LHalfLapJoint.restore_beams_from_keys", "LHalfLapJoint.sha256", "LHalfLapJoint.to_json", "LHalfLapJoint.to_jsonstring", "LHalfLapJoint.validate_data", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_features", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.from_json", "LMiterJoint.from_jsonstring", "LMiterJoint.get_cutting_planes", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_json", "LMiterJoint.to_jsonstring", "LMiterJoint.validate_data", "LapJoint", "LapJoint.ToString", "LapJoint.add_features", "LapJoint.copy", "LapJoint.create", "LapJoint.from_json", "LapJoint.from_jsonstring", "LapJoint.get_cross_cutting_frame", "LapJoint.get_main_cutting_frame", "LapJoint.restore_beams_from_keys", "LapJoint.sha256", "LapJoint.to_json", "LapJoint.to_jsonstring", "LapJoint.validate_data", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_features", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.from_json", "TButtJoint.from_jsonstring", "TButtJoint.get_cutting_plane", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.to_json", "TButtJoint.to_jsonstring", "TButtJoint.validate_data", "THalfLapJoint", "THalfLapJoint.ToString", "THalfLapJoint.add_features", "THalfLapJoint.copy", "THalfLapJoint.create", "THalfLapJoint.from_json", "THalfLapJoint.from_jsonstring", "THalfLapJoint.get_cross_cutting_frame", "THalfLapJoint.get_main_cutting_frame", "THalfLapJoint.restore_beams_from_keys", "THalfLapJoint.sha256", "THalfLapJoint.to_json", "THalfLapJoint.to_jsonstring", "THalfLapJoint.validate_data", "XHalfLapJoint", "XHalfLapJoint.ToString", "XHalfLapJoint.add_features", "XHalfLapJoint.copy", "XHalfLapJoint.create", "XHalfLapJoint.from_json", "XHalfLapJoint.from_jsonstring", "XHalfLapJoint.get_cross_cutting_frame", "XHalfLapJoint.get_main_cutting_frame", "XHalfLapJoint.restore_beams_from_keys", "XHalfLapJoint.sha256", "XHalfLapJoint.to_json", "XHalfLapJoint.to_jsonstring", "XHalfLapJoint.validate_data", "beam_side_incidence", "find_neighboring_beams", "BeamGeometry", "BrepGeometryConsumer", "CutFeature", "CutFeature.ToString", "CutFeature.copy", "CutFeature.from_json", "CutFeature.from_jsonstring", "CutFeature.sha256", "CutFeature.to_json", "CutFeature.to_jsonstring", "CutFeature.validate_data", "CutFeatureGeometry", "CutFeatureGeometry.apply", "DrillFeature", "DrillFeature.ToString", "DrillFeature.copy", "DrillFeature.from_json", "DrillFeature.from_jsonstring", "DrillFeature.sha256", "DrillFeature.to_json", "DrillFeature.to_jsonstring", "DrillFeature.validate_data", "DrillFeatureGeometry", "DrillFeatureGeometry.apply", "FeatureApplicationError", "FeatureApplicator", "FeatureApplicator.apply", "MillVolume", "MillVolume.ToString", "MillVolume.copy", "MillVolume.from_json", "MillVolume.from_jsonstring", "MillVolume.sha256", "MillVolume.to_json", "MillVolume.to_jsonstring", "MillVolume.validate_data", "MillVolumeGeometry", "MillVolumeGeometry.apply", "BTLx", "BTLx.btlx_string", "BTLx.process_assembly", "BTLx.register_joint", "BTLxFrenchRidgeLap", "BTLxFrenchRidgeLap.create_process", "BTLxFrenchRidgeLap.get_params", "BTLxFrenchRidgeLap.process_joints", "BTLxJackCut", "BTLxJackCut.create_process", "BTLxJackCut.generate_process", "BTLxProcess", "FrenchRidgeFactory", "FrenchRidgeFactory.apply_processings", "LButtFactory", "LButtFactory.apply_processings", "LMiterFactory", "LMiterFactory.apply_processings", "TButtFactory", "TButtFactory.apply_processings", "CategoryRule", "CategoryRule.ToString", "CategoryRule.comply", "CategoryRule.reorder", "DebugInfomation", "DebugInfomation.ToString", "DebugInfomation.add_feature_error", "DebugInfomation.add_joint_error", "DirectRule", "DirectRule.ToString", "DirectRule.comply", "FeatureDefinition", "FeatureDefinition.ToString", "JointDefinition", "JointDefinition.ToString", "JointDefinition.is_identical", "JointDefinition.match", "JointOptions", "JointOptions.ToString", "JointOptions.is_identical", "TopologyRule", "TopologyRule.ToString", "TopologyRule.comply", "Beam", "Beam.ToString", "Beam.add_blank_extension", "Beam.add_feature", "Beam.add_features", "Beam.align_z", "Beam.clear_features", "Beam.compute_aabb", "Beam.compute_obb", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_endpoints", "Beam.from_json", "Beam.from_jsonstring", "Beam.get_geometry", "Beam.remove_blank_extension", "Beam.remove_features", "Beam.rotate", "Beam.rotated", "Beam.scale", "Beam.scaled", "Beam.sha256", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transform_numpy", "Beam.transformed", "Beam.transformed_numpy", "Beam.translate", "Beam.translated", "Beam.validate_data", "Actor", "Actor.get_name", "BuildingPlan", "BuildingPlan.ToString", "BuildingPlan.add_step", "BuildingPlan.copy", "BuildingPlan.from_json", "BuildingPlan.from_jsonstring", "BuildingPlan.sha256", "BuildingPlan.to_json", "BuildingPlan.to_jsonstring", "BuildingPlan.validate_data", "SimpleSequenceGenerator", "Step", "Step.ToString", "Step.copy", "Step.from_json", "Step.from_jsonstring", "Step.sha256", "Step.to_json", "Step.to_jsonstring", "Step.transform", "Step.validate_data", "find_neighboring_beams", "Citing", "Examples", "Create Joint", "COMPAS TIMBER", "Installation", "License", "Grasshopper plugin", "BTLx Contribution Guide", "Assembly", "Attributes", "Beam", "Examples", "Features", "Joints", "Show", "Utils", "Workflow"], "terms": {"compas_timb": [0, 9, 44, 45, 48, 53, 61, 65, 68, 73, 75, 79, 89, 93, 103, 107, 116, 120, 130, 134, 143, 147, 157, 161, 171, 172, 173, 174, 175, 184, 185, 186, 195, 196, 197, 198, 200, 209, 210, 211, 214, 215, 219, 222, 223, 225, 227, 229, 231, 235, 239, 242, 244, 248, 251, 254, 287, 289, 299, 300, 310, 311, 314, 315], "assembli": [0, 9, 11, 12, 13, 14, 19, 22, 23, 24, 27, 28, 48, 53, 56, 65, 68, 75, 79, 84, 89, 93, 98, 103, 107, 111, 116, 120, 125, 130, 134, 138, 143, 147, 152, 157, 161, 166, 174, 211, 213, 257, 287, 299, 313, 314, 317, 324, 325, 327], "part": [0, 9, 12, 13, 14, 15, 18, 21, 22, 23, 24, 51, 68, 184, 195, 209, 211, 213, 215, 216, 219, 220, 224, 226, 228, 230, 254, 257, 270, 310, 314, 318, 321, 323, 325], "connect": [0, 10, 12, 21, 44, 45, 48, 49, 53, 61, 62, 65, 68, 73, 75, 76, 79, 89, 90, 93, 103, 104, 107, 116, 117, 120, 130, 131, 134, 143, 144, 147, 157, 158, 161, 171, 172, 176, 187, 201, 224, 226, 228, 230, 239, 248, 251, 255, 290, 301, 314, 316, 319, 324], "consum": [0, 173, 174, 175, 184, 185, 186, 195, 196, 197, 198, 200, 209, 210, 314], "fabric": [0, 211, 214, 215, 218, 219, 222, 223, 225, 227, 229, 311, 314], "plan": [0, 287, 289, 299, 300, 314], "ghpython": [0, 231, 235, 239, 242, 244, 248, 251, 314, 317], "rhino": [0, 10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 172, 176, 187, 201, 255, 290, 301, 310, 312, 314, 315, 320, 321, 326], "The": [8, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 52, 53, 54, 55, 58, 59, 60, 61, 64, 65, 66, 67, 70, 71, 72, 75, 78, 79, 80, 81, 86, 87, 88, 89, 92, 93, 94, 95, 100, 101, 102, 103, 106, 107, 108, 109, 113, 114, 115, 116, 119, 120, 121, 122, 127, 128, 129, 130, 133, 134, 135, 136, 140, 141, 142, 143, 146, 147, 148, 149, 154, 155, 156, 157, 160, 161, 162, 163, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 214, 215, 219, 222, 224, 226, 228, 230, 234, 248, 251, 254, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 292, 293, 294, 296, 297, 298, 302, 303, 304, 306, 307, 309, 310, 316, 317, 320, 321, 323, 324, 326, 327], "modul": [8, 222, 314, 318], "contain": [8, 9, 25, 26, 46, 48, 53, 54, 55, 65, 66, 67, 79, 80, 81, 93, 94, 95, 107, 108, 109, 120, 121, 122, 134, 135, 136, 147, 148, 149, 161, 162, 163, 172, 173, 178, 179, 189, 190, 196, 203, 204, 234, 235, 242, 244, 248, 254, 268, 269, 289, 293, 294, 300, 303, 304, 310], "function": [8, 116, 172, 222, 317, 318], "type": [8, 10, 20, 25, 26, 43, 47, 48, 49, 52, 54, 55, 60, 62, 64, 66, 67, 72, 75, 76, 78, 80, 81, 88, 89, 90, 92, 94, 95, 102, 103, 104, 106, 108, 109, 115, 116, 117, 119, 121, 122, 129, 130, 131, 133, 135, 136, 142, 143, 144, 146, 148, 149, 156, 157, 158, 160, 162, 163, 170, 174, 176, 177, 178, 179, 183, 187, 188, 189, 190, 194, 201, 202, 203, 204, 208, 214, 215, 218, 222, 239, 244, 248, 251, 255, 263, 268, 269, 270, 286, 287, 290, 292, 293, 294, 298, 300, 301, 302, 303, 304, 309, 314, 318, 324, 325], "meant": 8, "us": [8, 10, 34, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 51, 57, 60, 61, 62, 69, 72, 74, 75, 76, 85, 88, 89, 90, 99, 102, 103, 104, 112, 115, 116, 117, 126, 129, 130, 131, 139, 142, 143, 144, 153, 156, 157, 158, 167, 170, 171, 172, 176, 180, 183, 187, 191, 194, 201, 205, 208, 211, 218, 234, 255, 259, 265, 277, 280, 281, 282, 283, 284, 285, 286, 288, 290, 295, 298, 300, 301, 305, 309, 310, 311, 314, 316, 317, 318, 319, 320, 321, 324, 326], "context": [8, 14], "class": [9, 10, 13, 19, 45, 48, 49, 61, 62, 73, 75, 76, 89, 90, 103, 104, 116, 117, 130, 131, 143, 144, 157, 158, 173, 174, 175, 176, 184, 186, 187, 195, 198, 200, 201, 209, 211, 214, 215, 219, 222, 223, 225, 227, 229, 231, 235, 239, 242, 244, 248, 251, 254, 255, 287, 289, 290, 299, 300, 301, 314, 318], "sourc": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 320, 321], "base": [9, 29, 30, 44, 45, 48, 61, 73, 75, 89, 103, 116, 130, 143, 157, 173, 174, 175, 184, 186, 195, 197, 198, 200, 209, 211, 215, 219, 222, 223, 225, 227, 229, 231, 235, 239, 242, 244, 248, 251, 254, 273, 274, 287, 289, 299, 300, 319, 324, 327], "repres": [9, 48, 75, 89, 103, 130, 143, 157, 211, 215, 219, 254, 287, 321], "timber": [9, 211, 219, 254, 311, 317, 321, 324, 327], "beam": [9, 11, 13, 44, 45, 46, 47, 48, 50, 53, 56, 61, 63, 65, 68, 75, 77, 79, 84, 89, 91, 93, 98, 103, 105, 107, 111, 116, 118, 120, 125, 130, 132, 134, 138, 143, 145, 147, 152, 157, 159, 161, 166, 171, 172, 173, 174, 175, 184, 185, 186, 195, 196, 197, 199, 200, 209, 210, 215, 219, 231, 233, 234, 235, 241, 242, 244, 247, 248, 253, 310, 313, 314, 317, 319, 320, 323, 324, 325, 326, 327], "joint": [9, 13, 15, 28, 44, 45, 48, 50, 53, 73, 75, 77, 79, 89, 91, 93, 103, 105, 107, 116, 118, 120, 130, 132, 134, 143, 145, 147, 157, 159, 161, 211, 214, 215, 216, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 235, 239, 244, 248, 251, 256, 271, 312, 314, 317, 318, 319, 321, 325, 327], "etc": [9, 211, 212, 254, 312, 314, 321], "attribut": [9, 12, 18, 48, 61, 73, 75, 89, 103, 116, 130, 143, 157, 174, 197, 211, 215, 222, 231, 234, 235, 248, 254, 299, 300, 314, 317, 318, 321], "list": [9, 13, 15, 46, 48, 53, 61, 65, 75, 79, 89, 93, 103, 107, 116, 120, 130, 134, 143, 147, 157, 161, 171, 172, 211, 222, 233, 235, 241, 253, 254, 258, 264, 272, 300, 310, 318, 324, 327], "A": [9, 23, 46, 48, 53, 65, 75, 79, 89, 93, 103, 107, 116, 120, 130, 134, 143, 147, 157, 161, 172, 173, 174, 200, 211, 224, 226, 228, 230, 234, 254, 266, 267, 311, 316, 321], "assign": [9, 14, 23, 231, 239, 251, 324, 326], "thi": [9, 10, 11, 19, 20, 23, 25, 26, 28, 30, 32, 39, 40, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 75, 76, 77, 78, 79, 80, 81, 88, 89, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 109, 115, 116, 117, 118, 119, 120, 121, 122, 129, 130, 131, 132, 133, 134, 135, 136, 142, 143, 144, 145, 146, 147, 148, 149, 156, 157, 158, 159, 160, 161, 162, 163, 170, 171, 172, 176, 177, 178, 179, 183, 187, 188, 189, 190, 194, 201, 202, 203, 204, 208, 215, 217, 218, 221, 222, 224, 226, 228, 230, 231, 233, 234, 239, 241, 242, 244, 247, 248, 251, 253, 254, 255, 256, 257, 263, 265, 268, 269, 271, 274, 276, 282, 283, 285, 286, 290, 292, 293, 294, 298, 300, 301, 302, 303, 304, 309, 310, 312, 316, 318, 320, 321, 325, 327], "part_kei": 9, "int": [9, 11, 12, 13, 14, 18, 24, 74, 215, 256, 271, 288, 300], "kei": [9, 11, 14, 24, 68, 89, 116, 143, 157, 224, 226, 228, 230, 256, 271, 320], "includ": [9, 270, 316, 318], "beam_kei": 9, "joint_kei": [9, 256, 271], "topologi": [9, 33, 45, 47, 48, 53, 65, 73, 74, 75, 79, 89, 93, 103, 107, 120, 130, 134, 143, 147, 157, 161, 239, 251], "dict": [9, 12, 14, 18, 48, 61, 174, 211, 215, 218, 222, 224, 226, 228, 230, 248, 251, 318], "jointtopologi": [9, 47, 251, 314], "i": [9, 14, 15, 18, 23, 25, 26, 43, 46, 47, 48, 51, 53, 54, 55, 60, 61, 65, 66, 67, 68, 72, 75, 77, 79, 80, 81, 88, 89, 93, 94, 95, 102, 103, 105, 107, 108, 109, 115, 116, 120, 121, 122, 129, 130, 132, 134, 135, 136, 142, 143, 147, 148, 149, 156, 157, 161, 162, 163, 170, 171, 172, 178, 179, 183, 186, 189, 190, 194, 196, 203, 204, 208, 211, 215, 217, 218, 221, 239, 251, 254, 256, 257, 264, 265, 268, 269, 286, 289, 293, 294, 298, 299, 303, 304, 309, 311, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326], "detected_topo": 9, "beam_a_kei": 9, "beam_b_kei": 9, "see": [9, 68, 317, 321, 322, 326], "method": [9, 10, 45, 47, 48, 49, 51, 53, 61, 62, 65, 68, 73, 75, 76, 77, 79, 89, 90, 93, 103, 104, 105, 107, 116, 117, 120, 130, 131, 132, 134, 143, 144, 147, 157, 158, 161, 175, 176, 184, 186, 187, 195, 198, 200, 201, 209, 211, 215, 217, 219, 221, 223, 225, 227, 229, 231, 235, 239, 242, 244, 248, 251, 254, 255, 287, 289, 290, 300, 301, 314, 318], "inherit": [9, 48, 61, 75, 89, 103, 116, 130, 143, 157, 175, 186, 200, 251, 254, 289, 300, 314, 318], "convert": [10, 35, 36, 49, 58, 59, 62, 70, 71, 76, 86, 87, 90, 100, 101, 104, 113, 114, 117, 127, 128, 131, 140, 141, 144, 154, 155, 158, 168, 169, 176, 181, 182, 187, 192, 193, 201, 206, 207, 255, 278, 279, 290, 296, 297, 301, 306, 307], "instanc": [10, 13, 25, 26, 48, 49, 53, 54, 55, 62, 65, 66, 67, 75, 76, 79, 80, 81, 89, 90, 93, 94, 95, 103, 104, 107, 108, 109, 116, 117, 120, 121, 122, 130, 131, 134, 135, 136, 143, 144, 147, 148, 149, 157, 158, 161, 162, 163, 176, 178, 179, 187, 189, 190, 201, 203, 204, 222, 233, 241, 253, 255, 268, 269, 290, 293, 294, 301, 303, 304, 312, 318], "string": [10, 26, 36, 48, 49, 55, 59, 62, 67, 71, 74, 75, 76, 81, 87, 89, 90, 95, 101, 103, 104, 109, 114, 116, 117, 122, 128, 130, 131, 136, 141, 143, 144, 149, 155, 157, 158, 163, 169, 176, 179, 182, 187, 190, 193, 201, 204, 207, 211, 212, 255, 269, 279, 288, 290, 294, 297, 301, 304, 307, 320, 321], "exist": [10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 255, 290, 301, 318], "net": [10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 255, 290, 301], "compat": [10, 48, 49, 62, 75, 76, 89, 90, 103, 104, 117, 130, 131, 143, 144, 157, 158, 172, 176, 187, 201, 255, 290, 301], "when": [10, 23, 46, 49, 62, 76, 77, 90, 104, 105, 117, 131, 132, 144, 158, 171, 176, 187, 197, 201, 255, 256, 290, 301, 320, 324], "ironpython": [10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 255, 290, 301], "implicit": [10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 255, 290, 301], "convers": [10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 255, 290, 301], "usual": [10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 254, 255, 290, 301], "take": [10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 255, 290, 301, 318, 327], "place": [10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 255, 290, 301], "cpython": [10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 255, 290, 301], "kick": [10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 255, 290, 301], "its": [10, 18, 23, 24, 35, 36, 49, 58, 59, 62, 70, 71, 76, 86, 87, 90, 100, 101, 104, 113, 114, 117, 127, 128, 131, 140, 141, 144, 154, 155, 158, 168, 169, 171, 176, 181, 182, 187, 192, 193, 201, 206, 207, 214, 226, 230, 255, 266, 278, 279, 290, 296, 297, 301, 306, 307, 315, 320, 321, 324], "default": [10, 14, 20, 29, 30, 31, 32, 35, 36, 49, 52, 58, 59, 62, 64, 70, 71, 76, 78, 86, 87, 89, 90, 92, 100, 101, 104, 106, 113, 114, 116, 117, 119, 127, 128, 131, 133, 140, 141, 143, 144, 146, 154, 155, 157, 158, 160, 168, 169, 176, 177, 181, 182, 187, 188, 192, 193, 201, 202, 206, 207, 219, 255, 263, 266, 267, 273, 274, 275, 276, 278, 279, 290, 292, 296, 297, 301, 302, 306, 307, 314, 319, 321, 324, 326], "print": [10, 35, 36, 49, 58, 59, 62, 70, 71, 76, 86, 87, 90, 100, 101, 104, 113, 114, 117, 127, 128, 131, 140, 141, 144, 154, 155, 158, 168, 169, 176, 181, 182, 187, 192, 193, 201, 206, 207, 255, 278, 279, 290, 296, 297, 301, 306, 307], "self": [10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 222, 255, 290, 301, 318], "gettyp": [10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 255, 290, 301], "fullnam": [10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 255, 290, 301], "similar": [10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 255, 290, 301, 324], "overrid": [10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 255, 290, 301, 327], "object": [10, 13, 19, 20, 25, 26, 28, 35, 36, 43, 45, 46, 49, 52, 53, 54, 55, 58, 59, 60, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 76, 78, 79, 80, 81, 86, 87, 88, 90, 92, 93, 94, 95, 100, 101, 102, 104, 106, 107, 108, 109, 113, 114, 115, 117, 119, 120, 121, 122, 127, 128, 129, 131, 133, 134, 135, 136, 140, 141, 142, 144, 146, 147, 148, 149, 154, 155, 156, 158, 160, 161, 162, 163, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 187, 188, 189, 190, 192, 193, 194, 198, 201, 202, 203, 204, 206, 207, 208, 211, 215, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 235, 242, 244, 248, 255, 263, 268, 269, 270, 278, 279, 286, 287, 290, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 306, 307, 309, 314, 319, 320, 321, 325, 326], "fix": [10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 255, 290, 301], "make": [10, 20, 49, 52, 62, 64, 76, 78, 90, 92, 104, 106, 117, 119, 131, 133, 144, 146, 158, 160, 176, 177, 187, 188, 201, 202, 255, 263, 290, 292, 301, 302], "grasshopp": [10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 255, 290, 301, 312, 314, 315, 321], "displai": [10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 255, 290, 301, 320, 325], "proper": [10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 255, 290, 301], "represent": [10, 35, 36, 48, 49, 58, 59, 62, 70, 71, 74, 75, 76, 86, 87, 89, 90, 100, 101, 103, 104, 113, 114, 116, 117, 127, 128, 130, 131, 140, 141, 143, 144, 154, 155, 157, 158, 168, 169, 176, 181, 182, 187, 192, 193, 201, 206, 207, 255, 278, 279, 288, 290, 296, 297, 301, 306, 307, 318], "ar": [10, 12, 23, 46, 47, 49, 51, 53, 62, 65, 68, 76, 79, 90, 93, 104, 107, 117, 120, 131, 134, 144, 147, 158, 161, 172, 176, 187, 201, 222, 234, 247, 255, 290, 300, 301, 312, 318, 319, 320, 323, 324, 325, 326, 327], "panel": [10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 255, 290, 301], "other": [10, 13, 49, 62, 76, 89, 90, 104, 116, 117, 131, 143, 144, 157, 158, 171, 176, 187, 201, 215, 246, 250, 255, 290, 301, 311, 316, 324, 327], "output": [10, 47, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 255, 290, 301, 319], "add": [11, 12, 13, 14, 21, 22, 50, 63, 77, 91, 105, 118, 132, 145, 159, 256, 257, 258, 317, 318, 319, 326], "paramet": [11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 78, 79, 80, 81, 85, 86, 87, 88, 89, 92, 93, 94, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 114, 115, 116, 119, 120, 121, 122, 126, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 143, 146, 147, 148, 149, 153, 154, 155, 156, 157, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 215, 217, 218, 219, 221, 222, 224, 226, 228, 230, 233, 234, 241, 248, 251, 253, 254, 257, 258, 259, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 309, 310, 318, 319, 320, 321, 326], "return": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 52, 53, 54, 55, 57, 59, 60, 61, 64, 65, 66, 67, 69, 71, 72, 74, 78, 79, 80, 81, 85, 87, 88, 92, 93, 94, 95, 99, 101, 102, 106, 107, 108, 109, 112, 114, 115, 119, 120, 121, 122, 126, 128, 129, 133, 134, 135, 136, 139, 141, 142, 146, 147, 148, 149, 153, 155, 156, 160, 161, 162, 163, 167, 169, 170, 171, 172, 177, 178, 179, 180, 182, 183, 185, 188, 189, 190, 191, 193, 194, 196, 199, 202, 203, 204, 205, 207, 208, 210, 211, 212, 214, 218, 224, 226, 228, 230, 233, 234, 241, 247, 253, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 288, 292, 293, 294, 295, 297, 298, 302, 303, 304, 305, 307, 309, 310, 319, 325], "graph": [11, 13, 14], "identifi": [11, 12, 13, 14, 18, 23, 24, 172], "ad": [11, 53, 65, 79, 93, 107, 120, 134, 147, 161, 257, 258, 310], "b": 12, "kwarg": [12, 14, 53, 65, 79, 93, 107, 120, 134, 147, 161, 248, 251], "between": [12, 18, 21, 89, 103, 116, 143, 157, 320, 324, 327], "two": [12, 21, 44, 47, 48, 53, 61, 65, 75, 79, 89, 93, 103, 107, 120, 134, 147, 161, 171, 234, 264, 321, 324, 327], "compa": [12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 34, 41, 42, 52, 54, 55, 57, 64, 66, 67, 69, 78, 80, 81, 85, 92, 94, 95, 99, 106, 108, 109, 112, 119, 121, 122, 126, 133, 135, 136, 139, 146, 148, 149, 153, 160, 162, 163, 167, 175, 177, 178, 179, 180, 184, 185, 186, 188, 189, 190, 191, 195, 196, 199, 200, 202, 203, 204, 205, 209, 210, 254, 257, 261, 262, 263, 268, 269, 270, 273, 274, 277, 284, 285, 292, 293, 294, 295, 299, 300, 302, 303, 304, 305, 311, 317, 324], "datastructur": [12, 14, 16, 17, 21, 22, 23, 24, 27, 29, 31, 34, 39, 40, 41, 42, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 200, 205, 261, 262, 273, 275, 277, 282, 283, 284, 285, 295, 299, 305], "from": [12, 22, 25, 26, 28, 34, 47, 54, 55, 57, 66, 67, 69, 80, 81, 85, 94, 95, 99, 108, 109, 112, 121, 122, 126, 135, 136, 139, 148, 149, 153, 162, 163, 167, 178, 179, 180, 189, 190, 191, 203, 204, 205, 222, 266, 267, 268, 269, 271, 272, 277, 293, 294, 295, 303, 304, 305, 312, 314, 316, 317, 318, 320, 321, 323, 324], "str": [12, 14, 18, 23, 24, 25, 26, 34, 35, 36, 48, 54, 55, 57, 58, 59, 61, 66, 67, 69, 70, 71, 74, 75, 80, 81, 85, 86, 87, 89, 94, 95, 99, 100, 101, 103, 108, 109, 112, 113, 114, 116, 121, 122, 126, 127, 128, 130, 135, 136, 139, 140, 141, 143, 148, 149, 153, 154, 155, 157, 162, 163, 167, 168, 169, 178, 179, 180, 181, 182, 189, 190, 191, 192, 193, 197, 203, 204, 205, 206, 207, 211, 215, 219, 222, 264, 268, 269, 277, 278, 279, 288, 293, 294, 295, 296, 297, 300, 303, 304, 305, 306, 307], "ani": [12, 14, 18, 43, 60, 72, 88, 102, 115, 129, 142, 156, 170, 183, 194, 208, 286, 298, 309, 312, 316, 323, 325], "option": [12, 14, 18, 20, 24, 29, 30, 31, 32, 34, 35, 36, 46, 47, 52, 57, 58, 59, 64, 69, 70, 71, 78, 85, 86, 87, 92, 99, 100, 101, 106, 112, 113, 114, 119, 126, 127, 128, 133, 139, 140, 141, 146, 153, 154, 155, 160, 167, 168, 169, 172, 173, 177, 180, 181, 182, 188, 191, 192, 193, 202, 205, 206, 207, 219, 248, 263, 273, 274, 275, 276, 277, 278, 279, 292, 295, 296, 297, 302, 305, 306, 307, 321, 324, 327], "compil": [12, 315], "name": [12, 14, 219, 222, 318, 320, 324, 325], "argument": [12, 248, 251], "tupl": [12, 18, 47, 103, 171, 234, 254, 265], "node": 12, "rais": [12, 25, 26, 50, 53, 54, 55, 63, 65, 66, 67, 79, 80, 81, 91, 93, 94, 95, 107, 108, 109, 118, 120, 121, 122, 134, 135, 136, 145, 147, 148, 149, 159, 161, 162, 163, 178, 179, 185, 189, 190, 196, 197, 203, 204, 210, 268, 269, 293, 294, 303, 304], "assemblyerror": 12, "If": [12, 18, 25, 26, 34, 35, 36, 47, 54, 55, 57, 58, 59, 66, 67, 69, 70, 71, 80, 81, 85, 86, 87, 89, 94, 95, 99, 100, 101, 108, 109, 112, 113, 114, 116, 121, 122, 126, 127, 128, 135, 136, 139, 140, 141, 143, 148, 149, 153, 154, 155, 157, 162, 163, 167, 168, 169, 178, 179, 180, 181, 182, 185, 189, 190, 191, 192, 193, 196, 203, 204, 205, 206, 207, 210, 257, 268, 269, 272, 277, 278, 279, 293, 294, 295, 296, 297, 303, 304, 305, 306, 307, 310, 311, 321, 324], "an": [13, 14, 20, 25, 26, 35, 36, 43, 44, 46, 48, 52, 53, 54, 55, 58, 59, 60, 64, 65, 66, 67, 70, 71, 72, 75, 78, 79, 80, 81, 86, 87, 88, 89, 92, 93, 94, 95, 100, 101, 102, 103, 106, 107, 108, 109, 113, 114, 115, 116, 119, 120, 121, 122, 127, 128, 129, 130, 133, 134, 135, 136, 140, 141, 142, 143, 146, 147, 148, 149, 154, 155, 156, 157, 160, 161, 162, 163, 168, 169, 170, 173, 177, 178, 179, 181, 182, 183, 188, 189, 190, 192, 193, 194, 202, 203, 204, 206, 207, 208, 217, 221, 254, 263, 268, 269, 278, 279, 286, 287, 292, 293, 294, 296, 297, 298, 302, 303, 304, 306, 307, 309, 311, 312, 314, 315, 316, 317, 319, 320, 321, 324], "dowel": 13, "steel": 13, "plate": 13, "involv": [13, 228], "current": [13, 14, 20, 52, 64, 78, 92, 106, 119, 133, 146, 160, 177, 188, 202, 263, 292, 302, 314], "none": [14, 20, 21, 22, 23, 24, 29, 30, 31, 32, 37, 38, 41, 46, 47, 52, 64, 78, 92, 106, 119, 133, 146, 160, 172, 177, 188, 202, 214, 219, 220, 224, 226, 228, 230, 256, 257, 260, 263, 266, 267, 272, 273, 274, 275, 276, 280, 281, 284, 292, 302, 310, 321], "note": [14, 172, 311, 325], "uniqu": [14, 23], "onli": [14, 68, 257, 320], "nest": 14, "mai": [14, 319, 320], "have": [14, 53, 65, 79, 93, 107, 120, 134, 147, 161, 222, 321], "same": [14, 15, 47, 299, 300, 324, 327], "valu": [14, 74, 89, 116, 143, 157, 172, 254, 288, 320], "one": [14, 89, 116, 143, 157, 171, 234, 258, 299, 300, 318, 321, 324, 327], "which": [14, 44, 46, 47, 48, 51, 53, 65, 75, 79, 89, 93, 103, 107, 120, 130, 134, 143, 147, 157, 161, 172, 186, 215, 222, 242, 251, 256, 259, 264, 265, 271, 287, 289, 300, 318, 319, 321, 324], "case": 14, "automat": [14, 23, 77, 105, 132, 324, 326], "integ": 14, "addit": [14, 18, 46, 317, 320, 321, 323], "collect": [14, 289, 310], "check": [15, 51, 310, 314, 320], "alreadi": 15, "defin": [15, 50, 63, 91, 118, 145, 159, 215, 233, 241, 247, 253, 266, 320, 321, 324, 326, 327], "set": [15, 46, 172, 310, 319, 320, 321, 325], "bool": [15, 18, 19, 34, 35, 36, 46, 57, 58, 59, 69, 70, 71, 85, 86, 87, 89, 99, 100, 101, 112, 113, 114, 116, 126, 127, 128, 139, 140, 141, 143, 153, 154, 155, 157, 167, 168, 169, 180, 181, 182, 191, 192, 193, 205, 206, 207, 215, 233, 241, 253, 257, 270, 277, 278, 279, 295, 296, 297, 300, 305, 306, 307], "comput": [16, 17, 34, 47, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 261, 262, 277, 295, 305], "axi": [16, 29, 30, 172, 254, 261, 266, 267, 273, 274, 321, 326], "align": [16, 51, 172, 254, 259, 261, 317, 326], "bound": [16, 17, 172, 254, 261, 262, 310], "box": [16, 17, 172, 254, 261, 262, 300, 310, 317, 325], "geometri": [16, 17, 29, 30, 32, 41, 42, 173, 174, 175, 184, 185, 186, 195, 196, 197, 199, 200, 209, 210, 254, 261, 262, 270, 273, 274, 276, 284, 285, 300, 310, 314, 317, 319, 321, 323, 325, 326, 327], "orient": [17, 215, 262, 266, 267, 326], "data": [18, 19, 20, 25, 26, 34, 35, 36, 37, 38, 39, 40, 43, 52, 54, 55, 57, 58, 59, 60, 61, 64, 66, 67, 69, 70, 71, 72, 78, 80, 81, 85, 86, 87, 88, 92, 94, 95, 99, 100, 101, 102, 106, 108, 109, 112, 113, 114, 115, 119, 121, 122, 126, 127, 128, 129, 133, 135, 136, 139, 140, 141, 142, 146, 148, 149, 153, 154, 155, 156, 160, 162, 163, 167, 168, 169, 170, 173, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 194, 202, 203, 204, 205, 206, 207, 208, 211, 263, 268, 269, 277, 278, 279, 280, 281, 282, 283, 286, 289, 292, 293, 294, 295, 296, 297, 298, 300, 302, 303, 304, 305, 306, 307, 309], "fals": [18, 19, 34, 35, 36, 46, 57, 58, 59, 69, 70, 71, 85, 86, 87, 99, 100, 101, 112, 113, 114, 126, 127, 128, 139, 140, 141, 153, 154, 155, 167, 168, 169, 180, 181, 182, 191, 192, 193, 205, 206, 207, 233, 241, 253, 257, 270, 277, 278, 279, 295, 296, 297, 305, 306, 307], "iter": 18, "over": 18, "true": [18, 19, 34, 35, 36, 46, 57, 58, 59, 69, 70, 71, 85, 86, 87, 89, 99, 100, 101, 112, 113, 114, 116, 126, 127, 128, 139, 140, 141, 143, 153, 154, 155, 157, 167, 168, 169, 180, 181, 182, 191, 192, 193, 205, 206, 207, 233, 241, 247, 253, 257, 265, 270, 277, 278, 279, 295, 296, 297, 305, 306, 307, 319, 321], "yield": [18, 27, 174], "next": 18, "u": 18, "v": 18, "connector": 18, "attr": [18, 222], "obj": [19, 34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 277, 295, 300, 305], "given": [19, 46, 47, 53, 65, 74, 79, 93, 107, 120, 134, 147, 161, 172, 234, 239, 251, 259, 264, 265, 267, 288, 320], "otherwis": [19, 47, 233, 241, 253, 257, 316, 321], "look": 19, "cl": [20, 52, 64, 78, 92, 106, 119, 133, 146, 160, 177, 188, 202, 248, 251, 263, 292, 302], "independ": [20, 52, 64, 78, 92, 106, 119, 133, 146, 160, 177, 188, 202, 263, 292, 302], "edg": 21, "delet": 21, "remov": [22, 28, 256, 271, 272, 320, 323], "guid": [23, 314, 317, 321], "global": 23, "creat": [23, 48, 51, 61, 75, 77, 89, 103, 105, 116, 130, 132, 143, 157, 214, 215, 223, 225, 227, 229, 266, 267, 312, 314, 315, 317, 318, 319, 320, 321, 324, 327], "can": [23, 24, 43, 60, 72, 88, 102, 115, 129, 142, 156, 170, 183, 194, 208, 222, 270, 286, 289, 298, 300, 309, 312, 317, 318, 321, 324], "t": [23, 24, 116, 130, 143, 157, 229, 239, 251], "found": [23, 24, 318], "find": [24, 46, 171, 172, 310, 324], "classmethod": [25, 26, 43, 46, 53, 54, 55, 60, 65, 66, 67, 72, 74, 79, 80, 81, 88, 93, 94, 95, 102, 107, 108, 109, 115, 120, 121, 122, 129, 134, 135, 136, 142, 147, 148, 149, 156, 161, 162, 163, 170, 178, 179, 183, 189, 190, 194, 203, 204, 208, 214, 216, 220, 224, 226, 228, 230, 266, 267, 268, 269, 286, 288, 293, 294, 298, 303, 304, 309], "filepath": [25, 35, 54, 58, 66, 70, 80, 86, 94, 100, 108, 113, 121, 127, 135, 140, 148, 154, 162, 168, 178, 181, 189, 192, 203, 206, 268, 278, 293, 296, 303, 306], "construct": [25, 26, 43, 54, 55, 60, 66, 67, 72, 80, 81, 88, 94, 95, 102, 108, 109, 115, 121, 122, 129, 135, 136, 142, 148, 149, 156, 162, 163, 170, 178, 179, 183, 189, 190, 194, 203, 204, 208, 268, 269, 286, 293, 294, 298, 303, 304, 309, 314], "json": [25, 26, 35, 36, 54, 55, 58, 59, 66, 67, 70, 71, 80, 81, 86, 87, 94, 95, 100, 101, 108, 109, 113, 114, 121, 122, 127, 128, 135, 136, 140, 141, 148, 149, 154, 155, 162, 163, 168, 169, 178, 179, 181, 182, 189, 190, 192, 193, 203, 204, 206, 207, 268, 269, 278, 279, 293, 294, 296, 297, 303, 304, 306, 307], "file": [25, 35, 54, 58, 66, 70, 80, 86, 94, 100, 108, 113, 121, 127, 135, 140, 148, 154, 162, 168, 178, 181, 189, 192, 203, 206, 211, 268, 278, 293, 296, 303, 306, 316, 318, 322], "path": [25, 35, 54, 58, 66, 70, 80, 86, 94, 100, 108, 113, 121, 127, 135, 140, 148, 154, 162, 168, 178, 181, 189, 192, 203, 206, 268, 278, 293, 296, 303, 306], "ha": [25, 26, 44, 54, 55, 66, 67, 80, 81, 94, 95, 108, 109, 121, 122, 135, 136, 148, 149, 162, 163, 172, 178, 179, 189, 190, 203, 204, 268, 269, 293, 294, 300, 303, 304, 321, 324, 325, 326], "correct": [25, 26, 54, 55, 66, 67, 80, 81, 94, 95, 108, 109, 121, 122, 135, 136, 148, 149, 162, 163, 178, 179, 189, 190, 203, 204, 268, 269, 293, 294, 303, 304], "schema": [25, 26, 43, 54, 55, 60, 66, 67, 72, 80, 81, 88, 94, 95, 102, 108, 109, 115, 121, 122, 129, 135, 136, 142, 148, 149, 156, 162, 163, 170, 178, 179, 183, 189, 190, 194, 203, 204, 208, 268, 269, 286, 293, 294, 298, 303, 304, 309], "typeerror": [25, 26, 54, 55, 66, 67, 80, 81, 94, 95, 108, 109, 121, 122, 135, 136, 148, 149, 162, 163, 178, 179, 189, 190, 203, 204, 268, 269, 293, 294, 303, 304], "individu": [27, 222], "angl": [29, 30, 103, 171, 215, 273, 274, 324], "point": [29, 30, 103, 254, 264, 267, 273, 274, 314, 326], "float": [29, 30, 31, 32, 46, 47, 89, 116, 143, 157, 171, 172, 186, 215, 254, 256, 265, 266, 267, 273, 274, 275, 276, 310], "radian": [29, 30, 273, 274], "vector": [29, 30, 41, 42, 259, 266, 267, 273, 274, 284, 285, 314, 321], "z": [29, 30, 31, 32, 34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 254, 266, 267, 273, 274, 275, 276, 277, 295, 305, 321, 323, 326], "origin": [29, 30, 218, 254, 273, 274, 321, 325, 326], "translat": [29, 30, 31, 32, 273, 274, 275, 276], "scale": [29, 30, 41, 42, 273, 274, 284, 285, 326], "transform": [29, 30, 31, 32, 38, 40, 41, 42, 270, 273, 274, 275, 276, 281, 283, 284, 285], "copi": [30, 32, 39, 40, 42, 270, 274, 276, 282, 283, 285, 316], "x": [31, 32, 116, 157, 239, 251, 254, 275, 276, 321, 324, 326], "y": [31, 32, 254, 275, 276, 321, 326], "factor": [31, 32, 275, 276], "direct": [31, 32, 103, 254, 265, 266, 267, 275, 276, 310, 321], "rotat": [31, 32, 41, 42, 275, 276, 284, 285, 321], "as_str": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 277, 295, 305], "hash": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 277, 295, 305], "comparison": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 277, 295, 305], "dure": [34, 57, 68, 69, 85, 99, 112, 126, 139, 153, 167, 173, 180, 191, 205, 235, 277, 295, 300, 305], "version": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 277, 295, 305, 315], "control": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 277, 295, 305], "algorithm": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 172, 180, 191, 205, 277, 295, 305], "digest": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 277, 295, 305], "hexadecim": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 277, 295, 305], "format": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 211, 277, 295, 305, 320], "rather": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 277, 295, 305], "than": [34, 53, 57, 65, 69, 79, 85, 93, 99, 107, 112, 120, 126, 134, 139, 147, 153, 161, 167, 180, 191, 205, 277, 295, 305, 324], "byte": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 277, 295, 305], "exampl": [34, 57, 68, 69, 85, 99, 112, 126, 139, 153, 167, 172, 180, 191, 205, 277, 295, 305, 314, 317, 320, 321, 324, 327], "import": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 277, 295, 305, 318, 327], "mesh": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 200, 205, 277, 295, 305, 313], "from_obj": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 277, 295, 305], "get": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 277, 295, 305, 315, 317], "face": [34, 48, 51, 57, 69, 85, 99, 112, 126, 139, 153, 167, 171, 180, 191, 205, 215, 254, 265, 277, 295, 305], "v1": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 277, 295, 305], "v2": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 277, 295, 305], "vertex_attribut": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 277, 295, 305], "vertex_sampl": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 277, 295, 305], "1": [34, 57, 69, 85, 89, 99, 112, 116, 126, 139, 143, 153, 157, 167, 180, 191, 205, 254, 277, 295, 305, 313, 318, 321], "0": [34, 57, 69, 85, 89, 99, 112, 116, 126, 139, 143, 153, 157, 167, 180, 191, 205, 254, 277, 295, 305, 313, 315, 321, 324], "v3": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 277, 295, 305], "pretti": [35, 36, 58, 59, 70, 71, 86, 87, 100, 101, 113, 114, 127, 128, 140, 141, 154, 155, 168, 169, 181, 182, 192, 193, 206, 207, 211, 212, 278, 279, 296, 297, 306, 307], "nativ": [35, 36, 58, 59, 70, 71, 86, 87, 100, 101, 113, 114, 127, 128, 140, 141, 154, 155, 168, 169, 181, 182, 192, 193, 206, 207, 278, 279, 296, 297, 306, 307], "save": [35, 36, 56, 58, 59, 70, 71, 84, 86, 87, 98, 100, 101, 111, 113, 114, 125, 127, 128, 138, 140, 141, 152, 154, 155, 166, 168, 169, 181, 182, 192, 193, 206, 207, 278, 279, 296, 297, 306, 307], "structur": [37, 38, 39, 40, 280, 281, 282, 283, 311, 314, 317, 319, 327], "valid": [43, 60, 72, 88, 102, 115, 129, 142, 156, 170, 183, 194, 208, 286, 298, 309], "against": [43, 60, 72, 88, 102, 115, 129, 142, 156, 170, 183, 194, 208, 286, 298, 309], "": [43, 48, 50, 60, 63, 72, 75, 88, 89, 91, 102, 103, 115, 116, 118, 129, 130, 142, 143, 145, 156, 157, 159, 170, 171, 183, 194, 208, 254, 259, 264, 266, 267, 270, 286, 298, 309, 320, 326], "raw": [43, 60, 72, 88, 102, 115, 129, 142, 156, 170, 183, 194, 208, 286, 298, 309], "__from_data__": [43, 60, 72, 88, 102, 115, 129, 142, 156, 170, 183, 194, 208, 286, 298, 309], "except": [44, 197], "indic": [44, 48, 175, 215, 266, 267, 320, 321], "error": [44, 173, 197, 235, 237, 238, 319, 320], "occur": [44, 173, 235], "while": 44, "try": 44, "join": [44, 48, 53, 61, 65, 75, 79, 89, 93, 103, 107, 116, 120, 130, 134, 143, 147, 157, 161, 171, 215, 235, 244, 248, 319, 324], "more": [44, 258, 314, 317, 318], "should": [44, 50, 61, 63, 68, 89, 91, 116, 118, 143, 145, 157, 159, 172, 222, 242, 256, 270, 318, 324], "calcul": [44, 50, 63, 91, 118, 145, 159], "featur": [44, 50, 63, 77, 89, 91, 105, 116, 118, 132, 143, 145, 157, 159, 173, 174, 175, 184, 185, 186, 195, 196, 197, 198, 199, 200, 209, 210, 235, 242, 254, 257, 258, 270, 272, 314, 317, 319, 325, 327], "appli": [44, 50, 63, 91, 118, 145, 159, 173, 174, 184, 195, 197, 209, 215, 222, 224, 226, 228, 230, 242, 251, 257, 318, 319, 324, 325, 327], "provid": [45, 233, 241, 253, 316, 317, 319, 321], "tool": [45, 314, 317, 321, 325, 326], "detect": 45, "intersect": [45, 46, 47, 185, 210, 324], "rtree": [46, 310], "max_dist": [46, 47], "pair": [46, 47, 172, 310, 320, 324, 327], "r": [46, 172, 315], "tree": [46, 172], "search": [46, 172], "neighbor": [46, 172, 310], "distanc": [46, 47, 324], "apart": 46, "non": 46, "touch": 46, "still": 46, "consid": [46, 47], "neightbor": [46, 310], "beam_a": [47, 48, 103], "beam_b": [47, 48, 103], "tol": 47, "1e": 47, "06": 47, "within": [47, 247, 300], "role": [47, 68, 234], "sensit": 47, "consist": 47, "specif": [47, 68, 222, 314, 318], "order": [47, 172, 218, 234, 299, 327], "e": [47, 68, 312, 320, 324, 325, 326], "g": [47, 68, 312, 320], "main": [47, 68, 75, 84, 89, 98, 111, 116, 125, 130, 132, 138, 143, 152, 157, 166, 324], "first": [47, 103, 234, 264, 324, 327], "cross": [47, 68, 75, 84, 89, 98, 111, 116, 125, 130, 132, 138, 143, 152, 157, 166, 254, 266, 267, 321, 324], "second": [47, 103, 234, 264, 324], "thei": 47, "were": [47, 320], "input": [47, 172, 222, 317, 318, 320, 321, 324], "gener": [47, 174, 213, 217, 221, 222, 299, 318, 327], "toler": [47, 324], "mathemat": 47, "maximum": 47, "desigen": 47, "unit": [47, 172, 265], "french": [48, 51, 215, 223], "ridg": [48, 51, 215, 223], "lap": [48, 51, 89, 116, 143, 157, 215], "end": [48, 61, 75, 89, 103, 130, 143, 157, 171, 215, 254, 256, 264, 265, 267, 324], "l": [48, 75, 89, 103, 116, 225, 227, 228, 239, 251], "pleas": [48, 75, 89, 103, 116, 130, 143, 157, 311], "lbuttjoint": [48, 314], "properli": [48, 75, 89, 103, 116, 130, 143, 157], "associ": [48, 68, 75, 89, 103, 116, 130, 143, 157, 215, 226, 230, 300, 316], "timberassembli": [48, 75, 103, 130, 313, 314], "top": [48, 56, 215, 317], "bottom": [48, 56, 215], "joint_typ": [48, 75, 89, 103, 116, 130, 143, 157, 214, 251], "reference_face_indic": 48, "dictionari": [48, 211, 224, 226, 228, 230], "refer": [48, 51, 56, 68, 84, 98, 111, 125, 138, 152, 166, 215, 314, 317, 318, 320, 324], "both": [48, 77, 105], "affect": [50, 63, 91, 118, 145, 159], "beamjoinningerror": [50, 63, 91, 118, 145, 159, 314], "whenev": [50, 63, 91, 118, 145, 159], "wa": [50, 63, 91, 118, 145, 159], "abl": [50, 63, 91, 118, 145, 159], "whether": [51, 300, 316, 325], "necessari": [51, 315, 318], "determin": [51, 234, 324], "machin": [51, 318], "new": [53, 65, 79, 93, 107, 120, 134, 147, 161, 315, 318, 321], "expect": [53, 65, 79, 93, 107, 120, 134, 147, 161], "been": [53, 65, 79, 93, 107, 120, 134, 147, 161, 300], "befor": [53, 65, 79, 93, 107, 120, 134, 147, 161, 325], "call": [53, 65, 68, 77, 79, 93, 105, 107, 120, 132, 134, 147, 161, 222, 257, 318, 321, 324], "code": [53, 65, 79, 93, 107, 120, 134, 147, 161, 312, 314], "doe": [53, 65, 79, 93, 107, 120, 134, 147, 161, 185, 210, 318, 321, 324], "verifi": [53, 65, 79, 93, 107, 120, 134, 147, 161, 265], "adjac": [53, 65, 79, 93, 107, 120, 134, 147, 161], "lie": [53, 65, 79, 93, 107, 120, 134, 147, 161], "allow": [53, 65, 79, 89, 93, 107, 116, 120, 134, 143, 147, 157, 161, 234, 235, 242, 244, 248, 265, 300], "them": [53, 65, 79, 93, 103, 107, 120, 134, 147, 161, 222, 312, 318, 320, 324], "respons": [53, 65, 79, 93, 107, 120, 134, 147, 161], "valueerror": [53, 65, 79, 93, 107, 120, 134, 147, 161], "less": [53, 65, 79, 93, 107, 120, 134, 147, 161, 254], "assemebli": [53, 65, 79, 93, 107, 120, 134, 147, 161], "jo": [53, 65, 79, 93, 107, 120, 134, 147, 161], "belong": [53, 65, 79, 93, 107, 120, 134, 147, 161], "whould": [53, 65, 79, 93, 107, 120, 134, 147, 161], "togeth": [53, 65, 79, 93, 107, 120, 134, 147, 161, 321], "assemli": [56, 84, 98, 111, 125, 152, 166], "after": [56, 84, 98, 111, 125, 138, 152, 166, 173, 174, 185, 196, 199, 210], "de": [56, 68, 84, 98, 111, 125, 138, 152, 166], "serial": [56, 68, 84, 98, 111, 125, 138, 152, 166], "restor": [56, 68], "instanti": [61, 116, 222, 318], "directli": [61, 116], "respect": [61, 68, 324], "implement": [61, 68, 310, 314], "instead": [61, 321], "map": [61, 171, 174, 317, 326], "ehich": 61, "each": [61, 103, 222, 265, 289, 318, 320, 324], "To": [68, 315, 317, 318, 319, 324, 327], "avoid": [68, 324], "circular": 68, "store": [68, 320, 321], "sinc": 68, "concret": 68, "tbuttjoint": [68, 313, 314], "enumer": 73, "possibl": [73, 320], "topo_unknown": [73, 74], "topo_i": 73, "topo_l": [73, 74], "topo_t": [73, 74], "topo_x": [73, 74], "For": [74, 172, 288, 314, 326, 327], "log": [74, 288, 319], "One": [74, 288, 300], "butt": [75, 130, 225, 229], "trim": [75, 77, 89, 103, 105, 130, 132, 143, 157, 319, 323, 324], "main_beam": [75, 89, 116, 130, 143, 157, 313], "cross_beam": [75, 89, 116, 130, 143, 157, 313], "cutting_plane_main": [75, 130], "frame": [75, 103, 130, 171, 175, 215, 219, 220, 254, 300, 313, 314, 317, 319, 327], "cutting_plane_cross": [75, 130], "requir": [77, 105, 218, 222, 256, 271, 315], "extens": [77, 105, 256, 265, 271], "resotr": [84, 98, 111, 125, 138, 152, 166], "lapjoint": [89, 143, 157, 314], "flip_lap_sid": [89, 116, 143, 157], "flip": [89, 116, 143, 157], "side": [89, 116, 143, 157, 171, 254, 323, 324], "cut_plane_bia": [89, 116, 143, 157], "shift": [89, 116, 143, 157], "deeper": [89, 116, 143, 157], "without": [89, 116, 143, 157, 316], "complet": [89, 116, 143, 157], "cut": [89, 116, 143, 157, 171, 175, 185, 219, 317, 319, 323, 324], "through": [89, 116, 143, 157, 265, 311], "either": [89, 116, 143, 157, 264], "5": [89, 116, 143, 157, 254], "main_beam_kei": [89, 116, 143, 157], "cross_beam_kei": [89, 116, 143, 157], "miter": [103, 227, 228], "plane": [103, 132, 171, 175, 185, 186, 219, 265, 321, 323, 326], "bisector": [103, 324], "centerlin": [103, 171, 254, 264, 266, 267, 317, 320, 321, 324, 326], "cutting_plan": [103, 175], "normal": [103, 171, 254], "opposit": 103, "abstract": [116, 319], "common": 116, "do": [116, 316, 318], "sub": 116, "along": [130, 143, 157, 254, 324], "length": [130, 143, 157, 186, 254, 266, 324], "anoth": [130, 143, 157], "beam1": 171, "beam2": 171, "attach": [171, 231], "inflate_bi": [172, 310], "aabb": [172, 254], "enlarg": 172, "amount": [172, 256, 265, 310], "element": [172, 222, 264, 299, 300], "design": [172, 311, 314, 317, 320, 321], "regard": 172, "inflat": [172, 310], "pluggabl": 172, "In": [172, 314, 315, 324], "plugin": [172, 314, 321], "avail": [172, 270], "result": [173, 174, 185, 196, 199, 210, 264, 299, 324], "process": [173, 174, 185, 196, 199, 210, 213, 215, 217, 218, 219, 221, 222, 224, 226, 228, 230, 314, 317, 318, 327], "debug_info": 173, "featureapplicationerror": [173, 185, 196, 210, 235, 314], "debug": [173, 235], "inform": [173, 235, 314, 326], "feature_map": 174, "featureappl": [174, 184, 195, 209, 314], "applic": [174, 198, 235], "beamgeometri": [174, 314], "made": [175, 186, 319], "cutfeatur": [184, 314], "beam_geometri": [184, 195, 197, 209], "brep": [184, 185, 195, 196, 209, 210, 314, 319, 323, 325, 326], "parametr": [186, 254, 314], "drill": [186, 196, 215], "hole": [186, 215, 317], "diamet": [186, 215], "depth": [186, 313], "drillfeatur": [195, 314], "volum": [196, 200, 210], "cannot": [197, 321], "feature_geometri": 197, "could": [197, 287], "modifi": [197, 316], "messag": 197, "mill": 200, "out": [200, 316], "polyhedron": 200, "millvolum": [209, 314], "histori": 211, "btlx_string": 211, "xml": [211, 212], "visual": [211, 212, 235, 289, 300, 312, 319], "gh": [211, 212], "termin": [211, 212], "btlxpart": [211, 215, 219, 222, 224, 226, 228, 230, 318], "joint_factori": [214, 222, 318], "regist": 214, "correspond": [214, 254, 264, 320, 321, 326], "factori": [214, 222, 223, 225, 227, 229, 318], "jointfactori": 214, "is_top": [215, 216], "flag": 215, "process_typ": [215, 222, 318], "frenchridgelap": 215, "other_beam": 215, "drill_hole_diamet": 215, "ref_face_index": 215, "index": [215, 314, 325], "ref_fac": 215, "surfac": [215, 318], "header_attribut": [215, 222, 318], "header": 215, "process_paramet": [215, 222], "geometr": [215, 218, 222, 314, 318, 319, 323], "btlx": [215, 222, 314, 317], "degre": 215, "intern": [217, 221], "properti": 218, "all": [218, 265, 270, 272, 310, 316, 320], "It": [218, 314, 317, 319, 320, 321, 326], "ordereddict": 218, "maintain": [218, 314], "jack": 219, "joint_nam": [219, 220], "append": [222, 318], "btlx_process": [222, 318], "eg": 222, "btlxjackcut": [222, 314], "match": [222, 318], "describ": [222, 318], "deriv": [222, 318], "relat": [222, 235, 318], "some": [222, 317, 326], "combin": 222, "multipl": [222, 312, 318], "cover": 222, "register_joint": [222, 318], "so": [222, 316, 318], "typic": [222, 300, 318], "need": [222, 259, 318, 320, 327], "param": 222, "et_el": 222, "et": 222, "jointrul": [231, 239, 251], "categori": [231, 234, 320, 321, 324], "rule": [231, 233, 239, 241, 251, 253, 321, 324], "sort": 234, "accord": [234, 320, 324], "catergory_a": 234, "category_b": 234, "inspect": [235, 325], "beamjoiningerror": 235, "feature_error": 235, "joint_error": 235, "k": [239, 251], "link": 242, "delai": [242, 244, 248], "actual": [242, 244, 248, 264], "downstream": [242, 244, 248], "compon": [242, 244, 248, 315, 319, 320, 321, 325], "shall": [244, 316], "pass": [248, 251, 265], "keyword": [248, 251], "topology_typ": 251, "constant": 251, "stud": [254, 321], "slat": 254, "rectangular": [254, 321], "section": [254, 266, 267, 312, 317, 321], "local": [254, 321, 325], "coordin": [254, 321, 325], "system": [254, 321, 325], "locat": [254, 300, 321], "start": [254, 256, 264, 265, 267, 317, 321], "major": [254, 321], "also": [254, 257, 311, 314, 317, 320, 321], "fibr": [254, 317], "solid": [254, 319], "wood": 254, "width": [254, 266, 267, 313, 320, 321], "smaller": [254, 321], "dimens": [254, 321], "height": [254, 266, 267, 313, 320, 321], "larger": [254, 321], "shape": [254, 321], "blank": [254, 256, 271], "materi": [254, 326], "stock": 254, "produc": 254, "6": 254, "equal": 254, "posit": [254, 323, 324], "2": [254, 313, 318], "3": [254, 315, 318], "4": [254, 313, 318], "line": [254, 266, 314, 320, 321], "centerline_start": 254, "centerline_end": 254, "xmin": 254, "ymin": 254, "zmin": 254, "xmax": 254, "ymax": 254, "zmax": 254, "long_edg": 254, "long": [254, 265], "midpoint": 254, "middl": 254, "extend": [256, 265], "well": 256, "user": [257, 320], "must": 257, "apply_featur": 257, "z_axi": 259, "definit": [259, 318, 319], "todo": [259, 265], "Not": 259, "anywher": 259, "features_to_clear": 260, "endpoint": [264, 267], "closer": 264, "interest": 264, "depend": [264, 266, 267, 315, 318, 325], "pln": 265, "metric": 265, "minimum": 265, "z_vector": [266, 267], "worldz": [266, 267], "worldx": [266, 267], "point_start": 267, "point_end": 267, "end_point": 267, "with_featur": 270, "drawn": [270, 321], "scene": 270, "enum": 287, "execut": [287, 300, 312], "instruct": [287, 289, 300], "human": [288, 300], "robot": [288, 300], "build": [289, 299, 300, 315, 327], "step": [289, 291, 299, 314, 318], "simpl": [299, 314, 317], "sequenc": [299, 314], "per": 299, "buildingplan": [299, 314], "assembl": 300, "singl": [300, 318], "actor": [300, 314], "element_id": 300, "cad": [300, 312], "id": [300, 312], "elements_held": 300, "held": 300, "support": [300, 311, 312], "is_built": 300, "is_plan": 300, "increment": 300, "cylind": 300, "prioriti": 300, "parallel": [300, 321], "prior": 310, "research": [311, 314, 316], "project": [311, 314], "develop": [311, 314], "aleksandra": 311, "apolinarska": 311, "chen": 311, "kasir": 311, "gonzalo": 311, "casa": 311, "gramazio": [311, 314, 316], "kohler": [311, 314, 316], "eth": [311, 314], "zurich": [311, 314], "swiss": 311, "nation": 311, "scienc": 311, "foundat": 311, "center": 311, "compet": 311, "digit": 311, "nccr": 311, "dfab": 311, "programm": 311, "As": 311, "open": [311, 314], "mani": [311, 312, 314], "contributor": 311, "you": [311, 317, 321, 324, 327], "your": 311, "work": 311, "acknowledg": 311, "misc": 311, "titl": 311, "librari": [311, 312, 314, 317], "author": [311, 316], "anna": 311, "http": [311, 315, 318], "github": [311, 315], "com": [311, 315, 318], "gramaziokohl": 311, "year": 311, "2022": 311, "2023": 311, "doi": 311, "10": [311, 315], "5281": 311, "zenodo": 311, "7934267": 311, "url": 311, "present": 312, "differ": [312, 318, 324, 327], "concept": [312, 317], "There": [312, 320], "wai": 312, "run": [312, 314], "python": [312, 314, 315, 317], "environ": [312, 314, 315], "interact": 312, "session": 312, "text": 312, "editor": 312, "sublim": 312, "studio": 312, "eclips": 312, "insid": 312, "blender": 312, "worldxi": 313, "geometry_typ": 313, "add_beam": 313, "packag": [314, 315, 318], "model": 314, "written": 314, "ecosystem": 314, "rhinocero": 314, "3d": 314, "plug": 314, "activ": [314, 315, 319, 321, 326], "being": 314, "continu": 314, "At": 314, "stage": 314, "encompass": 314, "fast": 314, "intuit": 314, "custom": [314, 320], "entiti": 314, "semant": 314, "about": 314, "futur": 314, "expand": 314, "entail": [314, 320], "interfac": 314, "analysi": 314, "softwar": [314, 316], "specialist": 314, "built": [314, 317], "upon": 314, "framework": 314, "basic": 314, "like": [314, 317, 319], "complex": 314, "resolv": 314, "backend": 314, "rhinocommon": 314, "sdk": 314, "handl": 314, "opencascad": 314, "via": 314, "occ": 314, "introduct": 314, "instal": 314, "api": [314, 317], "connectionsolv": 314, "frenchridgelapjoint": 314, "lhalflapjoint": 314, "lmiterjoint": 314, "thalflapjoint": 314, "xhalflapjoint": 314, "find_neighboring_beam": 314, "beam_side_incid": 314, "brepgeometryconsum": 314, "cutfeaturegeometri": 314, "drillfeaturegeometri": 314, "millvolumegeometri": 314, "btlxprocess": [314, 318], "btlxfrenchridgelap": 314, "lbuttfactori": 314, "tbuttfactori": 314, "lmiterfactori": 314, "frenchridgefactori": 314, "simplesequencegener": 314, "jointdefinit": 314, "categoryrul": 314, "topologyrul": 314, "directrul": 314, "featuredefinit": 314, "jointopt": 314, "debuginfom": 314, "workflow": [314, 317, 320, 321], "show": [314, 317], "util": [314, 317], "contribut": [314, 317], "licens": 314, "cite": 314, "conda": 315, "n": 315, "myenvnam": 315, "ye": [315, 324], "7": 315, "m": 315, "compas_rhino": 315, "v7": 315, "latest": 315, "fork": 315, "repositori": 315, "clone": 315, "git": 315, "yourgithub_usernam": 315, "cd": 315, "edit": 315, "mode": 315, "dev": 315, "txt": 315, "invok": 315, "ghuser": 315, "mit": 316, "copyright": 316, "c": 316, "2020": 316, "02": 316, "17": 316, "permiss": 316, "herebi": 316, "grant": 316, "free": 316, "charg": 316, "person": 316, "obtain": 316, "document": [316, 318, 320, 321, 326], "deal": 316, "restrict": 316, "limit": 316, "right": 316, "merg": 316, "publish": 316, "distribut": 316, "sublicens": 316, "sell": 316, "permit": 316, "whom": 316, "furnish": 316, "subject": 316, "follow": [316, 317, 318], "condit": 316, "abov": 316, "notic": 316, "substanti": 316, "portion": 316, "THE": 316, "AS": 316, "warranti": 316, "OF": 316, "kind": 316, "express": 316, "OR": 316, "impli": [316, 319], "BUT": 316, "NOT": 316, "TO": 316, "merchant": 316, "fit": 316, "FOR": 316, "particular": 316, "purpos": 316, "AND": 316, "noninfring": 316, "IN": 316, "NO": 316, "event": 316, "holder": 316, "BE": 316, "liabl": 316, "claim": 316, "damag": 316, "liabil": 316, "action": 316, "contract": 316, "tort": 316, "aris": 316, "WITH": 316, "easi": 317, "autom": [317, 324], "bake": 317, "textur": [317, 326], "render": [317, 326], "boolean": [317, 319, 323], "style": 317, "planar": [317, 324], "might": 317, "componen": 317, "detail": 317, "overal": 317, "idea": 317, "how": [317, 324], "Then": [317, 324], "explain": 317, "requr": 318, "here": [318, 322, 324, 326], "design2machin": 318, "btlx_2_1_0": 318, "pdf": 318, "process_param": 318, "where": [318, 321, 326], "btlxjoint": 318, "__init__": 318, "py": 318, "mind": 318, "oper": [319, 323], "subtract": [319, 323], "computation": 319, "expens": 319, "disabl": 319, "applyfeatur": 319, "unsuccess": 319, "showassembli": [319, 325], "group": 320, "intend": [320, 321], "hybrid": 320, "encod": 320, "concaten": 320, "colon": 320, "separ": 320, "entri": [320, 327], "underscor": 320, "_": 320, "attr1nam": 320, "attr1value_attr2nam": 320, "attr2valu": 320, "four": [320, 324], "standard": 320, "zvector": [320, 321], "setstandardattribut": 320, "write": [320, 321], "readstandardattribut": 320, "read": 320, "checkstandardattribut": 320, "correctli": 320, "miss": 320, "retriev": 320, "later": [320, 321, 324], "filter": 320, "criteria": 320, "These": 320, "deleteattribut": 320, "setcustomattribut": 320, "readallattribut": 320, "linear": [321, 324], "straight": 321, "rafter": 321, "joist": 321, "beamfromcurv": 321, "form": [321, 324], "linecurv": 321, "beamfromcurveguid": 321, "referenc": 321, "around": 321, "li": [321, 326], "sai": 321, "perpendicular": 321, "world": 321, "vertic": 321, "convent": 321, "jointcategoryrul": [321, 324], "automaticjoint": 321, "updaterefobj": 321, "onc": 321, "preview": [321, 325], "extract": [321, 325], "demo": 322, "ly": 323, "three": 324, "prefix": 324, "rel": 324, "we": 324, "distinguish": 324, "topolog": 324, "situat": 324, "splice": 324, "co": 324, "corner": 324, "meet": 324, "select": 324, "addition": 324, "clean": 324, "serv": [324, 326], "cata": 324, "catb": 324, "thing": 324, "everi": 324, "tri": 324, "unintend": 324, "maxdist": 324, "exactli": 324, "certain": 324, "000001": 324, "showbeam": 325, "showbeamfram": 325, "showbeamindex": 325, "showjointtyp": 325, "bakewithboxmap": 326, "layer": 326, "desir": 326, "random": 326, "deviat": 326, "mapsiz": 326, "adjust": 326, "size": 326, "imag": 326, "ratio": 326, "bitmap": 326, "care": 327, "final": 327, "matter": 327, "last": 327, "earlier": 327}, "objects": {"compas_timber.assembly": [[9, 0, 1, "", "TimberAssembly"]], "compas_timber.assembly.TimberAssembly": [[10, 1, 1, "", "ToString"], [11, 1, 1, "", "add_beam"], [12, 1, 1, "", "add_connection"], [13, 1, 1, "", "add_joint"], [14, 1, 1, "", "add_part"], [15, 1, 1, "", "are_parts_joined"], [16, 1, 1, "", "compute_aabb"], [17, 1, 1, "", "compute_obb"], [18, 1, 1, "", "connections"], [19, 1, 1, "", "contains"], [20, 1, 1, "", "copy"], [21, 1, 1, "", "delete_connection"], [22, 1, 1, "", "delete_part"], [23, 1, 1, "", "find"], [24, 1, 1, "", "find_by_key"], [25, 1, 1, "", "from_json"], [26, 1, 1, "", "from_jsonstring"], [27, 1, 1, "", "parts"], [28, 1, 1, "", "remove_joint"], [29, 1, 1, "", "rotate"], [30, 1, 1, "", "rotated"], [31, 1, 1, "", "scale"], [32, 1, 1, "", "scaled"], [33, 1, 1, "", "set_topologies"], [34, 1, 1, "", "sha256"], [35, 1, 1, "", "to_json"], [36, 1, 1, "", "to_jsonstring"], [37, 1, 1, "", "transform"], [38, 1, 1, "", "transform_numpy"], [39, 1, 1, "", "transformed"], [40, 1, 1, "", "transformed_numpy"], [41, 1, 1, "", "translate"], [42, 1, 1, "", "translated"], [43, 1, 1, "", "validate_data"]], "compas_timber.connections": [[44, 2, 1, "", "BeamJoinningError"], [45, 0, 1, "", "ConnectionSolver"], [48, 0, 1, "", "FrenchRidgeLapJoint"], [61, 0, 1, "", "Joint"], [73, 0, 1, "", "JointTopology"], [75, 0, 1, "", "LButtJoint"], [89, 0, 1, "", "LHalfLapJoint"], [103, 0, 1, "", "LMiterJoint"], [116, 0, 1, "", "LapJoint"], [130, 0, 1, "", "TButtJoint"], [143, 0, 1, "", "THalfLapJoint"], [157, 0, 1, "", "XHalfLapJoint"], [171, 3, 1, "", "beam_side_incidence"], [172, 3, 1, "", "find_neighboring_beams"]], "compas_timber.connections.ConnectionSolver": [[46, 1, 1, "", "find_intersecting_pairs"], [47, 1, 1, "", "find_topology"]], "compas_timber.connections.FrenchRidgeLapJoint": [[49, 1, 1, "", "ToString"], [50, 1, 1, "", "add_features"], [51, 1, 1, "", "check_geometry"], [52, 1, 1, "", "copy"], [53, 1, 1, "", "create"], [54, 1, 1, "", "from_json"], [55, 1, 1, "", "from_jsonstring"], [56, 1, 1, "", "restore_beams_from_keys"], [57, 1, 1, "", "sha256"], [58, 1, 1, "", "to_json"], [59, 1, 1, "", "to_jsonstring"], [60, 1, 1, "", "validate_data"]], "compas_timber.connections.Joint": [[62, 1, 1, "", "ToString"], [63, 1, 1, "", "add_features"], [64, 1, 1, "", "copy"], [65, 1, 1, "", "create"], [66, 1, 1, "", "from_json"], [67, 1, 1, "", "from_jsonstring"], [68, 1, 1, "", "restore_beams_from_keys"], [69, 1, 1, "", "sha256"], [70, 1, 1, "", "to_json"], [71, 1, 1, "", "to_jsonstring"], [72, 1, 1, "", "validate_data"]], "compas_timber.connections.JointTopology": [[74, 1, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[76, 1, 1, "", "ToString"], [77, 1, 1, "", "add_features"], [78, 1, 1, "", "copy"], [79, 1, 1, "", "create"], [80, 1, 1, "", "from_json"], [81, 1, 1, "", "from_jsonstring"], [82, 1, 1, "", "get_cross_cutting_plane"], [83, 1, 1, "", "get_main_cutting_plane"], [84, 1, 1, "", "restore_beams_from_keys"], [85, 1, 1, "", "sha256"], [86, 1, 1, "", "to_json"], [87, 1, 1, "", "to_jsonstring"], [88, 1, 1, "", "validate_data"]], "compas_timber.connections.LHalfLapJoint": [[90, 1, 1, "", "ToString"], [91, 1, 1, "", "add_features"], [92, 1, 1, "", "copy"], [93, 1, 1, "", "create"], [94, 1, 1, "", "from_json"], [95, 1, 1, "", "from_jsonstring"], [96, 1, 1, "", "get_cross_cutting_frame"], [97, 1, 1, "", "get_main_cutting_frame"], [98, 1, 1, "", "restore_beams_from_keys"], [99, 1, 1, "", "sha256"], [100, 1, 1, "", "to_json"], [101, 1, 1, "", "to_jsonstring"], [102, 1, 1, "", "validate_data"]], "compas_timber.connections.LMiterJoint": [[104, 1, 1, "", "ToString"], [105, 1, 1, "", "add_features"], [106, 1, 1, "", "copy"], [107, 1, 1, "", "create"], [108, 1, 1, "", "from_json"], [109, 1, 1, "", "from_jsonstring"], [110, 1, 1, "", "get_cutting_planes"], [111, 1, 1, "", "restore_beams_from_keys"], [112, 1, 1, "", "sha256"], [113, 1, 1, "", "to_json"], [114, 1, 1, "", "to_jsonstring"], [115, 1, 1, "", "validate_data"]], "compas_timber.connections.LapJoint": [[117, 1, 1, "", "ToString"], [118, 1, 1, "", "add_features"], [119, 1, 1, "", "copy"], [120, 1, 1, "", "create"], [121, 1, 1, "", "from_json"], [122, 1, 1, "", "from_jsonstring"], [123, 1, 1, "", "get_cross_cutting_frame"], [124, 1, 1, "", "get_main_cutting_frame"], [125, 1, 1, "", "restore_beams_from_keys"], [126, 1, 1, "", "sha256"], [127, 1, 1, "", "to_json"], [128, 1, 1, "", "to_jsonstring"], [129, 1, 1, "", "validate_data"]], "compas_timber.connections.TButtJoint": [[131, 1, 1, "", "ToString"], [132, 1, 1, "", "add_features"], [133, 1, 1, "", "copy"], [134, 1, 1, "", "create"], [135, 1, 1, "", "from_json"], [136, 1, 1, "", "from_jsonstring"], [137, 1, 1, "", "get_cutting_plane"], [138, 1, 1, "", "restore_beams_from_keys"], [139, 1, 1, "", "sha256"], [140, 1, 1, "", "to_json"], [141, 1, 1, "", "to_jsonstring"], [142, 1, 1, "", "validate_data"]], "compas_timber.connections.THalfLapJoint": [[144, 1, 1, "", "ToString"], [145, 1, 1, "", "add_features"], [146, 1, 1, "", "copy"], [147, 1, 1, "", "create"], [148, 1, 1, "", "from_json"], [149, 1, 1, "", "from_jsonstring"], [150, 1, 1, "", "get_cross_cutting_frame"], [151, 1, 1, "", "get_main_cutting_frame"], [152, 1, 1, "", "restore_beams_from_keys"], [153, 1, 1, "", "sha256"], [154, 1, 1, "", "to_json"], [155, 1, 1, "", "to_jsonstring"], [156, 1, 1, "", "validate_data"]], "compas_timber.connections.XHalfLapJoint": [[158, 1, 1, "", "ToString"], [159, 1, 1, "", "add_features"], [160, 1, 1, "", "copy"], [161, 1, 1, "", "create"], [162, 1, 1, "", "from_json"], [163, 1, 1, "", "from_jsonstring"], [164, 1, 1, "", "get_cross_cutting_frame"], [165, 1, 1, "", "get_main_cutting_frame"], [166, 1, 1, "", "restore_beams_from_keys"], [167, 1, 1, "", "sha256"], [168, 1, 1, "", "to_json"], [169, 1, 1, "", "to_jsonstring"], [170, 1, 1, "", "validate_data"]], "compas_timber.consumers": [[173, 0, 1, "", "BeamGeometry"], [174, 0, 1, "", "BrepGeometryConsumer"], [175, 0, 1, "", "CutFeature"], [184, 0, 1, "", "CutFeatureGeometry"], [186, 0, 1, "", "DrillFeature"], [195, 0, 1, "", "DrillFeatureGeometry"], [197, 2, 1, "", "FeatureApplicationError"], [198, 0, 1, "", "FeatureApplicator"], [200, 0, 1, "", "MillVolume"], [209, 0, 1, "", "MillVolumeGeometry"]], "compas_timber.consumers.CutFeature": [[176, 1, 1, "", "ToString"], [177, 1, 1, "", "copy"], [178, 1, 1, "", "from_json"], [179, 1, 1, "", "from_jsonstring"], [180, 1, 1, "", "sha256"], [181, 1, 1, "", "to_json"], [182, 1, 1, "", "to_jsonstring"], [183, 1, 1, "", "validate_data"]], "compas_timber.consumers.CutFeatureGeometry": [[185, 1, 1, "", "apply"]], "compas_timber.consumers.DrillFeature": [[187, 1, 1, "", "ToString"], [188, 1, 1, "", "copy"], [189, 1, 1, "", "from_json"], [190, 1, 1, "", "from_jsonstring"], [191, 1, 1, "", "sha256"], [192, 1, 1, "", "to_json"], [193, 1, 1, "", "to_jsonstring"], [194, 1, 1, "", "validate_data"]], "compas_timber.consumers.DrillFeatureGeometry": [[196, 1, 1, "", "apply"]], "compas_timber.consumers.FeatureApplicator": [[199, 1, 1, "", "apply"]], "compas_timber.consumers.MillVolume": [[201, 1, 1, "", "ToString"], [202, 1, 1, "", "copy"], [203, 1, 1, "", "from_json"], [204, 1, 1, "", "from_jsonstring"], [205, 1, 1, "", "sha256"], [206, 1, 1, "", "to_json"], [207, 1, 1, "", "to_jsonstring"], [208, 1, 1, "", "validate_data"]], "compas_timber.consumers.MillVolumeGeometry": [[210, 1, 1, "", "apply"]], "compas_timber.fabrication": [[211, 0, 1, "", "BTLx"], [215, 0, 1, "", "BTLxFrenchRidgeLap"], [219, 0, 1, "", "BTLxJackCut"], [222, 0, 1, "", "BTLxProcess"], [223, 0, 1, "", "FrenchRidgeFactory"], [225, 0, 1, "", "LButtFactory"], [227, 0, 1, "", "LMiterFactory"], [229, 0, 1, "", "TButtFactory"]], "compas_timber.fabrication.BTLx": [[212, 1, 1, "", "btlx_string"], [213, 1, 1, "", "process_assembly"], [214, 1, 1, "", "register_joint"]], "compas_timber.fabrication.BTLxFrenchRidgeLap": [[216, 1, 1, "", "create_process"], [217, 1, 1, "", "get_params"], [218, 1, 1, "", "process_joints"]], "compas_timber.fabrication.BTLxJackCut": [[220, 1, 1, "", "create_process"], [221, 1, 1, "", "generate_process"]], "compas_timber.fabrication.FrenchRidgeFactory": [[224, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.LButtFactory": [[226, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.LMiterFactory": [[228, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.TButtFactory": [[230, 1, 1, "", "apply_processings"]], "compas_timber.ghpython": [[231, 0, 1, "", "CategoryRule"], [235, 0, 1, "", "DebugInfomation"], [239, 0, 1, "", "DirectRule"], [242, 0, 1, "", "FeatureDefinition"], [244, 0, 1, "", "JointDefinition"], [248, 0, 1, "", "JointOptions"], [251, 0, 1, "", "TopologyRule"]], "compas_timber.ghpython.CategoryRule": [[232, 1, 1, "", "ToString"], [233, 1, 1, "", "comply"], [234, 1, 1, "", "reorder"]], "compas_timber.ghpython.DebugInfomation": [[236, 1, 1, "", "ToString"], [237, 1, 1, "", "add_feature_error"], [238, 1, 1, "", "add_joint_error"]], "compas_timber.ghpython.DirectRule": [[240, 1, 1, "", "ToString"], [241, 1, 1, "", "comply"]], "compas_timber.ghpython.FeatureDefinition": [[243, 1, 1, "", "ToString"]], "compas_timber.ghpython.JointDefinition": [[245, 1, 1, "", "ToString"], [246, 1, 1, "", "is_identical"], [247, 1, 1, "", "match"]], "compas_timber.ghpython.JointOptions": [[249, 1, 1, "", "ToString"], [250, 1, 1, "", "is_identical"]], "compas_timber.ghpython.TopologyRule": [[252, 1, 1, "", "ToString"], [253, 1, 1, "", "comply"]], "compas_timber.parts": [[254, 0, 1, "", "Beam"]], "compas_timber.parts.Beam": [[255, 1, 1, "", "ToString"], [256, 1, 1, "", "add_blank_extension"], [257, 1, 1, "", "add_feature"], [258, 1, 1, "", "add_features"], [259, 1, 1, "", "align_z"], [260, 1, 1, "", "clear_features"], [261, 1, 1, "", "compute_aabb"], [262, 1, 1, "", "compute_obb"], [263, 1, 1, "", "copy"], [264, 1, 1, "", "endpoint_closest_to_point"], [265, 1, 1, "", "extension_to_plane"], [266, 1, 1, "", "from_centerline"], [267, 1, 1, "", "from_endpoints"], [268, 1, 1, "", "from_json"], [269, 1, 1, "", "from_jsonstring"], [270, 1, 1, "", "get_geometry"], [271, 1, 1, "", "remove_blank_extension"], [272, 1, 1, "", "remove_features"], [273, 1, 1, "", "rotate"], [274, 1, 1, "", "rotated"], [275, 1, 1, "", "scale"], [276, 1, 1, "", "scaled"], [277, 1, 1, "", "sha256"], [278, 1, 1, "", "to_json"], [279, 1, 1, "", "to_jsonstring"], [280, 1, 1, "", "transform"], [281, 1, 1, "", "transform_numpy"], [282, 1, 1, "", "transformed"], [283, 1, 1, "", "transformed_numpy"], [284, 1, 1, "", "translate"], [285, 1, 1, "", "translated"], [286, 1, 1, "", "validate_data"]], "compas_timber.planning": [[287, 0, 1, "", "Actor"], [289, 0, 1, "", "BuildingPlan"], [299, 0, 1, "", "SimpleSequenceGenerator"], [300, 0, 1, "", "Step"]], "compas_timber.planning.Actor": [[288, 1, 1, "", "get_name"]], "compas_timber.planning.BuildingPlan": [[290, 1, 1, "", "ToString"], [291, 1, 1, "", "add_step"], [292, 1, 1, "", "copy"], [293, 1, 1, "", "from_json"], [294, 1, 1, "", "from_jsonstring"], [295, 1, 1, "", "sha256"], [296, 1, 1, "", "to_json"], [297, 1, 1, "", "to_jsonstring"], [298, 1, 1, "", "validate_data"]], "compas_timber.planning.Step": [[301, 1, 1, "", "ToString"], [302, 1, 1, "", "copy"], [303, 1, 1, "", "from_json"], [304, 1, 1, "", "from_jsonstring"], [305, 1, 1, "", "sha256"], [306, 1, 1, "", "to_json"], [307, 1, 1, "", "to_jsonstring"], [308, 1, 1, "", "transform"], [309, 1, 1, "", "validate_data"]], "compas_timber.rhino": [[310, 3, 1, "", "find_neighboring_beams"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:exception", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "exception", "Python exception"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "packag": 0, "compas_timb": [1, 2, 3, 4, 5, 6, 7], "assembli": [1, 312, 319], "class": [1, 2, 3, 4, 5, 6, 7], "connect": [2, 18], "function": 2, "except": 2, "consum": 3, "fabric": 4, "ghpython": 5, "part": [6, 27], "plan": 7, "rhino": 8, "plugin": [8, 317], "timberassembli": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "tostr": [10, 49, 62, 76, 90, 104, 117, 131, 144, 158, 176, 187, 201, 232, 236, 240, 243, 245, 249, 252, 255, 290, 301], "add_beam": 11, "add_connect": 12, "add_joint": 13, "add_part": 14, "are_parts_join": 15, "compute_aabb": [16, 261], "compute_obb": [17, 262], "contain": 19, "copi": [20, 52, 64, 78, 92, 106, 119, 133, 146, 160, 177, 188, 202, 263, 292, 302], "delete_connect": 21, "delete_part": 22, "find": 23, "find_by_kei": 24, "from_json": [25, 54, 66, 80, 94, 108, 121, 135, 148, 162, 178, 189, 203, 268, 293, 303], "from_jsonstr": [26, 55, 67, 81, 95, 109, 122, 136, 149, 163, 179, 190, 204, 269, 294, 304], "remove_joint": 28, "rotat": [29, 30, 273, 274], "scale": [31, 32, 275, 276], "set_topologi": 33, "sha256": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 277, 295, 305], "to_json": [35, 58, 70, 86, 100, 113, 127, 140, 154, 168, 181, 192, 206, 278, 296, 306], "to_jsonstr": [36, 59, 71, 87, 101, 114, 128, 141, 155, 169, 182, 193, 207, 279, 297, 307], "transform": [37, 39, 280, 282, 308], "transform_numpi": [38, 281], "transformed_numpi": [40, 283], "translat": [41, 42, 284, 285], "validate_data": [43, 60, 72, 88, 102, 115, 129, 142, 156, 170, 183, 194, 208, 286, 298, 309], "beamjoinningerror": 44, "connectionsolv": [45, 46, 47], "find_intersecting_pair": 46, "find_topologi": 47, "frenchridgelapjoint": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "add_featur": [50, 63, 77, 91, 105, 118, 132, 145, 159, 257, 258], "check_geometri": 51, "creat": [53, 65, 79, 93, 107, 120, 134, 147, 161, 313], "restore_beams_from_kei": [56, 68, 84, 98, 111, 125, 138, 152, 166], "joint": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 313, 324], "jointtopologi": [73, 74], "get_nam": [74, 288], "lbuttjoint": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "get_cross_cutting_plan": 82, "get_main_cutting_plan": 83, "lhalflapjoint": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "get_cross_cutting_fram": [96, 123, 150, 164], "get_main_cutting_fram": [97, 124, 151, 165], "lmiterjoint": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "get_cutting_plan": [110, 137], "lapjoint": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "tbuttjoint": [130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "thalflapjoint": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "xhalflapjoint": [157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], "beam_side_incid": 171, "find_neighboring_beam": [172, 310], "beamgeometri": 173, "brepgeometryconsum": 174, "cutfeatur": [175, 176, 177, 178, 179, 180, 181, 182, 183], "cutfeaturegeometri": [184, 185], "appli": [185, 196, 199, 210], "drillfeatur": [186, 187, 188, 189, 190, 191, 192, 193, 194], "drillfeaturegeometri": [195, 196], "featureapplicationerror": 197, "featureappl": [198, 199], "millvolum": [200, 201, 202, 203, 204, 205, 206, 207, 208], "millvolumegeometri": [209, 210], "btlx": [211, 212, 213, 214, 318], "btlx_string": 212, "process_assembli": 213, "register_joint": 214, "btlxfrenchridgelap": [215, 216, 217, 218], "create_process": [216, 220], "get_param": 217, "process_joint": 218, "btlxjackcut": [219, 220, 221], "generate_process": 221, "btlxprocess": 222, "frenchridgefactori": [223, 224], "apply_process": [224, 226, 228, 230], "lbuttfactori": [225, 226], "lmiterfactori": [227, 228], "tbuttfactori": [229, 230], "categoryrul": [231, 232, 233, 234], "compli": [233, 241, 253], "reorder": 234, "debuginfom": [235, 236, 237, 238], "add_feature_error": 237, "add_joint_error": 238, "directrul": [239, 240, 241], "featuredefinit": [242, 243], "jointdefinit": [244, 245, 246, 247], "is_ident": [246, 250], "match": 247, "jointopt": [248, 249, 250], "topologyrul": [251, 252, 253], "beam": [254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 321], "add_blank_extens": 256, "align_z": 259, "clear_featur": 260, "endpoint_closest_to_point": 264, "extension_to_plan": 265, "from_centerlin": 266, "from_endpoint": 267, "get_geometri": 270, "remove_blank_extens": 271, "remove_featur": 272, "actor": [287, 288], "buildingplan": [289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "add_step": 291, "simplesequencegener": 299, "step": [300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "cite": 311, "exampl": [312, 322], "timber": [312, 314], "compa": 314, "depend": 314, "tabl": 314, "content": 314, "indic": 314, "instal": 315, "stabl": 315, "pip": 315, "develop": 315, "licens": 316, "grasshopp": 317, "contribut": 318, "guid": 318, "attribut": 320, "featur": 323, "topologi": 324, "compon": 324, "t": 324, "butt": 324, "l": 324, "miter": 324, "automaticjoint": 324, "wizzard": 324, "show": 325, "util": 326, "bake": 326, "boxmap": 326, "workflow": 327}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Packages": [[0, "packages"]], "compas_timber.assembly": [[1, "compas-timber-assembly"]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [7, "classes"]], "compas_timber.connections": [[2, "compas-timber-connections"]], "Functions": [[2, "functions"]], "Exceptions": [[2, "exceptions"]], "compas_timber.consumers": [[3, "compas-timber-consumers"]], "compas_timber.fabrication": [[4, "compas-timber-fabrication"]], "compas_timber.ghpython": [[5, "compas-timber-ghpython"]], "compas_timber.parts": [[6, "compas-timber-parts"]], "compas_timber.planning": [[7, "compas-timber-planning"]], "rhino": [[8, "rhino"]], "Plugins": [[8, "plugins"]], "TimberAssembly": [[9, "timberassembly"]], "TimberAssembly.ToString": [[10, "timberassembly-tostring"]], "TimberAssembly.add_beam": [[11, "timberassembly-add-beam"]], "TimberAssembly.add_connection": [[12, "timberassembly-add-connection"]], "TimberAssembly.add_joint": [[13, "timberassembly-add-joint"]], "TimberAssembly.add_part": [[14, "timberassembly-add-part"]], "TimberAssembly.are_parts_joined": [[15, "timberassembly-are-parts-joined"]], "TimberAssembly.compute_aabb": [[16, "timberassembly-compute-aabb"]], "TimberAssembly.compute_obb": [[17, "timberassembly-compute-obb"]], "TimberAssembly.connections": [[18, "timberassembly-connections"]], "TimberAssembly.contains": [[19, "timberassembly-contains"]], "TimberAssembly.copy": [[20, "timberassembly-copy"]], "TimberAssembly.delete_connection": [[21, "timberassembly-delete-connection"]], "TimberAssembly.delete_part": [[22, "timberassembly-delete-part"]], "TimberAssembly.find": [[23, "timberassembly-find"]], "TimberAssembly.find_by_key": [[24, "timberassembly-find-by-key"]], "TimberAssembly.from_json": [[25, "timberassembly-from-json"]], "TimberAssembly.from_jsonstring": [[26, "timberassembly-from-jsonstring"]], "TimberAssembly.parts": [[27, "timberassembly-parts"]], "TimberAssembly.remove_joint": [[28, "timberassembly-remove-joint"]], "TimberAssembly.rotate": [[29, "timberassembly-rotate"]], "TimberAssembly.rotated": [[30, "timberassembly-rotated"]], "TimberAssembly.scale": [[31, "timberassembly-scale"]], "TimberAssembly.scaled": [[32, "timberassembly-scaled"]], "TimberAssembly.set_topologies": [[33, "timberassembly-set-topologies"]], "TimberAssembly.sha256": [[34, "timberassembly-sha256"]], "TimberAssembly.to_json": [[35, "timberassembly-to-json"]], "TimberAssembly.to_jsonstring": [[36, "timberassembly-to-jsonstring"]], "TimberAssembly.transform": [[37, "timberassembly-transform"]], "TimberAssembly.transform_numpy": [[38, "timberassembly-transform-numpy"]], "TimberAssembly.transformed": [[39, "timberassembly-transformed"]], "TimberAssembly.transformed_numpy": [[40, "timberassembly-transformed-numpy"]], "TimberAssembly.translate": [[41, "timberassembly-translate"]], "TimberAssembly.translated": [[42, "timberassembly-translated"]], "TimberAssembly.validate_data": [[43, "timberassembly-validate-data"]], "BeamJoinningError": [[44, "beamjoinningerror"]], "ConnectionSolver": [[45, "connectionsolver"]], "ConnectionSolver.find_intersecting_pairs": [[46, "connectionsolver-find-intersecting-pairs"]], "ConnectionSolver.find_topology": [[47, "connectionsolver-find-topology"]], "FrenchRidgeLapJoint": [[48, "frenchridgelapjoint"]], "FrenchRidgeLapJoint.ToString": [[49, "frenchridgelapjoint-tostring"]], "FrenchRidgeLapJoint.add_features": [[50, "frenchridgelapjoint-add-features"]], "FrenchRidgeLapJoint.check_geometry": [[51, "frenchridgelapjoint-check-geometry"]], "FrenchRidgeLapJoint.copy": [[52, "frenchridgelapjoint-copy"]], "FrenchRidgeLapJoint.create": [[53, "frenchridgelapjoint-create"]], "FrenchRidgeLapJoint.from_json": [[54, "frenchridgelapjoint-from-json"]], "FrenchRidgeLapJoint.from_jsonstring": [[55, "frenchridgelapjoint-from-jsonstring"]], "FrenchRidgeLapJoint.restore_beams_from_keys": [[56, "frenchridgelapjoint-restore-beams-from-keys"]], "FrenchRidgeLapJoint.sha256": [[57, "frenchridgelapjoint-sha256"]], "FrenchRidgeLapJoint.to_json": [[58, "frenchridgelapjoint-to-json"]], "FrenchRidgeLapJoint.to_jsonstring": [[59, "frenchridgelapjoint-to-jsonstring"]], "FrenchRidgeLapJoint.validate_data": [[60, "frenchridgelapjoint-validate-data"]], "Joint": [[61, "joint"]], "Joint.ToString": [[62, "joint-tostring"]], "Joint.add_features": [[63, "joint-add-features"]], "Joint.copy": [[64, "joint-copy"]], "Joint.create": [[65, "joint-create"]], "Joint.from_json": [[66, "joint-from-json"]], "Joint.from_jsonstring": [[67, "joint-from-jsonstring"]], "Joint.restore_beams_from_keys": [[68, "joint-restore-beams-from-keys"]], "Joint.sha256": [[69, "joint-sha256"]], "Joint.to_json": [[70, "joint-to-json"]], "Joint.to_jsonstring": [[71, "joint-to-jsonstring"]], "Joint.validate_data": [[72, "joint-validate-data"]], "JointTopology": [[73, "jointtopology"]], "JointTopology.get_name": [[74, "jointtopology-get-name"]], "LButtJoint": [[75, "lbuttjoint"]], "LButtJoint.ToString": [[76, "lbuttjoint-tostring"]], "LButtJoint.add_features": [[77, "lbuttjoint-add-features"]], "LButtJoint.copy": [[78, "lbuttjoint-copy"]], "LButtJoint.create": [[79, "lbuttjoint-create"]], "LButtJoint.from_json": [[80, "lbuttjoint-from-json"]], "LButtJoint.from_jsonstring": [[81, "lbuttjoint-from-jsonstring"]], "LButtJoint.get_cross_cutting_plane": [[82, "lbuttjoint-get-cross-cutting-plane"]], "LButtJoint.get_main_cutting_plane": [[83, "lbuttjoint-get-main-cutting-plane"]], "LButtJoint.restore_beams_from_keys": [[84, "lbuttjoint-restore-beams-from-keys"]], "LButtJoint.sha256": [[85, "lbuttjoint-sha256"]], "LButtJoint.to_json": [[86, "lbuttjoint-to-json"]], "LButtJoint.to_jsonstring": [[87, "lbuttjoint-to-jsonstring"]], "LButtJoint.validate_data": [[88, "lbuttjoint-validate-data"]], "LHalfLapJoint": [[89, "lhalflapjoint"]], "LHalfLapJoint.ToString": [[90, "lhalflapjoint-tostring"]], "LHalfLapJoint.add_features": [[91, "lhalflapjoint-add-features"]], "LHalfLapJoint.copy": [[92, "lhalflapjoint-copy"]], "LHalfLapJoint.create": [[93, "lhalflapjoint-create"]], "LHalfLapJoint.from_json": [[94, "lhalflapjoint-from-json"]], "LHalfLapJoint.from_jsonstring": [[95, "lhalflapjoint-from-jsonstring"]], "LHalfLapJoint.get_cross_cutting_frame": [[96, "lhalflapjoint-get-cross-cutting-frame"]], "LHalfLapJoint.get_main_cutting_frame": [[97, "lhalflapjoint-get-main-cutting-frame"]], "LHalfLapJoint.restore_beams_from_keys": [[98, "lhalflapjoint-restore-beams-from-keys"]], "LHalfLapJoint.sha256": [[99, "lhalflapjoint-sha256"]], "LHalfLapJoint.to_json": [[100, "lhalflapjoint-to-json"]], "LHalfLapJoint.to_jsonstring": [[101, "lhalflapjoint-to-jsonstring"]], "LHalfLapJoint.validate_data": [[102, "lhalflapjoint-validate-data"]], "LMiterJoint": [[103, "lmiterjoint"]], "LMiterJoint.ToString": [[104, "lmiterjoint-tostring"]], "LMiterJoint.add_features": [[105, "lmiterjoint-add-features"]], "LMiterJoint.copy": [[106, "lmiterjoint-copy"]], "LMiterJoint.create": [[107, "lmiterjoint-create"]], "LMiterJoint.from_json": [[108, "lmiterjoint-from-json"]], "LMiterJoint.from_jsonstring": [[109, "lmiterjoint-from-jsonstring"]], "LMiterJoint.get_cutting_planes": [[110, "lmiterjoint-get-cutting-planes"]], "LMiterJoint.restore_beams_from_keys": [[111, "lmiterjoint-restore-beams-from-keys"]], "LMiterJoint.sha256": [[112, "lmiterjoint-sha256"]], "LMiterJoint.to_json": [[113, "lmiterjoint-to-json"]], "LMiterJoint.to_jsonstring": [[114, "lmiterjoint-to-jsonstring"]], "LMiterJoint.validate_data": [[115, "lmiterjoint-validate-data"]], "LapJoint": [[116, "lapjoint"]], "LapJoint.ToString": [[117, "lapjoint-tostring"]], "LapJoint.add_features": [[118, "lapjoint-add-features"]], "LapJoint.copy": [[119, "lapjoint-copy"]], "LapJoint.create": [[120, "lapjoint-create"]], "LapJoint.from_json": [[121, "lapjoint-from-json"]], "LapJoint.from_jsonstring": [[122, "lapjoint-from-jsonstring"]], "LapJoint.get_cross_cutting_frame": [[123, "lapjoint-get-cross-cutting-frame"]], "LapJoint.get_main_cutting_frame": [[124, "lapjoint-get-main-cutting-frame"]], "LapJoint.restore_beams_from_keys": [[125, "lapjoint-restore-beams-from-keys"]], "LapJoint.sha256": [[126, "lapjoint-sha256"]], "LapJoint.to_json": [[127, "lapjoint-to-json"]], "LapJoint.to_jsonstring": [[128, "lapjoint-to-jsonstring"]], "LapJoint.validate_data": [[129, "lapjoint-validate-data"]], "TButtJoint": [[130, "tbuttjoint"]], "TButtJoint.ToString": [[131, "tbuttjoint-tostring"]], "TButtJoint.add_features": [[132, "tbuttjoint-add-features"]], "TButtJoint.copy": [[133, "tbuttjoint-copy"]], "TButtJoint.create": [[134, "tbuttjoint-create"]], "TButtJoint.from_json": [[135, "tbuttjoint-from-json"]], "TButtJoint.from_jsonstring": [[136, "tbuttjoint-from-jsonstring"]], "TButtJoint.get_cutting_plane": [[137, "tbuttjoint-get-cutting-plane"]], "TButtJoint.restore_beams_from_keys": [[138, "tbuttjoint-restore-beams-from-keys"]], "TButtJoint.sha256": [[139, "tbuttjoint-sha256"]], "TButtJoint.to_json": [[140, "tbuttjoint-to-json"]], "TButtJoint.to_jsonstring": [[141, "tbuttjoint-to-jsonstring"]], "TButtJoint.validate_data": [[142, "tbuttjoint-validate-data"]], "THalfLapJoint": [[143, "thalflapjoint"]], "THalfLapJoint.ToString": [[144, "thalflapjoint-tostring"]], "THalfLapJoint.add_features": [[145, "thalflapjoint-add-features"]], "THalfLapJoint.copy": [[146, "thalflapjoint-copy"]], "THalfLapJoint.create": [[147, "thalflapjoint-create"]], "THalfLapJoint.from_json": [[148, "thalflapjoint-from-json"]], "THalfLapJoint.from_jsonstring": [[149, "thalflapjoint-from-jsonstring"]], "THalfLapJoint.get_cross_cutting_frame": [[150, "thalflapjoint-get-cross-cutting-frame"]], "THalfLapJoint.get_main_cutting_frame": [[151, "thalflapjoint-get-main-cutting-frame"]], "THalfLapJoint.restore_beams_from_keys": [[152, "thalflapjoint-restore-beams-from-keys"]], "THalfLapJoint.sha256": [[153, "thalflapjoint-sha256"]], "THalfLapJoint.to_json": [[154, "thalflapjoint-to-json"]], "THalfLapJoint.to_jsonstring": [[155, "thalflapjoint-to-jsonstring"]], "THalfLapJoint.validate_data": [[156, "thalflapjoint-validate-data"]], "XHalfLapJoint": [[157, "xhalflapjoint"]], "XHalfLapJoint.ToString": [[158, "xhalflapjoint-tostring"]], "XHalfLapJoint.add_features": [[159, "xhalflapjoint-add-features"]], "XHalfLapJoint.copy": [[160, "xhalflapjoint-copy"]], "XHalfLapJoint.create": [[161, "xhalflapjoint-create"]], "XHalfLapJoint.from_json": [[162, "xhalflapjoint-from-json"]], "XHalfLapJoint.from_jsonstring": [[163, "xhalflapjoint-from-jsonstring"]], "XHalfLapJoint.get_cross_cutting_frame": [[164, "xhalflapjoint-get-cross-cutting-frame"]], "XHalfLapJoint.get_main_cutting_frame": [[165, "xhalflapjoint-get-main-cutting-frame"]], "XHalfLapJoint.restore_beams_from_keys": [[166, "xhalflapjoint-restore-beams-from-keys"]], "XHalfLapJoint.sha256": [[167, "xhalflapjoint-sha256"]], "XHalfLapJoint.to_json": [[168, "xhalflapjoint-to-json"]], "XHalfLapJoint.to_jsonstring": [[169, "xhalflapjoint-to-jsonstring"]], "XHalfLapJoint.validate_data": [[170, "xhalflapjoint-validate-data"]], "beam_side_incidence": [[171, "beam-side-incidence"]], "find_neighboring_beams": [[172, "find-neighboring-beams"], [310, "find-neighboring-beams"]], "BeamGeometry": [[173, "beamgeometry"]], "BrepGeometryConsumer": [[174, "brepgeometryconsumer"]], "CutFeature": [[175, "cutfeature"]], "CutFeature.ToString": [[176, "cutfeature-tostring"]], "CutFeature.copy": [[177, "cutfeature-copy"]], "CutFeature.from_json": [[178, "cutfeature-from-json"]], "CutFeature.from_jsonstring": [[179, "cutfeature-from-jsonstring"]], "CutFeature.sha256": [[180, "cutfeature-sha256"]], "CutFeature.to_json": [[181, "cutfeature-to-json"]], "CutFeature.to_jsonstring": [[182, "cutfeature-to-jsonstring"]], "CutFeature.validate_data": [[183, "cutfeature-validate-data"]], "CutFeatureGeometry": [[184, "cutfeaturegeometry"]], "CutFeatureGeometry.apply": [[185, "cutfeaturegeometry-apply"]], "DrillFeature": [[186, "drillfeature"]], "DrillFeature.ToString": [[187, "drillfeature-tostring"]], "DrillFeature.copy": [[188, "drillfeature-copy"]], "DrillFeature.from_json": [[189, "drillfeature-from-json"]], "DrillFeature.from_jsonstring": [[190, "drillfeature-from-jsonstring"]], "DrillFeature.sha256": [[191, "drillfeature-sha256"]], "DrillFeature.to_json": [[192, "drillfeature-to-json"]], "DrillFeature.to_jsonstring": [[193, "drillfeature-to-jsonstring"]], "DrillFeature.validate_data": [[194, "drillfeature-validate-data"]], "DrillFeatureGeometry": [[195, "drillfeaturegeometry"]], "DrillFeatureGeometry.apply": [[196, "drillfeaturegeometry-apply"]], "FeatureApplicationError": [[197, "featureapplicationerror"]], "FeatureApplicator": [[198, "featureapplicator"]], "FeatureApplicator.apply": [[199, "featureapplicator-apply"]], "MillVolume": [[200, "millvolume"]], "MillVolume.ToString": [[201, "millvolume-tostring"]], "MillVolume.copy": [[202, "millvolume-copy"]], "MillVolume.from_json": [[203, "millvolume-from-json"]], "MillVolume.from_jsonstring": [[204, "millvolume-from-jsonstring"]], "MillVolume.sha256": [[205, "millvolume-sha256"]], "MillVolume.to_json": [[206, "millvolume-to-json"]], "MillVolume.to_jsonstring": [[207, "millvolume-to-jsonstring"]], "MillVolume.validate_data": [[208, "millvolume-validate-data"]], "MillVolumeGeometry": [[209, "millvolumegeometry"]], "MillVolumeGeometry.apply": [[210, "millvolumegeometry-apply"]], "BTLx": [[211, "btlx"]], "BTLx.btlx_string": [[212, "btlx-btlx-string"]], "BTLx.process_assembly": [[213, "btlx-process-assembly"]], "BTLx.register_joint": [[214, "btlx-register-joint"]], "BTLxFrenchRidgeLap": [[215, "btlxfrenchridgelap"]], "BTLxFrenchRidgeLap.create_process": [[216, "btlxfrenchridgelap-create-process"]], "BTLxFrenchRidgeLap.get_params": [[217, "btlxfrenchridgelap-get-params"]], "BTLxFrenchRidgeLap.process_joints": [[218, "btlxfrenchridgelap-process-joints"]], "BTLxJackCut": [[219, "btlxjackcut"]], "BTLxJackCut.create_process": [[220, "btlxjackcut-create-process"]], "BTLxJackCut.generate_process": [[221, "btlxjackcut-generate-process"]], "BTLxProcess": [[222, "btlxprocess"]], "FrenchRidgeFactory": [[223, "frenchridgefactory"]], "FrenchRidgeFactory.apply_processings": [[224, "frenchridgefactory-apply-processings"]], "LButtFactory": [[225, "lbuttfactory"]], "LButtFactory.apply_processings": [[226, "lbuttfactory-apply-processings"]], "LMiterFactory": [[227, "lmiterfactory"]], "LMiterFactory.apply_processings": [[228, "lmiterfactory-apply-processings"]], "TButtFactory": [[229, "tbuttfactory"]], "TButtFactory.apply_processings": [[230, "tbuttfactory-apply-processings"]], "CategoryRule": [[231, "categoryrule"]], "CategoryRule.ToString": [[232, "categoryrule-tostring"]], "CategoryRule.comply": [[233, "categoryrule-comply"]], "CategoryRule.reorder": [[234, "categoryrule-reorder"]], "DebugInfomation": [[235, "debuginfomation"]], "DebugInfomation.ToString": [[236, "debuginfomation-tostring"]], "DebugInfomation.add_feature_error": [[237, "debuginfomation-add-feature-error"]], "DebugInfomation.add_joint_error": [[238, "debuginfomation-add-joint-error"]], "DirectRule": [[239, "directrule"]], "DirectRule.ToString": [[240, "directrule-tostring"]], "DirectRule.comply": [[241, "directrule-comply"]], "FeatureDefinition": [[242, "featuredefinition"]], "FeatureDefinition.ToString": [[243, "featuredefinition-tostring"]], "JointDefinition": [[244, "jointdefinition"]], "JointDefinition.ToString": [[245, "jointdefinition-tostring"]], "JointDefinition.is_identical": [[246, "jointdefinition-is-identical"]], "JointDefinition.match": [[247, "jointdefinition-match"]], "JointOptions": [[248, "jointoptions"]], "JointOptions.ToString": [[249, "jointoptions-tostring"]], "JointOptions.is_identical": [[250, "jointoptions-is-identical"]], "TopologyRule": [[251, "topologyrule"]], "TopologyRule.ToString": [[252, "topologyrule-tostring"]], "TopologyRule.comply": [[253, "topologyrule-comply"]], "Beam": [[254, "beam"], [321, "beam"]], "Beam.ToString": [[255, "beam-tostring"]], "Beam.add_blank_extension": [[256, "beam-add-blank-extension"]], "Beam.add_feature": [[257, "beam-add-feature"]], "Beam.add_features": [[258, "beam-add-features"]], "Beam.align_z": [[259, "beam-align-z"]], "Beam.clear_features": [[260, "beam-clear-features"]], "Beam.compute_aabb": [[261, "beam-compute-aabb"]], "Beam.compute_obb": [[262, "beam-compute-obb"]], "Beam.copy": [[263, "beam-copy"]], "Beam.endpoint_closest_to_point": [[264, "beam-endpoint-closest-to-point"]], "Beam.extension_to_plane": [[265, "beam-extension-to-plane"]], "Beam.from_centerline": [[266, "beam-from-centerline"]], "Beam.from_endpoints": [[267, "beam-from-endpoints"]], "Beam.from_json": [[268, "beam-from-json"]], "Beam.from_jsonstring": [[269, "beam-from-jsonstring"]], "Beam.get_geometry": [[270, "beam-get-geometry"]], "Beam.remove_blank_extension": [[271, "beam-remove-blank-extension"]], "Beam.remove_features": [[272, "beam-remove-features"]], "Beam.rotate": [[273, "beam-rotate"]], "Beam.rotated": [[274, "beam-rotated"]], "Beam.scale": [[275, "beam-scale"]], "Beam.scaled": [[276, "beam-scaled"]], "Beam.sha256": [[277, "beam-sha256"]], "Beam.to_json": [[278, "beam-to-json"]], "Beam.to_jsonstring": [[279, "beam-to-jsonstring"]], "Beam.transform": [[280, "beam-transform"]], "Beam.transform_numpy": [[281, "beam-transform-numpy"]], "Beam.transformed": [[282, "beam-transformed"]], "Beam.transformed_numpy": [[283, "beam-transformed-numpy"]], "Beam.translate": [[284, "beam-translate"]], "Beam.translated": [[285, "beam-translated"]], "Beam.validate_data": [[286, "beam-validate-data"]], "Actor": [[287, "actor"]], "Actor.get_name": [[288, "actor-get-name"]], "BuildingPlan": [[289, "buildingplan"]], "BuildingPlan.ToString": [[290, "buildingplan-tostring"]], "BuildingPlan.add_step": [[291, "buildingplan-add-step"]], "BuildingPlan.copy": [[292, "buildingplan-copy"]], "BuildingPlan.from_json": [[293, "buildingplan-from-json"]], "BuildingPlan.from_jsonstring": [[294, "buildingplan-from-jsonstring"]], "BuildingPlan.sha256": [[295, "buildingplan-sha256"]], "BuildingPlan.to_json": [[296, "buildingplan-to-json"]], "BuildingPlan.to_jsonstring": [[297, "buildingplan-to-jsonstring"]], "BuildingPlan.validate_data": [[298, "buildingplan-validate-data"]], "SimpleSequenceGenerator": [[299, "simplesequencegenerator"]], "Step": [[300, "step"]], "Step.ToString": [[301, "step-tostring"]], "Step.copy": [[302, "step-copy"]], "Step.from_json": [[303, "step-from-json"]], "Step.from_jsonstring": [[304, "step-from-jsonstring"]], "Step.sha256": [[305, "step-sha256"]], "Step.to_json": [[306, "step-to-json"]], "Step.to_jsonstring": [[307, "step-to-jsonstring"]], "Step.transform": [[308, "step-transform"]], "Step.validate_data": [[309, "step-validate-data"]], "Citing": [[311, "citing"]], "Examples": [[312, "examples"], [322, "examples"]], "Timber Assembly Examples": [[312, "timber-assembly-examples"]], "Create Joint": [[313, "create-joint"]], "COMPAS TIMBER": [[314, "compas-timber"]], "Dependencies": [[314, "dependencies"]], "Table of Contents": [[314, "table-of-contents"]], "Indices and tables": [[314, "indices-and-tables"]], "Installation": [[315, "installation"]], "Stable": [[315, "stable"]], "Install with pip": [[315, "install-with-pip"]], "Development": [[315, "development"]], "License": [[316, "license"]], "Grasshopper plugin": [[317, "grasshopper-plugin"]], "BTLx Contribution Guide": [[318, "btlx-contribution-guide"]], "Assembly": [[319, "assembly"]], "Attributes": [[320, "attributes"]], "Features": [[323, "features"]], "Joints": [[324, "joints"]], "Joint Topologies": [[324, "joint-topologies"]], "Joint components": [[324, "joint-components"]], "T-Butt": [[324, "t-butt"]], "L-Butt": [[324, "l-butt"]], "L-Miter": [[324, "l-miter"]], "AutomaticJoint wizzard": [[324, "automaticjoint-wizzard"]], "Show": [[325, "show"]], "Utils": [[326, "utils"]], "Bake with BoxMap": [[326, "bake-with-boxmap"]], "Workflow": [[327, "workflow"]]}, "indexentries": {"timberassembly (class in compas_timber.assembly)": [[9, "compas_timber.assembly.TimberAssembly"]], "tostring() (compas_timber.assembly.timberassembly method)": [[10, "compas_timber.assembly.TimberAssembly.ToString"]], "add_beam() (compas_timber.assembly.timberassembly method)": [[11, "compas_timber.assembly.TimberAssembly.add_beam"]], "add_connection() (compas_timber.assembly.timberassembly method)": [[12, "compas_timber.assembly.TimberAssembly.add_connection"]], "add_joint() (compas_timber.assembly.timberassembly method)": [[13, "compas_timber.assembly.TimberAssembly.add_joint"]], "add_part() (compas_timber.assembly.timberassembly method)": [[14, "compas_timber.assembly.TimberAssembly.add_part"]], "are_parts_joined() (compas_timber.assembly.timberassembly method)": [[15, "compas_timber.assembly.TimberAssembly.are_parts_joined"]], "compute_aabb() (compas_timber.assembly.timberassembly method)": [[16, "compas_timber.assembly.TimberAssembly.compute_aabb"]], "compute_obb() (compas_timber.assembly.timberassembly method)": [[17, "compas_timber.assembly.TimberAssembly.compute_obb"]], "connections() (compas_timber.assembly.timberassembly method)": [[18, "compas_timber.assembly.TimberAssembly.connections"]], "contains() (compas_timber.assembly.timberassembly method)": [[19, "compas_timber.assembly.TimberAssembly.contains"]], "copy() (compas_timber.assembly.timberassembly method)": [[20, "compas_timber.assembly.TimberAssembly.copy"]], "delete_connection() (compas_timber.assembly.timberassembly method)": [[21, "compas_timber.assembly.TimberAssembly.delete_connection"]], "delete_part() (compas_timber.assembly.timberassembly method)": [[22, "compas_timber.assembly.TimberAssembly.delete_part"]], "find() (compas_timber.assembly.timberassembly method)": [[23, "compas_timber.assembly.TimberAssembly.find"]], "find_by_key() (compas_timber.assembly.timberassembly method)": [[24, "compas_timber.assembly.TimberAssembly.find_by_key"]], "from_json() (compas_timber.assembly.timberassembly class method)": [[25, "compas_timber.assembly.TimberAssembly.from_json"]], "from_jsonstring() (compas_timber.assembly.timberassembly class method)": [[26, "compas_timber.assembly.TimberAssembly.from_jsonstring"]], "parts() (compas_timber.assembly.timberassembly method)": [[27, "compas_timber.assembly.TimberAssembly.parts"]], "remove_joint() (compas_timber.assembly.timberassembly method)": [[28, "compas_timber.assembly.TimberAssembly.remove_joint"]], "rotate() (compas_timber.assembly.timberassembly method)": [[29, "compas_timber.assembly.TimberAssembly.rotate"]], "rotated() (compas_timber.assembly.timberassembly method)": [[30, "compas_timber.assembly.TimberAssembly.rotated"]], "scale() (compas_timber.assembly.timberassembly method)": [[31, "compas_timber.assembly.TimberAssembly.scale"]], "scaled() (compas_timber.assembly.timberassembly method)": [[32, "compas_timber.assembly.TimberAssembly.scaled"]], "set_topologies() (compas_timber.assembly.timberassembly method)": [[33, "compas_timber.assembly.TimberAssembly.set_topologies"]], "sha256() (compas_timber.assembly.timberassembly method)": [[34, "compas_timber.assembly.TimberAssembly.sha256"]], "to_json() (compas_timber.assembly.timberassembly method)": [[35, "compas_timber.assembly.TimberAssembly.to_json"]], "to_jsonstring() (compas_timber.assembly.timberassembly method)": [[36, "compas_timber.assembly.TimberAssembly.to_jsonstring"]], "transform() (compas_timber.assembly.timberassembly method)": [[37, "compas_timber.assembly.TimberAssembly.transform"]], "transform_numpy() (compas_timber.assembly.timberassembly method)": [[38, "compas_timber.assembly.TimberAssembly.transform_numpy"]], "transformed() (compas_timber.assembly.timberassembly method)": [[39, "compas_timber.assembly.TimberAssembly.transformed"]], "transformed_numpy() (compas_timber.assembly.timberassembly method)": [[40, "compas_timber.assembly.TimberAssembly.transformed_numpy"]], "translate() (compas_timber.assembly.timberassembly method)": [[41, "compas_timber.assembly.TimberAssembly.translate"]], "translated() (compas_timber.assembly.timberassembly method)": [[42, "compas_timber.assembly.TimberAssembly.translated"]], "validate_data() (compas_timber.assembly.timberassembly class method)": [[43, "compas_timber.assembly.TimberAssembly.validate_data"]], "beamjoinningerror": [[44, "compas_timber.connections.BeamJoinningError"]], "connectionsolver (class in compas_timber.connections)": [[45, "compas_timber.connections.ConnectionSolver"]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[46, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs"]], "find_topology() (compas_timber.connections.connectionsolver method)": [[47, "compas_timber.connections.ConnectionSolver.find_topology"]], "frenchridgelapjoint (class in compas_timber.connections)": [[48, "compas_timber.connections.FrenchRidgeLapJoint"]], "tostring() (compas_timber.connections.frenchridgelapjoint method)": [[49, "compas_timber.connections.FrenchRidgeLapJoint.ToString"]], "add_features() (compas_timber.connections.frenchridgelapjoint method)": [[50, "compas_timber.connections.FrenchRidgeLapJoint.add_features"]], "check_geometry() (compas_timber.connections.frenchridgelapjoint method)": [[51, "compas_timber.connections.FrenchRidgeLapJoint.check_geometry"]], "copy() (compas_timber.connections.frenchridgelapjoint method)": [[52, "compas_timber.connections.FrenchRidgeLapJoint.copy"]], "create() (compas_timber.connections.frenchridgelapjoint class method)": [[53, "compas_timber.connections.FrenchRidgeLapJoint.create"]], "from_json() (compas_timber.connections.frenchridgelapjoint class method)": [[54, "compas_timber.connections.FrenchRidgeLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.frenchridgelapjoint class method)": [[55, "compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.frenchridgelapjoint method)": [[56, "compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.frenchridgelapjoint method)": [[57, "compas_timber.connections.FrenchRidgeLapJoint.sha256"]], "to_json() (compas_timber.connections.frenchridgelapjoint method)": [[58, "compas_timber.connections.FrenchRidgeLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.frenchridgelapjoint method)": [[59, "compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.frenchridgelapjoint class method)": [[60, "compas_timber.connections.FrenchRidgeLapJoint.validate_data"]], "joint (class in compas_timber.connections)": [[61, "compas_timber.connections.Joint"]], "tostring() (compas_timber.connections.joint method)": [[62, "compas_timber.connections.Joint.ToString"]], "add_features() (compas_timber.connections.joint method)": [[63, "compas_timber.connections.Joint.add_features"]], "copy() (compas_timber.connections.joint method)": [[64, "compas_timber.connections.Joint.copy"]], "create() (compas_timber.connections.joint class method)": [[65, "compas_timber.connections.Joint.create"]], "from_json() (compas_timber.connections.joint class method)": [[66, "compas_timber.connections.Joint.from_json"]], "from_jsonstring() (compas_timber.connections.joint class method)": [[67, "compas_timber.connections.Joint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[68, "compas_timber.connections.Joint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.joint method)": [[69, "compas_timber.connections.Joint.sha256"]], "to_json() (compas_timber.connections.joint method)": [[70, "compas_timber.connections.Joint.to_json"]], "to_jsonstring() (compas_timber.connections.joint method)": [[71, "compas_timber.connections.Joint.to_jsonstring"]], "validate_data() (compas_timber.connections.joint class method)": [[72, "compas_timber.connections.Joint.validate_data"]], "jointtopology (class in compas_timber.connections)": [[73, "compas_timber.connections.JointTopology"]], "get_name() (compas_timber.connections.jointtopology class method)": [[74, "compas_timber.connections.JointTopology.get_name"]], "lbuttjoint (class in compas_timber.connections)": [[75, "compas_timber.connections.LButtJoint"]], "tostring() (compas_timber.connections.lbuttjoint method)": [[76, "compas_timber.connections.LButtJoint.ToString"]], "add_features() (compas_timber.connections.lbuttjoint method)": [[77, "compas_timber.connections.LButtJoint.add_features"]], "copy() (compas_timber.connections.lbuttjoint method)": [[78, "compas_timber.connections.LButtJoint.copy"]], "create() (compas_timber.connections.lbuttjoint class method)": [[79, "compas_timber.connections.LButtJoint.create"]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[80, "compas_timber.connections.LButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[81, "compas_timber.connections.LButtJoint.from_jsonstring"]], "get_cross_cutting_plane() (compas_timber.connections.lbuttjoint method)": [[82, "compas_timber.connections.LButtJoint.get_cross_cutting_plane"]], "get_main_cutting_plane() (compas_timber.connections.lbuttjoint method)": [[83, "compas_timber.connections.LButtJoint.get_main_cutting_plane"]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[84, "compas_timber.connections.LButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lbuttjoint method)": [[85, "compas_timber.connections.LButtJoint.sha256"]], "to_json() (compas_timber.connections.lbuttjoint method)": [[86, "compas_timber.connections.LButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lbuttjoint method)": [[87, "compas_timber.connections.LButtJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lbuttjoint class method)": [[88, "compas_timber.connections.LButtJoint.validate_data"]], "lhalflapjoint (class in compas_timber.connections)": [[89, "compas_timber.connections.LHalfLapJoint"]], "tostring() (compas_timber.connections.lhalflapjoint method)": [[90, "compas_timber.connections.LHalfLapJoint.ToString"]], "add_features() (compas_timber.connections.lhalflapjoint method)": [[91, "compas_timber.connections.LHalfLapJoint.add_features"]], "copy() (compas_timber.connections.lhalflapjoint method)": [[92, "compas_timber.connections.LHalfLapJoint.copy"]], "create() (compas_timber.connections.lhalflapjoint class method)": [[93, "compas_timber.connections.LHalfLapJoint.create"]], "from_json() (compas_timber.connections.lhalflapjoint class method)": [[94, "compas_timber.connections.LHalfLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lhalflapjoint class method)": [[95, "compas_timber.connections.LHalfLapJoint.from_jsonstring"]], "get_cross_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[96, "compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame"]], "get_main_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[97, "compas_timber.connections.LHalfLapJoint.get_main_cutting_frame"]], "restore_beams_from_keys() (compas_timber.connections.lhalflapjoint method)": [[98, "compas_timber.connections.LHalfLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lhalflapjoint method)": [[99, "compas_timber.connections.LHalfLapJoint.sha256"]], "to_json() (compas_timber.connections.lhalflapjoint method)": [[100, "compas_timber.connections.LHalfLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lhalflapjoint method)": [[101, "compas_timber.connections.LHalfLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lhalflapjoint class method)": [[102, "compas_timber.connections.LHalfLapJoint.validate_data"]], "lmiterjoint (class in compas_timber.connections)": [[103, "compas_timber.connections.LMiterJoint"]], "tostring() (compas_timber.connections.lmiterjoint method)": [[104, "compas_timber.connections.LMiterJoint.ToString"]], "add_features() (compas_timber.connections.lmiterjoint method)": [[105, "compas_timber.connections.LMiterJoint.add_features"]], "copy() (compas_timber.connections.lmiterjoint method)": [[106, "compas_timber.connections.LMiterJoint.copy"]], "create() (compas_timber.connections.lmiterjoint class method)": [[107, "compas_timber.connections.LMiterJoint.create"]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[108, "compas_timber.connections.LMiterJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[109, "compas_timber.connections.LMiterJoint.from_jsonstring"]], "get_cutting_planes() (compas_timber.connections.lmiterjoint method)": [[110, "compas_timber.connections.LMiterJoint.get_cutting_planes"]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[111, "compas_timber.connections.LMiterJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lmiterjoint method)": [[112, "compas_timber.connections.LMiterJoint.sha256"]], "to_json() (compas_timber.connections.lmiterjoint method)": [[113, "compas_timber.connections.LMiterJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lmiterjoint method)": [[114, "compas_timber.connections.LMiterJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lmiterjoint class method)": [[115, "compas_timber.connections.LMiterJoint.validate_data"]], "lapjoint (class in compas_timber.connections)": [[116, "compas_timber.connections.LapJoint"]], "tostring() (compas_timber.connections.lapjoint method)": [[117, "compas_timber.connections.LapJoint.ToString"]], "add_features() (compas_timber.connections.lapjoint method)": [[118, "compas_timber.connections.LapJoint.add_features"]], "copy() (compas_timber.connections.lapjoint method)": [[119, "compas_timber.connections.LapJoint.copy"]], "create() (compas_timber.connections.lapjoint class method)": [[120, "compas_timber.connections.LapJoint.create"]], "from_json() (compas_timber.connections.lapjoint class method)": [[121, "compas_timber.connections.LapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lapjoint class method)": [[122, "compas_timber.connections.LapJoint.from_jsonstring"]], "get_cross_cutting_frame() (compas_timber.connections.lapjoint method)": [[123, "compas_timber.connections.LapJoint.get_cross_cutting_frame"]], "get_main_cutting_frame() (compas_timber.connections.lapjoint method)": [[124, "compas_timber.connections.LapJoint.get_main_cutting_frame"]], "restore_beams_from_keys() (compas_timber.connections.lapjoint method)": [[125, "compas_timber.connections.LapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lapjoint method)": [[126, "compas_timber.connections.LapJoint.sha256"]], "to_json() (compas_timber.connections.lapjoint method)": [[127, "compas_timber.connections.LapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lapjoint method)": [[128, "compas_timber.connections.LapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lapjoint class method)": [[129, "compas_timber.connections.LapJoint.validate_data"]], "tbuttjoint (class in compas_timber.connections)": [[130, "compas_timber.connections.TButtJoint"]], "tostring() (compas_timber.connections.tbuttjoint method)": [[131, "compas_timber.connections.TButtJoint.ToString"]], "add_features() (compas_timber.connections.tbuttjoint method)": [[132, "compas_timber.connections.TButtJoint.add_features"]], "copy() (compas_timber.connections.tbuttjoint method)": [[133, "compas_timber.connections.TButtJoint.copy"]], "create() (compas_timber.connections.tbuttjoint class method)": [[134, "compas_timber.connections.TButtJoint.create"]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[135, "compas_timber.connections.TButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[136, "compas_timber.connections.TButtJoint.from_jsonstring"]], "get_cutting_plane() (compas_timber.connections.tbuttjoint method)": [[137, "compas_timber.connections.TButtJoint.get_cutting_plane"]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[138, "compas_timber.connections.TButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.tbuttjoint method)": [[139, "compas_timber.connections.TButtJoint.sha256"]], "to_json() (compas_timber.connections.tbuttjoint method)": [[140, "compas_timber.connections.TButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.tbuttjoint method)": [[141, "compas_timber.connections.TButtJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.tbuttjoint class method)": [[142, "compas_timber.connections.TButtJoint.validate_data"]], "thalflapjoint (class in compas_timber.connections)": [[143, "compas_timber.connections.THalfLapJoint"]], "tostring() (compas_timber.connections.thalflapjoint method)": [[144, "compas_timber.connections.THalfLapJoint.ToString"]], "add_features() (compas_timber.connections.thalflapjoint method)": [[145, "compas_timber.connections.THalfLapJoint.add_features"]], "copy() (compas_timber.connections.thalflapjoint method)": [[146, "compas_timber.connections.THalfLapJoint.copy"]], "create() (compas_timber.connections.thalflapjoint class method)": [[147, "compas_timber.connections.THalfLapJoint.create"]], "from_json() (compas_timber.connections.thalflapjoint class method)": [[148, "compas_timber.connections.THalfLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.thalflapjoint class method)": [[149, "compas_timber.connections.THalfLapJoint.from_jsonstring"]], "get_cross_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[150, "compas_timber.connections.THalfLapJoint.get_cross_cutting_frame"]], "get_main_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[151, "compas_timber.connections.THalfLapJoint.get_main_cutting_frame"]], "restore_beams_from_keys() (compas_timber.connections.thalflapjoint method)": [[152, "compas_timber.connections.THalfLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.thalflapjoint method)": [[153, "compas_timber.connections.THalfLapJoint.sha256"]], "to_json() (compas_timber.connections.thalflapjoint method)": [[154, "compas_timber.connections.THalfLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.thalflapjoint method)": [[155, "compas_timber.connections.THalfLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.thalflapjoint class method)": [[156, "compas_timber.connections.THalfLapJoint.validate_data"]], "xhalflapjoint (class in compas_timber.connections)": [[157, "compas_timber.connections.XHalfLapJoint"]], "tostring() (compas_timber.connections.xhalflapjoint method)": [[158, "compas_timber.connections.XHalfLapJoint.ToString"]], "add_features() (compas_timber.connections.xhalflapjoint method)": [[159, "compas_timber.connections.XHalfLapJoint.add_features"]], "copy() (compas_timber.connections.xhalflapjoint method)": [[160, "compas_timber.connections.XHalfLapJoint.copy"]], "create() (compas_timber.connections.xhalflapjoint class method)": [[161, "compas_timber.connections.XHalfLapJoint.create"]], "from_json() (compas_timber.connections.xhalflapjoint class method)": [[162, "compas_timber.connections.XHalfLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.xhalflapjoint class method)": [[163, "compas_timber.connections.XHalfLapJoint.from_jsonstring"]], "get_cross_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[164, "compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame"]], "get_main_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[165, "compas_timber.connections.XHalfLapJoint.get_main_cutting_frame"]], "restore_beams_from_keys() (compas_timber.connections.xhalflapjoint method)": [[166, "compas_timber.connections.XHalfLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.xhalflapjoint method)": [[167, "compas_timber.connections.XHalfLapJoint.sha256"]], "to_json() (compas_timber.connections.xhalflapjoint method)": [[168, "compas_timber.connections.XHalfLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.xhalflapjoint method)": [[169, "compas_timber.connections.XHalfLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.xhalflapjoint class method)": [[170, "compas_timber.connections.XHalfLapJoint.validate_data"]], "beam_side_incidence() (in module compas_timber.connections)": [[171, "compas_timber.connections.beam_side_incidence"]], "find_neighboring_beams() (in module compas_timber.connections)": [[172, "compas_timber.connections.find_neighboring_beams"]], "beamgeometry (class in compas_timber.consumers)": [[173, "compas_timber.consumers.BeamGeometry"]], "brepgeometryconsumer (class in compas_timber.consumers)": [[174, "compas_timber.consumers.BrepGeometryConsumer"]], "cutfeature (class in compas_timber.consumers)": [[175, "compas_timber.consumers.CutFeature"]], "tostring() (compas_timber.consumers.cutfeature method)": [[176, "compas_timber.consumers.CutFeature.ToString"]], "copy() (compas_timber.consumers.cutfeature method)": [[177, "compas_timber.consumers.CutFeature.copy"]], "from_json() (compas_timber.consumers.cutfeature class method)": [[178, "compas_timber.consumers.CutFeature.from_json"]], "from_jsonstring() (compas_timber.consumers.cutfeature class method)": [[179, "compas_timber.consumers.CutFeature.from_jsonstring"]], "sha256() (compas_timber.consumers.cutfeature method)": [[180, "compas_timber.consumers.CutFeature.sha256"]], "to_json() (compas_timber.consumers.cutfeature method)": [[181, "compas_timber.consumers.CutFeature.to_json"]], "to_jsonstring() (compas_timber.consumers.cutfeature method)": [[182, "compas_timber.consumers.CutFeature.to_jsonstring"]], "validate_data() (compas_timber.consumers.cutfeature class method)": [[183, "compas_timber.consumers.CutFeature.validate_data"]], "cutfeaturegeometry (class in compas_timber.consumers)": [[184, "compas_timber.consumers.CutFeatureGeometry"]], "apply() (compas_timber.consumers.cutfeaturegeometry method)": [[185, "compas_timber.consumers.CutFeatureGeometry.apply"]], "drillfeature (class in compas_timber.consumers)": [[186, "compas_timber.consumers.DrillFeature"]], "tostring() (compas_timber.consumers.drillfeature method)": [[187, "compas_timber.consumers.DrillFeature.ToString"]], "copy() (compas_timber.consumers.drillfeature method)": [[188, "compas_timber.consumers.DrillFeature.copy"]], "from_json() (compas_timber.consumers.drillfeature class method)": [[189, "compas_timber.consumers.DrillFeature.from_json"]], "from_jsonstring() (compas_timber.consumers.drillfeature class method)": [[190, "compas_timber.consumers.DrillFeature.from_jsonstring"]], "sha256() (compas_timber.consumers.drillfeature method)": [[191, "compas_timber.consumers.DrillFeature.sha256"]], "to_json() (compas_timber.consumers.drillfeature method)": [[192, "compas_timber.consumers.DrillFeature.to_json"]], "to_jsonstring() (compas_timber.consumers.drillfeature method)": [[193, "compas_timber.consumers.DrillFeature.to_jsonstring"]], "validate_data() (compas_timber.consumers.drillfeature class method)": [[194, "compas_timber.consumers.DrillFeature.validate_data"]], "drillfeaturegeometry (class in compas_timber.consumers)": [[195, "compas_timber.consumers.DrillFeatureGeometry"]], "apply() (compas_timber.consumers.drillfeaturegeometry method)": [[196, "compas_timber.consumers.DrillFeatureGeometry.apply"]], "featureapplicationerror": [[197, "compas_timber.consumers.FeatureApplicationError"]], "featureapplicator (class in compas_timber.consumers)": [[198, "compas_timber.consumers.FeatureApplicator"]], "apply() (compas_timber.consumers.featureapplicator method)": [[199, "compas_timber.consumers.FeatureApplicator.apply"]], "millvolume (class in compas_timber.consumers)": [[200, "compas_timber.consumers.MillVolume"]], "tostring() (compas_timber.consumers.millvolume method)": [[201, "compas_timber.consumers.MillVolume.ToString"]], "copy() (compas_timber.consumers.millvolume method)": [[202, "compas_timber.consumers.MillVolume.copy"]], "from_json() (compas_timber.consumers.millvolume class method)": [[203, "compas_timber.consumers.MillVolume.from_json"]], "from_jsonstring() (compas_timber.consumers.millvolume class method)": [[204, "compas_timber.consumers.MillVolume.from_jsonstring"]], "sha256() (compas_timber.consumers.millvolume method)": [[205, "compas_timber.consumers.MillVolume.sha256"]], "to_json() (compas_timber.consumers.millvolume method)": [[206, "compas_timber.consumers.MillVolume.to_json"]], "to_jsonstring() (compas_timber.consumers.millvolume method)": [[207, "compas_timber.consumers.MillVolume.to_jsonstring"]], "validate_data() (compas_timber.consumers.millvolume class method)": [[208, "compas_timber.consumers.MillVolume.validate_data"]], "millvolumegeometry (class in compas_timber.consumers)": [[209, "compas_timber.consumers.MillVolumeGeometry"]], "apply() (compas_timber.consumers.millvolumegeometry method)": [[210, "compas_timber.consumers.MillVolumeGeometry.apply"]], "btlx (class in compas_timber.fabrication)": [[211, "compas_timber.fabrication.BTLx"]], "btlx_string() (compas_timber.fabrication.btlx method)": [[212, "compas_timber.fabrication.BTLx.btlx_string"]], "process_assembly() (compas_timber.fabrication.btlx method)": [[213, "compas_timber.fabrication.BTLx.process_assembly"]], "register_joint() (compas_timber.fabrication.btlx class method)": [[214, "compas_timber.fabrication.BTLx.register_joint"]], "btlxfrenchridgelap (class in compas_timber.fabrication)": [[215, "compas_timber.fabrication.BTLxFrenchRidgeLap"]], "create_process() (compas_timber.fabrication.btlxfrenchridgelap class method)": [[216, "compas_timber.fabrication.BTLxFrenchRidgeLap.create_process"]], "get_params() (compas_timber.fabrication.btlxfrenchridgelap method)": [[217, "compas_timber.fabrication.BTLxFrenchRidgeLap.get_params"]], "process_joints() (compas_timber.fabrication.btlxfrenchridgelap method)": [[218, "compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints"]], "btlxjackcut (class in compas_timber.fabrication)": [[219, "compas_timber.fabrication.BTLxJackCut"]], "create_process() (compas_timber.fabrication.btlxjackcut class method)": [[220, "compas_timber.fabrication.BTLxJackCut.create_process"]], "generate_process() (compas_timber.fabrication.btlxjackcut method)": [[221, "compas_timber.fabrication.BTLxJackCut.generate_process"]], "btlxprocess (class in compas_timber.fabrication)": [[222, "compas_timber.fabrication.BTLxProcess"]], "frenchridgefactory (class in compas_timber.fabrication)": [[223, "compas_timber.fabrication.FrenchRidgeFactory"]], "apply_processings() (compas_timber.fabrication.frenchridgefactory class method)": [[224, "compas_timber.fabrication.FrenchRidgeFactory.apply_processings"]], "lbuttfactory (class in compas_timber.fabrication)": [[225, "compas_timber.fabrication.LButtFactory"]], "apply_processings() (compas_timber.fabrication.lbuttfactory class method)": [[226, "compas_timber.fabrication.LButtFactory.apply_processings"]], "lmiterfactory (class in compas_timber.fabrication)": [[227, "compas_timber.fabrication.LMiterFactory"]], "apply_processings() (compas_timber.fabrication.lmiterfactory class method)": [[228, "compas_timber.fabrication.LMiterFactory.apply_processings"]], "tbuttfactory (class in compas_timber.fabrication)": [[229, "compas_timber.fabrication.TButtFactory"]], "apply_processings() (compas_timber.fabrication.tbuttfactory class method)": [[230, "compas_timber.fabrication.TButtFactory.apply_processings"]], "categoryrule (class in compas_timber.ghpython)": [[231, "compas_timber.ghpython.CategoryRule"]], "tostring() (compas_timber.ghpython.categoryrule method)": [[232, "compas_timber.ghpython.CategoryRule.ToString"]], "comply() (compas_timber.ghpython.categoryrule method)": [[233, "compas_timber.ghpython.CategoryRule.comply"]], "reorder() (compas_timber.ghpython.categoryrule method)": [[234, "compas_timber.ghpython.CategoryRule.reorder"]], "debuginfomation (class in compas_timber.ghpython)": [[235, "compas_timber.ghpython.DebugInfomation"]], "tostring() (compas_timber.ghpython.debuginfomation method)": [[236, "compas_timber.ghpython.DebugInfomation.ToString"]], "add_feature_error() (compas_timber.ghpython.debuginfomation method)": [[237, "compas_timber.ghpython.DebugInfomation.add_feature_error"]], "add_joint_error() (compas_timber.ghpython.debuginfomation method)": [[238, "compas_timber.ghpython.DebugInfomation.add_joint_error"]], "directrule (class in compas_timber.ghpython)": [[239, "compas_timber.ghpython.DirectRule"]], "tostring() (compas_timber.ghpython.directrule method)": [[240, "compas_timber.ghpython.DirectRule.ToString"]], "comply() (compas_timber.ghpython.directrule method)": [[241, "compas_timber.ghpython.DirectRule.comply"]], "featuredefinition (class in compas_timber.ghpython)": [[242, "compas_timber.ghpython.FeatureDefinition"]], "tostring() (compas_timber.ghpython.featuredefinition method)": [[243, "compas_timber.ghpython.FeatureDefinition.ToString"]], "jointdefinition (class in compas_timber.ghpython)": [[244, "compas_timber.ghpython.JointDefinition"]], "tostring() (compas_timber.ghpython.jointdefinition method)": [[245, "compas_timber.ghpython.JointDefinition.ToString"]], "is_identical() (compas_timber.ghpython.jointdefinition method)": [[246, "compas_timber.ghpython.JointDefinition.is_identical"]], "match() (compas_timber.ghpython.jointdefinition method)": [[247, "compas_timber.ghpython.JointDefinition.match"]], "jointoptions (class in compas_timber.ghpython)": [[248, "compas_timber.ghpython.JointOptions"]], "tostring() (compas_timber.ghpython.jointoptions method)": [[249, "compas_timber.ghpython.JointOptions.ToString"]], "is_identical() (compas_timber.ghpython.jointoptions method)": [[250, "compas_timber.ghpython.JointOptions.is_identical"]], "topologyrule (class in compas_timber.ghpython)": [[251, "compas_timber.ghpython.TopologyRule"]], "tostring() (compas_timber.ghpython.topologyrule method)": [[252, "compas_timber.ghpython.TopologyRule.ToString"]], "comply() (compas_timber.ghpython.topologyrule method)": [[253, "compas_timber.ghpython.TopologyRule.comply"]], "beam (class in compas_timber.parts)": [[254, "compas_timber.parts.Beam"]], "tostring() (compas_timber.parts.beam method)": [[255, "compas_timber.parts.Beam.ToString"]], "add_blank_extension() (compas_timber.parts.beam method)": [[256, "compas_timber.parts.Beam.add_blank_extension"]], "add_feature() (compas_timber.parts.beam method)": [[257, "compas_timber.parts.Beam.add_feature"]], "add_features() (compas_timber.parts.beam method)": [[258, "compas_timber.parts.Beam.add_features"]], "align_z() (compas_timber.parts.beam method)": [[259, "compas_timber.parts.Beam.align_z"]], "clear_features() (compas_timber.parts.beam method)": [[260, "compas_timber.parts.Beam.clear_features"]], "compute_aabb() (compas_timber.parts.beam method)": [[261, "compas_timber.parts.Beam.compute_aabb"]], "compute_obb() (compas_timber.parts.beam method)": [[262, "compas_timber.parts.Beam.compute_obb"]], "copy() (compas_timber.parts.beam method)": [[263, "compas_timber.parts.Beam.copy"]], "endpoint_closest_to_point() (compas_timber.parts.beam method)": [[264, "compas_timber.parts.Beam.endpoint_closest_to_point"]], "extension_to_plane() (compas_timber.parts.beam method)": [[265, "compas_timber.parts.Beam.extension_to_plane"]], "from_centerline() (compas_timber.parts.beam class method)": [[266, "compas_timber.parts.Beam.from_centerline"]], "from_endpoints() (compas_timber.parts.beam class method)": [[267, "compas_timber.parts.Beam.from_endpoints"]], "from_json() (compas_timber.parts.beam class method)": [[268, "compas_timber.parts.Beam.from_json"]], "from_jsonstring() (compas_timber.parts.beam class method)": [[269, "compas_timber.parts.Beam.from_jsonstring"]], "get_geometry() (compas_timber.parts.beam method)": [[270, "compas_timber.parts.Beam.get_geometry"]], "remove_blank_extension() (compas_timber.parts.beam method)": [[271, "compas_timber.parts.Beam.remove_blank_extension"]], "remove_features() (compas_timber.parts.beam method)": [[272, "compas_timber.parts.Beam.remove_features"]], "rotate() (compas_timber.parts.beam method)": [[273, "compas_timber.parts.Beam.rotate"]], "rotated() (compas_timber.parts.beam method)": [[274, "compas_timber.parts.Beam.rotated"]], "scale() (compas_timber.parts.beam method)": [[275, "compas_timber.parts.Beam.scale"]], "scaled() (compas_timber.parts.beam method)": [[276, "compas_timber.parts.Beam.scaled"]], "sha256() (compas_timber.parts.beam method)": [[277, "compas_timber.parts.Beam.sha256"]], "to_json() (compas_timber.parts.beam method)": [[278, "compas_timber.parts.Beam.to_json"]], "to_jsonstring() (compas_timber.parts.beam method)": [[279, "compas_timber.parts.Beam.to_jsonstring"]], "transform() (compas_timber.parts.beam method)": [[280, "compas_timber.parts.Beam.transform"]], "transform_numpy() (compas_timber.parts.beam method)": [[281, "compas_timber.parts.Beam.transform_numpy"]], "transformed() (compas_timber.parts.beam method)": [[282, "compas_timber.parts.Beam.transformed"]], "transformed_numpy() (compas_timber.parts.beam method)": [[283, "compas_timber.parts.Beam.transformed_numpy"]], "translate() (compas_timber.parts.beam method)": [[284, "compas_timber.parts.Beam.translate"]], "translated() (compas_timber.parts.beam method)": [[285, "compas_timber.parts.Beam.translated"]], "validate_data() (compas_timber.parts.beam class method)": [[286, "compas_timber.parts.Beam.validate_data"]], "actor (class in compas_timber.planning)": [[287, "compas_timber.planning.Actor"]], "get_name() (compas_timber.planning.actor class method)": [[288, "compas_timber.planning.Actor.get_name"]], "buildingplan (class in compas_timber.planning)": [[289, "compas_timber.planning.BuildingPlan"]], "tostring() (compas_timber.planning.buildingplan method)": [[290, "compas_timber.planning.BuildingPlan.ToString"]], "add_step() (compas_timber.planning.buildingplan method)": [[291, "compas_timber.planning.BuildingPlan.add_step"]], "copy() (compas_timber.planning.buildingplan method)": [[292, "compas_timber.planning.BuildingPlan.copy"]], "from_json() (compas_timber.planning.buildingplan class method)": [[293, "compas_timber.planning.BuildingPlan.from_json"]], "from_jsonstring() (compas_timber.planning.buildingplan class method)": [[294, "compas_timber.planning.BuildingPlan.from_jsonstring"]], "sha256() (compas_timber.planning.buildingplan method)": [[295, "compas_timber.planning.BuildingPlan.sha256"]], "to_json() (compas_timber.planning.buildingplan method)": [[296, "compas_timber.planning.BuildingPlan.to_json"]], "to_jsonstring() (compas_timber.planning.buildingplan method)": [[297, "compas_timber.planning.BuildingPlan.to_jsonstring"]], "validate_data() (compas_timber.planning.buildingplan class method)": [[298, "compas_timber.planning.BuildingPlan.validate_data"]], "simplesequencegenerator (class in compas_timber.planning)": [[299, "compas_timber.planning.SimpleSequenceGenerator"]], "step (class in compas_timber.planning)": [[300, "compas_timber.planning.Step"]], "tostring() (compas_timber.planning.step method)": [[301, "compas_timber.planning.Step.ToString"]], "copy() (compas_timber.planning.step method)": [[302, "compas_timber.planning.Step.copy"]], "from_json() (compas_timber.planning.step class method)": [[303, "compas_timber.planning.Step.from_json"]], "from_jsonstring() (compas_timber.planning.step class method)": [[304, "compas_timber.planning.Step.from_jsonstring"]], "sha256() (compas_timber.planning.step method)": [[305, "compas_timber.planning.Step.sha256"]], "to_json() (compas_timber.planning.step method)": [[306, "compas_timber.planning.Step.to_json"]], "to_jsonstring() (compas_timber.planning.step method)": [[307, "compas_timber.planning.Step.to_jsonstring"]], "transform() (compas_timber.planning.step method)": [[308, "compas_timber.planning.Step.transform"]], "validate_data() (compas_timber.planning.step class method)": [[309, "compas_timber.planning.Step.validate_data"]], "find_neighboring_beams() (in module compas_timber.rhino)": [[310, "compas_timber.rhino.find_neighboring_beams"]]}})