Search.setIndex({"docnames": ["api", "api/compas_timber", "api/compas_timber.assembly", "api/compas_timber.connections", "api/compas_timber.parts", "api/compas_timber.rhino", "api/generated/compas_timber.assembly.TimberAssembly", "api/generated/compas_timber.assembly.TimberAssembly.ToString", "api/generated/compas_timber.assembly.TimberAssembly.add_beam", "api/generated/compas_timber.assembly.TimberAssembly.add_connection", "api/generated/compas_timber.assembly.TimberAssembly.add_joint", "api/generated/compas_timber.assembly.TimberAssembly.add_part", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined", "api/generated/compas_timber.assembly.TimberAssembly.connections", "api/generated/compas_timber.assembly.TimberAssembly.contains", "api/generated/compas_timber.assembly.TimberAssembly.copy", "api/generated/compas_timber.assembly.TimberAssembly.find", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key", "api/generated/compas_timber.assembly.TimberAssembly.from_data", "api/generated/compas_timber.assembly.TimberAssembly.parts", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint", "api/generated/compas_timber.assembly.TimberAssembly.sha256", "api/generated/compas_timber.assembly.TimberAssembly.to_data", "api/generated/compas_timber.assembly.TimberAssembly.validate_data", "api/generated/compas_timber.connections.BeamJoinningError", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.from_data", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_data", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.from_data", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.to_data", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.from_data", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_data", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.from_data", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.to_data", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.XHalfLapJoint", "api/generated/compas_timber.connections.XHalfLapJoint.ToString", "api/generated/compas_timber.connections.XHalfLapJoint.add_features", "api/generated/compas_timber.connections.XHalfLapJoint.copy", "api/generated/compas_timber.connections.XHalfLapJoint.create", "api/generated/compas_timber.connections.XHalfLapJoint.from_data", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.XHalfLapJoint.sha256", "api/generated/compas_timber.connections.XHalfLapJoint.to_data", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data", "api/generated/compas_timber.connections.find_neighboring_beams", "api/generated/compas_timber.parts.Beam", "api/generated/compas_timber.parts.Beam.ToString", "api/generated/compas_timber.parts.Beam.add_blank_extension", "api/generated/compas_timber.parts.Beam.add_feature", "api/generated/compas_timber.parts.Beam.add_features", "api/generated/compas_timber.parts.Beam.align_z", "api/generated/compas_timber.parts.Beam.clear_features", "api/generated/compas_timber.parts.Beam.copy", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point", "api/generated/compas_timber.parts.Beam.extension_to_plane", "api/generated/compas_timber.parts.Beam.from_centerline", "api/generated/compas_timber.parts.Beam.from_data", "api/generated/compas_timber.parts.Beam.from_endpoints", "api/generated/compas_timber.parts.Beam.get_geometry", "api/generated/compas_timber.parts.Beam.remove_blank_extension", "api/generated/compas_timber.parts.Beam.remove_features", "api/generated/compas_timber.parts.Beam.sha256", "api/generated/compas_timber.parts.Beam.to_data", "api/generated/compas_timber.parts.Beam.validate_data", "api/generated/compas_timber.rhino.find_neighboring_beams", "citing", "examples", "examples/create_joint", "index", "installation", "installation/installation_dev", "installation/installation_manual", "installation/installation_quick", "license", "tutorials", "tutorials/grasshopper/assembly", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beam", "tutorials/grasshopper/examples", "tutorials/grasshopper/features", "tutorials/grasshopper/joints", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "filenames": ["api.rst", "api/compas_timber.rst", "api/compas_timber.assembly.rst", "api/compas_timber.connections.rst", "api/compas_timber.parts.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.assembly.TimberAssembly.rst", "api/generated/compas_timber.assembly.TimberAssembly.ToString.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_beam.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined.rst", "api/generated/compas_timber.assembly.TimberAssembly.connections.rst", "api/generated/compas_timber.assembly.TimberAssembly.contains.rst", "api/generated/compas_timber.assembly.TimberAssembly.copy.rst", "api/generated/compas_timber.assembly.TimberAssembly.find.rst", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_data.rst", "api/generated/compas_timber.assembly.TimberAssembly.parts.rst", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.sha256.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_data.rst", "api/generated/compas_timber.assembly.TimberAssembly.validate_data.rst", "api/generated/compas_timber.connections.BeamJoinningError.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.from_data.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_data.rst", "api/generated/compas_timber.connections.Joint.validate_data.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.from_data.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.to_data.rst", "api/generated/compas_timber.connections.LButtJoint.validate_data.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.from_data.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_data.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_data.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.from_data.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.to_data.rst", "api/generated/compas_timber.connections.TButtJoint.validate_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.rst", "api/generated/compas_timber.connections.XHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.XHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.XHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.XHalfLapJoint.create.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.XHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.find_neighboring_beams.rst", "api/generated/compas_timber.parts.Beam.rst", "api/generated/compas_timber.parts.Beam.ToString.rst", "api/generated/compas_timber.parts.Beam.add_blank_extension.rst", "api/generated/compas_timber.parts.Beam.add_feature.rst", "api/generated/compas_timber.parts.Beam.add_features.rst", "api/generated/compas_timber.parts.Beam.align_z.rst", "api/generated/compas_timber.parts.Beam.clear_features.rst", "api/generated/compas_timber.parts.Beam.copy.rst", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.parts.Beam.extension_to_plane.rst", "api/generated/compas_timber.parts.Beam.from_centerline.rst", "api/generated/compas_timber.parts.Beam.from_data.rst", "api/generated/compas_timber.parts.Beam.from_endpoints.rst", "api/generated/compas_timber.parts.Beam.get_geometry.rst", "api/generated/compas_timber.parts.Beam.remove_blank_extension.rst", "api/generated/compas_timber.parts.Beam.remove_features.rst", "api/generated/compas_timber.parts.Beam.sha256.rst", "api/generated/compas_timber.parts.Beam.to_data.rst", "api/generated/compas_timber.parts.Beam.validate_data.rst", "api/generated/compas_timber.rhino.find_neighboring_beams.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "installation/installation_dev.rst", "installation/installation_manual.rst", "installation/installation_quick.rst", "license.rst", "tutorials.rst", "tutorials/grasshopper/assembly.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beam.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joints.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "titles": ["API Reference", "compas_timber", "assembly", "connections", "parts", "rhino", "TimberAssembly", "TimberAssembly.ToString", "TimberAssembly.add_beam", "TimberAssembly.add_connection", "TimberAssembly.add_joint", "TimberAssembly.add_part", "TimberAssembly.are_parts_joined", "TimberAssembly.connections", "TimberAssembly.contains", "TimberAssembly.copy", "TimberAssembly.find", "TimberAssembly.find_by_key", "TimberAssembly.from_data", "TimberAssembly.parts", "TimberAssembly.remove_joint", "TimberAssembly.sha256", "TimberAssembly.to_data", "TimberAssembly.validate_data", "BeamJoinningError", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "Joint", "Joint.ToString", "Joint.add_features", "Joint.copy", "Joint.create", "Joint.from_data", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_data", "Joint.validate_data", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_features", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.from_data", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.to_data", "LButtJoint.validate_data", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_features", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.from_data", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_data", "LMiterJoint.validate_data", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_features", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.from_data", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.to_data", "TButtJoint.validate_data", "XHalfLapJoint", "XHalfLapJoint.ToString", "XHalfLapJoint.add_features", "XHalfLapJoint.copy", "XHalfLapJoint.create", "XHalfLapJoint.from_data", "XHalfLapJoint.restore_beams_from_keys", "XHalfLapJoint.sha256", "XHalfLapJoint.to_data", "XHalfLapJoint.validate_data", "find_neighboring_beams", "Beam", "Beam.ToString", "Beam.add_blank_extension", "Beam.add_feature", "Beam.add_features", "Beam.align_z", "Beam.clear_features", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_data", "Beam.from_endpoints", "Beam.get_geometry", "Beam.remove_blank_extension", "Beam.remove_features", "Beam.sha256", "Beam.to_data", "Beam.validate_data", "find_neighboring_beams", "Citing", "Examples", "Create Joint", "COMPAS TIMBER", "Installation", "Manual installation for developers", "Manual installation", "Quick installation", "License", "Grasshopper plugin", "Assembly", "Attributes", "Beam", "Examples", "Features", "Joints", "Show", "Utils", "Workflow"], "terms": {"compas_timb": [0, 6, 24, 25, 28, 32, 34, 38, 40, 44, 50, 54, 60, 64, 70, 74, 80, 81, 100, 101, 104, 107, 108], "assembli": [1, 6, 8, 9, 10, 11, 14, 16, 17, 19, 20, 32, 34, 40, 44, 46, 50, 54, 56, 60, 64, 66, 74, 76, 103, 104, 110, 116, 117, 119], "part": [1, 6, 9, 10, 11, 12, 13, 16, 17, 34, 81, 84, 94, 100, 104, 113, 115, 117], "connect": [1, 7, 9, 24, 25, 28, 29, 32, 34, 38, 40, 41, 44, 50, 51, 54, 60, 61, 64, 70, 71, 74, 80, 82, 104, 109, 111, 116], "rhino": [1, 7, 29, 41, 51, 61, 71, 80, 82, 100, 102, 104, 106, 108, 112, 113, 118], "thi": [2, 6, 7, 8, 14, 15, 16, 18, 20, 23, 28, 29, 30, 31, 32, 33, 34, 37, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 69, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 88, 90, 92, 95, 99, 100, 102, 104, 106, 107, 108, 109, 112, 113, 117, 119], "place": [2, 7, 29, 41, 51, 61, 71, 82], "tool": [2, 3, 25, 104, 110, 113, 117, 118], "plan": 2, "fabric": [2, 101, 104], "process": [2, 104, 110, 119], "e": [2, 27, 34, 102, 106, 112, 116, 117, 118], "g": [2, 27, 34, 102, 106, 112], "defin": [2, 12, 30, 72, 91, 112, 113, 116, 118, 119], "grip": 2, "plane": [2, 50, 62, 90, 113, 115, 118], "insert": 2, "path": [2, 106], "sequenc": [2, 104], "etc": [2, 6, 81, 102, 104, 113], "ar": [3, 7, 9, 16, 26, 27, 29, 32, 34, 41, 44, 51, 54, 61, 64, 71, 74, 80, 82, 102, 105, 111, 112, 115, 116, 117, 118, 119], "collect": [3, 11, 100], "gener": [3, 27, 119], "joint": [3, 6, 10, 12, 20, 25, 38, 40, 42, 44, 50, 52, 54, 60, 62, 64, 70, 72, 74, 83, 95, 102, 104, 110, 111, 113, 117, 119], "geometri": [3, 81, 94, 100, 104, 110, 111, 113, 115, 117, 118, 119], "The": [4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 28, 31, 32, 33, 36, 37, 40, 43, 44, 45, 48, 49, 50, 53, 54, 55, 58, 59, 60, 63, 64, 65, 68, 69, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 109, 110, 112, 113, 115, 116, 118, 119], "modul": [4, 5, 104], "element": [4, 80, 89], "describ": [4, 22, 36, 48, 58, 68, 78, 98], "simpl": [4, 104, 110], "re": 4, "usabl": 4, "beam": [4, 6, 8, 10, 24, 25, 26, 27, 28, 30, 32, 34, 40, 42, 44, 46, 50, 52, 54, 56, 60, 62, 64, 66, 72, 74, 76, 80, 100, 103, 104, 110, 111, 112, 115, 116, 117, 118, 119], "rod": 4, "plate": [4, 10], "contain": [5, 6, 18, 26, 32, 33, 44, 45, 54, 55, 64, 65, 74, 75, 80, 81, 92, 100], "function": [5, 80, 110], "type": [5, 7, 15, 18, 23, 27, 29, 31, 33, 37, 40, 41, 43, 45, 49, 50, 51, 53, 55, 59, 60, 61, 63, 65, 69, 71, 73, 75, 79, 82, 88, 92, 94, 99, 104, 116, 117], "meant": 5, "us": [5, 7, 21, 23, 26, 27, 28, 29, 35, 37, 39, 40, 41, 47, 49, 50, 51, 57, 59, 60, 61, 67, 69, 71, 77, 79, 80, 82, 86, 90, 97, 99, 100, 101, 104, 106, 107, 108, 109, 110, 111, 112, 113, 116, 118], "context": [5, 11], "class": [6, 7, 10, 25, 28, 29, 34, 38, 40, 41, 50, 51, 60, 61, 70, 71, 81, 82, 104], "arg": 6, "kwarg": [6, 9, 11, 81], "sourc": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 34, 35, 36, 38, 40, 41, 42, 43, 46, 47, 48, 50, 51, 52, 53, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 100, 101, 104, 108, 112, 113], "base": [6, 24, 25, 28, 38, 40, 50, 60, 70, 81, 104, 111, 116, 119], "repres": [6, 40, 50, 60, 81, 113], "timber": [6, 81, 101, 106, 107, 108, 110, 113, 116, 119], "attribut": [6, 9, 13, 28, 38, 40, 50, 60, 81, 104, 110, 113], "list": [6, 10, 12, 26, 28, 32, 40, 44, 50, 54, 60, 64, 74, 80, 81, 85, 89, 96, 100, 116, 119], "A": [6, 16, 26, 32, 40, 44, 50, 54, 60, 64, 74, 80, 81, 91, 93, 101, 109, 113], "assign": [6, 11, 16, 116, 118], "part_kei": 6, "int": [6, 8, 9, 10, 11, 13, 17, 39, 83, 95], "kei": [6, 8, 11, 17, 28, 34, 40, 50, 60, 70, 83, 95, 112], "includ": [6, 94, 108, 109], "beam_kei": 6, "joint_kei": [6, 83, 95], "method": [6, 7, 25, 27, 28, 29, 32, 34, 38, 40, 41, 42, 44, 50, 51, 52, 54, 60, 61, 62, 64, 70, 71, 74, 81, 82, 104], "inherit": [6, 28, 40, 50, 60, 70, 81, 104], "convert": [7, 22, 29, 36, 41, 48, 51, 58, 61, 68, 71, 78, 82, 98], "instanc": [7, 10, 18, 29, 32, 33, 40, 41, 44, 45, 50, 51, 54, 55, 60, 61, 64, 65, 71, 74, 75, 82, 92, 102], "string": [7, 29, 39, 40, 41, 50, 51, 60, 61, 71, 82, 112, 113], "exist": [7, 29, 41, 51, 61, 71, 82, 107], "net": [7, 29, 41, 51, 61, 71, 82], "compat": [7, 29, 40, 41, 50, 51, 60, 61, 71, 80, 82], "when": [7, 16, 26, 29, 41, 42, 51, 52, 61, 62, 71, 82, 83, 112, 116], "ironpython": [7, 29, 41, 51, 61, 71, 82, 106], "implicit": [7, 29, 41, 51, 61, 71, 82], "convers": [7, 29, 41, 51, 61, 71, 82], "usual": [7, 29, 41, 51, 61, 71, 81, 82], "take": [7, 29, 41, 51, 61, 71, 82, 119], "cpython": [7, 29, 41, 51, 61, 71, 82], "kick": [7, 29, 41, 51, 61, 71, 82], "its": [7, 13, 16, 17, 22, 29, 36, 41, 48, 51, 58, 61, 68, 71, 78, 82, 91, 98, 104, 106, 108, 112, 113, 116], "default": [7, 11, 15, 29, 31, 41, 43, 51, 53, 61, 63, 71, 73, 82, 88, 91, 93, 104, 111, 113, 116, 118], "print": [7, 29, 41, 51, 61, 71, 82], "self": [7, 29, 41, 51, 61, 71, 82], "gettyp": [7, 29, 41, 51, 61, 71, 82], "fullnam": [7, 29, 41, 51, 61, 71, 82], "similar": [7, 29, 41, 51, 61, 71, 82, 116], "overrid": [7, 29, 41, 51, 61, 71, 82, 119], "object": [7, 10, 14, 15, 18, 20, 22, 23, 25, 26, 29, 31, 32, 33, 34, 36, 37, 38, 41, 43, 44, 45, 48, 49, 51, 53, 54, 55, 58, 59, 61, 63, 64, 65, 68, 69, 71, 73, 74, 75, 78, 79, 80, 82, 88, 92, 98, 99, 104, 111, 112, 113, 117, 118], "fix": [7, 29, 41, 51, 61, 71, 82], "make": [7, 15, 29, 31, 41, 43, 51, 53, 61, 63, 71, 73, 82, 88, 106], "grasshopp": [7, 29, 41, 51, 61, 71, 82, 102, 104, 106, 108, 113], "displai": [7, 29, 41, 51, 61, 71, 82, 112, 117], "proper": [7, 29, 41, 51, 61, 71, 82], "represent": [7, 22, 29, 36, 39, 40, 41, 48, 50, 51, 58, 60, 61, 68, 71, 78, 82, 98], "panel": [7, 29, 41, 51, 61, 71, 82], "other": [7, 10, 29, 41, 51, 61, 71, 82, 101, 109, 116, 119], "output": [7, 27, 29, 41, 51, 61, 71, 82, 111], "add": [8, 9, 10, 11, 30, 42, 52, 62, 72, 83, 84, 85, 106, 107, 110, 111, 118], "paramet": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 26, 27, 31, 32, 33, 35, 37, 39, 40, 43, 44, 45, 47, 49, 50, 53, 54, 55, 57, 59, 60, 63, 64, 65, 67, 69, 73, 74, 75, 77, 79, 80, 81, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 111, 112, 113, 118], "return": [8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 26, 27, 31, 32, 33, 35, 36, 37, 39, 43, 44, 45, 47, 48, 49, 53, 54, 55, 57, 58, 59, 63, 64, 65, 67, 68, 69, 73, 74, 75, 77, 78, 79, 80, 84, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 111, 117], "graph": [8, 10, 11], "identifi": [8, 9, 10, 11, 13, 16, 17, 80], "ad": [8, 32, 44, 54, 64, 74, 84, 85, 100, 106], "b": 9, "between": [9, 13, 50, 112, 116, 119], "two": [9, 24, 27, 28, 32, 40, 44, 50, 54, 64, 74, 89, 113, 116, 119], "from": [9, 18, 20, 21, 27, 33, 35, 45, 47, 55, 57, 65, 67, 75, 77, 91, 92, 93, 95, 96, 97, 102, 104, 106, 108, 109, 110, 112, 113, 115, 116], "dict": [9, 11, 13, 18, 22, 33, 36, 45, 48, 55, 58, 65, 68, 75, 78, 92, 98], "str": [9, 11, 13, 16, 17, 21, 35, 39, 40, 47, 50, 57, 60, 67, 77, 89, 97], "ani": [9, 11, 13, 23, 37, 49, 59, 69, 79, 99, 102, 109, 115, 117], "option": [9, 11, 13, 15, 17, 21, 26, 27, 31, 35, 43, 47, 53, 57, 63, 67, 73, 77, 80, 88, 97, 107, 113, 116, 119], "compil": 9, "name": [9, 11, 107, 112, 116, 117], "argument": 9, "tupl": [9, 13, 27, 50, 81, 90], "node": 9, "rais": [9, 32, 44, 54, 64, 74], "assemblyerror": 9, "If": [9, 13, 21, 27, 35, 47, 57, 67, 77, 84, 96, 97, 100, 101, 107, 113, 116], "an": [10, 11, 15, 18, 22, 23, 24, 26, 31, 32, 33, 36, 37, 40, 43, 44, 45, 48, 49, 50, 53, 54, 55, 58, 59, 60, 63, 64, 65, 68, 69, 73, 74, 75, 78, 79, 81, 88, 92, 94, 98, 99, 101, 102, 104, 107, 109, 110, 111, 112, 113, 116], "dowel": 10, "steel": 10, "involv": 10, "current": [10, 11, 15, 31, 43, 53, 63, 73, 88, 104], "none": [11, 15, 16, 17, 26, 27, 28, 31, 40, 43, 50, 53, 60, 63, 70, 73, 80, 83, 84, 87, 88, 91, 93, 96, 100, 113], "note": [11, 80, 101, 117], "i": [11, 12, 13, 16, 23, 26, 27, 28, 32, 34, 37, 40, 42, 44, 49, 50, 52, 54, 59, 60, 62, 64, 69, 74, 79, 80, 81, 83, 84, 89, 90, 99, 101, 104, 106, 109, 110, 111, 112, 113, 115, 116, 117, 118], "uniqu": [11, 16], "onli": [11, 34, 84, 112], "nest": 11, "mai": [11, 111, 112], "have": [11, 32, 44, 54, 64, 74, 107, 108, 113], "same": [11, 12, 27, 116, 119], "valu": [11, 39, 45, 55, 65, 75, 80, 81, 112], "one": [11, 85, 113, 116, 119], "which": [11, 26, 27, 32, 40, 44, 50, 54, 60, 64, 74, 80, 83, 86, 89, 90, 95, 111, 113, 116], "case": 11, "automat": [11, 16, 42, 52, 62, 116, 118], "integ": 11, "addit": [11, 13, 26, 110, 112, 113, 115], "check": [12, 100, 104, 112], "alreadi": 12, "set": [12, 26, 80, 100, 111, 112, 113, 117], "bool": [12, 13, 14, 21, 26, 35, 47, 57, 67, 77, 84, 94, 97], "data": [13, 14, 15, 18, 21, 22, 23, 28, 31, 33, 35, 36, 37, 43, 45, 47, 48, 49, 53, 55, 57, 58, 59, 63, 65, 67, 68, 69, 73, 75, 77, 78, 79, 88, 92, 97, 98, 99], "fals": [13, 14, 21, 26, 35, 47, 57, 67, 77, 84, 94, 97], "iter": 13, "over": 13, "true": [13, 14, 21, 26, 35, 47, 57, 67, 77, 84, 90, 94, 97, 111, 113], "yield": [13, 19], "next": 13, "u": 13, "v": [13, 106], "connector": 13, "attr": 13, "obj": [14, 21, 35, 47, 57, 67, 77, 97], "given": [14, 26, 27, 32, 39, 44, 54, 64, 74, 80, 86, 89, 90, 93, 112], "otherwis": [14, 27, 84, 109, 113], "look": 14, "cl": [15, 31, 43, 53, 63, 73, 88], "independ": [15, 31, 43, 53, 63, 73, 88], "guid": [16, 106, 107, 113], "global": 16, "creat": [16, 28, 40, 42, 50, 52, 60, 62, 91, 93, 102, 104, 107, 108, 110, 111, 112, 113, 116, 119], "can": [16, 17, 23, 37, 49, 59, 69, 79, 94, 99, 102, 110, 113, 116], "t": [16, 17, 60, 107], "found": [16, 17], "find": [17, 26, 80, 100, 116], "classmethod": [18, 23, 26, 32, 33, 37, 39, 44, 45, 49, 54, 55, 59, 64, 65, 69, 74, 75, 79, 91, 92, 93, 99], "construct": [18, 23, 33, 37, 45, 49, 55, 59, 65, 69, 75, 79, 92, 99, 104], "provid": [18, 25, 33, 45, 55, 65, 75, 92, 109, 110, 111, 113], "dictionari": [18, 33, 45, 55, 65, 75, 92], "ha": [18, 24, 33, 45, 55, 65, 75, 80, 92, 113, 116, 117, 118], "correct": [18, 33, 45, 55, 65, 75, 92], "schema": [18, 22, 23, 33, 36, 37, 45, 48, 49, 55, 58, 59, 65, 68, 69, 75, 78, 79, 92, 98, 99], "individu": 19, "remov": [20, 83, 95, 96, 112, 115], "as_str": [21, 35, 47, 57, 67, 77, 97], "comput": [21, 27, 35, 47, 57, 67, 77, 97], "hash": [21, 35, 47, 57, 67, 77, 97], "comparison": [21, 35, 47, 57, 67, 77, 97], "dure": [21, 34, 35, 47, 57, 67, 77, 97], "version": [21, 35, 47, 57, 67, 77, 97, 106], "control": [21, 35, 47, 57, 67, 77, 97], "algorithm": [21, 35, 47, 57, 67, 77, 80, 97], "digest": [21, 35, 47, 57, 67, 77, 97], "hexadecim": [21, 35, 47, 57, 67, 77, 97], "format": [21, 35, 47, 57, 67, 77, 97, 112], "rather": [21, 35, 47, 57, 67, 77, 97], "than": [21, 32, 35, 44, 47, 54, 57, 64, 67, 74, 77, 97, 116], "byte": [21, 35, 47, 57, 67, 77, 97], "exampl": [21, 34, 35, 47, 57, 67, 77, 80, 97, 104, 106, 110, 112, 113, 116, 119], "compa": [21, 35, 47, 57, 67, 77, 81, 97, 101, 106, 107, 108, 110, 116], "datastructur": [21, 35, 47, 57, 67, 77, 97], "import": [21, 35, 47, 57, 67, 77, 97, 119], "mesh": [21, 35, 47, 57, 67, 77, 97, 103], "from_obj": [21, 35, 47, 57, 67, 77, 97], "get": [21, 35, 47, 57, 67, 77, 97, 110], "face": [21, 35, 47, 57, 67, 77, 81, 90, 97], "v1": [21, 35, 47, 57, 67, 77, 97], "v2": [21, 35, 47, 57, 67, 77, 97], "vertex_attribut": [21, 35, 47, 57, 67, 77, 97], "vertex_sampl": [21, 35, 47, 57, 67, 77, 97], "1": [21, 35, 47, 57, 67, 77, 81, 97, 103, 113], "0": [21, 35, 40, 47, 57, 67, 77, 81, 97, 103, 106, 113, 116], "z": [21, 35, 47, 57, 67, 77, 81, 91, 93, 97, 113, 115, 118], "v3": [21, 35, 47, 57, 67, 77, 97], "nativ": [22, 36, 48, 58, 68, 78, 98], "valid": [23, 37, 49, 59, 69, 79, 99], "against": [23, 37, 49, 59, 69, 79, 99], "": [23, 30, 37, 40, 49, 50, 59, 60, 69, 72, 79, 81, 86, 89, 91, 93, 94, 99, 108, 112, 118], "raw": [23, 37, 49, 59, 69, 79, 99], "from_data": [23, 37, 49, 59, 69, 79, 99], "except": 24, "baseexcept": 24, "indic": [24, 91, 93, 112, 113], "error": [24, 111, 112], "occur": 24, "while": 24, "try": 24, "join": [24, 28, 32, 40, 44, 50, 54, 60, 64, 74, 111, 116], "more": [24, 85, 104, 110], "detect": 25, "intersect": [25, 26, 27, 116], "topologi": [25, 27, 32, 38, 39, 40, 44, 50, 54, 60, 64, 74], "rtree": [26, 100], "max_dist": [26, 27], "pair": [26, 27, 80, 100, 112, 116, 119], "r": [26, 80, 106], "tree": [26, 80], "search": [26, 80], "neighbor": [26, 80, 100], "float": [26, 27, 80, 81, 83, 90, 91, 93, 100], "distanc": [26, 27, 116], "apart": 26, "non": 26, "touch": 26, "still": 26, "consid": [26, 27], "neightbor": [26, 100], "beam_a": [27, 50, 70], "beam_b": [27, 50, 70], "tol": 27, "1e": 27, "06": 27, "within": 27, "role": [27, 34], "sensit": 27, "consist": 27, "specif": [27, 34, 104], "order": [27, 80, 119], "main": [27, 34, 40, 46, 56, 60, 62, 66, 76, 106, 107, 108, 116], "first": [27, 50, 89, 107, 116, 119], "cross": [27, 34, 40, 46, 56, 60, 62, 66, 76, 81, 91, 93, 113, 116], "second": [27, 50, 89, 116], "thei": 27, "were": [27, 112], "input": [27, 80, 110, 112, 113, 116], "toler": [27, 116], "mathemat": 27, "maximum": 27, "desigen": 27, "unit": [27, 80, 90], "jointtopologi": 27, "frame": [28, 40, 50, 60, 70, 81, 103, 104, 110, 111, 119], "should": [28, 34, 80, 83, 94, 116], "instanti": 28, "directli": [28, 108], "respect": [28, 34, 116], "implement": [28, 34, 100, 104], "instead": [28, 113], "featur": [30, 42, 52, 62, 72, 81, 84, 85, 94, 96, 104, 110, 111, 117, 119], "affect": [30, 72], "new": [32, 44, 54, 64, 74, 107, 108, 113], "expect": [32, 44, 54, 64, 74], "been": [32, 44, 54, 64, 74], "befor": [32, 44, 54, 64, 74, 117], "call": [32, 34, 42, 44, 52, 54, 62, 64, 74, 84, 113, 116], "code": [32, 44, 54, 64, 74, 102, 104], "doe": [32, 44, 54, 64, 74, 108, 113, 116], "verifi": [32, 44, 54, 64, 74, 90], "adjac": [32, 44, 54, 64, 74], "lie": [32, 44, 54, 64, 74], "allow": [32, 44, 54, 64, 74, 90], "them": [32, 44, 50, 54, 64, 74, 102, 112, 116], "respons": [32, 44, 54, 64, 74], "valueerror": [32, 44, 54, 64, 74], "less": [32, 44, 54, 64, 74, 81], "assemebli": [32, 44, 54, 64, 74], "jo": [32, 44, 54, 64, 74], "belong": [32, 44, 54, 64, 74], "whould": [32, 44, 54, 64, 74], "togeth": [32, 44, 54, 64, 74, 113], "restor": 34, "refer": [34, 46, 56, 66, 76, 104, 106, 110, 112, 116], "associ": [34, 40, 50, 60, 109], "serial": [34, 46, 56, 66, 76], "To": [34, 108, 110, 111, 116, 119], "avoid": [34, 116], "circular": 34, "store": [34, 112, 113], "de": [34, 46, 56, 66, 76], "sinc": 34, "concret": 34, "see": [34, 106, 110, 113, 114, 118], "tbuttjoint": [34, 103], "enumer": 38, "possibl": [38, 112], "topo_unknown": [38, 39], "topo_i": 38, "topo_l": [38, 39], "topo_t": [38, 39], "topo_x": [38, 39], "For": [39, 80, 104, 118, 119], "log": [39, 111], "One": 39, "main_beam": [40, 60, 103], "cross_beam": [40, 60, 103], "gap": [40, 60], "l": [40, 50], "butt": [40, 60], "end": [40, 50, 60, 81, 83, 89, 90, 93, 116], "trim": [40, 42, 50, 52, 60, 62, 111, 115, 116], "pleas": [40, 50, 60, 101], "properli": [40, 50, 60], "timberassembli": [40, 50, 60, 103], "cutting_plane_main": [40, 60], "cutting_plane_cross": [40, 60], "joint_typ": [40, 50, 60], "requir": [42, 52, 83, 95, 106], "extens": [42, 52, 83, 90, 95, 108], "both": [42, 52], "assemli": [46, 56, 76], "after": [46, 56, 66, 76], "resotr": [46, 56, 66, 76], "save": [46, 56, 66, 76], "cutoff": 50, "miter": 50, "bisector": [50, 116], "angl": [50, 116], "centerlin": [50, 81, 89, 91, 93, 110, 112, 113, 116, 118], "cutting_plan": 50, "each": [50, 90, 112, 116], "normal": [50, 81], "point": [50, 81, 89, 93, 104, 118], "opposit": 50, "direct": [50, 81, 90, 91, 93, 100, 113], "along": [60, 81, 116], "length": [60, 81, 91, 116], "anoth": 60, "cut_plane_choic": 70, "inflate_bi": [80, 100], "axi": [80, 81, 91, 93, 113, 118], "align": [80, 81, 86, 110, 118], "bound": [80, 81, 100], "box": [80, 81, 100, 110, 117], "aabb": [80, 81], "enlarg": 80, "amount": [80, 83, 90, 100], "design": [80, 101, 104, 110, 112, 113], "regard": 80, "inflat": [80, 100], "pluggabl": 80, "In": [80, 104, 116], "plugin": [80, 104, 113], "avail": [80, 94, 105], "width": [81, 91, 93, 103, 112, 113], "height": [81, 91, 93, 103, 112, 113], "stud": [81, 113], "slat": 81, "rectangular": [81, 113], "section": [81, 91, 93, 102, 110, 113], "local": [81, 108, 113, 117], "coordin": [81, 113, 117], "system": [81, 113, 117], "origin": [81, 113, 117, 118], "locat": [81, 108, 113], "start": [81, 83, 89, 90, 93, 110, 113], "x": [81, 113, 116, 118], "correspond": [81, 89, 112, 113, 118], "major": [81, 113], "also": [81, 84, 101, 104, 106, 110, 112, 113], "fibr": [81, 110], "solid": [81, 111], "wood": 81, "y": [81, 113, 118], "smaller": [81, 113], "dimens": [81, 113], "larger": [81, 113], "blank": [81, 83, 95], "parametr": [81, 104], "6": 81, "side": [81, 115, 116], "equal": 81, "posit": [81, 115, 116], "2": [81, 103], "3": [81, 107], "4": [81, 103], "5": 81, "line": [81, 91, 104, 112, 113], "centerline_start": 81, "centerline_end": 81, "xmin": 81, "ymin": 81, "zmin": 81, "xmax": 81, "ymax": 81, "zmax": 81, "long_edg": 81, "long": [81, 90], "midpoint": 81, "middl": 81, "extend": [83, 90], "well": 83, "appli": [84, 111, 116, 117, 119], "user": [84, 112], "must": 84, "apply_featur": 84, "vector": [86, 91, 93, 104, 113], "z_axi": 86, "definit": [86, 111], "todo": [86, 90], "Not": 86, "anywher": 86, "need": [86, 106, 108, 112, 119], "features_to_clear": 87, "endpoint": [89, 93], "closer": 89, "interest": 89, "either": 89, "depend": [89, 91, 93, 106, 107, 117], "result": [89, 116], "actual": 89, "pln": 90, "metric": 90, "minimum": 90, "all": [90, 94, 96, 100, 109, 112], "pass": 90, "through": [90, 101], "z_vector": [91, 93], "worldz": [91, 93], "worldx": [91, 93], "orient": [91, 93, 118], "point_start": 93, "point_end": 93, "end_point": 93, "with_featur": 94, "transform": 94, "copi": [94, 108, 109], "drawn": [94, 113], "artist": 94, "prior": 100, "research": [101, 104, 109], "project": [101, 104], "develop": [101, 104, 105, 107], "aleksandra": 101, "apolinarska": 101, "chen": 101, "kasir": 101, "gonzalo": 101, "casa": 101, "gramazio": [101, 104, 109], "kohler": [101, 104, 109], "eth": [101, 104], "zurich": [101, 104], "support": [101, 102], "swiss": 101, "nation": 101, "scienc": 101, "foundat": 101, "center": 101, "compet": 101, "digit": 101, "nccr": 101, "dfab": 101, "programm": 101, "As": 101, "open": [101, 104, 108], "mani": [101, 102, 104], "contributor": 101, "you": [101, 106, 107, 108, 110, 113, 116, 119], "your": [101, 107], "work": 101, "acknowledg": 101, "misc": 101, "titl": 101, "librari": [101, 102, 104, 110], "structur": [101, 104, 110, 111, 119], "author": [101, 109], "anna": 101, "http": [101, 106, 107], "github": [101, 106, 107, 108], "com": [101, 106, 107], "gramaziokohl": 101, "year": 101, "2022": 101, "2023": 101, "doi": 101, "10": 101, "5281": 101, "zenodo": 101, "7934267": 101, "url": 101, "present": 102, "differ": [102, 116, 119], "concept": [102, 110], "There": [102, 112], "multipl": 102, "wai": 102, "run": [102, 104, 108], "execut": [102, 108], "python": [102, 104, 106, 107, 110], "environ": [102, 104, 106, 107, 108], "interact": 102, "session": [102, 108], "id": 102, "text": [102, 108], "editor": 102, "sublim": 102, "visual": [102, 111], "studio": 102, "eclips": 102, "insid": 102, "cad": 102, "blender": 102, "worldxi": 103, "depth": 103, "geometry_typ": 103, "add_beam": 103, "document": [104, 109, 112, 113, 118], "packag": 104, "model": 104, "written": 104, "framework": 104, "ecosystem": 104, "It": [104, 110, 111, 112, 113, 118], "rhinocero": 104, "3d": 104, "plug": 104, "activ": [104, 107, 111, 113, 118], "being": 104, "continu": 104, "At": 104, "stage": 104, "encompass": 104, "fast": 104, "intuit": 104, "custom": [104, 112], "entiti": 104, "maintain": 104, "semant": 104, "inform": [104, 118], "about": 104, "futur": 104, "expand": 104, "entail": [104, 112], "interfac": 104, "analysi": 104, "softwar": [104, 109], "specialist": 104, "built": [104, 110], "upon": 104, "basic": 104, "like": [104, 110, 111], "complex": 104, "geometr": [104, 111, 115], "brep": [104, 111, 115, 117, 118], "resolv": 104, "backend": 104, "rhinocommon": 104, "sdk": 104, "handl": 104, "opencascad": 104, "via": 104, "occ": 104, "introduct": 104, "instal": 104, "quick": [104, 105], "manual": [104, 105], "api": [104, 110], "workflow": [104, 110, 112, 113], "show": [104, 110], "util": [104, 110], "licens": 104, "cite": 104, "index": [104, 117], "follow": [105, 109, 110], "possibilti": 105, "want": [106, 107], "purpos": [106, 107, 109], "detail": [106, 110], "here": [106, 108, 114, 116, 118], "fork": 106, "repo": 106, "clone": 106, "navig": [106, 108], "repositori": 106, "folder": 106, "cd": 106, "pip": [106, 107, 108], "git": [106, 107], "dev": [106, 107], "txt": 106, "build": [106, 119], "ghuser": 106, "compon": [106, 108, 111, 112, 113, 117], "invok": 106, "sure": 106, "variabl": 106, "dependeci": 106, "m": 106, "compas_rhino": 106, "7": 106, "specifi": 106, "virutu": 107, "conda": [107, 108], "virtual": [107, 108], "replac": 107, "myenvnam": 107, "desir": [107, 118], "n": 107, "9": 107, "don": 107, "forg": 107, "yet": 107, "config": 107, "env": 107, "channel": 107, "prerequisit": 108, "rhinoceros3d": 108, "window": 108, "download": 108, "file": [108, 109, 114], "win_instal": 108, "cmd": 108, "content": 108, "newli": 108, "chang": 108, "doubl": 108, "click": 108, "altern": 108, "ex": 108, "mac": 108, "mac_instal": 108, "termin": 108, "script": 108, "sh": 108, "what": 108, "background": 108, "batch": 108, "miniconda": 108, "branch": 108, "mit": 109, "copyright": 109, "c": 109, "2020": 109, "02": 109, "17": 109, "permiss": 109, "herebi": 109, "grant": 109, "free": 109, "charg": 109, "person": 109, "obtain": 109, "deal": 109, "without": 109, "restrict": 109, "limit": 109, "right": 109, "modifi": 109, "merg": 109, "publish": 109, "distribut": 109, "sublicens": 109, "sell": 109, "permit": 109, "whom": 109, "furnish": 109, "do": 109, "so": 109, "subject": 109, "condit": 109, "abov": 109, "notic": 109, "shall": 109, "substanti": 109, "portion": 109, "THE": 109, "AS": 109, "warranti": 109, "OF": 109, "kind": 109, "express": 109, "OR": 109, "impli": [109, 111], "BUT": 109, "NOT": 109, "TO": 109, "merchant": 109, "fit": 109, "FOR": 109, "particular": 109, "AND": 109, "noninfring": 109, "IN": 109, "NO": 109, "event": 109, "holder": 109, "BE": 109, "liabl": 109, "claim": 109, "damag": 109, "liabil": 109, "whether": [109, 117], "action": 109, "contract": 109, "tort": 109, "aris": 109, "out": 109, "WITH": 109, "easi": 110, "autom": [110, 116], "bake": 110, "map": [110, 118], "textur": [110, 118], "render": [110, 118], "boolean": [110, 111, 115], "style": 110, "planar": [110, 116], "cut": [110, 111, 115, 116], "hole": 110, "some": [110, 118], "top": 110, "might": 110, "ghpython": 110, "componen": 110, "overal": 110, "idea": 110, "how": [110, 116], "Then": [110, 116], "explain": 110, "made": 111, "oper": [111, 115], "subtract": [111, 115], "computation": 111, "expens": 111, "disabl": 111, "applyfeatur": 111, "unsuccess": 111, "abstract": 111, "showassembli": [111, 117], "group": 112, "intend": [112, 113], "hybrid": 112, "encod": 112, "concaten": 112, "colon": 112, "separ": 112, "entri": [112, 119], "underscor": 112, "_": 112, "attr1nam": 112, "attr1value_attr2nam": 112, "attr2valu": 112, "four": [112, 116], "standard": 112, "categori": [112, 113, 116], "zvector": [112, 113], "setstandardattribut": 112, "write": [112, 113], "readstandardattribut": 112, "read": 112, "checkstandardattribut": 112, "correctli": 112, "miss": 112, "retriev": 112, "later": [112, 113, 116], "filter": 112, "accord": [112, 116], "criteria": 112, "These": 112, "deleteattribut": 112, "setcustomattribut": 112, "readallattribut": 112, "linear": [113, 116], "straight": 113, "rafter": 113, "joist": 113, "where": [113, 118], "beamfromcurv": 113, "form": [113, 116], "linecurv": 113, "beamfromcurveguid": 113, "referenc": 113, "rotat": 113, "around": 113, "li": [113, 118], "sai": 113, "perpendicular": 113, "cannot": 113, "parallel": 113, "world": 113, "vertic": 113, "convent": 113, "rule": [113, 116], "jointcategoryrul": [113, 116], "automaticjoint": 113, "updaterefobj": 113, "onc": 113, "preview": [113, 117], "shape": 113, "extract": [113, 117], "demo": 114, "ly": 115, "three": 116, "prefix": 116, "rel": 116, "we": 116, "distinguish": 116, "topolog": 116, "situat": 116, "splice": 116, "co": 116, "corner": 116, "meet": 116, "select": 116, "addition": 116, "clean": 116, "serv": [116, 118], "cata": 116, "catb": 116, "thing": 116, "determin": 116, "ye": 116, "everi": 116, "tri": 116, "unintend": 116, "maxdist": 116, "exactli": 116, "certain": 116, "000001": 116, "inspect": 117, "showbeam": 117, "showbeamfram": 117, "showbeamindex": 117, "showjointtyp": 117, "bakewithboxmap": 118, "layer": 118, "materi": 118, "random": 118, "deviat": 118, "mapsiz": 118, "scale": 118, "adjust": 118, "size": 118, "imag": 118, "ratio": 118, "bitmap": 118, "care": 119, "final": 119, "matter": 119, "last": 119, "earlier": 119}, "objects": {"": [[1, 0, 0, "-", "compas_timber"]], "compas_timber": [[2, 0, 0, "-", "assembly"], [3, 0, 0, "-", "connections"], [4, 0, 0, "-", "parts"], [5, 0, 0, "-", "rhino"]], "compas_timber.assembly": [[6, 1, 1, "", "TimberAssembly"]], "compas_timber.assembly.TimberAssembly": [[7, 2, 1, "", "ToString"], [8, 2, 1, "", "add_beam"], [9, 2, 1, "", "add_connection"], [10, 2, 1, "", "add_joint"], [11, 2, 1, "", "add_part"], [12, 2, 1, "", "are_parts_joined"], [13, 2, 1, "", "connections"], [14, 2, 1, "", "contains"], [15, 2, 1, "", "copy"], [16, 2, 1, "", "find"], [17, 2, 1, "", "find_by_key"], [18, 2, 1, "", "from_data"], [19, 2, 1, "", "parts"], [20, 2, 1, "", "remove_joint"], [21, 2, 1, "", "sha256"], [22, 2, 1, "", "to_data"], [23, 2, 1, "", "validate_data"]], "compas_timber.connections": [[24, 3, 1, "", "BeamJoinningError"], [25, 1, 1, "", "ConnectionSolver"], [28, 1, 1, "", "Joint"], [38, 1, 1, "", "JointTopology"], [40, 1, 1, "", "LButtJoint"], [50, 1, 1, "", "LMiterJoint"], [60, 1, 1, "", "TButtJoint"], [70, 1, 1, "", "XHalfLapJoint"], [80, 4, 1, "", "find_neighboring_beams"]], "compas_timber.connections.ConnectionSolver": [[26, 2, 1, "", "find_intersecting_pairs"], [27, 2, 1, "", "find_topology"]], "compas_timber.connections.Joint": [[29, 2, 1, "", "ToString"], [30, 2, 1, "", "add_features"], [31, 2, 1, "", "copy"], [32, 2, 1, "", "create"], [33, 2, 1, "", "from_data"], [34, 2, 1, "", "restore_beams_from_keys"], [35, 2, 1, "", "sha256"], [36, 2, 1, "", "to_data"], [37, 2, 1, "", "validate_data"]], "compas_timber.connections.JointTopology": [[39, 2, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[41, 2, 1, "", "ToString"], [42, 2, 1, "", "add_features"], [43, 2, 1, "", "copy"], [44, 2, 1, "", "create"], [45, 2, 1, "", "from_data"], [46, 2, 1, "", "restore_beams_from_keys"], [47, 2, 1, "", "sha256"], [48, 2, 1, "", "to_data"], [49, 2, 1, "", "validate_data"]], "compas_timber.connections.LMiterJoint": [[51, 2, 1, "", "ToString"], [52, 2, 1, "", "add_features"], [53, 2, 1, "", "copy"], [54, 2, 1, "", "create"], [55, 2, 1, "", "from_data"], [56, 2, 1, "", "restore_beams_from_keys"], [57, 2, 1, "", "sha256"], [58, 2, 1, "", "to_data"], [59, 2, 1, "", "validate_data"]], "compas_timber.connections.TButtJoint": [[61, 2, 1, "", "ToString"], [62, 2, 1, "", "add_features"], [63, 2, 1, "", "copy"], [64, 2, 1, "", "create"], [65, 2, 1, "", "from_data"], [66, 2, 1, "", "restore_beams_from_keys"], [67, 2, 1, "", "sha256"], [68, 2, 1, "", "to_data"], [69, 2, 1, "", "validate_data"]], "compas_timber.connections.XHalfLapJoint": [[71, 2, 1, "", "ToString"], [72, 2, 1, "", "add_features"], [73, 2, 1, "", "copy"], [74, 2, 1, "", "create"], [75, 2, 1, "", "from_data"], [76, 2, 1, "", "restore_beams_from_keys"], [77, 2, 1, "", "sha256"], [78, 2, 1, "", "to_data"], [79, 2, 1, "", "validate_data"]], "compas_timber.parts": [[81, 1, 1, "", "Beam"]], "compas_timber.parts.Beam": [[82, 2, 1, "", "ToString"], [83, 2, 1, "", "add_blank_extension"], [84, 2, 1, "", "add_feature"], [85, 2, 1, "", "add_features"], [86, 2, 1, "", "align_z"], [87, 2, 1, "", "clear_features"], [88, 2, 1, "", "copy"], [89, 2, 1, "", "endpoint_closest_to_point"], [90, 2, 1, "", "extension_to_plane"], [91, 2, 1, "", "from_centerline"], [92, 2, 1, "", "from_data"], [93, 2, 1, "", "from_endpoints"], [94, 2, 1, "", "get_geometry"], [95, 2, 1, "", "remove_blank_extension"], [96, 2, 1, "", "remove_features"], [97, 2, 1, "", "sha256"], [98, 2, 1, "", "to_data"], [99, 2, 1, "", "validate_data"]], "compas_timber.rhino": [[100, 4, 1, "", "find_neighboring_beams"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:exception", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "exception", "Python exception"], "4": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "packag": 0, "compas_timb": 1, "assembli": [2, 102, 111], "class": [2, 3, 4], "connect": [3, 13], "function": 3, "except": 3, "part": [4, 19], "rhino": 5, "plugin": [5, 110], "timberassembli": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "tostr": [7, 29, 41, 51, 61, 71, 82], "add_beam": 8, "add_connect": 9, "add_joint": 10, "add_part": 11, "are_parts_join": 12, "contain": 14, "copi": [15, 31, 43, 53, 63, 73, 88], "find": 16, "find_by_kei": 17, "from_data": [18, 33, 45, 55, 65, 75, 92], "remove_joint": 20, "sha256": [21, 35, 47, 57, 67, 77, 97], "to_data": [22, 36, 48, 58, 68, 78, 98], "validate_data": [23, 37, 49, 59, 69, 79, 99], "beamjoinningerror": 24, "connectionsolv": [25, 26, 27], "find_intersecting_pair": 26, "find_topologi": 27, "joint": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 103, 116], "add_featur": [30, 42, 52, 62, 72, 84, 85], "creat": [32, 44, 54, 64, 74, 103], "restore_beams_from_kei": [34, 46, 56, 66, 76], "jointtopologi": [38, 39], "get_nam": 39, "lbuttjoint": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "lmiterjoint": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "tbuttjoint": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "xhalflapjoint": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "find_neighboring_beam": [80, 100], "beam": [81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 113], "add_blank_extens": 83, "align_z": 86, "clear_featur": 87, "endpoint_closest_to_point": 89, "extension_to_plan": 90, "from_centerlin": 91, "from_endpoint": 93, "get_geometri": 94, "remove_blank_extens": 95, "remove_featur": 96, "cite": 101, "exampl": [102, 114], "timber": [102, 104], "compa": 104, "depend": 104, "tabl": 104, "content": 104, "indic": 104, "instal": [105, 106, 107, 108], "manual": [106, 107], "develop": 106, "quick": 108, "licens": 109, "grasshopp": 110, "attribut": 112, "featur": 115, "topologi": 116, "compon": 116, "t": 116, "butt": 116, "l": 116, "miter": 116, "automaticjoint": 116, "wizzard": 116, "show": 117, "util": 118, "bake": 118, "boxmap": 118, "workflow": 119}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"API Reference": [[0, "api-reference"]], "Packages": [[0, "packages"]], "compas_timber": [[1, "module-compas_timber"], [1, "id1"]], "assembly": [[2, "assembly"]], "Classes": [[2, "classes"], [3, "classes"], [4, "classes"]], "connections": [[3, "connections"]], "Functions": [[3, "functions"]], "Exceptions": [[3, "exceptions"]], "parts": [[4, "parts"]], "rhino": [[5, "rhino"]], "Plugins": [[5, "plugins"]], "TimberAssembly": [[6, "timberassembly"]], "TimberAssembly.ToString": [[7, "timberassembly-tostring"]], "TimberAssembly.add_beam": [[8, "timberassembly-add-beam"]], "TimberAssembly.add_connection": [[9, "timberassembly-add-connection"]], "TimberAssembly.add_joint": [[10, "timberassembly-add-joint"]], "TimberAssembly.add_part": [[11, "timberassembly-add-part"]], "TimberAssembly.are_parts_joined": [[12, "timberassembly-are-parts-joined"]], "TimberAssembly.connections": [[13, "timberassembly-connections"]], "TimberAssembly.contains": [[14, "timberassembly-contains"]], "TimberAssembly.copy": [[15, "timberassembly-copy"]], "TimberAssembly.find": [[16, "timberassembly-find"]], "TimberAssembly.find_by_key": [[17, "timberassembly-find-by-key"]], "TimberAssembly.from_data": [[18, "timberassembly-from-data"]], "TimberAssembly.parts": [[19, "timberassembly-parts"]], "TimberAssembly.remove_joint": [[20, "timberassembly-remove-joint"]], "TimberAssembly.sha256": [[21, "timberassembly-sha256"]], "TimberAssembly.to_data": [[22, "timberassembly-to-data"]], "TimberAssembly.validate_data": [[23, "timberassembly-validate-data"]], "BeamJoinningError": [[24, "beamjoinningerror"]], "ConnectionSolver": [[25, "connectionsolver"]], "ConnectionSolver.find_intersecting_pairs": [[26, "connectionsolver-find-intersecting-pairs"]], "ConnectionSolver.find_topology": [[27, "connectionsolver-find-topology"]], "Joint": [[28, "joint"]], "Joint.ToString": [[29, "joint-tostring"]], "Joint.add_features": [[30, "joint-add-features"]], "Joint.copy": [[31, "joint-copy"]], "Joint.create": [[32, "joint-create"]], "Joint.from_data": [[33, "joint-from-data"]], "Joint.restore_beams_from_keys": [[34, "joint-restore-beams-from-keys"]], "Joint.sha256": [[35, "joint-sha256"]], "Joint.to_data": [[36, "joint-to-data"]], "Joint.validate_data": [[37, "joint-validate-data"]], "JointTopology": [[38, "jointtopology"]], "JointTopology.get_name": [[39, "jointtopology-get-name"]], "LButtJoint": [[40, "lbuttjoint"]], "LButtJoint.ToString": [[41, "lbuttjoint-tostring"]], "LButtJoint.add_features": [[42, "lbuttjoint-add-features"]], "LButtJoint.copy": [[43, "lbuttjoint-copy"]], "LButtJoint.create": [[44, "lbuttjoint-create"]], "LButtJoint.from_data": [[45, "lbuttjoint-from-data"]], "LButtJoint.restore_beams_from_keys": [[46, "lbuttjoint-restore-beams-from-keys"]], "LButtJoint.sha256": [[47, "lbuttjoint-sha256"]], "LButtJoint.to_data": [[48, "lbuttjoint-to-data"]], "LButtJoint.validate_data": [[49, "lbuttjoint-validate-data"]], "LMiterJoint": [[50, "lmiterjoint"]], "LMiterJoint.ToString": [[51, "lmiterjoint-tostring"]], "LMiterJoint.add_features": [[52, "lmiterjoint-add-features"]], "LMiterJoint.copy": [[53, "lmiterjoint-copy"]], "LMiterJoint.create": [[54, "lmiterjoint-create"]], "LMiterJoint.from_data": [[55, "lmiterjoint-from-data"]], "LMiterJoint.restore_beams_from_keys": [[56, "lmiterjoint-restore-beams-from-keys"]], "LMiterJoint.sha256": [[57, "lmiterjoint-sha256"]], "LMiterJoint.to_data": [[58, "lmiterjoint-to-data"]], "LMiterJoint.validate_data": [[59, "lmiterjoint-validate-data"]], "TButtJoint": [[60, "tbuttjoint"]], "TButtJoint.ToString": [[61, "tbuttjoint-tostring"]], "TButtJoint.add_features": [[62, "tbuttjoint-add-features"]], "TButtJoint.copy": [[63, "tbuttjoint-copy"]], "TButtJoint.create": [[64, "tbuttjoint-create"]], "TButtJoint.from_data": [[65, "tbuttjoint-from-data"]], "TButtJoint.restore_beams_from_keys": [[66, "tbuttjoint-restore-beams-from-keys"]], "TButtJoint.sha256": [[67, "tbuttjoint-sha256"]], "TButtJoint.to_data": [[68, "tbuttjoint-to-data"]], "TButtJoint.validate_data": [[69, "tbuttjoint-validate-data"]], "XHalfLapJoint": [[70, "xhalflapjoint"]], "XHalfLapJoint.ToString": [[71, "xhalflapjoint-tostring"]], "XHalfLapJoint.add_features": [[72, "xhalflapjoint-add-features"]], "XHalfLapJoint.copy": [[73, "xhalflapjoint-copy"]], "XHalfLapJoint.create": [[74, "xhalflapjoint-create"]], "XHalfLapJoint.from_data": [[75, "xhalflapjoint-from-data"]], "XHalfLapJoint.restore_beams_from_keys": [[76, "xhalflapjoint-restore-beams-from-keys"]], "XHalfLapJoint.sha256": [[77, "xhalflapjoint-sha256"]], "XHalfLapJoint.to_data": [[78, "xhalflapjoint-to-data"]], "XHalfLapJoint.validate_data": [[79, "xhalflapjoint-validate-data"]], "find_neighboring_beams": [[80, "find-neighboring-beams"], [100, "find-neighboring-beams"]], "Beam": [[81, "beam"], [113, "beam"]], "Beam.ToString": [[82, "beam-tostring"]], "Beam.add_blank_extension": [[83, "beam-add-blank-extension"]], "Beam.add_feature": [[84, "beam-add-feature"]], "Beam.add_features": [[85, "beam-add-features"]], "Beam.align_z": [[86, "beam-align-z"]], "Beam.clear_features": [[87, "beam-clear-features"]], "Beam.copy": [[88, "beam-copy"]], "Beam.endpoint_closest_to_point": [[89, "beam-endpoint-closest-to-point"]], "Beam.extension_to_plane": [[90, "beam-extension-to-plane"]], "Beam.from_centerline": [[91, "beam-from-centerline"]], "Beam.from_data": [[92, "beam-from-data"]], "Beam.from_endpoints": [[93, "beam-from-endpoints"]], "Beam.get_geometry": [[94, "beam-get-geometry"]], "Beam.remove_blank_extension": [[95, "beam-remove-blank-extension"]], "Beam.remove_features": [[96, "beam-remove-features"]], "Beam.sha256": [[97, "beam-sha256"]], "Beam.to_data": [[98, "beam-to-data"]], "Beam.validate_data": [[99, "beam-validate-data"]], "Citing": [[101, "citing"]], "Examples": [[102, "examples"], [114, "examples"]], "Timber Assembly Examples": [[102, "timber-assembly-examples"]], "Create Joint": [[103, "create-joint"]], "COMPAS TIMBER": [[104, "compas-timber"]], "Dependencies": [[104, "dependencies"]], "Table of Contents": [[104, "table-of-contents"]], "Indices and tables": [[104, "indices-and-tables"]], "Installation": [[105, "installation"]], "Manual installation for developers": [[106, "manual-installation-for-developers"]], "Manual installation": [[107, "manual-installation"]], "Quick installation": [[108, "quick-installation"]], "License": [[109, "license"]], "Grasshopper plugin": [[110, "grasshopper-plugin"]], "Assembly": [[111, "assembly"]], "Attributes": [[112, "attributes"]], "Features": [[115, "features"]], "Joints": [[116, "joints"]], "Joint Topologies": [[116, "joint-topologies"]], "Joint components": [[116, "joint-components"]], "T-Butt": [[116, "t-butt"]], "L-Butt": [[116, "l-butt"]], "L-Miter": [[116, "l-miter"]], "AutomaticJoint wizzard": [[116, "automaticjoint-wizzard"]], "Show": [[117, "show"]], "Utils": [[118, "utils"]], "Bake with BoxMap": [[118, "bake-with-boxmap"]], "Workflow": [[119, "workflow"]]}, "indexentries": {"compas_timber": [[1, "module-compas_timber"]], "module": [[1, "module-compas_timber"], [2, "module-compas_timber.assembly"], [3, "module-compas_timber.connections"], [4, "module-compas_timber.parts"], [5, "module-compas_timber.rhino"]], "compas_timber.assembly": [[2, "module-compas_timber.assembly"]], "compas_timber.connections": [[3, "module-compas_timber.connections"]], "compas_timber.parts": [[4, "module-compas_timber.parts"]], "compas_timber.rhino": [[5, "module-compas_timber.rhino"]], "timberassembly (class in compas_timber.assembly)": [[6, "compas_timber.assembly.TimberAssembly"]], "tostring() (compas_timber.assembly.timberassembly method)": [[7, "compas_timber.assembly.TimberAssembly.ToString"]], "add_beam() (compas_timber.assembly.timberassembly method)": [[8, "compas_timber.assembly.TimberAssembly.add_beam"]], "add_connection() (compas_timber.assembly.timberassembly method)": [[9, "compas_timber.assembly.TimberAssembly.add_connection"]], "add_joint() (compas_timber.assembly.timberassembly method)": [[10, "compas_timber.assembly.TimberAssembly.add_joint"]], "add_part() (compas_timber.assembly.timberassembly method)": [[11, "compas_timber.assembly.TimberAssembly.add_part"]], "are_parts_joined() (compas_timber.assembly.timberassembly method)": [[12, "compas_timber.assembly.TimberAssembly.are_parts_joined"]], "connections() (compas_timber.assembly.timberassembly method)": [[13, "compas_timber.assembly.TimberAssembly.connections"]], "contains() (compas_timber.assembly.timberassembly method)": [[14, "compas_timber.assembly.TimberAssembly.contains"]], "copy() (compas_timber.assembly.timberassembly method)": [[15, "compas_timber.assembly.TimberAssembly.copy"]], "find() (compas_timber.assembly.timberassembly method)": [[16, "compas_timber.assembly.TimberAssembly.find"]], "find_by_key() (compas_timber.assembly.timberassembly method)": [[17, "compas_timber.assembly.TimberAssembly.find_by_key"]], "from_data() (compas_timber.assembly.timberassembly class method)": [[18, "compas_timber.assembly.TimberAssembly.from_data"]], "parts() (compas_timber.assembly.timberassembly method)": [[19, "compas_timber.assembly.TimberAssembly.parts"]], "remove_joint() (compas_timber.assembly.timberassembly method)": [[20, "compas_timber.assembly.TimberAssembly.remove_joint"]], "sha256() (compas_timber.assembly.timberassembly method)": [[21, "compas_timber.assembly.TimberAssembly.sha256"]], "to_data() (compas_timber.assembly.timberassembly method)": [[22, "compas_timber.assembly.TimberAssembly.to_data"]], "validate_data() (compas_timber.assembly.timberassembly class method)": [[23, "compas_timber.assembly.TimberAssembly.validate_data"]], "beamjoinningerror": [[24, "compas_timber.connections.BeamJoinningError"]], "connectionsolver (class in compas_timber.connections)": [[25, "compas_timber.connections.ConnectionSolver"]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[26, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs"]], "find_topology() (compas_timber.connections.connectionsolver method)": [[27, "compas_timber.connections.ConnectionSolver.find_topology"]], "joint (class in compas_timber.connections)": [[28, "compas_timber.connections.Joint"]], "tostring() (compas_timber.connections.joint method)": [[29, "compas_timber.connections.Joint.ToString"]], "add_features() (compas_timber.connections.joint method)": [[30, "compas_timber.connections.Joint.add_features"]], "copy() (compas_timber.connections.joint method)": [[31, "compas_timber.connections.Joint.copy"]], "create() (compas_timber.connections.joint class method)": [[32, "compas_timber.connections.Joint.create"]], "from_data() (compas_timber.connections.joint class method)": [[33, "compas_timber.connections.Joint.from_data"]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[34, "compas_timber.connections.Joint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.joint method)": [[35, "compas_timber.connections.Joint.sha256"]], "to_data() (compas_timber.connections.joint method)": [[36, "compas_timber.connections.Joint.to_data"]], "validate_data() (compas_timber.connections.joint class method)": [[37, "compas_timber.connections.Joint.validate_data"]], "jointtopology (class in compas_timber.connections)": [[38, "compas_timber.connections.JointTopology"]], "get_name() (compas_timber.connections.jointtopology class method)": [[39, "compas_timber.connections.JointTopology.get_name"]], "lbuttjoint (class in compas_timber.connections)": [[40, "compas_timber.connections.LButtJoint"]], "tostring() (compas_timber.connections.lbuttjoint method)": [[41, "compas_timber.connections.LButtJoint.ToString"]], "add_features() (compas_timber.connections.lbuttjoint method)": [[42, "compas_timber.connections.LButtJoint.add_features"]], "copy() (compas_timber.connections.lbuttjoint method)": [[43, "compas_timber.connections.LButtJoint.copy"]], "create() (compas_timber.connections.lbuttjoint class method)": [[44, "compas_timber.connections.LButtJoint.create"]], "from_data() (compas_timber.connections.lbuttjoint class method)": [[45, "compas_timber.connections.LButtJoint.from_data"]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[46, "compas_timber.connections.LButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lbuttjoint method)": [[47, "compas_timber.connections.LButtJoint.sha256"]], "to_data() (compas_timber.connections.lbuttjoint method)": [[48, "compas_timber.connections.LButtJoint.to_data"]], "validate_data() (compas_timber.connections.lbuttjoint class method)": [[49, "compas_timber.connections.LButtJoint.validate_data"]], "lmiterjoint (class in compas_timber.connections)": [[50, "compas_timber.connections.LMiterJoint"]], "tostring() (compas_timber.connections.lmiterjoint method)": [[51, "compas_timber.connections.LMiterJoint.ToString"]], "add_features() (compas_timber.connections.lmiterjoint method)": [[52, "compas_timber.connections.LMiterJoint.add_features"]], "copy() (compas_timber.connections.lmiterjoint method)": [[53, "compas_timber.connections.LMiterJoint.copy"]], "create() (compas_timber.connections.lmiterjoint class method)": [[54, "compas_timber.connections.LMiterJoint.create"]], "from_data() (compas_timber.connections.lmiterjoint class method)": [[55, "compas_timber.connections.LMiterJoint.from_data"]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[56, "compas_timber.connections.LMiterJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lmiterjoint method)": [[57, "compas_timber.connections.LMiterJoint.sha256"]], "to_data() (compas_timber.connections.lmiterjoint method)": [[58, "compas_timber.connections.LMiterJoint.to_data"]], "validate_data() (compas_timber.connections.lmiterjoint class method)": [[59, "compas_timber.connections.LMiterJoint.validate_data"]], "tbuttjoint (class in compas_timber.connections)": [[60, "compas_timber.connections.TButtJoint"]], "tostring() (compas_timber.connections.tbuttjoint method)": [[61, "compas_timber.connections.TButtJoint.ToString"]], "add_features() (compas_timber.connections.tbuttjoint method)": [[62, "compas_timber.connections.TButtJoint.add_features"]], "copy() (compas_timber.connections.tbuttjoint method)": [[63, "compas_timber.connections.TButtJoint.copy"]], "create() (compas_timber.connections.tbuttjoint class method)": [[64, "compas_timber.connections.TButtJoint.create"]], "from_data() (compas_timber.connections.tbuttjoint class method)": [[65, "compas_timber.connections.TButtJoint.from_data"]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[66, "compas_timber.connections.TButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.tbuttjoint method)": [[67, "compas_timber.connections.TButtJoint.sha256"]], "to_data() (compas_timber.connections.tbuttjoint method)": [[68, "compas_timber.connections.TButtJoint.to_data"]], "validate_data() (compas_timber.connections.tbuttjoint class method)": [[69, "compas_timber.connections.TButtJoint.validate_data"]], "xhalflapjoint (class in compas_timber.connections)": [[70, "compas_timber.connections.XHalfLapJoint"]], "tostring() (compas_timber.connections.xhalflapjoint method)": [[71, "compas_timber.connections.XHalfLapJoint.ToString"]], "add_features() (compas_timber.connections.xhalflapjoint method)": [[72, "compas_timber.connections.XHalfLapJoint.add_features"]], "copy() (compas_timber.connections.xhalflapjoint method)": [[73, "compas_timber.connections.XHalfLapJoint.copy"]], "create() (compas_timber.connections.xhalflapjoint class method)": [[74, "compas_timber.connections.XHalfLapJoint.create"]], "from_data() (compas_timber.connections.xhalflapjoint class method)": [[75, "compas_timber.connections.XHalfLapJoint.from_data"]], "restore_beams_from_keys() (compas_timber.connections.xhalflapjoint method)": [[76, "compas_timber.connections.XHalfLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.xhalflapjoint method)": [[77, "compas_timber.connections.XHalfLapJoint.sha256"]], "to_data() (compas_timber.connections.xhalflapjoint method)": [[78, "compas_timber.connections.XHalfLapJoint.to_data"]], "validate_data() (compas_timber.connections.xhalflapjoint class method)": [[79, "compas_timber.connections.XHalfLapJoint.validate_data"]], "find_neighboring_beams() (in module compas_timber.connections)": [[80, "compas_timber.connections.find_neighboring_beams"]], "beam (class in compas_timber.parts)": [[81, "compas_timber.parts.Beam"]], "tostring() (compas_timber.parts.beam method)": [[82, "compas_timber.parts.Beam.ToString"]], "add_blank_extension() (compas_timber.parts.beam method)": [[83, "compas_timber.parts.Beam.add_blank_extension"]], "add_feature() (compas_timber.parts.beam method)": [[84, "compas_timber.parts.Beam.add_feature"]], "add_features() (compas_timber.parts.beam method)": [[85, "compas_timber.parts.Beam.add_features"]], "align_z() (compas_timber.parts.beam method)": [[86, "compas_timber.parts.Beam.align_z"]], "clear_features() (compas_timber.parts.beam method)": [[87, "compas_timber.parts.Beam.clear_features"]], "copy() (compas_timber.parts.beam method)": [[88, "compas_timber.parts.Beam.copy"]], "endpoint_closest_to_point() (compas_timber.parts.beam method)": [[89, "compas_timber.parts.Beam.endpoint_closest_to_point"]], "extension_to_plane() (compas_timber.parts.beam method)": [[90, "compas_timber.parts.Beam.extension_to_plane"]], "from_centerline() (compas_timber.parts.beam class method)": [[91, "compas_timber.parts.Beam.from_centerline"]], "from_data() (compas_timber.parts.beam class method)": [[92, "compas_timber.parts.Beam.from_data"]], "from_endpoints() (compas_timber.parts.beam class method)": [[93, "compas_timber.parts.Beam.from_endpoints"]], "get_geometry() (compas_timber.parts.beam method)": [[94, "compas_timber.parts.Beam.get_geometry"]], "remove_blank_extension() (compas_timber.parts.beam method)": [[95, "compas_timber.parts.Beam.remove_blank_extension"]], "remove_features() (compas_timber.parts.beam method)": [[96, "compas_timber.parts.Beam.remove_features"]], "sha256() (compas_timber.parts.beam method)": [[97, "compas_timber.parts.Beam.sha256"]], "to_data() (compas_timber.parts.beam method)": [[98, "compas_timber.parts.Beam.to_data"]], "validate_data() (compas_timber.parts.beam class method)": [[99, "compas_timber.parts.Beam.validate_data"]], "find_neighboring_beams() (in module compas_timber.rhino)": [[100, "compas_timber.rhino.find_neighboring_beams"]]}})