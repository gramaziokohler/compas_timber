Search.setIndex({"alltitles": {"API Reference": [[0, null]], "Actor": [[249, null]], "Actor.get_name": [[250, null]], "Attributes": [[281, null]], "BTLx": [[189, null]], "BTLx Contribution Guide": [[280, null]], "BTLx.btlx_string": [[190, null]], "BTLx.process_model": [[191, null]], "BTLx.register_joint": [[192, null]], "BTLxFrenchRidgeLap": [[193, null]], "BTLxFrenchRidgeLap.create_process": [[194, null]], "BTLxFrenchRidgeLap.get_params": [[195, null]], "BTLxFrenchRidgeLap.process_joints": [[196, null]], "BTLxJackCut": [[197, null]], "BTLxJackCut.create_process": [[198, null]], "BTLxJackCut.generate_process": [[199, null]], "BTLxProcess": [[200, null]], "Bake with BoxMap": [[290, "bake-with-boxmap"]], "Beam": [[161, null]], "Beam.ToString": [[162, null]], "Beam.add_blank_extension": [[163, null]], "Beam.add_feature": [[164, null]], "Beam.add_features": [[165, null]], "Beam.compute_aabb": [[166, null]], "Beam.compute_collision_mesh": [[167, null]], "Beam.compute_geometry": [[168, null]], "Beam.compute_obb": [[169, null]], "Beam.compute_worldtransformation": [[170, null]], "Beam.copy": [[171, null]], "Beam.endpoint_closest_to_point": [[172, null]], "Beam.extension_to_plane": [[173, null]], "Beam.from_centerline": [[174, null]], "Beam.from_endpoints": [[175, null]], "Beam.from_json": [[176, null]], "Beam.from_jsonstring": [[177, null]], "Beam.opposing_side_index": [[178, null]], "Beam.remove_blank_extension": [[179, null]], "Beam.remove_features": [[180, null]], "Beam.reset": [[181, null]], "Beam.sha256": [[182, null]], "Beam.side_as_surface": [[183, null]], "Beam.to_json": [[184, null]], "Beam.to_jsonstring": [[185, null]], "Beam.transform": [[186, null]], "Beam.transformed": [[187, null]], "Beam.validate_data": [[188, null]], "BeamJoinningError": [[8, null]], "Beams": [[282, null]], "Brep Drill Hole Feature": [[286, "brep-drill-hole-feature"]], "Brep Subtraction Feature": [[286, "brep-subtraction-feature"]], "BuildingPlan": [[251, null]], "BuildingPlan.ToString": [[252, null]], "BuildingPlan.add_step": [[253, null]], "BuildingPlan.copy": [[254, null]], "BuildingPlan.from_json": [[255, null]], "BuildingPlan.from_jsonstring": [[256, null]], "BuildingPlan.sha256": [[257, null]], "BuildingPlan.to_json": [[258, null]], "BuildingPlan.to_jsonstring": [[259, null]], "BuildingPlan.validate_data": [[260, null]], "COMPAS Timber Documentation": [[276, null]], "Category Joint Rules": [[287, "category-joint-rules"]], "Check Attributes": [[281, "check-attributes"]], "Citing": [[273, null]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"]], "ConnectionSolver": [[9, null]], "ConnectionSolver.find_intersecting_pairs": [[10, null]], "ConnectionSolver.find_topology": [[11, null]], "Create Joint": [[275, null]], "Custom Attributes": [[281, "custom-attributes"]], "Custom Beam Dimensions": [[283, "custom-beam-dimensions"]], "DecomposeBeam": [[282, "decomposebeam"]], "Default Joint Rules": [[287, "default-joint-rules"]], "Delete Attributes": [[281, "delete-attributes"]], "Dependencies": [[276, "dependencies"]], "Design": [[283, null]], "Development": [[277, "development"]], "Direct Joint Rules": [[287, "direct-joint-rules"]], "Examples": [[274, null], [284, null]], "Exceptions": [[1, "exceptions"]], "Fabrication": [[285, null]], "Features": [[286, null]], "FindBeamByRhinoGuid": [[282, "findbeambyrhinoguid"]], "French Ridge Lap": [[287, "french-ridge-lap"]], "FrenchRidgeFactory": [[201, null]], "FrenchRidgeFactory.apply_processings": [[202, null]], "FrenchRidgeLapJoint": [[12, null]], "FrenchRidgeLapJoint.ToString": [[13, null]], "FrenchRidgeLapJoint.add_extensions": [[14, null]], "FrenchRidgeLapJoint.add_features": [[15, null]], "FrenchRidgeLapJoint.check_geometry": [[16, null]], "FrenchRidgeLapJoint.copy": [[17, null]], "FrenchRidgeLapJoint.create": [[18, null]], "FrenchRidgeLapJoint.from_json": [[19, null]], "FrenchRidgeLapJoint.from_jsonstring": [[20, null]], "FrenchRidgeLapJoint.get_face_most_ortho_to_beam": [[21, null]], "FrenchRidgeLapJoint.get_face_most_towards_beam": [[22, null]], "FrenchRidgeLapJoint.restore_beams_from_keys": [[23, null]], "FrenchRidgeLapJoint.sha256": [[24, null]], "FrenchRidgeLapJoint.to_json": [[25, null]], "FrenchRidgeLapJoint.to_jsonstring": [[26, null]], "FrenchRidgeLapJoint.validate_data": [[27, null]], "Functions": [[1, "functions"]], "Grasshopper plugin": [[279, null]], "Indices and tables": [[276, "indices-and-tables"]], "Install with conda": [[277, "install-with-conda"]], "Installation": [[277, null]], "Joint": [[28, null]], "Joint Rules": [[287, null]], "Joint Rules Components": [[287, "joint-rules-components"]], "Joint Types": [[287, "joint-types"]], "Joint.ToString": [[29, null]], "Joint.add_extensions": [[30, null]], "Joint.add_features": [[31, null]], "Joint.copy": [[32, null]], "Joint.create": [[33, null]], "Joint.from_json": [[34, null]], "Joint.from_jsonstring": [[35, null]], "Joint.get_face_most_ortho_to_beam": [[36, null]], "Joint.get_face_most_towards_beam": [[37, null]], "Joint.restore_beams_from_keys": [[38, null]], "Joint.sha256": [[39, null]], "Joint.to_json": [[40, null]], "Joint.to_jsonstring": [[41, null]], "Joint.validate_data": [[42, null]], "JointTopology": [[43, null]], "JointTopology.get_name": [[44, null]], "L-Butt": [[287, "l-butt"]], "L-HalfLap": [[287, "l-halflap"]], "L-Miter": [[287, "l-miter"]], "LButtJoint": [[45, null]], "LButtJoint.ToString": [[46, null]], "LButtJoint.add_extensions": [[47, null]], "LButtJoint.add_features": [[48, null]], "LButtJoint.copy": [[49, null]], "LButtJoint.create": [[50, null]], "LButtJoint.from_json": [[51, null]], "LButtJoint.from_jsonstring": [[52, null]], "LButtJoint.get_face_most_ortho_to_beam": [[53, null]], "LButtJoint.get_face_most_towards_beam": [[54, null]], "LButtJoint.restore_beams_from_keys": [[55, null]], "LButtJoint.sha256": [[56, null]], "LButtJoint.to_json": [[57, null]], "LButtJoint.to_jsonstring": [[58, null]], "LButtJoint.update_beam_roles": [[59, null]], "LButtJoint.validate_data": [[60, null]], "LHalfLapJoint": [[61, null]], "LHalfLapJoint.ToString": [[62, null]], "LHalfLapJoint.add_extensions": [[63, null]], "LHalfLapJoint.add_features": [[64, null]], "LHalfLapJoint.copy": [[65, null]], "LHalfLapJoint.create": [[66, null]], "LHalfLapJoint.from_json": [[67, null]], "LHalfLapJoint.from_jsonstring": [[68, null]], "LHalfLapJoint.get_cross_cutting_frame": [[69, null]], "LHalfLapJoint.get_face_most_ortho_to_beam": [[70, null]], "LHalfLapJoint.get_face_most_towards_beam": [[71, null]], "LHalfLapJoint.get_main_cutting_frame": [[72, null]], "LHalfLapJoint.restore_beams_from_keys": [[73, null]], "LHalfLapJoint.sha256": [[74, null]], "LHalfLapJoint.to_json": [[75, null]], "LHalfLapJoint.to_jsonstring": [[76, null]], "LHalfLapJoint.validate_data": [[77, null]], "LMiterFactory": [[203, null]], "LMiterFactory.apply_processings": [[204, null]], "LMiterJoint": [[78, null]], "LMiterJoint.ToString": [[79, null]], "LMiterJoint.add_extensions": [[80, null]], "LMiterJoint.add_features": [[81, null]], "LMiterJoint.copy": [[82, null]], "LMiterJoint.create": [[83, null]], "LMiterJoint.from_json": [[84, null]], "LMiterJoint.from_jsonstring": [[85, null]], "LMiterJoint.get_cutting_planes": [[86, null]], "LMiterJoint.get_face_most_ortho_to_beam": [[87, null]], "LMiterJoint.get_face_most_towards_beam": [[88, null]], "LMiterJoint.restore_beams_from_keys": [[89, null]], "LMiterJoint.sha256": [[90, null]], "LMiterJoint.to_json": [[91, null]], "LMiterJoint.to_jsonstring": [[92, null]], "LMiterJoint.validate_data": [[93, null]], "LapJoint": [[94, null]], "LapJoint.ToString": [[95, null]], "LapJoint.add_extensions": [[96, null]], "LapJoint.add_features": [[97, null]], "LapJoint.copy": [[98, null]], "LapJoint.create": [[99, null]], "LapJoint.from_json": [[100, null]], "LapJoint.from_jsonstring": [[101, null]], "LapJoint.get_cross_cutting_frame": [[102, null]], "LapJoint.get_face_most_ortho_to_beam": [[103, null]], "LapJoint.get_face_most_towards_beam": [[104, null]], "LapJoint.get_main_cutting_frame": [[105, null]], "LapJoint.restore_beams_from_keys": [[106, null]], "LapJoint.sha256": [[107, null]], "LapJoint.to_json": [[108, null]], "LapJoint.to_jsonstring": [[109, null]], "LapJoint.validate_data": [[110, null]], "License": [[278, null]], "Model": [[288, null]], "Packages": [[0, "packages"]], "Plugins": [[7, "plugins"]], "Show": [[289, null]], "Show Beam Face Index": [[289, "show-beam-face-index"]], "Show Beam Index": [[289, "show-beam-index"]], "Show Feature Errors": [[289, "show-feature-errors"]], "Show Joining Errors": [[289, "show-joining-errors"]], "Show Joint Types": [[289, "show-joint-types"]], "Show Surface Model Beam Types": [[289, "show-surface-model-beam-types"]], "Show Topology Types": [[289, "show-topology-types"]], "SimpleSequenceGenerator": [[261, null]], "Stable": [[277, "stable"]], "Standard Attributes": [[281, "standard-attributes"]], "Step": [[262, null]], "Step.ToString": [[263, null]], "Step.copy": [[264, null]], "Step.from_json": [[265, null]], "Step.from_jsonstring": [[266, null]], "Step.sha256": [[267, null]], "Step.to_json": [[268, null]], "Step.to_jsonstring": [[269, null]], "Step.transform": [[270, null]], "Step.validate_data": [[271, null]], "Summary Table": [[287, "summary-table"]], "Surface Model": [[283, "surface-model"]], "Surface Model Joint Override": [[287, "surface-model-joint-override"]], "Surface Model Options": [[283, "surface-model-options"]], "T-Butt": [[287, "t-butt"]], "T-HalfLap": [[287, "t-halflap"]], "TButtJoint": [[111, null]], "TButtJoint.ToString": [[112, null]], "TButtJoint.add_extensions": [[113, null]], "TButtJoint.add_features": [[114, null]], "TButtJoint.copy": [[115, null]], "TButtJoint.create": [[116, null]], "TButtJoint.from_json": [[117, null]], "TButtJoint.from_jsonstring": [[118, null]], "TButtJoint.get_face_most_ortho_to_beam": [[119, null]], "TButtJoint.get_face_most_towards_beam": [[120, null]], "TButtJoint.restore_beams_from_keys": [[121, null]], "TButtJoint.sha256": [[122, null]], "TButtJoint.to_json": [[123, null]], "TButtJoint.to_jsonstring": [[124, null]], "TButtJoint.validate_data": [[125, null]], "THalfLapJoint": [[126, null]], "THalfLapJoint.ToString": [[127, null]], "THalfLapJoint.add_extensions": [[128, null]], "THalfLapJoint.add_features": [[129, null]], "THalfLapJoint.copy": [[130, null]], "THalfLapJoint.create": [[131, null]], "THalfLapJoint.from_json": [[132, null]], "THalfLapJoint.from_jsonstring": [[133, null]], "THalfLapJoint.get_cross_cutting_frame": [[134, null]], "THalfLapJoint.get_face_most_ortho_to_beam": [[135, null]], "THalfLapJoint.get_face_most_towards_beam": [[136, null]], "THalfLapJoint.get_main_cutting_frame": [[137, null]], "THalfLapJoint.restore_beams_from_keys": [[138, null]], "THalfLapJoint.sha256": [[139, null]], "THalfLapJoint.to_json": [[140, null]], "THalfLapJoint.to_jsonstring": [[141, null]], "THalfLapJoint.validate_data": [[142, null]], "Table of Contents": [[276, "table-of-contents"]], "Timber Assembly Examples": [[274, "timber-assembly-examples"]], "TimberModel": [[205, null]], "TimberModel.ToString": [[206, null]], "TimberModel.add_element": [[207, null]], "TimberModel.add_elements": [[208, null]], "TimberModel.add_group": [[209, null]], "TimberModel.add_group_element": [[210, null]], "TimberModel.add_interaction": [[211, null]], "TimberModel.add_joint": [[212, null]], "TimberModel.add_material": [[213, null]], "TimberModel.assign_material": [[214, null]], "TimberModel.compute_aabb": [[215, null]], "TimberModel.compute_obb": [[216, null]], "TimberModel.copy": [[217, null]], "TimberModel.element_by_guid": [[218, null]], "TimberModel.elements": [[219, null]], "TimberModel.elements_connected_by": [[220, null]], "TimberModel.from_json": [[221, null]], "TimberModel.from_jsonstring": [[222, null]], "TimberModel.get_elements_in_group": [[223, null]], "TimberModel.has_element": [[224, null]], "TimberModel.has_group": [[225, null]], "TimberModel.has_interaction": [[226, null]], "TimberModel.has_material": [[227, null]], "TimberModel.interactions": [[228, null]], "TimberModel.materials": [[229, null]], "TimberModel.process_joinery": [[230, null]], "TimberModel.remove_element": [[231, null]], "TimberModel.remove_interaction": [[232, null]], "TimberModel.remove_joint": [[233, null]], "TimberModel.rotate": [[234, null]], "TimberModel.rotated": [[235, null]], "TimberModel.scale": [[236, null]], "TimberModel.scaled": [[237, null]], "TimberModel.set_topologies": [[238, null]], "TimberModel.sha256": [[239, null]], "TimberModel.to_json": [[240, null]], "TimberModel.to_jsonstring": [[241, null]], "TimberModel.transform": [[242, null]], "TimberModel.transform_numpy": [[243, null]], "TimberModel.transformed": [[244, null]], "TimberModel.transformed_numpy": [[245, null]], "TimberModel.translate": [[246, null]], "TimberModel.translated": [[247, null]], "TimberModel.validate_data": [[248, null]], "Topological Joint Rules": [[287, "topological-joint-rules"]], "Trim Feature": [[286, "trim-feature"]], "Utils": [[290, null]], "Workflow": [[291, null]], "Write BTLx": [[285, "write-btlx"]], "X-HalfLap": [[287, "x-halflap"]], "XHalfLapJoint": [[143, null]], "XHalfLapJoint.ToString": [[144, null]], "XHalfLapJoint.add_extensions": [[145, null]], "XHalfLapJoint.add_features": [[146, null]], "XHalfLapJoint.copy": [[147, null]], "XHalfLapJoint.create": [[148, null]], "XHalfLapJoint.from_json": [[149, null]], "XHalfLapJoint.from_jsonstring": [[150, null]], "XHalfLapJoint.get_cross_cutting_frame": [[151, null]], "XHalfLapJoint.get_face_most_ortho_to_beam": [[152, null]], "XHalfLapJoint.get_face_most_towards_beam": [[153, null]], "XHalfLapJoint.get_main_cutting_frame": [[154, null]], "XHalfLapJoint.restore_beams_from_keys": [[155, null]], "XHalfLapJoint.sha256": [[156, null]], "XHalfLapJoint.to_json": [[157, null]], "XHalfLapJoint.to_jsonstring": [[158, null]], "XHalfLapJoint.validate_data": [[159, null]], "compas_timber.connections": [[1, null]], "compas_timber.elements": [[2, null]], "compas_timber.fabrication": [[3, null]], "compas_timber.ghpython": [[4, null]], "compas_timber.model": [[5, null]], "compas_timber.planning": [[6, null]], "find_neighboring_beams": [[160, null], [272, null]], "rhino": [[7, null]]}, "docnames": ["api", "api/compas_timber.connections", "api/compas_timber.elements", "api/compas_timber.fabrication", "api/compas_timber.ghpython", "api/compas_timber.model", "api/compas_timber.planning", "api/compas_timber.rhino", "api/generated/compas_timber.connections.BeamJoinningError", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.FrenchRidgeLapJoint", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.ToString", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_extensions", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_features", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.check_geometry", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.copy", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.create", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_json", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.sha256", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_json", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.validate_data", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_extensions", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.from_jsonstring", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.to_jsonstring", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_extensions", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring", "api/generated/compas_timber.connections.LButtJoint.update_beam_roles", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LHalfLapJoint", "api/generated/compas_timber.connections.LHalfLapJoint.ToString", "api/generated/compas_timber.connections.LHalfLapJoint.add_extensions", "api/generated/compas_timber.connections.LHalfLapJoint.add_features", "api/generated/compas_timber.connections.LHalfLapJoint.copy", "api/generated/compas_timber.connections.LHalfLapJoint.create", "api/generated/compas_timber.connections.LHalfLapJoint.from_json", "api/generated/compas_timber.connections.LHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LHalfLapJoint.sha256", "api/generated/compas_timber.connections.LHalfLapJoint.to_json", "api/generated/compas_timber.connections.LHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_extensions", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.LapJoint", "api/generated/compas_timber.connections.LapJoint.ToString", "api/generated/compas_timber.connections.LapJoint.add_extensions", "api/generated/compas_timber.connections.LapJoint.add_features", "api/generated/compas_timber.connections.LapJoint.copy", "api/generated/compas_timber.connections.LapJoint.create", "api/generated/compas_timber.connections.LapJoint.from_json", "api/generated/compas_timber.connections.LapJoint.from_jsonstring", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LapJoint.sha256", "api/generated/compas_timber.connections.LapJoint.to_json", "api/generated/compas_timber.connections.LapJoint.to_jsonstring", "api/generated/compas_timber.connections.LapJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_extensions", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.THalfLapJoint", "api/generated/compas_timber.connections.THalfLapJoint.ToString", "api/generated/compas_timber.connections.THalfLapJoint.add_extensions", "api/generated/compas_timber.connections.THalfLapJoint.add_features", "api/generated/compas_timber.connections.THalfLapJoint.copy", "api/generated/compas_timber.connections.THalfLapJoint.create", "api/generated/compas_timber.connections.THalfLapJoint.from_json", "api/generated/compas_timber.connections.THalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.THalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.THalfLapJoint.sha256", "api/generated/compas_timber.connections.THalfLapJoint.to_json", "api/generated/compas_timber.connections.THalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.validate_data", "api/generated/compas_timber.connections.XHalfLapJoint", "api/generated/compas_timber.connections.XHalfLapJoint.ToString", "api/generated/compas_timber.connections.XHalfLapJoint.add_extensions", "api/generated/compas_timber.connections.XHalfLapJoint.add_features", "api/generated/compas_timber.connections.XHalfLapJoint.copy", "api/generated/compas_timber.connections.XHalfLapJoint.create", "api/generated/compas_timber.connections.XHalfLapJoint.from_json", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.XHalfLapJoint.sha256", "api/generated/compas_timber.connections.XHalfLapJoint.to_json", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data", "api/generated/compas_timber.connections.find_neighboring_beams", "api/generated/compas_timber.elements.Beam", "api/generated/compas_timber.elements.Beam.ToString", "api/generated/compas_timber.elements.Beam.add_blank_extension", "api/generated/compas_timber.elements.Beam.add_feature", "api/generated/compas_timber.elements.Beam.add_features", "api/generated/compas_timber.elements.Beam.compute_aabb", "api/generated/compas_timber.elements.Beam.compute_collision_mesh", "api/generated/compas_timber.elements.Beam.compute_geometry", "api/generated/compas_timber.elements.Beam.compute_obb", "api/generated/compas_timber.elements.Beam.compute_worldtransformation", "api/generated/compas_timber.elements.Beam.copy", "api/generated/compas_timber.elements.Beam.endpoint_closest_to_point", "api/generated/compas_timber.elements.Beam.extension_to_plane", "api/generated/compas_timber.elements.Beam.from_centerline", "api/generated/compas_timber.elements.Beam.from_endpoints", "api/generated/compas_timber.elements.Beam.from_json", "api/generated/compas_timber.elements.Beam.from_jsonstring", "api/generated/compas_timber.elements.Beam.opposing_side_index", "api/generated/compas_timber.elements.Beam.remove_blank_extension", "api/generated/compas_timber.elements.Beam.remove_features", "api/generated/compas_timber.elements.Beam.reset", "api/generated/compas_timber.elements.Beam.sha256", "api/generated/compas_timber.elements.Beam.side_as_surface", "api/generated/compas_timber.elements.Beam.to_json", "api/generated/compas_timber.elements.Beam.to_jsonstring", "api/generated/compas_timber.elements.Beam.transform", "api/generated/compas_timber.elements.Beam.transformed", "api/generated/compas_timber.elements.Beam.validate_data", "api/generated/compas_timber.fabrication.BTLx", "api/generated/compas_timber.fabrication.BTLx.btlx_string", "api/generated/compas_timber.fabrication.BTLx.process_model", "api/generated/compas_timber.fabrication.BTLx.register_joint", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints", "api/generated/compas_timber.fabrication.BTLxJackCut", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process", "api/generated/compas_timber.fabrication.BTLxProcess", "api/generated/compas_timber.fabrication.FrenchRidgeFactory", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings", "api/generated/compas_timber.fabrication.LMiterFactory", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings", "api/generated/compas_timber.model.TimberModel", "api/generated/compas_timber.model.TimberModel.ToString", "api/generated/compas_timber.model.TimberModel.add_element", "api/generated/compas_timber.model.TimberModel.add_elements", "api/generated/compas_timber.model.TimberModel.add_group", "api/generated/compas_timber.model.TimberModel.add_group_element", "api/generated/compas_timber.model.TimberModel.add_interaction", "api/generated/compas_timber.model.TimberModel.add_joint", "api/generated/compas_timber.model.TimberModel.add_material", "api/generated/compas_timber.model.TimberModel.assign_material", "api/generated/compas_timber.model.TimberModel.compute_aabb", "api/generated/compas_timber.model.TimberModel.compute_obb", "api/generated/compas_timber.model.TimberModel.copy", "api/generated/compas_timber.model.TimberModel.element_by_guid", "api/generated/compas_timber.model.TimberModel.elements", "api/generated/compas_timber.model.TimberModel.elements_connected_by", "api/generated/compas_timber.model.TimberModel.from_json", "api/generated/compas_timber.model.TimberModel.from_jsonstring", "api/generated/compas_timber.model.TimberModel.get_elements_in_group", "api/generated/compas_timber.model.TimberModel.has_element", "api/generated/compas_timber.model.TimberModel.has_group", "api/generated/compas_timber.model.TimberModel.has_interaction", "api/generated/compas_timber.model.TimberModel.has_material", "api/generated/compas_timber.model.TimberModel.interactions", "api/generated/compas_timber.model.TimberModel.materials", "api/generated/compas_timber.model.TimberModel.process_joinery", "api/generated/compas_timber.model.TimberModel.remove_element", "api/generated/compas_timber.model.TimberModel.remove_interaction", "api/generated/compas_timber.model.TimberModel.remove_joint", "api/generated/compas_timber.model.TimberModel.rotate", "api/generated/compas_timber.model.TimberModel.rotated", "api/generated/compas_timber.model.TimberModel.scale", "api/generated/compas_timber.model.TimberModel.scaled", "api/generated/compas_timber.model.TimberModel.set_topologies", "api/generated/compas_timber.model.TimberModel.sha256", "api/generated/compas_timber.model.TimberModel.to_json", "api/generated/compas_timber.model.TimberModel.to_jsonstring", "api/generated/compas_timber.model.TimberModel.transform", "api/generated/compas_timber.model.TimberModel.transform_numpy", "api/generated/compas_timber.model.TimberModel.transformed", "api/generated/compas_timber.model.TimberModel.transformed_numpy", "api/generated/compas_timber.model.TimberModel.translate", "api/generated/compas_timber.model.TimberModel.translated", "api/generated/compas_timber.model.TimberModel.validate_data", "api/generated/compas_timber.planning.Actor", "api/generated/compas_timber.planning.Actor.get_name", "api/generated/compas_timber.planning.BuildingPlan", "api/generated/compas_timber.planning.BuildingPlan.ToString", "api/generated/compas_timber.planning.BuildingPlan.add_step", "api/generated/compas_timber.planning.BuildingPlan.copy", "api/generated/compas_timber.planning.BuildingPlan.from_json", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.sha256", "api/generated/compas_timber.planning.BuildingPlan.to_json", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.validate_data", "api/generated/compas_timber.planning.SimpleSequenceGenerator", "api/generated/compas_timber.planning.Step", "api/generated/compas_timber.planning.Step.ToString", "api/generated/compas_timber.planning.Step.copy", "api/generated/compas_timber.planning.Step.from_json", "api/generated/compas_timber.planning.Step.from_jsonstring", "api/generated/compas_timber.planning.Step.sha256", "api/generated/compas_timber.planning.Step.to_json", "api/generated/compas_timber.planning.Step.to_jsonstring", "api/generated/compas_timber.planning.Step.transform", "api/generated/compas_timber.planning.Step.validate_data", "api/generated/compas_timber.rhino.find_neighboring_beams", "citing", "examples", "examples/create_joint", "index", "installation", "license", "tutorials", "tutorials/BTLx_contribution_guide", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beams", "tutorials/grasshopper/design", "tutorials/grasshopper/examples", "tutorials/grasshopper/fabrication", "tutorials/grasshopper/features", "tutorials/grasshopper/joint_rules", "tutorials/grasshopper/model", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api.rst", "api/compas_timber.connections.rst", "api/compas_timber.elements.rst", "api/compas_timber.fabrication.rst", "api/compas_timber.ghpython.rst", "api/compas_timber.model.rst", "api/compas_timber.planning.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.connections.BeamJoinningError.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.ToString.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_features.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.check_geometry.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.copy.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.create.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_json.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.sha256.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_json.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.validate_data.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_extensions.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.from_json.rst", "api/generated/compas_timber.connections.Joint.from_jsonstring.rst", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_json.rst", "api/generated/compas_timber.connections.Joint.to_jsonstring.rst", "api/generated/compas_timber.connections.Joint.validate_data.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_extensions.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.from_json.rst", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.to_json.rst", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.update_beam_roles.rst", "api/generated/compas_timber.connections.LButtJoint.validate_data.rst", "api/generated/compas_timber.connections.LHalfLapJoint.rst", "api/generated/compas_timber.connections.LHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.LHalfLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.LHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.LHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.LHalfLapJoint.create.rst", "api/generated/compas_timber.connections.LHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.LHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.LHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.LHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_extensions.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.from_json.rst", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_json.rst", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_data.rst", "api/generated/compas_timber.connections.LapJoint.rst", "api/generated/compas_timber.connections.LapJoint.ToString.rst", "api/generated/compas_timber.connections.LapJoint.add_extensions.rst", "api/generated/compas_timber.connections.LapJoint.add_features.rst", "api/generated/compas_timber.connections.LapJoint.copy.rst", "api/generated/compas_timber.connections.LapJoint.create.rst", "api/generated/compas_timber.connections.LapJoint.from_json.rst", "api/generated/compas_timber.connections.LapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LapJoint.sha256.rst", "api/generated/compas_timber.connections.LapJoint.to_json.rst", "api/generated/compas_timber.connections.LapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.validate_data.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_extensions.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.from_json.rst", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.to_json.rst", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.validate_data.rst", "api/generated/compas_timber.connections.THalfLapJoint.rst", "api/generated/compas_timber.connections.THalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.THalfLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.THalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.THalfLapJoint.copy.rst", "api/generated/compas_timber.connections.THalfLapJoint.create.rst", "api/generated/compas_timber.connections.THalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.THalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.THalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.THalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.THalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.THalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.THalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.rst", "api/generated/compas_timber.connections.XHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.XHalfLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.XHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.XHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.XHalfLapJoint.create.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.XHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.find_neighboring_beams.rst", "api/generated/compas_timber.elements.Beam.rst", "api/generated/compas_timber.elements.Beam.ToString.rst", "api/generated/compas_timber.elements.Beam.add_blank_extension.rst", "api/generated/compas_timber.elements.Beam.add_feature.rst", "api/generated/compas_timber.elements.Beam.add_features.rst", "api/generated/compas_timber.elements.Beam.compute_aabb.rst", "api/generated/compas_timber.elements.Beam.compute_collision_mesh.rst", "api/generated/compas_timber.elements.Beam.compute_geometry.rst", "api/generated/compas_timber.elements.Beam.compute_obb.rst", "api/generated/compas_timber.elements.Beam.compute_worldtransformation.rst", "api/generated/compas_timber.elements.Beam.copy.rst", "api/generated/compas_timber.elements.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.elements.Beam.extension_to_plane.rst", "api/generated/compas_timber.elements.Beam.from_centerline.rst", "api/generated/compas_timber.elements.Beam.from_endpoints.rst", "api/generated/compas_timber.elements.Beam.from_json.rst", "api/generated/compas_timber.elements.Beam.from_jsonstring.rst", "api/generated/compas_timber.elements.Beam.opposing_side_index.rst", "api/generated/compas_timber.elements.Beam.remove_blank_extension.rst", "api/generated/compas_timber.elements.Beam.remove_features.rst", "api/generated/compas_timber.elements.Beam.reset.rst", "api/generated/compas_timber.elements.Beam.sha256.rst", "api/generated/compas_timber.elements.Beam.side_as_surface.rst", "api/generated/compas_timber.elements.Beam.to_json.rst", "api/generated/compas_timber.elements.Beam.to_jsonstring.rst", "api/generated/compas_timber.elements.Beam.transform.rst", "api/generated/compas_timber.elements.Beam.transformed.rst", "api/generated/compas_timber.elements.Beam.validate_data.rst", "api/generated/compas_timber.fabrication.BTLx.rst", "api/generated/compas_timber.fabrication.BTLx.btlx_string.rst", "api/generated/compas_timber.fabrication.BTLx.process_model.rst", "api/generated/compas_timber.fabrication.BTLx.register_joint.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process.rst", "api/generated/compas_timber.fabrication.BTLxProcess.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LMiterFactory.rst", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings.rst", "api/generated/compas_timber.model.TimberModel.rst", "api/generated/compas_timber.model.TimberModel.ToString.rst", "api/generated/compas_timber.model.TimberModel.add_element.rst", "api/generated/compas_timber.model.TimberModel.add_elements.rst", "api/generated/compas_timber.model.TimberModel.add_group.rst", "api/generated/compas_timber.model.TimberModel.add_group_element.rst", "api/generated/compas_timber.model.TimberModel.add_interaction.rst", "api/generated/compas_timber.model.TimberModel.add_joint.rst", "api/generated/compas_timber.model.TimberModel.add_material.rst", "api/generated/compas_timber.model.TimberModel.assign_material.rst", "api/generated/compas_timber.model.TimberModel.compute_aabb.rst", "api/generated/compas_timber.model.TimberModel.compute_obb.rst", "api/generated/compas_timber.model.TimberModel.copy.rst", "api/generated/compas_timber.model.TimberModel.element_by_guid.rst", "api/generated/compas_timber.model.TimberModel.elements.rst", "api/generated/compas_timber.model.TimberModel.elements_connected_by.rst", "api/generated/compas_timber.model.TimberModel.from_json.rst", "api/generated/compas_timber.model.TimberModel.from_jsonstring.rst", "api/generated/compas_timber.model.TimberModel.get_elements_in_group.rst", "api/generated/compas_timber.model.TimberModel.has_element.rst", "api/generated/compas_timber.model.TimberModel.has_group.rst", "api/generated/compas_timber.model.TimberModel.has_interaction.rst", "api/generated/compas_timber.model.TimberModel.has_material.rst", "api/generated/compas_timber.model.TimberModel.interactions.rst", "api/generated/compas_timber.model.TimberModel.materials.rst", "api/generated/compas_timber.model.TimberModel.process_joinery.rst", "api/generated/compas_timber.model.TimberModel.remove_element.rst", "api/generated/compas_timber.model.TimberModel.remove_interaction.rst", "api/generated/compas_timber.model.TimberModel.remove_joint.rst", "api/generated/compas_timber.model.TimberModel.rotate.rst", "api/generated/compas_timber.model.TimberModel.rotated.rst", "api/generated/compas_timber.model.TimberModel.scale.rst", "api/generated/compas_timber.model.TimberModel.scaled.rst", "api/generated/compas_timber.model.TimberModel.set_topologies.rst", "api/generated/compas_timber.model.TimberModel.sha256.rst", "api/generated/compas_timber.model.TimberModel.to_json.rst", "api/generated/compas_timber.model.TimberModel.to_jsonstring.rst", "api/generated/compas_timber.model.TimberModel.transform.rst", "api/generated/compas_timber.model.TimberModel.transform_numpy.rst", "api/generated/compas_timber.model.TimberModel.transformed.rst", "api/generated/compas_timber.model.TimberModel.transformed_numpy.rst", "api/generated/compas_timber.model.TimberModel.translate.rst", "api/generated/compas_timber.model.TimberModel.translated.rst", "api/generated/compas_timber.model.TimberModel.validate_data.rst", "api/generated/compas_timber.planning.Actor.rst", "api/generated/compas_timber.planning.Actor.get_name.rst", "api/generated/compas_timber.planning.BuildingPlan.rst", "api/generated/compas_timber.planning.BuildingPlan.ToString.rst", "api/generated/compas_timber.planning.BuildingPlan.add_step.rst", "api/generated/compas_timber.planning.BuildingPlan.copy.rst", "api/generated/compas_timber.planning.BuildingPlan.from_json.rst", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.sha256.rst", "api/generated/compas_timber.planning.BuildingPlan.to_json.rst", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.validate_data.rst", "api/generated/compas_timber.planning.SimpleSequenceGenerator.rst", "api/generated/compas_timber.planning.Step.rst", "api/generated/compas_timber.planning.Step.ToString.rst", "api/generated/compas_timber.planning.Step.copy.rst", "api/generated/compas_timber.planning.Step.from_json.rst", "api/generated/compas_timber.planning.Step.from_jsonstring.rst", "api/generated/compas_timber.planning.Step.sha256.rst", "api/generated/compas_timber.planning.Step.to_json.rst", "api/generated/compas_timber.planning.Step.to_jsonstring.rst", "api/generated/compas_timber.planning.Step.transform.rst", "api/generated/compas_timber.planning.Step.validate_data.rst", "api/generated/compas_timber.rhino.find_neighboring_beams.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "license.rst", "tutorials.rst", "tutorials/BTLx_contribution_guide.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beams.rst", "tutorials/grasshopper/design.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/fabrication.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joint_rules.rst", "tutorials/grasshopper/model.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "indexentries": {"actor (class in compas_timber.planning)": [[249, "compas_timber.planning.Actor", false]], "add_blank_extension() (compas_timber.elements.beam method)": [[163, "compas_timber.elements.Beam.add_blank_extension", false]], "add_element() (compas_timber.model.timbermodel method)": [[207, "compas_timber.model.TimberModel.add_element", false]], "add_elements() (compas_timber.model.timbermodel method)": [[208, "compas_timber.model.TimberModel.add_elements", false]], "add_extensions() (compas_timber.connections.frenchridgelapjoint method)": [[14, "compas_timber.connections.FrenchRidgeLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.joint method)": [[30, "compas_timber.connections.Joint.add_extensions", false]], "add_extensions() (compas_timber.connections.lapjoint method)": [[96, "compas_timber.connections.LapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lbuttjoint method)": [[47, "compas_timber.connections.LButtJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lhalflapjoint method)": [[63, "compas_timber.connections.LHalfLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lmiterjoint method)": [[80, "compas_timber.connections.LMiterJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tbuttjoint method)": [[113, "compas_timber.connections.TButtJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.thalflapjoint method)": [[128, "compas_timber.connections.THalfLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.xhalflapjoint method)": [[145, "compas_timber.connections.XHalfLapJoint.add_extensions", false]], "add_feature() (compas_timber.elements.beam method)": [[164, "compas_timber.elements.Beam.add_feature", false]], "add_features() (compas_timber.connections.frenchridgelapjoint method)": [[15, "compas_timber.connections.FrenchRidgeLapJoint.add_features", false]], "add_features() (compas_timber.connections.joint method)": [[31, "compas_timber.connections.Joint.add_features", false]], "add_features() (compas_timber.connections.lapjoint method)": [[97, "compas_timber.connections.LapJoint.add_features", false]], "add_features() (compas_timber.connections.lbuttjoint method)": [[48, "compas_timber.connections.LButtJoint.add_features", false]], "add_features() (compas_timber.connections.lhalflapjoint method)": [[64, "compas_timber.connections.LHalfLapJoint.add_features", false]], "add_features() (compas_timber.connections.lmiterjoint method)": [[81, "compas_timber.connections.LMiterJoint.add_features", false]], "add_features() (compas_timber.connections.tbuttjoint method)": [[114, "compas_timber.connections.TButtJoint.add_features", false]], "add_features() (compas_timber.connections.thalflapjoint method)": [[129, "compas_timber.connections.THalfLapJoint.add_features", false]], "add_features() (compas_timber.connections.xhalflapjoint method)": [[146, "compas_timber.connections.XHalfLapJoint.add_features", false]], "add_features() (compas_timber.elements.beam method)": [[165, "compas_timber.elements.Beam.add_features", false]], "add_group() (compas_timber.model.timbermodel method)": [[209, "compas_timber.model.TimberModel.add_group", false]], "add_group_element() (compas_timber.model.timbermodel method)": [[210, "compas_timber.model.TimberModel.add_group_element", false]], "add_interaction() (compas_timber.model.timbermodel method)": [[211, "compas_timber.model.TimberModel.add_interaction", false]], "add_joint() (compas_timber.model.timbermodel method)": [[212, "compas_timber.model.TimberModel.add_joint", false]], "add_material() (compas_timber.model.timbermodel method)": [[213, "compas_timber.model.TimberModel.add_material", false]], "add_step() (compas_timber.planning.buildingplan method)": [[253, "compas_timber.planning.BuildingPlan.add_step", false]], "apply_processings() (compas_timber.fabrication.frenchridgefactory class method)": [[202, "compas_timber.fabrication.FrenchRidgeFactory.apply_processings", false]], "apply_processings() (compas_timber.fabrication.lmiterfactory class method)": [[204, "compas_timber.fabrication.LMiterFactory.apply_processings", false]], "assign_material() (compas_timber.model.timbermodel method)": [[214, "compas_timber.model.TimberModel.assign_material", false]], "beam (class in compas_timber.elements)": [[161, "compas_timber.elements.Beam", false]], "beamjoinningerror": [[8, "compas_timber.connections.BeamJoinningError", false]], "btlx (class in compas_timber.fabrication)": [[189, "compas_timber.fabrication.BTLx", false]], "btlx_string() (compas_timber.fabrication.btlx method)": [[190, "compas_timber.fabrication.BTLx.btlx_string", false]], "btlxfrenchridgelap (class in compas_timber.fabrication)": [[193, "compas_timber.fabrication.BTLxFrenchRidgeLap", false]], "btlxjackcut (class in compas_timber.fabrication)": [[197, "compas_timber.fabrication.BTLxJackCut", false]], "btlxprocess (class in compas_timber.fabrication)": [[200, "compas_timber.fabrication.BTLxProcess", false]], "buildingplan (class in compas_timber.planning)": [[251, "compas_timber.planning.BuildingPlan", false]], "check_geometry() (compas_timber.connections.frenchridgelapjoint method)": [[16, "compas_timber.connections.FrenchRidgeLapJoint.check_geometry", false]], "compute_aabb() (compas_timber.elements.beam method)": [[166, "compas_timber.elements.Beam.compute_aabb", false]], "compute_aabb() (compas_timber.model.timbermodel method)": [[215, "compas_timber.model.TimberModel.compute_aabb", false]], "compute_collision_mesh() (compas_timber.elements.beam method)": [[167, "compas_timber.elements.Beam.compute_collision_mesh", false]], "compute_geometry() (compas_timber.elements.beam method)": [[168, "compas_timber.elements.Beam.compute_geometry", false]], "compute_obb() (compas_timber.elements.beam method)": [[169, "compas_timber.elements.Beam.compute_obb", false]], "compute_obb() (compas_timber.model.timbermodel method)": [[216, "compas_timber.model.TimberModel.compute_obb", false]], "compute_worldtransformation() (compas_timber.elements.beam method)": [[170, "compas_timber.elements.Beam.compute_worldtransformation", false]], "connectionsolver (class in compas_timber.connections)": [[9, "compas_timber.connections.ConnectionSolver", false]], "copy() (compas_timber.connections.frenchridgelapjoint method)": [[17, "compas_timber.connections.FrenchRidgeLapJoint.copy", false]], "copy() (compas_timber.connections.joint method)": [[32, "compas_timber.connections.Joint.copy", false]], "copy() (compas_timber.connections.lapjoint method)": [[98, "compas_timber.connections.LapJoint.copy", false]], "copy() (compas_timber.connections.lbuttjoint method)": [[49, "compas_timber.connections.LButtJoint.copy", false]], "copy() (compas_timber.connections.lhalflapjoint method)": [[65, "compas_timber.connections.LHalfLapJoint.copy", false]], "copy() (compas_timber.connections.lmiterjoint method)": [[82, "compas_timber.connections.LMiterJoint.copy", false]], "copy() (compas_timber.connections.tbuttjoint method)": [[115, "compas_timber.connections.TButtJoint.copy", false]], "copy() (compas_timber.connections.thalflapjoint method)": [[130, "compas_timber.connections.THalfLapJoint.copy", false]], "copy() (compas_timber.connections.xhalflapjoint method)": [[147, "compas_timber.connections.XHalfLapJoint.copy", false]], "copy() (compas_timber.elements.beam method)": [[171, "compas_timber.elements.Beam.copy", false]], "copy() (compas_timber.model.timbermodel method)": [[217, "compas_timber.model.TimberModel.copy", false]], "copy() (compas_timber.planning.buildingplan method)": [[254, "compas_timber.planning.BuildingPlan.copy", false]], "copy() (compas_timber.planning.step method)": [[264, "compas_timber.planning.Step.copy", false]], "create() (compas_timber.connections.frenchridgelapjoint class method)": [[18, "compas_timber.connections.FrenchRidgeLapJoint.create", false]], "create() (compas_timber.connections.joint class method)": [[33, "compas_timber.connections.Joint.create", false]], "create() (compas_timber.connections.lapjoint class method)": [[99, "compas_timber.connections.LapJoint.create", false]], "create() (compas_timber.connections.lbuttjoint class method)": [[50, "compas_timber.connections.LButtJoint.create", false]], "create() (compas_timber.connections.lhalflapjoint class method)": [[66, "compas_timber.connections.LHalfLapJoint.create", false]], "create() (compas_timber.connections.lmiterjoint class method)": [[83, "compas_timber.connections.LMiterJoint.create", false]], "create() (compas_timber.connections.tbuttjoint class method)": [[116, "compas_timber.connections.TButtJoint.create", false]], "create() (compas_timber.connections.thalflapjoint class method)": [[131, "compas_timber.connections.THalfLapJoint.create", false]], "create() (compas_timber.connections.xhalflapjoint class method)": [[148, "compas_timber.connections.XHalfLapJoint.create", false]], "create_process() (compas_timber.fabrication.btlxfrenchridgelap class method)": [[194, "compas_timber.fabrication.BTLxFrenchRidgeLap.create_process", false]], "create_process() (compas_timber.fabrication.btlxjackcut class method)": [[198, "compas_timber.fabrication.BTLxJackCut.create_process", false]], "element_by_guid() (compas_timber.model.timbermodel method)": [[218, "compas_timber.model.TimberModel.element_by_guid", false]], "elements() (compas_timber.model.timbermodel method)": [[219, "compas_timber.model.TimberModel.elements", false]], "elements_connected_by() (compas_timber.model.timbermodel method)": [[220, "compas_timber.model.TimberModel.elements_connected_by", false]], "endpoint_closest_to_point() (compas_timber.elements.beam method)": [[172, "compas_timber.elements.Beam.endpoint_closest_to_point", false]], "extension_to_plane() (compas_timber.elements.beam method)": [[173, "compas_timber.elements.Beam.extension_to_plane", false]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[10, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs", false]], "find_neighboring_beams() (in module compas_timber.connections)": [[160, "compas_timber.connections.find_neighboring_beams", false]], "find_neighboring_beams() (in module compas_timber.rhino)": [[272, "compas_timber.rhino.find_neighboring_beams", false]], "find_topology() (compas_timber.connections.connectionsolver method)": [[11, "compas_timber.connections.ConnectionSolver.find_topology", false]], "frenchridgefactory (class in compas_timber.fabrication)": [[201, "compas_timber.fabrication.FrenchRidgeFactory", false]], "frenchridgelapjoint (class in compas_timber.connections)": [[12, "compas_timber.connections.FrenchRidgeLapJoint", false]], "from_centerline() (compas_timber.elements.beam class method)": [[174, "compas_timber.elements.Beam.from_centerline", false]], "from_endpoints() (compas_timber.elements.beam class method)": [[175, "compas_timber.elements.Beam.from_endpoints", false]], "from_json() (compas_timber.connections.frenchridgelapjoint class method)": [[19, "compas_timber.connections.FrenchRidgeLapJoint.from_json", false]], "from_json() (compas_timber.connections.joint class method)": [[34, "compas_timber.connections.Joint.from_json", false]], "from_json() (compas_timber.connections.lapjoint class method)": [[100, "compas_timber.connections.LapJoint.from_json", false]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[51, "compas_timber.connections.LButtJoint.from_json", false]], "from_json() (compas_timber.connections.lhalflapjoint class method)": [[67, "compas_timber.connections.LHalfLapJoint.from_json", false]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[84, "compas_timber.connections.LMiterJoint.from_json", false]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[117, "compas_timber.connections.TButtJoint.from_json", false]], "from_json() (compas_timber.connections.thalflapjoint class method)": [[132, "compas_timber.connections.THalfLapJoint.from_json", false]], "from_json() (compas_timber.connections.xhalflapjoint class method)": [[149, "compas_timber.connections.XHalfLapJoint.from_json", false]], "from_json() (compas_timber.elements.beam class method)": [[176, "compas_timber.elements.Beam.from_json", false]], "from_json() (compas_timber.model.timbermodel class method)": [[221, "compas_timber.model.TimberModel.from_json", false]], "from_json() (compas_timber.planning.buildingplan class method)": [[255, "compas_timber.planning.BuildingPlan.from_json", false]], "from_json() (compas_timber.planning.step class method)": [[265, "compas_timber.planning.Step.from_json", false]], "from_jsonstring() (compas_timber.connections.frenchridgelapjoint class method)": [[20, "compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.joint class method)": [[35, "compas_timber.connections.Joint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lapjoint class method)": [[101, "compas_timber.connections.LapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[52, "compas_timber.connections.LButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lhalflapjoint class method)": [[68, "compas_timber.connections.LHalfLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[85, "compas_timber.connections.LMiterJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[118, "compas_timber.connections.TButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.thalflapjoint class method)": [[133, "compas_timber.connections.THalfLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.xhalflapjoint class method)": [[150, "compas_timber.connections.XHalfLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.beam class method)": [[177, "compas_timber.elements.Beam.from_jsonstring", false]], "from_jsonstring() (compas_timber.model.timbermodel class method)": [[222, "compas_timber.model.TimberModel.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.buildingplan class method)": [[256, "compas_timber.planning.BuildingPlan.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.step class method)": [[266, "compas_timber.planning.Step.from_jsonstring", false]], "generate_process() (compas_timber.fabrication.btlxjackcut method)": [[199, "compas_timber.fabrication.BTLxJackCut.generate_process", false]], "get_cross_cutting_frame() (compas_timber.connections.lapjoint method)": [[102, "compas_timber.connections.LapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[69, "compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[134, "compas_timber.connections.THalfLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[151, "compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame", false]], "get_cutting_planes() (compas_timber.connections.lmiterjoint method)": [[86, "compas_timber.connections.LMiterJoint.get_cutting_planes", false]], "get_elements_in_group() (compas_timber.model.timbermodel method)": [[223, "compas_timber.model.TimberModel.get_elements_in_group", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.frenchridgelapjoint static method)": [[21, "compas_timber.connections.FrenchRidgeLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.joint static method)": [[36, "compas_timber.connections.Joint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lapjoint static method)": [[103, "compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lbuttjoint static method)": [[53, "compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lhalflapjoint static method)": [[70, "compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lmiterjoint static method)": [[87, "compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tbuttjoint static method)": [[119, "compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.thalflapjoint static method)": [[135, "compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.xhalflapjoint static method)": [[152, "compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.frenchridgelapjoint static method)": [[22, "compas_timber.connections.FrenchRidgeLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.joint static method)": [[37, "compas_timber.connections.Joint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lapjoint static method)": [[104, "compas_timber.connections.LapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lbuttjoint static method)": [[54, "compas_timber.connections.LButtJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lhalflapjoint static method)": [[71, "compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lmiterjoint static method)": [[88, "compas_timber.connections.LMiterJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tbuttjoint static method)": [[120, "compas_timber.connections.TButtJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.thalflapjoint static method)": [[136, "compas_timber.connections.THalfLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.xhalflapjoint static method)": [[153, "compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam", false]], "get_main_cutting_frame() (compas_timber.connections.lapjoint method)": [[105, "compas_timber.connections.LapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[72, "compas_timber.connections.LHalfLapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[137, "compas_timber.connections.THalfLapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[154, "compas_timber.connections.XHalfLapJoint.get_main_cutting_frame", false]], "get_name() (compas_timber.connections.jointtopology class method)": [[44, "compas_timber.connections.JointTopology.get_name", false]], "get_name() (compas_timber.planning.actor class method)": [[250, "compas_timber.planning.Actor.get_name", false]], "get_params() (compas_timber.fabrication.btlxfrenchridgelap method)": [[195, "compas_timber.fabrication.BTLxFrenchRidgeLap.get_params", false]], "has_element() (compas_timber.model.timbermodel method)": [[224, "compas_timber.model.TimberModel.has_element", false]], "has_group() (compas_timber.model.timbermodel method)": [[225, "compas_timber.model.TimberModel.has_group", false]], "has_interaction() (compas_timber.model.timbermodel method)": [[226, "compas_timber.model.TimberModel.has_interaction", false]], "has_material() (compas_timber.model.timbermodel method)": [[227, "compas_timber.model.TimberModel.has_material", false]], "interactions() (compas_timber.model.timbermodel method)": [[228, "compas_timber.model.TimberModel.interactions", false]], "joint (class in compas_timber.connections)": [[28, "compas_timber.connections.Joint", false]], "jointtopology (class in compas_timber.connections)": [[43, "compas_timber.connections.JointTopology", false]], "lapjoint (class in compas_timber.connections)": [[94, "compas_timber.connections.LapJoint", false]], "lbuttjoint (class in compas_timber.connections)": [[45, "compas_timber.connections.LButtJoint", false]], "lhalflapjoint (class in compas_timber.connections)": [[61, "compas_timber.connections.LHalfLapJoint", false]], "lmiterfactory (class in compas_timber.fabrication)": [[203, "compas_timber.fabrication.LMiterFactory", false]], "lmiterjoint (class in compas_timber.connections)": [[78, "compas_timber.connections.LMiterJoint", false]], "materials() (compas_timber.model.timbermodel method)": [[229, "compas_timber.model.TimberModel.materials", false]], "opposing_side_index() (compas_timber.elements.beam method)": [[178, "compas_timber.elements.Beam.opposing_side_index", false]], "process_joinery() (compas_timber.model.timbermodel method)": [[230, "compas_timber.model.TimberModel.process_joinery", false]], "process_joints() (compas_timber.fabrication.btlxfrenchridgelap method)": [[196, "compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints", false]], "process_model() (compas_timber.fabrication.btlx method)": [[191, "compas_timber.fabrication.BTLx.process_model", false]], "register_joint() (compas_timber.fabrication.btlx class method)": [[192, "compas_timber.fabrication.BTLx.register_joint", false]], "remove_blank_extension() (compas_timber.elements.beam method)": [[179, "compas_timber.elements.Beam.remove_blank_extension", false]], "remove_element() (compas_timber.model.timbermodel method)": [[231, "compas_timber.model.TimberModel.remove_element", false]], "remove_features() (compas_timber.elements.beam method)": [[180, "compas_timber.elements.Beam.remove_features", false]], "remove_interaction() (compas_timber.model.timbermodel method)": [[232, "compas_timber.model.TimberModel.remove_interaction", false]], "remove_joint() (compas_timber.model.timbermodel method)": [[233, "compas_timber.model.TimberModel.remove_joint", false]], "reset() (compas_timber.elements.beam method)": [[181, "compas_timber.elements.Beam.reset", false]], "restore_beams_from_keys() (compas_timber.connections.frenchridgelapjoint method)": [[23, "compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[38, "compas_timber.connections.Joint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lapjoint method)": [[106, "compas_timber.connections.LapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[55, "compas_timber.connections.LButtJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lhalflapjoint method)": [[73, "compas_timber.connections.LHalfLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[89, "compas_timber.connections.LMiterJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[121, "compas_timber.connections.TButtJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.thalflapjoint method)": [[138, "compas_timber.connections.THalfLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.xhalflapjoint method)": [[155, "compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", false]], "rotate() (compas_timber.model.timbermodel method)": [[234, "compas_timber.model.TimberModel.rotate", false]], "rotated() (compas_timber.model.timbermodel method)": [[235, "compas_timber.model.TimberModel.rotated", false]], "scale() (compas_timber.model.timbermodel method)": [[236, "compas_timber.model.TimberModel.scale", false]], "scaled() (compas_timber.model.timbermodel method)": [[237, "compas_timber.model.TimberModel.scaled", false]], "set_topologies() (compas_timber.model.timbermodel method)": [[238, "compas_timber.model.TimberModel.set_topologies", false]], "sha256() (compas_timber.connections.frenchridgelapjoint method)": [[24, "compas_timber.connections.FrenchRidgeLapJoint.sha256", false]], "sha256() (compas_timber.connections.joint method)": [[39, "compas_timber.connections.Joint.sha256", false]], "sha256() (compas_timber.connections.lapjoint method)": [[107, "compas_timber.connections.LapJoint.sha256", false]], "sha256() (compas_timber.connections.lbuttjoint method)": [[56, "compas_timber.connections.LButtJoint.sha256", false]], "sha256() (compas_timber.connections.lhalflapjoint method)": [[74, "compas_timber.connections.LHalfLapJoint.sha256", false]], "sha256() (compas_timber.connections.lmiterjoint method)": [[90, "compas_timber.connections.LMiterJoint.sha256", false]], "sha256() (compas_timber.connections.tbuttjoint method)": [[122, "compas_timber.connections.TButtJoint.sha256", false]], "sha256() (compas_timber.connections.thalflapjoint method)": [[139, "compas_timber.connections.THalfLapJoint.sha256", false]], "sha256() (compas_timber.connections.xhalflapjoint method)": [[156, "compas_timber.connections.XHalfLapJoint.sha256", false]], "sha256() (compas_timber.elements.beam method)": [[182, "compas_timber.elements.Beam.sha256", false]], "sha256() (compas_timber.model.timbermodel method)": [[239, "compas_timber.model.TimberModel.sha256", false]], "sha256() (compas_timber.planning.buildingplan method)": [[257, "compas_timber.planning.BuildingPlan.sha256", false]], "sha256() (compas_timber.planning.step method)": [[267, "compas_timber.planning.Step.sha256", false]], "side_as_surface() (compas_timber.elements.beam method)": [[183, "compas_timber.elements.Beam.side_as_surface", false]], "simplesequencegenerator (class in compas_timber.planning)": [[261, "compas_timber.planning.SimpleSequenceGenerator", false]], "step (class in compas_timber.planning)": [[262, "compas_timber.planning.Step", false]], "tbuttjoint (class in compas_timber.connections)": [[111, "compas_timber.connections.TButtJoint", false]], "thalflapjoint (class in compas_timber.connections)": [[126, "compas_timber.connections.THalfLapJoint", false]], "timbermodel (class in compas_timber.model)": [[205, "compas_timber.model.TimberModel", false]], "to_json() (compas_timber.connections.frenchridgelapjoint method)": [[25, "compas_timber.connections.FrenchRidgeLapJoint.to_json", false]], "to_json() (compas_timber.connections.joint method)": [[40, "compas_timber.connections.Joint.to_json", false]], "to_json() (compas_timber.connections.lapjoint method)": [[108, "compas_timber.connections.LapJoint.to_json", false]], "to_json() (compas_timber.connections.lbuttjoint method)": [[57, "compas_timber.connections.LButtJoint.to_json", false]], "to_json() (compas_timber.connections.lhalflapjoint method)": [[75, "compas_timber.connections.LHalfLapJoint.to_json", false]], "to_json() (compas_timber.connections.lmiterjoint method)": [[91, "compas_timber.connections.LMiterJoint.to_json", false]], "to_json() (compas_timber.connections.tbuttjoint method)": [[123, "compas_timber.connections.TButtJoint.to_json", false]], "to_json() (compas_timber.connections.thalflapjoint method)": [[140, "compas_timber.connections.THalfLapJoint.to_json", false]], "to_json() (compas_timber.connections.xhalflapjoint method)": [[157, "compas_timber.connections.XHalfLapJoint.to_json", false]], "to_json() (compas_timber.elements.beam method)": [[184, "compas_timber.elements.Beam.to_json", false]], "to_json() (compas_timber.model.timbermodel method)": [[240, "compas_timber.model.TimberModel.to_json", false]], "to_json() (compas_timber.planning.buildingplan method)": [[258, "compas_timber.planning.BuildingPlan.to_json", false]], "to_json() (compas_timber.planning.step method)": [[268, "compas_timber.planning.Step.to_json", false]], "to_jsonstring() (compas_timber.connections.frenchridgelapjoint method)": [[26, "compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.joint method)": [[41, "compas_timber.connections.Joint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lapjoint method)": [[109, "compas_timber.connections.LapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lbuttjoint method)": [[58, "compas_timber.connections.LButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lhalflapjoint method)": [[76, "compas_timber.connections.LHalfLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lmiterjoint method)": [[92, "compas_timber.connections.LMiterJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tbuttjoint method)": [[124, "compas_timber.connections.TButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.thalflapjoint method)": [[141, "compas_timber.connections.THalfLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.xhalflapjoint method)": [[158, "compas_timber.connections.XHalfLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.beam method)": [[185, "compas_timber.elements.Beam.to_jsonstring", false]], "to_jsonstring() (compas_timber.model.timbermodel method)": [[241, "compas_timber.model.TimberModel.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.buildingplan method)": [[259, "compas_timber.planning.BuildingPlan.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.step method)": [[269, "compas_timber.planning.Step.to_jsonstring", false]], "tostring() (compas_timber.connections.frenchridgelapjoint method)": [[13, "compas_timber.connections.FrenchRidgeLapJoint.ToString", false]], "tostring() (compas_timber.connections.joint method)": [[29, "compas_timber.connections.Joint.ToString", false]], "tostring() (compas_timber.connections.lapjoint method)": [[95, "compas_timber.connections.LapJoint.ToString", false]], "tostring() (compas_timber.connections.lbuttjoint method)": [[46, "compas_timber.connections.LButtJoint.ToString", false]], "tostring() (compas_timber.connections.lhalflapjoint method)": [[62, "compas_timber.connections.LHalfLapJoint.ToString", false]], "tostring() (compas_timber.connections.lmiterjoint method)": [[79, "compas_timber.connections.LMiterJoint.ToString", false]], "tostring() (compas_timber.connections.tbuttjoint method)": [[112, "compas_timber.connections.TButtJoint.ToString", false]], "tostring() (compas_timber.connections.thalflapjoint method)": [[127, "compas_timber.connections.THalfLapJoint.ToString", false]], "tostring() (compas_timber.connections.xhalflapjoint method)": [[144, "compas_timber.connections.XHalfLapJoint.ToString", false]], "tostring() (compas_timber.elements.beam method)": [[162, "compas_timber.elements.Beam.ToString", false]], "tostring() (compas_timber.model.timbermodel method)": [[206, "compas_timber.model.TimberModel.ToString", false]], "tostring() (compas_timber.planning.buildingplan method)": [[252, "compas_timber.planning.BuildingPlan.ToString", false]], "tostring() (compas_timber.planning.step method)": [[263, "compas_timber.planning.Step.ToString", false]], "transform() (compas_timber.elements.beam method)": [[186, "compas_timber.elements.Beam.transform", false]], "transform() (compas_timber.model.timbermodel method)": [[242, "compas_timber.model.TimberModel.transform", false]], "transform() (compas_timber.planning.step method)": [[270, "compas_timber.planning.Step.transform", false]], "transform_numpy() (compas_timber.model.timbermodel method)": [[243, "compas_timber.model.TimberModel.transform_numpy", false]], "transformed() (compas_timber.elements.beam method)": [[187, "compas_timber.elements.Beam.transformed", false]], "transformed() (compas_timber.model.timbermodel method)": [[244, "compas_timber.model.TimberModel.transformed", false]], "transformed_numpy() (compas_timber.model.timbermodel method)": [[245, "compas_timber.model.TimberModel.transformed_numpy", false]], "translate() (compas_timber.model.timbermodel method)": [[246, "compas_timber.model.TimberModel.translate", false]], "translated() (compas_timber.model.timbermodel method)": [[247, "compas_timber.model.TimberModel.translated", false]], "update_beam_roles() (compas_timber.connections.lbuttjoint method)": [[59, "compas_timber.connections.LButtJoint.update_beam_roles", false]], "validate_data() (compas_timber.connections.frenchridgelapjoint class method)": [[27, "compas_timber.connections.FrenchRidgeLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.joint class method)": [[42, "compas_timber.connections.Joint.validate_data", false]], "validate_data() (compas_timber.connections.lapjoint class method)": [[110, "compas_timber.connections.LapJoint.validate_data", false]], "validate_data() (compas_timber.connections.lbuttjoint class method)": [[60, "compas_timber.connections.LButtJoint.validate_data", false]], "validate_data() (compas_timber.connections.lhalflapjoint class method)": [[77, "compas_timber.connections.LHalfLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.lmiterjoint class method)": [[93, "compas_timber.connections.LMiterJoint.validate_data", false]], "validate_data() (compas_timber.connections.tbuttjoint class method)": [[125, "compas_timber.connections.TButtJoint.validate_data", false]], "validate_data() (compas_timber.connections.thalflapjoint class method)": [[142, "compas_timber.connections.THalfLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.xhalflapjoint class method)": [[159, "compas_timber.connections.XHalfLapJoint.validate_data", false]], "validate_data() (compas_timber.elements.beam class method)": [[188, "compas_timber.elements.Beam.validate_data", false]], "validate_data() (compas_timber.model.timbermodel class method)": [[248, "compas_timber.model.TimberModel.validate_data", false]], "validate_data() (compas_timber.planning.buildingplan class method)": [[260, "compas_timber.planning.BuildingPlan.validate_data", false]], "validate_data() (compas_timber.planning.step class method)": [[271, "compas_timber.planning.Step.validate_data", false]], "xhalflapjoint (class in compas_timber.connections)": [[143, "compas_timber.connections.XHalfLapJoint", false]]}, "objects": {"compas_timber.connections": [[8, 0, 1, "", "BeamJoinningError"], [9, 1, 1, "", "ConnectionSolver"], [12, 1, 1, "", "FrenchRidgeLapJoint"], [28, 1, 1, "", "Joint"], [43, 1, 1, "", "JointTopology"], [45, 1, 1, "", "LButtJoint"], [61, 1, 1, "", "LHalfLapJoint"], [78, 1, 1, "", "LMiterJoint"], [94, 1, 1, "", "LapJoint"], [111, 1, 1, "", "TButtJoint"], [126, 1, 1, "", "THalfLapJoint"], [143, 1, 1, "", "XHalfLapJoint"], [160, 3, 1, "", "find_neighboring_beams"]], "compas_timber.connections.ConnectionSolver": [[10, 2, 1, "", "find_intersecting_pairs"], [11, 2, 1, "", "find_topology"]], "compas_timber.connections.FrenchRidgeLapJoint": [[13, 2, 1, "", "ToString"], [14, 2, 1, "", "add_extensions"], [15, 2, 1, "", "add_features"], [16, 2, 1, "", "check_geometry"], [17, 2, 1, "", "copy"], [18, 2, 1, "", "create"], [19, 2, 1, "", "from_json"], [20, 2, 1, "", "from_jsonstring"], [21, 2, 1, "", "get_face_most_ortho_to_beam"], [22, 2, 1, "", "get_face_most_towards_beam"], [23, 2, 1, "", "restore_beams_from_keys"], [24, 2, 1, "", "sha256"], [25, 2, 1, "", "to_json"], [26, 2, 1, "", "to_jsonstring"], [27, 2, 1, "", "validate_data"]], "compas_timber.connections.Joint": [[29, 2, 1, "", "ToString"], [30, 2, 1, "", "add_extensions"], [31, 2, 1, "", "add_features"], [32, 2, 1, "", "copy"], [33, 2, 1, "", "create"], [34, 2, 1, "", "from_json"], [35, 2, 1, "", "from_jsonstring"], [36, 2, 1, "", "get_face_most_ortho_to_beam"], [37, 2, 1, "", "get_face_most_towards_beam"], [38, 2, 1, "", "restore_beams_from_keys"], [39, 2, 1, "", "sha256"], [40, 2, 1, "", "to_json"], [41, 2, 1, "", "to_jsonstring"], [42, 2, 1, "", "validate_data"]], "compas_timber.connections.JointTopology": [[44, 2, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[46, 2, 1, "", "ToString"], [47, 2, 1, "", "add_extensions"], [48, 2, 1, "", "add_features"], [49, 2, 1, "", "copy"], [50, 2, 1, "", "create"], [51, 2, 1, "", "from_json"], [52, 2, 1, "", "from_jsonstring"], [53, 2, 1, "", "get_face_most_ortho_to_beam"], [54, 2, 1, "", "get_face_most_towards_beam"], [55, 2, 1, "", "restore_beams_from_keys"], [56, 2, 1, "", "sha256"], [57, 2, 1, "", "to_json"], [58, 2, 1, "", "to_jsonstring"], [59, 2, 1, "", "update_beam_roles"], [60, 2, 1, "", "validate_data"]], "compas_timber.connections.LHalfLapJoint": [[62, 2, 1, "", "ToString"], [63, 2, 1, "", "add_extensions"], [64, 2, 1, "", "add_features"], [65, 2, 1, "", "copy"], [66, 2, 1, "", "create"], [67, 2, 1, "", "from_json"], [68, 2, 1, "", "from_jsonstring"], [69, 2, 1, "", "get_cross_cutting_frame"], [70, 2, 1, "", "get_face_most_ortho_to_beam"], [71, 2, 1, "", "get_face_most_towards_beam"], [72, 2, 1, "", "get_main_cutting_frame"], [73, 2, 1, "", "restore_beams_from_keys"], [74, 2, 1, "", "sha256"], [75, 2, 1, "", "to_json"], [76, 2, 1, "", "to_jsonstring"], [77, 2, 1, "", "validate_data"]], "compas_timber.connections.LMiterJoint": [[79, 2, 1, "", "ToString"], [80, 2, 1, "", "add_extensions"], [81, 2, 1, "", "add_features"], [82, 2, 1, "", "copy"], [83, 2, 1, "", "create"], [84, 2, 1, "", "from_json"], [85, 2, 1, "", "from_jsonstring"], [86, 2, 1, "", "get_cutting_planes"], [87, 2, 1, "", "get_face_most_ortho_to_beam"], [88, 2, 1, "", "get_face_most_towards_beam"], [89, 2, 1, "", "restore_beams_from_keys"], [90, 2, 1, "", "sha256"], [91, 2, 1, "", "to_json"], [92, 2, 1, "", "to_jsonstring"], [93, 2, 1, "", "validate_data"]], "compas_timber.connections.LapJoint": [[95, 2, 1, "", "ToString"], [96, 2, 1, "", "add_extensions"], [97, 2, 1, "", "add_features"], [98, 2, 1, "", "copy"], [99, 2, 1, "", "create"], [100, 2, 1, "", "from_json"], [101, 2, 1, "", "from_jsonstring"], [102, 2, 1, "", "get_cross_cutting_frame"], [103, 2, 1, "", "get_face_most_ortho_to_beam"], [104, 2, 1, "", "get_face_most_towards_beam"], [105, 2, 1, "", "get_main_cutting_frame"], [106, 2, 1, "", "restore_beams_from_keys"], [107, 2, 1, "", "sha256"], [108, 2, 1, "", "to_json"], [109, 2, 1, "", "to_jsonstring"], [110, 2, 1, "", "validate_data"]], "compas_timber.connections.TButtJoint": [[112, 2, 1, "", "ToString"], [113, 2, 1, "", "add_extensions"], [114, 2, 1, "", "add_features"], [115, 2, 1, "", "copy"], [116, 2, 1, "", "create"], [117, 2, 1, "", "from_json"], [118, 2, 1, "", "from_jsonstring"], [119, 2, 1, "", "get_face_most_ortho_to_beam"], [120, 2, 1, "", "get_face_most_towards_beam"], [121, 2, 1, "", "restore_beams_from_keys"], [122, 2, 1, "", "sha256"], [123, 2, 1, "", "to_json"], [124, 2, 1, "", "to_jsonstring"], [125, 2, 1, "", "validate_data"]], "compas_timber.connections.THalfLapJoint": [[127, 2, 1, "", "ToString"], [128, 2, 1, "", "add_extensions"], [129, 2, 1, "", "add_features"], [130, 2, 1, "", "copy"], [131, 2, 1, "", "create"], [132, 2, 1, "", "from_json"], [133, 2, 1, "", "from_jsonstring"], [134, 2, 1, "", "get_cross_cutting_frame"], [135, 2, 1, "", "get_face_most_ortho_to_beam"], [136, 2, 1, "", "get_face_most_towards_beam"], [137, 2, 1, "", "get_main_cutting_frame"], [138, 2, 1, "", "restore_beams_from_keys"], [139, 2, 1, "", "sha256"], [140, 2, 1, "", "to_json"], [141, 2, 1, "", "to_jsonstring"], [142, 2, 1, "", "validate_data"]], "compas_timber.connections.XHalfLapJoint": [[144, 2, 1, "", "ToString"], [145, 2, 1, "", "add_extensions"], [146, 2, 1, "", "add_features"], [147, 2, 1, "", "copy"], [148, 2, 1, "", "create"], [149, 2, 1, "", "from_json"], [150, 2, 1, "", "from_jsonstring"], [151, 2, 1, "", "get_cross_cutting_frame"], [152, 2, 1, "", "get_face_most_ortho_to_beam"], [153, 2, 1, "", "get_face_most_towards_beam"], [154, 2, 1, "", "get_main_cutting_frame"], [155, 2, 1, "", "restore_beams_from_keys"], [156, 2, 1, "", "sha256"], [157, 2, 1, "", "to_json"], [158, 2, 1, "", "to_jsonstring"], [159, 2, 1, "", "validate_data"]], "compas_timber.elements": [[161, 1, 1, "", "Beam"]], "compas_timber.elements.Beam": [[162, 2, 1, "", "ToString"], [163, 2, 1, "", "add_blank_extension"], [164, 2, 1, "", "add_feature"], [165, 2, 1, "", "add_features"], [166, 2, 1, "", "compute_aabb"], [167, 2, 1, "", "compute_collision_mesh"], [168, 2, 1, "", "compute_geometry"], [169, 2, 1, "", "compute_obb"], [170, 2, 1, "", "compute_worldtransformation"], [171, 2, 1, "", "copy"], [172, 2, 1, "", "endpoint_closest_to_point"], [173, 2, 1, "", "extension_to_plane"], [174, 2, 1, "", "from_centerline"], [175, 2, 1, "", "from_endpoints"], [176, 2, 1, "", "from_json"], [177, 2, 1, "", "from_jsonstring"], [178, 2, 1, "", "opposing_side_index"], [179, 2, 1, "", "remove_blank_extension"], [180, 2, 1, "", "remove_features"], [181, 2, 1, "", "reset"], [182, 2, 1, "", "sha256"], [183, 2, 1, "", "side_as_surface"], [184, 2, 1, "", "to_json"], [185, 2, 1, "", "to_jsonstring"], [186, 2, 1, "", "transform"], [187, 2, 1, "", "transformed"], [188, 2, 1, "", "validate_data"]], "compas_timber.fabrication": [[189, 1, 1, "", "BTLx"], [193, 1, 1, "", "BTLxFrenchRidgeLap"], [197, 1, 1, "", "BTLxJackCut"], [200, 1, 1, "", "BTLxProcess"], [201, 1, 1, "", "FrenchRidgeFactory"], [203, 1, 1, "", "LMiterFactory"]], "compas_timber.fabrication.BTLx": [[190, 2, 1, "", "btlx_string"], [191, 2, 1, "", "process_model"], [192, 2, 1, "", "register_joint"]], "compas_timber.fabrication.BTLxFrenchRidgeLap": [[194, 2, 1, "", "create_process"], [195, 2, 1, "", "get_params"], [196, 2, 1, "", "process_joints"]], "compas_timber.fabrication.BTLxJackCut": [[198, 2, 1, "", "create_process"], [199, 2, 1, "", "generate_process"]], "compas_timber.fabrication.FrenchRidgeFactory": [[202, 2, 1, "", "apply_processings"]], "compas_timber.fabrication.LMiterFactory": [[204, 2, 1, "", "apply_processings"]], "compas_timber.model": [[205, 1, 1, "", "TimberModel"]], "compas_timber.model.TimberModel": [[206, 2, 1, "", "ToString"], [207, 2, 1, "", "add_element"], [208, 2, 1, "", "add_elements"], [209, 2, 1, "", "add_group"], [210, 2, 1, "", "add_group_element"], [211, 2, 1, "", "add_interaction"], [212, 2, 1, "", "add_joint"], [213, 2, 1, "", "add_material"], [214, 2, 1, "", "assign_material"], [215, 2, 1, "", "compute_aabb"], [216, 2, 1, "", "compute_obb"], [217, 2, 1, "", "copy"], [218, 2, 1, "", "element_by_guid"], [219, 2, 1, "", "elements"], [220, 2, 1, "", "elements_connected_by"], [221, 2, 1, "", "from_json"], [222, 2, 1, "", "from_jsonstring"], [223, 2, 1, "", "get_elements_in_group"], [224, 2, 1, "", "has_element"], [225, 2, 1, "", "has_group"], [226, 2, 1, "", "has_interaction"], [227, 2, 1, "", "has_material"], [228, 2, 1, "", "interactions"], [229, 2, 1, "", "materials"], [230, 2, 1, "", "process_joinery"], [231, 2, 1, "", "remove_element"], [232, 2, 1, "", "remove_interaction"], [233, 2, 1, "", "remove_joint"], [234, 2, 1, "", "rotate"], [235, 2, 1, "", "rotated"], [236, 2, 1, "", "scale"], [237, 2, 1, "", "scaled"], [238, 2, 1, "", "set_topologies"], [239, 2, 1, "", "sha256"], [240, 2, 1, "", "to_json"], [241, 2, 1, "", "to_jsonstring"], [242, 2, 1, "", "transform"], [243, 2, 1, "", "transform_numpy"], [244, 2, 1, "", "transformed"], [245, 2, 1, "", "transformed_numpy"], [246, 2, 1, "", "translate"], [247, 2, 1, "", "translated"], [248, 2, 1, "", "validate_data"]], "compas_timber.planning": [[249, 1, 1, "", "Actor"], [251, 1, 1, "", "BuildingPlan"], [261, 1, 1, "", "SimpleSequenceGenerator"], [262, 1, 1, "", "Step"]], "compas_timber.planning.Actor": [[250, 2, 1, "", "get_name"]], "compas_timber.planning.BuildingPlan": [[252, 2, 1, "", "ToString"], [253, 2, 1, "", "add_step"], [254, 2, 1, "", "copy"], [255, 2, 1, "", "from_json"], [256, 2, 1, "", "from_jsonstring"], [257, 2, 1, "", "sha256"], [258, 2, 1, "", "to_json"], [259, 2, 1, "", "to_jsonstring"], [260, 2, 1, "", "validate_data"]], "compas_timber.planning.Step": [[263, 2, 1, "", "ToString"], [264, 2, 1, "", "copy"], [265, 2, 1, "", "from_json"], [266, 2, 1, "", "from_jsonstring"], [267, 2, 1, "", "sha256"], [268, 2, 1, "", "to_json"], [269, 2, 1, "", "to_jsonstring"], [270, 2, 1, "", "transform"], [271, 2, 1, "", "validate_data"]], "compas_timber.rhino": [[272, 3, 1, "", "find_neighboring_beams"]]}, "objnames": {"0": ["py", "exception", "Python exception"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:exception", "1": "py:class", "2": "py:method", "3": "py:function"}, "terms": {"": [12, 14, 15, 21, 22, 27, 30, 31, 36, 37, 42, 53, 54, 60, 61, 64, 70, 71, 77, 87, 88, 93, 96, 97, 103, 104, 110, 119, 120, 125, 129, 135, 136, 142, 145, 146, 152, 153, 159, 161, 172, 174, 175, 188, 210, 248, 260, 271, 281, 282, 290], "0": [10, 21, 24, 36, 39, 53, 56, 61, 70, 74, 87, 90, 94, 103, 107, 119, 122, 126, 135, 139, 143, 152, 156, 160, 161, 166, 169, 178, 182, 183, 239, 257, 267, 272, 275, 277, 282], "02": 278, "06": 11, "1": [22, 24, 37, 39, 54, 56, 61, 71, 74, 88, 90, 94, 104, 107, 120, 122, 126, 136, 139, 143, 153, 156, 161, 182, 239, 257, 267, 275, 280, 282, 291], "10": [273, 277], "100": 210, "17": 278, "1e": 11, "2": [161, 275, 280, 291], "200": 210, "2020": 278, "2022": 273, "2023": 273, "3": [161, 277, 280, 291], "300": 210, "3000": 210, "3d": 276, "4": [161, 275, 280], "5": [61, 94, 126, 143, 161, 178, 183], "5000": 210, "5281": 273, "6": 161, "7": 277, "7934267": 273, "A": [8, 10, 12, 18, 28, 33, 50, 61, 66, 83, 99, 116, 131, 148, 160, 161, 164, 174, 175, 189, 202, 204, 205, 207, 213, 223, 227, 273, 278, 282, 283, 287], "AND": 278, "AS": 278, "As": 273, "At": 276, "BE": 278, "BUT": 278, "By": [287, 291], "FOR": 278, "For": [44, 160, 230, 250, 276, 290], "IN": 278, "If": [11, 17, 19, 20, 21, 22, 24, 25, 26, 32, 34, 35, 36, 37, 39, 40, 41, 45, 47, 49, 51, 52, 53, 54, 56, 57, 58, 61, 63, 65, 67, 68, 70, 71, 74, 75, 76, 80, 82, 84, 85, 87, 88, 90, 91, 92, 94, 98, 100, 101, 103, 104, 107, 108, 109, 113, 115, 117, 118, 119, 120, 122, 123, 124, 126, 128, 130, 132, 133, 135, 136, 139, 140, 141, 143, 147, 149, 150, 152, 153, 156, 157, 158, 168, 171, 176, 177, 180, 182, 184, 185, 207, 208, 210, 211, 214, 217, 221, 222, 239, 240, 241, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 272, 273, 282, 283, 287, 288], "In": [160, 276, 277], "It": [196, 276, 279, 281, 282, 287, 288, 290], "NO": 278, "NOT": 278, "OF": 278, "OR": 278, "Of": [21, 22, 36, 37, 53, 54, 70, 71, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153], "One": [44, 250, 262], "THE": 278, "TO": 278, "The": [7, 8, 12, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 40, 41, 42, 45, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 65, 66, 67, 68, 70, 71, 75, 76, 77, 82, 83, 84, 85, 87, 88, 91, 92, 93, 94, 98, 99, 100, 101, 103, 104, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 130, 131, 132, 133, 135, 136, 140, 141, 142, 143, 147, 148, 149, 150, 152, 153, 157, 158, 159, 160, 161, 163, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 192, 193, 197, 200, 202, 204, 205, 207, 208, 209, 210, 211, 212, 214, 217, 218, 220, 221, 222, 223, 224, 225, 226, 230, 231, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 254, 255, 256, 258, 259, 260, 264, 265, 266, 268, 269, 271, 272, 278, 279, 281, 282, 286, 287, 288, 290, 291], "Then": 279, "There": [274, 281, 287, 291], "These": [281, 287], "To": [38, 277, 279, 280, 288, 291], "WITH": 278, "_": 281, "__from_data__": [27, 42, 60, 77, 93, 110, 125, 142, 159, 188, 248, 260, 271], "__init__": 280, "aabb": [160, 161, 166], "abl": [14, 15, 30, 31, 64, 96, 97, 129, 145, 146], "about": [8, 276], "abov": [278, 287], "abstract": 94, "accord": [161, 281], "acknowledg": 273, "action": 278, "activ": [276, 277, 282, 288, 290], "actor": [262, 276], "actual": 172, "ad": [18, 28, 33, 50, 66, 83, 99, 116, 131, 148, 161, 165, 207, 208, 209, 210, 272, 283], "add": [14, 15, 30, 31, 47, 48, 63, 64, 80, 81, 96, 97, 113, 114, 128, 129, 145, 146, 163, 164, 165, 207, 208, 209, 210, 211, 212, 213, 230, 279, 280, 288, 290, 291], "add_beam": 275, "add_el": 210, "addit": [10, 28, 209, 279, 281, 282, 286], "adjac": [18, 33, 50, 66, 83, 99, 116, 131, 148], "adjust": 290, "affect": [14, 15, 30, 31, 64, 96, 97, 129, 145, 146], "after": [23, 55, 73, 89, 106, 121, 138, 155], "against": [27, 42, 60, 77, 93, 110, 125, 142, 159, 188, 248, 260, 271], "aleksandra": 273, "algorithm": [24, 39, 56, 74, 90, 107, 122, 139, 156, 160, 182, 239, 257, 267], "align": [16, 160, 161, 166, 215, 279, 290], "all": [21, 22, 36, 37, 53, 54, 70, 71, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153, 173, 180, 181, 196, 205, 219, 223, 228, 229, 230, 242, 272, 278, 281, 283, 287, 289], "allow": [18, 33, 50, 61, 66, 83, 94, 99, 116, 126, 131, 143, 148, 173, 205, 262, 283], "along": [111, 126, 143, 161, 287], "alreadi": [207, 210], "also": [161, 273, 276, 279, 281, 282, 287], "amount": [160, 163, 173, 272], "an": [8, 10, 12, 17, 18, 19, 20, 25, 26, 27, 32, 33, 34, 35, 40, 41, 42, 45, 49, 50, 51, 52, 57, 58, 60, 61, 65, 66, 67, 68, 75, 76, 77, 78, 82, 83, 84, 85, 91, 92, 93, 94, 98, 99, 100, 101, 108, 109, 110, 111, 115, 116, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 140, 141, 142, 143, 147, 148, 149, 150, 157, 158, 159, 161, 171, 176, 177, 184, 185, 188, 195, 199, 207, 210, 211, 212, 214, 217, 221, 222, 226, 231, 240, 241, 248, 249, 254, 255, 256, 258, 259, 260, 264, 265, 266, 268, 269, 271, 273, 274, 276, 277, 278, 279, 281, 282, 287], "analysi": 276, "angl": [78, 193, 234, 235, 287], "ani": [25, 26, 27, 40, 41, 42, 57, 58, 60, 75, 76, 77, 91, 92, 93, 108, 109, 110, 123, 124, 125, 140, 141, 142, 157, 158, 159, 184, 185, 188, 240, 241, 248, 258, 259, 260, 268, 269, 271, 274, 278, 286, 287, 291], "anna": 273, "anoth": [111, 126, 143], "apart": 10, "api": [276, 279], "apolinarska": 273, "append": [200, 280], "appli": [8, 14, 15, 30, 31, 64, 96, 97, 129, 145, 146, 186, 187, 193, 200, 202, 204, 223, 242, 280, 287, 291], "applic": 289, "ar": [10, 11, 13, 16, 18, 21, 22, 29, 33, 36, 37, 38, 46, 50, 53, 54, 62, 66, 70, 71, 79, 83, 87, 88, 95, 99, 103, 104, 112, 116, 119, 120, 127, 131, 135, 136, 144, 148, 152, 153, 160, 162, 200, 206, 211, 214, 252, 262, 263, 274, 280, 281, 282, 285, 286, 287, 288, 290, 291], "argument": 209, "aris": 278, "around": 282, "as_str": [24, 39, 56, 74, 90, 107, 122, 139, 156, 182, 239, 257, 267], "assembl": 262, "assembli": [275, 276, 283, 289], "assemli": 23, "assign": [205, 207, 214, 287, 290], "associ": [12, 38, 45, 61, 78, 94, 111, 126, 143, 193, 262, 278], "attach": [21, 22, 36, 37, 53, 54, 70, 71, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153], "attempt": 289, "attr": [200, 209], "attr1nam": 281, "attr1value_attr2nam": 281, "attr2valu": 281, "attribut": [8, 12, 28, 43, 45, 61, 78, 94, 111, 161, 189, 193, 200, 205, 209, 261, 262, 276, 279, 280, 282], "author": [273, 278], "autom": 279, "automat": [47, 48, 63, 80, 81, 113, 114, 128, 290], "avail": 160, "avoid": [38, 166, 169], "axi": [160, 161, 166, 174, 175, 215, 234, 235, 282, 286, 290], "b": [211, 226, 232], "backend": 276, "bake": 279, "bakewithboxmap": 290, "base": [8, 9, 12, 28, 43, 45, 59, 61, 78, 94, 111, 126, 143, 161, 168, 170, 189, 193, 197, 200, 201, 203, 205, 230, 234, 235, 249, 251, 261, 262, 288, 289, 291], "basic": 276, "beam": [8, 9, 10, 11, 12, 14, 15, 18, 21, 22, 23, 28, 30, 31, 33, 36, 37, 38, 45, 47, 48, 50, 53, 54, 55, 59, 61, 63, 64, 66, 70, 71, 73, 78, 80, 81, 83, 87, 88, 89, 94, 96, 97, 99, 103, 104, 106, 111, 113, 114, 116, 119, 120, 121, 126, 128, 129, 131, 135, 136, 138, 143, 145, 146, 148, 152, 153, 155, 160, 193, 197, 205, 210, 212, 218, 230, 272, 275, 276, 279, 281, 286, 287, 288, 290, 291], "beam_a": [11, 12, 21, 22, 36, 37, 53, 54, 70, 71, 78, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153, 210], "beam_a_kei": 205, "beam_b": [11, 12, 21, 22, 36, 37, 53, 54, 70, 71, 78, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153], "beam_b_kei": 205, "beam_width": 283, "beamjoinningerror": [14, 15, 30, 31, 47, 63, 64, 80, 96, 97, 113, 128, 129, 145, 146, 276], "becaus": 287, "been": [18, 33, 50, 66, 83, 99, 116, 131, 148, 207, 262], "befor": [18, 33, 50, 66, 83, 99, 116, 131, 148, 207], "being": 276, "belong": [18, 33, 50, 66, 83, 99, 116, 131, 148], "between": [61, 78, 94, 126, 143, 205, 211, 226, 228, 232, 281, 283, 287, 291], "birdsmouth": 287, "bisector": [78, 287], "bit": 283, "bitmap": 290, "blank": [161, 163, 179, 230, 282], "blender": 274, "bool": [10, 17, 21, 22, 24, 25, 26, 32, 36, 37, 39, 40, 41, 45, 49, 53, 54, 56, 57, 58, 61, 65, 70, 71, 74, 75, 76, 82, 87, 88, 90, 91, 92, 94, 98, 103, 104, 107, 108, 109, 115, 119, 120, 122, 123, 124, 126, 130, 135, 136, 139, 140, 141, 143, 147, 152, 153, 156, 157, 158, 168, 171, 182, 184, 185, 193, 217, 224, 225, 226, 227, 239, 240, 241, 254, 257, 258, 259, 262, 264, 267, 268, 269], "boolean": [279, 283, 286, 288], "both": [12, 48, 81, 114, 211, 214], "bottom": [12, 23, 193, 287], "bound": [160, 161, 166, 169, 215, 216, 272], "box": [160, 161, 166, 169, 215, 216, 262, 272, 279, 282], "brep": [168, 276, 290], "brepdrillholefeatur": 286, "brepsubtractionfeatur": 286, "btlx": [161, 193, 200, 276, 279], "btlx_2_1_0": 280, "btlx_process": [200, 280], "btlx_string": 189, "btlxfrenchridgelap": 276, "btlxjackcut": [200, 276], "btlxjoint": 280, "btlxpart": [189, 193, 197, 200, 202, 204, 280], "btlxprocess": [276, 280], "build": [251, 261, 262, 277, 291], "buildingplan": [261, 276], "built": [276, 279], "butt": [45, 111, 283], "byte": [24, 39, 56, 74, 90, 107, 122, 139, 156, 182, 239, 257, 267], "c": [277, 278], "cad": [262, 274], "calcul": [8, 14, 15, 21, 22, 30, 31, 36, 37, 47, 53, 54, 63, 64, 70, 71, 80, 87, 88, 96, 97, 103, 104, 113, 119, 120, 128, 129, 135, 136, 145, 146, 152, 153, 205, 230, 238], "call": [18, 33, 38, 47, 48, 50, 63, 66, 80, 81, 83, 99, 113, 114, 116, 128, 131, 148, 200, 280, 282], "callabl": 223, "can": [8, 27, 42, 60, 77, 93, 110, 125, 142, 159, 188, 200, 207, 248, 251, 260, 262, 271, 274, 279, 280, 282, 287, 291], "cannot": 282, "canva": 287, "care": 291, "casa": 273, "case": [283, 288], "categori": [281, 282, 291], "cd": 277, "center": [21, 22, 36, 37, 53, 54, 70, 71, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153, 205, 273], "center_of_mass": 205, "centerlin": [21, 22, 36, 37, 53, 54, 70, 71, 78, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153, 161, 172, 174, 175, 279, 281, 282, 290], "centerline_end": 161, "centerline_start": 161, "centr": 287, "centrelin": 282, "chang": 287, "charg": 278, "check": [16, 224, 225, 272, 276], "checkstandardattribut": 281, "chen": 273, "chosen": [21, 22, 36, 37, 53, 54, 70, 71, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153], "circular": 38, "cite": 276, "cl": [17, 32, 49, 65, 82, 98, 115, 130, 147, 171, 217, 254, 264], "claim": 278, "class": [9, 12, 13, 28, 29, 43, 45, 46, 61, 62, 78, 79, 94, 95, 111, 112, 126, 127, 143, 144, 161, 162, 189, 192, 193, 197, 200, 201, 203, 205, 206, 212, 242, 249, 251, 252, 261, 262, 263, 276, 280], "classmethod": [10, 18, 19, 20, 27, 33, 34, 35, 42, 44, 50, 51, 52, 60, 66, 67, 68, 77, 83, 84, 85, 93, 99, 100, 101, 110, 116, 117, 118, 125, 131, 132, 133, 142, 148, 149, 150, 159, 174, 175, 176, 177, 188, 192, 194, 198, 202, 204, 221, 222, 248, 250, 255, 256, 260, 265, 266, 271], "clean": 287, "click": 287, "clone": 277, "closer": 172, "closest": [21, 22, 36, 37, 53, 54, 70, 71, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153, 283], "code": [18, 33, 50, 66, 83, 99, 116, 131, 148, 274, 276], "collect": [251, 272, 288], "collis": 167, "colon": 281, "com": [273, 277, 280], "combin": 200, "common": 94, "compa": [17, 19, 20, 24, 32, 34, 35, 39, 49, 51, 52, 56, 65, 67, 68, 74, 82, 84, 85, 90, 98, 100, 101, 107, 115, 117, 118, 122, 130, 132, 133, 139, 147, 149, 150, 156, 161, 167, 168, 169, 170, 171, 176, 177, 182, 186, 187, 215, 216, 217, 221, 222, 234, 235, 239, 242, 246, 247, 254, 255, 256, 257, 262, 264, 265, 266, 267, 273, 279, 283, 285, 289], "compact": [25, 26, 40, 41, 57, 58, 75, 76, 91, 92, 108, 109, 123, 124, 140, 141, 157, 158, 184, 185, 240, 241, 258, 259, 268, 269], "comparison": [24, 39, 56, 74, 90, 107, 122, 139, 156, 182, 239, 257, 267], "compas_model": [187, 210, 220, 223, 225, 261], "compas_rhino": 277, "compas_timb": [0, 8, 9, 12, 18, 28, 33, 38, 43, 45, 50, 61, 66, 78, 83, 94, 99, 111, 116, 126, 131, 143, 148, 160, 161, 189, 192, 193, 197, 200, 201, 203, 205, 210, 249, 251, 261, 262, 272, 273, 276, 277], "compat": [12, 13, 29, 45, 46, 61, 62, 78, 79, 95, 111, 112, 126, 127, 143, 144, 160, 162, 206, 252, 263], "compet": 273, "compil": 277, "complet": [61, 94, 126, 143], "complex": 276, "compon": [277, 281, 282, 283, 285, 286, 288, 291], "componen": 279, "compos": 288, "comput": [11, 24, 39, 56, 74, 90, 107, 122, 139, 156, 166, 167, 168, 169, 170, 182, 215, 216, 239, 257, 267], "computation": 288, "concaten": 281, "concept": [274, 279], "concret": 38, "condit": 278, "connect": [0, 8, 9, 12, 13, 18, 28, 29, 33, 38, 43, 45, 46, 50, 61, 62, 66, 78, 79, 83, 94, 95, 99, 111, 112, 116, 126, 127, 131, 143, 144, 148, 160, 162, 202, 204, 206, 220, 252, 263, 276, 278, 287, 288], "connectionsolv": [238, 276], "consid": [10, 11, 287], "consist": 11, "construct": [19, 20, 27, 34, 35, 42, 51, 52, 60, 67, 68, 77, 84, 85, 93, 100, 101, 110, 117, 118, 125, 132, 133, 142, 149, 150, 159, 176, 177, 188, 221, 222, 248, 255, 256, 260, 265, 266, 271, 276, 283], "contain": [7, 8, 10, 12, 18, 19, 20, 21, 22, 33, 34, 35, 36, 37, 50, 51, 52, 53, 54, 66, 67, 68, 70, 71, 83, 84, 85, 87, 88, 99, 100, 101, 103, 104, 116, 117, 118, 119, 120, 131, 132, 133, 135, 136, 148, 149, 150, 152, 153, 160, 161, 176, 177, 205, 207, 210, 219, 221, 222, 224, 227, 229, 242, 251, 255, 256, 262, 265, 266, 272], "content": 285, "context": 7, "continu": 276, "contract": 278, "contribut": [276, 279], "contributor": 273, "control": [24, 39, 56, 74, 90, 107, 122, 139, 156, 182, 239, 257, 267], "convent": 282, "convers": [13, 29, 46, 62, 79, 95, 112, 127, 144, 162, 206, 252, 263], "convert": [13, 25, 26, 29, 40, 41, 46, 57, 58, 62, 75, 76, 79, 91, 92, 95, 108, 109, 112, 123, 124, 127, 140, 141, 144, 157, 158, 162, 184, 185, 206, 240, 241, 252, 258, 259, 263, 268, 269], "coordin": [161, 170, 282], "copi": [187, 235, 237, 244, 245, 247, 278], "copy_guid": [17, 32, 49, 65, 82, 98, 115, 130, 147, 171, 217, 254, 264], "copyright": 278, "corner": 287, "correct": [19, 20, 34, 35, 51, 52, 67, 68, 84, 85, 100, 101, 117, 118, 132, 133, 149, 150, 176, 177, 221, 222, 255, 256, 265, 266], "correctli": 281, "correspond": [161, 172, 192, 281, 282, 290], "could": [47, 63, 80, 113, 128, 249], "cover": 200, "cpython": [13, 29, 46, 62, 79, 95, 112, 127, 144, 162, 206, 252, 263], "crate": 287, "creat": [12, 16, 28, 45, 47, 48, 61, 63, 78, 80, 81, 94, 111, 113, 114, 126, 128, 143, 174, 175, 187, 192, 193, 201, 203, 274, 276, 277, 279, 280, 281, 282, 283, 285, 287, 288, 291], "creategeometri": [283, 288], "criteria": 281, "cross": [11, 38, 45, 55, 59, 61, 73, 89, 94, 106, 111, 121, 126, 138, 143, 155, 161, 174, 175, 282, 283, 287], "cross_beam": [45, 61, 94, 111, 126, 143, 275], "cross_beam_kei": 61, "current": [17, 32, 49, 65, 82, 98, 115, 130, 147, 171, 217, 254, 264, 276], "curv": 282, "custom": 276, "custom_dimens": 283, "cut": [45, 61, 94, 126, 143, 197, 279, 282, 286, 287, 288], "cut_plane_bia": [61, 94, 126, 143, 287], "cutoff": 287, "cylind": 262, "damag": 278, "data": [17, 19, 20, 24, 25, 26, 27, 32, 34, 35, 39, 40, 41, 42, 49, 51, 52, 56, 57, 58, 60, 65, 67, 68, 74, 75, 76, 77, 82, 84, 85, 90, 91, 92, 93, 98, 100, 101, 107, 108, 109, 110, 115, 117, 118, 122, 123, 124, 125, 130, 132, 133, 139, 140, 141, 142, 147, 149, 150, 156, 157, 158, 159, 171, 176, 177, 182, 184, 185, 188, 189, 217, 221, 222, 239, 240, 241, 243, 244, 245, 248, 251, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 285, 289], "datastructur": [24, 39, 56, 74, 90, 107, 122, 139, 156, 167, 182, 215, 216, 234, 236, 239, 244, 245, 246, 247, 257, 267], "de": [23, 38, 55, 73, 89, 106, 121, 138, 155], "deal": 278, "debug": [8, 283, 288, 289], "debug_geometri": 8, "debug_info": [8, 181], "debuginfo": [283, 288], "deeper": [61, 94, 126, 143], "default": [13, 17, 29, 32, 45, 46, 49, 61, 62, 65, 79, 82, 94, 95, 98, 112, 115, 126, 127, 130, 143, 144, 147, 162, 171, 174, 175, 197, 206, 217, 234, 235, 236, 237, 252, 254, 263, 264, 276, 282, 283, 288, 290], "defin": [14, 15, 30, 31, 64, 96, 97, 129, 145, 146, 174, 193, 281, 282, 283, 287, 290, 291], "definit": [280, 288], "degre": 193, "deleteattribut": 281, "demo": 284, "depend": [172, 174, 175, 277, 280, 287], "depth": [45, 111, 275, 287], "deriv": [200, 280], "describ": [200, 280], "desigen": 11, "design": [160, 273, 276, 279, 281, 282], "design2machin": 280, "desir": 290, "detail": 279, "detect": [9, 288], "detected_topo": 205, "determin": [16, 287], "dev": 277, "develop": [273, 276], "deviat": 290, "dfab": 273, "diamet": [193, 286], "dict": [12, 28, 189, 193, 196, 200, 202, 204, 205, 209, 280], "dictionari": [12, 28, 189, 202, 204], "differ": [205, 274, 280, 283, 287], "digest": [24, 39, 56, 74, 90, 107, 122, 139, 156, 182, 239, 257, 267], "digit": 273, "dimens": [161, 282], "direct": [161, 173, 174, 175, 236, 237, 272, 282, 283, 291], "directli": [28, 94, 207, 208, 283, 287], "disabl": 288, "displai": [13, 29, 46, 62, 79, 95, 112, 127, 144, 162, 206, 252, 263, 281, 289], "distanc": [10, 11, 283, 288], "distribut": 278, "do": [94, 278, 280], "document": [278, 280, 281, 282, 290], "doe": [18, 33, 50, 66, 83, 99, 116, 131, 148, 280, 282], "doesn": 287, "doi": 273, "done": [21, 22, 36, 37, 53, 54, 70, 71, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153], "down": 287, "drawn": 282, "drill": 193, "drill_hole_diamet": 193, "drop": 287, "dure": [24, 38, 39, 56, 74, 90, 107, 122, 139, 156, 182, 239, 257, 262, 267], "dynam": [283, 287], "e": [11, 38, 274, 281, 290], "each": [21, 22, 28, 36, 37, 53, 54, 70, 71, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153, 173, 200, 251, 280, 281, 287, 289], "easi": 279, "eclips": 274, "ecosystem": 276, "edg": [161, 211, 283, 287], "edge_stud": [283, 287], "edge_stud_offset": 283, "edit": 277, "editor": 274, "eg": 200, "either": [61, 94, 126, 143, 172, 283], "element": [0, 160, 161, 166, 167, 168, 169, 170, 172, 181, 186, 187, 200, 205, 207, 208, 210, 211, 214, 218, 220, 223, 224, 226, 228, 231, 232, 261, 262, 276, 288], "element_id": 262, "elementnod": [207, 208], "elements_held": 262, "encod": 281, "encompass": 276, "end": [12, 21, 22, 28, 36, 37, 45, 53, 54, 61, 70, 71, 78, 87, 88, 103, 104, 111, 119, 120, 126, 135, 136, 143, 152, 153, 161, 163, 172, 173, 175, 193, 287], "end_point": 175, "endpoint": [172, 175], "enlarg": 160, "entail": [276, 281], "entiti": 276, "entri": 281, "enum": 249, "enumer": 43, "environ": [274, 276, 277, 282], "equal": 161, "error": [8, 166, 169, 281, 283, 288], "et": 200, "et_el": 200, "etc": [161, 189, 190, 274, 276, 282], "eth": [273, 276], "event": 278, "everi": 287, "exampl": [24, 38, 39, 56, 74, 90, 107, 122, 139, 156, 160, 182, 210, 239, 257, 267, 276, 279, 281, 282, 291], "except": [8, 211], "exclud": [25, 26, 40, 41, 57, 58, 75, 76, 91, 92, 108, 109, 123, 124, 140, 141, 157, 158, 184, 185, 240, 241, 258, 259, 268, 269], "execut": [249, 262, 274], "exist": [13, 29, 46, 62, 79, 95, 112, 127, 144, 162, 206, 210, 225, 252, 263, 280], "expand": 276, "expect": [18, 33, 50, 66, 83, 99, 116, 131, 148], "expens": 288, "explain": 279, "express": [205, 278], "extend": [45, 163, 173, 230, 287], "extens": [14, 30, 47, 48, 63, 80, 81, 96, 113, 114, 128, 145, 163, 173, 179, 181, 230], "extract": [282, 289], "fabric": [0, 189, 192, 193, 196, 197, 200, 201, 203, 273, 276, 279], "face": [12, 16, 21, 22, 24, 36, 37, 39, 45, 53, 54, 56, 70, 71, 74, 87, 88, 90, 103, 104, 107, 119, 120, 122, 135, 136, 139, 152, 153, 156, 161, 173, 182, 193, 239, 257, 267, 287], "face_index": [21, 22, 36, 37, 53, 54, 70, 71, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153], "factor": [236, 237], "factori": [192, 200, 201, 203, 280], "fals": [10, 17, 24, 25, 26, 32, 39, 40, 41, 45, 49, 56, 57, 58, 65, 74, 75, 76, 82, 90, 91, 92, 98, 107, 108, 109, 115, 122, 123, 124, 130, 139, 140, 141, 147, 156, 157, 158, 168, 171, 182, 184, 185, 217, 239, 240, 241, 254, 257, 258, 259, 264, 267, 268, 269, 283, 288], "fast": 276, "featur": [8, 15, 28, 31, 48, 61, 64, 81, 97, 114, 129, 146, 161, 164, 165, 168, 180, 181, 230, 276, 279, 282, 283, 288, 291], "fibr": [161, 279], "file": [19, 25, 34, 40, 51, 57, 67, 75, 84, 91, 100, 108, 117, 123, 132, 140, 149, 157, 176, 184, 189, 221, 240, 255, 258, 265, 268, 278, 280, 284, 285], "filepath": [19, 25, 34, 40, 51, 57, 67, 75, 84, 91, 100, 108, 117, 123, 132, 140, 149, 157, 176, 184, 221, 240, 255, 258, 265, 268], "filter": [223, 281], "filter_": 223, "final": 291, "find": [10, 160, 220, 272, 282, 287], "find_neighboring_beam": 276, "first": [11, 78, 172, 211, 226, 230, 287, 291], "fit": 278, "fix": [13, 29, 46, 62, 79, 95, 112, 127, 144, 162, 206, 252, 263], "flag": 193, "flip": [59, 61, 94, 126, 143, 287], "flip_lap_sid": [61, 94, 126, 143, 287], "float": [10, 11, 45, 61, 94, 111, 126, 143, 160, 161, 163, 166, 169, 173, 174, 175, 193, 205, 234, 235, 236, 237, 272], "flush": [283, 287], "follow": [278, 279, 280, 282, 287], "forg": 277, "fork": 277, "format": [24, 25, 26, 39, 40, 41, 56, 57, 58, 74, 75, 76, 90, 91, 92, 107, 108, 109, 122, 123, 124, 139, 140, 141, 156, 157, 158, 182, 184, 185, 189, 239, 240, 241, 257, 258, 259, 267, 268, 269, 281], "found": 280, "foundat": 273, "four": [281, 287], "frame": [21, 22, 28, 36, 37, 53, 54, 70, 71, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153, 161, 173, 193, 197, 198, 210, 262, 275, 276, 279, 282, 283, 291], "frame_depth": 283, "framework": 276, "free": 278, "french": [12, 16, 193, 201], "frenchridgefactori": 276, "frenchridgelap": 193, "frenchridgelapjoint": 276, "from": [11, 19, 20, 24, 25, 26, 34, 35, 39, 40, 41, 51, 52, 56, 57, 58, 67, 68, 74, 75, 76, 84, 85, 90, 91, 92, 100, 101, 107, 108, 109, 117, 118, 122, 123, 124, 132, 133, 139, 140, 141, 149, 150, 156, 157, 158, 174, 175, 176, 177, 179, 180, 182, 184, 185, 200, 210, 221, 222, 231, 233, 239, 240, 241, 255, 256, 257, 258, 259, 265, 266, 267, 268, 269, 274, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 289], "from_obj": [24, 39, 56, 74, 90, 107, 122, 139, 156, 182, 239, 257, 267], "fulli": 287, "fullnam": [13, 29, 46, 62, 79, 95, 112, 127, 144, 162, 206, 252, 263], "function": [7, 94, 160, 200, 223, 279, 280], "furnish": 278, "furthest": 283, "futur": 276, "g": [11, 38, 274, 281], "gener": [11, 191, 195, 199, 200, 205, 223, 261, 280, 282, 283, 287, 291], "geometr": [193, 196, 200, 276, 280, 286, 288], "geometri": [8, 161, 167, 168, 169, 170, 186, 187, 215, 216, 234, 235, 237, 242, 246, 247, 262, 272, 276, 279, 282, 283, 286, 287, 288, 289, 290, 291], "geometry_typ": 275, "get": [24, 39, 56, 74, 90, 107, 122, 139, 156, 182, 218, 223, 239, 257, 267, 277, 279, 281], "getcustomattribut": 281, "getstandardattribut": 281, "gettyp": [13, 29, 46, 62, 79, 95, 112, 127, 144, 162, 206, 252, 263], "gh": [189, 190], "ghpython": [0, 276, 279], "ghuser": 277, "git": 277, "github": [273, 277], "given": [10, 11, 18, 33, 44, 50, 66, 83, 99, 116, 131, 148, 160, 172, 173, 175, 178, 224, 250, 281], "global": 289, "gonzalo": 273, "gramazio": [273, 276, 278], "gramaziokohl": 273, "grant": 278, "graph": 211, "grasshopp": [13, 29, 46, 62, 79, 95, 112, 127, 144, 162, 206, 252, 263, 274, 276, 277, 282, 287, 291], "group": [207, 208, 209, 210, 220, 223, 225, 281], "group_nam": [223, 225], "groupnod": [207, 208, 209, 210], "grssshopper": 287, "guid": [17, 25, 26, 32, 40, 41, 49, 57, 58, 65, 75, 76, 82, 91, 92, 98, 108, 109, 115, 123, 124, 130, 140, 141, 147, 157, 158, 171, 184, 185, 217, 218, 240, 241, 254, 258, 259, 264, 268, 269, 276, 279, 282, 287], "ha": [8, 19, 20, 34, 35, 51, 52, 67, 68, 84, 85, 100, 101, 117, 118, 132, 133, 149, 150, 160, 176, 177, 210, 221, 222, 255, 256, 262, 265, 266, 282, 287, 290], "half": 287, "handl": 276, "has_group": 210, "hash": [24, 39, 56, 74, 90, 107, 122, 139, 156, 182, 239, 257, 267], "have": [17, 18, 32, 33, 49, 50, 65, 66, 82, 83, 98, 99, 115, 116, 130, 131, 147, 148, 161, 171, 200, 207, 217, 226, 254, 264, 282], "header": [193, 283, 287], "header_attribut": [193, 200, 280], "height": [161, 174, 175, 275, 281, 282, 283], "held": 262, "help": 283, "here": [230, 280, 283, 284, 290], "hereaft": 287, "herebi": 278, "hexadecim": [24, 39, 56, 74, 90, 107, 122, 139, 156, 182, 239, 257, 267], "hierarchi": [170, 205, 207, 291], "highest": 287, "highli": 287, "histori": 189, "holder": 278, "hole": [193, 279], "how": [279, 287, 291], "http": [273, 277, 280], "human": [250, 262], "hybrid": 281, "i": [10, 11, 12, 14, 16, 18, 19, 20, 21, 22, 27, 28, 30, 33, 34, 35, 36, 37, 38, 42, 45, 47, 48, 50, 51, 52, 53, 54, 59, 60, 61, 63, 66, 67, 68, 70, 71, 77, 78, 80, 81, 83, 84, 85, 87, 88, 93, 94, 96, 99, 100, 101, 103, 104, 110, 111, 113, 114, 116, 117, 118, 119, 120, 125, 126, 128, 131, 132, 133, 135, 136, 142, 143, 145, 148, 149, 150, 152, 153, 159, 160, 161, 163, 172, 173, 176, 177, 188, 189, 193, 195, 196, 199, 205, 207, 210, 214, 221, 222, 230, 242, 248, 251, 255, 256, 260, 261, 265, 266, 271, 273, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291], "id": [262, 274], "idea": 279, "identifi": [28, 160, 218], "ignor": [21, 22, 36, 37, 53, 54, 70, 71, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153], "ignore_end": [21, 22, 36, 37, 53, 54, 70, 71, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153], "imag": 290, "implement": [14, 28, 30, 38, 96, 145, 272, 276, 287], "impli": [278, 288], "implicit": [13, 29, 46, 62, 79, 95, 112, 127, 144, 162, 206, 252, 263], "import": [24, 39, 56, 74, 90, 107, 122, 139, 156, 182, 210, 230, 239, 257, 267, 280, 291], "includ": [168, 278, 280], "include_featur": 168, "increment": 262, "indent": [25, 26, 40, 41, 57, 58, 75, 76, 91, 92, 108, 109, 123, 124, 140, 141, 157, 158, 184, 185, 240, 241, 258, 259, 268, 269], "independ": [17, 32, 49, 65, 82, 98, 115, 130, 147, 171, 217, 254, 264], "index": [21, 22, 36, 37, 53, 54, 70, 71, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153, 178, 183, 193, 276], "indic": [8, 12, 174, 175, 193, 281, 282], "individu": 200, "inflat": [160, 166, 169, 272], "inflate_bi": [160, 272], "inform": [8, 276, 283, 288, 289, 290], "inherit": [12, 28, 45, 61, 78, 94, 111, 126, 143, 161, 205, 251, 262, 276, 280], "initi": 181, "inner": [21, 22, 36, 37, 53, 54, 70, 71, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153, 287], "input": [11, 160, 200, 279, 280, 281, 282, 283, 285, 286, 287, 288], "insid": [238, 274], "inspect": 289, "instal": 276, "instanc": [12, 13, 18, 19, 20, 29, 33, 34, 35, 45, 46, 50, 51, 52, 61, 62, 66, 67, 68, 78, 79, 83, 84, 85, 94, 95, 99, 100, 101, 111, 112, 116, 117, 118, 126, 127, 131, 132, 133, 143, 144, 148, 149, 150, 162, 176, 177, 200, 206, 212, 221, 222, 252, 255, 256, 263, 265, 266, 274, 280], "instanti": [28, 94, 200, 280], "instead": [28, 282], "instruct": [230, 249, 251, 262], "int": [44, 161, 163, 178, 179, 183, 193, 211, 250, 262], "integ": 161, "intend": [281, 282], "interact": [28, 205, 211, 220, 226, 232, 274, 291], "interaction_typ": 220, "interest": 172, "interfac": 276, "intern": [195, 199], "intersect": [9, 10, 11], "introduct": 276, "intuit": 276, "invok": 277, "involv": 204, "ironpython": [13, 29, 46, 62, 79, 95, 112, 127, 144, 162, 206, 252, 263], "is_built": 262, "is_plan": 262, "is_top": [193, 194], "iter": 230, "its": [13, 21, 22, 25, 26, 29, 36, 37, 40, 41, 46, 53, 54, 57, 58, 62, 70, 71, 75, 76, 79, 87, 88, 91, 92, 95, 103, 104, 108, 109, 112, 119, 120, 123, 124, 127, 135, 136, 140, 141, 144, 152, 153, 157, 158, 162, 170, 174, 181, 184, 185, 192, 206, 218, 240, 241, 252, 258, 259, 263, 268, 269, 277, 281, 287], "jack": [197, 283], "jack_stud": [283, 287], "jo": [18, 33, 50, 66, 83, 99, 116, 131, 148], "join": [8, 12, 18, 28, 33, 45, 50, 61, 66, 78, 83, 94, 99, 111, 116, 126, 131, 143, 148, 193, 212, 283, 288], "joineri": 230, "joint": [8, 9, 12, 14, 15, 18, 43, 45, 47, 48, 50, 59, 61, 63, 64, 66, 78, 80, 81, 83, 94, 96, 97, 99, 111, 113, 114, 116, 126, 128, 129, 131, 143, 145, 146, 148, 163, 179, 189, 192, 193, 194, 196, 197, 200, 201, 202, 203, 204, 205, 212, 230, 233, 274, 276, 279, 280, 282, 283, 288, 291], "joint_factori": [192, 200, 280], "joint_kei": [163, 179], "joint_nam": [197, 198], "joint_overrid": 283, "joint_typ": [12, 61, 192], "jointfactori": 192, "jointrul": 288, "jointtopologi": [11, 205, 276], "joist": 282, "json": [19, 20, 25, 26, 34, 35, 40, 41, 51, 52, 57, 58, 67, 68, 75, 76, 84, 85, 91, 92, 100, 101, 108, 109, 117, 118, 123, 124, 132, 133, 140, 141, 149, 150, 157, 158, 176, 177, 184, 185, 221, 222, 240, 241, 255, 256, 258, 259, 265, 266, 268, 269], "kasir": 273, "keep": 287, "kei": [28, 38, 61, 161, 163, 179, 202, 204, 281], "keyword": 209, "kick": [13, 29, 46, 62, 79, 95, 112, 127, 144, 162, 206, 252, 263], "kind": [278, 287], "king": 283, "king_stud": [283, 287], "kohler": [273, 276, 278], "kwarg": [18, 33, 50, 66, 83, 99, 116, 131, 148, 209], "l": [12, 45, 61, 78, 94, 203, 204, 289], "lap": [12, 16, 61, 94, 126, 143, 193], "lapjoint": [61, 126, 143, 276], "larger": [161, 282, 287], "later": [281, 282], "latest": 277, "latter": 282, "layer": 290, "lbuttjoint": [12, 276], "lement": 164, "length": [111, 126, 143, 161, 174], "less": [18, 33, 50, 66, 83, 99, 116, 131, 148, 161], "level": 287, "lhalflapjoint": 276, "li": [282, 290], "liabil": 278, "liabl": 278, "librari": [273, 274, 276, 279], "licens": 276, "lie": [18, 33, 50, 66, 83, 99, 116, 131, 148], "like": [276, 279, 288], "limit": 278, "line": [161, 174, 276, 281, 282, 283, 286], "linear": 282, "linecurv": 282, "lintel_post": 283, "list": [8, 10, 12, 18, 28, 33, 50, 61, 66, 83, 99, 116, 131, 148, 160, 161, 164, 165, 172, 180, 189, 200, 205, 208, 214, 220, 262, 272, 280, 287, 289], "lmiterfactori": 276, "lmiterjoint": 276, "local": [161, 282], "locat": [161, 262, 282], "log": [44, 250], "long": [161, 173], "long_edg": 161, "lower": 287, "lowest": 287, "ly": 286, "m": 277, "machin": [16, 161, 280, 285], "made": 287, "mai": [281, 288], "main": [11, 38, 45, 55, 59, 61, 73, 89, 94, 106, 111, 121, 126, 138, 143, 155, 287], "main_beam": [45, 61, 94, 111, 126, 143, 275], "main_beam_kei": 61, "maintain": [196, 276], "major": [161, 282], "make": [13, 17, 29, 32, 46, 49, 62, 65, 79, 82, 95, 98, 112, 115, 127, 130, 144, 147, 162, 171, 206, 217, 252, 254, 263, 264], "mani": [273, 274, 276], "map": [28, 279, 290], "mapsiz": 290, "mass": 205, "match": [200, 280, 287], "materi": [161, 207, 213, 214, 227, 282, 290], "mathemat": 11, "max": 288, "max_dist": [10, 11], "maxdist": 288, "maximum": 11, "mayb": 210, "meant": 7, "meet": 287, "merchant": 278, "merg": 278, "mesh": [24, 39, 56, 74, 90, 107, 122, 139, 156, 167, 182, 239, 257, 267, 275], "method": [9, 11, 12, 13, 16, 18, 28, 29, 33, 38, 43, 45, 46, 47, 48, 50, 61, 62, 63, 66, 78, 79, 80, 81, 83, 94, 95, 99, 111, 112, 113, 114, 116, 126, 127, 128, 131, 143, 144, 148, 161, 162, 189, 193, 195, 197, 199, 201, 203, 205, 206, 230, 249, 251, 252, 262, 263, 276, 280], "metric": 173, "middl": [161, 287], "midpoint": 161, "might": [279, 287], "mill": [45, 111], "mill_depth": [45, 111, 287], "mind": 280, "minim": [25, 26, 40, 41, 57, 58, 75, 76, 91, 92, 108, 109, 123, 124, 140, 141, 157, 158, 184, 185, 240, 241, 258, 259, 268, 269], "minimum": 173, "misc": 273, "miss": 281, "mit": 278, "miter": [78, 203, 204], "mode": 277, "model": [0, 12, 18, 23, 33, 38, 45, 50, 55, 61, 66, 73, 78, 83, 89, 94, 99, 106, 111, 116, 121, 126, 131, 138, 143, 148, 155, 161, 170, 189, 191, 205, 207, 208, 209, 210, 211, 212, 213, 214, 219, 224, 225, 227, 228, 229, 230, 231, 233, 238, 242, 249, 261, 276, 279, 282, 285, 286, 291], "modifi": [242, 278], "modify_cross": [45, 287], "modul": [7, 200, 276, 280], "more": [8, 165, 276, 279, 280, 282, 287], "most": [21, 22, 36, 37, 53, 54, 70, 71, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153], "multipl": [200, 208, 274, 280], "must": [230, 283], "myenvnam": 277, "n": 277, "name": [197, 200, 209, 210, 223, 225, 280, 281, 289], "nation": 273, "nativ": [25, 26, 40, 41, 57, 58, 75, 76, 91, 92, 108, 109, 123, 124, 140, 141, 157, 158, 184, 185, 240, 241, 258, 259, 268, 269], "nccr": 273, "necessari": [16, 47, 63, 80, 113, 128, 277, 280], "need": [200, 280, 281, 291], "neighbor": [10, 160, 272], "neightbor": [10, 272], "neither": 214, "net": [13, 29, 46, 62, 79, 95, 112, 127, 144, 162, 206, 252, 263], "new": [18, 33, 50, 66, 83, 99, 116, 131, 148, 277, 280, 282], "newlin": [25, 26, 40, 41, 57, 58, 75, 76, 91, 92, 108, 109, 123, 124, 140, 141, 157, 158, 184, 185, 240, 241, 258, 259, 268, 269], "node": [207, 208, 209, 210], "non": 10, "none": [11, 17, 32, 49, 65, 82, 98, 115, 130, 147, 163, 164, 171, 174, 175, 179, 180, 186, 192, 197, 198, 202, 204, 207, 208, 209, 210, 211, 213, 214, 217, 223, 231, 232, 234, 235, 236, 237, 242, 243, 246, 254, 264, 282], "noninfring": 278, "normal": [21, 22, 36, 37, 53, 54, 70, 71, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153, 161], "note": [160, 207, 273], "notic": 278, "now": 287, "number": [283, 291], "obb": 169, "obj": [24, 39, 56, 74, 90, 107, 122, 139, 156, 182, 239, 257, 262, 267], "object": [9, 10, 13, 17, 18, 19, 20, 25, 26, 27, 29, 32, 33, 34, 35, 38, 40, 41, 42, 43, 46, 49, 50, 51, 52, 57, 58, 60, 62, 65, 66, 67, 68, 75, 76, 77, 79, 82, 83, 84, 85, 91, 92, 93, 95, 98, 99, 100, 101, 108, 109, 110, 112, 115, 116, 117, 118, 123, 124, 125, 127, 130, 131, 132, 133, 140, 141, 142, 144, 147, 148, 149, 150, 157, 158, 159, 160, 162, 171, 176, 177, 184, 185, 188, 189, 193, 197, 200, 201, 202, 203, 204, 205, 206, 211, 212, 217, 221, 222, 233, 240, 241, 248, 249, 252, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 271, 276, 281, 282, 283, 288, 290], "obtain": 278, "occ": 276, "occur": [8, 289], "offset": [166, 169, 283], "onc": [161, 282], "one": [21, 22, 36, 37, 53, 54, 61, 70, 71, 87, 88, 94, 103, 104, 119, 120, 126, 135, 136, 143, 152, 153, 165, 211, 214, 261, 262, 280, 282, 287, 289], "onli": [14, 30, 38, 96, 145, 168, 230, 281], "onto": 283, "open": [273, 276], "opencascad": 276, "oper": [286, 288], "oppos": 178, "opposit": [45, 287], "option": [10, 11, 14, 17, 21, 22, 24, 25, 26, 30, 32, 36, 37, 39, 40, 41, 49, 53, 54, 56, 57, 58, 65, 70, 71, 74, 75, 76, 82, 87, 88, 90, 91, 92, 96, 98, 103, 104, 107, 108, 109, 115, 119, 120, 122, 123, 124, 130, 135, 136, 139, 140, 141, 145, 147, 152, 153, 156, 157, 158, 160, 161, 166, 168, 171, 182, 184, 185, 197, 207, 208, 209, 210, 211, 214, 217, 223, 232, 234, 235, 236, 237, 239, 240, 241, 254, 257, 258, 259, 264, 267, 268, 269, 282, 291], "order": [11, 160, 196, 261], "ordereddict": 196, "orient": [169, 174, 175, 193, 216, 290], "origin": [17, 32, 49, 65, 82, 98, 115, 130, 147, 161, 171, 196, 217, 234, 235, 254, 264, 282, 290], "orthogon": [21, 36, 53, 70, 87, 103, 119, 135, 152], "other": [13, 21, 22, 29, 36, 37, 46, 53, 54, 61, 62, 70, 71, 79, 87, 88, 94, 95, 103, 104, 112, 119, 120, 126, 127, 135, 136, 143, 144, 152, 153, 162, 193, 206, 210, 252, 263, 273, 278, 287, 291], "other_beam": 193, "otherwis": [11, 45, 278, 282], "out": 278, "outer": 287, "output": [11, 13, 25, 26, 29, 40, 41, 46, 57, 58, 62, 75, 76, 79, 91, 92, 95, 108, 109, 112, 123, 124, 127, 140, 141, 144, 157, 158, 162, 184, 185, 206, 240, 241, 252, 258, 259, 263, 268, 269, 282, 283, 285, 286, 288], "overal": 279, "overlap": 287, "overrid": [13, 29, 46, 62, 79, 95, 112, 127, 144, 162, 206, 252, 263, 283], "overwrit": [287, 291], "own": 287, "packag": [276, 277, 280], "pair": [10, 11, 160, 272, 281], "panel": [13, 29, 46, 62, 79, 95, 112, 127, 144, 162, 206, 252, 263], "parallel": [262, 282, 287], "param": 200, "paramet": [10, 11, 12, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 70, 71, 74, 75, 76, 77, 78, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 98, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 130, 131, 132, 133, 135, 136, 139, 140, 141, 142, 143, 147, 148, 149, 150, 152, 153, 156, 157, 158, 159, 160, 161, 164, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 195, 196, 197, 199, 200, 202, 204, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 271, 272, 280, 281, 290], "parametr": [161, 183, 276], "parent": [207, 208, 209, 210], "part": [16, 38, 189, 191, 193, 194, 197, 198, 202, 204, 207, 214, 272, 276, 280, 282, 286], "particular": 278, "pass": 173, "path": [19, 25, 34, 40, 51, 57, 67, 75, 84, 91, 100, 108, 117, 123, 132, 140, 149, 157, 176, 184, 221, 240, 255, 258, 265, 268, 285], "pdf": 280, "per": 261, "permiss": 278, "permit": 278, "perpendicular": 282, "person": 278, "pip": 277, "place": [13, 29, 46, 62, 79, 95, 112, 127, 144, 162, 206, 242, 252, 263, 287], "plan": [0, 249, 251, 261, 262, 276], "planar": [183, 279, 283, 287], "plane": [45, 78, 173, 197, 282, 286, 287, 290], "plate": [205, 283, 288], "pleas": [12, 45, 61, 78, 94, 111, 126, 143, 273], "pln": 173, "plug": 276, "pluggabl": 160, "plugin": [160, 276], "pocket": [45, 111], "point": [161, 166, 169, 172, 175, 205, 234, 235, 276, 287, 290], "point_end": 175, "point_start": 175, "portion": 278, "posit": [161, 170, 286], "possibl": [43, 281], "present": [274, 287], "pretti": [25, 26, 40, 41, 57, 58, 75, 76, 91, 92, 108, 109, 123, 124, 140, 141, 157, 158, 184, 185, 189, 190, 240, 241, 258, 259, 268, 269], "prevent": 287, "preview": 289, "print": [13, 29, 46, 62, 79, 95, 112, 127, 144, 162, 206, 252, 263], "prior": 272, "priorit": 59, "prioriti": [262, 287], "process": [161, 191, 193, 195, 196, 197, 199, 200, 202, 204, 230, 276, 279, 280, 291], "process_param": 280, "process_paramet": [193, 200], "process_typ": [193, 200, 280], "produc": 161, "product": [21, 22, 36, 37, 53, 54, 70, 71, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153], "programm": 273, "project": [273, 276], "proper": [13, 29, 46, 62, 79, 95, 112, 127, 144, 162, 206, 252, 263], "properli": [12, 45, 61, 78, 94, 111, 126, 143], "properti": 196, "provid": [9, 207, 210, 214, 278, 279, 282, 288], "publish": 278, "purpos": 278, "py": 280, "python": [274, 276, 277, 279], "queri": [223, 225], "r": [10, 160, 277], "radian": [234, 235], "rafter": 282, "rais": [14, 15, 18, 19, 20, 30, 31, 33, 34, 35, 47, 50, 51, 52, 63, 64, 66, 67, 68, 80, 83, 84, 85, 96, 97, 99, 100, 101, 113, 116, 117, 118, 128, 129, 131, 132, 133, 145, 146, 148, 149, 150, 176, 177, 207, 210, 211, 214, 221, 222, 255, 256, 265, 266], "random": 290, "rather": [24, 39, 56, 74, 90, 107, 122, 139, 156, 182, 239, 257, 267], "ratio": 290, "raw": [27, 42, 60, 77, 93, 110, 125, 142, 159, 188, 248, 260, 271, 282], "reason": 230, "recogn": 289, "rectangular": [161, 282], "ref_edg": 161, "ref_fac": 193, "ref_face_index": 193, "ref_fram": 161, "ref_sid": 161, "refer": [12, 16, 23, 38, 55, 73, 89, 106, 121, 138, 155, 161, 178, 183, 193, 276, 279, 280, 281], "referenc": [282, 283], "reference_face_indic": 12, "regard": 160, "regist": 192, "register_joint": [200, 280], "reject": 45, "reject_i": [45, 287], "relat": [200, 280], "remain": 287, "remov": [163, 179, 180, 181, 231, 232, 233, 281, 286, 287], "render": [279, 290], "repositori": 277, "repres": [12, 45, 61, 78, 111, 126, 143, 161, 189, 193, 197, 205, 211, 249, 282], "represent": [12, 13, 25, 26, 29, 40, 41, 44, 46, 57, 58, 61, 62, 75, 76, 79, 91, 92, 95, 108, 109, 112, 123, 124, 127, 140, 141, 144, 157, 158, 162, 184, 185, 206, 240, 241, 250, 252, 258, 259, 263, 268, 269, 280], "request": 183, "requir": [14, 30, 48, 81, 96, 114, 145, 163, 179, 196, 200, 277], "requr": 280, "research": [273, 276, 278], "resolv": 276, "respect": [28, 38], "respons": [18, 33, 50, 66, 83, 99, 116, 131, 148], "restor": [23, 38, 55, 73, 89, 106, 121, 138, 155], "restrict": 278, "result": [21, 22, 36, 37, 53, 54, 70, 71, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153, 172, 261, 282, 283], "retriev": [218, 281], "return": [10, 11, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 41, 42, 44, 49, 50, 51, 52, 53, 54, 56, 58, 60, 65, 66, 67, 68, 70, 71, 74, 76, 77, 82, 83, 84, 85, 87, 88, 90, 92, 93, 98, 99, 100, 101, 103, 104, 107, 109, 110, 115, 116, 117, 118, 119, 120, 122, 124, 125, 130, 131, 132, 133, 135, 136, 139, 141, 142, 147, 148, 149, 150, 152, 153, 156, 158, 159, 160, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 185, 186, 187, 188, 189, 190, 192, 196, 202, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 255, 256, 257, 259, 260, 264, 265, 266, 267, 269, 271, 272], "rhino": [0, 13, 29, 46, 62, 79, 95, 112, 127, 144, 160, 162, 206, 252, 263, 272, 274, 276, 277, 281, 282, 287, 290], "rhinocero": 276, "rhinocommon": 276, "ridg": [12, 16, 193, 201], "right": [278, 287], "robot": [250, 262], "role": [11, 38], "root": [207, 208], "rotat": [236, 237, 246, 247, 282], "rtree": [10, 272], "rule": [276, 279, 282, 283, 288, 291], "run": [274, 276], "sai": 282, "same": [11, 17, 32, 45, 49, 65, 82, 98, 115, 130, 147, 171, 210, 217, 254, 261, 262, 264], "save": [23, 25, 26, 40, 41, 55, 57, 58, 73, 75, 76, 89, 91, 92, 106, 108, 109, 121, 123, 124, 138, 140, 141, 155, 157, 158, 184, 185, 240, 241, 258, 259, 268, 269, 285], "scale": [234, 235, 246, 247, 290], "schema": [19, 20, 27, 34, 35, 42, 51, 52, 60, 67, 68, 77, 84, 85, 93, 100, 101, 110, 117, 118, 125, 132, 133, 142, 149, 150, 159, 176, 177, 188, 221, 222, 248, 255, 256, 260, 265, 266, 271], "scienc": 273, "sdk": 276, "search": [10, 160], "second": [11, 78, 172, 211, 226, 230], "section": [45, 59, 161, 174, 175, 274, 279, 282, 283, 287], "secur": 287, "see": [38, 205, 279, 282, 284, 286, 287, 290], "select": [283, 287, 289], "self": [13, 29, 46, 62, 79, 95, 112, 127, 144, 162, 200, 206, 252, 263, 280], "sell": 278, "semant": 276, "sensit": 11, "separ": 281, "sequenc": [230, 261, 276], "sequenti": 287, "serial": [23, 38, 55, 73, 89, 106, 121, 138, 155], "serv": 290, "session": 274, "set": [10, 160, 226, 272, 281, 282, 283, 287, 288], "setcustomattribut": 281, "setstandardattribut": 281, "shall": [210, 278], "shape": 161, "sheet": 283, "sheeting_insid": 283, "sheeting_outsid": 283, "shift": [61, 94, 126, 143, 287], "shorten": 287, "should": [8, 14, 15, 28, 30, 31, 38, 61, 64, 94, 96, 97, 126, 129, 143, 145, 146, 160, 163, 173, 200, 207, 212, 280, 287], "show": [276, 279], "side": [61, 94, 126, 143, 161, 178, 183, 283, 286, 287], "side_index": [178, 183], "sill": [283, 287], "similar": [13, 29, 46, 62, 79, 95, 112, 127, 144, 162, 206, 252, 263, 287], "simpl": [261, 276, 279], "simplesequencegener": 276, "sinc": [38, 230], "singl": [262, 280], "size": [282, 290], "slat": 161, "small_beam_butt": [45, 59, 287], "smaller": [45, 59, 161, 282], "so": [200, 278, 280], "softwar": [276, 278], "solid": [161, 288], "some": [200, 279, 290], "sourc": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 281, 282], "space": 283, "spatial": 170, "specialist": 276, "specif": [11, 38, 200, 220, 227, 276, 280, 282, 283, 287], "specifi": [218, 283], "stage": 276, "standard": [161, 283], "start": [161, 163, 172, 173, 175, 279, 282], "state": 181, "static": [21, 22, 36, 37, 53, 54, 70, 71, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153], "step": [251, 253, 261, 276, 280], "still": 10, "stock": [161, 282], "store": [38, 281, 282], "str": [8, 12, 19, 20, 24, 25, 26, 28, 34, 35, 39, 40, 41, 44, 51, 52, 56, 57, 58, 61, 67, 68, 74, 75, 76, 84, 85, 90, 91, 92, 100, 101, 107, 108, 109, 117, 118, 122, 123, 124, 132, 133, 139, 140, 141, 149, 150, 156, 157, 158, 172, 176, 177, 182, 184, 185, 189, 193, 197, 200, 209, 210, 218, 221, 222, 223, 225, 239, 240, 241, 250, 255, 256, 257, 258, 259, 262, 265, 266, 267, 268, 269], "straight": 282, "string": [8, 12, 13, 20, 26, 29, 35, 41, 44, 46, 52, 58, 61, 62, 68, 76, 79, 85, 92, 95, 101, 109, 112, 118, 124, 127, 133, 141, 144, 150, 158, 162, 177, 185, 189, 190, 206, 222, 241, 250, 252, 256, 259, 263, 266, 269, 281, 282, 287], "structur": [243, 244, 245, 273, 276, 279, 283, 288, 291], "stud": [161, 282, 283, 287], "stud_direct": 283, "stud_spac": 283, "studio": 274, "style": 279, "sub": 94, "subject": 278, "sublicens": 278, "sublim": 274, "substanti": 278, "subtract": 288, "summaris": 287, "support": [262, 273, 274], "suppos": 8, "surfac": [183, 193, 280, 286], "swiss": 273, "system": [161, 282], "t": [94, 111, 126, 143, 289], "take": [13, 29, 46, 62, 79, 95, 112, 127, 144, 162, 206, 252, 263, 280, 291], "tbuttjoint": [38, 275, 276], "termin": [189, 190], "text": [274, 285], "textur": [279, 290], "thalflapjoint": 276, "than": [18, 24, 33, 39, 50, 56, 66, 74, 83, 90, 99, 107, 116, 122, 131, 139, 148, 156, 182, 239, 257, 267], "thei": [11, 287, 291], "them": [18, 33, 50, 66, 78, 83, 99, 116, 131, 148, 200, 226, 274, 280, 281, 287], "thi": [8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 159, 160, 161, 162, 163, 170, 171, 173, 176, 177, 179, 188, 193, 195, 196, 199, 200, 202, 204, 205, 206, 210, 217, 221, 222, 223, 225, 230, 233, 235, 237, 244, 245, 247, 248, 252, 254, 255, 256, 260, 262, 263, 264, 265, 266, 271, 272, 274, 278, 280, 281, 283, 287, 291], "thick": 283, "third": 287, "three": [287, 291], "through": [61, 94, 126, 143, 173, 273, 287], "tilt": 287, "timber": [161, 189, 197, 205, 273, 279, 282, 283, 285, 289, 291], "timberassembli": 275, "timberel": [161, 210], "timbermodel": [18, 33, 50, 66, 83, 99, 116, 131, 148, 276], "titl": 273, "todo": [173, 210, 223, 225, 238, 287], "togeth": [18, 33, 50, 66, 83, 99, 116, 131, 148, 282], "tol": 11, "toler": [11, 288], "tool": [9, 276, 279, 289, 290], "top": [12, 23, 193, 279, 287], "topo_i": 43, "topo_l": [43, 44], "topo_t": [43, 44], "topo_unknown": [43, 44], "topo_x": [43, 44], "topologi": [9, 11, 12, 18, 33, 43, 44, 45, 50, 61, 66, 78, 83, 99, 111, 116, 126, 131, 143, 148, 205, 238, 287, 288, 291], "tort": 278, "total": 205, "touch": 10, "transform": [170, 234, 235, 236, 237, 243, 245, 246, 247], "translat": [234, 235, 236, 237], "tree": [10, 160, 207], "trim": [45, 48, 61, 78, 81, 111, 114, 126, 143, 288], "trimfeatur": 286, "true": [10, 17, 21, 22, 24, 25, 26, 32, 36, 37, 39, 40, 41, 45, 49, 53, 54, 56, 57, 58, 59, 61, 65, 70, 71, 74, 75, 76, 82, 87, 88, 90, 91, 92, 94, 98, 103, 104, 107, 108, 109, 115, 119, 120, 122, 123, 124, 126, 130, 135, 136, 139, 140, 141, 143, 147, 152, 153, 156, 157, 158, 168, 171, 173, 182, 184, 185, 210, 217, 224, 225, 226, 239, 240, 241, 254, 257, 258, 259, 264, 267, 268, 269, 282, 283, 285, 287, 288], "try": 8, "tupl": [11, 21, 22, 28, 36, 37, 53, 54, 70, 71, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153, 161, 173, 211, 212], "two": [8, 11, 12, 18, 28, 33, 45, 50, 61, 66, 78, 83, 99, 116, 131, 148, 172, 211, 212, 226, 232, 287], "txt": 277, "type": [7, 11, 12, 13, 17, 19, 20, 27, 29, 32, 34, 35, 42, 45, 46, 49, 51, 52, 60, 61, 62, 65, 67, 68, 77, 78, 79, 82, 84, 85, 93, 94, 95, 98, 100, 101, 110, 111, 112, 115, 117, 118, 125, 126, 127, 130, 132, 133, 142, 143, 144, 147, 149, 150, 159, 162, 171, 176, 177, 188, 192, 193, 196, 200, 206, 217, 220, 221, 222, 248, 249, 252, 254, 255, 256, 260, 262, 263, 264, 265, 266, 271, 276, 280, 283, 291], "typeerror": [19, 20, 34, 35, 51, 52, 67, 68, 84, 85, 100, 101, 117, 118, 132, 133, 149, 150, 176, 177, 221, 222, 255, 256, 265, 266], "typic": [200, 262, 280], "unchang": 287, "under": [207, 208], "underscor": 281, "uniqu": [28, 161, 218], "unit": [11, 160, 173], "unlik": 287, "updaterefobj": 282, "upon": 276, "upper": 287, "upstream": [210, 223, 225], "url": 273, "us": [7, 8, 10, 11, 12, 13, 16, 24, 27, 28, 29, 39, 42, 44, 45, 46, 56, 60, 61, 62, 74, 77, 78, 79, 90, 93, 94, 95, 107, 110, 111, 112, 122, 125, 126, 127, 139, 142, 143, 144, 156, 159, 160, 162, 173, 182, 188, 189, 196, 206, 210, 238, 239, 243, 244, 245, 246, 247, 248, 250, 252, 257, 260, 262, 263, 267, 271, 272, 273, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 289, 290], "user": [281, 283], "usual": [13, 29, 46, 62, 79, 95, 112, 127, 144, 161, 162, 206, 252, 263], "util": [276, 279], "v1": [24, 39, 56, 74, 90, 107, 122, 139, 156, 182, 239, 257, 267], "v2": [24, 39, 56, 74, 90, 107, 122, 139, 156, 182, 239, 257, 267], "v3": [24, 39, 56, 74, 90, 107, 122, 139, 156, 182, 239, 257, 267], "v7": 277, "valid": [27, 42, 60, 77, 93, 110, 125, 142, 159, 188, 248, 260, 271], "valu": [44, 61, 94, 126, 143, 160, 161, 250, 281], "valueerror": [18, 33, 50, 66, 83, 99, 116, 131, 148, 207, 210, 214], "variabl": 287, "vector": [174, 175, 234, 235, 246, 247, 276, 282, 283], "verifi": [18, 33, 50, 66, 83, 99, 116, 131, 148, 173, 227], "version": [24, 39, 56, 74, 90, 107, 122, 139, 156, 182, 239, 257, 267, 277], "vertex_attribut": [24, 39, 56, 74, 90, 107, 122, 139, 156, 182, 239, 257, 267], "vertex_sampl": [24, 39, 56, 74, 90, 107, 122, 139, 156, 182, 239, 257, 267], "vertic": [282, 287], "via": 276, "visual": [8, 189, 190, 251, 262, 274], "visualis": 288, "vocabulari": 283, "volum": 205, "wa": [8, 14, 15, 30, 31, 64, 96, 97, 129, 145, 146], "wai": 274, "wall": [205, 210, 283], "wall1": 210, "wall1_group": 210, "warranti": 278, "well": [163, 210], "were": [8, 11, 28, 281], "when": [10, 13, 29, 46, 47, 48, 62, 63, 79, 80, 81, 95, 112, 113, 114, 127, 128, 144, 162, 163, 206, 252, 263, 281, 287], "whenev": [14, 15, 30, 31, 64, 96, 97, 129, 145, 146], "where": [280, 282, 285, 287, 290], "whether": [16, 262, 278], "which": [8, 10, 11, 12, 16, 18, 21, 22, 28, 33, 36, 37, 45, 50, 53, 54, 61, 66, 70, 71, 78, 83, 87, 88, 99, 103, 104, 111, 116, 119, 120, 126, 131, 135, 136, 143, 148, 152, 153, 160, 163, 172, 173, 179, 193, 200, 209, 210, 249, 251, 262, 280, 282, 283, 288], "while": [8, 287, 289], "whitespac": [25, 26, 40, 41, 57, 58, 75, 76, 91, 92, 108, 109, 123, 124, 140, 141, 157, 158, 184, 185, 240, 241, 258, 259, 268, 269], "whom": 278, "whose": [21, 22, 36, 37, 53, 54, 70, 71, 87, 88, 103, 104, 119, 120, 135, 136, 152, 153], "whould": [18, 33, 50, 66, 83, 99, 116, 131, 148], "wide": 161, "width": [161, 174, 175, 275, 281, 282, 283], "within": [11, 262, 282], "without": [25, 26, 40, 41, 57, 58, 61, 75, 76, 91, 92, 94, 108, 109, 123, 124, 126, 140, 141, 143, 157, 158, 184, 185, 240, 241, 258, 259, 268, 269, 278, 282], "wood": 161, "work": [273, 283], "workflow": [276, 279, 281, 282], "world": [170, 282, 283], "worldx": [174, 175], "worldxi": [210, 275], "worldz": [174, 175], "write": [281, 282], "written": 276, "x": [94, 143, 161, 236, 237, 282, 289, 290], "xhalflapjoint": 276, "xmax": 161, "xmin": 161, "xml": [189, 190, 285], "y": [161, 236, 237, 282, 290], "ye": 277, "year": 273, "yet": 287, "yield": [219, 228, 229], "ymax": 161, "ymin": 161, "you": [273, 279, 283, 287, 291], "your": 273, "yourgithub_usernam": 277, "z": [24, 39, 56, 74, 90, 107, 122, 139, 156, 161, 174, 175, 182, 234, 235, 236, 237, 239, 257, 267, 282, 283, 286, 290], "z_vector": [174, 175], "zenodo": 273, "zero": 283, "zmax": 161, "zmin": 161, "zurich": [273, 276], "zvector": [281, 282]}, "titles": ["API Reference", "compas_timber.connections", "compas_timber.elements", "compas_timber.fabrication", "compas_timber.ghpython", "compas_timber.model", "compas_timber.planning", "rhino", "BeamJoinningError", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "FrenchRidgeLapJoint", "FrenchRidgeLapJoint.ToString", "FrenchRidgeLapJoint.add_extensions", "FrenchRidgeLapJoint.add_features", "FrenchRidgeLapJoint.check_geometry", "FrenchRidgeLapJoint.copy", "FrenchRidgeLapJoint.create", "FrenchRidgeLapJoint.from_json", "FrenchRidgeLapJoint.from_jsonstring", "FrenchRidgeLapJoint.get_face_most_ortho_to_beam", "FrenchRidgeLapJoint.get_face_most_towards_beam", "FrenchRidgeLapJoint.restore_beams_from_keys", "FrenchRidgeLapJoint.sha256", "FrenchRidgeLapJoint.to_json", "FrenchRidgeLapJoint.to_jsonstring", "FrenchRidgeLapJoint.validate_data", "Joint", "Joint.ToString", "Joint.add_extensions", "Joint.add_features", "Joint.copy", "Joint.create", "Joint.from_json", "Joint.from_jsonstring", "Joint.get_face_most_ortho_to_beam", "Joint.get_face_most_towards_beam", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_json", "Joint.to_jsonstring", "Joint.validate_data", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_extensions", "LButtJoint.add_features", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.from_json", "LButtJoint.from_jsonstring", "LButtJoint.get_face_most_ortho_to_beam", "LButtJoint.get_face_most_towards_beam", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.to_json", "LButtJoint.to_jsonstring", "LButtJoint.update_beam_roles", "LButtJoint.validate_data", "LHalfLapJoint", "LHalfLapJoint.ToString", "LHalfLapJoint.add_extensions", "LHalfLapJoint.add_features", "LHalfLapJoint.copy", "LHalfLapJoint.create", "LHalfLapJoint.from_json", "LHalfLapJoint.from_jsonstring", "LHalfLapJoint.get_cross_cutting_frame", "LHalfLapJoint.get_face_most_ortho_to_beam", "LHalfLapJoint.get_face_most_towards_beam", "LHalfLapJoint.get_main_cutting_frame", "LHalfLapJoint.restore_beams_from_keys", "LHalfLapJoint.sha256", "LHalfLapJoint.to_json", "LHalfLapJoint.to_jsonstring", "LHalfLapJoint.validate_data", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_extensions", "LMiterJoint.add_features", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.from_json", "LMiterJoint.from_jsonstring", "LMiterJoint.get_cutting_planes", "LMiterJoint.get_face_most_ortho_to_beam", "LMiterJoint.get_face_most_towards_beam", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_json", "LMiterJoint.to_jsonstring", "LMiterJoint.validate_data", "LapJoint", "LapJoint.ToString", "LapJoint.add_extensions", "LapJoint.add_features", "LapJoint.copy", "LapJoint.create", "LapJoint.from_json", "LapJoint.from_jsonstring", "LapJoint.get_cross_cutting_frame", "LapJoint.get_face_most_ortho_to_beam", "LapJoint.get_face_most_towards_beam", "LapJoint.get_main_cutting_frame", "LapJoint.restore_beams_from_keys", "LapJoint.sha256", "LapJoint.to_json", "LapJoint.to_jsonstring", "LapJoint.validate_data", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_extensions", "TButtJoint.add_features", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.from_json", "TButtJoint.from_jsonstring", "TButtJoint.get_face_most_ortho_to_beam", "TButtJoint.get_face_most_towards_beam", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.to_json", "TButtJoint.to_jsonstring", "TButtJoint.validate_data", "THalfLapJoint", "THalfLapJoint.ToString", "THalfLapJoint.add_extensions", "THalfLapJoint.add_features", "THalfLapJoint.copy", "THalfLapJoint.create", "THalfLapJoint.from_json", "THalfLapJoint.from_jsonstring", "THalfLapJoint.get_cross_cutting_frame", "THalfLapJoint.get_face_most_ortho_to_beam", "THalfLapJoint.get_face_most_towards_beam", "THalfLapJoint.get_main_cutting_frame", "THalfLapJoint.restore_beams_from_keys", "THalfLapJoint.sha256", "THalfLapJoint.to_json", "THalfLapJoint.to_jsonstring", "THalfLapJoint.validate_data", "XHalfLapJoint", "XHalfLapJoint.ToString", "XHalfLapJoint.add_extensions", "XHalfLapJoint.add_features", "XHalfLapJoint.copy", "XHalfLapJoint.create", "XHalfLapJoint.from_json", "XHalfLapJoint.from_jsonstring", "XHalfLapJoint.get_cross_cutting_frame", "XHalfLapJoint.get_face_most_ortho_to_beam", "XHalfLapJoint.get_face_most_towards_beam", "XHalfLapJoint.get_main_cutting_frame", "XHalfLapJoint.restore_beams_from_keys", "XHalfLapJoint.sha256", "XHalfLapJoint.to_json", "XHalfLapJoint.to_jsonstring", "XHalfLapJoint.validate_data", "find_neighboring_beams", "Beam", "Beam.ToString", "Beam.add_blank_extension", "Beam.add_feature", "Beam.add_features", "Beam.compute_aabb", "Beam.compute_collision_mesh", "Beam.compute_geometry", "Beam.compute_obb", "Beam.compute_worldtransformation", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_endpoints", "Beam.from_json", "Beam.from_jsonstring", "Beam.opposing_side_index", "Beam.remove_blank_extension", "Beam.remove_features", "Beam.reset", "Beam.sha256", "Beam.side_as_surface", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transformed", "Beam.validate_data", "BTLx", "BTLx.btlx_string", "BTLx.process_model", "BTLx.register_joint", "BTLxFrenchRidgeLap", "BTLxFrenchRidgeLap.create_process", "BTLxFrenchRidgeLap.get_params", "BTLxFrenchRidgeLap.process_joints", "BTLxJackCut", "BTLxJackCut.create_process", "BTLxJackCut.generate_process", "BTLxProcess", "FrenchRidgeFactory", "FrenchRidgeFactory.apply_processings", "LMiterFactory", "LMiterFactory.apply_processings", "TimberModel", "TimberModel.ToString", "TimberModel.add_element", "TimberModel.add_elements", "TimberModel.add_group", "TimberModel.add_group_element", "TimberModel.add_interaction", "TimberModel.add_joint", "TimberModel.add_material", "TimberModel.assign_material", "TimberModel.compute_aabb", "TimberModel.compute_obb", "TimberModel.copy", "TimberModel.element_by_guid", "TimberModel.elements", "TimberModel.elements_connected_by", "TimberModel.from_json", "TimberModel.from_jsonstring", "TimberModel.get_elements_in_group", "TimberModel.has_element", "TimberModel.has_group", "TimberModel.has_interaction", "TimberModel.has_material", "TimberModel.interactions", "TimberModel.materials", "TimberModel.process_joinery", "TimberModel.remove_element", "TimberModel.remove_interaction", "TimberModel.remove_joint", "TimberModel.rotate", "TimberModel.rotated", "TimberModel.scale", "TimberModel.scaled", "TimberModel.set_topologies", "TimberModel.sha256", "TimberModel.to_json", "TimberModel.to_jsonstring", "TimberModel.transform", "TimberModel.transform_numpy", "TimberModel.transformed", "TimberModel.transformed_numpy", "TimberModel.translate", "TimberModel.translated", "TimberModel.validate_data", "Actor", "Actor.get_name", "BuildingPlan", "BuildingPlan.ToString", "BuildingPlan.add_step", "BuildingPlan.copy", "BuildingPlan.from_json", "BuildingPlan.from_jsonstring", "BuildingPlan.sha256", "BuildingPlan.to_json", "BuildingPlan.to_jsonstring", "BuildingPlan.validate_data", "SimpleSequenceGenerator", "Step", "Step.ToString", "Step.copy", "Step.from_json", "Step.from_jsonstring", "Step.sha256", "Step.to_json", "Step.to_jsonstring", "Step.transform", "Step.validate_data", "find_neighboring_beams", "Citing", "Examples", "Create Joint", "COMPAS Timber Documentation", "Installation", "License", "Grasshopper plugin", "BTLx Contribution Guide", "Attributes", "Beams", "Design", "Examples", "Fabrication", "Features", "Joint Rules", "Model", "Show", "Utils", "Workflow"], "titleterms": {"actor": [249, 250], "add_blank_extens": 163, "add_el": [207, 208], "add_extens": [14, 30, 47, 63, 80, 96, 113, 128, 145], "add_featur": [15, 31, 48, 64, 81, 97, 114, 129, 146, 164, 165], "add_group": 209, "add_group_el": 210, "add_interact": 211, "add_joint": 212, "add_materi": 213, "add_step": 253, "api": 0, "apply_process": [202, 204], "assembli": 274, "assign_materi": 214, "attribut": 281, "bake": 290, "beam": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 282, 283, 289], "beamjoinningerror": 8, "boxmap": 290, "brep": 286, "btlx": [189, 190, 191, 192, 280, 285], "btlx_string": 190, "btlxfrenchridgelap": [193, 194, 195, 196], "btlxjackcut": [197, 198, 199], "btlxprocess": 200, "buildingplan": [251, 252, 253, 254, 255, 256, 257, 258, 259, 260], "butt": 287, "categori": 287, "check": 281, "check_geometri": 16, "cite": 273, "class": [1, 2, 3, 4, 5, 6], "compa": 276, "compas_timb": [1, 2, 3, 4, 5, 6], "compon": 287, "compute_aabb": [166, 215], "compute_collision_mesh": 167, "compute_geometri": 168, "compute_obb": [169, 216], "compute_worldtransform": 170, "conda": 277, "connect": 1, "connectionsolv": [9, 10, 11], "content": 276, "contribut": 280, "copi": [17, 32, 49, 65, 82, 98, 115, 130, 147, 171, 217, 254, 264], "creat": [18, 33, 50, 66, 83, 99, 116, 131, 148, 275], "create_process": [194, 198], "custom": [281, 283], "decomposebeam": 282, "default": 287, "delet": 281, "depend": 276, "design": 283, "develop": 277, "dimens": 283, "direct": 287, "document": 276, "drill": 286, "element": [2, 219], "element_by_guid": 218, "elements_connected_bi": 220, "endpoint_closest_to_point": 172, "error": 289, "exampl": [274, 284], "except": 1, "extension_to_plan": 173, "fabric": [3, 285], "face": 289, "featur": [286, 289], "find_intersecting_pair": 10, "find_neighboring_beam": [160, 272], "find_topologi": 11, "findbeambyrhinoguid": 282, "french": 287, "frenchridgefactori": [201, 202], "frenchridgelapjoint": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "from_centerlin": 174, "from_endpoint": 175, "from_json": [19, 34, 51, 67, 84, 100, 117, 132, 149, 176, 221, 255, 265], "from_jsonstr": [20, 35, 52, 68, 85, 101, 118, 133, 150, 177, 222, 256, 266], "function": 1, "generate_process": 199, "get_cross_cutting_fram": [69, 102, 134, 151], "get_cutting_plan": 86, "get_elements_in_group": 223, "get_face_most_ortho_to_beam": [21, 36, 53, 70, 87, 103, 119, 135, 152], "get_face_most_towards_beam": [22, 37, 54, 71, 88, 104, 120, 136, 153], "get_main_cutting_fram": [72, 105, 137, 154], "get_nam": [44, 250], "get_param": 195, "ghpython": 4, "grasshopp": 279, "guid": 280, "halflap": 287, "has_el": 224, "has_group": 225, "has_interact": 226, "has_materi": 227, "hole": 286, "index": 289, "indic": 276, "instal": 277, "interact": 228, "join": 289, "joint": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 275, 287, 289], "jointtopologi": [43, 44], "l": 287, "lap": 287, "lapjoint": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "lbuttjoint": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "lhalflapjoint": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "licens": 278, "lmiterfactori": [203, 204], "lmiterjoint": [78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "materi": 229, "miter": 287, "model": [5, 283, 287, 288, 289], "opposing_side_index": 178, "option": 283, "overrid": 287, "packag": 0, "plan": 6, "plugin": [7, 279], "process_joineri": 230, "process_joint": 196, "process_model": 191, "refer": 0, "register_joint": 192, "remove_blank_extens": 179, "remove_el": 231, "remove_featur": 180, "remove_interact": 232, "remove_joint": 233, "reset": 181, "restore_beams_from_kei": [23, 38, 55, 73, 89, 106, 121, 138, 155], "rhino": 7, "ridg": 287, "rotat": [234, 235], "rule": 287, "scale": [236, 237], "set_topologi": 238, "sha256": [24, 39, 56, 74, 90, 107, 122, 139, 156, 182, 239, 257, 267], "show": 289, "side_as_surfac": 183, "simplesequencegener": 261, "stabl": 277, "standard": 281, "step": [262, 263, 264, 265, 266, 267, 268, 269, 270, 271], "subtract": 286, "summari": 287, "surfac": [283, 287, 289], "t": 287, "tabl": [276, 287], "tbuttjoint": [111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "thalflapjoint": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "timber": [274, 276], "timbermodel": [205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248], "to_json": [25, 40, 57, 75, 91, 108, 123, 140, 157, 184, 240, 258, 268], "to_jsonstr": [26, 41, 58, 76, 92, 109, 124, 141, 158, 185, 241, 259, 269], "topolog": 287, "topologi": 289, "tostr": [13, 29, 46, 62, 79, 95, 112, 127, 144, 162, 206, 252, 263], "transform": [186, 187, 242, 244, 270], "transform_numpi": 243, "transformed_numpi": 245, "translat": [246, 247], "trim": 286, "type": [287, 289], "update_beam_rol": 59, "util": 290, "validate_data": [27, 42, 60, 77, 93, 110, 125, 142, 159, 188, 248, 260, 271], "workflow": 291, "write": 285, "x": 287, "xhalflapjoint": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159]}})