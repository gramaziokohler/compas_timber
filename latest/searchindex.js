Search.setIndex({"alltitles": {"API Reference": [[0, null]], "Actor": [[243, null]], "Actor.get_name": [[244, null]], "Attributes": [[275, null]], "BTLx": [[189, null]], "BTLx Contribution Guide": [[274, null]], "BTLx.btlx_string": [[190, null]], "BTLx.process_model": [[191, null]], "BTLx.register_joint": [[192, null]], "BTLxJackCut": [[193, null]], "BTLxJackCut.create_process": [[194, null]], "BTLxJackCut.generate_process": [[195, null]], "BTLxProcess": [[196, null]], "Bake with BoxMap": [[284, "bake-with-boxmap"]], "Beam": [[161, null]], "Beam.ToString": [[162, null]], "Beam.add_blank_extension": [[163, null]], "Beam.add_feature": [[164, null]], "Beam.add_features": [[165, null]], "Beam.compute_aabb": [[166, null]], "Beam.compute_collision_mesh": [[167, null]], "Beam.compute_geometry": [[168, null]], "Beam.compute_obb": [[169, null]], "Beam.compute_worldtransformation": [[170, null]], "Beam.copy": [[171, null]], "Beam.endpoint_closest_to_point": [[172, null]], "Beam.extension_to_plane": [[173, null]], "Beam.from_centerline": [[174, null]], "Beam.from_endpoints": [[175, null]], "Beam.from_json": [[176, null]], "Beam.from_jsonstring": [[177, null]], "Beam.opposing_side_index": [[178, null]], "Beam.remove_blank_extension": [[179, null]], "Beam.remove_features": [[180, null]], "Beam.reset": [[181, null]], "Beam.sha256": [[182, null]], "Beam.side_as_surface": [[183, null]], "Beam.to_json": [[184, null]], "Beam.to_jsonstring": [[185, null]], "Beam.transform": [[186, null]], "Beam.transformed": [[187, null]], "Beam.validate_data": [[188, null]], "BeamJoinningError": [[8, null]], "Beams": [[276, null]], "Brep Drill Hole Feature": [[280, "brep-drill-hole-feature"]], "Brep Subtraction Feature": [[280, "brep-subtraction-feature"]], "BuildingPlan": [[245, null]], "BuildingPlan.ToString": [[246, null]], "BuildingPlan.add_step": [[247, null]], "BuildingPlan.copy": [[248, null]], "BuildingPlan.from_json": [[249, null]], "BuildingPlan.from_jsonstring": [[250, null]], "BuildingPlan.sha256": [[251, null]], "BuildingPlan.to_json": [[252, null]], "BuildingPlan.to_jsonstring": [[253, null]], "BuildingPlan.validate_data": [[254, null]], "COMPAS Timber Documentation": [[270, null]], "Category Joint Rules": [[281, "category-joint-rules"]], "Check Attributes": [[275, "check-attributes"]], "Citing": [[267, null]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"]], "ConnectionSolver": [[9, null]], "ConnectionSolver.find_intersecting_pairs": [[10, null]], "ConnectionSolver.find_topology": [[11, null]], "Create Joint": [[269, null]], "Custom Attributes": [[275, "custom-attributes"]], "Custom Beam Dimensions": [[277, "custom-beam-dimensions"]], "DecomposeBeam": [[276, "decomposebeam"]], "Default Joint Rules": [[281, "default-joint-rules"]], "Delete Attributes": [[275, "delete-attributes"]], "Dependencies": [[270, "dependencies"]], "Design": [[277, null]], "Development": [[271, "development"]], "Direct Joint Rules": [[281, "direct-joint-rules"]], "Examples": [[268, null], [278, null]], "Exceptions": [[1, "exceptions"]], "Fabrication": [[279, null]], "Features": [[280, null]], "FindBeamByRhinoGuid": [[276, "findbeambyrhinoguid"]], "French Ridge Lap": [[281, "french-ridge-lap"]], "Functions": [[1, "functions"]], "Grasshopper plugin": [[273, null]], "Indices and tables": [[270, "indices-and-tables"]], "Install with conda": [[271, "install-with-conda"]], "Installation": [[271, null]], "Joint": [[12, null]], "Joint Rules": [[281, null]], "Joint Rules Components": [[281, "joint-rules-components"]], "Joint Types": [[281, "joint-types"]], "Joint.ToString": [[13, null]], "Joint.add_extensions": [[14, null]], "Joint.add_features": [[15, null]], "Joint.check_elements_compatability": [[16, null]], "Joint.copy": [[17, null]], "Joint.create": [[18, null]], "Joint.element_count_complies": [[19, null]], "Joint.from_json": [[20, null]], "Joint.from_jsonstring": [[21, null]], "Joint.get_face_most_ortho_to_beam": [[22, null]], "Joint.get_face_most_towards_beam": [[23, null]], "Joint.restore_beams_from_keys": [[24, null]], "Joint.sha256": [[25, null]], "Joint.to_json": [[26, null]], "Joint.to_jsonstring": [[27, null]], "Joint.validate_data": [[28, null]], "JointTopology": [[29, null]], "JointTopology.get_name": [[30, null]], "L-Butt": [[281, "l-butt"]], "L-HalfLap": [[281, "l-halflap"]], "L-Miter": [[281, "l-miter"]], "LButtJoint": [[31, null]], "LButtJoint.ToString": [[32, null]], "LButtJoint.add_extensions": [[33, null]], "LButtJoint.add_features": [[34, null]], "LButtJoint.check_elements_compatability": [[35, null]], "LButtJoint.copy": [[36, null]], "LButtJoint.create": [[37, null]], "LButtJoint.element_count_complies": [[38, null]], "LButtJoint.from_json": [[39, null]], "LButtJoint.from_jsonstring": [[40, null]], "LButtJoint.get_face_most_ortho_to_beam": [[41, null]], "LButtJoint.get_face_most_towards_beam": [[42, null]], "LButtJoint.restore_beams_from_keys": [[43, null]], "LButtJoint.sha256": [[44, null]], "LButtJoint.to_json": [[45, null]], "LButtJoint.to_jsonstring": [[46, null]], "LButtJoint.update_beam_roles": [[47, null]], "LButtJoint.validate_data": [[48, null]], "LHalfLapJoint": [[49, null]], "LHalfLapJoint.ToString": [[50, null]], "LHalfLapJoint.add_extensions": [[51, null]], "LHalfLapJoint.add_features": [[52, null]], "LHalfLapJoint.check_elements_compatability": [[53, null]], "LHalfLapJoint.copy": [[54, null]], "LHalfLapJoint.create": [[55, null]], "LHalfLapJoint.element_count_complies": [[56, null]], "LHalfLapJoint.from_json": [[57, null]], "LHalfLapJoint.from_jsonstring": [[58, null]], "LHalfLapJoint.get_cross_cutting_frame": [[59, null]], "LHalfLapJoint.get_face_most_ortho_to_beam": [[60, null]], "LHalfLapJoint.get_face_most_towards_beam": [[61, null]], "LHalfLapJoint.get_main_cutting_frame": [[62, null]], "LHalfLapJoint.restore_beams_from_keys": [[63, null]], "LHalfLapJoint.sha256": [[64, null]], "LHalfLapJoint.to_json": [[65, null]], "LHalfLapJoint.to_jsonstring": [[66, null]], "LHalfLapJoint.validate_data": [[67, null]], "LMiterFactory": [[197, null]], "LMiterFactory.apply_processings": [[198, null]], "LMiterJoint": [[68, null]], "LMiterJoint.ToString": [[69, null]], "LMiterJoint.add_extensions": [[70, null]], "LMiterJoint.add_features": [[71, null]], "LMiterJoint.check_elements_compatability": [[72, null]], "LMiterJoint.copy": [[73, null]], "LMiterJoint.create": [[74, null]], "LMiterJoint.element_count_complies": [[75, null]], "LMiterJoint.from_json": [[76, null]], "LMiterJoint.from_jsonstring": [[77, null]], "LMiterJoint.get_cutting_planes": [[78, null]], "LMiterJoint.get_face_most_ortho_to_beam": [[79, null]], "LMiterJoint.get_face_most_towards_beam": [[80, null]], "LMiterJoint.restore_beams_from_keys": [[81, null]], "LMiterJoint.sha256": [[82, null]], "LMiterJoint.to_json": [[83, null]], "LMiterJoint.to_jsonstring": [[84, null]], "LMiterJoint.validate_data": [[85, null]], "LapJoint": [[86, null]], "LapJoint.ToString": [[87, null]], "LapJoint.add_extensions": [[88, null]], "LapJoint.add_features": [[89, null]], "LapJoint.check_elements_compatability": [[90, null]], "LapJoint.copy": [[91, null]], "LapJoint.create": [[92, null]], "LapJoint.element_count_complies": [[93, null]], "LapJoint.from_json": [[94, null]], "LapJoint.from_jsonstring": [[95, null]], "LapJoint.get_cross_cutting_frame": [[96, null]], "LapJoint.get_face_most_ortho_to_beam": [[97, null]], "LapJoint.get_face_most_towards_beam": [[98, null]], "LapJoint.get_main_cutting_frame": [[99, null]], "LapJoint.restore_beams_from_keys": [[100, null]], "LapJoint.sha256": [[101, null]], "LapJoint.to_json": [[102, null]], "LapJoint.to_jsonstring": [[103, null]], "LapJoint.validate_data": [[104, null]], "License": [[272, null]], "Model": [[282, null]], "Packages": [[0, "packages"]], "Plugins": [[7, "plugins"]], "Show": [[283, null]], "Show Beam Face Index": [[283, "show-beam-face-index"]], "Show Beam Index": [[283, "show-beam-index"]], "Show Feature Errors": [[283, "show-feature-errors"]], "Show Joining Errors": [[283, "show-joining-errors"]], "Show Joint Types": [[283, "show-joint-types"]], "Show Surface Model Beam Types": [[283, "show-surface-model-beam-types"]], "Show Topology Types": [[283, "show-topology-types"]], "SimpleSequenceGenerator": [[255, null]], "Stable": [[271, "stable"]], "Standard Attributes": [[275, "standard-attributes"]], "Step": [[256, null]], "Step.ToString": [[257, null]], "Step.copy": [[258, null]], "Step.from_json": [[259, null]], "Step.from_jsonstring": [[260, null]], "Step.sha256": [[261, null]], "Step.to_json": [[262, null]], "Step.to_jsonstring": [[263, null]], "Step.transform": [[264, null]], "Step.validate_data": [[265, null]], "Summary Table": [[281, "summary-table"]], "Surface Model": [[277, "surface-model"]], "Surface Model Joint Override": [[281, "surface-model-joint-override"]], "Surface Model Options": [[277, "surface-model-options"]], "T-Butt": [[281, "t-butt"]], "T-HalfLap": [[281, "t-halflap"]], "TButtJoint": [[105, null]], "TButtJoint.ToString": [[106, null]], "TButtJoint.add_extensions": [[107, null]], "TButtJoint.add_features": [[108, null]], "TButtJoint.check_elements_compatability": [[109, null]], "TButtJoint.copy": [[110, null]], "TButtJoint.create": [[111, null]], "TButtJoint.element_count_complies": [[112, null]], "TButtJoint.from_json": [[113, null]], "TButtJoint.from_jsonstring": [[114, null]], "TButtJoint.get_face_most_ortho_to_beam": [[115, null]], "TButtJoint.get_face_most_towards_beam": [[116, null]], "TButtJoint.restore_beams_from_keys": [[117, null]], "TButtJoint.sha256": [[118, null]], "TButtJoint.to_json": [[119, null]], "TButtJoint.to_jsonstring": [[120, null]], "TButtJoint.validate_data": [[121, null]], "THalfLapJoint": [[122, null]], "THalfLapJoint.ToString": [[123, null]], "THalfLapJoint.add_extensions": [[124, null]], "THalfLapJoint.add_features": [[125, null]], "THalfLapJoint.check_elements_compatability": [[126, null]], "THalfLapJoint.copy": [[127, null]], "THalfLapJoint.create": [[128, null]], "THalfLapJoint.element_count_complies": [[129, null]], "THalfLapJoint.from_json": [[130, null]], "THalfLapJoint.from_jsonstring": [[131, null]], "THalfLapJoint.get_cross_cutting_frame": [[132, null]], "THalfLapJoint.get_face_most_ortho_to_beam": [[133, null]], "THalfLapJoint.get_face_most_towards_beam": [[134, null]], "THalfLapJoint.get_main_cutting_frame": [[135, null]], "THalfLapJoint.restore_beams_from_keys": [[136, null]], "THalfLapJoint.sha256": [[137, null]], "THalfLapJoint.to_json": [[138, null]], "THalfLapJoint.to_jsonstring": [[139, null]], "THalfLapJoint.validate_data": [[140, null]], "Table of Contents": [[270, "table-of-contents"]], "Timber Assembly Examples": [[268, "timber-assembly-examples"]], "TimberModel": [[199, null]], "TimberModel.ToString": [[200, null]], "TimberModel.add_element": [[201, null]], "TimberModel.add_elements": [[202, null]], "TimberModel.add_group": [[203, null]], "TimberModel.add_group_element": [[204, null]], "TimberModel.add_interaction": [[205, null]], "TimberModel.add_joint": [[206, null]], "TimberModel.add_material": [[207, null]], "TimberModel.assign_material": [[208, null]], "TimberModel.compute_aabb": [[209, null]], "TimberModel.compute_obb": [[210, null]], "TimberModel.copy": [[211, null]], "TimberModel.element_by_guid": [[212, null]], "TimberModel.elements": [[213, null]], "TimberModel.elements_connected_by": [[214, null]], "TimberModel.from_json": [[215, null]], "TimberModel.from_jsonstring": [[216, null]], "TimberModel.get_elements_in_group": [[217, null]], "TimberModel.has_element": [[218, null]], "TimberModel.has_group": [[219, null]], "TimberModel.has_interaction": [[220, null]], "TimberModel.has_material": [[221, null]], "TimberModel.interactions": [[222, null]], "TimberModel.materials": [[223, null]], "TimberModel.process_joinery": [[224, null]], "TimberModel.remove_element": [[225, null]], "TimberModel.remove_interaction": [[226, null]], "TimberModel.remove_joint": [[227, null]], "TimberModel.rotate": [[228, null]], "TimberModel.rotated": [[229, null]], "TimberModel.scale": [[230, null]], "TimberModel.scaled": [[231, null]], "TimberModel.set_topologies": [[232, null]], "TimberModel.sha256": [[233, null]], "TimberModel.to_json": [[234, null]], "TimberModel.to_jsonstring": [[235, null]], "TimberModel.transform": [[236, null]], "TimberModel.transform_numpy": [[237, null]], "TimberModel.transformed": [[238, null]], "TimberModel.transformed_numpy": [[239, null]], "TimberModel.translate": [[240, null]], "TimberModel.translated": [[241, null]], "TimberModel.validate_data": [[242, null]], "Topological Joint Rules": [[281, "topological-joint-rules"]], "Trim Feature": [[280, "trim-feature"]], "Utils": [[284, null]], "Workflow": [[285, null]], "Write BTLx": [[279, "write-btlx"]], "X-HalfLap": [[281, "x-halflap"]], "XHalfLapJoint": [[141, null]], "XHalfLapJoint.ToString": [[142, null]], "XHalfLapJoint.add_extensions": [[143, null]], "XHalfLapJoint.add_features": [[144, null]], "XHalfLapJoint.check_elements_compatability": [[145, null]], "XHalfLapJoint.copy": [[146, null]], "XHalfLapJoint.create": [[147, null]], "XHalfLapJoint.element_count_complies": [[148, null]], "XHalfLapJoint.from_json": [[149, null]], "XHalfLapJoint.from_jsonstring": [[150, null]], "XHalfLapJoint.get_cross_cutting_frame": [[151, null]], "XHalfLapJoint.get_face_most_ortho_to_beam": [[152, null]], "XHalfLapJoint.get_face_most_towards_beam": [[153, null]], "XHalfLapJoint.get_main_cutting_frame": [[154, null]], "XHalfLapJoint.restore_beams_from_keys": [[155, null]], "XHalfLapJoint.sha256": [[156, null]], "XHalfLapJoint.to_json": [[157, null]], "XHalfLapJoint.to_jsonstring": [[158, null]], "XHalfLapJoint.validate_data": [[159, null]], "compas_timber.connections": [[1, null]], "compas_timber.elements": [[2, null]], "compas_timber.fabrication": [[3, null]], "compas_timber.ghpython": [[4, null]], "compas_timber.model": [[5, null]], "compas_timber.planning": [[6, null]], "find_neighboring_beams": [[160, null], [266, null]], "rhino": [[7, null]]}, "docnames": ["api", "api/compas_timber.connections", "api/compas_timber.elements", "api/compas_timber.fabrication", "api/compas_timber.ghpython", "api/compas_timber.model", "api/compas_timber.planning", "api/compas_timber.rhino", "api/generated/compas_timber.connections.BeamJoinningError", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_extensions", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.check_elements_compatability", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.element_count_complies", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.from_jsonstring", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.to_jsonstring", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_extensions", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.check_elements_compatability", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.element_count_complies", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring", "api/generated/compas_timber.connections.LButtJoint.update_beam_roles", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LHalfLapJoint", "api/generated/compas_timber.connections.LHalfLapJoint.ToString", "api/generated/compas_timber.connections.LHalfLapJoint.add_extensions", "api/generated/compas_timber.connections.LHalfLapJoint.add_features", "api/generated/compas_timber.connections.LHalfLapJoint.check_elements_compatability", "api/generated/compas_timber.connections.LHalfLapJoint.copy", "api/generated/compas_timber.connections.LHalfLapJoint.create", "api/generated/compas_timber.connections.LHalfLapJoint.element_count_complies", "api/generated/compas_timber.connections.LHalfLapJoint.from_json", "api/generated/compas_timber.connections.LHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LHalfLapJoint.sha256", "api/generated/compas_timber.connections.LHalfLapJoint.to_json", "api/generated/compas_timber.connections.LHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_extensions", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.check_elements_compatability", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.element_count_complies", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.LapJoint", "api/generated/compas_timber.connections.LapJoint.ToString", "api/generated/compas_timber.connections.LapJoint.add_extensions", "api/generated/compas_timber.connections.LapJoint.add_features", "api/generated/compas_timber.connections.LapJoint.check_elements_compatability", "api/generated/compas_timber.connections.LapJoint.copy", "api/generated/compas_timber.connections.LapJoint.create", "api/generated/compas_timber.connections.LapJoint.element_count_complies", "api/generated/compas_timber.connections.LapJoint.from_json", "api/generated/compas_timber.connections.LapJoint.from_jsonstring", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LapJoint.sha256", "api/generated/compas_timber.connections.LapJoint.to_json", "api/generated/compas_timber.connections.LapJoint.to_jsonstring", "api/generated/compas_timber.connections.LapJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_extensions", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.check_elements_compatability", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.element_count_complies", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.THalfLapJoint", "api/generated/compas_timber.connections.THalfLapJoint.ToString", "api/generated/compas_timber.connections.THalfLapJoint.add_extensions", "api/generated/compas_timber.connections.THalfLapJoint.add_features", "api/generated/compas_timber.connections.THalfLapJoint.check_elements_compatability", "api/generated/compas_timber.connections.THalfLapJoint.copy", "api/generated/compas_timber.connections.THalfLapJoint.create", "api/generated/compas_timber.connections.THalfLapJoint.element_count_complies", "api/generated/compas_timber.connections.THalfLapJoint.from_json", "api/generated/compas_timber.connections.THalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.THalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.THalfLapJoint.sha256", "api/generated/compas_timber.connections.THalfLapJoint.to_json", "api/generated/compas_timber.connections.THalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.validate_data", "api/generated/compas_timber.connections.XHalfLapJoint", "api/generated/compas_timber.connections.XHalfLapJoint.ToString", "api/generated/compas_timber.connections.XHalfLapJoint.add_extensions", "api/generated/compas_timber.connections.XHalfLapJoint.add_features", "api/generated/compas_timber.connections.XHalfLapJoint.check_elements_compatability", "api/generated/compas_timber.connections.XHalfLapJoint.copy", "api/generated/compas_timber.connections.XHalfLapJoint.create", "api/generated/compas_timber.connections.XHalfLapJoint.element_count_complies", "api/generated/compas_timber.connections.XHalfLapJoint.from_json", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.XHalfLapJoint.sha256", "api/generated/compas_timber.connections.XHalfLapJoint.to_json", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data", "api/generated/compas_timber.connections.find_neighboring_beams", "api/generated/compas_timber.elements.Beam", "api/generated/compas_timber.elements.Beam.ToString", "api/generated/compas_timber.elements.Beam.add_blank_extension", "api/generated/compas_timber.elements.Beam.add_feature", "api/generated/compas_timber.elements.Beam.add_features", "api/generated/compas_timber.elements.Beam.compute_aabb", "api/generated/compas_timber.elements.Beam.compute_collision_mesh", "api/generated/compas_timber.elements.Beam.compute_geometry", "api/generated/compas_timber.elements.Beam.compute_obb", "api/generated/compas_timber.elements.Beam.compute_worldtransformation", "api/generated/compas_timber.elements.Beam.copy", "api/generated/compas_timber.elements.Beam.endpoint_closest_to_point", "api/generated/compas_timber.elements.Beam.extension_to_plane", "api/generated/compas_timber.elements.Beam.from_centerline", "api/generated/compas_timber.elements.Beam.from_endpoints", "api/generated/compas_timber.elements.Beam.from_json", "api/generated/compas_timber.elements.Beam.from_jsonstring", "api/generated/compas_timber.elements.Beam.opposing_side_index", "api/generated/compas_timber.elements.Beam.remove_blank_extension", "api/generated/compas_timber.elements.Beam.remove_features", "api/generated/compas_timber.elements.Beam.reset", "api/generated/compas_timber.elements.Beam.sha256", "api/generated/compas_timber.elements.Beam.side_as_surface", "api/generated/compas_timber.elements.Beam.to_json", "api/generated/compas_timber.elements.Beam.to_jsonstring", "api/generated/compas_timber.elements.Beam.transform", "api/generated/compas_timber.elements.Beam.transformed", "api/generated/compas_timber.elements.Beam.validate_data", "api/generated/compas_timber.fabrication.BTLx", "api/generated/compas_timber.fabrication.BTLx.btlx_string", "api/generated/compas_timber.fabrication.BTLx.process_model", "api/generated/compas_timber.fabrication.BTLx.register_joint", "api/generated/compas_timber.fabrication.BTLxJackCut", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process", "api/generated/compas_timber.fabrication.BTLxProcess", "api/generated/compas_timber.fabrication.LMiterFactory", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings", "api/generated/compas_timber.model.TimberModel", "api/generated/compas_timber.model.TimberModel.ToString", "api/generated/compas_timber.model.TimberModel.add_element", "api/generated/compas_timber.model.TimberModel.add_elements", "api/generated/compas_timber.model.TimberModel.add_group", "api/generated/compas_timber.model.TimberModel.add_group_element", "api/generated/compas_timber.model.TimberModel.add_interaction", "api/generated/compas_timber.model.TimberModel.add_joint", "api/generated/compas_timber.model.TimberModel.add_material", "api/generated/compas_timber.model.TimberModel.assign_material", "api/generated/compas_timber.model.TimberModel.compute_aabb", "api/generated/compas_timber.model.TimberModel.compute_obb", "api/generated/compas_timber.model.TimberModel.copy", "api/generated/compas_timber.model.TimberModel.element_by_guid", "api/generated/compas_timber.model.TimberModel.elements", "api/generated/compas_timber.model.TimberModel.elements_connected_by", "api/generated/compas_timber.model.TimberModel.from_json", "api/generated/compas_timber.model.TimberModel.from_jsonstring", "api/generated/compas_timber.model.TimberModel.get_elements_in_group", "api/generated/compas_timber.model.TimberModel.has_element", "api/generated/compas_timber.model.TimberModel.has_group", "api/generated/compas_timber.model.TimberModel.has_interaction", "api/generated/compas_timber.model.TimberModel.has_material", "api/generated/compas_timber.model.TimberModel.interactions", "api/generated/compas_timber.model.TimberModel.materials", "api/generated/compas_timber.model.TimberModel.process_joinery", "api/generated/compas_timber.model.TimberModel.remove_element", "api/generated/compas_timber.model.TimberModel.remove_interaction", "api/generated/compas_timber.model.TimberModel.remove_joint", "api/generated/compas_timber.model.TimberModel.rotate", "api/generated/compas_timber.model.TimberModel.rotated", "api/generated/compas_timber.model.TimberModel.scale", "api/generated/compas_timber.model.TimberModel.scaled", "api/generated/compas_timber.model.TimberModel.set_topologies", "api/generated/compas_timber.model.TimberModel.sha256", "api/generated/compas_timber.model.TimberModel.to_json", "api/generated/compas_timber.model.TimberModel.to_jsonstring", "api/generated/compas_timber.model.TimberModel.transform", "api/generated/compas_timber.model.TimberModel.transform_numpy", "api/generated/compas_timber.model.TimberModel.transformed", "api/generated/compas_timber.model.TimberModel.transformed_numpy", "api/generated/compas_timber.model.TimberModel.translate", "api/generated/compas_timber.model.TimberModel.translated", "api/generated/compas_timber.model.TimberModel.validate_data", "api/generated/compas_timber.planning.Actor", "api/generated/compas_timber.planning.Actor.get_name", "api/generated/compas_timber.planning.BuildingPlan", "api/generated/compas_timber.planning.BuildingPlan.ToString", "api/generated/compas_timber.planning.BuildingPlan.add_step", "api/generated/compas_timber.planning.BuildingPlan.copy", "api/generated/compas_timber.planning.BuildingPlan.from_json", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.sha256", "api/generated/compas_timber.planning.BuildingPlan.to_json", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.validate_data", "api/generated/compas_timber.planning.SimpleSequenceGenerator", "api/generated/compas_timber.planning.Step", "api/generated/compas_timber.planning.Step.ToString", "api/generated/compas_timber.planning.Step.copy", "api/generated/compas_timber.planning.Step.from_json", "api/generated/compas_timber.planning.Step.from_jsonstring", "api/generated/compas_timber.planning.Step.sha256", "api/generated/compas_timber.planning.Step.to_json", "api/generated/compas_timber.planning.Step.to_jsonstring", "api/generated/compas_timber.planning.Step.transform", "api/generated/compas_timber.planning.Step.validate_data", "api/generated/compas_timber.rhino.find_neighboring_beams", "citing", "examples", "examples/create_joint", "index", "installation", "license", "tutorials", "tutorials/BTLx_contribution_guide", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beams", "tutorials/grasshopper/design", "tutorials/grasshopper/examples", "tutorials/grasshopper/fabrication", "tutorials/grasshopper/features", "tutorials/grasshopper/joint_rules", "tutorials/grasshopper/model", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api.rst", "api/compas_timber.connections.rst", "api/compas_timber.elements.rst", "api/compas_timber.fabrication.rst", "api/compas_timber.ghpython.rst", "api/compas_timber.model.rst", "api/compas_timber.planning.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.connections.BeamJoinningError.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_extensions.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.check_elements_compatability.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.element_count_complies.rst", "api/generated/compas_timber.connections.Joint.from_json.rst", "api/generated/compas_timber.connections.Joint.from_jsonstring.rst", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_json.rst", "api/generated/compas_timber.connections.Joint.to_jsonstring.rst", "api/generated/compas_timber.connections.Joint.validate_data.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_extensions.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.check_elements_compatability.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LButtJoint.from_json.rst", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.to_json.rst", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.update_beam_roles.rst", "api/generated/compas_timber.connections.LButtJoint.validate_data.rst", "api/generated/compas_timber.connections.LHalfLapJoint.rst", "api/generated/compas_timber.connections.LHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.LHalfLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.LHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.LHalfLapJoint.check_elements_compatability.rst", "api/generated/compas_timber.connections.LHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.LHalfLapJoint.create.rst", "api/generated/compas_timber.connections.LHalfLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.LHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.LHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.LHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_extensions.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.check_elements_compatability.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LMiterJoint.from_json.rst", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_json.rst", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_data.rst", "api/generated/compas_timber.connections.LapJoint.rst", "api/generated/compas_timber.connections.LapJoint.ToString.rst", "api/generated/compas_timber.connections.LapJoint.add_extensions.rst", "api/generated/compas_timber.connections.LapJoint.add_features.rst", "api/generated/compas_timber.connections.LapJoint.check_elements_compatability.rst", "api/generated/compas_timber.connections.LapJoint.copy.rst", "api/generated/compas_timber.connections.LapJoint.create.rst", "api/generated/compas_timber.connections.LapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LapJoint.from_json.rst", "api/generated/compas_timber.connections.LapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LapJoint.sha256.rst", "api/generated/compas_timber.connections.LapJoint.to_json.rst", "api/generated/compas_timber.connections.LapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.validate_data.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_extensions.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.check_elements_compatability.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TButtJoint.from_json.rst", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.to_json.rst", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.validate_data.rst", "api/generated/compas_timber.connections.THalfLapJoint.rst", "api/generated/compas_timber.connections.THalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.THalfLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.THalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.THalfLapJoint.check_elements_compatability.rst", "api/generated/compas_timber.connections.THalfLapJoint.copy.rst", "api/generated/compas_timber.connections.THalfLapJoint.create.rst", "api/generated/compas_timber.connections.THalfLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.THalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.THalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.THalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.THalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.THalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.THalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.THalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.rst", "api/generated/compas_timber.connections.XHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.XHalfLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.XHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.XHalfLapJoint.check_elements_compatability.rst", "api/generated/compas_timber.connections.XHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.XHalfLapJoint.create.rst", "api/generated/compas_timber.connections.XHalfLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.XHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.find_neighboring_beams.rst", "api/generated/compas_timber.elements.Beam.rst", "api/generated/compas_timber.elements.Beam.ToString.rst", "api/generated/compas_timber.elements.Beam.add_blank_extension.rst", "api/generated/compas_timber.elements.Beam.add_feature.rst", "api/generated/compas_timber.elements.Beam.add_features.rst", "api/generated/compas_timber.elements.Beam.compute_aabb.rst", "api/generated/compas_timber.elements.Beam.compute_collision_mesh.rst", "api/generated/compas_timber.elements.Beam.compute_geometry.rst", "api/generated/compas_timber.elements.Beam.compute_obb.rst", "api/generated/compas_timber.elements.Beam.compute_worldtransformation.rst", "api/generated/compas_timber.elements.Beam.copy.rst", "api/generated/compas_timber.elements.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.elements.Beam.extension_to_plane.rst", "api/generated/compas_timber.elements.Beam.from_centerline.rst", "api/generated/compas_timber.elements.Beam.from_endpoints.rst", "api/generated/compas_timber.elements.Beam.from_json.rst", "api/generated/compas_timber.elements.Beam.from_jsonstring.rst", "api/generated/compas_timber.elements.Beam.opposing_side_index.rst", "api/generated/compas_timber.elements.Beam.remove_blank_extension.rst", "api/generated/compas_timber.elements.Beam.remove_features.rst", "api/generated/compas_timber.elements.Beam.reset.rst", "api/generated/compas_timber.elements.Beam.sha256.rst", "api/generated/compas_timber.elements.Beam.side_as_surface.rst", "api/generated/compas_timber.elements.Beam.to_json.rst", "api/generated/compas_timber.elements.Beam.to_jsonstring.rst", "api/generated/compas_timber.elements.Beam.transform.rst", "api/generated/compas_timber.elements.Beam.transformed.rst", "api/generated/compas_timber.elements.Beam.validate_data.rst", "api/generated/compas_timber.fabrication.BTLx.rst", "api/generated/compas_timber.fabrication.BTLx.btlx_string.rst", "api/generated/compas_timber.fabrication.BTLx.process_model.rst", "api/generated/compas_timber.fabrication.BTLx.register_joint.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process.rst", "api/generated/compas_timber.fabrication.BTLxProcess.rst", "api/generated/compas_timber.fabrication.LMiterFactory.rst", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings.rst", "api/generated/compas_timber.model.TimberModel.rst", "api/generated/compas_timber.model.TimberModel.ToString.rst", "api/generated/compas_timber.model.TimberModel.add_element.rst", "api/generated/compas_timber.model.TimberModel.add_elements.rst", "api/generated/compas_timber.model.TimberModel.add_group.rst", "api/generated/compas_timber.model.TimberModel.add_group_element.rst", "api/generated/compas_timber.model.TimberModel.add_interaction.rst", "api/generated/compas_timber.model.TimberModel.add_joint.rst", "api/generated/compas_timber.model.TimberModel.add_material.rst", "api/generated/compas_timber.model.TimberModel.assign_material.rst", "api/generated/compas_timber.model.TimberModel.compute_aabb.rst", "api/generated/compas_timber.model.TimberModel.compute_obb.rst", "api/generated/compas_timber.model.TimberModel.copy.rst", "api/generated/compas_timber.model.TimberModel.element_by_guid.rst", "api/generated/compas_timber.model.TimberModel.elements.rst", "api/generated/compas_timber.model.TimberModel.elements_connected_by.rst", "api/generated/compas_timber.model.TimberModel.from_json.rst", "api/generated/compas_timber.model.TimberModel.from_jsonstring.rst", "api/generated/compas_timber.model.TimberModel.get_elements_in_group.rst", "api/generated/compas_timber.model.TimberModel.has_element.rst", "api/generated/compas_timber.model.TimberModel.has_group.rst", "api/generated/compas_timber.model.TimberModel.has_interaction.rst", "api/generated/compas_timber.model.TimberModel.has_material.rst", "api/generated/compas_timber.model.TimberModel.interactions.rst", "api/generated/compas_timber.model.TimberModel.materials.rst", "api/generated/compas_timber.model.TimberModel.process_joinery.rst", "api/generated/compas_timber.model.TimberModel.remove_element.rst", "api/generated/compas_timber.model.TimberModel.remove_interaction.rst", "api/generated/compas_timber.model.TimberModel.remove_joint.rst", "api/generated/compas_timber.model.TimberModel.rotate.rst", "api/generated/compas_timber.model.TimberModel.rotated.rst", "api/generated/compas_timber.model.TimberModel.scale.rst", "api/generated/compas_timber.model.TimberModel.scaled.rst", "api/generated/compas_timber.model.TimberModel.set_topologies.rst", "api/generated/compas_timber.model.TimberModel.sha256.rst", "api/generated/compas_timber.model.TimberModel.to_json.rst", "api/generated/compas_timber.model.TimberModel.to_jsonstring.rst", "api/generated/compas_timber.model.TimberModel.transform.rst", "api/generated/compas_timber.model.TimberModel.transform_numpy.rst", "api/generated/compas_timber.model.TimberModel.transformed.rst", "api/generated/compas_timber.model.TimberModel.transformed_numpy.rst", "api/generated/compas_timber.model.TimberModel.translate.rst", "api/generated/compas_timber.model.TimberModel.translated.rst", "api/generated/compas_timber.model.TimberModel.validate_data.rst", "api/generated/compas_timber.planning.Actor.rst", "api/generated/compas_timber.planning.Actor.get_name.rst", "api/generated/compas_timber.planning.BuildingPlan.rst", "api/generated/compas_timber.planning.BuildingPlan.ToString.rst", "api/generated/compas_timber.planning.BuildingPlan.add_step.rst", "api/generated/compas_timber.planning.BuildingPlan.copy.rst", "api/generated/compas_timber.planning.BuildingPlan.from_json.rst", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.sha256.rst", "api/generated/compas_timber.planning.BuildingPlan.to_json.rst", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.validate_data.rst", "api/generated/compas_timber.planning.SimpleSequenceGenerator.rst", "api/generated/compas_timber.planning.Step.rst", "api/generated/compas_timber.planning.Step.ToString.rst", "api/generated/compas_timber.planning.Step.copy.rst", "api/generated/compas_timber.planning.Step.from_json.rst", "api/generated/compas_timber.planning.Step.from_jsonstring.rst", "api/generated/compas_timber.planning.Step.sha256.rst", "api/generated/compas_timber.planning.Step.to_json.rst", "api/generated/compas_timber.planning.Step.to_jsonstring.rst", "api/generated/compas_timber.planning.Step.transform.rst", "api/generated/compas_timber.planning.Step.validate_data.rst", "api/generated/compas_timber.rhino.find_neighboring_beams.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "license.rst", "tutorials.rst", "tutorials/BTLx_contribution_guide.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beams.rst", "tutorials/grasshopper/design.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/fabrication.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joint_rules.rst", "tutorials/grasshopper/model.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "indexentries": {"actor (class in compas_timber.planning)": [[243, "compas_timber.planning.Actor", false]], "add_blank_extension() (compas_timber.elements.beam method)": [[163, "compas_timber.elements.Beam.add_blank_extension", false]], "add_element() (compas_timber.model.timbermodel method)": [[201, "compas_timber.model.TimberModel.add_element", false]], "add_elements() (compas_timber.model.timbermodel method)": [[202, "compas_timber.model.TimberModel.add_elements", false]], "add_extensions() (compas_timber.connections.joint method)": [[14, "compas_timber.connections.Joint.add_extensions", false]], "add_extensions() (compas_timber.connections.lapjoint method)": [[88, "compas_timber.connections.LapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lbuttjoint method)": [[33, "compas_timber.connections.LButtJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lhalflapjoint method)": [[51, "compas_timber.connections.LHalfLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lmiterjoint method)": [[70, "compas_timber.connections.LMiterJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tbuttjoint method)": [[107, "compas_timber.connections.TButtJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.thalflapjoint method)": [[124, "compas_timber.connections.THalfLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.xhalflapjoint method)": [[143, "compas_timber.connections.XHalfLapJoint.add_extensions", false]], "add_feature() (compas_timber.elements.beam method)": [[164, "compas_timber.elements.Beam.add_feature", false]], "add_features() (compas_timber.connections.joint method)": [[15, "compas_timber.connections.Joint.add_features", false]], "add_features() (compas_timber.connections.lapjoint method)": [[89, "compas_timber.connections.LapJoint.add_features", false]], "add_features() (compas_timber.connections.lbuttjoint method)": [[34, "compas_timber.connections.LButtJoint.add_features", false]], "add_features() (compas_timber.connections.lhalflapjoint method)": [[52, "compas_timber.connections.LHalfLapJoint.add_features", false]], "add_features() (compas_timber.connections.lmiterjoint method)": [[71, "compas_timber.connections.LMiterJoint.add_features", false]], "add_features() (compas_timber.connections.tbuttjoint method)": [[108, "compas_timber.connections.TButtJoint.add_features", false]], "add_features() (compas_timber.connections.thalflapjoint method)": [[125, "compas_timber.connections.THalfLapJoint.add_features", false]], "add_features() (compas_timber.connections.xhalflapjoint method)": [[144, "compas_timber.connections.XHalfLapJoint.add_features", false]], "add_features() (compas_timber.elements.beam method)": [[165, "compas_timber.elements.Beam.add_features", false]], "add_group() (compas_timber.model.timbermodel method)": [[203, "compas_timber.model.TimberModel.add_group", false]], "add_group_element() (compas_timber.model.timbermodel method)": [[204, "compas_timber.model.TimberModel.add_group_element", false]], "add_interaction() (compas_timber.model.timbermodel method)": [[205, "compas_timber.model.TimberModel.add_interaction", false]], "add_joint() (compas_timber.model.timbermodel method)": [[206, "compas_timber.model.TimberModel.add_joint", false]], "add_material() (compas_timber.model.timbermodel method)": [[207, "compas_timber.model.TimberModel.add_material", false]], "add_step() (compas_timber.planning.buildingplan method)": [[247, "compas_timber.planning.BuildingPlan.add_step", false]], "apply_processings() (compas_timber.fabrication.lmiterfactory class method)": [[198, "compas_timber.fabrication.LMiterFactory.apply_processings", false]], "assign_material() (compas_timber.model.timbermodel method)": [[208, "compas_timber.model.TimberModel.assign_material", false]], "beam (class in compas_timber.elements)": [[161, "compas_timber.elements.Beam", false]], "beamjoinningerror": [[8, "compas_timber.connections.BeamJoinningError", false]], "btlx (class in compas_timber.fabrication)": [[189, "compas_timber.fabrication.BTLx", false]], "btlx_string() (compas_timber.fabrication.btlx method)": [[190, "compas_timber.fabrication.BTLx.btlx_string", false]], "btlxjackcut (class in compas_timber.fabrication)": [[193, "compas_timber.fabrication.BTLxJackCut", false]], "btlxprocess (class in compas_timber.fabrication)": [[196, "compas_timber.fabrication.BTLxProcess", false]], "buildingplan (class in compas_timber.planning)": [[245, "compas_timber.planning.BuildingPlan", false]], "check_elements_compatability() (compas_timber.connections.joint method)": [[16, "compas_timber.connections.Joint.check_elements_compatability", false]], "check_elements_compatability() (compas_timber.connections.lapjoint method)": [[90, "compas_timber.connections.LapJoint.check_elements_compatability", false]], "check_elements_compatability() (compas_timber.connections.lbuttjoint method)": [[35, "compas_timber.connections.LButtJoint.check_elements_compatability", false]], "check_elements_compatability() (compas_timber.connections.lhalflapjoint method)": [[53, "compas_timber.connections.LHalfLapJoint.check_elements_compatability", false]], "check_elements_compatability() (compas_timber.connections.lmiterjoint method)": [[72, "compas_timber.connections.LMiterJoint.check_elements_compatability", false]], "check_elements_compatability() (compas_timber.connections.tbuttjoint method)": [[109, "compas_timber.connections.TButtJoint.check_elements_compatability", false]], "check_elements_compatability() (compas_timber.connections.thalflapjoint method)": [[126, "compas_timber.connections.THalfLapJoint.check_elements_compatability", false]], "check_elements_compatability() (compas_timber.connections.xhalflapjoint method)": [[145, "compas_timber.connections.XHalfLapJoint.check_elements_compatability", false]], "compute_aabb() (compas_timber.elements.beam method)": [[166, "compas_timber.elements.Beam.compute_aabb", false]], "compute_aabb() (compas_timber.model.timbermodel method)": [[209, "compas_timber.model.TimberModel.compute_aabb", false]], "compute_collision_mesh() (compas_timber.elements.beam method)": [[167, "compas_timber.elements.Beam.compute_collision_mesh", false]], "compute_geometry() (compas_timber.elements.beam method)": [[168, "compas_timber.elements.Beam.compute_geometry", false]], "compute_obb() (compas_timber.elements.beam method)": [[169, "compas_timber.elements.Beam.compute_obb", false]], "compute_obb() (compas_timber.model.timbermodel method)": [[210, "compas_timber.model.TimberModel.compute_obb", false]], "compute_worldtransformation() (compas_timber.elements.beam method)": [[170, "compas_timber.elements.Beam.compute_worldtransformation", false]], "connectionsolver (class in compas_timber.connections)": [[9, "compas_timber.connections.ConnectionSolver", false]], "copy() (compas_timber.connections.joint method)": [[17, "compas_timber.connections.Joint.copy", false]], "copy() (compas_timber.connections.lapjoint method)": [[91, "compas_timber.connections.LapJoint.copy", false]], "copy() (compas_timber.connections.lbuttjoint method)": [[36, "compas_timber.connections.LButtJoint.copy", false]], "copy() (compas_timber.connections.lhalflapjoint method)": [[54, "compas_timber.connections.LHalfLapJoint.copy", false]], "copy() (compas_timber.connections.lmiterjoint method)": [[73, "compas_timber.connections.LMiterJoint.copy", false]], "copy() (compas_timber.connections.tbuttjoint method)": [[110, "compas_timber.connections.TButtJoint.copy", false]], "copy() (compas_timber.connections.thalflapjoint method)": [[127, "compas_timber.connections.THalfLapJoint.copy", false]], "copy() (compas_timber.connections.xhalflapjoint method)": [[146, "compas_timber.connections.XHalfLapJoint.copy", false]], "copy() (compas_timber.elements.beam method)": [[171, "compas_timber.elements.Beam.copy", false]], "copy() (compas_timber.model.timbermodel method)": [[211, "compas_timber.model.TimberModel.copy", false]], "copy() (compas_timber.planning.buildingplan method)": [[248, "compas_timber.planning.BuildingPlan.copy", false]], "copy() (compas_timber.planning.step method)": [[258, "compas_timber.planning.Step.copy", false]], "create() (compas_timber.connections.joint class method)": [[18, "compas_timber.connections.Joint.create", false]], "create() (compas_timber.connections.lapjoint class method)": [[92, "compas_timber.connections.LapJoint.create", false]], "create() (compas_timber.connections.lbuttjoint class method)": [[37, "compas_timber.connections.LButtJoint.create", false]], "create() (compas_timber.connections.lhalflapjoint class method)": [[55, "compas_timber.connections.LHalfLapJoint.create", false]], "create() (compas_timber.connections.lmiterjoint class method)": [[74, "compas_timber.connections.LMiterJoint.create", false]], "create() (compas_timber.connections.tbuttjoint class method)": [[111, "compas_timber.connections.TButtJoint.create", false]], "create() (compas_timber.connections.thalflapjoint class method)": [[128, "compas_timber.connections.THalfLapJoint.create", false]], "create() (compas_timber.connections.xhalflapjoint class method)": [[147, "compas_timber.connections.XHalfLapJoint.create", false]], "create_process() (compas_timber.fabrication.btlxjackcut class method)": [[194, "compas_timber.fabrication.BTLxJackCut.create_process", false]], "element_by_guid() (compas_timber.model.timbermodel method)": [[212, "compas_timber.model.TimberModel.element_by_guid", false]], "element_count_complies() (compas_timber.connections.joint class method)": [[19, "compas_timber.connections.Joint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lapjoint class method)": [[93, "compas_timber.connections.LapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lbuttjoint class method)": [[38, "compas_timber.connections.LButtJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lhalflapjoint class method)": [[56, "compas_timber.connections.LHalfLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lmiterjoint class method)": [[75, "compas_timber.connections.LMiterJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tbuttjoint class method)": [[112, "compas_timber.connections.TButtJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.thalflapjoint class method)": [[129, "compas_timber.connections.THalfLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.xhalflapjoint class method)": [[148, "compas_timber.connections.XHalfLapJoint.element_count_complies", false]], "elements() (compas_timber.model.timbermodel method)": [[213, "compas_timber.model.TimberModel.elements", false]], "elements_connected_by() (compas_timber.model.timbermodel method)": [[214, "compas_timber.model.TimberModel.elements_connected_by", false]], "endpoint_closest_to_point() (compas_timber.elements.beam method)": [[172, "compas_timber.elements.Beam.endpoint_closest_to_point", false]], "extension_to_plane() (compas_timber.elements.beam method)": [[173, "compas_timber.elements.Beam.extension_to_plane", false]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[10, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs", false]], "find_neighboring_beams() (in module compas_timber.connections)": [[160, "compas_timber.connections.find_neighboring_beams", false]], "find_neighboring_beams() (in module compas_timber.rhino)": [[266, "compas_timber.rhino.find_neighboring_beams", false]], "find_topology() (compas_timber.connections.connectionsolver method)": [[11, "compas_timber.connections.ConnectionSolver.find_topology", false]], "from_centerline() (compas_timber.elements.beam class method)": [[174, "compas_timber.elements.Beam.from_centerline", false]], "from_endpoints() (compas_timber.elements.beam class method)": [[175, "compas_timber.elements.Beam.from_endpoints", false]], "from_json() (compas_timber.connections.joint class method)": [[20, "compas_timber.connections.Joint.from_json", false]], "from_json() (compas_timber.connections.lapjoint class method)": [[94, "compas_timber.connections.LapJoint.from_json", false]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[39, "compas_timber.connections.LButtJoint.from_json", false]], "from_json() (compas_timber.connections.lhalflapjoint class method)": [[57, "compas_timber.connections.LHalfLapJoint.from_json", false]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[76, "compas_timber.connections.LMiterJoint.from_json", false]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[113, "compas_timber.connections.TButtJoint.from_json", false]], "from_json() (compas_timber.connections.thalflapjoint class method)": [[130, "compas_timber.connections.THalfLapJoint.from_json", false]], "from_json() (compas_timber.connections.xhalflapjoint class method)": [[149, "compas_timber.connections.XHalfLapJoint.from_json", false]], "from_json() (compas_timber.elements.beam class method)": [[176, "compas_timber.elements.Beam.from_json", false]], "from_json() (compas_timber.model.timbermodel class method)": [[215, "compas_timber.model.TimberModel.from_json", false]], "from_json() (compas_timber.planning.buildingplan class method)": [[249, "compas_timber.planning.BuildingPlan.from_json", false]], "from_json() (compas_timber.planning.step class method)": [[259, "compas_timber.planning.Step.from_json", false]], "from_jsonstring() (compas_timber.connections.joint class method)": [[21, "compas_timber.connections.Joint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lapjoint class method)": [[95, "compas_timber.connections.LapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[40, "compas_timber.connections.LButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lhalflapjoint class method)": [[58, "compas_timber.connections.LHalfLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[77, "compas_timber.connections.LMiterJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[114, "compas_timber.connections.TButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.thalflapjoint class method)": [[131, "compas_timber.connections.THalfLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.xhalflapjoint class method)": [[150, "compas_timber.connections.XHalfLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.beam class method)": [[177, "compas_timber.elements.Beam.from_jsonstring", false]], "from_jsonstring() (compas_timber.model.timbermodel class method)": [[216, "compas_timber.model.TimberModel.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.buildingplan class method)": [[250, "compas_timber.planning.BuildingPlan.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.step class method)": [[260, "compas_timber.planning.Step.from_jsonstring", false]], "generate_process() (compas_timber.fabrication.btlxjackcut method)": [[195, "compas_timber.fabrication.BTLxJackCut.generate_process", false]], "get_cross_cutting_frame() (compas_timber.connections.lapjoint method)": [[96, "compas_timber.connections.LapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[59, "compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[132, "compas_timber.connections.THalfLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[151, "compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame", false]], "get_cutting_planes() (compas_timber.connections.lmiterjoint method)": [[78, "compas_timber.connections.LMiterJoint.get_cutting_planes", false]], "get_elements_in_group() (compas_timber.model.timbermodel method)": [[217, "compas_timber.model.TimberModel.get_elements_in_group", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.joint static method)": [[22, "compas_timber.connections.Joint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lapjoint static method)": [[97, "compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lbuttjoint static method)": [[41, "compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lhalflapjoint static method)": [[60, "compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lmiterjoint static method)": [[79, "compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tbuttjoint static method)": [[115, "compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.thalflapjoint static method)": [[133, "compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.xhalflapjoint static method)": [[152, "compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.joint static method)": [[23, "compas_timber.connections.Joint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lapjoint static method)": [[98, "compas_timber.connections.LapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lbuttjoint static method)": [[42, "compas_timber.connections.LButtJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lhalflapjoint static method)": [[61, "compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lmiterjoint static method)": [[80, "compas_timber.connections.LMiterJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tbuttjoint static method)": [[116, "compas_timber.connections.TButtJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.thalflapjoint static method)": [[134, "compas_timber.connections.THalfLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.xhalflapjoint static method)": [[153, "compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam", false]], "get_main_cutting_frame() (compas_timber.connections.lapjoint method)": [[99, "compas_timber.connections.LapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[62, "compas_timber.connections.LHalfLapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[135, "compas_timber.connections.THalfLapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[154, "compas_timber.connections.XHalfLapJoint.get_main_cutting_frame", false]], "get_name() (compas_timber.connections.jointtopology class method)": [[30, "compas_timber.connections.JointTopology.get_name", false]], "get_name() (compas_timber.planning.actor class method)": [[244, "compas_timber.planning.Actor.get_name", false]], "has_element() (compas_timber.model.timbermodel method)": [[218, "compas_timber.model.TimberModel.has_element", false]], "has_group() (compas_timber.model.timbermodel method)": [[219, "compas_timber.model.TimberModel.has_group", false]], "has_interaction() (compas_timber.model.timbermodel method)": [[220, "compas_timber.model.TimberModel.has_interaction", false]], "has_material() (compas_timber.model.timbermodel method)": [[221, "compas_timber.model.TimberModel.has_material", false]], "interactions() (compas_timber.model.timbermodel method)": [[222, "compas_timber.model.TimberModel.interactions", false]], "joint (class in compas_timber.connections)": [[12, "compas_timber.connections.Joint", false]], "jointtopology (class in compas_timber.connections)": [[29, "compas_timber.connections.JointTopology", false]], "lapjoint (class in compas_timber.connections)": [[86, "compas_timber.connections.LapJoint", false]], "lbuttjoint (class in compas_timber.connections)": [[31, "compas_timber.connections.LButtJoint", false]], "lhalflapjoint (class in compas_timber.connections)": [[49, "compas_timber.connections.LHalfLapJoint", false]], "lmiterfactory (class in compas_timber.fabrication)": [[197, "compas_timber.fabrication.LMiterFactory", false]], "lmiterjoint (class in compas_timber.connections)": [[68, "compas_timber.connections.LMiterJoint", false]], "materials() (compas_timber.model.timbermodel method)": [[223, "compas_timber.model.TimberModel.materials", false]], "opposing_side_index() (compas_timber.elements.beam method)": [[178, "compas_timber.elements.Beam.opposing_side_index", false]], "process_joinery() (compas_timber.model.timbermodel method)": [[224, "compas_timber.model.TimberModel.process_joinery", false]], "process_model() (compas_timber.fabrication.btlx method)": [[191, "compas_timber.fabrication.BTLx.process_model", false]], "register_joint() (compas_timber.fabrication.btlx class method)": [[192, "compas_timber.fabrication.BTLx.register_joint", false]], "remove_blank_extension() (compas_timber.elements.beam method)": [[179, "compas_timber.elements.Beam.remove_blank_extension", false]], "remove_element() (compas_timber.model.timbermodel method)": [[225, "compas_timber.model.TimberModel.remove_element", false]], "remove_features() (compas_timber.elements.beam method)": [[180, "compas_timber.elements.Beam.remove_features", false]], "remove_interaction() (compas_timber.model.timbermodel method)": [[226, "compas_timber.model.TimberModel.remove_interaction", false]], "remove_joint() (compas_timber.model.timbermodel method)": [[227, "compas_timber.model.TimberModel.remove_joint", false]], "reset() (compas_timber.elements.beam method)": [[181, "compas_timber.elements.Beam.reset", false]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[24, "compas_timber.connections.Joint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lapjoint method)": [[100, "compas_timber.connections.LapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[43, "compas_timber.connections.LButtJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lhalflapjoint method)": [[63, "compas_timber.connections.LHalfLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[81, "compas_timber.connections.LMiterJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[117, "compas_timber.connections.TButtJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.thalflapjoint method)": [[136, "compas_timber.connections.THalfLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.xhalflapjoint method)": [[155, "compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", false]], "rotate() (compas_timber.model.timbermodel method)": [[228, "compas_timber.model.TimberModel.rotate", false]], "rotated() (compas_timber.model.timbermodel method)": [[229, "compas_timber.model.TimberModel.rotated", false]], "scale() (compas_timber.model.timbermodel method)": [[230, "compas_timber.model.TimberModel.scale", false]], "scaled() (compas_timber.model.timbermodel method)": [[231, "compas_timber.model.TimberModel.scaled", false]], "set_topologies() (compas_timber.model.timbermodel method)": [[232, "compas_timber.model.TimberModel.set_topologies", false]], "sha256() (compas_timber.connections.joint method)": [[25, "compas_timber.connections.Joint.sha256", false]], "sha256() (compas_timber.connections.lapjoint method)": [[101, "compas_timber.connections.LapJoint.sha256", false]], "sha256() (compas_timber.connections.lbuttjoint method)": [[44, "compas_timber.connections.LButtJoint.sha256", false]], "sha256() (compas_timber.connections.lhalflapjoint method)": [[64, "compas_timber.connections.LHalfLapJoint.sha256", false]], "sha256() (compas_timber.connections.lmiterjoint method)": [[82, "compas_timber.connections.LMiterJoint.sha256", false]], "sha256() (compas_timber.connections.tbuttjoint method)": [[118, "compas_timber.connections.TButtJoint.sha256", false]], "sha256() (compas_timber.connections.thalflapjoint method)": [[137, "compas_timber.connections.THalfLapJoint.sha256", false]], "sha256() (compas_timber.connections.xhalflapjoint method)": [[156, "compas_timber.connections.XHalfLapJoint.sha256", false]], "sha256() (compas_timber.elements.beam method)": [[182, "compas_timber.elements.Beam.sha256", false]], "sha256() (compas_timber.model.timbermodel method)": [[233, "compas_timber.model.TimberModel.sha256", false]], "sha256() (compas_timber.planning.buildingplan method)": [[251, "compas_timber.planning.BuildingPlan.sha256", false]], "sha256() (compas_timber.planning.step method)": [[261, "compas_timber.planning.Step.sha256", false]], "side_as_surface() (compas_timber.elements.beam method)": [[183, "compas_timber.elements.Beam.side_as_surface", false]], "simplesequencegenerator (class in compas_timber.planning)": [[255, "compas_timber.planning.SimpleSequenceGenerator", false]], "step (class in compas_timber.planning)": [[256, "compas_timber.planning.Step", false]], "tbuttjoint (class in compas_timber.connections)": [[105, "compas_timber.connections.TButtJoint", false]], "thalflapjoint (class in compas_timber.connections)": [[122, "compas_timber.connections.THalfLapJoint", false]], "timbermodel (class in compas_timber.model)": [[199, "compas_timber.model.TimberModel", false]], "to_json() (compas_timber.connections.joint method)": [[26, "compas_timber.connections.Joint.to_json", false]], "to_json() (compas_timber.connections.lapjoint method)": [[102, "compas_timber.connections.LapJoint.to_json", false]], "to_json() (compas_timber.connections.lbuttjoint method)": [[45, "compas_timber.connections.LButtJoint.to_json", false]], "to_json() (compas_timber.connections.lhalflapjoint method)": [[65, "compas_timber.connections.LHalfLapJoint.to_json", false]], "to_json() (compas_timber.connections.lmiterjoint method)": [[83, "compas_timber.connections.LMiterJoint.to_json", false]], "to_json() (compas_timber.connections.tbuttjoint method)": [[119, "compas_timber.connections.TButtJoint.to_json", false]], "to_json() (compas_timber.connections.thalflapjoint method)": [[138, "compas_timber.connections.THalfLapJoint.to_json", false]], "to_json() (compas_timber.connections.xhalflapjoint method)": [[157, "compas_timber.connections.XHalfLapJoint.to_json", false]], "to_json() (compas_timber.elements.beam method)": [[184, "compas_timber.elements.Beam.to_json", false]], "to_json() (compas_timber.model.timbermodel method)": [[234, "compas_timber.model.TimberModel.to_json", false]], "to_json() (compas_timber.planning.buildingplan method)": [[252, "compas_timber.planning.BuildingPlan.to_json", false]], "to_json() (compas_timber.planning.step method)": [[262, "compas_timber.planning.Step.to_json", false]], "to_jsonstring() (compas_timber.connections.joint method)": [[27, "compas_timber.connections.Joint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lapjoint method)": [[103, "compas_timber.connections.LapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lbuttjoint method)": [[46, "compas_timber.connections.LButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lhalflapjoint method)": [[66, "compas_timber.connections.LHalfLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lmiterjoint method)": [[84, "compas_timber.connections.LMiterJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tbuttjoint method)": [[120, "compas_timber.connections.TButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.thalflapjoint method)": [[139, "compas_timber.connections.THalfLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.xhalflapjoint method)": [[158, "compas_timber.connections.XHalfLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.beam method)": [[185, "compas_timber.elements.Beam.to_jsonstring", false]], "to_jsonstring() (compas_timber.model.timbermodel method)": [[235, "compas_timber.model.TimberModel.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.buildingplan method)": [[253, "compas_timber.planning.BuildingPlan.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.step method)": [[263, "compas_timber.planning.Step.to_jsonstring", false]], "tostring() (compas_timber.connections.joint method)": [[13, "compas_timber.connections.Joint.ToString", false]], "tostring() (compas_timber.connections.lapjoint method)": [[87, "compas_timber.connections.LapJoint.ToString", false]], "tostring() (compas_timber.connections.lbuttjoint method)": [[32, "compas_timber.connections.LButtJoint.ToString", false]], "tostring() (compas_timber.connections.lhalflapjoint method)": [[50, "compas_timber.connections.LHalfLapJoint.ToString", false]], "tostring() (compas_timber.connections.lmiterjoint method)": [[69, "compas_timber.connections.LMiterJoint.ToString", false]], "tostring() (compas_timber.connections.tbuttjoint method)": [[106, "compas_timber.connections.TButtJoint.ToString", false]], "tostring() (compas_timber.connections.thalflapjoint method)": [[123, "compas_timber.connections.THalfLapJoint.ToString", false]], "tostring() (compas_timber.connections.xhalflapjoint method)": [[142, "compas_timber.connections.XHalfLapJoint.ToString", false]], "tostring() (compas_timber.elements.beam method)": [[162, "compas_timber.elements.Beam.ToString", false]], "tostring() (compas_timber.model.timbermodel method)": [[200, "compas_timber.model.TimberModel.ToString", false]], "tostring() (compas_timber.planning.buildingplan method)": [[246, "compas_timber.planning.BuildingPlan.ToString", false]], "tostring() (compas_timber.planning.step method)": [[257, "compas_timber.planning.Step.ToString", false]], "transform() (compas_timber.elements.beam method)": [[186, "compas_timber.elements.Beam.transform", false]], "transform() (compas_timber.model.timbermodel method)": [[236, "compas_timber.model.TimberModel.transform", false]], "transform() (compas_timber.planning.step method)": [[264, "compas_timber.planning.Step.transform", false]], "transform_numpy() (compas_timber.model.timbermodel method)": [[237, "compas_timber.model.TimberModel.transform_numpy", false]], "transformed() (compas_timber.elements.beam method)": [[187, "compas_timber.elements.Beam.transformed", false]], "transformed() (compas_timber.model.timbermodel method)": [[238, "compas_timber.model.TimberModel.transformed", false]], "transformed_numpy() (compas_timber.model.timbermodel method)": [[239, "compas_timber.model.TimberModel.transformed_numpy", false]], "translate() (compas_timber.model.timbermodel method)": [[240, "compas_timber.model.TimberModel.translate", false]], "translated() (compas_timber.model.timbermodel method)": [[241, "compas_timber.model.TimberModel.translated", false]], "update_beam_roles() (compas_timber.connections.lbuttjoint method)": [[47, "compas_timber.connections.LButtJoint.update_beam_roles", false]], "validate_data() (compas_timber.connections.joint class method)": [[28, "compas_timber.connections.Joint.validate_data", false]], "validate_data() (compas_timber.connections.lapjoint class method)": [[104, "compas_timber.connections.LapJoint.validate_data", false]], "validate_data() (compas_timber.connections.lbuttjoint class method)": [[48, "compas_timber.connections.LButtJoint.validate_data", false]], "validate_data() (compas_timber.connections.lhalflapjoint class method)": [[67, "compas_timber.connections.LHalfLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.lmiterjoint class method)": [[85, "compas_timber.connections.LMiterJoint.validate_data", false]], "validate_data() (compas_timber.connections.tbuttjoint class method)": [[121, "compas_timber.connections.TButtJoint.validate_data", false]], "validate_data() (compas_timber.connections.thalflapjoint class method)": [[140, "compas_timber.connections.THalfLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.xhalflapjoint class method)": [[159, "compas_timber.connections.XHalfLapJoint.validate_data", false]], "validate_data() (compas_timber.elements.beam class method)": [[188, "compas_timber.elements.Beam.validate_data", false]], "validate_data() (compas_timber.model.timbermodel class method)": [[242, "compas_timber.model.TimberModel.validate_data", false]], "validate_data() (compas_timber.planning.buildingplan class method)": [[254, "compas_timber.planning.BuildingPlan.validate_data", false]], "validate_data() (compas_timber.planning.step class method)": [[265, "compas_timber.planning.Step.validate_data", false]], "xhalflapjoint (class in compas_timber.connections)": [[141, "compas_timber.connections.XHalfLapJoint", false]]}, "objects": {"compas_timber.connections": [[8, 0, 1, "", "BeamJoinningError"], [9, 1, 1, "", "ConnectionSolver"], [12, 1, 1, "", "Joint"], [29, 1, 1, "", "JointTopology"], [31, 1, 1, "", "LButtJoint"], [49, 1, 1, "", "LHalfLapJoint"], [68, 1, 1, "", "LMiterJoint"], [86, 1, 1, "", "LapJoint"], [105, 1, 1, "", "TButtJoint"], [122, 1, 1, "", "THalfLapJoint"], [141, 1, 1, "", "XHalfLapJoint"], [160, 3, 1, "", "find_neighboring_beams"]], "compas_timber.connections.ConnectionSolver": [[10, 2, 1, "", "find_intersecting_pairs"], [11, 2, 1, "", "find_topology"]], "compas_timber.connections.Joint": [[13, 2, 1, "", "ToString"], [14, 2, 1, "", "add_extensions"], [15, 2, 1, "", "add_features"], [16, 2, 1, "", "check_elements_compatability"], [17, 2, 1, "", "copy"], [18, 2, 1, "", "create"], [19, 2, 1, "", "element_count_complies"], [20, 2, 1, "", "from_json"], [21, 2, 1, "", "from_jsonstring"], [22, 2, 1, "", "get_face_most_ortho_to_beam"], [23, 2, 1, "", "get_face_most_towards_beam"], [24, 2, 1, "", "restore_beams_from_keys"], [25, 2, 1, "", "sha256"], [26, 2, 1, "", "to_json"], [27, 2, 1, "", "to_jsonstring"], [28, 2, 1, "", "validate_data"]], "compas_timber.connections.JointTopology": [[30, 2, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[32, 2, 1, "", "ToString"], [33, 2, 1, "", "add_extensions"], [34, 2, 1, "", "add_features"], [35, 2, 1, "", "check_elements_compatability"], [36, 2, 1, "", "copy"], [37, 2, 1, "", "create"], [38, 2, 1, "", "element_count_complies"], [39, 2, 1, "", "from_json"], [40, 2, 1, "", "from_jsonstring"], [41, 2, 1, "", "get_face_most_ortho_to_beam"], [42, 2, 1, "", "get_face_most_towards_beam"], [43, 2, 1, "", "restore_beams_from_keys"], [44, 2, 1, "", "sha256"], [45, 2, 1, "", "to_json"], [46, 2, 1, "", "to_jsonstring"], [47, 2, 1, "", "update_beam_roles"], [48, 2, 1, "", "validate_data"]], "compas_timber.connections.LHalfLapJoint": [[50, 2, 1, "", "ToString"], [51, 2, 1, "", "add_extensions"], [52, 2, 1, "", "add_features"], [53, 2, 1, "", "check_elements_compatability"], [54, 2, 1, "", "copy"], [55, 2, 1, "", "create"], [56, 2, 1, "", "element_count_complies"], [57, 2, 1, "", "from_json"], [58, 2, 1, "", "from_jsonstring"], [59, 2, 1, "", "get_cross_cutting_frame"], [60, 2, 1, "", "get_face_most_ortho_to_beam"], [61, 2, 1, "", "get_face_most_towards_beam"], [62, 2, 1, "", "get_main_cutting_frame"], [63, 2, 1, "", "restore_beams_from_keys"], [64, 2, 1, "", "sha256"], [65, 2, 1, "", "to_json"], [66, 2, 1, "", "to_jsonstring"], [67, 2, 1, "", "validate_data"]], "compas_timber.connections.LMiterJoint": [[69, 2, 1, "", "ToString"], [70, 2, 1, "", "add_extensions"], [71, 2, 1, "", "add_features"], [72, 2, 1, "", "check_elements_compatability"], [73, 2, 1, "", "copy"], [74, 2, 1, "", "create"], [75, 2, 1, "", "element_count_complies"], [76, 2, 1, "", "from_json"], [77, 2, 1, "", "from_jsonstring"], [78, 2, 1, "", "get_cutting_planes"], [79, 2, 1, "", "get_face_most_ortho_to_beam"], [80, 2, 1, "", "get_face_most_towards_beam"], [81, 2, 1, "", "restore_beams_from_keys"], [82, 2, 1, "", "sha256"], [83, 2, 1, "", "to_json"], [84, 2, 1, "", "to_jsonstring"], [85, 2, 1, "", "validate_data"]], "compas_timber.connections.LapJoint": [[87, 2, 1, "", "ToString"], [88, 2, 1, "", "add_extensions"], [89, 2, 1, "", "add_features"], [90, 2, 1, "", "check_elements_compatability"], [91, 2, 1, "", "copy"], [92, 2, 1, "", "create"], [93, 2, 1, "", "element_count_complies"], [94, 2, 1, "", "from_json"], [95, 2, 1, "", "from_jsonstring"], [96, 2, 1, "", "get_cross_cutting_frame"], [97, 2, 1, "", "get_face_most_ortho_to_beam"], [98, 2, 1, "", "get_face_most_towards_beam"], [99, 2, 1, "", "get_main_cutting_frame"], [100, 2, 1, "", "restore_beams_from_keys"], [101, 2, 1, "", "sha256"], [102, 2, 1, "", "to_json"], [103, 2, 1, "", "to_jsonstring"], [104, 2, 1, "", "validate_data"]], "compas_timber.connections.TButtJoint": [[106, 2, 1, "", "ToString"], [107, 2, 1, "", "add_extensions"], [108, 2, 1, "", "add_features"], [109, 2, 1, "", "check_elements_compatability"], [110, 2, 1, "", "copy"], [111, 2, 1, "", "create"], [112, 2, 1, "", "element_count_complies"], [113, 2, 1, "", "from_json"], [114, 2, 1, "", "from_jsonstring"], [115, 2, 1, "", "get_face_most_ortho_to_beam"], [116, 2, 1, "", "get_face_most_towards_beam"], [117, 2, 1, "", "restore_beams_from_keys"], [118, 2, 1, "", "sha256"], [119, 2, 1, "", "to_json"], [120, 2, 1, "", "to_jsonstring"], [121, 2, 1, "", "validate_data"]], "compas_timber.connections.THalfLapJoint": [[123, 2, 1, "", "ToString"], [124, 2, 1, "", "add_extensions"], [125, 2, 1, "", "add_features"], [126, 2, 1, "", "check_elements_compatability"], [127, 2, 1, "", "copy"], [128, 2, 1, "", "create"], [129, 2, 1, "", "element_count_complies"], [130, 2, 1, "", "from_json"], [131, 2, 1, "", "from_jsonstring"], [132, 2, 1, "", "get_cross_cutting_frame"], [133, 2, 1, "", "get_face_most_ortho_to_beam"], [134, 2, 1, "", "get_face_most_towards_beam"], [135, 2, 1, "", "get_main_cutting_frame"], [136, 2, 1, "", "restore_beams_from_keys"], [137, 2, 1, "", "sha256"], [138, 2, 1, "", "to_json"], [139, 2, 1, "", "to_jsonstring"], [140, 2, 1, "", "validate_data"]], "compas_timber.connections.XHalfLapJoint": [[142, 2, 1, "", "ToString"], [143, 2, 1, "", "add_extensions"], [144, 2, 1, "", "add_features"], [145, 2, 1, "", "check_elements_compatability"], [146, 2, 1, "", "copy"], [147, 2, 1, "", "create"], [148, 2, 1, "", "element_count_complies"], [149, 2, 1, "", "from_json"], [150, 2, 1, "", "from_jsonstring"], [151, 2, 1, "", "get_cross_cutting_frame"], [152, 2, 1, "", "get_face_most_ortho_to_beam"], [153, 2, 1, "", "get_face_most_towards_beam"], [154, 2, 1, "", "get_main_cutting_frame"], [155, 2, 1, "", "restore_beams_from_keys"], [156, 2, 1, "", "sha256"], [157, 2, 1, "", "to_json"], [158, 2, 1, "", "to_jsonstring"], [159, 2, 1, "", "validate_data"]], "compas_timber.elements": [[161, 1, 1, "", "Beam"]], "compas_timber.elements.Beam": [[162, 2, 1, "", "ToString"], [163, 2, 1, "", "add_blank_extension"], [164, 2, 1, "", "add_feature"], [165, 2, 1, "", "add_features"], [166, 2, 1, "", "compute_aabb"], [167, 2, 1, "", "compute_collision_mesh"], [168, 2, 1, "", "compute_geometry"], [169, 2, 1, "", "compute_obb"], [170, 2, 1, "", "compute_worldtransformation"], [171, 2, 1, "", "copy"], [172, 2, 1, "", "endpoint_closest_to_point"], [173, 2, 1, "", "extension_to_plane"], [174, 2, 1, "", "from_centerline"], [175, 2, 1, "", "from_endpoints"], [176, 2, 1, "", "from_json"], [177, 2, 1, "", "from_jsonstring"], [178, 2, 1, "", "opposing_side_index"], [179, 2, 1, "", "remove_blank_extension"], [180, 2, 1, "", "remove_features"], [181, 2, 1, "", "reset"], [182, 2, 1, "", "sha256"], [183, 2, 1, "", "side_as_surface"], [184, 2, 1, "", "to_json"], [185, 2, 1, "", "to_jsonstring"], [186, 2, 1, "", "transform"], [187, 2, 1, "", "transformed"], [188, 2, 1, "", "validate_data"]], "compas_timber.fabrication": [[189, 1, 1, "", "BTLx"], [193, 1, 1, "", "BTLxJackCut"], [196, 1, 1, "", "BTLxProcess"], [197, 1, 1, "", "LMiterFactory"]], "compas_timber.fabrication.BTLx": [[190, 2, 1, "", "btlx_string"], [191, 2, 1, "", "process_model"], [192, 2, 1, "", "register_joint"]], "compas_timber.fabrication.BTLxJackCut": [[194, 2, 1, "", "create_process"], [195, 2, 1, "", "generate_process"]], "compas_timber.fabrication.LMiterFactory": [[198, 2, 1, "", "apply_processings"]], "compas_timber.model": [[199, 1, 1, "", "TimberModel"]], "compas_timber.model.TimberModel": [[200, 2, 1, "", "ToString"], [201, 2, 1, "", "add_element"], [202, 2, 1, "", "add_elements"], [203, 2, 1, "", "add_group"], [204, 2, 1, "", "add_group_element"], [205, 2, 1, "", "add_interaction"], [206, 2, 1, "", "add_joint"], [207, 2, 1, "", "add_material"], [208, 2, 1, "", "assign_material"], [209, 2, 1, "", "compute_aabb"], [210, 2, 1, "", "compute_obb"], [211, 2, 1, "", "copy"], [212, 2, 1, "", "element_by_guid"], [213, 2, 1, "", "elements"], [214, 2, 1, "", "elements_connected_by"], [215, 2, 1, "", "from_json"], [216, 2, 1, "", "from_jsonstring"], [217, 2, 1, "", "get_elements_in_group"], [218, 2, 1, "", "has_element"], [219, 2, 1, "", "has_group"], [220, 2, 1, "", "has_interaction"], [221, 2, 1, "", "has_material"], [222, 2, 1, "", "interactions"], [223, 2, 1, "", "materials"], [224, 2, 1, "", "process_joinery"], [225, 2, 1, "", "remove_element"], [226, 2, 1, "", "remove_interaction"], [227, 2, 1, "", "remove_joint"], [228, 2, 1, "", "rotate"], [229, 2, 1, "", "rotated"], [230, 2, 1, "", "scale"], [231, 2, 1, "", "scaled"], [232, 2, 1, "", "set_topologies"], [233, 2, 1, "", "sha256"], [234, 2, 1, "", "to_json"], [235, 2, 1, "", "to_jsonstring"], [236, 2, 1, "", "transform"], [237, 2, 1, "", "transform_numpy"], [238, 2, 1, "", "transformed"], [239, 2, 1, "", "transformed_numpy"], [240, 2, 1, "", "translate"], [241, 2, 1, "", "translated"], [242, 2, 1, "", "validate_data"]], "compas_timber.planning": [[243, 1, 1, "", "Actor"], [245, 1, 1, "", "BuildingPlan"], [255, 1, 1, "", "SimpleSequenceGenerator"], [256, 1, 1, "", "Step"]], "compas_timber.planning.Actor": [[244, 2, 1, "", "get_name"]], "compas_timber.planning.BuildingPlan": [[246, 2, 1, "", "ToString"], [247, 2, 1, "", "add_step"], [248, 2, 1, "", "copy"], [249, 2, 1, "", "from_json"], [250, 2, 1, "", "from_jsonstring"], [251, 2, 1, "", "sha256"], [252, 2, 1, "", "to_json"], [253, 2, 1, "", "to_jsonstring"], [254, 2, 1, "", "validate_data"]], "compas_timber.planning.Step": [[257, 2, 1, "", "ToString"], [258, 2, 1, "", "copy"], [259, 2, 1, "", "from_json"], [260, 2, 1, "", "from_jsonstring"], [261, 2, 1, "", "sha256"], [262, 2, 1, "", "to_json"], [263, 2, 1, "", "to_jsonstring"], [264, 2, 1, "", "transform"], [265, 2, 1, "", "validate_data"]], "compas_timber.rhino": [[266, 3, 1, "", "find_neighboring_beams"]]}, "objnames": {"0": ["py", "exception", "Python exception"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:exception", "1": "py:class", "2": "py:method", "3": "py:function"}, "terms": {"": [14, 15, 22, 23, 28, 41, 42, 48, 49, 52, 60, 61, 67, 79, 80, 85, 88, 89, 97, 98, 104, 115, 116, 121, 125, 133, 134, 140, 143, 144, 152, 153, 159, 161, 172, 174, 175, 188, 204, 242, 254, 265, 275, 276, 284], "0": [10, 22, 25, 41, 44, 49, 60, 64, 79, 82, 86, 97, 101, 115, 118, 122, 133, 137, 141, 152, 156, 160, 161, 166, 169, 178, 182, 183, 233, 251, 261, 266, 269, 271, 276], "02": 272, "06": 11, "1": [23, 25, 42, 44, 49, 61, 64, 80, 82, 86, 98, 101, 116, 118, 122, 134, 137, 141, 153, 156, 161, 182, 233, 251, 261, 269, 274, 276, 285], "10": [267, 271], "100": 204, "17": 272, "1e": 11, "2": [161, 269, 274, 285], "200": 204, "2020": 272, "2022": 267, "2023": 267, "3": [161, 271, 274, 285], "300": 204, "3000": 204, "3d": 270, "4": [161, 269, 274], "5": [49, 86, 122, 141, 161, 178, 183], "5000": 204, "5281": 267, "6": 161, "7": 271, "7934267": 267, "A": [8, 10, 12, 18, 37, 49, 55, 74, 92, 111, 128, 147, 160, 161, 164, 174, 175, 189, 198, 199, 201, 207, 217, 221, 267, 272, 276, 277, 281], "AND": 272, "AS": 272, "As": 267, "At": 270, "BE": 272, "BUT": 272, "By": [281, 285], "FOR": 272, "For": [30, 160, 224, 244, 270, 284], "IN": 272, "If": [11, 17, 20, 21, 22, 23, 25, 26, 27, 31, 33, 36, 39, 40, 41, 42, 44, 45, 46, 49, 51, 54, 57, 58, 60, 61, 64, 65, 66, 70, 73, 76, 77, 79, 80, 82, 83, 84, 86, 91, 94, 95, 97, 98, 101, 102, 103, 107, 110, 113, 114, 115, 116, 118, 119, 120, 122, 124, 127, 130, 131, 133, 134, 137, 138, 139, 141, 146, 149, 150, 152, 153, 156, 157, 158, 168, 171, 176, 177, 180, 182, 184, 185, 201, 202, 204, 205, 208, 211, 215, 216, 233, 234, 235, 248, 249, 250, 251, 252, 253, 258, 259, 260, 261, 262, 263, 266, 267, 276, 277, 281, 282], "In": [160, 270, 271], "It": [270, 273, 275, 276, 281, 282, 284], "NO": 272, "NOT": 272, "OF": 272, "OR": 272, "Of": [22, 23, 41, 42, 60, 61, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153], "One": [30, 244, 256], "THE": 272, "TO": 272, "The": [7, 8, 12, 17, 18, 20, 21, 22, 23, 26, 27, 28, 31, 36, 37, 39, 40, 41, 42, 45, 46, 48, 49, 54, 55, 57, 58, 60, 61, 65, 66, 67, 73, 74, 76, 77, 79, 80, 83, 84, 85, 86, 91, 92, 94, 95, 97, 98, 102, 103, 104, 105, 110, 111, 113, 114, 115, 116, 119, 120, 121, 122, 127, 128, 130, 131, 133, 134, 138, 139, 140, 141, 146, 147, 149, 150, 152, 153, 157, 158, 159, 160, 161, 163, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 192, 193, 196, 198, 199, 201, 202, 203, 204, 205, 208, 211, 212, 214, 215, 216, 217, 218, 219, 220, 224, 225, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 250, 252, 253, 254, 258, 259, 260, 262, 263, 265, 266, 272, 273, 275, 276, 280, 281, 282, 284, 285], "Then": 273, "There": [268, 275, 281, 285], "These": [275, 281], "To": [24, 271, 273, 274, 282, 285], "WITH": 272, "_": 275, "__from_data__": [28, 48, 67, 85, 104, 121, 140, 159, 188, 242, 254, 265], "__init__": 274, "aabb": [160, 161, 166], "abl": [14, 15, 52, 88, 89, 125, 143, 144], "about": [8, 270], "abov": [272, 281], "abstract": 86, "accord": [161, 275], "acknowledg": 267, "action": 272, "activ": [270, 271, 276, 282, 284], "actor": [256, 270], "actual": 172, "ad": [12, 18, 37, 55, 74, 92, 111, 128, 147, 161, 165, 201, 202, 203, 204, 266, 277], "add": [14, 15, 33, 34, 51, 52, 70, 71, 88, 89, 107, 108, 124, 125, 143, 144, 163, 164, 165, 201, 202, 203, 204, 205, 206, 207, 224, 273, 274, 282, 284, 285], "add_beam": 269, "add_el": 204, "addit": [10, 12, 203, 273, 275, 276, 280], "adjac": [18, 37, 55, 74, 92, 111, 128, 147], "adjust": 284, "affect": [14, 15, 52, 88, 89, 125, 143, 144], "after": [43, 63, 81, 100, 117, 136, 155], "against": [28, 48, 67, 85, 104, 121, 140, 159, 188, 242, 254, 265], "aleksandra": 267, "algorithm": [25, 44, 64, 82, 101, 118, 137, 156, 160, 182, 233, 251, 261], "align": [160, 161, 166, 209, 273, 284], "all": [22, 23, 41, 42, 60, 61, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153, 173, 180, 181, 199, 213, 217, 222, 223, 224, 236, 266, 272, 275, 277, 281, 283], "allow": [18, 37, 49, 55, 74, 86, 92, 111, 122, 128, 141, 147, 173, 199, 256, 277], "along": [105, 122, 141, 161, 281], "alreadi": [201, 204], "also": [161, 267, 270, 273, 275, 276, 281], "amount": [160, 163, 173, 266], "an": [8, 10, 17, 18, 20, 21, 26, 27, 28, 31, 36, 37, 39, 40, 45, 46, 48, 49, 54, 55, 57, 58, 65, 66, 67, 68, 73, 74, 76, 77, 83, 84, 85, 86, 91, 92, 94, 95, 102, 103, 104, 105, 110, 111, 113, 114, 119, 120, 121, 122, 127, 128, 130, 131, 138, 139, 140, 141, 146, 147, 149, 150, 157, 158, 159, 161, 171, 176, 177, 184, 185, 188, 195, 201, 204, 205, 206, 208, 211, 215, 216, 220, 225, 234, 235, 242, 243, 248, 249, 250, 252, 253, 254, 258, 259, 260, 262, 263, 265, 267, 268, 270, 271, 272, 273, 275, 276, 281], "analysi": 270, "angl": [68, 228, 229, 281], "ani": [26, 27, 28, 45, 46, 48, 65, 66, 67, 83, 84, 85, 102, 103, 104, 119, 120, 121, 138, 139, 140, 157, 158, 159, 184, 185, 188, 234, 235, 242, 252, 253, 254, 262, 263, 265, 268, 272, 280, 281, 285], "anna": 267, "anoth": [105, 122, 141], "apart": 10, "api": [270, 273], "apolinarska": 267, "append": [196, 274], "appli": [8, 14, 15, 52, 88, 89, 125, 143, 144, 186, 187, 196, 198, 217, 236, 274, 281, 285], "applic": 283, "ar": [10, 11, 13, 16, 18, 22, 23, 24, 32, 35, 37, 41, 42, 50, 53, 55, 60, 61, 69, 72, 74, 79, 80, 87, 90, 92, 97, 98, 106, 109, 111, 115, 116, 123, 126, 128, 133, 134, 142, 145, 147, 152, 153, 160, 162, 196, 200, 205, 208, 246, 256, 257, 268, 274, 275, 276, 279, 280, 281, 282, 284, 285], "argument": 203, "aris": 272, "around": 276, "as_str": [25, 44, 64, 82, 101, 118, 137, 156, 182, 233, 251, 261], "assembl": 256, "assembli": [269, 270, 277, 283], "assign": [199, 201, 208, 281, 284], "associ": [24, 31, 49, 68, 86, 105, 122, 141, 256, 272], "attach": [22, 23, 41, 42, 60, 61, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153], "attempt": 283, "attr": [196, 203], "attr1nam": 275, "attr1value_attr2nam": 275, "attr2valu": 275, "attribut": [8, 12, 29, 31, 49, 68, 86, 105, 161, 189, 196, 199, 203, 255, 256, 270, 273, 274, 276], "author": [267, 272], "autom": 273, "automat": [33, 34, 51, 70, 71, 107, 108, 124, 284], "avail": 160, "avoid": [24, 166, 169], "axi": [160, 161, 166, 174, 175, 209, 228, 229, 276, 280, 284], "b": [205, 220, 226], "backend": 270, "bake": 273, "bakewithboxmap": 284, "base": [8, 9, 12, 29, 31, 47, 49, 68, 86, 105, 122, 141, 161, 168, 170, 189, 193, 196, 197, 199, 224, 228, 229, 243, 245, 255, 256, 282, 283, 285], "basic": 270, "beam": [8, 9, 10, 11, 12, 14, 15, 16, 18, 22, 23, 24, 31, 33, 34, 35, 37, 41, 42, 43, 47, 49, 51, 52, 53, 55, 60, 61, 63, 68, 70, 71, 72, 74, 79, 80, 81, 86, 88, 89, 90, 92, 97, 98, 100, 105, 107, 108, 109, 111, 115, 116, 117, 122, 124, 125, 126, 128, 133, 134, 136, 141, 143, 144, 145, 147, 152, 153, 155, 160, 193, 199, 204, 212, 224, 266, 269, 270, 273, 275, 280, 281, 282, 284, 285], "beam_a": [11, 22, 23, 41, 42, 60, 61, 68, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153, 204], "beam_a_kei": 199, "beam_b": [11, 22, 23, 41, 42, 60, 61, 68, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153], "beam_b_kei": 199, "beam_width": 277, "beamjoinningerror": [14, 15, 16, 33, 35, 51, 52, 53, 70, 72, 88, 89, 90, 107, 109, 124, 125, 126, 143, 144, 145, 270], "becaus": 281, "been": [18, 37, 55, 74, 92, 111, 128, 147, 201, 256], "befor": [18, 37, 55, 74, 92, 111, 128, 147, 201], "being": 270, "belong": [18, 37, 55, 74, 92, 111, 128, 147], "between": [49, 68, 86, 122, 141, 199, 205, 220, 222, 226, 275, 277, 281, 285], "birdsmouth": 281, "bisector": [68, 281], "bit": 277, "bitmap": 284, "blank": [161, 163, 179, 224, 276], "blender": 268, "bool": [10, 17, 22, 23, 25, 26, 27, 31, 36, 41, 42, 44, 45, 46, 49, 54, 60, 61, 64, 65, 66, 73, 79, 80, 82, 83, 84, 86, 91, 97, 98, 101, 102, 103, 110, 115, 116, 118, 119, 120, 122, 127, 133, 134, 137, 138, 139, 141, 146, 152, 153, 156, 157, 158, 168, 171, 182, 184, 185, 211, 218, 219, 220, 221, 233, 234, 235, 248, 251, 252, 253, 256, 258, 261, 262, 263], "boolean": [273, 277, 280, 282], "both": [34, 71, 108, 205, 208], "bottom": 281, "bound": [160, 161, 166, 169, 209, 210, 266], "box": [160, 161, 166, 169, 209, 210, 256, 266, 273, 276], "brep": [168, 270, 284], "brepdrillholefeatur": 280, "brepsubtractionfeatur": 280, "btlx": [161, 196, 270, 273], "btlx_2_1_0": 274, "btlx_process": [196, 274], "btlx_string": 189, "btlxjackcut": [196, 270], "btlxjoint": 274, "btlxpart": [189, 193, 196, 198, 274], "btlxprocess": [270, 274], "build": [245, 255, 256, 271, 285], "buildingplan": [255, 270], "built": [270, 273], "butt": [31, 105, 277], "byte": [25, 44, 64, 82, 101, 118, 137, 156, 182, 233, 251, 261], "c": [271, 272], "cad": [256, 268], "calcul": [8, 14, 15, 22, 23, 33, 41, 42, 51, 52, 60, 61, 70, 79, 80, 88, 89, 97, 98, 107, 115, 116, 124, 125, 133, 134, 143, 144, 152, 153, 199, 224, 232], "call": [18, 24, 33, 34, 37, 51, 55, 70, 71, 74, 92, 107, 108, 111, 124, 128, 147, 196, 274, 276], "callabl": 217, "can": [8, 28, 48, 67, 85, 104, 121, 140, 159, 188, 196, 201, 242, 245, 254, 256, 265, 268, 273, 274, 276, 281, 285], "cannot": 276, "canva": 281, "care": 285, "casa": 267, "case": [277, 282], "categori": [275, 276, 285], "cd": 271, "center": [22, 23, 41, 42, 60, 61, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153, 199, 267], "center_of_mass": 199, "centerlin": [22, 23, 41, 42, 60, 61, 68, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153, 161, 172, 174, 175, 273, 275, 276, 284], "centerline_end": 161, "centerline_start": 161, "centr": 281, "centrelin": 276, "chang": 281, "charg": 272, "check": [16, 35, 53, 72, 90, 109, 126, 145, 218, 219, 224, 266, 270], "checkstandardattribut": 275, "chen": 267, "chosen": [22, 23, 41, 42, 60, 61, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153], "circular": 24, "cite": 270, "cl": [17, 36, 54, 73, 91, 110, 127, 146, 171, 211, 248, 258], "claim": 272, "class": [9, 12, 13, 29, 31, 32, 49, 50, 68, 69, 86, 87, 105, 106, 122, 123, 141, 142, 161, 162, 189, 192, 193, 196, 197, 199, 200, 206, 236, 243, 245, 246, 255, 256, 257, 270, 274], "classmethod": [10, 18, 19, 20, 21, 28, 30, 37, 38, 39, 40, 48, 55, 56, 57, 58, 67, 74, 75, 76, 77, 85, 92, 93, 94, 95, 104, 111, 112, 113, 114, 121, 128, 129, 130, 131, 140, 147, 148, 149, 150, 159, 174, 175, 176, 177, 188, 192, 194, 198, 215, 216, 242, 244, 249, 250, 254, 259, 260, 265], "clean": 281, "click": 281, "clone": 271, "closer": 172, "closest": [22, 23, 41, 42, 60, 61, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153, 277], "code": [18, 37, 55, 74, 92, 111, 128, 147, 268, 270], "collect": [245, 266, 282], "collis": 167, "colon": 275, "com": [267, 271, 274], "combin": 196, "common": 86, "compa": [17, 20, 21, 25, 36, 39, 40, 44, 54, 57, 58, 64, 73, 76, 77, 82, 91, 94, 95, 101, 110, 113, 114, 118, 127, 130, 131, 137, 146, 149, 150, 156, 161, 167, 168, 169, 170, 171, 176, 177, 182, 186, 187, 209, 210, 211, 215, 216, 228, 229, 233, 236, 240, 241, 248, 249, 250, 251, 256, 258, 259, 260, 261, 267, 273, 277, 279, 283], "compact": [26, 27, 45, 46, 65, 66, 83, 84, 102, 103, 119, 120, 138, 139, 157, 158, 184, 185, 234, 235, 252, 253, 262, 263], "comparison": [25, 44, 64, 82, 101, 118, 137, 156, 182, 233, 251, 261], "compas_model": [187, 204, 214, 217, 219, 255], "compas_rhino": 271, "compas_timb": [0, 8, 9, 12, 18, 24, 29, 31, 37, 49, 55, 68, 74, 86, 92, 105, 111, 122, 128, 141, 147, 160, 161, 189, 192, 193, 196, 197, 199, 204, 243, 245, 255, 256, 266, 267, 270, 271], "compat": [13, 16, 31, 32, 35, 49, 50, 53, 68, 69, 72, 87, 90, 105, 106, 109, 122, 123, 126, 141, 142, 145, 160, 162, 200, 246, 257], "compet": 267, "compil": 271, "complet": [49, 86, 122, 141], "complex": 270, "compli": [16, 35, 53, 72, 90, 109, 126, 145], "compon": [271, 275, 276, 277, 279, 280, 282, 285], "componen": 273, "compos": 282, "comput": [11, 25, 44, 64, 82, 101, 118, 137, 156, 166, 167, 168, 169, 170, 182, 209, 210, 233, 251, 261], "computation": 282, "concaten": 275, "concept": [268, 273], "concret": 24, "condit": 272, "connect": [0, 8, 9, 12, 13, 18, 24, 29, 31, 32, 37, 49, 50, 55, 68, 69, 74, 86, 87, 92, 105, 106, 111, 122, 123, 128, 141, 142, 147, 160, 162, 198, 200, 214, 246, 257, 270, 272, 281, 282], "connectionsolv": [232, 270], "consid": [10, 11, 281], "consist": 11, "construct": [20, 21, 28, 39, 40, 48, 57, 58, 67, 76, 77, 85, 94, 95, 104, 113, 114, 121, 130, 131, 140, 149, 150, 159, 176, 177, 188, 215, 216, 242, 249, 250, 254, 259, 260, 265, 270, 277], "contain": [7, 8, 10, 18, 20, 21, 22, 23, 37, 39, 40, 41, 42, 55, 57, 58, 60, 61, 74, 76, 77, 79, 80, 92, 94, 95, 97, 98, 111, 113, 114, 115, 116, 128, 130, 131, 133, 134, 147, 149, 150, 152, 153, 160, 161, 176, 177, 199, 201, 204, 213, 215, 216, 218, 221, 223, 236, 245, 249, 250, 256, 259, 260, 266], "content": 279, "context": 7, "continu": 270, "contract": 272, "contribut": [270, 273], "contributor": 267, "control": [25, 44, 64, 82, 101, 118, 137, 156, 182, 233, 251, 261], "convent": 276, "convers": [13, 32, 50, 69, 87, 106, 123, 142, 162, 200, 246, 257], "convert": [13, 26, 27, 32, 45, 46, 50, 65, 66, 69, 83, 84, 87, 102, 103, 106, 119, 120, 123, 138, 139, 142, 157, 158, 162, 184, 185, 200, 234, 235, 246, 252, 253, 257, 262, 263], "coordin": [161, 170, 276], "copi": [187, 229, 231, 238, 239, 241, 272], "copy_guid": [17, 36, 54, 73, 91, 110, 127, 146, 171, 211, 248, 258], "copyright": 272, "corner": 281, "correct": [20, 21, 39, 40, 57, 58, 76, 77, 94, 95, 113, 114, 130, 131, 149, 150, 176, 177, 215, 216, 249, 250, 259, 260], "correctli": 275, "correspond": [161, 172, 192, 275, 276, 284], "could": [33, 51, 70, 107, 124, 243], "cover": 196, "cpython": [13, 32, 50, 69, 87, 106, 123, 142, 162, 200, 246, 257], "crate": 281, "creat": [12, 31, 33, 34, 49, 51, 68, 70, 71, 86, 105, 107, 108, 122, 124, 141, 174, 175, 187, 192, 197, 268, 270, 271, 273, 274, 275, 276, 277, 279, 281, 282, 285], "creategeometri": [277, 282], "creation": [16, 35, 53, 72, 90, 109, 126, 145], "criteria": 275, "cross": [11, 24, 31, 43, 47, 49, 63, 81, 86, 100, 105, 117, 122, 136, 141, 155, 161, 174, 175, 276, 277, 281], "cross_beam": [31, 49, 86, 105, 122, 141, 269], "cross_beam_kei": 49, "current": [17, 36, 54, 73, 91, 110, 127, 146, 171, 211, 248, 258, 270], "curv": 276, "custom": 270, "custom_dimens": 277, "cut": [31, 49, 86, 122, 141, 193, 273, 276, 280, 281, 282], "cut_plane_bia": [49, 86, 122, 141, 281], "cutoff": 281, "cylind": 256, "damag": 272, "data": [17, 20, 21, 25, 26, 27, 28, 36, 39, 40, 44, 45, 46, 48, 54, 57, 58, 64, 65, 66, 67, 73, 76, 77, 82, 83, 84, 85, 91, 94, 95, 101, 102, 103, 104, 110, 113, 114, 118, 119, 120, 121, 127, 130, 131, 137, 138, 139, 140, 146, 149, 150, 156, 157, 158, 159, 171, 176, 177, 182, 184, 185, 188, 189, 211, 215, 216, 233, 234, 235, 237, 238, 239, 242, 245, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 265, 279, 283], "datastructur": [25, 44, 64, 82, 101, 118, 137, 156, 167, 182, 209, 210, 228, 230, 233, 238, 239, 240, 241, 251, 261], "de": [24, 43, 63, 81, 100, 117, 136, 155], "deal": 272, "debug": [8, 277, 282, 283], "debug_geometri": 8, "debug_info": [8, 181], "debuginfo": [277, 282], "deeper": [49, 86, 122, 141], "default": [13, 17, 31, 32, 36, 49, 50, 54, 69, 73, 86, 87, 91, 106, 110, 122, 123, 127, 141, 142, 146, 162, 171, 174, 175, 193, 200, 211, 228, 229, 230, 231, 246, 248, 257, 258, 270, 276, 277, 282, 284], "defin": [14, 15, 52, 88, 89, 125, 143, 144, 174, 275, 276, 277, 281, 284, 285], "definit": [274, 282], "deleteattribut": 275, "demo": 278, "depend": [172, 174, 175, 271, 274, 281], "depth": [31, 105, 269, 281], "deriv": [196, 274], "describ": [196, 274], "desigen": 11, "design": [160, 267, 270, 273, 275, 276], "design2machin": 274, "desir": 284, "detail": 273, "detect": [9, 282], "detected_topo": 199, "determin": 281, "dev": 271, "develop": [267, 270], "deviat": 284, "dfab": 267, "diamet": 280, "dict": [12, 189, 196, 198, 199, 203, 274], "dictionari": [12, 189, 198], "did": [16, 35, 53, 72, 90, 109, 126, 145], "differ": [199, 268, 274, 277, 281], "digest": [25, 44, 64, 82, 101, 118, 137, 156, 182, 233, 251, 261], "digit": 267, "dimens": [161, 276], "direct": [161, 173, 174, 175, 230, 231, 266, 276, 277, 285], "directli": [12, 86, 201, 202, 277, 281], "disabl": 282, "displai": [13, 32, 50, 69, 87, 106, 123, 142, 162, 200, 246, 257, 275, 283], "distanc": [10, 11, 277, 282], "distribut": 272, "do": [86, 272, 274], "document": [272, 274, 275, 276, 284], "doe": [18, 37, 55, 74, 92, 111, 128, 147, 274, 276], "doesn": 281, "doi": 267, "done": [22, 23, 41, 42, 60, 61, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153], "down": 281, "drawn": 276, "drop": 281, "dure": [24, 25, 44, 64, 82, 101, 118, 137, 156, 182, 233, 251, 256, 261], "dynam": [277, 281], "e": [11, 24, 268, 275, 284], "each": [12, 22, 23, 41, 42, 60, 61, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153, 173, 196, 245, 274, 275, 281, 283], "easi": 273, "eclips": 268, "ecosystem": 270, "edg": [161, 205, 277, 281], "edge_stud": [277, 281], "edge_stud_offset": 277, "edit": 271, "editor": 268, "eg": 196, "either": [49, 86, 122, 141, 172, 277], "element": [0, 16, 19, 35, 38, 53, 56, 72, 75, 90, 93, 109, 112, 126, 129, 145, 148, 160, 161, 166, 167, 168, 169, 170, 172, 181, 186, 187, 196, 199, 201, 202, 204, 205, 208, 212, 214, 217, 218, 220, 222, 225, 226, 255, 256, 270, 282], "element_id": 256, "elementnod": [201, 202], "elements_held": 256, "encod": 275, "encompass": 270, "end": [12, 22, 23, 31, 41, 42, 49, 60, 61, 68, 79, 80, 97, 98, 105, 115, 116, 122, 133, 134, 141, 152, 153, 161, 163, 172, 173, 175, 281], "end_point": 175, "endpoint": [172, 175], "enlarg": 160, "entail": [270, 275], "entiti": 270, "entri": 275, "enum": 243, "enumer": 29, "environ": [268, 270, 271, 276], "equal": 161, "error": [8, 166, 169, 275, 277, 282], "et": 196, "et_el": 196, "etc": [161, 189, 190, 268, 270, 276], "eth": [267, 270], "event": 272, "everi": 281, "exampl": [24, 25, 44, 64, 82, 101, 118, 137, 156, 160, 182, 204, 233, 251, 261, 270, 273, 275, 276, 285], "except": [8, 205], "exclud": [26, 27, 45, 46, 65, 66, 83, 84, 102, 103, 119, 120, 138, 139, 157, 158, 184, 185, 234, 235, 252, 253, 262, 263], "execut": [243, 256, 268], "exist": [13, 32, 50, 69, 87, 106, 123, 142, 162, 200, 204, 219, 246, 257, 274], "expand": 270, "expect": [18, 37, 55, 74, 92, 111, 128, 147], "expens": 282, "explain": 273, "express": [199, 272], "extend": [31, 163, 173, 224, 281], "extens": [14, 33, 34, 51, 70, 71, 88, 107, 108, 124, 143, 163, 173, 179, 181, 224], "extract": [276, 283], "fabric": [0, 189, 192, 193, 196, 197, 267, 270, 273], "face": [22, 23, 25, 31, 41, 42, 44, 60, 61, 64, 79, 80, 82, 97, 98, 101, 115, 116, 118, 133, 134, 137, 152, 153, 156, 161, 173, 182, 233, 251, 261, 281], "face_index": [22, 23, 41, 42, 60, 61, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153], "factor": [230, 231], "factori": [192, 196, 197, 274], "fals": [10, 17, 25, 26, 27, 31, 36, 44, 45, 46, 54, 64, 65, 66, 73, 82, 83, 84, 91, 101, 102, 103, 110, 118, 119, 120, 127, 137, 138, 139, 146, 156, 157, 158, 168, 171, 182, 184, 185, 211, 233, 234, 235, 248, 251, 252, 253, 258, 261, 262, 263, 277, 282], "fast": 270, "feasibl": 224, "featur": [8, 12, 15, 34, 49, 52, 71, 89, 108, 125, 144, 161, 164, 165, 168, 180, 181, 224, 270, 273, 276, 277, 282, 285], "fibr": [161, 273], "file": [20, 26, 39, 45, 57, 65, 76, 83, 94, 102, 113, 119, 130, 138, 149, 157, 176, 184, 189, 215, 234, 249, 252, 259, 262, 272, 274, 278, 279], "filepath": [20, 26, 39, 45, 57, 65, 76, 83, 94, 102, 113, 119, 130, 138, 149, 157, 176, 184, 215, 234, 249, 252, 259, 262], "filter": [217, 275], "filter_": 217, "final": 285, "find": [10, 160, 214, 266, 276, 281], "find_neighboring_beam": 270, "first": [11, 68, 172, 205, 220, 224, 281, 285], "fit": 272, "fix": [13, 32, 50, 69, 87, 106, 123, 142, 162, 200, 246, 257], "flip": [47, 49, 86, 122, 141, 281], "flip_lap_sid": [49, 86, 122, 141, 281], "float": [10, 11, 31, 49, 86, 105, 122, 141, 160, 161, 163, 166, 169, 173, 174, 175, 199, 228, 229, 230, 231, 266], "flush": [277, 281], "follow": [272, 273, 274, 276, 281], "forg": 271, "fork": 271, "format": [25, 26, 27, 44, 45, 46, 64, 65, 66, 82, 83, 84, 101, 102, 103, 118, 119, 120, 137, 138, 139, 156, 157, 158, 182, 184, 185, 189, 233, 234, 235, 251, 252, 253, 261, 262, 263, 275], "found": 274, "foundat": 267, "four": [275, 281], "frame": [12, 22, 23, 41, 42, 60, 61, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153, 161, 173, 193, 194, 204, 256, 269, 270, 273, 276, 277, 285], "frame_depth": 277, "framework": 270, "free": 272, "from": [11, 20, 21, 25, 26, 27, 39, 40, 44, 45, 46, 57, 58, 64, 65, 66, 76, 77, 82, 83, 84, 94, 95, 101, 102, 103, 113, 114, 118, 119, 120, 130, 131, 137, 138, 139, 149, 150, 156, 157, 158, 174, 175, 176, 177, 179, 180, 182, 184, 185, 196, 204, 215, 216, 225, 227, 233, 234, 235, 249, 250, 251, 252, 253, 259, 260, 261, 262, 263, 268, 270, 272, 273, 274, 275, 276, 277, 279, 280, 281, 283], "from_obj": [25, 44, 64, 82, 101, 118, 137, 156, 182, 233, 251, 261], "fulli": 281, "fullnam": [13, 32, 50, 69, 87, 106, 123, 142, 162, 200, 246, 257], "function": [7, 86, 160, 196, 217, 273, 274], "furnish": 272, "furthest": 277, "futur": 270, "g": [11, 24, 268, 275], "gener": [11, 191, 195, 196, 199, 217, 255, 274, 276, 277, 281, 285], "geometr": [196, 270, 274, 280, 282], "geometri": [8, 161, 167, 168, 169, 170, 186, 187, 209, 210, 228, 229, 231, 236, 240, 241, 256, 266, 270, 273, 276, 277, 280, 281, 282, 283, 284, 285], "geometry_typ": 269, "get": [25, 44, 64, 82, 101, 118, 137, 156, 182, 212, 217, 233, 251, 261, 271, 273, 275], "getcustomattribut": 275, "getstandardattribut": 275, "gettyp": [13, 32, 50, 69, 87, 106, 123, 142, 162, 200, 246, 257], "gh": [189, 190], "ghpython": [0, 270, 273], "ghuser": 271, "git": 271, "github": [267, 271], "given": [10, 11, 18, 30, 37, 55, 74, 92, 111, 128, 147, 160, 172, 173, 175, 178, 218, 244, 275], "global": 283, "gonzalo": 267, "gramazio": [267, 270, 272], "gramaziokohl": 267, "grant": 272, "graph": 205, "grasshopp": [13, 32, 50, 69, 87, 106, 123, 142, 162, 200, 246, 257, 268, 270, 271, 276, 281, 285], "group": [201, 202, 203, 204, 214, 217, 219, 275], "group_nam": [217, 219], "groupnod": [201, 202, 203, 204], "grssshopper": 281, "guid": [17, 26, 27, 36, 45, 46, 54, 65, 66, 73, 83, 84, 91, 102, 103, 110, 119, 120, 127, 138, 139, 146, 157, 158, 171, 184, 185, 211, 212, 234, 235, 248, 252, 253, 258, 262, 263, 270, 273, 276, 281], "ha": [8, 20, 21, 39, 40, 57, 58, 76, 77, 94, 95, 113, 114, 130, 131, 149, 150, 160, 176, 177, 204, 215, 216, 249, 250, 256, 259, 260, 276, 281, 284], "half": 281, "handl": 270, "has_group": 204, "hash": [25, 44, 64, 82, 101, 118, 137, 156, 182, 233, 251, 261], "have": [17, 18, 36, 37, 54, 55, 73, 74, 91, 92, 110, 111, 127, 128, 146, 147, 161, 171, 196, 201, 211, 220, 248, 258, 276], "header": [277, 281], "header_attribut": [196, 274], "height": [161, 174, 175, 269, 275, 276, 277], "held": 256, "help": 277, "here": [224, 274, 277, 278, 284], "hereaft": 281, "herebi": 272, "hexadecim": [25, 44, 64, 82, 101, 118, 137, 156, 182, 233, 251, 261], "hierarchi": [170, 199, 201, 285], "highest": 281, "highli": 281, "histori": 189, "holder": 272, "hole": 273, "how": [273, 281, 285], "http": [267, 271, 274], "human": [244, 256], "hybrid": 275, "i": [10, 11, 12, 14, 16, 18, 20, 21, 22, 23, 24, 28, 31, 33, 34, 35, 37, 39, 40, 41, 42, 47, 48, 49, 51, 53, 55, 57, 58, 60, 61, 67, 68, 70, 71, 72, 74, 76, 77, 79, 80, 85, 86, 88, 90, 92, 94, 95, 97, 98, 104, 105, 107, 108, 109, 111, 113, 114, 115, 116, 121, 122, 124, 126, 128, 130, 131, 133, 134, 140, 141, 143, 145, 147, 149, 150, 152, 153, 159, 160, 161, 163, 172, 173, 176, 177, 188, 189, 195, 199, 201, 204, 208, 215, 216, 224, 236, 242, 245, 249, 250, 254, 255, 259, 260, 265, 267, 270, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 285], "id": [256, 268], "idea": 273, "identifi": [12, 160, 212], "ignor": [22, 23, 41, 42, 60, 61, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153], "ignore_end": [22, 23, 41, 42, 60, 61, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153], "imag": 284, "implement": [12, 14, 16, 24, 35, 53, 72, 88, 90, 109, 126, 143, 145, 266, 270, 281], "impli": [272, 282], "implicit": [13, 32, 50, 69, 87, 106, 123, 142, 162, 200, 246, 257], "import": [25, 44, 64, 82, 101, 118, 137, 156, 182, 204, 224, 233, 251, 261, 274, 285], "includ": [168, 272, 274], "include_featur": 168, "increment": 256, "indent": [26, 27, 45, 46, 65, 66, 83, 84, 102, 103, 119, 120, 138, 139, 157, 158, 184, 185, 234, 235, 252, 253, 262, 263], "independ": [17, 36, 54, 73, 91, 110, 127, 146, 171, 211, 248, 258], "index": [22, 23, 41, 42, 60, 61, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153, 178, 183, 270], "indic": [8, 174, 175, 275, 276], "individu": 196, "inflat": [160, 166, 169, 266], "inflate_bi": [160, 266], "inform": [8, 270, 277, 282, 283, 284], "inherit": [12, 31, 49, 68, 86, 105, 122, 141, 161, 199, 245, 256, 270, 274], "initi": 181, "inner": [22, 23, 41, 42, 60, 61, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153, 281], "input": [11, 160, 196, 273, 274, 275, 276, 277, 279, 280, 281, 282], "insid": [232, 268], "inspect": 283, "instal": 270, "instanc": [13, 18, 20, 21, 31, 32, 37, 39, 40, 49, 50, 55, 57, 58, 68, 69, 74, 76, 77, 86, 87, 92, 94, 95, 105, 106, 111, 113, 114, 122, 123, 128, 130, 131, 141, 142, 147, 149, 150, 162, 176, 177, 196, 200, 206, 215, 216, 246, 249, 250, 257, 259, 260, 268, 274], "instanti": [12, 86, 196, 274], "instead": [12, 276], "instruct": [224, 243, 245, 256], "int": [30, 161, 163, 178, 179, 183, 205, 244, 256], "integ": 161, "intend": [275, 276], "interact": [12, 199, 205, 214, 220, 226, 268, 285], "interaction_typ": 214, "interest": 172, "interfac": 270, "intern": 195, "intersect": [9, 10, 11], "introduct": 270, "intuit": 270, "invok": 271, "involv": 198, "ironpython": [13, 32, 50, 69, 87, 106, 123, 142, 162, 200, 246, 257], "is_built": 256, "is_plan": 256, "iter": 224, "its": [13, 22, 23, 26, 27, 32, 41, 42, 45, 46, 50, 60, 61, 65, 66, 69, 79, 80, 83, 84, 87, 97, 98, 102, 103, 106, 115, 116, 119, 120, 123, 133, 134, 138, 139, 142, 152, 153, 157, 158, 162, 170, 174, 181, 184, 185, 192, 200, 212, 234, 235, 246, 252, 253, 257, 262, 263, 271, 275, 281], "jack": [193, 277], "jack_stud": [277, 281], "jo": [18, 37, 55, 74, 92, 111, 128, 147], "join": [8, 12, 18, 31, 37, 49, 55, 68, 74, 86, 92, 105, 111, 122, 128, 141, 147, 277, 282], "joineri": 224, "joint": [8, 9, 29, 31, 33, 34, 35, 37, 47, 49, 51, 52, 53, 55, 68, 70, 71, 72, 74, 86, 88, 89, 90, 92, 105, 107, 108, 109, 111, 122, 124, 125, 126, 128, 141, 143, 144, 145, 147, 163, 179, 189, 192, 193, 196, 197, 198, 199, 206, 224, 227, 268, 270, 273, 274, 276, 277, 282, 285], "joint_factori": [192, 196, 274], "joint_kei": [163, 179], "joint_nam": [193, 194], "joint_overrid": 277, "joint_typ": [49, 192], "jointfactori": 192, "jointrul": 282, "jointtopologi": [11, 199, 270], "joist": 276, "json": [20, 21, 26, 27, 39, 40, 45, 46, 57, 58, 65, 66, 76, 77, 83, 84, 94, 95, 102, 103, 113, 114, 119, 120, 130, 131, 138, 139, 149, 150, 157, 158, 176, 177, 184, 185, 215, 216, 234, 235, 249, 250, 252, 253, 259, 260, 262, 263], "kasir": 267, "keep": 281, "kei": [12, 24, 49, 161, 163, 179, 198, 275], "keyword": 203, "kick": [13, 32, 50, 69, 87, 106, 123, 142, 162, 200, 246, 257], "kind": [272, 281], "king": 277, "king_stud": [277, 281], "kohler": [267, 270, 272], "kwarg": [18, 37, 55, 74, 92, 111, 128, 147, 203], "l": [31, 49, 68, 86, 197, 198, 283], "lap": [49, 86, 122, 141], "lapjoint": [49, 122, 141, 270], "larger": [161, 276, 281], "later": [275, 276], "latest": 271, "latter": 276, "layer": 284, "lbuttjoint": 270, "lement": 164, "length": [105, 122, 141, 161, 174], "less": [18, 37, 55, 74, 92, 111, 128, 147, 161], "level": 281, "lhalflapjoint": 270, "li": [276, 284], "liabil": 272, "liabl": 272, "librari": [267, 268, 270, 273], "licens": 270, "lie": [18, 37, 55, 74, 92, 111, 128, 147], "like": [270, 273, 282], "limit": 272, "line": [161, 174, 270, 275, 276, 277, 280], "linear": 276, "linecurv": 276, "lintel_post": 277, "list": [8, 10, 12, 18, 37, 49, 55, 74, 92, 111, 128, 147, 160, 161, 164, 165, 172, 180, 189, 196, 199, 202, 208, 214, 256, 266, 274, 281, 283], "lmiterfactori": 270, "lmiterjoint": 270, "local": [161, 276], "locat": [161, 256, 276], "log": [30, 244], "long": [161, 173], "long_edg": 161, "lower": 281, "lowest": 281, "ly": 280, "m": 271, "machin": [161, 274, 279], "made": 281, "mai": [275, 282], "main": [11, 24, 31, 43, 47, 49, 63, 81, 86, 100, 105, 117, 122, 136, 141, 155, 281], "main_beam": [31, 49, 86, 105, 122, 141, 269], "main_beam_kei": 49, "maintain": 270, "major": [161, 276], "make": [13, 17, 32, 36, 50, 54, 69, 73, 87, 91, 106, 110, 123, 127, 142, 146, 162, 171, 200, 211, 246, 248, 257, 258], "mani": [267, 268, 270], "map": [12, 273, 284], "mapsiz": 284, "mass": 199, "match": [196, 274, 281], "materi": [161, 201, 207, 208, 221, 276, 284], "mathemat": 11, "max": 282, "max_dist": [10, 11], "maxdist": 282, "maximum": 11, "mayb": 204, "meant": 7, "meet": 281, "merchant": 272, "merg": 272, "mesh": [25, 44, 64, 82, 101, 118, 137, 156, 167, 182, 233, 251, 261, 269], "method": [9, 11, 12, 13, 18, 24, 29, 31, 32, 33, 34, 37, 49, 50, 51, 55, 68, 69, 70, 71, 74, 86, 87, 92, 105, 106, 107, 108, 111, 122, 123, 124, 128, 141, 142, 147, 161, 162, 189, 193, 195, 197, 199, 200, 224, 243, 245, 246, 256, 257, 270, 274], "metric": 173, "middl": [161, 281], "midpoint": 161, "might": [273, 281], "mill": [31, 105], "mill_depth": [31, 105, 281], "mind": 274, "minim": [26, 27, 45, 46, 65, 66, 83, 84, 102, 103, 119, 120, 138, 139, 157, 158, 184, 185, 234, 235, 252, 253, 262, 263], "minimum": 173, "misc": 267, "miss": 275, "mit": 272, "miter": [68, 197, 198], "mode": 271, "model": [0, 18, 24, 31, 37, 43, 49, 55, 63, 68, 74, 81, 86, 92, 100, 105, 111, 117, 122, 128, 136, 141, 147, 155, 161, 170, 189, 191, 199, 201, 202, 203, 204, 205, 206, 207, 208, 213, 218, 219, 221, 222, 223, 224, 225, 227, 232, 236, 243, 255, 270, 273, 276, 279, 280, 285], "modifi": [236, 272], "modify_cross": [31, 281], "modul": [7, 196, 270, 274], "more": [8, 165, 270, 273, 274, 276, 281], "most": [22, 23, 41, 42, 60, 61, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153], "multipl": [196, 202, 268, 274], "must": [224, 277], "myenvnam": 271, "n": 271, "name": [193, 196, 203, 204, 217, 219, 274, 275, 283], "nation": 267, "nativ": [26, 27, 45, 46, 65, 66, 83, 84, 102, 103, 119, 120, 138, 139, 157, 158, 184, 185, 234, 235, 252, 253, 262, 263], "nccr": 267, "necessari": [33, 51, 70, 107, 124, 271, 274], "need": [196, 274, 275, 285], "neighbor": [10, 160, 266], "neightbor": [10, 266], "neither": 208, "net": [13, 32, 50, 69, 87, 106, 123, 142, 162, 200, 246, 257], "new": [18, 37, 55, 74, 92, 111, 128, 147, 271, 274, 276], "newlin": [26, 27, 45, 46, 65, 66, 83, 84, 102, 103, 119, 120, 138, 139, 157, 158, 184, 185, 234, 235, 252, 253, 262, 263], "node": [201, 202, 203, 204], "non": 10, "none": [11, 17, 36, 54, 73, 91, 110, 127, 146, 163, 164, 171, 174, 175, 179, 180, 186, 192, 193, 194, 198, 201, 202, 203, 204, 205, 207, 208, 211, 217, 225, 226, 228, 229, 230, 231, 236, 237, 240, 248, 258, 276], "noninfring": 272, "normal": [22, 23, 41, 42, 60, 61, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153, 161], "note": [160, 201, 267], "notic": 272, "now": 281, "number": [277, 285], "obb": 169, "obj": [25, 44, 64, 82, 101, 118, 137, 156, 182, 233, 251, 256, 261], "object": [9, 10, 13, 17, 18, 20, 21, 24, 26, 27, 28, 29, 32, 36, 37, 39, 40, 45, 46, 48, 50, 54, 55, 57, 58, 65, 66, 67, 69, 73, 74, 76, 77, 83, 84, 85, 87, 91, 92, 94, 95, 102, 103, 104, 106, 110, 111, 113, 114, 119, 120, 121, 123, 127, 128, 130, 131, 138, 139, 140, 142, 146, 147, 149, 150, 157, 158, 159, 160, 162, 171, 176, 177, 184, 185, 188, 189, 193, 196, 197, 198, 199, 200, 205, 206, 211, 215, 216, 227, 234, 235, 242, 243, 246, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 262, 263, 265, 270, 275, 276, 277, 282, 284], "obtain": 272, "occ": 270, "occur": [8, 283], "offset": [166, 169, 277], "onc": [161, 276], "one": [22, 23, 41, 42, 49, 60, 61, 79, 80, 86, 97, 98, 115, 116, 122, 133, 134, 141, 152, 153, 165, 205, 208, 255, 256, 274, 276, 281, 283], "onli": [14, 16, 24, 35, 53, 72, 88, 90, 109, 126, 143, 145, 168, 224, 275], "onto": 277, "open": [267, 270], "opencascad": 270, "oper": [280, 282], "oppos": 178, "opposit": [31, 281], "option": [10, 11, 14, 16, 17, 22, 23, 25, 26, 27, 35, 36, 41, 42, 44, 45, 46, 53, 54, 60, 61, 64, 65, 66, 72, 73, 79, 80, 82, 83, 84, 88, 90, 91, 97, 98, 101, 102, 103, 109, 110, 115, 116, 118, 119, 120, 126, 127, 133, 134, 137, 138, 139, 143, 145, 146, 152, 153, 156, 157, 158, 160, 161, 166, 168, 171, 182, 184, 185, 193, 201, 202, 203, 204, 205, 208, 211, 217, 226, 228, 229, 230, 231, 233, 234, 235, 248, 251, 252, 253, 258, 261, 262, 263, 276, 285], "order": [11, 160, 255], "orient": [169, 174, 175, 210, 284], "origin": [17, 36, 54, 73, 91, 110, 127, 146, 161, 171, 211, 228, 229, 248, 258, 276, 284], "orthogon": [22, 41, 60, 79, 97, 115, 133, 152], "other": [13, 22, 23, 32, 41, 42, 49, 50, 60, 61, 69, 79, 80, 86, 87, 97, 98, 106, 115, 116, 122, 123, 133, 134, 141, 142, 152, 153, 162, 200, 204, 246, 257, 267, 272, 281, 285], "otherwis": [11, 31, 272, 276], "out": 272, "outer": 281, "output": [11, 13, 26, 27, 32, 45, 46, 50, 65, 66, 69, 83, 84, 87, 102, 103, 106, 119, 120, 123, 138, 139, 142, 157, 158, 162, 184, 185, 200, 234, 235, 246, 252, 253, 257, 262, 263, 276, 277, 279, 280, 282], "overal": 273, "overlap": 281, "overrid": [13, 32, 50, 69, 87, 106, 123, 142, 162, 200, 246, 257, 277], "overwrit": [281, 285], "own": 281, "packag": [270, 271, 274], "pair": [10, 11, 160, 266, 275], "panel": [13, 32, 50, 69, 87, 106, 123, 142, 162, 200, 246, 257], "parallel": [256, 276, 281], "param": 196, "paramet": [10, 11, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 54, 55, 57, 58, 60, 61, 64, 65, 66, 67, 68, 73, 74, 76, 77, 79, 80, 82, 83, 84, 85, 86, 91, 92, 94, 95, 97, 98, 101, 102, 103, 104, 105, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 127, 128, 130, 131, 133, 134, 137, 138, 139, 140, 141, 146, 147, 149, 150, 152, 153, 156, 157, 158, 159, 160, 161, 164, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 195, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 265, 266, 274, 275, 284], "parametr": [161, 183, 270], "parent": [201, 202, 203, 204], "part": [24, 189, 191, 193, 194, 198, 201, 208, 266, 270, 274, 276, 280], "particular": 272, "pass": 173, "path": [20, 26, 39, 45, 57, 65, 76, 83, 94, 102, 113, 119, 130, 138, 149, 157, 176, 184, 215, 234, 249, 252, 259, 262, 279], "pdf": 274, "per": 255, "permiss": 272, "permit": 272, "perpendicular": 276, "person": 272, "pip": 271, "place": [13, 32, 50, 69, 87, 106, 123, 142, 162, 200, 236, 246, 257, 281], "plan": [0, 243, 245, 255, 256, 270], "planar": [183, 273, 277, 281], "plane": [31, 68, 173, 193, 276, 280, 281, 284], "plate": [199, 277, 282], "pleas": [31, 49, 68, 86, 105, 122, 141, 267], "pln": 173, "plug": 270, "pluggabl": 160, "plugin": [160, 270], "pocket": [31, 105], "point": [161, 166, 169, 172, 175, 199, 228, 229, 270, 281, 284], "point_end": 175, "point_start": 175, "portion": 272, "posit": [161, 170, 280], "possibl": [29, 275], "present": [268, 281], "pretti": [26, 27, 45, 46, 65, 66, 83, 84, 102, 103, 119, 120, 138, 139, 157, 158, 184, 185, 189, 190, 234, 235, 252, 253, 262, 263], "prevent": 281, "preview": 283, "print": [13, 32, 50, 69, 87, 106, 123, 142, 162, 200, 246, 257], "prior": 266, "priorit": 47, "prioriti": [256, 281], "process": [161, 191, 193, 195, 196, 198, 224, 270, 273, 274, 285], "process_param": 274, "process_paramet": 196, "process_typ": [196, 274], "produc": 161, "product": [22, 23, 41, 42, 60, 61, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153], "programm": 267, "project": [267, 270], "proper": [13, 32, 50, 69, 87, 106, 123, 142, 162, 200, 246, 257], "properli": [31, 49, 68, 86, 105, 122, 141], "provid": [9, 201, 204, 208, 272, 273, 276, 282], "publish": 272, "purpos": 272, "py": 274, "python": [268, 270, 271, 273], "queri": [217, 219], "r": [10, 160, 271], "radian": [228, 229], "rafter": 276, "rais": [14, 15, 16, 18, 20, 21, 33, 35, 37, 39, 40, 51, 52, 53, 55, 57, 58, 70, 72, 74, 76, 77, 88, 89, 90, 92, 94, 95, 107, 109, 111, 113, 114, 124, 125, 126, 128, 130, 131, 143, 144, 145, 147, 149, 150, 176, 177, 201, 204, 205, 208, 215, 216, 249, 250, 259, 260], "random": 284, "rather": [25, 44, 64, 82, 101, 118, 137, 156, 182, 233, 251, 261], "ratio": 284, "raw": [28, 48, 67, 85, 104, 121, 140, 159, 188, 242, 254, 265, 276], "reason": 224, "recogn": 283, "rectangular": [161, 276], "ref_edg": 161, "ref_fram": 161, "ref_sid": 161, "refer": [24, 43, 63, 81, 100, 117, 136, 155, 161, 178, 183, 270, 273, 274, 275], "referenc": [276, 277], "regard": 160, "regist": 192, "register_joint": [196, 274], "reject": 31, "reject_i": [31, 281], "relat": [196, 274], "remain": 281, "remov": [163, 179, 180, 181, 225, 226, 227, 275, 280, 281], "render": [273, 284], "repositori": 271, "repres": [31, 49, 68, 105, 122, 141, 161, 189, 193, 199, 205, 243, 276], "represent": [13, 26, 27, 30, 32, 45, 46, 49, 50, 65, 66, 69, 83, 84, 87, 102, 103, 106, 119, 120, 123, 138, 139, 142, 157, 158, 162, 184, 185, 200, 234, 235, 244, 246, 252, 253, 257, 262, 263, 274], "request": 183, "requir": [14, 16, 34, 35, 53, 71, 72, 88, 90, 108, 109, 126, 143, 145, 163, 179, 196, 271], "requr": 274, "research": [267, 270, 272], "resolv": 270, "respect": [12, 24], "respons": [18, 37, 55, 74, 92, 111, 128, 147], "restor": [24, 43, 63, 81, 100, 117, 136, 155], "restrict": 272, "result": [22, 23, 41, 42, 60, 61, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153, 172, 255, 276, 277], "retriev": [212, 275], "return": [10, 11, 12, 17, 18, 20, 21, 22, 23, 25, 27, 28, 30, 36, 37, 39, 40, 41, 42, 44, 46, 48, 54, 55, 57, 58, 60, 61, 64, 66, 67, 73, 74, 76, 77, 79, 80, 82, 84, 85, 91, 92, 94, 95, 97, 98, 101, 103, 104, 110, 111, 113, 114, 115, 116, 118, 120, 121, 127, 128, 130, 131, 133, 134, 137, 139, 140, 146, 147, 149, 150, 152, 153, 156, 158, 159, 160, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 185, 186, 187, 188, 189, 190, 192, 198, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 225, 226, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 248, 249, 250, 251, 253, 254, 258, 259, 260, 261, 263, 265, 266], "rhino": [0, 13, 32, 50, 69, 87, 106, 123, 142, 160, 162, 200, 246, 257, 266, 268, 270, 271, 275, 276, 281, 284], "rhinocero": 270, "rhinocommon": 270, "right": [272, 281], "robot": [244, 256], "role": [11, 24], "root": [201, 202], "rotat": [230, 231, 240, 241, 276], "rtree": [10, 266], "rule": [270, 273, 276, 277, 282, 285], "run": [268, 270], "sai": 276, "same": [11, 17, 31, 36, 54, 73, 91, 110, 127, 146, 171, 204, 211, 248, 255, 256, 258], "save": [26, 27, 43, 45, 46, 63, 65, 66, 81, 83, 84, 100, 102, 103, 117, 119, 120, 136, 138, 139, 155, 157, 158, 184, 185, 234, 235, 252, 253, 262, 263, 279], "scale": [228, 229, 240, 241, 284], "schema": [20, 21, 28, 39, 40, 48, 57, 58, 67, 76, 77, 85, 94, 95, 104, 113, 114, 121, 130, 131, 140, 149, 150, 159, 176, 177, 188, 215, 216, 242, 249, 250, 254, 259, 260, 265], "scienc": 267, "sdk": 270, "search": [10, 160], "second": [11, 68, 172, 205, 220, 224], "section": [31, 47, 161, 174, 175, 268, 273, 276, 277, 281], "secur": 281, "see": [24, 199, 273, 276, 278, 280, 281, 284], "select": [277, 281, 283], "self": [13, 32, 50, 69, 87, 106, 123, 142, 162, 196, 200, 246, 257, 274], "sell": 272, "semant": 270, "sensit": 11, "separ": 275, "sequenc": [224, 255, 270], "sequenti": 281, "serial": [24, 43, 63, 81, 100, 117, 136, 155], "serv": 284, "session": 268, "set": [10, 160, 220, 266, 275, 276, 277, 281, 282], "setcustomattribut": 275, "setstandardattribut": 275, "shall": [204, 272], "shape": 161, "sheet": 277, "sheeting_insid": 277, "sheeting_outsid": 277, "shift": [49, 86, 122, 141, 281], "shorten": 281, "should": [8, 12, 14, 15, 16, 24, 35, 49, 52, 53, 72, 86, 88, 89, 90, 109, 122, 125, 126, 141, 143, 144, 145, 160, 163, 173, 196, 201, 274, 281], "show": [270, 273], "side": [49, 86, 122, 141, 161, 178, 183, 277, 280, 281], "side_index": [178, 183], "sill": [277, 281], "similar": [13, 32, 50, 69, 87, 106, 123, 142, 162, 200, 246, 257, 281], "simpl": [255, 270, 273], "simplesequencegener": 270, "sinc": [24, 224], "singl": [256, 274], "size": [276, 284], "slat": 161, "small_beam_butt": [31, 47, 281], "smaller": [31, 47, 161, 276], "so": [196, 272, 274], "softwar": [270, 272], "solid": [161, 282], "some": [196, 273, 284], "sourc": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 275, 276], "space": 277, "spatial": 170, "specialist": 270, "specif": [11, 24, 196, 214, 221, 270, 274, 276, 277, 281], "specifi": [212, 277], "stage": 270, "standard": [161, 277], "start": [161, 163, 172, 173, 175, 273, 276], "state": 181, "static": [22, 23, 41, 42, 60, 61, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153], "step": [245, 247, 255, 270, 274], "still": 10, "stock": [161, 276], "store": [24, 275, 276], "str": [8, 12, 20, 21, 25, 26, 27, 30, 39, 40, 44, 45, 46, 49, 57, 58, 64, 65, 66, 76, 77, 82, 83, 84, 94, 95, 101, 102, 103, 113, 114, 118, 119, 120, 130, 131, 137, 138, 139, 149, 150, 156, 157, 158, 172, 176, 177, 182, 184, 185, 189, 193, 196, 203, 204, 212, 215, 216, 217, 219, 233, 234, 235, 244, 249, 250, 251, 252, 253, 256, 259, 260, 261, 262, 263], "straight": 276, "string": [8, 13, 21, 27, 30, 32, 40, 46, 49, 50, 58, 66, 69, 77, 84, 87, 95, 103, 106, 114, 120, 123, 131, 139, 142, 150, 158, 162, 177, 185, 189, 190, 200, 216, 235, 244, 246, 250, 253, 257, 260, 263, 275, 276, 281], "structur": [237, 238, 239, 267, 270, 273, 277, 282, 285], "stud": [161, 276, 277, 281], "stud_direct": 277, "stud_spac": 277, "studio": 268, "style": 273, "sub": 86, "subject": 272, "sublicens": 272, "sublim": 268, "substanti": 272, "subtract": 282, "summaris": 281, "support": [256, 267, 268], "suppos": 8, "surfac": [183, 274, 280], "swiss": 267, "system": [161, 276], "t": [86, 105, 122, 141, 283], "take": [13, 32, 50, 69, 87, 106, 123, 142, 162, 200, 246, 257, 274, 285], "tbuttjoint": [24, 269, 270], "termin": [189, 190], "text": [268, 279], "textur": [273, 284], "thalflapjoint": 270, "than": [18, 25, 37, 44, 55, 64, 74, 82, 92, 101, 111, 118, 128, 137, 147, 156, 182, 233, 251, 261], "thei": [11, 281, 285], "them": [18, 37, 55, 68, 74, 92, 111, 128, 147, 196, 220, 268, 274, 275, 281], "thi": [8, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 85, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 159, 160, 161, 162, 163, 170, 171, 173, 176, 177, 179, 188, 195, 196, 198, 199, 200, 204, 211, 215, 216, 217, 219, 224, 227, 229, 231, 238, 239, 241, 242, 246, 248, 249, 250, 254, 256, 257, 258, 259, 260, 265, 266, 268, 272, 274, 275, 277, 281, 285], "thick": 277, "third": 281, "three": [281, 285], "through": [49, 86, 122, 141, 173, 267, 281], "tilt": 281, "timber": [161, 189, 193, 199, 267, 273, 276, 277, 279, 283, 285], "timberassembli": 269, "timberel": [161, 204], "timbermodel": [18, 37, 55, 74, 92, 111, 128, 147, 270], "titl": 267, "todo": [173, 204, 217, 219, 232, 281], "togeth": [18, 37, 55, 74, 92, 111, 128, 147, 276], "tol": 11, "toler": [11, 282], "tool": [9, 270, 273, 283, 284], "top": [273, 281], "topo_i": 29, "topo_l": [29, 30], "topo_t": [29, 30], "topo_unknown": [29, 30], "topo_x": [29, 30], "topologi": [9, 11, 18, 29, 30, 31, 37, 49, 55, 68, 74, 92, 105, 111, 122, 128, 141, 147, 199, 232, 281, 282, 285], "tort": 272, "total": 199, "touch": 10, "transform": [170, 228, 229, 230, 231, 237, 239, 240, 241], "translat": [228, 229, 230, 231], "tree": [10, 160, 201], "trim": [31, 34, 49, 68, 71, 105, 108, 122, 141, 282], "trimfeatur": 280, "true": [10, 17, 22, 23, 25, 26, 27, 31, 36, 41, 42, 44, 45, 46, 47, 49, 54, 60, 61, 64, 65, 66, 73, 79, 80, 82, 83, 84, 86, 91, 97, 98, 101, 102, 103, 110, 115, 116, 118, 119, 120, 122, 127, 133, 134, 137, 138, 139, 141, 146, 152, 153, 156, 157, 158, 168, 171, 173, 182, 184, 185, 204, 211, 218, 219, 220, 233, 234, 235, 248, 251, 252, 253, 258, 261, 262, 263, 276, 277, 279, 281, 282], "try": 8, "tupl": [11, 12, 22, 23, 41, 42, 60, 61, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153, 161, 173, 205], "two": [8, 11, 12, 18, 31, 37, 49, 55, 68, 74, 92, 111, 128, 147, 172, 205, 220, 226, 281], "txt": 271, "type": [7, 11, 13, 17, 20, 21, 28, 31, 32, 36, 39, 40, 48, 49, 50, 54, 57, 58, 67, 68, 69, 73, 76, 77, 85, 86, 87, 91, 94, 95, 104, 105, 106, 110, 113, 114, 121, 122, 123, 127, 130, 131, 140, 141, 142, 146, 149, 150, 159, 162, 171, 176, 177, 188, 192, 196, 200, 211, 214, 215, 216, 242, 243, 246, 248, 249, 250, 254, 256, 257, 258, 259, 260, 265, 270, 274, 277, 285], "typeerror": [20, 21, 39, 40, 57, 58, 76, 77, 94, 95, 113, 114, 130, 131, 149, 150, 176, 177, 215, 216, 249, 250, 259, 260], "typic": [196, 256, 274], "unchang": 281, "under": [201, 202], "underscor": 275, "uniqu": [12, 161, 212], "unit": [11, 160, 173], "unlik": 281, "updaterefobj": 276, "upon": 270, "upper": 281, "upstream": [204, 217, 219], "url": 267, "us": [7, 8, 10, 11, 12, 13, 25, 28, 30, 31, 32, 44, 48, 49, 50, 64, 67, 68, 69, 82, 85, 86, 87, 101, 104, 105, 106, 118, 121, 122, 123, 137, 140, 141, 142, 156, 159, 160, 162, 173, 182, 188, 189, 200, 204, 232, 233, 237, 238, 239, 240, 241, 242, 244, 246, 251, 254, 256, 257, 261, 265, 266, 267, 270, 272, 273, 274, 275, 276, 277, 279, 280, 281, 283, 284], "user": [275, 277], "usual": [13, 32, 50, 69, 87, 106, 123, 142, 161, 162, 200, 246, 257], "util": [270, 273], "v1": [25, 44, 64, 82, 101, 118, 137, 156, 182, 233, 251, 261], "v2": [25, 44, 64, 82, 101, 118, 137, 156, 182, 233, 251, 261], "v3": [25, 44, 64, 82, 101, 118, 137, 156, 182, 233, 251, 261], "v7": 271, "valid": [28, 48, 67, 85, 104, 121, 140, 159, 188, 242, 254, 265], "valu": [30, 49, 86, 122, 141, 160, 161, 244, 275], "valueerror": [18, 37, 55, 74, 92, 111, 128, 147, 201, 204, 208], "variabl": 281, "vector": [174, 175, 228, 229, 240, 241, 270, 276, 277], "verifi": [18, 37, 55, 74, 92, 111, 128, 147, 173, 221], "version": [25, 44, 64, 82, 101, 118, 137, 156, 182, 233, 251, 261, 271], "vertex_attribut": [25, 44, 64, 82, 101, 118, 137, 156, 182, 233, 251, 261], "vertex_sampl": [25, 44, 64, 82, 101, 118, 137, 156, 182, 233, 251, 261], "vertic": [276, 281], "via": 270, "visual": [8, 189, 190, 245, 256, 268], "visualis": 282, "vocabulari": 277, "volum": 199, "wa": [8, 14, 15, 52, 88, 89, 125, 143, 144], "wai": 268, "wall": [199, 204, 277], "wall1": 204, "wall1_group": 204, "warranti": 272, "well": [163, 204], "were": [8, 11, 12, 275], "when": [10, 13, 32, 33, 34, 50, 51, 69, 70, 71, 87, 106, 107, 108, 123, 124, 142, 162, 163, 200, 246, 257, 275, 281], "whenev": [14, 15, 16, 35, 52, 53, 72, 88, 89, 90, 109, 125, 126, 143, 144, 145], "where": [274, 276, 279, 281, 284], "whether": [256, 272], "which": [8, 10, 11, 12, 18, 22, 23, 31, 37, 41, 42, 49, 55, 60, 61, 68, 74, 79, 80, 92, 97, 98, 105, 111, 115, 116, 122, 128, 133, 134, 141, 147, 152, 153, 160, 163, 172, 173, 179, 196, 203, 204, 243, 245, 256, 274, 276, 277, 282], "while": [8, 281, 283], "whitespac": [26, 27, 45, 46, 65, 66, 83, 84, 102, 103, 119, 120, 138, 139, 157, 158, 184, 185, 234, 235, 252, 253, 262, 263], "whom": 272, "whose": [22, 23, 41, 42, 60, 61, 79, 80, 97, 98, 115, 116, 133, 134, 152, 153], "whould": [18, 37, 55, 74, 92, 111, 128, 147], "wide": 161, "width": [161, 174, 175, 269, 275, 276, 277], "within": [11, 256, 276], "without": [26, 27, 45, 46, 49, 65, 66, 83, 84, 86, 102, 103, 119, 120, 122, 138, 139, 141, 157, 158, 184, 185, 234, 235, 252, 253, 262, 263, 272, 276], "wood": 161, "work": [267, 277], "workflow": [270, 273, 275, 276], "world": [170, 276, 277], "worldx": [174, 175], "worldxi": [204, 269], "worldz": [174, 175], "write": [275, 276], "written": 270, "x": [86, 141, 161, 230, 231, 276, 283, 284], "xhalflapjoint": 270, "xmax": 161, "xmin": 161, "xml": [189, 190, 279], "y": [161, 230, 231, 276, 284], "ye": 271, "year": 267, "yet": 281, "yield": [213, 222, 223], "ymax": 161, "ymin": 161, "you": [267, 273, 277, 281, 285], "your": 267, "yourgithub_usernam": 271, "z": [25, 44, 64, 82, 101, 118, 137, 156, 161, 174, 175, 182, 228, 229, 230, 231, 233, 251, 261, 276, 277, 280, 284], "z_vector": [174, 175], "zenodo": 267, "zero": 277, "zmax": 161, "zmin": 161, "zurich": [267, 270], "zvector": [275, 276]}, "titles": ["API Reference", "compas_timber.connections", "compas_timber.elements", "compas_timber.fabrication", "compas_timber.ghpython", "compas_timber.model", "compas_timber.planning", "rhino", "BeamJoinningError", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "Joint", "Joint.ToString", "Joint.add_extensions", "Joint.add_features", "Joint.check_elements_compatability", "Joint.copy", "Joint.create", "Joint.element_count_complies", "Joint.from_json", "Joint.from_jsonstring", "Joint.get_face_most_ortho_to_beam", "Joint.get_face_most_towards_beam", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_json", "Joint.to_jsonstring", "Joint.validate_data", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_extensions", "LButtJoint.add_features", "LButtJoint.check_elements_compatability", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.element_count_complies", "LButtJoint.from_json", "LButtJoint.from_jsonstring", "LButtJoint.get_face_most_ortho_to_beam", "LButtJoint.get_face_most_towards_beam", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.to_json", "LButtJoint.to_jsonstring", "LButtJoint.update_beam_roles", "LButtJoint.validate_data", "LHalfLapJoint", "LHalfLapJoint.ToString", "LHalfLapJoint.add_extensions", "LHalfLapJoint.add_features", "LHalfLapJoint.check_elements_compatability", "LHalfLapJoint.copy", "LHalfLapJoint.create", "LHalfLapJoint.element_count_complies", "LHalfLapJoint.from_json", "LHalfLapJoint.from_jsonstring", "LHalfLapJoint.get_cross_cutting_frame", "LHalfLapJoint.get_face_most_ortho_to_beam", "LHalfLapJoint.get_face_most_towards_beam", "LHalfLapJoint.get_main_cutting_frame", "LHalfLapJoint.restore_beams_from_keys", "LHalfLapJoint.sha256", "LHalfLapJoint.to_json", "LHalfLapJoint.to_jsonstring", "LHalfLapJoint.validate_data", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_extensions", "LMiterJoint.add_features", "LMiterJoint.check_elements_compatability", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.element_count_complies", "LMiterJoint.from_json", "LMiterJoint.from_jsonstring", "LMiterJoint.get_cutting_planes", "LMiterJoint.get_face_most_ortho_to_beam", "LMiterJoint.get_face_most_towards_beam", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_json", "LMiterJoint.to_jsonstring", "LMiterJoint.validate_data", "LapJoint", "LapJoint.ToString", "LapJoint.add_extensions", "LapJoint.add_features", "LapJoint.check_elements_compatability", "LapJoint.copy", "LapJoint.create", "LapJoint.element_count_complies", "LapJoint.from_json", "LapJoint.from_jsonstring", "LapJoint.get_cross_cutting_frame", "LapJoint.get_face_most_ortho_to_beam", "LapJoint.get_face_most_towards_beam", "LapJoint.get_main_cutting_frame", "LapJoint.restore_beams_from_keys", "LapJoint.sha256", "LapJoint.to_json", "LapJoint.to_jsonstring", "LapJoint.validate_data", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_extensions", "TButtJoint.add_features", "TButtJoint.check_elements_compatability", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.element_count_complies", "TButtJoint.from_json", "TButtJoint.from_jsonstring", "TButtJoint.get_face_most_ortho_to_beam", "TButtJoint.get_face_most_towards_beam", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.to_json", "TButtJoint.to_jsonstring", "TButtJoint.validate_data", "THalfLapJoint", "THalfLapJoint.ToString", "THalfLapJoint.add_extensions", "THalfLapJoint.add_features", "THalfLapJoint.check_elements_compatability", "THalfLapJoint.copy", "THalfLapJoint.create", "THalfLapJoint.element_count_complies", "THalfLapJoint.from_json", "THalfLapJoint.from_jsonstring", "THalfLapJoint.get_cross_cutting_frame", "THalfLapJoint.get_face_most_ortho_to_beam", "THalfLapJoint.get_face_most_towards_beam", "THalfLapJoint.get_main_cutting_frame", "THalfLapJoint.restore_beams_from_keys", "THalfLapJoint.sha256", "THalfLapJoint.to_json", "THalfLapJoint.to_jsonstring", "THalfLapJoint.validate_data", "XHalfLapJoint", "XHalfLapJoint.ToString", "XHalfLapJoint.add_extensions", "XHalfLapJoint.add_features", "XHalfLapJoint.check_elements_compatability", "XHalfLapJoint.copy", "XHalfLapJoint.create", "XHalfLapJoint.element_count_complies", "XHalfLapJoint.from_json", "XHalfLapJoint.from_jsonstring", "XHalfLapJoint.get_cross_cutting_frame", "XHalfLapJoint.get_face_most_ortho_to_beam", "XHalfLapJoint.get_face_most_towards_beam", "XHalfLapJoint.get_main_cutting_frame", "XHalfLapJoint.restore_beams_from_keys", "XHalfLapJoint.sha256", "XHalfLapJoint.to_json", "XHalfLapJoint.to_jsonstring", "XHalfLapJoint.validate_data", "find_neighboring_beams", "Beam", "Beam.ToString", "Beam.add_blank_extension", "Beam.add_feature", "Beam.add_features", "Beam.compute_aabb", "Beam.compute_collision_mesh", "Beam.compute_geometry", "Beam.compute_obb", "Beam.compute_worldtransformation", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_endpoints", "Beam.from_json", "Beam.from_jsonstring", "Beam.opposing_side_index", "Beam.remove_blank_extension", "Beam.remove_features", "Beam.reset", "Beam.sha256", "Beam.side_as_surface", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transformed", "Beam.validate_data", "BTLx", "BTLx.btlx_string", "BTLx.process_model", "BTLx.register_joint", "BTLxJackCut", "BTLxJackCut.create_process", "BTLxJackCut.generate_process", "BTLxProcess", "LMiterFactory", "LMiterFactory.apply_processings", "TimberModel", "TimberModel.ToString", "TimberModel.add_element", "TimberModel.add_elements", "TimberModel.add_group", "TimberModel.add_group_element", "TimberModel.add_interaction", "TimberModel.add_joint", "TimberModel.add_material", "TimberModel.assign_material", "TimberModel.compute_aabb", "TimberModel.compute_obb", "TimberModel.copy", "TimberModel.element_by_guid", "TimberModel.elements", "TimberModel.elements_connected_by", "TimberModel.from_json", "TimberModel.from_jsonstring", "TimberModel.get_elements_in_group", "TimberModel.has_element", "TimberModel.has_group", "TimberModel.has_interaction", "TimberModel.has_material", "TimberModel.interactions", "TimberModel.materials", "TimberModel.process_joinery", "TimberModel.remove_element", "TimberModel.remove_interaction", "TimberModel.remove_joint", "TimberModel.rotate", "TimberModel.rotated", "TimberModel.scale", "TimberModel.scaled", "TimberModel.set_topologies", "TimberModel.sha256", "TimberModel.to_json", "TimberModel.to_jsonstring", "TimberModel.transform", "TimberModel.transform_numpy", "TimberModel.transformed", "TimberModel.transformed_numpy", "TimberModel.translate", "TimberModel.translated", "TimberModel.validate_data", "Actor", "Actor.get_name", "BuildingPlan", "BuildingPlan.ToString", "BuildingPlan.add_step", "BuildingPlan.copy", "BuildingPlan.from_json", "BuildingPlan.from_jsonstring", "BuildingPlan.sha256", "BuildingPlan.to_json", "BuildingPlan.to_jsonstring", "BuildingPlan.validate_data", "SimpleSequenceGenerator", "Step", "Step.ToString", "Step.copy", "Step.from_json", "Step.from_jsonstring", "Step.sha256", "Step.to_json", "Step.to_jsonstring", "Step.transform", "Step.validate_data", "find_neighboring_beams", "Citing", "Examples", "Create Joint", "COMPAS Timber Documentation", "Installation", "License", "Grasshopper plugin", "BTLx Contribution Guide", "Attributes", "Beams", "Design", "Examples", "Fabrication", "Features", "Joint Rules", "Model", "Show", "Utils", "Workflow"], "titleterms": {"actor": [243, 244], "add_blank_extens": 163, "add_el": [201, 202], "add_extens": [14, 33, 51, 70, 88, 107, 124, 143], "add_featur": [15, 34, 52, 71, 89, 108, 125, 144, 164, 165], "add_group": 203, "add_group_el": 204, "add_interact": 205, "add_joint": 206, "add_materi": 207, "add_step": 247, "api": 0, "apply_process": 198, "assembli": 268, "assign_materi": 208, "attribut": 275, "bake": 284, "beam": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 276, 277, 283], "beamjoinningerror": 8, "boxmap": 284, "brep": 280, "btlx": [189, 190, 191, 192, 274, 279], "btlx_string": 190, "btlxjackcut": [193, 194, 195], "btlxprocess": 196, "buildingplan": [245, 246, 247, 248, 249, 250, 251, 252, 253, 254], "butt": 281, "categori": 281, "check": 275, "check_elements_compat": [16, 35, 53, 72, 90, 109, 126, 145], "cite": 267, "class": [1, 2, 3, 4, 5, 6], "compa": 270, "compas_timb": [1, 2, 3, 4, 5, 6], "compon": 281, "compute_aabb": [166, 209], "compute_collision_mesh": 167, "compute_geometri": 168, "compute_obb": [169, 210], "compute_worldtransform": 170, "conda": 271, "connect": 1, "connectionsolv": [9, 10, 11], "content": 270, "contribut": 274, "copi": [17, 36, 54, 73, 91, 110, 127, 146, 171, 211, 248, 258], "creat": [18, 37, 55, 74, 92, 111, 128, 147, 269], "create_process": 194, "custom": [275, 277], "decomposebeam": 276, "default": 281, "delet": 275, "depend": 270, "design": 277, "develop": 271, "dimens": 277, "direct": 281, "document": 270, "drill": 280, "element": [2, 213], "element_by_guid": 212, "element_count_compli": [19, 38, 56, 75, 93, 112, 129, 148], "elements_connected_bi": 214, "endpoint_closest_to_point": 172, "error": 283, "exampl": [268, 278], "except": 1, "extension_to_plan": 173, "fabric": [3, 279], "face": 283, "featur": [280, 283], "find_intersecting_pair": 10, "find_neighboring_beam": [160, 266], "find_topologi": 11, "findbeambyrhinoguid": 276, "french": 281, "from_centerlin": 174, "from_endpoint": 175, "from_json": [20, 39, 57, 76, 94, 113, 130, 149, 176, 215, 249, 259], "from_jsonstr": [21, 40, 58, 77, 95, 114, 131, 150, 177, 216, 250, 260], "function": 1, "generate_process": 195, "get_cross_cutting_fram": [59, 96, 132, 151], "get_cutting_plan": 78, "get_elements_in_group": 217, "get_face_most_ortho_to_beam": [22, 41, 60, 79, 97, 115, 133, 152], "get_face_most_towards_beam": [23, 42, 61, 80, 98, 116, 134, 153], "get_main_cutting_fram": [62, 99, 135, 154], "get_nam": [30, 244], "ghpython": 4, "grasshopp": 273, "guid": 274, "halflap": 281, "has_el": 218, "has_group": 219, "has_interact": 220, "has_materi": 221, "hole": 280, "index": 283, "indic": 270, "instal": 271, "interact": 222, "join": 283, "joint": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 269, 281, 283], "jointtopologi": [29, 30], "l": 281, "lap": 281, "lapjoint": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "lbuttjoint": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "lhalflapjoint": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "licens": 272, "lmiterfactori": [197, 198], "lmiterjoint": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "materi": 223, "miter": 281, "model": [5, 277, 281, 282, 283], "opposing_side_index": 178, "option": 277, "overrid": 281, "packag": 0, "plan": 6, "plugin": [7, 273], "process_joineri": 224, "process_model": 191, "refer": 0, "register_joint": 192, "remove_blank_extens": 179, "remove_el": 225, "remove_featur": 180, "remove_interact": 226, "remove_joint": 227, "reset": 181, "restore_beams_from_kei": [24, 43, 63, 81, 100, 117, 136, 155], "rhino": 7, "ridg": 281, "rotat": [228, 229], "rule": 281, "scale": [230, 231], "set_topologi": 232, "sha256": [25, 44, 64, 82, 101, 118, 137, 156, 182, 233, 251, 261], "show": 283, "side_as_surfac": 183, "simplesequencegener": 255, "stabl": 271, "standard": 275, "step": [256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "subtract": 280, "summari": 281, "surfac": [277, 281, 283], "t": 281, "tabl": [270, 281], "tbuttjoint": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121], "thalflapjoint": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "timber": [268, 270], "timbermodel": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "to_json": [26, 45, 65, 83, 102, 119, 138, 157, 184, 234, 252, 262], "to_jsonstr": [27, 46, 66, 84, 103, 120, 139, 158, 185, 235, 253, 263], "topolog": 281, "topologi": 283, "tostr": [13, 32, 50, 69, 87, 106, 123, 142, 162, 200, 246, 257], "transform": [186, 187, 236, 238, 264], "transform_numpi": 237, "transformed_numpi": 239, "translat": [240, 241], "trim": 280, "type": [281, 283], "update_beam_rol": 47, "util": 284, "validate_data": [28, 48, 67, 85, 104, 121, 140, 159, 188, 242, 254, 265], "workflow": 285, "write": 279, "x": 281, "xhalflapjoint": [141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159]}})