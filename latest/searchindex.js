Search.setIndex({"alltitles": {"API Reference": [[0, null]], "Actor": [[258, null]], "Actor.get_name": [[259, null]], "Attributes": [[290, null]], "BTLx": [[198, null]], "BTLx Contribution Guide": [[289, null]], "BTLx.btlx_string": [[199, null]], "BTLx.process_model": [[200, null]], "BTLx.register_joint": [[201, null]], "BTLxFrenchRidgeLap": [[202, null]], "BTLxFrenchRidgeLap.create_process": [[203, null]], "BTLxFrenchRidgeLap.get_params": [[204, null]], "BTLxFrenchRidgeLap.process_joints": [[205, null]], "BTLxJackCut": [[206, null]], "BTLxJackCut.create_process": [[207, null]], "BTLxJackCut.generate_process": [[208, null]], "BTLxProcess": [[209, null]], "Bake with BoxMap": [[299, "bake-with-boxmap"]], "Beam": [[170, null]], "Beam.ToString": [[171, null]], "Beam.add_blank_extension": [[172, null]], "Beam.add_feature": [[173, null]], "Beam.add_features": [[174, null]], "Beam.compute_aabb": [[175, null]], "Beam.compute_collision_mesh": [[176, null]], "Beam.compute_geometry": [[177, null]], "Beam.compute_obb": [[178, null]], "Beam.compute_worldtransformation": [[179, null]], "Beam.copy": [[180, null]], "Beam.endpoint_closest_to_point": [[181, null]], "Beam.extension_to_plane": [[182, null]], "Beam.from_centerline": [[183, null]], "Beam.from_endpoints": [[184, null]], "Beam.from_json": [[185, null]], "Beam.from_jsonstring": [[186, null]], "Beam.opposing_side_index": [[187, null]], "Beam.remove_blank_extension": [[188, null]], "Beam.remove_features": [[189, null]], "Beam.reset": [[190, null]], "Beam.sha256": [[191, null]], "Beam.side_as_surface": [[192, null]], "Beam.to_json": [[193, null]], "Beam.to_jsonstring": [[194, null]], "Beam.transform": [[195, null]], "Beam.transformed": [[196, null]], "Beam.validate_data": [[197, null]], "BeamJoinningError": [[8, null]], "Beams": [[291, null]], "Brep Drill Hole Feature": [[295, "brep-drill-hole-feature"]], "Brep Subtraction Feature": [[295, "brep-subtraction-feature"]], "BuildingPlan": [[260, null]], "BuildingPlan.ToString": [[261, null]], "BuildingPlan.add_step": [[262, null]], "BuildingPlan.copy": [[263, null]], "BuildingPlan.from_json": [[264, null]], "BuildingPlan.from_jsonstring": [[265, null]], "BuildingPlan.sha256": [[266, null]], "BuildingPlan.to_json": [[267, null]], "BuildingPlan.to_jsonstring": [[268, null]], "BuildingPlan.validate_data": [[269, null]], "COMPAS Timber Documentation": [[285, null]], "Category Joint Rules": [[296, "category-joint-rules"]], "Check Attributes": [[290, "check-attributes"]], "Citing": [[282, null]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"]], "ConnectionSolver": [[9, null]], "ConnectionSolver.find_intersecting_pairs": [[10, null]], "ConnectionSolver.find_topology": [[11, null]], "Create Joint": [[284, null]], "Custom Attributes": [[290, "custom-attributes"]], "Custom Beam Dimensions": [[292, "custom-beam-dimensions"]], "DecomposeBeam": [[291, "decomposebeam"]], "Default Joint Rules": [[296, "default-joint-rules"]], "Delete Attributes": [[290, "delete-attributes"]], "Dependencies": [[285, "dependencies"]], "Design": [[292, null]], "Development": [[286, "development"]], "Direct Joint Rules": [[296, "direct-joint-rules"]], "Examples": [[283, null], [293, null]], "Exceptions": [[1, "exceptions"]], "Fabrication": [[294, null]], "Features": [[295, null]], "FindBeamByRhinoGuid": [[291, "findbeambyrhinoguid"]], "French Ridge Lap": [[296, "french-ridge-lap"]], "FrenchRidgeFactory": [[210, null]], "FrenchRidgeFactory.apply_processings": [[211, null]], "FrenchRidgeLapJoint": [[12, null]], "FrenchRidgeLapJoint.ToString": [[13, null]], "FrenchRidgeLapJoint.add_extensions": [[14, null]], "FrenchRidgeLapJoint.add_features": [[15, null]], "FrenchRidgeLapJoint.check_geometry": [[16, null]], "FrenchRidgeLapJoint.copy": [[17, null]], "FrenchRidgeLapJoint.create": [[18, null]], "FrenchRidgeLapJoint.element_count_complies": [[19, null]], "FrenchRidgeLapJoint.from_json": [[20, null]], "FrenchRidgeLapJoint.from_jsonstring": [[21, null]], "FrenchRidgeLapJoint.get_face_most_ortho_to_beam": [[22, null]], "FrenchRidgeLapJoint.get_face_most_towards_beam": [[23, null]], "FrenchRidgeLapJoint.restore_beams_from_keys": [[24, null]], "FrenchRidgeLapJoint.sha256": [[25, null]], "FrenchRidgeLapJoint.to_json": [[26, null]], "FrenchRidgeLapJoint.to_jsonstring": [[27, null]], "FrenchRidgeLapJoint.validate_data": [[28, null]], "Functions": [[1, "functions"]], "Grasshopper plugin": [[288, null]], "Indices and tables": [[285, "indices-and-tables"]], "Install with conda": [[286, "install-with-conda"]], "Installation": [[286, null]], "Joint": [[29, null]], "Joint Rules": [[296, null]], "Joint Rules Components": [[296, "joint-rules-components"]], "Joint Types": [[296, "joint-types"]], "Joint.ToString": [[30, null]], "Joint.add_extensions": [[31, null]], "Joint.add_features": [[32, null]], "Joint.copy": [[33, null]], "Joint.create": [[34, null]], "Joint.element_count_complies": [[35, null]], "Joint.from_json": [[36, null]], "Joint.from_jsonstring": [[37, null]], "Joint.get_face_most_ortho_to_beam": [[38, null]], "Joint.get_face_most_towards_beam": [[39, null]], "Joint.restore_beams_from_keys": [[40, null]], "Joint.sha256": [[41, null]], "Joint.to_json": [[42, null]], "Joint.to_jsonstring": [[43, null]], "Joint.validate_data": [[44, null]], "JointTopology": [[45, null]], "JointTopology.get_name": [[46, null]], "L-Butt": [[296, "l-butt"]], "L-HalfLap": [[296, "l-halflap"]], "L-Miter": [[296, "l-miter"]], "LButtJoint": [[47, null]], "LButtJoint.ToString": [[48, null]], "LButtJoint.add_extensions": [[49, null]], "LButtJoint.add_features": [[50, null]], "LButtJoint.copy": [[51, null]], "LButtJoint.create": [[52, null]], "LButtJoint.element_count_complies": [[53, null]], "LButtJoint.from_json": [[54, null]], "LButtJoint.from_jsonstring": [[55, null]], "LButtJoint.get_face_most_ortho_to_beam": [[56, null]], "LButtJoint.get_face_most_towards_beam": [[57, null]], "LButtJoint.restore_beams_from_keys": [[58, null]], "LButtJoint.sha256": [[59, null]], "LButtJoint.to_json": [[60, null]], "LButtJoint.to_jsonstring": [[61, null]], "LButtJoint.update_beam_roles": [[62, null]], "LButtJoint.validate_data": [[63, null]], "LHalfLapJoint": [[64, null]], "LHalfLapJoint.ToString": [[65, null]], "LHalfLapJoint.add_extensions": [[66, null]], "LHalfLapJoint.add_features": [[67, null]], "LHalfLapJoint.copy": [[68, null]], "LHalfLapJoint.create": [[69, null]], "LHalfLapJoint.element_count_complies": [[70, null]], "LHalfLapJoint.from_json": [[71, null]], "LHalfLapJoint.from_jsonstring": [[72, null]], "LHalfLapJoint.get_cross_cutting_frame": [[73, null]], "LHalfLapJoint.get_face_most_ortho_to_beam": [[74, null]], "LHalfLapJoint.get_face_most_towards_beam": [[75, null]], "LHalfLapJoint.get_main_cutting_frame": [[76, null]], "LHalfLapJoint.restore_beams_from_keys": [[77, null]], "LHalfLapJoint.sha256": [[78, null]], "LHalfLapJoint.to_json": [[79, null]], "LHalfLapJoint.to_jsonstring": [[80, null]], "LHalfLapJoint.validate_data": [[81, null]], "LMiterFactory": [[212, null]], "LMiterFactory.apply_processings": [[213, null]], "LMiterJoint": [[82, null]], "LMiterJoint.ToString": [[83, null]], "LMiterJoint.add_extensions": [[84, null]], "LMiterJoint.add_features": [[85, null]], "LMiterJoint.copy": [[86, null]], "LMiterJoint.create": [[87, null]], "LMiterJoint.element_count_complies": [[88, null]], "LMiterJoint.from_json": [[89, null]], "LMiterJoint.from_jsonstring": [[90, null]], "LMiterJoint.get_cutting_planes": [[91, null]], "LMiterJoint.get_face_most_ortho_to_beam": [[92, null]], "LMiterJoint.get_face_most_towards_beam": [[93, null]], "LMiterJoint.restore_beams_from_keys": [[94, null]], "LMiterJoint.sha256": [[95, null]], "LMiterJoint.to_json": [[96, null]], "LMiterJoint.to_jsonstring": [[97, null]], "LMiterJoint.validate_data": [[98, null]], "LapJoint": [[99, null]], "LapJoint.ToString": [[100, null]], "LapJoint.add_extensions": [[101, null]], "LapJoint.add_features": [[102, null]], "LapJoint.copy": [[103, null]], "LapJoint.create": [[104, null]], "LapJoint.element_count_complies": [[105, null]], "LapJoint.from_json": [[106, null]], "LapJoint.from_jsonstring": [[107, null]], "LapJoint.get_cross_cutting_frame": [[108, null]], "LapJoint.get_face_most_ortho_to_beam": [[109, null]], "LapJoint.get_face_most_towards_beam": [[110, null]], "LapJoint.get_main_cutting_frame": [[111, null]], "LapJoint.restore_beams_from_keys": [[112, null]], "LapJoint.sha256": [[113, null]], "LapJoint.to_json": [[114, null]], "LapJoint.to_jsonstring": [[115, null]], "LapJoint.validate_data": [[116, null]], "License": [[287, null]], "Model": [[297, null]], "Packages": [[0, "packages"]], "Plugins": [[7, "plugins"]], "Show": [[298, null]], "Show Beam Face Index": [[298, "show-beam-face-index"]], "Show Beam Index": [[298, "show-beam-index"]], "Show Feature Errors": [[298, "show-feature-errors"]], "Show Joining Errors": [[298, "show-joining-errors"]], "Show Joint Types": [[298, "show-joint-types"]], "Show Surface Model Beam Types": [[298, "show-surface-model-beam-types"]], "Show Topology Types": [[298, "show-topology-types"]], "SimpleSequenceGenerator": [[270, null]], "Stable": [[286, "stable"]], "Standard Attributes": [[290, "standard-attributes"]], "Step": [[271, null]], "Step.ToString": [[272, null]], "Step.copy": [[273, null]], "Step.from_json": [[274, null]], "Step.from_jsonstring": [[275, null]], "Step.sha256": [[276, null]], "Step.to_json": [[277, null]], "Step.to_jsonstring": [[278, null]], "Step.transform": [[279, null]], "Step.validate_data": [[280, null]], "Summary Table": [[296, "summary-table"]], "Surface Model": [[292, "surface-model"]], "Surface Model Joint Override": [[296, "surface-model-joint-override"]], "Surface Model Options": [[292, "surface-model-options"]], "T-Butt": [[296, "t-butt"]], "T-HalfLap": [[296, "t-halflap"]], "TButtJoint": [[117, null]], "TButtJoint.ToString": [[118, null]], "TButtJoint.add_extensions": [[119, null]], "TButtJoint.add_features": [[120, null]], "TButtJoint.copy": [[121, null]], "TButtJoint.create": [[122, null]], "TButtJoint.element_count_complies": [[123, null]], "TButtJoint.from_json": [[124, null]], "TButtJoint.from_jsonstring": [[125, null]], "TButtJoint.get_face_most_ortho_to_beam": [[126, null]], "TButtJoint.get_face_most_towards_beam": [[127, null]], "TButtJoint.restore_beams_from_keys": [[128, null]], "TButtJoint.sha256": [[129, null]], "TButtJoint.to_json": [[130, null]], "TButtJoint.to_jsonstring": [[131, null]], "TButtJoint.validate_data": [[132, null]], "THalfLapJoint": [[133, null]], "THalfLapJoint.ToString": [[134, null]], "THalfLapJoint.add_extensions": [[135, null]], "THalfLapJoint.add_features": [[136, null]], "THalfLapJoint.copy": [[137, null]], "THalfLapJoint.create": [[138, null]], "THalfLapJoint.element_count_complies": [[139, null]], "THalfLapJoint.from_json": [[140, null]], "THalfLapJoint.from_jsonstring": [[141, null]], "THalfLapJoint.get_cross_cutting_frame": [[142, null]], "THalfLapJoint.get_face_most_ortho_to_beam": [[143, null]], "THalfLapJoint.get_face_most_towards_beam": [[144, null]], "THalfLapJoint.get_main_cutting_frame": [[145, null]], "THalfLapJoint.restore_beams_from_keys": [[146, null]], "THalfLapJoint.sha256": [[147, null]], "THalfLapJoint.to_json": [[148, null]], "THalfLapJoint.to_jsonstring": [[149, null]], "THalfLapJoint.validate_data": [[150, null]], "Table of Contents": [[285, "table-of-contents"]], "Timber Assembly Examples": [[283, "timber-assembly-examples"]], "TimberModel": [[214, null]], "TimberModel.ToString": [[215, null]], "TimberModel.add_element": [[216, null]], "TimberModel.add_elements": [[217, null]], "TimberModel.add_group": [[218, null]], "TimberModel.add_group_element": [[219, null]], "TimberModel.add_interaction": [[220, null]], "TimberModel.add_joint": [[221, null]], "TimberModel.add_material": [[222, null]], "TimberModel.assign_material": [[223, null]], "TimberModel.compute_aabb": [[224, null]], "TimberModel.compute_obb": [[225, null]], "TimberModel.copy": [[226, null]], "TimberModel.element_by_guid": [[227, null]], "TimberModel.elements": [[228, null]], "TimberModel.elements_connected_by": [[229, null]], "TimberModel.from_json": [[230, null]], "TimberModel.from_jsonstring": [[231, null]], "TimberModel.get_elements_in_group": [[232, null]], "TimberModel.has_element": [[233, null]], "TimberModel.has_group": [[234, null]], "TimberModel.has_interaction": [[235, null]], "TimberModel.has_material": [[236, null]], "TimberModel.interactions": [[237, null]], "TimberModel.materials": [[238, null]], "TimberModel.process_joinery": [[239, null]], "TimberModel.remove_element": [[240, null]], "TimberModel.remove_interaction": [[241, null]], "TimberModel.remove_joint": [[242, null]], "TimberModel.rotate": [[243, null]], "TimberModel.rotated": [[244, null]], "TimberModel.scale": [[245, null]], "TimberModel.scaled": [[246, null]], "TimberModel.set_topologies": [[247, null]], "TimberModel.sha256": [[248, null]], "TimberModel.to_json": [[249, null]], "TimberModel.to_jsonstring": [[250, null]], "TimberModel.transform": [[251, null]], "TimberModel.transform_numpy": [[252, null]], "TimberModel.transformed": [[253, null]], "TimberModel.transformed_numpy": [[254, null]], "TimberModel.translate": [[255, null]], "TimberModel.translated": [[256, null]], "TimberModel.validate_data": [[257, null]], "Topological Joint Rules": [[296, "topological-joint-rules"]], "Trim Feature": [[295, "trim-feature"]], "Utils": [[299, null]], "Workflow": [[300, null]], "Write BTLx": [[294, "write-btlx"]], "X-HalfLap": [[296, "x-halflap"]], "XHalfLapJoint": [[151, null]], "XHalfLapJoint.ToString": [[152, null]], "XHalfLapJoint.add_extensions": [[153, null]], "XHalfLapJoint.add_features": [[154, null]], "XHalfLapJoint.copy": [[155, null]], "XHalfLapJoint.create": [[156, null]], "XHalfLapJoint.element_count_complies": [[157, null]], "XHalfLapJoint.from_json": [[158, null]], "XHalfLapJoint.from_jsonstring": [[159, null]], "XHalfLapJoint.get_cross_cutting_frame": [[160, null]], "XHalfLapJoint.get_face_most_ortho_to_beam": [[161, null]], "XHalfLapJoint.get_face_most_towards_beam": [[162, null]], "XHalfLapJoint.get_main_cutting_frame": [[163, null]], "XHalfLapJoint.restore_beams_from_keys": [[164, null]], "XHalfLapJoint.sha256": [[165, null]], "XHalfLapJoint.to_json": [[166, null]], "XHalfLapJoint.to_jsonstring": [[167, null]], "XHalfLapJoint.validate_data": [[168, null]], "compas_timber.connections": [[1, null]], "compas_timber.elements": [[2, null]], "compas_timber.fabrication": [[3, null]], "compas_timber.ghpython": [[4, null]], "compas_timber.model": [[5, null]], "compas_timber.planning": [[6, null]], "find_neighboring_beams": [[169, null], [281, null]], "rhino": [[7, null]]}, "docnames": ["api", "api/compas_timber.connections", "api/compas_timber.elements", "api/compas_timber.fabrication", "api/compas_timber.ghpython", "api/compas_timber.model", "api/compas_timber.planning", "api/compas_timber.rhino", "api/generated/compas_timber.connections.BeamJoinningError", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.FrenchRidgeLapJoint", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.ToString", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_extensions", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_features", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.check_geometry", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.copy", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.create", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.element_count_complies", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_json", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.sha256", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_json", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.validate_data", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_extensions", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.element_count_complies", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.from_jsonstring", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.to_jsonstring", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_extensions", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.element_count_complies", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring", "api/generated/compas_timber.connections.LButtJoint.update_beam_roles", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LHalfLapJoint", "api/generated/compas_timber.connections.LHalfLapJoint.ToString", "api/generated/compas_timber.connections.LHalfLapJoint.add_extensions", "api/generated/compas_timber.connections.LHalfLapJoint.add_features", "api/generated/compas_timber.connections.LHalfLapJoint.copy", "api/generated/compas_timber.connections.LHalfLapJoint.create", "api/generated/compas_timber.connections.LHalfLapJoint.element_count_complies", "api/generated/compas_timber.connections.LHalfLapJoint.from_json", "api/generated/compas_timber.connections.LHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LHalfLapJoint.sha256", "api/generated/compas_timber.connections.LHalfLapJoint.to_json", "api/generated/compas_timber.connections.LHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_extensions", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.element_count_complies", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.LapJoint", "api/generated/compas_timber.connections.LapJoint.ToString", "api/generated/compas_timber.connections.LapJoint.add_extensions", "api/generated/compas_timber.connections.LapJoint.add_features", "api/generated/compas_timber.connections.LapJoint.copy", "api/generated/compas_timber.connections.LapJoint.create", "api/generated/compas_timber.connections.LapJoint.element_count_complies", "api/generated/compas_timber.connections.LapJoint.from_json", "api/generated/compas_timber.connections.LapJoint.from_jsonstring", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LapJoint.sha256", "api/generated/compas_timber.connections.LapJoint.to_json", "api/generated/compas_timber.connections.LapJoint.to_jsonstring", "api/generated/compas_timber.connections.LapJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_extensions", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.element_count_complies", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.THalfLapJoint", "api/generated/compas_timber.connections.THalfLapJoint.ToString", "api/generated/compas_timber.connections.THalfLapJoint.add_extensions", "api/generated/compas_timber.connections.THalfLapJoint.add_features", "api/generated/compas_timber.connections.THalfLapJoint.copy", "api/generated/compas_timber.connections.THalfLapJoint.create", "api/generated/compas_timber.connections.THalfLapJoint.element_count_complies", "api/generated/compas_timber.connections.THalfLapJoint.from_json", "api/generated/compas_timber.connections.THalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.THalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.THalfLapJoint.sha256", "api/generated/compas_timber.connections.THalfLapJoint.to_json", "api/generated/compas_timber.connections.THalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.validate_data", "api/generated/compas_timber.connections.XHalfLapJoint", "api/generated/compas_timber.connections.XHalfLapJoint.ToString", "api/generated/compas_timber.connections.XHalfLapJoint.add_extensions", "api/generated/compas_timber.connections.XHalfLapJoint.add_features", "api/generated/compas_timber.connections.XHalfLapJoint.copy", "api/generated/compas_timber.connections.XHalfLapJoint.create", "api/generated/compas_timber.connections.XHalfLapJoint.element_count_complies", "api/generated/compas_timber.connections.XHalfLapJoint.from_json", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.XHalfLapJoint.sha256", "api/generated/compas_timber.connections.XHalfLapJoint.to_json", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data", "api/generated/compas_timber.connections.find_neighboring_beams", "api/generated/compas_timber.elements.Beam", "api/generated/compas_timber.elements.Beam.ToString", "api/generated/compas_timber.elements.Beam.add_blank_extension", "api/generated/compas_timber.elements.Beam.add_feature", "api/generated/compas_timber.elements.Beam.add_features", "api/generated/compas_timber.elements.Beam.compute_aabb", "api/generated/compas_timber.elements.Beam.compute_collision_mesh", "api/generated/compas_timber.elements.Beam.compute_geometry", "api/generated/compas_timber.elements.Beam.compute_obb", "api/generated/compas_timber.elements.Beam.compute_worldtransformation", "api/generated/compas_timber.elements.Beam.copy", "api/generated/compas_timber.elements.Beam.endpoint_closest_to_point", "api/generated/compas_timber.elements.Beam.extension_to_plane", "api/generated/compas_timber.elements.Beam.from_centerline", "api/generated/compas_timber.elements.Beam.from_endpoints", "api/generated/compas_timber.elements.Beam.from_json", "api/generated/compas_timber.elements.Beam.from_jsonstring", "api/generated/compas_timber.elements.Beam.opposing_side_index", "api/generated/compas_timber.elements.Beam.remove_blank_extension", "api/generated/compas_timber.elements.Beam.remove_features", "api/generated/compas_timber.elements.Beam.reset", "api/generated/compas_timber.elements.Beam.sha256", "api/generated/compas_timber.elements.Beam.side_as_surface", "api/generated/compas_timber.elements.Beam.to_json", "api/generated/compas_timber.elements.Beam.to_jsonstring", "api/generated/compas_timber.elements.Beam.transform", "api/generated/compas_timber.elements.Beam.transformed", "api/generated/compas_timber.elements.Beam.validate_data", "api/generated/compas_timber.fabrication.BTLx", "api/generated/compas_timber.fabrication.BTLx.btlx_string", "api/generated/compas_timber.fabrication.BTLx.process_model", "api/generated/compas_timber.fabrication.BTLx.register_joint", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints", "api/generated/compas_timber.fabrication.BTLxJackCut", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process", "api/generated/compas_timber.fabrication.BTLxProcess", "api/generated/compas_timber.fabrication.FrenchRidgeFactory", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings", "api/generated/compas_timber.fabrication.LMiterFactory", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings", "api/generated/compas_timber.model.TimberModel", "api/generated/compas_timber.model.TimberModel.ToString", "api/generated/compas_timber.model.TimberModel.add_element", "api/generated/compas_timber.model.TimberModel.add_elements", "api/generated/compas_timber.model.TimberModel.add_group", "api/generated/compas_timber.model.TimberModel.add_group_element", "api/generated/compas_timber.model.TimberModel.add_interaction", "api/generated/compas_timber.model.TimberModel.add_joint", "api/generated/compas_timber.model.TimberModel.add_material", "api/generated/compas_timber.model.TimberModel.assign_material", "api/generated/compas_timber.model.TimberModel.compute_aabb", "api/generated/compas_timber.model.TimberModel.compute_obb", "api/generated/compas_timber.model.TimberModel.copy", "api/generated/compas_timber.model.TimberModel.element_by_guid", "api/generated/compas_timber.model.TimberModel.elements", "api/generated/compas_timber.model.TimberModel.elements_connected_by", "api/generated/compas_timber.model.TimberModel.from_json", "api/generated/compas_timber.model.TimberModel.from_jsonstring", "api/generated/compas_timber.model.TimberModel.get_elements_in_group", "api/generated/compas_timber.model.TimberModel.has_element", "api/generated/compas_timber.model.TimberModel.has_group", "api/generated/compas_timber.model.TimberModel.has_interaction", "api/generated/compas_timber.model.TimberModel.has_material", "api/generated/compas_timber.model.TimberModel.interactions", "api/generated/compas_timber.model.TimberModel.materials", "api/generated/compas_timber.model.TimberModel.process_joinery", "api/generated/compas_timber.model.TimberModel.remove_element", "api/generated/compas_timber.model.TimberModel.remove_interaction", "api/generated/compas_timber.model.TimberModel.remove_joint", "api/generated/compas_timber.model.TimberModel.rotate", "api/generated/compas_timber.model.TimberModel.rotated", "api/generated/compas_timber.model.TimberModel.scale", "api/generated/compas_timber.model.TimberModel.scaled", "api/generated/compas_timber.model.TimberModel.set_topologies", "api/generated/compas_timber.model.TimberModel.sha256", "api/generated/compas_timber.model.TimberModel.to_json", "api/generated/compas_timber.model.TimberModel.to_jsonstring", "api/generated/compas_timber.model.TimberModel.transform", "api/generated/compas_timber.model.TimberModel.transform_numpy", "api/generated/compas_timber.model.TimberModel.transformed", "api/generated/compas_timber.model.TimberModel.transformed_numpy", "api/generated/compas_timber.model.TimberModel.translate", "api/generated/compas_timber.model.TimberModel.translated", "api/generated/compas_timber.model.TimberModel.validate_data", "api/generated/compas_timber.planning.Actor", "api/generated/compas_timber.planning.Actor.get_name", "api/generated/compas_timber.planning.BuildingPlan", "api/generated/compas_timber.planning.BuildingPlan.ToString", "api/generated/compas_timber.planning.BuildingPlan.add_step", "api/generated/compas_timber.planning.BuildingPlan.copy", "api/generated/compas_timber.planning.BuildingPlan.from_json", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.sha256", "api/generated/compas_timber.planning.BuildingPlan.to_json", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.validate_data", "api/generated/compas_timber.planning.SimpleSequenceGenerator", "api/generated/compas_timber.planning.Step", "api/generated/compas_timber.planning.Step.ToString", "api/generated/compas_timber.planning.Step.copy", "api/generated/compas_timber.planning.Step.from_json", "api/generated/compas_timber.planning.Step.from_jsonstring", "api/generated/compas_timber.planning.Step.sha256", "api/generated/compas_timber.planning.Step.to_json", "api/generated/compas_timber.planning.Step.to_jsonstring", "api/generated/compas_timber.planning.Step.transform", "api/generated/compas_timber.planning.Step.validate_data", "api/generated/compas_timber.rhino.find_neighboring_beams", "citing", "examples", "examples/create_joint", "index", "installation", "license", "tutorials", "tutorials/BTLx_contribution_guide", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beams", "tutorials/grasshopper/design", "tutorials/grasshopper/examples", "tutorials/grasshopper/fabrication", "tutorials/grasshopper/features", "tutorials/grasshopper/joint_rules", "tutorials/grasshopper/model", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api.rst", "api/compas_timber.connections.rst", "api/compas_timber.elements.rst", "api/compas_timber.fabrication.rst", "api/compas_timber.ghpython.rst", "api/compas_timber.model.rst", "api/compas_timber.planning.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.connections.BeamJoinningError.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.ToString.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_features.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.check_geometry.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.copy.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.create.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_json.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.sha256.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_json.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.validate_data.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_extensions.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.element_count_complies.rst", "api/generated/compas_timber.connections.Joint.from_json.rst", "api/generated/compas_timber.connections.Joint.from_jsonstring.rst", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_json.rst", "api/generated/compas_timber.connections.Joint.to_jsonstring.rst", "api/generated/compas_timber.connections.Joint.validate_data.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_extensions.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LButtJoint.from_json.rst", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.to_json.rst", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.update_beam_roles.rst", "api/generated/compas_timber.connections.LButtJoint.validate_data.rst", "api/generated/compas_timber.connections.LHalfLapJoint.rst", "api/generated/compas_timber.connections.LHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.LHalfLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.LHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.LHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.LHalfLapJoint.create.rst", "api/generated/compas_timber.connections.LHalfLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.LHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.LHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.LHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_extensions.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LMiterJoint.from_json.rst", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_json.rst", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_data.rst", "api/generated/compas_timber.connections.LapJoint.rst", "api/generated/compas_timber.connections.LapJoint.ToString.rst", "api/generated/compas_timber.connections.LapJoint.add_extensions.rst", "api/generated/compas_timber.connections.LapJoint.add_features.rst", "api/generated/compas_timber.connections.LapJoint.copy.rst", "api/generated/compas_timber.connections.LapJoint.create.rst", "api/generated/compas_timber.connections.LapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LapJoint.from_json.rst", "api/generated/compas_timber.connections.LapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LapJoint.sha256.rst", "api/generated/compas_timber.connections.LapJoint.to_json.rst", "api/generated/compas_timber.connections.LapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.validate_data.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_extensions.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TButtJoint.from_json.rst", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.to_json.rst", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.validate_data.rst", "api/generated/compas_timber.connections.THalfLapJoint.rst", "api/generated/compas_timber.connections.THalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.THalfLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.THalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.THalfLapJoint.copy.rst", "api/generated/compas_timber.connections.THalfLapJoint.create.rst", "api/generated/compas_timber.connections.THalfLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.THalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.THalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.THalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.THalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.THalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.THalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.THalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.rst", "api/generated/compas_timber.connections.XHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.XHalfLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.XHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.XHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.XHalfLapJoint.create.rst", "api/generated/compas_timber.connections.XHalfLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.XHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.find_neighboring_beams.rst", "api/generated/compas_timber.elements.Beam.rst", "api/generated/compas_timber.elements.Beam.ToString.rst", "api/generated/compas_timber.elements.Beam.add_blank_extension.rst", "api/generated/compas_timber.elements.Beam.add_feature.rst", "api/generated/compas_timber.elements.Beam.add_features.rst", "api/generated/compas_timber.elements.Beam.compute_aabb.rst", "api/generated/compas_timber.elements.Beam.compute_collision_mesh.rst", "api/generated/compas_timber.elements.Beam.compute_geometry.rst", "api/generated/compas_timber.elements.Beam.compute_obb.rst", "api/generated/compas_timber.elements.Beam.compute_worldtransformation.rst", "api/generated/compas_timber.elements.Beam.copy.rst", "api/generated/compas_timber.elements.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.elements.Beam.extension_to_plane.rst", "api/generated/compas_timber.elements.Beam.from_centerline.rst", "api/generated/compas_timber.elements.Beam.from_endpoints.rst", "api/generated/compas_timber.elements.Beam.from_json.rst", "api/generated/compas_timber.elements.Beam.from_jsonstring.rst", "api/generated/compas_timber.elements.Beam.opposing_side_index.rst", "api/generated/compas_timber.elements.Beam.remove_blank_extension.rst", "api/generated/compas_timber.elements.Beam.remove_features.rst", "api/generated/compas_timber.elements.Beam.reset.rst", "api/generated/compas_timber.elements.Beam.sha256.rst", "api/generated/compas_timber.elements.Beam.side_as_surface.rst", "api/generated/compas_timber.elements.Beam.to_json.rst", "api/generated/compas_timber.elements.Beam.to_jsonstring.rst", "api/generated/compas_timber.elements.Beam.transform.rst", "api/generated/compas_timber.elements.Beam.transformed.rst", "api/generated/compas_timber.elements.Beam.validate_data.rst", "api/generated/compas_timber.fabrication.BTLx.rst", "api/generated/compas_timber.fabrication.BTLx.btlx_string.rst", "api/generated/compas_timber.fabrication.BTLx.process_model.rst", "api/generated/compas_timber.fabrication.BTLx.register_joint.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process.rst", "api/generated/compas_timber.fabrication.BTLxProcess.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LMiterFactory.rst", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings.rst", "api/generated/compas_timber.model.TimberModel.rst", "api/generated/compas_timber.model.TimberModel.ToString.rst", "api/generated/compas_timber.model.TimberModel.add_element.rst", "api/generated/compas_timber.model.TimberModel.add_elements.rst", "api/generated/compas_timber.model.TimberModel.add_group.rst", "api/generated/compas_timber.model.TimberModel.add_group_element.rst", "api/generated/compas_timber.model.TimberModel.add_interaction.rst", "api/generated/compas_timber.model.TimberModel.add_joint.rst", "api/generated/compas_timber.model.TimberModel.add_material.rst", "api/generated/compas_timber.model.TimberModel.assign_material.rst", "api/generated/compas_timber.model.TimberModel.compute_aabb.rst", "api/generated/compas_timber.model.TimberModel.compute_obb.rst", "api/generated/compas_timber.model.TimberModel.copy.rst", "api/generated/compas_timber.model.TimberModel.element_by_guid.rst", "api/generated/compas_timber.model.TimberModel.elements.rst", "api/generated/compas_timber.model.TimberModel.elements_connected_by.rst", "api/generated/compas_timber.model.TimberModel.from_json.rst", "api/generated/compas_timber.model.TimberModel.from_jsonstring.rst", "api/generated/compas_timber.model.TimberModel.get_elements_in_group.rst", "api/generated/compas_timber.model.TimberModel.has_element.rst", "api/generated/compas_timber.model.TimberModel.has_group.rst", "api/generated/compas_timber.model.TimberModel.has_interaction.rst", "api/generated/compas_timber.model.TimberModel.has_material.rst", "api/generated/compas_timber.model.TimberModel.interactions.rst", "api/generated/compas_timber.model.TimberModel.materials.rst", "api/generated/compas_timber.model.TimberModel.process_joinery.rst", "api/generated/compas_timber.model.TimberModel.remove_element.rst", "api/generated/compas_timber.model.TimberModel.remove_interaction.rst", "api/generated/compas_timber.model.TimberModel.remove_joint.rst", "api/generated/compas_timber.model.TimberModel.rotate.rst", "api/generated/compas_timber.model.TimberModel.rotated.rst", "api/generated/compas_timber.model.TimberModel.scale.rst", "api/generated/compas_timber.model.TimberModel.scaled.rst", "api/generated/compas_timber.model.TimberModel.set_topologies.rst", "api/generated/compas_timber.model.TimberModel.sha256.rst", "api/generated/compas_timber.model.TimberModel.to_json.rst", "api/generated/compas_timber.model.TimberModel.to_jsonstring.rst", "api/generated/compas_timber.model.TimberModel.transform.rst", "api/generated/compas_timber.model.TimberModel.transform_numpy.rst", "api/generated/compas_timber.model.TimberModel.transformed.rst", "api/generated/compas_timber.model.TimberModel.transformed_numpy.rst", "api/generated/compas_timber.model.TimberModel.translate.rst", "api/generated/compas_timber.model.TimberModel.translated.rst", "api/generated/compas_timber.model.TimberModel.validate_data.rst", "api/generated/compas_timber.planning.Actor.rst", "api/generated/compas_timber.planning.Actor.get_name.rst", "api/generated/compas_timber.planning.BuildingPlan.rst", "api/generated/compas_timber.planning.BuildingPlan.ToString.rst", "api/generated/compas_timber.planning.BuildingPlan.add_step.rst", "api/generated/compas_timber.planning.BuildingPlan.copy.rst", "api/generated/compas_timber.planning.BuildingPlan.from_json.rst", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.sha256.rst", "api/generated/compas_timber.planning.BuildingPlan.to_json.rst", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.validate_data.rst", "api/generated/compas_timber.planning.SimpleSequenceGenerator.rst", "api/generated/compas_timber.planning.Step.rst", "api/generated/compas_timber.planning.Step.ToString.rst", "api/generated/compas_timber.planning.Step.copy.rst", "api/generated/compas_timber.planning.Step.from_json.rst", "api/generated/compas_timber.planning.Step.from_jsonstring.rst", "api/generated/compas_timber.planning.Step.sha256.rst", "api/generated/compas_timber.planning.Step.to_json.rst", "api/generated/compas_timber.planning.Step.to_jsonstring.rst", "api/generated/compas_timber.planning.Step.transform.rst", "api/generated/compas_timber.planning.Step.validate_data.rst", "api/generated/compas_timber.rhino.find_neighboring_beams.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "license.rst", "tutorials.rst", "tutorials/BTLx_contribution_guide.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beams.rst", "tutorials/grasshopper/design.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/fabrication.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joint_rules.rst", "tutorials/grasshopper/model.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "indexentries": {"actor (class in compas_timber.planning)": [[258, "compas_timber.planning.Actor", false]], "add_blank_extension() (compas_timber.elements.beam method)": [[172, "compas_timber.elements.Beam.add_blank_extension", false]], "add_element() (compas_timber.model.timbermodel method)": [[216, "compas_timber.model.TimberModel.add_element", false]], "add_elements() (compas_timber.model.timbermodel method)": [[217, "compas_timber.model.TimberModel.add_elements", false]], "add_extensions() (compas_timber.connections.frenchridgelapjoint method)": [[14, "compas_timber.connections.FrenchRidgeLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.joint method)": [[31, "compas_timber.connections.Joint.add_extensions", false]], "add_extensions() (compas_timber.connections.lapjoint method)": [[101, "compas_timber.connections.LapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lbuttjoint method)": [[49, "compas_timber.connections.LButtJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lhalflapjoint method)": [[66, "compas_timber.connections.LHalfLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lmiterjoint method)": [[84, "compas_timber.connections.LMiterJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tbuttjoint method)": [[119, "compas_timber.connections.TButtJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.thalflapjoint method)": [[135, "compas_timber.connections.THalfLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.xhalflapjoint method)": [[153, "compas_timber.connections.XHalfLapJoint.add_extensions", false]], "add_feature() (compas_timber.elements.beam method)": [[173, "compas_timber.elements.Beam.add_feature", false]], "add_features() (compas_timber.connections.frenchridgelapjoint method)": [[15, "compas_timber.connections.FrenchRidgeLapJoint.add_features", false]], "add_features() (compas_timber.connections.joint method)": [[32, "compas_timber.connections.Joint.add_features", false]], "add_features() (compas_timber.connections.lapjoint method)": [[102, "compas_timber.connections.LapJoint.add_features", false]], "add_features() (compas_timber.connections.lbuttjoint method)": [[50, "compas_timber.connections.LButtJoint.add_features", false]], "add_features() (compas_timber.connections.lhalflapjoint method)": [[67, "compas_timber.connections.LHalfLapJoint.add_features", false]], "add_features() (compas_timber.connections.lmiterjoint method)": [[85, "compas_timber.connections.LMiterJoint.add_features", false]], "add_features() (compas_timber.connections.tbuttjoint method)": [[120, "compas_timber.connections.TButtJoint.add_features", false]], "add_features() (compas_timber.connections.thalflapjoint method)": [[136, "compas_timber.connections.THalfLapJoint.add_features", false]], "add_features() (compas_timber.connections.xhalflapjoint method)": [[154, "compas_timber.connections.XHalfLapJoint.add_features", false]], "add_features() (compas_timber.elements.beam method)": [[174, "compas_timber.elements.Beam.add_features", false]], "add_group() (compas_timber.model.timbermodel method)": [[218, "compas_timber.model.TimberModel.add_group", false]], "add_group_element() (compas_timber.model.timbermodel method)": [[219, "compas_timber.model.TimberModel.add_group_element", false]], "add_interaction() (compas_timber.model.timbermodel method)": [[220, "compas_timber.model.TimberModel.add_interaction", false]], "add_joint() (compas_timber.model.timbermodel method)": [[221, "compas_timber.model.TimberModel.add_joint", false]], "add_material() (compas_timber.model.timbermodel method)": [[222, "compas_timber.model.TimberModel.add_material", false]], "add_step() (compas_timber.planning.buildingplan method)": [[262, "compas_timber.planning.BuildingPlan.add_step", false]], "apply_processings() (compas_timber.fabrication.frenchridgefactory class method)": [[211, "compas_timber.fabrication.FrenchRidgeFactory.apply_processings", false]], "apply_processings() (compas_timber.fabrication.lmiterfactory class method)": [[213, "compas_timber.fabrication.LMiterFactory.apply_processings", false]], "assign_material() (compas_timber.model.timbermodel method)": [[223, "compas_timber.model.TimberModel.assign_material", false]], "beam (class in compas_timber.elements)": [[170, "compas_timber.elements.Beam", false]], "beamjoinningerror": [[8, "compas_timber.connections.BeamJoinningError", false]], "btlx (class in compas_timber.fabrication)": [[198, "compas_timber.fabrication.BTLx", false]], "btlx_string() (compas_timber.fabrication.btlx method)": [[199, "compas_timber.fabrication.BTLx.btlx_string", false]], "btlxfrenchridgelap (class in compas_timber.fabrication)": [[202, "compas_timber.fabrication.BTLxFrenchRidgeLap", false]], "btlxjackcut (class in compas_timber.fabrication)": [[206, "compas_timber.fabrication.BTLxJackCut", false]], "btlxprocess (class in compas_timber.fabrication)": [[209, "compas_timber.fabrication.BTLxProcess", false]], "buildingplan (class in compas_timber.planning)": [[260, "compas_timber.planning.BuildingPlan", false]], "check_geometry() (compas_timber.connections.frenchridgelapjoint method)": [[16, "compas_timber.connections.FrenchRidgeLapJoint.check_geometry", false]], "compute_aabb() (compas_timber.elements.beam method)": [[175, "compas_timber.elements.Beam.compute_aabb", false]], "compute_aabb() (compas_timber.model.timbermodel method)": [[224, "compas_timber.model.TimberModel.compute_aabb", false]], "compute_collision_mesh() (compas_timber.elements.beam method)": [[176, "compas_timber.elements.Beam.compute_collision_mesh", false]], "compute_geometry() (compas_timber.elements.beam method)": [[177, "compas_timber.elements.Beam.compute_geometry", false]], "compute_obb() (compas_timber.elements.beam method)": [[178, "compas_timber.elements.Beam.compute_obb", false]], "compute_obb() (compas_timber.model.timbermodel method)": [[225, "compas_timber.model.TimberModel.compute_obb", false]], "compute_worldtransformation() (compas_timber.elements.beam method)": [[179, "compas_timber.elements.Beam.compute_worldtransformation", false]], "connectionsolver (class in compas_timber.connections)": [[9, "compas_timber.connections.ConnectionSolver", false]], "copy() (compas_timber.connections.frenchridgelapjoint method)": [[17, "compas_timber.connections.FrenchRidgeLapJoint.copy", false]], "copy() (compas_timber.connections.joint method)": [[33, "compas_timber.connections.Joint.copy", false]], "copy() (compas_timber.connections.lapjoint method)": [[103, "compas_timber.connections.LapJoint.copy", false]], "copy() (compas_timber.connections.lbuttjoint method)": [[51, "compas_timber.connections.LButtJoint.copy", false]], "copy() (compas_timber.connections.lhalflapjoint method)": [[68, "compas_timber.connections.LHalfLapJoint.copy", false]], "copy() (compas_timber.connections.lmiterjoint method)": [[86, "compas_timber.connections.LMiterJoint.copy", false]], "copy() (compas_timber.connections.tbuttjoint method)": [[121, "compas_timber.connections.TButtJoint.copy", false]], "copy() (compas_timber.connections.thalflapjoint method)": [[137, "compas_timber.connections.THalfLapJoint.copy", false]], "copy() (compas_timber.connections.xhalflapjoint method)": [[155, "compas_timber.connections.XHalfLapJoint.copy", false]], "copy() (compas_timber.elements.beam method)": [[180, "compas_timber.elements.Beam.copy", false]], "copy() (compas_timber.model.timbermodel method)": [[226, "compas_timber.model.TimberModel.copy", false]], "copy() (compas_timber.planning.buildingplan method)": [[263, "compas_timber.planning.BuildingPlan.copy", false]], "copy() (compas_timber.planning.step method)": [[273, "compas_timber.planning.Step.copy", false]], "create() (compas_timber.connections.frenchridgelapjoint class method)": [[18, "compas_timber.connections.FrenchRidgeLapJoint.create", false]], "create() (compas_timber.connections.joint class method)": [[34, "compas_timber.connections.Joint.create", false]], "create() (compas_timber.connections.lapjoint class method)": [[104, "compas_timber.connections.LapJoint.create", false]], "create() (compas_timber.connections.lbuttjoint class method)": [[52, "compas_timber.connections.LButtJoint.create", false]], "create() (compas_timber.connections.lhalflapjoint class method)": [[69, "compas_timber.connections.LHalfLapJoint.create", false]], "create() (compas_timber.connections.lmiterjoint class method)": [[87, "compas_timber.connections.LMiterJoint.create", false]], "create() (compas_timber.connections.tbuttjoint class method)": [[122, "compas_timber.connections.TButtJoint.create", false]], "create() (compas_timber.connections.thalflapjoint class method)": [[138, "compas_timber.connections.THalfLapJoint.create", false]], "create() (compas_timber.connections.xhalflapjoint class method)": [[156, "compas_timber.connections.XHalfLapJoint.create", false]], "create_process() (compas_timber.fabrication.btlxfrenchridgelap class method)": [[203, "compas_timber.fabrication.BTLxFrenchRidgeLap.create_process", false]], "create_process() (compas_timber.fabrication.btlxjackcut class method)": [[207, "compas_timber.fabrication.BTLxJackCut.create_process", false]], "element_by_guid() (compas_timber.model.timbermodel method)": [[227, "compas_timber.model.TimberModel.element_by_guid", false]], "element_count_complies() (compas_timber.connections.frenchridgelapjoint class method)": [[19, "compas_timber.connections.FrenchRidgeLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.joint class method)": [[35, "compas_timber.connections.Joint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lapjoint class method)": [[105, "compas_timber.connections.LapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lbuttjoint class method)": [[53, "compas_timber.connections.LButtJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lhalflapjoint class method)": [[70, "compas_timber.connections.LHalfLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lmiterjoint class method)": [[88, "compas_timber.connections.LMiterJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tbuttjoint class method)": [[123, "compas_timber.connections.TButtJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.thalflapjoint class method)": [[139, "compas_timber.connections.THalfLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.xhalflapjoint class method)": [[157, "compas_timber.connections.XHalfLapJoint.element_count_complies", false]], "elements() (compas_timber.model.timbermodel method)": [[228, "compas_timber.model.TimberModel.elements", false]], "elements_connected_by() (compas_timber.model.timbermodel method)": [[229, "compas_timber.model.TimberModel.elements_connected_by", false]], "endpoint_closest_to_point() (compas_timber.elements.beam method)": [[181, "compas_timber.elements.Beam.endpoint_closest_to_point", false]], "extension_to_plane() (compas_timber.elements.beam method)": [[182, "compas_timber.elements.Beam.extension_to_plane", false]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[10, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs", false]], "find_neighboring_beams() (in module compas_timber.connections)": [[169, "compas_timber.connections.find_neighboring_beams", false]], "find_neighboring_beams() (in module compas_timber.rhino)": [[281, "compas_timber.rhino.find_neighboring_beams", false]], "find_topology() (compas_timber.connections.connectionsolver method)": [[11, "compas_timber.connections.ConnectionSolver.find_topology", false]], "frenchridgefactory (class in compas_timber.fabrication)": [[210, "compas_timber.fabrication.FrenchRidgeFactory", false]], "frenchridgelapjoint (class in compas_timber.connections)": [[12, "compas_timber.connections.FrenchRidgeLapJoint", false]], "from_centerline() (compas_timber.elements.beam class method)": [[183, "compas_timber.elements.Beam.from_centerline", false]], "from_endpoints() (compas_timber.elements.beam class method)": [[184, "compas_timber.elements.Beam.from_endpoints", false]], "from_json() (compas_timber.connections.frenchridgelapjoint class method)": [[20, "compas_timber.connections.FrenchRidgeLapJoint.from_json", false]], "from_json() (compas_timber.connections.joint class method)": [[36, "compas_timber.connections.Joint.from_json", false]], "from_json() (compas_timber.connections.lapjoint class method)": [[106, "compas_timber.connections.LapJoint.from_json", false]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[54, "compas_timber.connections.LButtJoint.from_json", false]], "from_json() (compas_timber.connections.lhalflapjoint class method)": [[71, "compas_timber.connections.LHalfLapJoint.from_json", false]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[89, "compas_timber.connections.LMiterJoint.from_json", false]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[124, "compas_timber.connections.TButtJoint.from_json", false]], "from_json() (compas_timber.connections.thalflapjoint class method)": [[140, "compas_timber.connections.THalfLapJoint.from_json", false]], "from_json() (compas_timber.connections.xhalflapjoint class method)": [[158, "compas_timber.connections.XHalfLapJoint.from_json", false]], "from_json() (compas_timber.elements.beam class method)": [[185, "compas_timber.elements.Beam.from_json", false]], "from_json() (compas_timber.model.timbermodel class method)": [[230, "compas_timber.model.TimberModel.from_json", false]], "from_json() (compas_timber.planning.buildingplan class method)": [[264, "compas_timber.planning.BuildingPlan.from_json", false]], "from_json() (compas_timber.planning.step class method)": [[274, "compas_timber.planning.Step.from_json", false]], "from_jsonstring() (compas_timber.connections.frenchridgelapjoint class method)": [[21, "compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.joint class method)": [[37, "compas_timber.connections.Joint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lapjoint class method)": [[107, "compas_timber.connections.LapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[55, "compas_timber.connections.LButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lhalflapjoint class method)": [[72, "compas_timber.connections.LHalfLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[90, "compas_timber.connections.LMiterJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[125, "compas_timber.connections.TButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.thalflapjoint class method)": [[141, "compas_timber.connections.THalfLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.xhalflapjoint class method)": [[159, "compas_timber.connections.XHalfLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.beam class method)": [[186, "compas_timber.elements.Beam.from_jsonstring", false]], "from_jsonstring() (compas_timber.model.timbermodel class method)": [[231, "compas_timber.model.TimberModel.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.buildingplan class method)": [[265, "compas_timber.planning.BuildingPlan.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.step class method)": [[275, "compas_timber.planning.Step.from_jsonstring", false]], "generate_process() (compas_timber.fabrication.btlxjackcut method)": [[208, "compas_timber.fabrication.BTLxJackCut.generate_process", false]], "get_cross_cutting_frame() (compas_timber.connections.lapjoint method)": [[108, "compas_timber.connections.LapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[73, "compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[142, "compas_timber.connections.THalfLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[160, "compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame", false]], "get_cutting_planes() (compas_timber.connections.lmiterjoint method)": [[91, "compas_timber.connections.LMiterJoint.get_cutting_planes", false]], "get_elements_in_group() (compas_timber.model.timbermodel method)": [[232, "compas_timber.model.TimberModel.get_elements_in_group", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.frenchridgelapjoint static method)": [[22, "compas_timber.connections.FrenchRidgeLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.joint static method)": [[38, "compas_timber.connections.Joint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lapjoint static method)": [[109, "compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lbuttjoint static method)": [[56, "compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lhalflapjoint static method)": [[74, "compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lmiterjoint static method)": [[92, "compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tbuttjoint static method)": [[126, "compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.thalflapjoint static method)": [[143, "compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.xhalflapjoint static method)": [[161, "compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.frenchridgelapjoint static method)": [[23, "compas_timber.connections.FrenchRidgeLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.joint static method)": [[39, "compas_timber.connections.Joint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lapjoint static method)": [[110, "compas_timber.connections.LapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lbuttjoint static method)": [[57, "compas_timber.connections.LButtJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lhalflapjoint static method)": [[75, "compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lmiterjoint static method)": [[93, "compas_timber.connections.LMiterJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tbuttjoint static method)": [[127, "compas_timber.connections.TButtJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.thalflapjoint static method)": [[144, "compas_timber.connections.THalfLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.xhalflapjoint static method)": [[162, "compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam", false]], "get_main_cutting_frame() (compas_timber.connections.lapjoint method)": [[111, "compas_timber.connections.LapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[76, "compas_timber.connections.LHalfLapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[145, "compas_timber.connections.THalfLapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[163, "compas_timber.connections.XHalfLapJoint.get_main_cutting_frame", false]], "get_name() (compas_timber.connections.jointtopology class method)": [[46, "compas_timber.connections.JointTopology.get_name", false]], "get_name() (compas_timber.planning.actor class method)": [[259, "compas_timber.planning.Actor.get_name", false]], "get_params() (compas_timber.fabrication.btlxfrenchridgelap method)": [[204, "compas_timber.fabrication.BTLxFrenchRidgeLap.get_params", false]], "has_element() (compas_timber.model.timbermodel method)": [[233, "compas_timber.model.TimberModel.has_element", false]], "has_group() (compas_timber.model.timbermodel method)": [[234, "compas_timber.model.TimberModel.has_group", false]], "has_interaction() (compas_timber.model.timbermodel method)": [[235, "compas_timber.model.TimberModel.has_interaction", false]], "has_material() (compas_timber.model.timbermodel method)": [[236, "compas_timber.model.TimberModel.has_material", false]], "interactions() (compas_timber.model.timbermodel method)": [[237, "compas_timber.model.TimberModel.interactions", false]], "joint (class in compas_timber.connections)": [[29, "compas_timber.connections.Joint", false]], "jointtopology (class in compas_timber.connections)": [[45, "compas_timber.connections.JointTopology", false]], "lapjoint (class in compas_timber.connections)": [[99, "compas_timber.connections.LapJoint", false]], "lbuttjoint (class in compas_timber.connections)": [[47, "compas_timber.connections.LButtJoint", false]], "lhalflapjoint (class in compas_timber.connections)": [[64, "compas_timber.connections.LHalfLapJoint", false]], "lmiterfactory (class in compas_timber.fabrication)": [[212, "compas_timber.fabrication.LMiterFactory", false]], "lmiterjoint (class in compas_timber.connections)": [[82, "compas_timber.connections.LMiterJoint", false]], "materials() (compas_timber.model.timbermodel method)": [[238, "compas_timber.model.TimberModel.materials", false]], "opposing_side_index() (compas_timber.elements.beam method)": [[187, "compas_timber.elements.Beam.opposing_side_index", false]], "process_joinery() (compas_timber.model.timbermodel method)": [[239, "compas_timber.model.TimberModel.process_joinery", false]], "process_joints() (compas_timber.fabrication.btlxfrenchridgelap method)": [[205, "compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints", false]], "process_model() (compas_timber.fabrication.btlx method)": [[200, "compas_timber.fabrication.BTLx.process_model", false]], "register_joint() (compas_timber.fabrication.btlx class method)": [[201, "compas_timber.fabrication.BTLx.register_joint", false]], "remove_blank_extension() (compas_timber.elements.beam method)": [[188, "compas_timber.elements.Beam.remove_blank_extension", false]], "remove_element() (compas_timber.model.timbermodel method)": [[240, "compas_timber.model.TimberModel.remove_element", false]], "remove_features() (compas_timber.elements.beam method)": [[189, "compas_timber.elements.Beam.remove_features", false]], "remove_interaction() (compas_timber.model.timbermodel method)": [[241, "compas_timber.model.TimberModel.remove_interaction", false]], "remove_joint() (compas_timber.model.timbermodel method)": [[242, "compas_timber.model.TimberModel.remove_joint", false]], "reset() (compas_timber.elements.beam method)": [[190, "compas_timber.elements.Beam.reset", false]], "restore_beams_from_keys() (compas_timber.connections.frenchridgelapjoint method)": [[24, "compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[40, "compas_timber.connections.Joint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lapjoint method)": [[112, "compas_timber.connections.LapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[58, "compas_timber.connections.LButtJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lhalflapjoint method)": [[77, "compas_timber.connections.LHalfLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[94, "compas_timber.connections.LMiterJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[128, "compas_timber.connections.TButtJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.thalflapjoint method)": [[146, "compas_timber.connections.THalfLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.xhalflapjoint method)": [[164, "compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", false]], "rotate() (compas_timber.model.timbermodel method)": [[243, "compas_timber.model.TimberModel.rotate", false]], "rotated() (compas_timber.model.timbermodel method)": [[244, "compas_timber.model.TimberModel.rotated", false]], "scale() (compas_timber.model.timbermodel method)": [[245, "compas_timber.model.TimberModel.scale", false]], "scaled() (compas_timber.model.timbermodel method)": [[246, "compas_timber.model.TimberModel.scaled", false]], "set_topologies() (compas_timber.model.timbermodel method)": [[247, "compas_timber.model.TimberModel.set_topologies", false]], "sha256() (compas_timber.connections.frenchridgelapjoint method)": [[25, "compas_timber.connections.FrenchRidgeLapJoint.sha256", false]], "sha256() (compas_timber.connections.joint method)": [[41, "compas_timber.connections.Joint.sha256", false]], "sha256() (compas_timber.connections.lapjoint method)": [[113, "compas_timber.connections.LapJoint.sha256", false]], "sha256() (compas_timber.connections.lbuttjoint method)": [[59, "compas_timber.connections.LButtJoint.sha256", false]], "sha256() (compas_timber.connections.lhalflapjoint method)": [[78, "compas_timber.connections.LHalfLapJoint.sha256", false]], "sha256() (compas_timber.connections.lmiterjoint method)": [[95, "compas_timber.connections.LMiterJoint.sha256", false]], "sha256() (compas_timber.connections.tbuttjoint method)": [[129, "compas_timber.connections.TButtJoint.sha256", false]], "sha256() (compas_timber.connections.thalflapjoint method)": [[147, "compas_timber.connections.THalfLapJoint.sha256", false]], "sha256() (compas_timber.connections.xhalflapjoint method)": [[165, "compas_timber.connections.XHalfLapJoint.sha256", false]], "sha256() (compas_timber.elements.beam method)": [[191, "compas_timber.elements.Beam.sha256", false]], "sha256() (compas_timber.model.timbermodel method)": [[248, "compas_timber.model.TimberModel.sha256", false]], "sha256() (compas_timber.planning.buildingplan method)": [[266, "compas_timber.planning.BuildingPlan.sha256", false]], "sha256() (compas_timber.planning.step method)": [[276, "compas_timber.planning.Step.sha256", false]], "side_as_surface() (compas_timber.elements.beam method)": [[192, "compas_timber.elements.Beam.side_as_surface", false]], "simplesequencegenerator (class in compas_timber.planning)": [[270, "compas_timber.planning.SimpleSequenceGenerator", false]], "step (class in compas_timber.planning)": [[271, "compas_timber.planning.Step", false]], "tbuttjoint (class in compas_timber.connections)": [[117, "compas_timber.connections.TButtJoint", false]], "thalflapjoint (class in compas_timber.connections)": [[133, "compas_timber.connections.THalfLapJoint", false]], "timbermodel (class in compas_timber.model)": [[214, "compas_timber.model.TimberModel", false]], "to_json() (compas_timber.connections.frenchridgelapjoint method)": [[26, "compas_timber.connections.FrenchRidgeLapJoint.to_json", false]], "to_json() (compas_timber.connections.joint method)": [[42, "compas_timber.connections.Joint.to_json", false]], "to_json() (compas_timber.connections.lapjoint method)": [[114, "compas_timber.connections.LapJoint.to_json", false]], "to_json() (compas_timber.connections.lbuttjoint method)": [[60, "compas_timber.connections.LButtJoint.to_json", false]], "to_json() (compas_timber.connections.lhalflapjoint method)": [[79, "compas_timber.connections.LHalfLapJoint.to_json", false]], "to_json() (compas_timber.connections.lmiterjoint method)": [[96, "compas_timber.connections.LMiterJoint.to_json", false]], "to_json() (compas_timber.connections.tbuttjoint method)": [[130, "compas_timber.connections.TButtJoint.to_json", false]], "to_json() (compas_timber.connections.thalflapjoint method)": [[148, "compas_timber.connections.THalfLapJoint.to_json", false]], "to_json() (compas_timber.connections.xhalflapjoint method)": [[166, "compas_timber.connections.XHalfLapJoint.to_json", false]], "to_json() (compas_timber.elements.beam method)": [[193, "compas_timber.elements.Beam.to_json", false]], "to_json() (compas_timber.model.timbermodel method)": [[249, "compas_timber.model.TimberModel.to_json", false]], "to_json() (compas_timber.planning.buildingplan method)": [[267, "compas_timber.planning.BuildingPlan.to_json", false]], "to_json() (compas_timber.planning.step method)": [[277, "compas_timber.planning.Step.to_json", false]], "to_jsonstring() (compas_timber.connections.frenchridgelapjoint method)": [[27, "compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.joint method)": [[43, "compas_timber.connections.Joint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lapjoint method)": [[115, "compas_timber.connections.LapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lbuttjoint method)": [[61, "compas_timber.connections.LButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lhalflapjoint method)": [[80, "compas_timber.connections.LHalfLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lmiterjoint method)": [[97, "compas_timber.connections.LMiterJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tbuttjoint method)": [[131, "compas_timber.connections.TButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.thalflapjoint method)": [[149, "compas_timber.connections.THalfLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.xhalflapjoint method)": [[167, "compas_timber.connections.XHalfLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.beam method)": [[194, "compas_timber.elements.Beam.to_jsonstring", false]], "to_jsonstring() (compas_timber.model.timbermodel method)": [[250, "compas_timber.model.TimberModel.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.buildingplan method)": [[268, "compas_timber.planning.BuildingPlan.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.step method)": [[278, "compas_timber.planning.Step.to_jsonstring", false]], "tostring() (compas_timber.connections.frenchridgelapjoint method)": [[13, "compas_timber.connections.FrenchRidgeLapJoint.ToString", false]], "tostring() (compas_timber.connections.joint method)": [[30, "compas_timber.connections.Joint.ToString", false]], "tostring() (compas_timber.connections.lapjoint method)": [[100, "compas_timber.connections.LapJoint.ToString", false]], "tostring() (compas_timber.connections.lbuttjoint method)": [[48, "compas_timber.connections.LButtJoint.ToString", false]], "tostring() (compas_timber.connections.lhalflapjoint method)": [[65, "compas_timber.connections.LHalfLapJoint.ToString", false]], "tostring() (compas_timber.connections.lmiterjoint method)": [[83, "compas_timber.connections.LMiterJoint.ToString", false]], "tostring() (compas_timber.connections.tbuttjoint method)": [[118, "compas_timber.connections.TButtJoint.ToString", false]], "tostring() (compas_timber.connections.thalflapjoint method)": [[134, "compas_timber.connections.THalfLapJoint.ToString", false]], "tostring() (compas_timber.connections.xhalflapjoint method)": [[152, "compas_timber.connections.XHalfLapJoint.ToString", false]], "tostring() (compas_timber.elements.beam method)": [[171, "compas_timber.elements.Beam.ToString", false]], "tostring() (compas_timber.model.timbermodel method)": [[215, "compas_timber.model.TimberModel.ToString", false]], "tostring() (compas_timber.planning.buildingplan method)": [[261, "compas_timber.planning.BuildingPlan.ToString", false]], "tostring() (compas_timber.planning.step method)": [[272, "compas_timber.planning.Step.ToString", false]], "transform() (compas_timber.elements.beam method)": [[195, "compas_timber.elements.Beam.transform", false]], "transform() (compas_timber.model.timbermodel method)": [[251, "compas_timber.model.TimberModel.transform", false]], "transform() (compas_timber.planning.step method)": [[279, "compas_timber.planning.Step.transform", false]], "transform_numpy() (compas_timber.model.timbermodel method)": [[252, "compas_timber.model.TimberModel.transform_numpy", false]], "transformed() (compas_timber.elements.beam method)": [[196, "compas_timber.elements.Beam.transformed", false]], "transformed() (compas_timber.model.timbermodel method)": [[253, "compas_timber.model.TimberModel.transformed", false]], "transformed_numpy() (compas_timber.model.timbermodel method)": [[254, "compas_timber.model.TimberModel.transformed_numpy", false]], "translate() (compas_timber.model.timbermodel method)": [[255, "compas_timber.model.TimberModel.translate", false]], "translated() (compas_timber.model.timbermodel method)": [[256, "compas_timber.model.TimberModel.translated", false]], "update_beam_roles() (compas_timber.connections.lbuttjoint method)": [[62, "compas_timber.connections.LButtJoint.update_beam_roles", false]], "validate_data() (compas_timber.connections.frenchridgelapjoint class method)": [[28, "compas_timber.connections.FrenchRidgeLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.joint class method)": [[44, "compas_timber.connections.Joint.validate_data", false]], "validate_data() (compas_timber.connections.lapjoint class method)": [[116, "compas_timber.connections.LapJoint.validate_data", false]], "validate_data() (compas_timber.connections.lbuttjoint class method)": [[63, "compas_timber.connections.LButtJoint.validate_data", false]], "validate_data() (compas_timber.connections.lhalflapjoint class method)": [[81, "compas_timber.connections.LHalfLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.lmiterjoint class method)": [[98, "compas_timber.connections.LMiterJoint.validate_data", false]], "validate_data() (compas_timber.connections.tbuttjoint class method)": [[132, "compas_timber.connections.TButtJoint.validate_data", false]], "validate_data() (compas_timber.connections.thalflapjoint class method)": [[150, "compas_timber.connections.THalfLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.xhalflapjoint class method)": [[168, "compas_timber.connections.XHalfLapJoint.validate_data", false]], "validate_data() (compas_timber.elements.beam class method)": [[197, "compas_timber.elements.Beam.validate_data", false]], "validate_data() (compas_timber.model.timbermodel class method)": [[257, "compas_timber.model.TimberModel.validate_data", false]], "validate_data() (compas_timber.planning.buildingplan class method)": [[269, "compas_timber.planning.BuildingPlan.validate_data", false]], "validate_data() (compas_timber.planning.step class method)": [[280, "compas_timber.planning.Step.validate_data", false]], "xhalflapjoint (class in compas_timber.connections)": [[151, "compas_timber.connections.XHalfLapJoint", false]]}, "objects": {"compas_timber.connections": [[8, 0, 1, "", "BeamJoinningError"], [9, 1, 1, "", "ConnectionSolver"], [12, 1, 1, "", "FrenchRidgeLapJoint"], [29, 1, 1, "", "Joint"], [45, 1, 1, "", "JointTopology"], [47, 1, 1, "", "LButtJoint"], [64, 1, 1, "", "LHalfLapJoint"], [82, 1, 1, "", "LMiterJoint"], [99, 1, 1, "", "LapJoint"], [117, 1, 1, "", "TButtJoint"], [133, 1, 1, "", "THalfLapJoint"], [151, 1, 1, "", "XHalfLapJoint"], [169, 3, 1, "", "find_neighboring_beams"]], "compas_timber.connections.ConnectionSolver": [[10, 2, 1, "", "find_intersecting_pairs"], [11, 2, 1, "", "find_topology"]], "compas_timber.connections.FrenchRidgeLapJoint": [[13, 2, 1, "", "ToString"], [14, 2, 1, "", "add_extensions"], [15, 2, 1, "", "add_features"], [16, 2, 1, "", "check_geometry"], [17, 2, 1, "", "copy"], [18, 2, 1, "", "create"], [19, 2, 1, "", "element_count_complies"], [20, 2, 1, "", "from_json"], [21, 2, 1, "", "from_jsonstring"], [22, 2, 1, "", "get_face_most_ortho_to_beam"], [23, 2, 1, "", "get_face_most_towards_beam"], [24, 2, 1, "", "restore_beams_from_keys"], [25, 2, 1, "", "sha256"], [26, 2, 1, "", "to_json"], [27, 2, 1, "", "to_jsonstring"], [28, 2, 1, "", "validate_data"]], "compas_timber.connections.Joint": [[30, 2, 1, "", "ToString"], [31, 2, 1, "", "add_extensions"], [32, 2, 1, "", "add_features"], [33, 2, 1, "", "copy"], [34, 2, 1, "", "create"], [35, 2, 1, "", "element_count_complies"], [36, 2, 1, "", "from_json"], [37, 2, 1, "", "from_jsonstring"], [38, 2, 1, "", "get_face_most_ortho_to_beam"], [39, 2, 1, "", "get_face_most_towards_beam"], [40, 2, 1, "", "restore_beams_from_keys"], [41, 2, 1, "", "sha256"], [42, 2, 1, "", "to_json"], [43, 2, 1, "", "to_jsonstring"], [44, 2, 1, "", "validate_data"]], "compas_timber.connections.JointTopology": [[46, 2, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[48, 2, 1, "", "ToString"], [49, 2, 1, "", "add_extensions"], [50, 2, 1, "", "add_features"], [51, 2, 1, "", "copy"], [52, 2, 1, "", "create"], [53, 2, 1, "", "element_count_complies"], [54, 2, 1, "", "from_json"], [55, 2, 1, "", "from_jsonstring"], [56, 2, 1, "", "get_face_most_ortho_to_beam"], [57, 2, 1, "", "get_face_most_towards_beam"], [58, 2, 1, "", "restore_beams_from_keys"], [59, 2, 1, "", "sha256"], [60, 2, 1, "", "to_json"], [61, 2, 1, "", "to_jsonstring"], [62, 2, 1, "", "update_beam_roles"], [63, 2, 1, "", "validate_data"]], "compas_timber.connections.LHalfLapJoint": [[65, 2, 1, "", "ToString"], [66, 2, 1, "", "add_extensions"], [67, 2, 1, "", "add_features"], [68, 2, 1, "", "copy"], [69, 2, 1, "", "create"], [70, 2, 1, "", "element_count_complies"], [71, 2, 1, "", "from_json"], [72, 2, 1, "", "from_jsonstring"], [73, 2, 1, "", "get_cross_cutting_frame"], [74, 2, 1, "", "get_face_most_ortho_to_beam"], [75, 2, 1, "", "get_face_most_towards_beam"], [76, 2, 1, "", "get_main_cutting_frame"], [77, 2, 1, "", "restore_beams_from_keys"], [78, 2, 1, "", "sha256"], [79, 2, 1, "", "to_json"], [80, 2, 1, "", "to_jsonstring"], [81, 2, 1, "", "validate_data"]], "compas_timber.connections.LMiterJoint": [[83, 2, 1, "", "ToString"], [84, 2, 1, "", "add_extensions"], [85, 2, 1, "", "add_features"], [86, 2, 1, "", "copy"], [87, 2, 1, "", "create"], [88, 2, 1, "", "element_count_complies"], [89, 2, 1, "", "from_json"], [90, 2, 1, "", "from_jsonstring"], [91, 2, 1, "", "get_cutting_planes"], [92, 2, 1, "", "get_face_most_ortho_to_beam"], [93, 2, 1, "", "get_face_most_towards_beam"], [94, 2, 1, "", "restore_beams_from_keys"], [95, 2, 1, "", "sha256"], [96, 2, 1, "", "to_json"], [97, 2, 1, "", "to_jsonstring"], [98, 2, 1, "", "validate_data"]], "compas_timber.connections.LapJoint": [[100, 2, 1, "", "ToString"], [101, 2, 1, "", "add_extensions"], [102, 2, 1, "", "add_features"], [103, 2, 1, "", "copy"], [104, 2, 1, "", "create"], [105, 2, 1, "", "element_count_complies"], [106, 2, 1, "", "from_json"], [107, 2, 1, "", "from_jsonstring"], [108, 2, 1, "", "get_cross_cutting_frame"], [109, 2, 1, "", "get_face_most_ortho_to_beam"], [110, 2, 1, "", "get_face_most_towards_beam"], [111, 2, 1, "", "get_main_cutting_frame"], [112, 2, 1, "", "restore_beams_from_keys"], [113, 2, 1, "", "sha256"], [114, 2, 1, "", "to_json"], [115, 2, 1, "", "to_jsonstring"], [116, 2, 1, "", "validate_data"]], "compas_timber.connections.TButtJoint": [[118, 2, 1, "", "ToString"], [119, 2, 1, "", "add_extensions"], [120, 2, 1, "", "add_features"], [121, 2, 1, "", "copy"], [122, 2, 1, "", "create"], [123, 2, 1, "", "element_count_complies"], [124, 2, 1, "", "from_json"], [125, 2, 1, "", "from_jsonstring"], [126, 2, 1, "", "get_face_most_ortho_to_beam"], [127, 2, 1, "", "get_face_most_towards_beam"], [128, 2, 1, "", "restore_beams_from_keys"], [129, 2, 1, "", "sha256"], [130, 2, 1, "", "to_json"], [131, 2, 1, "", "to_jsonstring"], [132, 2, 1, "", "validate_data"]], "compas_timber.connections.THalfLapJoint": [[134, 2, 1, "", "ToString"], [135, 2, 1, "", "add_extensions"], [136, 2, 1, "", "add_features"], [137, 2, 1, "", "copy"], [138, 2, 1, "", "create"], [139, 2, 1, "", "element_count_complies"], [140, 2, 1, "", "from_json"], [141, 2, 1, "", "from_jsonstring"], [142, 2, 1, "", "get_cross_cutting_frame"], [143, 2, 1, "", "get_face_most_ortho_to_beam"], [144, 2, 1, "", "get_face_most_towards_beam"], [145, 2, 1, "", "get_main_cutting_frame"], [146, 2, 1, "", "restore_beams_from_keys"], [147, 2, 1, "", "sha256"], [148, 2, 1, "", "to_json"], [149, 2, 1, "", "to_jsonstring"], [150, 2, 1, "", "validate_data"]], "compas_timber.connections.XHalfLapJoint": [[152, 2, 1, "", "ToString"], [153, 2, 1, "", "add_extensions"], [154, 2, 1, "", "add_features"], [155, 2, 1, "", "copy"], [156, 2, 1, "", "create"], [157, 2, 1, "", "element_count_complies"], [158, 2, 1, "", "from_json"], [159, 2, 1, "", "from_jsonstring"], [160, 2, 1, "", "get_cross_cutting_frame"], [161, 2, 1, "", "get_face_most_ortho_to_beam"], [162, 2, 1, "", "get_face_most_towards_beam"], [163, 2, 1, "", "get_main_cutting_frame"], [164, 2, 1, "", "restore_beams_from_keys"], [165, 2, 1, "", "sha256"], [166, 2, 1, "", "to_json"], [167, 2, 1, "", "to_jsonstring"], [168, 2, 1, "", "validate_data"]], "compas_timber.elements": [[170, 1, 1, "", "Beam"]], "compas_timber.elements.Beam": [[171, 2, 1, "", "ToString"], [172, 2, 1, "", "add_blank_extension"], [173, 2, 1, "", "add_feature"], [174, 2, 1, "", "add_features"], [175, 2, 1, "", "compute_aabb"], [176, 2, 1, "", "compute_collision_mesh"], [177, 2, 1, "", "compute_geometry"], [178, 2, 1, "", "compute_obb"], [179, 2, 1, "", "compute_worldtransformation"], [180, 2, 1, "", "copy"], [181, 2, 1, "", "endpoint_closest_to_point"], [182, 2, 1, "", "extension_to_plane"], [183, 2, 1, "", "from_centerline"], [184, 2, 1, "", "from_endpoints"], [185, 2, 1, "", "from_json"], [186, 2, 1, "", "from_jsonstring"], [187, 2, 1, "", "opposing_side_index"], [188, 2, 1, "", "remove_blank_extension"], [189, 2, 1, "", "remove_features"], [190, 2, 1, "", "reset"], [191, 2, 1, "", "sha256"], [192, 2, 1, "", "side_as_surface"], [193, 2, 1, "", "to_json"], [194, 2, 1, "", "to_jsonstring"], [195, 2, 1, "", "transform"], [196, 2, 1, "", "transformed"], [197, 2, 1, "", "validate_data"]], "compas_timber.fabrication": [[198, 1, 1, "", "BTLx"], [202, 1, 1, "", "BTLxFrenchRidgeLap"], [206, 1, 1, "", "BTLxJackCut"], [209, 1, 1, "", "BTLxProcess"], [210, 1, 1, "", "FrenchRidgeFactory"], [212, 1, 1, "", "LMiterFactory"]], "compas_timber.fabrication.BTLx": [[199, 2, 1, "", "btlx_string"], [200, 2, 1, "", "process_model"], [201, 2, 1, "", "register_joint"]], "compas_timber.fabrication.BTLxFrenchRidgeLap": [[203, 2, 1, "", "create_process"], [204, 2, 1, "", "get_params"], [205, 2, 1, "", "process_joints"]], "compas_timber.fabrication.BTLxJackCut": [[207, 2, 1, "", "create_process"], [208, 2, 1, "", "generate_process"]], "compas_timber.fabrication.FrenchRidgeFactory": [[211, 2, 1, "", "apply_processings"]], "compas_timber.fabrication.LMiterFactory": [[213, 2, 1, "", "apply_processings"]], "compas_timber.model": [[214, 1, 1, "", "TimberModel"]], "compas_timber.model.TimberModel": [[215, 2, 1, "", "ToString"], [216, 2, 1, "", "add_element"], [217, 2, 1, "", "add_elements"], [218, 2, 1, "", "add_group"], [219, 2, 1, "", "add_group_element"], [220, 2, 1, "", "add_interaction"], [221, 2, 1, "", "add_joint"], [222, 2, 1, "", "add_material"], [223, 2, 1, "", "assign_material"], [224, 2, 1, "", "compute_aabb"], [225, 2, 1, "", "compute_obb"], [226, 2, 1, "", "copy"], [227, 2, 1, "", "element_by_guid"], [228, 2, 1, "", "elements"], [229, 2, 1, "", "elements_connected_by"], [230, 2, 1, "", "from_json"], [231, 2, 1, "", "from_jsonstring"], [232, 2, 1, "", "get_elements_in_group"], [233, 2, 1, "", "has_element"], [234, 2, 1, "", "has_group"], [235, 2, 1, "", "has_interaction"], [236, 2, 1, "", "has_material"], [237, 2, 1, "", "interactions"], [238, 2, 1, "", "materials"], [239, 2, 1, "", "process_joinery"], [240, 2, 1, "", "remove_element"], [241, 2, 1, "", "remove_interaction"], [242, 2, 1, "", "remove_joint"], [243, 2, 1, "", "rotate"], [244, 2, 1, "", "rotated"], [245, 2, 1, "", "scale"], [246, 2, 1, "", "scaled"], [247, 2, 1, "", "set_topologies"], [248, 2, 1, "", "sha256"], [249, 2, 1, "", "to_json"], [250, 2, 1, "", "to_jsonstring"], [251, 2, 1, "", "transform"], [252, 2, 1, "", "transform_numpy"], [253, 2, 1, "", "transformed"], [254, 2, 1, "", "transformed_numpy"], [255, 2, 1, "", "translate"], [256, 2, 1, "", "translated"], [257, 2, 1, "", "validate_data"]], "compas_timber.planning": [[258, 1, 1, "", "Actor"], [260, 1, 1, "", "BuildingPlan"], [270, 1, 1, "", "SimpleSequenceGenerator"], [271, 1, 1, "", "Step"]], "compas_timber.planning.Actor": [[259, 2, 1, "", "get_name"]], "compas_timber.planning.BuildingPlan": [[261, 2, 1, "", "ToString"], [262, 2, 1, "", "add_step"], [263, 2, 1, "", "copy"], [264, 2, 1, "", "from_json"], [265, 2, 1, "", "from_jsonstring"], [266, 2, 1, "", "sha256"], [267, 2, 1, "", "to_json"], [268, 2, 1, "", "to_jsonstring"], [269, 2, 1, "", "validate_data"]], "compas_timber.planning.Step": [[272, 2, 1, "", "ToString"], [273, 2, 1, "", "copy"], [274, 2, 1, "", "from_json"], [275, 2, 1, "", "from_jsonstring"], [276, 2, 1, "", "sha256"], [277, 2, 1, "", "to_json"], [278, 2, 1, "", "to_jsonstring"], [279, 2, 1, "", "transform"], [280, 2, 1, "", "validate_data"]], "compas_timber.rhino": [[281, 3, 1, "", "find_neighboring_beams"]]}, "objnames": {"0": ["py", "exception", "Python exception"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:exception", "1": "py:class", "2": "py:method", "3": "py:function"}, "terms": {"": [12, 14, 15, 22, 23, 28, 31, 32, 38, 39, 44, 56, 57, 63, 64, 67, 74, 75, 81, 92, 93, 98, 101, 102, 109, 110, 116, 126, 127, 132, 136, 143, 144, 150, 153, 154, 161, 162, 168, 170, 181, 183, 184, 197, 219, 257, 269, 280, 290, 291, 299], "0": [10, 22, 25, 38, 41, 56, 59, 64, 74, 78, 92, 95, 99, 109, 113, 126, 129, 133, 143, 147, 151, 161, 165, 169, 170, 175, 178, 187, 191, 192, 248, 266, 276, 281, 284, 286, 291], "02": 287, "06": 11, "1": [23, 25, 39, 41, 57, 59, 64, 75, 78, 93, 95, 99, 110, 113, 127, 129, 133, 144, 147, 151, 162, 165, 170, 191, 248, 266, 276, 284, 289, 291, 300], "10": [282, 286], "100": 219, "17": 287, "1e": 11, "2": [170, 284, 289, 300], "200": 219, "2020": 287, "2022": 282, "2023": 282, "3": [170, 286, 289, 300], "300": 219, "3000": 219, "3d": 285, "4": [170, 284, 289], "5": [64, 99, 133, 151, 170, 187, 192], "5000": 219, "5281": 282, "6": 170, "7": 286, "7934267": 282, "A": [8, 10, 12, 18, 29, 34, 52, 64, 69, 87, 104, 122, 138, 156, 169, 170, 173, 183, 184, 198, 211, 213, 214, 216, 222, 232, 236, 282, 287, 291, 292, 296], "AND": 287, "AS": 287, "As": 282, "At": 285, "BE": 287, "BUT": 287, "By": [296, 300], "FOR": 287, "For": [46, 169, 239, 259, 285, 299], "IN": 287, "If": [11, 17, 20, 21, 22, 23, 25, 26, 27, 33, 36, 37, 38, 39, 41, 42, 43, 47, 49, 51, 54, 55, 56, 57, 59, 60, 61, 64, 66, 68, 71, 72, 74, 75, 78, 79, 80, 84, 86, 89, 90, 92, 93, 95, 96, 97, 99, 103, 106, 107, 109, 110, 113, 114, 115, 119, 121, 124, 125, 126, 127, 129, 130, 131, 133, 135, 137, 140, 141, 143, 144, 147, 148, 149, 151, 155, 158, 159, 161, 162, 165, 166, 167, 177, 180, 185, 186, 189, 191, 193, 194, 216, 217, 219, 220, 223, 226, 230, 231, 248, 249, 250, 263, 264, 265, 266, 267, 268, 273, 274, 275, 276, 277, 278, 281, 282, 291, 292, 296, 297], "In": [169, 285, 286], "It": [205, 285, 288, 290, 291, 296, 297, 299], "NO": 287, "NOT": 287, "OF": 287, "OR": 287, "Of": [22, 23, 38, 39, 56, 57, 74, 75, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162], "One": [46, 259, 271], "THE": 287, "TO": 287, "The": [7, 8, 12, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29, 33, 34, 36, 37, 38, 39, 42, 43, 44, 47, 51, 52, 54, 55, 56, 57, 60, 61, 63, 64, 68, 69, 71, 72, 74, 75, 79, 80, 81, 86, 87, 89, 90, 92, 93, 96, 97, 98, 99, 103, 104, 106, 107, 109, 110, 114, 115, 116, 117, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 137, 138, 140, 141, 143, 144, 148, 149, 150, 151, 155, 156, 158, 159, 161, 162, 166, 167, 168, 169, 170, 172, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 201, 202, 206, 209, 211, 213, 214, 216, 217, 218, 219, 220, 223, 226, 227, 229, 230, 231, 232, 233, 234, 235, 239, 240, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 263, 264, 265, 267, 268, 269, 273, 274, 275, 277, 278, 280, 281, 287, 288, 290, 291, 295, 296, 297, 299, 300], "Then": 288, "There": [283, 290, 296, 300], "These": [290, 296], "To": [40, 286, 288, 289, 297, 300], "WITH": 287, "_": 290, "__from_data__": [28, 44, 63, 81, 98, 116, 132, 150, 168, 197, 257, 269, 280], "__init__": 289, "aabb": [169, 170, 175], "abl": [14, 15, 31, 32, 67, 101, 102, 136, 153, 154], "about": [8, 285], "abov": [287, 296], "abstract": 99, "accord": [170, 290], "acknowledg": 282, "action": 287, "activ": [285, 286, 291, 297, 299], "actor": [271, 285], "actual": 181, "ad": [18, 29, 34, 52, 69, 87, 104, 122, 138, 156, 170, 174, 216, 217, 218, 219, 281, 292], "add": [14, 15, 31, 32, 49, 50, 66, 67, 84, 85, 101, 102, 119, 120, 135, 136, 153, 154, 172, 173, 174, 216, 217, 218, 219, 220, 221, 222, 239, 288, 289, 297, 299, 300], "add_beam": 284, "add_el": 219, "addit": [10, 29, 218, 288, 290, 291, 295], "adjac": [18, 34, 52, 69, 87, 104, 122, 138, 156], "adjust": 299, "affect": [14, 15, 31, 32, 67, 101, 102, 136, 153, 154], "after": [24, 58, 77, 94, 112, 128, 146, 164], "against": [28, 44, 63, 81, 98, 116, 132, 150, 168, 197, 257, 269, 280], "aleksandra": 282, "algorithm": [25, 41, 59, 78, 95, 113, 129, 147, 165, 169, 191, 248, 266, 276], "align": [16, 169, 170, 175, 224, 288, 299], "all": [22, 23, 38, 39, 56, 57, 74, 75, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162, 182, 189, 190, 205, 214, 228, 232, 237, 238, 239, 251, 281, 287, 290, 292, 296, 298], "allow": [18, 34, 52, 64, 69, 87, 99, 104, 122, 133, 138, 151, 156, 182, 214, 271, 292], "along": [117, 133, 151, 170, 296], "alreadi": [216, 219], "also": [170, 282, 285, 288, 290, 291, 296], "amount": [169, 172, 182, 281], "an": [8, 10, 12, 17, 18, 20, 21, 26, 27, 28, 33, 34, 36, 37, 42, 43, 44, 47, 51, 52, 54, 55, 60, 61, 63, 64, 68, 69, 71, 72, 79, 80, 81, 82, 86, 87, 89, 90, 96, 97, 98, 99, 103, 104, 106, 107, 114, 115, 116, 117, 121, 122, 124, 125, 130, 131, 132, 133, 137, 138, 140, 141, 148, 149, 150, 151, 155, 156, 158, 159, 166, 167, 168, 170, 180, 185, 186, 193, 194, 197, 204, 208, 216, 219, 220, 221, 223, 226, 230, 231, 235, 240, 249, 250, 257, 258, 263, 264, 265, 267, 268, 269, 273, 274, 275, 277, 278, 280, 282, 283, 285, 286, 287, 288, 290, 291, 296], "analysi": 285, "angl": [82, 202, 243, 244, 296], "ani": [26, 27, 28, 42, 43, 44, 60, 61, 63, 79, 80, 81, 96, 97, 98, 114, 115, 116, 130, 131, 132, 148, 149, 150, 166, 167, 168, 193, 194, 197, 249, 250, 257, 267, 268, 269, 277, 278, 280, 283, 287, 295, 296, 300], "anna": 282, "anoth": [117, 133, 151], "apart": 10, "api": [285, 288], "apolinarska": 282, "append": [209, 289], "appli": [8, 14, 15, 31, 32, 67, 101, 102, 136, 153, 154, 195, 196, 202, 209, 211, 213, 232, 251, 289, 296, 300], "applic": 298, "ar": [10, 11, 13, 16, 18, 22, 23, 30, 34, 38, 39, 40, 48, 52, 56, 57, 65, 69, 74, 75, 83, 87, 92, 93, 100, 104, 109, 110, 118, 122, 126, 127, 134, 138, 143, 144, 152, 156, 161, 162, 169, 171, 209, 215, 220, 223, 261, 271, 272, 283, 289, 290, 291, 294, 295, 296, 297, 299, 300], "argument": 218, "aris": 287, "around": 291, "as_str": [25, 41, 59, 78, 95, 113, 129, 147, 165, 191, 248, 266, 276], "assembl": 271, "assembli": [284, 285, 292, 298], "assemli": 24, "assign": [214, 216, 223, 296, 299], "associ": [12, 40, 47, 64, 82, 99, 117, 133, 151, 202, 271, 287], "attach": [22, 23, 38, 39, 56, 57, 74, 75, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162], "attempt": 298, "attr": [209, 218], "attr1nam": 290, "attr1value_attr2nam": 290, "attr2valu": 290, "attribut": [8, 12, 29, 45, 47, 64, 82, 99, 117, 170, 198, 202, 209, 214, 218, 270, 271, 285, 288, 289, 291], "author": [282, 287], "autom": 288, "automat": [49, 50, 66, 84, 85, 119, 120, 135, 299], "avail": 169, "avoid": [40, 175, 178], "axi": [169, 170, 175, 183, 184, 224, 243, 244, 291, 295, 299], "b": [220, 235, 241], "backend": 285, "bake": 288, "bakewithboxmap": 299, "base": [8, 9, 12, 29, 45, 47, 62, 64, 82, 99, 117, 133, 151, 170, 177, 179, 198, 202, 206, 209, 210, 212, 214, 239, 243, 244, 258, 260, 270, 271, 297, 298, 300], "basic": 285, "beam": [8, 9, 10, 11, 12, 14, 15, 18, 22, 23, 24, 29, 31, 32, 34, 38, 39, 40, 47, 49, 50, 52, 56, 57, 58, 62, 64, 66, 67, 69, 74, 75, 77, 82, 84, 85, 87, 92, 93, 94, 99, 101, 102, 104, 109, 110, 112, 117, 119, 120, 122, 126, 127, 128, 133, 135, 136, 138, 143, 144, 146, 151, 153, 154, 156, 161, 162, 164, 169, 202, 206, 214, 219, 227, 239, 281, 284, 285, 288, 290, 295, 296, 297, 299, 300], "beam_a": [11, 12, 22, 23, 38, 39, 56, 57, 74, 75, 82, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162, 219], "beam_a_kei": 214, "beam_b": [11, 12, 22, 23, 38, 39, 56, 57, 74, 75, 82, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162], "beam_b_kei": 214, "beam_width": 292, "beamjoinningerror": [14, 15, 31, 32, 49, 66, 67, 84, 101, 102, 119, 135, 136, 153, 154, 285], "becaus": 296, "been": [18, 34, 52, 69, 87, 104, 122, 138, 156, 216, 271], "befor": [18, 34, 52, 69, 87, 104, 122, 138, 156, 216], "being": 285, "belong": [18, 34, 52, 69, 87, 104, 122, 138, 156], "between": [64, 82, 99, 133, 151, 214, 220, 235, 237, 241, 290, 292, 296, 300], "birdsmouth": 296, "bisector": [82, 296], "bit": 292, "bitmap": 299, "blank": [170, 172, 188, 239, 291], "blender": 283, "bool": [10, 17, 22, 23, 25, 26, 27, 33, 38, 39, 41, 42, 43, 47, 51, 56, 57, 59, 60, 61, 64, 68, 74, 75, 78, 79, 80, 86, 92, 93, 95, 96, 97, 99, 103, 109, 110, 113, 114, 115, 121, 126, 127, 129, 130, 131, 133, 137, 143, 144, 147, 148, 149, 151, 155, 161, 162, 165, 166, 167, 177, 180, 191, 193, 194, 202, 226, 233, 234, 235, 236, 248, 249, 250, 263, 266, 267, 268, 271, 273, 276, 277, 278], "boolean": [288, 292, 295, 297], "both": [12, 50, 85, 120, 220, 223], "bottom": [12, 24, 202, 296], "bound": [169, 170, 175, 178, 224, 225, 281], "box": [169, 170, 175, 178, 224, 225, 271, 281, 288, 291], "brep": [177, 285, 299], "brepdrillholefeatur": 295, "brepsubtractionfeatur": 295, "btlx": [170, 202, 209, 285, 288], "btlx_2_1_0": 289, "btlx_process": [209, 289], "btlx_string": 198, "btlxfrenchridgelap": 285, "btlxjackcut": [209, 285], "btlxjoint": 289, "btlxpart": [198, 202, 206, 209, 211, 213, 289], "btlxprocess": [285, 289], "build": [260, 270, 271, 286, 300], "buildingplan": [270, 285], "built": [285, 288], "butt": [47, 117, 292], "byte": [25, 41, 59, 78, 95, 113, 129, 147, 165, 191, 248, 266, 276], "c": [286, 287], "cad": [271, 283], "calcul": [8, 14, 15, 22, 23, 31, 32, 38, 39, 49, 56, 57, 66, 67, 74, 75, 84, 92, 93, 101, 102, 109, 110, 119, 126, 127, 135, 136, 143, 144, 153, 154, 161, 162, 214, 239, 247], "call": [18, 34, 40, 49, 50, 52, 66, 69, 84, 85, 87, 104, 119, 120, 122, 135, 138, 156, 209, 289, 291], "callabl": 232, "can": [8, 28, 44, 63, 81, 98, 116, 132, 150, 168, 197, 209, 216, 257, 260, 269, 271, 280, 283, 288, 289, 291, 296, 300], "cannot": 291, "canva": 296, "care": 300, "casa": 282, "case": [292, 297], "categori": [290, 291, 300], "cd": 286, "center": [22, 23, 38, 39, 56, 57, 74, 75, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162, 214, 282], "center_of_mass": 214, "centerlin": [22, 23, 38, 39, 56, 57, 74, 75, 82, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162, 170, 181, 183, 184, 288, 290, 291, 299], "centerline_end": 170, "centerline_start": 170, "centr": 296, "centrelin": 291, "chang": 296, "charg": 287, "check": [16, 233, 234, 281, 285], "checkstandardattribut": 290, "chen": 282, "chosen": [22, 23, 38, 39, 56, 57, 74, 75, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162], "circular": 40, "cite": 285, "cl": [17, 33, 51, 68, 86, 103, 121, 137, 155, 180, 226, 263, 273], "claim": 287, "class": [9, 12, 13, 29, 30, 45, 47, 48, 64, 65, 82, 83, 99, 100, 117, 118, 133, 134, 151, 152, 170, 171, 198, 201, 202, 206, 209, 210, 212, 214, 215, 221, 251, 258, 260, 261, 270, 271, 272, 285, 289], "classmethod": [10, 18, 19, 20, 21, 28, 34, 35, 36, 37, 44, 46, 52, 53, 54, 55, 63, 69, 70, 71, 72, 81, 87, 88, 89, 90, 98, 104, 105, 106, 107, 116, 122, 123, 124, 125, 132, 138, 139, 140, 141, 150, 156, 157, 158, 159, 168, 183, 184, 185, 186, 197, 201, 203, 207, 211, 213, 230, 231, 257, 259, 264, 265, 269, 274, 275, 280], "clean": 296, "click": 296, "clone": 286, "closer": 181, "closest": [22, 23, 38, 39, 56, 57, 74, 75, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162, 292], "code": [18, 34, 52, 69, 87, 104, 122, 138, 156, 283, 285], "collect": [260, 281, 297], "collis": 176, "colon": 290, "com": [282, 286, 289], "combin": 209, "common": 99, "compa": [17, 20, 21, 25, 33, 36, 37, 41, 51, 54, 55, 59, 68, 71, 72, 78, 86, 89, 90, 95, 103, 106, 107, 113, 121, 124, 125, 129, 137, 140, 141, 147, 155, 158, 159, 165, 170, 176, 177, 178, 179, 180, 185, 186, 191, 195, 196, 224, 225, 226, 230, 231, 243, 244, 248, 251, 255, 256, 263, 264, 265, 266, 271, 273, 274, 275, 276, 282, 288, 292, 294, 298], "compact": [26, 27, 42, 43, 60, 61, 79, 80, 96, 97, 114, 115, 130, 131, 148, 149, 166, 167, 193, 194, 249, 250, 267, 268, 277, 278], "comparison": [25, 41, 59, 78, 95, 113, 129, 147, 165, 191, 248, 266, 276], "compas_model": [196, 219, 229, 232, 234, 270], "compas_rhino": 286, "compas_timb": [0, 8, 9, 12, 18, 29, 34, 40, 45, 47, 52, 64, 69, 82, 87, 99, 104, 117, 122, 133, 138, 151, 156, 169, 170, 198, 201, 202, 206, 209, 210, 212, 214, 219, 258, 260, 270, 271, 281, 282, 285, 286], "compat": [12, 13, 30, 47, 48, 64, 65, 82, 83, 100, 117, 118, 133, 134, 151, 152, 169, 171, 215, 261, 272], "compet": 282, "compil": 286, "complet": [64, 99, 133, 151], "complex": 285, "compon": [286, 290, 291, 292, 294, 295, 297, 300], "componen": 288, "compos": 297, "comput": [11, 25, 41, 59, 78, 95, 113, 129, 147, 165, 175, 176, 177, 178, 179, 191, 224, 225, 248, 266, 276], "computation": 297, "concaten": 290, "concept": [283, 288], "concret": 40, "condit": 287, "connect": [0, 8, 9, 12, 13, 18, 29, 30, 34, 40, 45, 47, 48, 52, 64, 65, 69, 82, 83, 87, 99, 100, 104, 117, 118, 122, 133, 134, 138, 151, 152, 156, 169, 171, 211, 213, 215, 229, 261, 272, 285, 287, 296, 297], "connectionsolv": [247, 285], "consid": [10, 11, 296], "consist": 11, "construct": [20, 21, 28, 36, 37, 44, 54, 55, 63, 71, 72, 81, 89, 90, 98, 106, 107, 116, 124, 125, 132, 140, 141, 150, 158, 159, 168, 185, 186, 197, 230, 231, 257, 264, 265, 269, 274, 275, 280, 285, 292], "contain": [7, 8, 10, 12, 18, 20, 21, 22, 23, 34, 36, 37, 38, 39, 52, 54, 55, 56, 57, 69, 71, 72, 74, 75, 87, 89, 90, 92, 93, 104, 106, 107, 109, 110, 122, 124, 125, 126, 127, 138, 140, 141, 143, 144, 156, 158, 159, 161, 162, 169, 170, 185, 186, 214, 216, 219, 228, 230, 231, 233, 236, 238, 251, 260, 264, 265, 271, 274, 275, 281], "content": 294, "context": 7, "continu": 285, "contract": 287, "contribut": [285, 288], "contributor": 282, "control": [25, 41, 59, 78, 95, 113, 129, 147, 165, 191, 248, 266, 276], "convent": 291, "convers": [13, 30, 48, 65, 83, 100, 118, 134, 152, 171, 215, 261, 272], "convert": [13, 26, 27, 30, 42, 43, 48, 60, 61, 65, 79, 80, 83, 96, 97, 100, 114, 115, 118, 130, 131, 134, 148, 149, 152, 166, 167, 171, 193, 194, 215, 249, 250, 261, 267, 268, 272, 277, 278], "coordin": [170, 179, 291], "copi": [196, 244, 246, 253, 254, 256, 287], "copy_guid": [17, 33, 51, 68, 86, 103, 121, 137, 155, 180, 226, 263, 273], "copyright": 287, "corner": 296, "correct": [20, 21, 36, 37, 54, 55, 71, 72, 89, 90, 106, 107, 124, 125, 140, 141, 158, 159, 185, 186, 230, 231, 264, 265, 274, 275], "correctli": 290, "correspond": [170, 181, 201, 290, 291, 299], "could": [49, 66, 84, 119, 135, 258], "cover": 209, "cpython": [13, 30, 48, 65, 83, 100, 118, 134, 152, 171, 215, 261, 272], "crate": 296, "creat": [12, 16, 29, 47, 49, 50, 64, 66, 82, 84, 85, 99, 117, 119, 120, 133, 135, 151, 183, 184, 196, 201, 202, 210, 212, 283, 285, 286, 288, 289, 290, 291, 292, 294, 296, 297, 300], "creategeometri": [292, 297], "criteria": 290, "cross": [11, 40, 47, 58, 62, 64, 77, 94, 99, 112, 117, 128, 133, 146, 151, 164, 170, 183, 184, 291, 292, 296], "cross_beam": [47, 64, 99, 117, 133, 151, 284], "cross_beam_kei": 64, "current": [17, 33, 51, 68, 86, 103, 121, 137, 155, 180, 226, 263, 273, 285], "curv": 291, "custom": 285, "custom_dimens": 292, "cut": [47, 64, 99, 133, 151, 206, 288, 291, 295, 296, 297], "cut_plane_bia": [64, 99, 133, 151, 296], "cutoff": 296, "cylind": 271, "damag": 287, "data": [17, 20, 21, 25, 26, 27, 28, 33, 36, 37, 41, 42, 43, 44, 51, 54, 55, 59, 60, 61, 63, 68, 71, 72, 78, 79, 80, 81, 86, 89, 90, 95, 96, 97, 98, 103, 106, 107, 113, 114, 115, 116, 121, 124, 125, 129, 130, 131, 132, 137, 140, 141, 147, 148, 149, 150, 155, 158, 159, 165, 166, 167, 168, 180, 185, 186, 191, 193, 194, 197, 198, 226, 230, 231, 248, 249, 250, 252, 253, 254, 257, 260, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 280, 294, 298], "datastructur": [25, 41, 59, 78, 95, 113, 129, 147, 165, 176, 191, 224, 225, 243, 245, 248, 253, 254, 255, 256, 266, 276], "de": [24, 40, 58, 77, 94, 112, 128, 146, 164], "deal": 287, "debug": [8, 292, 297, 298], "debug_geometri": 8, "debug_info": [8, 190], "debuginfo": [292, 297], "deeper": [64, 99, 133, 151], "default": [13, 17, 30, 33, 47, 48, 51, 64, 65, 68, 83, 86, 99, 100, 103, 118, 121, 133, 134, 137, 151, 152, 155, 171, 180, 183, 184, 206, 215, 226, 243, 244, 245, 246, 261, 263, 272, 273, 285, 291, 292, 297, 299], "defin": [14, 15, 31, 32, 67, 101, 102, 136, 153, 154, 183, 202, 290, 291, 292, 296, 299, 300], "definit": [289, 297], "degre": 202, "deleteattribut": 290, "demo": 293, "depend": [181, 183, 184, 286, 289, 296], "depth": [47, 117, 284, 296], "deriv": [209, 289], "describ": [209, 289], "desigen": 11, "design": [169, 282, 285, 288, 290, 291], "design2machin": 289, "desir": 299, "detail": 288, "detect": [9, 297], "detected_topo": 214, "determin": [16, 296], "dev": 286, "develop": [282, 285], "deviat": 299, "dfab": 282, "diamet": [202, 295], "dict": [12, 29, 198, 202, 205, 209, 211, 213, 214, 218, 289], "dictionari": [12, 29, 198, 211, 213], "differ": [214, 283, 289, 292, 296], "digest": [25, 41, 59, 78, 95, 113, 129, 147, 165, 191, 248, 266, 276], "digit": 282, "dimens": [170, 291], "direct": [170, 182, 183, 184, 245, 246, 281, 291, 292, 300], "directli": [29, 99, 216, 217, 292, 296], "disabl": 297, "displai": [13, 30, 48, 65, 83, 100, 118, 134, 152, 171, 215, 261, 272, 290, 298], "distanc": [10, 11, 292, 297], "distribut": 287, "do": [99, 287, 289], "document": [287, 289, 290, 291, 299], "doe": [18, 34, 52, 69, 87, 104, 122, 138, 156, 289, 291], "doesn": 296, "doi": 282, "done": [22, 23, 38, 39, 56, 57, 74, 75, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162], "down": 296, "drawn": 291, "drill": 202, "drill_hole_diamet": 202, "drop": 296, "dure": [25, 40, 41, 59, 78, 95, 113, 129, 147, 165, 191, 248, 266, 271, 276], "dynam": [292, 296], "e": [11, 40, 283, 290, 299], "each": [22, 23, 29, 38, 39, 56, 57, 74, 75, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162, 182, 209, 260, 289, 290, 296, 298], "easi": 288, "eclips": 283, "ecosystem": 285, "edg": [170, 220, 292, 296], "edge_stud": [292, 296], "edge_stud_offset": 292, "edit": 286, "editor": 283, "eg": 209, "either": [64, 99, 133, 151, 181, 292], "element": [0, 19, 35, 53, 70, 88, 105, 123, 139, 157, 169, 170, 175, 176, 177, 178, 179, 181, 190, 195, 196, 209, 214, 216, 217, 219, 220, 223, 227, 229, 232, 233, 235, 237, 240, 241, 270, 271, 285, 297], "element_id": 271, "elementnod": [216, 217], "elements_held": 271, "encod": 290, "encompass": 285, "end": [12, 22, 23, 29, 38, 39, 47, 56, 57, 64, 74, 75, 82, 92, 93, 109, 110, 117, 126, 127, 133, 143, 144, 151, 161, 162, 170, 172, 181, 182, 184, 202, 296], "end_point": 184, "endpoint": [181, 184], "enlarg": 169, "entail": [285, 290], "entiti": 285, "entri": 290, "enum": 258, "enumer": 45, "environ": [283, 285, 286, 291], "equal": 170, "error": [8, 175, 178, 290, 292, 297], "et": 209, "et_el": 209, "etc": [170, 198, 199, 283, 285, 291], "eth": [282, 285], "event": 287, "everi": 296, "exampl": [25, 40, 41, 59, 78, 95, 113, 129, 147, 165, 169, 191, 219, 248, 266, 276, 285, 288, 290, 291, 300], "except": [8, 220], "exclud": [26, 27, 42, 43, 60, 61, 79, 80, 96, 97, 114, 115, 130, 131, 148, 149, 166, 167, 193, 194, 249, 250, 267, 268, 277, 278], "execut": [258, 271, 283], "exist": [13, 30, 48, 65, 83, 100, 118, 134, 152, 171, 215, 219, 234, 261, 272, 289], "expand": 285, "expect": [18, 34, 52, 69, 87, 104, 122, 138, 156], "expens": 297, "explain": 288, "express": [214, 287], "extend": [47, 172, 182, 239, 296], "extens": [14, 31, 49, 50, 66, 84, 85, 101, 119, 120, 135, 153, 172, 182, 188, 190, 239], "extract": [291, 298], "fabric": [0, 198, 201, 202, 205, 206, 209, 210, 212, 282, 285, 288], "face": [12, 16, 22, 23, 25, 38, 39, 41, 47, 56, 57, 59, 74, 75, 78, 92, 93, 95, 109, 110, 113, 126, 127, 129, 143, 144, 147, 161, 162, 165, 170, 182, 191, 202, 248, 266, 276, 296], "face_index": [22, 23, 38, 39, 56, 57, 74, 75, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162], "factor": [245, 246], "factori": [201, 209, 210, 212, 289], "fals": [10, 17, 25, 26, 27, 33, 41, 42, 43, 47, 51, 59, 60, 61, 68, 78, 79, 80, 86, 95, 96, 97, 103, 113, 114, 115, 121, 129, 130, 131, 137, 147, 148, 149, 155, 165, 166, 167, 177, 180, 191, 193, 194, 226, 248, 249, 250, 263, 266, 267, 268, 273, 276, 277, 278, 292, 297], "fast": 285, "featur": [8, 15, 29, 32, 50, 64, 67, 85, 102, 120, 136, 154, 170, 173, 174, 177, 189, 190, 239, 285, 288, 291, 292, 297, 300], "fibr": [170, 288], "file": [20, 26, 36, 42, 54, 60, 71, 79, 89, 96, 106, 114, 124, 130, 140, 148, 158, 166, 185, 193, 198, 230, 249, 264, 267, 274, 277, 287, 289, 293, 294], "filepath": [20, 26, 36, 42, 54, 60, 71, 79, 89, 96, 106, 114, 124, 130, 140, 148, 158, 166, 185, 193, 230, 249, 264, 267, 274, 277], "filter": [232, 290], "filter_": 232, "final": 300, "find": [10, 169, 229, 281, 291, 296], "find_neighboring_beam": 285, "first": [11, 82, 181, 220, 235, 239, 296, 300], "fit": 287, "fix": [13, 30, 48, 65, 83, 100, 118, 134, 152, 171, 215, 261, 272], "flag": 202, "flip": [62, 64, 99, 133, 151, 296], "flip_lap_sid": [64, 99, 133, 151, 296], "float": [10, 11, 47, 64, 99, 117, 133, 151, 169, 170, 172, 175, 178, 182, 183, 184, 202, 214, 243, 244, 245, 246, 281], "flush": [292, 296], "follow": [287, 288, 289, 291, 296], "forg": 286, "fork": 286, "format": [25, 26, 27, 41, 42, 43, 59, 60, 61, 78, 79, 80, 95, 96, 97, 113, 114, 115, 129, 130, 131, 147, 148, 149, 165, 166, 167, 191, 193, 194, 198, 248, 249, 250, 266, 267, 268, 276, 277, 278, 290], "found": 289, "foundat": 282, "four": [290, 296], "frame": [22, 23, 29, 38, 39, 56, 57, 74, 75, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162, 170, 182, 202, 206, 207, 219, 271, 284, 285, 288, 291, 292, 300], "frame_depth": 292, "framework": 285, "free": 287, "french": [12, 16, 202, 210], "frenchridgefactori": 285, "frenchridgelap": 202, "frenchridgelapjoint": 285, "from": [11, 20, 21, 25, 26, 27, 36, 37, 41, 42, 43, 54, 55, 59, 60, 61, 71, 72, 78, 79, 80, 89, 90, 95, 96, 97, 106, 107, 113, 114, 115, 124, 125, 129, 130, 131, 140, 141, 147, 148, 149, 158, 159, 165, 166, 167, 183, 184, 185, 186, 188, 189, 191, 193, 194, 209, 219, 230, 231, 240, 242, 248, 249, 250, 264, 265, 266, 267, 268, 274, 275, 276, 277, 278, 283, 285, 287, 288, 289, 290, 291, 292, 294, 295, 296, 298], "from_obj": [25, 41, 59, 78, 95, 113, 129, 147, 165, 191, 248, 266, 276], "fulli": 296, "fullnam": [13, 30, 48, 65, 83, 100, 118, 134, 152, 171, 215, 261, 272], "function": [7, 99, 169, 209, 232, 288, 289], "furnish": 287, "furthest": 292, "futur": 285, "g": [11, 40, 283, 290], "gener": [11, 200, 204, 208, 209, 214, 232, 270, 289, 291, 292, 296, 300], "geometr": [202, 205, 209, 285, 289, 295, 297], "geometri": [8, 170, 176, 177, 178, 179, 195, 196, 224, 225, 243, 244, 246, 251, 255, 256, 271, 281, 285, 288, 291, 292, 295, 296, 297, 298, 299, 300], "geometry_typ": 284, "get": [25, 41, 59, 78, 95, 113, 129, 147, 165, 191, 227, 232, 248, 266, 276, 286, 288, 290], "getcustomattribut": 290, "getstandardattribut": 290, "gettyp": [13, 30, 48, 65, 83, 100, 118, 134, 152, 171, 215, 261, 272], "gh": [198, 199], "ghpython": [0, 285, 288], "ghuser": 286, "git": 286, "github": [282, 286], "given": [10, 11, 18, 34, 46, 52, 69, 87, 104, 122, 138, 156, 169, 181, 182, 184, 187, 233, 259, 290], "global": 298, "gonzalo": 282, "gramazio": [282, 285, 287], "gramaziokohl": 282, "grant": 287, "graph": 220, "grasshopp": [13, 30, 48, 65, 83, 100, 118, 134, 152, 171, 215, 261, 272, 283, 285, 286, 291, 296, 300], "group": [216, 217, 218, 219, 229, 232, 234, 290], "group_nam": [232, 234], "groupnod": [216, 217, 218, 219], "grssshopper": 296, "guid": [17, 26, 27, 33, 42, 43, 51, 60, 61, 68, 79, 80, 86, 96, 97, 103, 114, 115, 121, 130, 131, 137, 148, 149, 155, 166, 167, 180, 193, 194, 226, 227, 249, 250, 263, 267, 268, 273, 277, 278, 285, 288, 291, 296], "ha": [8, 20, 21, 36, 37, 54, 55, 71, 72, 89, 90, 106, 107, 124, 125, 140, 141, 158, 159, 169, 185, 186, 219, 230, 231, 264, 265, 271, 274, 275, 291, 296, 299], "half": 296, "handl": 285, "has_group": 219, "hash": [25, 41, 59, 78, 95, 113, 129, 147, 165, 191, 248, 266, 276], "have": [17, 18, 33, 34, 51, 52, 68, 69, 86, 87, 103, 104, 121, 122, 137, 138, 155, 156, 170, 180, 209, 216, 226, 235, 263, 273, 291], "header": [202, 292, 296], "header_attribut": [202, 209, 289], "height": [170, 183, 184, 284, 290, 291, 292], "held": 271, "help": 292, "here": [239, 289, 292, 293, 299], "hereaft": 296, "herebi": 287, "hexadecim": [25, 41, 59, 78, 95, 113, 129, 147, 165, 191, 248, 266, 276], "hierarchi": [179, 214, 216, 300], "highest": 296, "highli": 296, "histori": 198, "holder": 287, "hole": [202, 288], "how": [288, 296, 300], "http": [282, 286, 289], "human": [259, 271], "hybrid": 290, "i": [10, 11, 12, 14, 16, 18, 20, 21, 22, 23, 28, 29, 31, 34, 36, 37, 38, 39, 40, 44, 47, 49, 50, 52, 54, 55, 56, 57, 62, 63, 64, 66, 69, 71, 72, 74, 75, 81, 82, 84, 85, 87, 89, 90, 92, 93, 98, 99, 101, 104, 106, 107, 109, 110, 116, 117, 119, 120, 122, 124, 125, 126, 127, 132, 133, 135, 138, 140, 141, 143, 144, 150, 151, 153, 156, 158, 159, 161, 162, 168, 169, 170, 172, 181, 182, 185, 186, 197, 198, 202, 204, 205, 208, 214, 216, 219, 223, 230, 231, 239, 251, 257, 260, 264, 265, 269, 270, 274, 275, 280, 282, 285, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 299, 300], "id": [271, 283], "idea": 288, "identifi": [29, 169, 227], "ignor": [22, 23, 38, 39, 56, 57, 74, 75, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162], "ignore_end": [22, 23, 38, 39, 56, 57, 74, 75, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162], "imag": 299, "implement": [14, 29, 31, 40, 101, 153, 281, 285, 296], "impli": [287, 297], "implicit": [13, 30, 48, 65, 83, 100, 118, 134, 152, 171, 215, 261, 272], "import": [25, 41, 59, 78, 95, 113, 129, 147, 165, 191, 219, 239, 248, 266, 276, 289, 300], "includ": [177, 287, 289], "include_featur": 177, "increment": 271, "indent": [26, 27, 42, 43, 60, 61, 79, 80, 96, 97, 114, 115, 130, 131, 148, 149, 166, 167, 193, 194, 249, 250, 267, 268, 277, 278], "independ": [17, 33, 51, 68, 86, 103, 121, 137, 155, 180, 226, 263, 273], "index": [22, 23, 38, 39, 56, 57, 74, 75, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162, 187, 192, 202, 285], "indic": [8, 12, 183, 184, 202, 290, 291], "individu": 209, "inflat": [169, 175, 178, 281], "inflate_bi": [169, 281], "inform": [8, 285, 292, 297, 298, 299], "inherit": [12, 29, 47, 64, 82, 99, 117, 133, 151, 170, 214, 260, 271, 285, 289], "initi": 190, "inner": [22, 23, 38, 39, 56, 57, 74, 75, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162, 296], "input": [11, 169, 209, 288, 289, 290, 291, 292, 294, 295, 296, 297], "insid": [247, 283], "inspect": 298, "instal": 285, "instanc": [12, 13, 18, 20, 21, 30, 34, 36, 37, 47, 48, 52, 54, 55, 64, 65, 69, 71, 72, 82, 83, 87, 89, 90, 99, 100, 104, 106, 107, 117, 118, 122, 124, 125, 133, 134, 138, 140, 141, 151, 152, 156, 158, 159, 171, 185, 186, 209, 215, 221, 230, 231, 261, 264, 265, 272, 274, 275, 283, 289], "instanti": [29, 99, 209, 289], "instead": [29, 291], "instruct": [239, 258, 260, 271], "int": [46, 170, 172, 187, 188, 192, 202, 220, 259, 271], "integ": 170, "intend": [290, 291], "interact": [29, 214, 220, 229, 235, 241, 283, 300], "interaction_typ": 229, "interest": 181, "interfac": 285, "intern": [204, 208], "intersect": [9, 10, 11], "introduct": 285, "intuit": 285, "invok": 286, "involv": 213, "ironpython": [13, 30, 48, 65, 83, 100, 118, 134, 152, 171, 215, 261, 272], "is_built": 271, "is_plan": 271, "is_top": [202, 203], "iter": 239, "its": [13, 22, 23, 26, 27, 30, 38, 39, 42, 43, 48, 56, 57, 60, 61, 65, 74, 75, 79, 80, 83, 92, 93, 96, 97, 100, 109, 110, 114, 115, 118, 126, 127, 130, 131, 134, 143, 144, 148, 149, 152, 161, 162, 166, 167, 171, 179, 183, 190, 193, 194, 201, 215, 227, 249, 250, 261, 267, 268, 272, 277, 278, 286, 290, 296], "jack": [206, 292], "jack_stud": [292, 296], "jo": [18, 34, 52, 69, 87, 104, 122, 138, 156], "join": [8, 12, 18, 29, 34, 47, 52, 64, 69, 82, 87, 99, 104, 117, 122, 133, 138, 151, 156, 202, 292, 297], "joineri": 239, "joint": [8, 9, 12, 14, 15, 18, 45, 47, 49, 50, 52, 62, 64, 66, 67, 69, 82, 84, 85, 87, 99, 101, 102, 104, 117, 119, 120, 122, 133, 135, 136, 138, 151, 153, 154, 156, 172, 188, 198, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 221, 239, 242, 283, 285, 288, 289, 291, 292, 297, 300], "joint_factori": [201, 209, 289], "joint_kei": [172, 188], "joint_nam": [206, 207], "joint_overrid": 292, "joint_typ": [12, 64, 201], "jointfactori": 201, "jointrul": 297, "jointtopologi": [11, 214, 285], "joist": 291, "json": [20, 21, 26, 27, 36, 37, 42, 43, 54, 55, 60, 61, 71, 72, 79, 80, 89, 90, 96, 97, 106, 107, 114, 115, 124, 125, 130, 131, 140, 141, 148, 149, 158, 159, 166, 167, 185, 186, 193, 194, 230, 231, 249, 250, 264, 265, 267, 268, 274, 275, 277, 278], "kasir": 282, "keep": 296, "kei": [29, 40, 64, 170, 172, 188, 211, 213, 290], "keyword": 218, "kick": [13, 30, 48, 65, 83, 100, 118, 134, 152, 171, 215, 261, 272], "kind": [287, 296], "king": 292, "king_stud": [292, 296], "kohler": [282, 285, 287], "kwarg": [18, 34, 52, 69, 87, 104, 122, 138, 156, 218], "l": [12, 47, 64, 82, 99, 212, 213, 298], "lap": [12, 16, 64, 99, 133, 151, 202], "lapjoint": [64, 133, 151, 285], "larger": [170, 291, 296], "later": [290, 291], "latest": 286, "latter": 291, "layer": 299, "lbuttjoint": [12, 285], "lement": 173, "length": [117, 133, 151, 170, 183], "less": [18, 34, 52, 69, 87, 104, 122, 138, 156, 170], "level": 296, "lhalflapjoint": 285, "li": [291, 299], "liabil": 287, "liabl": 287, "librari": [282, 283, 285, 288], "licens": 285, "lie": [18, 34, 52, 69, 87, 104, 122, 138, 156], "like": [285, 288, 297], "limit": 287, "line": [170, 183, 285, 290, 291, 292, 295], "linear": 291, "linecurv": 291, "lintel_post": 292, "list": [8, 10, 12, 18, 29, 34, 52, 64, 69, 87, 104, 122, 138, 156, 169, 170, 173, 174, 181, 189, 198, 209, 214, 217, 223, 229, 271, 281, 289, 296, 298], "lmiterfactori": 285, "lmiterjoint": 285, "local": [170, 291], "locat": [170, 271, 291], "log": [46, 259], "long": [170, 182], "long_edg": 170, "lower": 296, "lowest": 296, "ly": 295, "m": 286, "machin": [16, 170, 289, 294], "made": 296, "mai": [290, 297], "main": [11, 40, 47, 58, 62, 64, 77, 94, 99, 112, 117, 128, 133, 146, 151, 164, 296], "main_beam": [47, 64, 99, 117, 133, 151, 284], "main_beam_kei": 64, "maintain": [205, 285], "major": [170, 291], "make": [13, 17, 30, 33, 48, 51, 65, 68, 83, 86, 100, 103, 118, 121, 134, 137, 152, 155, 171, 180, 215, 226, 261, 263, 272, 273], "mani": [282, 283, 285], "map": [29, 288, 299], "mapsiz": 299, "mass": 214, "match": [209, 289, 296], "materi": [170, 216, 222, 223, 236, 291, 299], "mathemat": 11, "max": 297, "max_dist": [10, 11], "maxdist": 297, "maximum": 11, "mayb": 219, "meant": 7, "meet": 296, "merchant": 287, "merg": 287, "mesh": [25, 41, 59, 78, 95, 113, 129, 147, 165, 176, 191, 248, 266, 276, 284], "method": [9, 11, 12, 13, 16, 18, 29, 30, 34, 40, 45, 47, 48, 49, 50, 52, 64, 65, 66, 69, 82, 83, 84, 85, 87, 99, 100, 104, 117, 118, 119, 120, 122, 133, 134, 135, 138, 151, 152, 156, 170, 171, 198, 202, 204, 206, 208, 210, 212, 214, 215, 239, 258, 260, 261, 271, 272, 285, 289], "metric": 182, "middl": [170, 296], "midpoint": 170, "might": [288, 296], "mill": [47, 117], "mill_depth": [47, 117, 296], "mind": 289, "minim": [26, 27, 42, 43, 60, 61, 79, 80, 96, 97, 114, 115, 130, 131, 148, 149, 166, 167, 193, 194, 249, 250, 267, 268, 277, 278], "minimum": 182, "misc": 282, "miss": 290, "mit": 287, "miter": [82, 212, 213], "mode": 286, "model": [0, 12, 18, 24, 34, 40, 47, 52, 58, 64, 69, 77, 82, 87, 94, 99, 104, 112, 117, 122, 128, 133, 138, 146, 151, 156, 164, 170, 179, 198, 200, 214, 216, 217, 218, 219, 220, 221, 222, 223, 228, 233, 234, 236, 237, 238, 239, 240, 242, 247, 251, 258, 270, 285, 288, 291, 294, 295, 300], "modifi": [251, 287], "modify_cross": [47, 296], "modul": [7, 209, 285, 289], "more": [8, 174, 285, 288, 289, 291, 296], "most": [22, 23, 38, 39, 56, 57, 74, 75, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162], "multipl": [209, 217, 283, 289], "must": [239, 292], "myenvnam": 286, "n": 286, "name": [206, 209, 218, 219, 232, 234, 289, 290, 298], "nation": 282, "nativ": [26, 27, 42, 43, 60, 61, 79, 80, 96, 97, 114, 115, 130, 131, 148, 149, 166, 167, 193, 194, 249, 250, 267, 268, 277, 278], "nccr": 282, "necessari": [16, 49, 66, 84, 119, 135, 286, 289], "need": [209, 289, 290, 300], "neighbor": [10, 169, 281], "neightbor": [10, 281], "neither": 223, "net": [13, 30, 48, 65, 83, 100, 118, 134, 152, 171, 215, 261, 272], "new": [18, 34, 52, 69, 87, 104, 122, 138, 156, 286, 289, 291], "newlin": [26, 27, 42, 43, 60, 61, 79, 80, 96, 97, 114, 115, 130, 131, 148, 149, 166, 167, 193, 194, 249, 250, 267, 268, 277, 278], "node": [216, 217, 218, 219], "non": 10, "none": [11, 17, 33, 51, 68, 86, 103, 121, 137, 155, 172, 173, 180, 183, 184, 188, 189, 195, 201, 206, 207, 211, 213, 216, 217, 218, 219, 220, 222, 223, 226, 232, 240, 241, 243, 244, 245, 246, 251, 252, 255, 263, 273, 291], "noninfring": 287, "normal": [22, 23, 38, 39, 56, 57, 74, 75, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162, 170], "note": [169, 216, 282], "notic": 287, "now": 296, "number": [292, 300], "obb": 178, "obj": [25, 41, 59, 78, 95, 113, 129, 147, 165, 191, 248, 266, 271, 276], "object": [9, 10, 13, 17, 18, 20, 21, 26, 27, 28, 30, 33, 34, 36, 37, 40, 42, 43, 44, 45, 48, 51, 52, 54, 55, 60, 61, 63, 65, 68, 69, 71, 72, 79, 80, 81, 83, 86, 87, 89, 90, 96, 97, 98, 100, 103, 104, 106, 107, 114, 115, 116, 118, 121, 122, 124, 125, 130, 131, 132, 134, 137, 138, 140, 141, 148, 149, 150, 152, 155, 156, 158, 159, 166, 167, 168, 169, 171, 180, 185, 186, 193, 194, 197, 198, 202, 206, 209, 210, 211, 212, 213, 214, 215, 220, 221, 226, 230, 231, 242, 249, 250, 257, 258, 261, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 280, 285, 290, 291, 292, 297, 299], "obtain": 287, "occ": 285, "occur": [8, 298], "offset": [175, 178, 292], "onc": [170, 291], "one": [22, 23, 38, 39, 56, 57, 64, 74, 75, 92, 93, 99, 109, 110, 126, 127, 133, 143, 144, 151, 161, 162, 174, 220, 223, 270, 271, 289, 291, 296, 298], "onli": [14, 31, 40, 101, 153, 177, 239, 290], "onto": 292, "open": [282, 285], "opencascad": 285, "oper": [295, 297], "oppos": 187, "opposit": [47, 296], "option": [10, 11, 14, 17, 22, 23, 25, 26, 27, 31, 33, 38, 39, 41, 42, 43, 51, 56, 57, 59, 60, 61, 68, 74, 75, 78, 79, 80, 86, 92, 93, 95, 96, 97, 101, 103, 109, 110, 113, 114, 115, 121, 126, 127, 129, 130, 131, 137, 143, 144, 147, 148, 149, 153, 155, 161, 162, 165, 166, 167, 169, 170, 175, 177, 180, 191, 193, 194, 206, 216, 217, 218, 219, 220, 223, 226, 232, 241, 243, 244, 245, 246, 248, 249, 250, 263, 266, 267, 268, 273, 276, 277, 278, 291, 300], "order": [11, 169, 205, 270], "ordereddict": 205, "orient": [178, 183, 184, 202, 225, 299], "origin": [17, 33, 51, 68, 86, 103, 121, 137, 155, 170, 180, 205, 226, 243, 244, 263, 273, 291, 299], "orthogon": [22, 38, 56, 74, 92, 109, 126, 143, 161], "other": [13, 22, 23, 30, 38, 39, 48, 56, 57, 64, 65, 74, 75, 83, 92, 93, 99, 100, 109, 110, 118, 126, 127, 133, 134, 143, 144, 151, 152, 161, 162, 171, 202, 215, 219, 261, 272, 282, 287, 296, 300], "other_beam": 202, "otherwis": [11, 47, 287, 291], "out": 287, "outer": 296, "output": [11, 13, 26, 27, 30, 42, 43, 48, 60, 61, 65, 79, 80, 83, 96, 97, 100, 114, 115, 118, 130, 131, 134, 148, 149, 152, 166, 167, 171, 193, 194, 215, 249, 250, 261, 267, 268, 272, 277, 278, 291, 292, 294, 295, 297], "overal": 288, "overlap": 296, "overrid": [13, 30, 48, 65, 83, 100, 118, 134, 152, 171, 215, 261, 272, 292], "overwrit": [296, 300], "own": 296, "packag": [285, 286, 289], "pair": [10, 11, 169, 281, 290], "panel": [13, 30, 48, 65, 83, 100, 118, 134, 152, 171, 215, 261, 272], "parallel": [271, 291, 296], "param": 209, "paramet": [10, 11, 12, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 68, 69, 71, 72, 74, 75, 78, 79, 80, 81, 82, 86, 87, 89, 90, 92, 93, 95, 96, 97, 98, 99, 103, 104, 106, 107, 109, 110, 113, 114, 115, 116, 117, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 137, 138, 140, 141, 143, 144, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 162, 165, 166, 167, 168, 169, 170, 173, 174, 175, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 204, 205, 206, 208, 209, 211, 213, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 280, 281, 289, 290, 299], "parametr": [170, 192, 285], "parent": [216, 217, 218, 219], "part": [16, 40, 198, 200, 202, 203, 206, 207, 211, 213, 216, 223, 281, 285, 289, 291, 295], "particular": 287, "pass": 182, "path": [20, 26, 36, 42, 54, 60, 71, 79, 89, 96, 106, 114, 124, 130, 140, 148, 158, 166, 185, 193, 230, 249, 264, 267, 274, 277, 294], "pdf": 289, "per": 270, "permiss": 287, "permit": 287, "perpendicular": 291, "person": 287, "pip": 286, "place": [13, 30, 48, 65, 83, 100, 118, 134, 152, 171, 215, 251, 261, 272, 296], "plan": [0, 258, 260, 270, 271, 285], "planar": [192, 288, 292, 296], "plane": [47, 82, 182, 206, 291, 295, 296, 299], "plate": [214, 292, 297], "pleas": [12, 47, 64, 82, 99, 117, 133, 151, 282], "pln": 182, "plug": 285, "pluggabl": 169, "plugin": [169, 285], "pocket": [47, 117], "point": [170, 175, 178, 181, 184, 214, 243, 244, 285, 296, 299], "point_end": 184, "point_start": 184, "portion": 287, "posit": [170, 179, 295], "possibl": [45, 290], "present": [283, 296], "pretti": [26, 27, 42, 43, 60, 61, 79, 80, 96, 97, 114, 115, 130, 131, 148, 149, 166, 167, 193, 194, 198, 199, 249, 250, 267, 268, 277, 278], "prevent": 296, "preview": 298, "print": [13, 30, 48, 65, 83, 100, 118, 134, 152, 171, 215, 261, 272], "prior": 281, "priorit": 62, "prioriti": [271, 296], "process": [170, 200, 202, 204, 205, 206, 208, 209, 211, 213, 239, 285, 288, 289, 300], "process_param": 289, "process_paramet": [202, 209], "process_typ": [202, 209, 289], "produc": 170, "product": [22, 23, 38, 39, 56, 57, 74, 75, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162], "programm": 282, "project": [282, 285], "proper": [13, 30, 48, 65, 83, 100, 118, 134, 152, 171, 215, 261, 272], "properli": [12, 47, 64, 82, 99, 117, 133, 151], "properti": 205, "provid": [9, 216, 219, 223, 287, 288, 291, 297], "publish": 287, "purpos": 287, "py": 289, "python": [283, 285, 286, 288], "queri": [232, 234], "r": [10, 169, 286], "radian": [243, 244], "rafter": 291, "rais": [14, 15, 18, 20, 21, 31, 32, 34, 36, 37, 49, 52, 54, 55, 66, 67, 69, 71, 72, 84, 87, 89, 90, 101, 102, 104, 106, 107, 119, 122, 124, 125, 135, 136, 138, 140, 141, 153, 154, 156, 158, 159, 185, 186, 216, 219, 220, 223, 230, 231, 264, 265, 274, 275], "random": 299, "rather": [25, 41, 59, 78, 95, 113, 129, 147, 165, 191, 248, 266, 276], "ratio": 299, "raw": [28, 44, 63, 81, 98, 116, 132, 150, 168, 197, 257, 269, 280, 291], "reason": 239, "recogn": 298, "rectangular": [170, 291], "ref_edg": 170, "ref_fac": 202, "ref_face_index": 202, "ref_fram": 170, "ref_sid": 170, "refer": [12, 16, 24, 40, 58, 77, 94, 112, 128, 146, 164, 170, 187, 192, 202, 285, 288, 289, 290], "referenc": [291, 292], "reference_face_indic": 12, "regard": 169, "regist": 201, "register_joint": [209, 289], "reject": 47, "reject_i": [47, 296], "relat": [209, 289], "remain": 296, "remov": [172, 188, 189, 190, 240, 241, 242, 290, 295, 296], "render": [288, 299], "repositori": 286, "repres": [12, 47, 64, 82, 117, 133, 151, 170, 198, 202, 206, 214, 220, 258, 291], "represent": [12, 13, 26, 27, 30, 42, 43, 46, 48, 60, 61, 64, 65, 79, 80, 83, 96, 97, 100, 114, 115, 118, 130, 131, 134, 148, 149, 152, 166, 167, 171, 193, 194, 215, 249, 250, 259, 261, 267, 268, 272, 277, 278, 289], "request": 192, "requir": [14, 31, 50, 85, 101, 120, 153, 172, 188, 205, 209, 286], "requr": 289, "research": [282, 285, 287], "resolv": 285, "respect": [29, 40], "respons": [18, 34, 52, 69, 87, 104, 122, 138, 156], "restor": [24, 40, 58, 77, 94, 112, 128, 146, 164], "restrict": 287, "result": [22, 23, 38, 39, 56, 57, 74, 75, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162, 181, 270, 291, 292], "retriev": [227, 290], "return": [10, 11, 17, 18, 20, 21, 22, 23, 25, 27, 28, 29, 33, 34, 36, 37, 38, 39, 41, 43, 44, 46, 51, 52, 54, 55, 56, 57, 59, 61, 63, 68, 69, 71, 72, 74, 75, 78, 80, 81, 86, 87, 89, 90, 92, 93, 95, 97, 98, 103, 104, 106, 107, 109, 110, 113, 115, 116, 121, 122, 124, 125, 126, 127, 129, 131, 132, 137, 138, 140, 141, 143, 144, 147, 149, 150, 155, 156, 158, 159, 161, 162, 165, 167, 168, 169, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 194, 195, 196, 197, 198, 199, 201, 205, 211, 213, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259, 263, 264, 265, 266, 268, 269, 273, 274, 275, 276, 278, 280, 281], "rhino": [0, 13, 30, 48, 65, 83, 100, 118, 134, 152, 169, 171, 215, 261, 272, 281, 283, 285, 286, 290, 291, 296, 299], "rhinocero": 285, "rhinocommon": 285, "ridg": [12, 16, 202, 210], "right": [287, 296], "robot": [259, 271], "role": [11, 40], "root": [216, 217], "rotat": [245, 246, 255, 256, 291], "rtree": [10, 281], "rule": [285, 288, 291, 292, 297, 300], "run": [283, 285], "sai": 291, "same": [11, 17, 33, 47, 51, 68, 86, 103, 121, 137, 155, 180, 219, 226, 263, 270, 271, 273], "save": [24, 26, 27, 42, 43, 58, 60, 61, 77, 79, 80, 94, 96, 97, 112, 114, 115, 128, 130, 131, 146, 148, 149, 164, 166, 167, 193, 194, 249, 250, 267, 268, 277, 278, 294], "scale": [243, 244, 255, 256, 299], "schema": [20, 21, 28, 36, 37, 44, 54, 55, 63, 71, 72, 81, 89, 90, 98, 106, 107, 116, 124, 125, 132, 140, 141, 150, 158, 159, 168, 185, 186, 197, 230, 231, 257, 264, 265, 269, 274, 275, 280], "scienc": 282, "sdk": 285, "search": [10, 169], "second": [11, 82, 181, 220, 235, 239], "section": [47, 62, 170, 183, 184, 283, 288, 291, 292, 296], "secur": 296, "see": [40, 214, 288, 291, 293, 295, 296, 299], "select": [292, 296, 298], "self": [13, 30, 48, 65, 83, 100, 118, 134, 152, 171, 209, 215, 261, 272, 289], "sell": 287, "semant": 285, "sensit": 11, "separ": 290, "sequenc": [239, 270, 285], "sequenti": 296, "serial": [24, 40, 58, 77, 94, 112, 128, 146, 164], "serv": 299, "session": 283, "set": [10, 169, 235, 281, 290, 291, 292, 296, 297], "setcustomattribut": 290, "setstandardattribut": 290, "shall": [219, 287], "shape": 170, "sheet": 292, "sheeting_insid": 292, "sheeting_outsid": 292, "shift": [64, 99, 133, 151, 296], "shorten": 296, "should": [8, 14, 15, 29, 31, 32, 40, 64, 67, 99, 101, 102, 133, 136, 151, 153, 154, 169, 172, 182, 209, 216, 289, 296], "show": [285, 288], "side": [64, 99, 133, 151, 170, 187, 192, 292, 295, 296], "side_index": [187, 192], "sill": [292, 296], "similar": [13, 30, 48, 65, 83, 100, 118, 134, 152, 171, 215, 261, 272, 296], "simpl": [270, 285, 288], "simplesequencegener": 285, "sinc": [40, 239], "singl": [271, 289], "size": [291, 299], "slat": 170, "small_beam_butt": [47, 62, 296], "smaller": [47, 62, 170, 291], "so": [209, 287, 289], "softwar": [285, 287], "solid": [170, 297], "some": [209, 288, 299], "sourc": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 290, 291], "space": 292, "spatial": 179, "specialist": 285, "specif": [11, 40, 209, 229, 236, 285, 289, 291, 292, 296], "specifi": [227, 292], "stage": 285, "standard": [170, 292], "start": [170, 172, 181, 182, 184, 288, 291], "state": 190, "static": [22, 23, 38, 39, 56, 57, 74, 75, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162], "step": [260, 262, 270, 285, 289], "still": 10, "stock": [170, 291], "store": [40, 290, 291], "str": [8, 12, 20, 21, 25, 26, 27, 29, 36, 37, 41, 42, 43, 46, 54, 55, 59, 60, 61, 64, 71, 72, 78, 79, 80, 89, 90, 95, 96, 97, 106, 107, 113, 114, 115, 124, 125, 129, 130, 131, 140, 141, 147, 148, 149, 158, 159, 165, 166, 167, 181, 185, 186, 191, 193, 194, 198, 202, 206, 209, 218, 219, 227, 230, 231, 232, 234, 248, 249, 250, 259, 264, 265, 266, 267, 268, 271, 274, 275, 276, 277, 278], "straight": 291, "string": [8, 12, 13, 21, 27, 30, 37, 43, 46, 48, 55, 61, 64, 65, 72, 80, 83, 90, 97, 100, 107, 115, 118, 125, 131, 134, 141, 149, 152, 159, 167, 171, 186, 194, 198, 199, 215, 231, 250, 259, 261, 265, 268, 272, 275, 278, 290, 291, 296], "structur": [252, 253, 254, 282, 285, 288, 292, 297, 300], "stud": [170, 291, 292, 296], "stud_direct": 292, "stud_spac": 292, "studio": 283, "style": 288, "sub": 99, "subject": 287, "sublicens": 287, "sublim": 283, "substanti": 287, "subtract": 297, "summaris": 296, "support": [271, 282, 283], "suppos": 8, "surfac": [192, 202, 289, 295], "swiss": 282, "system": [170, 291], "t": [99, 117, 133, 151, 298], "take": [13, 30, 48, 65, 83, 100, 118, 134, 152, 171, 215, 261, 272, 289, 300], "tbuttjoint": [40, 284, 285], "termin": [198, 199], "text": [283, 294], "textur": [288, 299], "thalflapjoint": 285, "than": [18, 25, 34, 41, 52, 59, 69, 78, 87, 95, 104, 113, 122, 129, 138, 147, 156, 165, 191, 248, 266, 276], "thei": [11, 296, 300], "them": [18, 34, 52, 69, 82, 87, 104, 122, 138, 156, 209, 235, 283, 289, 290, 296], "thi": [8, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 44, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 81, 82, 83, 84, 85, 86, 87, 89, 90, 92, 93, 98, 100, 101, 102, 103, 104, 106, 107, 109, 110, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 168, 169, 170, 171, 172, 179, 180, 182, 185, 186, 188, 197, 202, 204, 205, 208, 209, 211, 213, 214, 215, 219, 226, 230, 231, 232, 234, 239, 242, 244, 246, 253, 254, 256, 257, 261, 263, 264, 265, 269, 271, 272, 273, 274, 275, 280, 281, 283, 287, 289, 290, 292, 296, 300], "thick": 292, "third": 296, "three": [296, 300], "through": [64, 99, 133, 151, 182, 282, 296], "tilt": 296, "timber": [170, 198, 206, 214, 282, 288, 291, 292, 294, 298, 300], "timberassembli": 284, "timberel": [170, 219], "timbermodel": [18, 34, 52, 69, 87, 104, 122, 138, 156, 285], "titl": 282, "todo": [182, 219, 232, 234, 247, 296], "togeth": [18, 34, 52, 69, 87, 104, 122, 138, 156, 291], "tol": 11, "toler": [11, 297], "tool": [9, 285, 288, 298, 299], "top": [12, 24, 202, 288, 296], "topo_i": 45, "topo_l": [45, 46], "topo_t": [45, 46], "topo_unknown": [45, 46], "topo_x": [45, 46], "topologi": [9, 11, 12, 18, 34, 45, 46, 47, 52, 64, 69, 82, 87, 104, 117, 122, 133, 138, 151, 156, 214, 247, 296, 297, 300], "tort": 287, "total": 214, "touch": 10, "transform": [179, 243, 244, 245, 246, 252, 254, 255, 256], "translat": [243, 244, 245, 246], "tree": [10, 169, 216], "trim": [47, 50, 64, 82, 85, 117, 120, 133, 151, 297], "trimfeatur": 295, "true": [10, 17, 22, 23, 25, 26, 27, 33, 38, 39, 41, 42, 43, 47, 51, 56, 57, 59, 60, 61, 62, 64, 68, 74, 75, 78, 79, 80, 86, 92, 93, 95, 96, 97, 99, 103, 109, 110, 113, 114, 115, 121, 126, 127, 129, 130, 131, 133, 137, 143, 144, 147, 148, 149, 151, 155, 161, 162, 165, 166, 167, 177, 180, 182, 191, 193, 194, 219, 226, 233, 234, 235, 248, 249, 250, 263, 266, 267, 268, 273, 276, 277, 278, 291, 292, 294, 296, 297], "try": 8, "tupl": [11, 22, 23, 29, 38, 39, 56, 57, 74, 75, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162, 170, 182, 220], "two": [8, 11, 12, 18, 29, 34, 47, 52, 64, 69, 82, 87, 104, 122, 138, 156, 181, 220, 235, 241, 296], "txt": 286, "type": [7, 11, 12, 13, 17, 20, 21, 28, 30, 33, 36, 37, 44, 47, 48, 51, 54, 55, 63, 64, 65, 68, 71, 72, 81, 82, 83, 86, 89, 90, 98, 99, 100, 103, 106, 107, 116, 117, 118, 121, 124, 125, 132, 133, 134, 137, 140, 141, 150, 151, 152, 155, 158, 159, 168, 171, 180, 185, 186, 197, 201, 202, 205, 209, 215, 226, 229, 230, 231, 257, 258, 261, 263, 264, 265, 269, 271, 272, 273, 274, 275, 280, 285, 289, 292, 300], "typeerror": [20, 21, 36, 37, 54, 55, 71, 72, 89, 90, 106, 107, 124, 125, 140, 141, 158, 159, 185, 186, 230, 231, 264, 265, 274, 275], "typic": [209, 271, 289], "unchang": 296, "under": [216, 217], "underscor": 290, "uniqu": [29, 170, 227], "unit": [11, 169, 182], "unlik": 296, "updaterefobj": 291, "upon": 285, "upper": 296, "upstream": [219, 232, 234], "url": 282, "us": [7, 8, 10, 11, 12, 13, 16, 25, 28, 29, 30, 41, 44, 46, 47, 48, 59, 63, 64, 65, 78, 81, 82, 83, 95, 98, 99, 100, 113, 116, 117, 118, 129, 132, 133, 134, 147, 150, 151, 152, 165, 168, 169, 171, 182, 191, 197, 198, 205, 215, 219, 247, 248, 252, 253, 254, 255, 256, 257, 259, 261, 266, 269, 271, 272, 276, 280, 281, 282, 285, 287, 288, 289, 290, 291, 292, 294, 295, 296, 298, 299], "user": [290, 292], "usual": [13, 30, 48, 65, 83, 100, 118, 134, 152, 170, 171, 215, 261, 272], "util": [285, 288], "v1": [25, 41, 59, 78, 95, 113, 129, 147, 165, 191, 248, 266, 276], "v2": [25, 41, 59, 78, 95, 113, 129, 147, 165, 191, 248, 266, 276], "v3": [25, 41, 59, 78, 95, 113, 129, 147, 165, 191, 248, 266, 276], "v7": 286, "valid": [28, 44, 63, 81, 98, 116, 132, 150, 168, 197, 257, 269, 280], "valu": [46, 64, 99, 133, 151, 169, 170, 259, 290], "valueerror": [18, 34, 52, 69, 87, 104, 122, 138, 156, 216, 219, 223], "variabl": 296, "vector": [183, 184, 243, 244, 255, 256, 285, 291, 292], "verifi": [18, 34, 52, 69, 87, 104, 122, 138, 156, 182, 236], "version": [25, 41, 59, 78, 95, 113, 129, 147, 165, 191, 248, 266, 276, 286], "vertex_attribut": [25, 41, 59, 78, 95, 113, 129, 147, 165, 191, 248, 266, 276], "vertex_sampl": [25, 41, 59, 78, 95, 113, 129, 147, 165, 191, 248, 266, 276], "vertic": [291, 296], "via": 285, "visual": [8, 198, 199, 260, 271, 283], "visualis": 297, "vocabulari": 292, "volum": 214, "wa": [8, 14, 15, 31, 32, 67, 101, 102, 136, 153, 154], "wai": 283, "wall": [214, 219, 292], "wall1": 219, "wall1_group": 219, "warranti": 287, "well": [172, 219], "were": [8, 11, 29, 290], "when": [10, 13, 30, 48, 49, 50, 65, 66, 83, 84, 85, 100, 118, 119, 120, 134, 135, 152, 171, 172, 215, 261, 272, 290, 296], "whenev": [14, 15, 31, 32, 67, 101, 102, 136, 153, 154], "where": [289, 291, 294, 296, 299], "whether": [16, 271, 287], "which": [8, 10, 11, 12, 16, 18, 22, 23, 29, 34, 38, 39, 47, 52, 56, 57, 64, 69, 74, 75, 82, 87, 92, 93, 104, 109, 110, 117, 122, 126, 127, 133, 138, 143, 144, 151, 156, 161, 162, 169, 172, 181, 182, 188, 202, 209, 218, 219, 258, 260, 271, 289, 291, 292, 297], "while": [8, 296, 298], "whitespac": [26, 27, 42, 43, 60, 61, 79, 80, 96, 97, 114, 115, 130, 131, 148, 149, 166, 167, 193, 194, 249, 250, 267, 268, 277, 278], "whom": 287, "whose": [22, 23, 38, 39, 56, 57, 74, 75, 92, 93, 109, 110, 126, 127, 143, 144, 161, 162], "whould": [18, 34, 52, 69, 87, 104, 122, 138, 156], "wide": 170, "width": [170, 183, 184, 284, 290, 291, 292], "within": [11, 271, 291], "without": [26, 27, 42, 43, 60, 61, 64, 79, 80, 96, 97, 99, 114, 115, 130, 131, 133, 148, 149, 151, 166, 167, 193, 194, 249, 250, 267, 268, 277, 278, 287, 291], "wood": 170, "work": [282, 292], "workflow": [285, 288, 290, 291], "world": [179, 291, 292], "worldx": [183, 184], "worldxi": [219, 284], "worldz": [183, 184], "write": [290, 291], "written": 285, "x": [99, 151, 170, 245, 246, 291, 298, 299], "xhalflapjoint": 285, "xmax": 170, "xmin": 170, "xml": [198, 199, 294], "y": [170, 245, 246, 291, 299], "ye": 286, "year": 282, "yet": 296, "yield": [228, 237, 238], "ymax": 170, "ymin": 170, "you": [282, 288, 292, 296, 300], "your": 282, "yourgithub_usernam": 286, "z": [25, 41, 59, 78, 95, 113, 129, 147, 165, 170, 183, 184, 191, 243, 244, 245, 246, 248, 266, 276, 291, 292, 295, 299], "z_vector": [183, 184], "zenodo": 282, "zero": 292, "zmax": 170, "zmin": 170, "zurich": [282, 285], "zvector": [290, 291]}, "titles": ["API Reference", "compas_timber.connections", "compas_timber.elements", "compas_timber.fabrication", "compas_timber.ghpython", "compas_timber.model", "compas_timber.planning", "rhino", "BeamJoinningError", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "FrenchRidgeLapJoint", "FrenchRidgeLapJoint.ToString", "FrenchRidgeLapJoint.add_extensions", "FrenchRidgeLapJoint.add_features", "FrenchRidgeLapJoint.check_geometry", "FrenchRidgeLapJoint.copy", "FrenchRidgeLapJoint.create", "FrenchRidgeLapJoint.element_count_complies", "FrenchRidgeLapJoint.from_json", "FrenchRidgeLapJoint.from_jsonstring", "FrenchRidgeLapJoint.get_face_most_ortho_to_beam", "FrenchRidgeLapJoint.get_face_most_towards_beam", "FrenchRidgeLapJoint.restore_beams_from_keys", "FrenchRidgeLapJoint.sha256", "FrenchRidgeLapJoint.to_json", "FrenchRidgeLapJoint.to_jsonstring", "FrenchRidgeLapJoint.validate_data", "Joint", "Joint.ToString", "Joint.add_extensions", "Joint.add_features", "Joint.copy", "Joint.create", "Joint.element_count_complies", "Joint.from_json", "Joint.from_jsonstring", "Joint.get_face_most_ortho_to_beam", "Joint.get_face_most_towards_beam", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_json", "Joint.to_jsonstring", "Joint.validate_data", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_extensions", "LButtJoint.add_features", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.element_count_complies", "LButtJoint.from_json", "LButtJoint.from_jsonstring", "LButtJoint.get_face_most_ortho_to_beam", "LButtJoint.get_face_most_towards_beam", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.to_json", "LButtJoint.to_jsonstring", "LButtJoint.update_beam_roles", "LButtJoint.validate_data", "LHalfLapJoint", "LHalfLapJoint.ToString", "LHalfLapJoint.add_extensions", "LHalfLapJoint.add_features", "LHalfLapJoint.copy", "LHalfLapJoint.create", "LHalfLapJoint.element_count_complies", "LHalfLapJoint.from_json", "LHalfLapJoint.from_jsonstring", "LHalfLapJoint.get_cross_cutting_frame", "LHalfLapJoint.get_face_most_ortho_to_beam", "LHalfLapJoint.get_face_most_towards_beam", "LHalfLapJoint.get_main_cutting_frame", "LHalfLapJoint.restore_beams_from_keys", "LHalfLapJoint.sha256", "LHalfLapJoint.to_json", "LHalfLapJoint.to_jsonstring", "LHalfLapJoint.validate_data", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_extensions", "LMiterJoint.add_features", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.element_count_complies", "LMiterJoint.from_json", "LMiterJoint.from_jsonstring", "LMiterJoint.get_cutting_planes", "LMiterJoint.get_face_most_ortho_to_beam", "LMiterJoint.get_face_most_towards_beam", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_json", "LMiterJoint.to_jsonstring", "LMiterJoint.validate_data", "LapJoint", "LapJoint.ToString", "LapJoint.add_extensions", "LapJoint.add_features", "LapJoint.copy", "LapJoint.create", "LapJoint.element_count_complies", "LapJoint.from_json", "LapJoint.from_jsonstring", "LapJoint.get_cross_cutting_frame", "LapJoint.get_face_most_ortho_to_beam", "LapJoint.get_face_most_towards_beam", "LapJoint.get_main_cutting_frame", "LapJoint.restore_beams_from_keys", "LapJoint.sha256", "LapJoint.to_json", "LapJoint.to_jsonstring", "LapJoint.validate_data", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_extensions", "TButtJoint.add_features", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.element_count_complies", "TButtJoint.from_json", "TButtJoint.from_jsonstring", "TButtJoint.get_face_most_ortho_to_beam", "TButtJoint.get_face_most_towards_beam", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.to_json", "TButtJoint.to_jsonstring", "TButtJoint.validate_data", "THalfLapJoint", "THalfLapJoint.ToString", "THalfLapJoint.add_extensions", "THalfLapJoint.add_features", "THalfLapJoint.copy", "THalfLapJoint.create", "THalfLapJoint.element_count_complies", "THalfLapJoint.from_json", "THalfLapJoint.from_jsonstring", "THalfLapJoint.get_cross_cutting_frame", "THalfLapJoint.get_face_most_ortho_to_beam", "THalfLapJoint.get_face_most_towards_beam", "THalfLapJoint.get_main_cutting_frame", "THalfLapJoint.restore_beams_from_keys", "THalfLapJoint.sha256", "THalfLapJoint.to_json", "THalfLapJoint.to_jsonstring", "THalfLapJoint.validate_data", "XHalfLapJoint", "XHalfLapJoint.ToString", "XHalfLapJoint.add_extensions", "XHalfLapJoint.add_features", "XHalfLapJoint.copy", "XHalfLapJoint.create", "XHalfLapJoint.element_count_complies", "XHalfLapJoint.from_json", "XHalfLapJoint.from_jsonstring", "XHalfLapJoint.get_cross_cutting_frame", "XHalfLapJoint.get_face_most_ortho_to_beam", "XHalfLapJoint.get_face_most_towards_beam", "XHalfLapJoint.get_main_cutting_frame", "XHalfLapJoint.restore_beams_from_keys", "XHalfLapJoint.sha256", "XHalfLapJoint.to_json", "XHalfLapJoint.to_jsonstring", "XHalfLapJoint.validate_data", "find_neighboring_beams", "Beam", "Beam.ToString", "Beam.add_blank_extension", "Beam.add_feature", "Beam.add_features", "Beam.compute_aabb", "Beam.compute_collision_mesh", "Beam.compute_geometry", "Beam.compute_obb", "Beam.compute_worldtransformation", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_endpoints", "Beam.from_json", "Beam.from_jsonstring", "Beam.opposing_side_index", "Beam.remove_blank_extension", "Beam.remove_features", "Beam.reset", "Beam.sha256", "Beam.side_as_surface", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transformed", "Beam.validate_data", "BTLx", "BTLx.btlx_string", "BTLx.process_model", "BTLx.register_joint", "BTLxFrenchRidgeLap", "BTLxFrenchRidgeLap.create_process", "BTLxFrenchRidgeLap.get_params", "BTLxFrenchRidgeLap.process_joints", "BTLxJackCut", "BTLxJackCut.create_process", "BTLxJackCut.generate_process", "BTLxProcess", "FrenchRidgeFactory", "FrenchRidgeFactory.apply_processings", "LMiterFactory", "LMiterFactory.apply_processings", "TimberModel", "TimberModel.ToString", "TimberModel.add_element", "TimberModel.add_elements", "TimberModel.add_group", "TimberModel.add_group_element", "TimberModel.add_interaction", "TimberModel.add_joint", "TimberModel.add_material", "TimberModel.assign_material", "TimberModel.compute_aabb", "TimberModel.compute_obb", "TimberModel.copy", "TimberModel.element_by_guid", "TimberModel.elements", "TimberModel.elements_connected_by", "TimberModel.from_json", "TimberModel.from_jsonstring", "TimberModel.get_elements_in_group", "TimberModel.has_element", "TimberModel.has_group", "TimberModel.has_interaction", "TimberModel.has_material", "TimberModel.interactions", "TimberModel.materials", "TimberModel.process_joinery", "TimberModel.remove_element", "TimberModel.remove_interaction", "TimberModel.remove_joint", "TimberModel.rotate", "TimberModel.rotated", "TimberModel.scale", "TimberModel.scaled", "TimberModel.set_topologies", "TimberModel.sha256", "TimberModel.to_json", "TimberModel.to_jsonstring", "TimberModel.transform", "TimberModel.transform_numpy", "TimberModel.transformed", "TimberModel.transformed_numpy", "TimberModel.translate", "TimberModel.translated", "TimberModel.validate_data", "Actor", "Actor.get_name", "BuildingPlan", "BuildingPlan.ToString", "BuildingPlan.add_step", "BuildingPlan.copy", "BuildingPlan.from_json", "BuildingPlan.from_jsonstring", "BuildingPlan.sha256", "BuildingPlan.to_json", "BuildingPlan.to_jsonstring", "BuildingPlan.validate_data", "SimpleSequenceGenerator", "Step", "Step.ToString", "Step.copy", "Step.from_json", "Step.from_jsonstring", "Step.sha256", "Step.to_json", "Step.to_jsonstring", "Step.transform", "Step.validate_data", "find_neighboring_beams", "Citing", "Examples", "Create Joint", "COMPAS Timber Documentation", "Installation", "License", "Grasshopper plugin", "BTLx Contribution Guide", "Attributes", "Beams", "Design", "Examples", "Fabrication", "Features", "Joint Rules", "Model", "Show", "Utils", "Workflow"], "titleterms": {"actor": [258, 259], "add_blank_extens": 172, "add_el": [216, 217], "add_extens": [14, 31, 49, 66, 84, 101, 119, 135, 153], "add_featur": [15, 32, 50, 67, 85, 102, 120, 136, 154, 173, 174], "add_group": 218, "add_group_el": 219, "add_interact": 220, "add_joint": 221, "add_materi": 222, "add_step": 262, "api": 0, "apply_process": [211, 213], "assembli": 283, "assign_materi": 223, "attribut": 290, "bake": 299, "beam": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 291, 292, 298], "beamjoinningerror": 8, "boxmap": 299, "brep": 295, "btlx": [198, 199, 200, 201, 289, 294], "btlx_string": 199, "btlxfrenchridgelap": [202, 203, 204, 205], "btlxjackcut": [206, 207, 208], "btlxprocess": 209, "buildingplan": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269], "butt": 296, "categori": 296, "check": 290, "check_geometri": 16, "cite": 282, "class": [1, 2, 3, 4, 5, 6], "compa": 285, "compas_timb": [1, 2, 3, 4, 5, 6], "compon": 296, "compute_aabb": [175, 224], "compute_collision_mesh": 176, "compute_geometri": 177, "compute_obb": [178, 225], "compute_worldtransform": 179, "conda": 286, "connect": 1, "connectionsolv": [9, 10, 11], "content": 285, "contribut": 289, "copi": [17, 33, 51, 68, 86, 103, 121, 137, 155, 180, 226, 263, 273], "creat": [18, 34, 52, 69, 87, 104, 122, 138, 156, 284], "create_process": [203, 207], "custom": [290, 292], "decomposebeam": 291, "default": 296, "delet": 290, "depend": 285, "design": 292, "develop": 286, "dimens": 292, "direct": 296, "document": 285, "drill": 295, "element": [2, 228], "element_by_guid": 227, "element_count_compli": [19, 35, 53, 70, 88, 105, 123, 139, 157], "elements_connected_bi": 229, "endpoint_closest_to_point": 181, "error": 298, "exampl": [283, 293], "except": 1, "extension_to_plan": 182, "fabric": [3, 294], "face": 298, "featur": [295, 298], "find_intersecting_pair": 10, "find_neighboring_beam": [169, 281], "find_topologi": 11, "findbeambyrhinoguid": 291, "french": 296, "frenchridgefactori": [210, 211], "frenchridgelapjoint": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "from_centerlin": 183, "from_endpoint": 184, "from_json": [20, 36, 54, 71, 89, 106, 124, 140, 158, 185, 230, 264, 274], "from_jsonstr": [21, 37, 55, 72, 90, 107, 125, 141, 159, 186, 231, 265, 275], "function": 1, "generate_process": 208, "get_cross_cutting_fram": [73, 108, 142, 160], "get_cutting_plan": 91, "get_elements_in_group": 232, "get_face_most_ortho_to_beam": [22, 38, 56, 74, 92, 109, 126, 143, 161], "get_face_most_towards_beam": [23, 39, 57, 75, 93, 110, 127, 144, 162], "get_main_cutting_fram": [76, 111, 145, 163], "get_nam": [46, 259], "get_param": 204, "ghpython": 4, "grasshopp": 288, "guid": 289, "halflap": 296, "has_el": 233, "has_group": 234, "has_interact": 235, "has_materi": 236, "hole": 295, "index": 298, "indic": 285, "instal": 286, "interact": 237, "join": 298, "joint": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 284, 296, 298], "jointtopologi": [45, 46], "l": 296, "lap": 296, "lapjoint": [99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "lbuttjoint": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "lhalflapjoint": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "licens": 287, "lmiterfactori": [212, 213], "lmiterjoint": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "materi": 238, "miter": 296, "model": [5, 292, 296, 297, 298], "opposing_side_index": 187, "option": 292, "overrid": 296, "packag": 0, "plan": 6, "plugin": [7, 288], "process_joineri": 239, "process_joint": 205, "process_model": 200, "refer": 0, "register_joint": 201, "remove_blank_extens": 188, "remove_el": 240, "remove_featur": 189, "remove_interact": 241, "remove_joint": 242, "reset": 190, "restore_beams_from_kei": [24, 40, 58, 77, 94, 112, 128, 146, 164], "rhino": 7, "ridg": 296, "rotat": [243, 244], "rule": 296, "scale": [245, 246], "set_topologi": 247, "sha256": [25, 41, 59, 78, 95, 113, 129, 147, 165, 191, 248, 266, 276], "show": 298, "side_as_surfac": 192, "simplesequencegener": 270, "stabl": 286, "standard": 290, "step": [271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "subtract": 295, "summari": 296, "surfac": [292, 296, 298], "t": 296, "tabl": [285, 296], "tbuttjoint": [117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "thalflapjoint": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "timber": [283, 285], "timbermodel": [214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257], "to_json": [26, 42, 60, 79, 96, 114, 130, 148, 166, 193, 249, 267, 277], "to_jsonstr": [27, 43, 61, 80, 97, 115, 131, 149, 167, 194, 250, 268, 278], "topolog": 296, "topologi": 298, "tostr": [13, 30, 48, 65, 83, 100, 118, 134, 152, 171, 215, 261, 272], "transform": [195, 196, 251, 253, 279], "transform_numpi": 252, "transformed_numpi": 254, "translat": [255, 256], "trim": 295, "type": [296, 298], "update_beam_rol": 62, "util": 299, "validate_data": [28, 44, 63, 81, 98, 116, 132, 150, 168, 197, 257, 269, 280], "workflow": 300, "write": 294, "x": 296, "xhalflapjoint": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168]}})