Search.setIndex({"alltitles": {"API Reference": [[0, "api-reference"]], "Actor": [[251, "actor"]], "Actor.get_name": [[252, "actor-get-name"]], "Assembly": [[283, "assembly"]], "Attributes": [[284, "attributes"]], "BTLx": [[189, "btlx"]], "BTLx Contribution Guide": [[282, "btlx-contribution-guide"]], "BTLx.btlx_string": [[190, "btlx-btlx-string"]], "BTLx.process_model": [[191, "btlx-process-model"]], "BTLx.register_joint": [[192, "btlx-register-joint"]], "BTLxFrenchRidgeLap": [[193, "btlxfrenchridgelap"]], "BTLxFrenchRidgeLap.create_process": [[194, "btlxfrenchridgelap-create-process"]], "BTLxFrenchRidgeLap.get_params": [[195, "btlxfrenchridgelap-get-params"]], "BTLxFrenchRidgeLap.process_joints": [[196, "btlxfrenchridgelap-process-joints"]], "BTLxJackCut": [[197, "btlxjackcut"]], "BTLxJackCut.create_process": [[198, "btlxjackcut-create-process"]], "BTLxJackCut.generate_process": [[199, "btlxjackcut-generate-process"]], "BTLxProcess": [[200, "btlxprocess"]], "Bake with BoxMap": [[291, "bake-with-boxmap"]], "Beam": [[164, "beam"], [285, "beam"]], "Beam.ToString": [[165, "beam-tostring"]], "Beam.add_blank_extension": [[166, "beam-add-blank-extension"]], "Beam.add_feature": [[167, "beam-add-feature"]], "Beam.add_features": [[168, "beam-add-features"]], "Beam.compute_aabb": [[169, "beam-compute-aabb"]], "Beam.compute_collision_mesh": [[170, "beam-compute-collision-mesh"]], "Beam.compute_geometry": [[171, "beam-compute-geometry"]], "Beam.compute_obb": [[172, "beam-compute-obb"]], "Beam.compute_worldtransformation": [[173, "beam-compute-worldtransformation"]], "Beam.copy": [[174, "beam-copy"]], "Beam.endpoint_closest_to_point": [[175, "beam-endpoint-closest-to-point"]], "Beam.extension_to_plane": [[176, "beam-extension-to-plane"]], "Beam.from_centerline": [[177, "beam-from-centerline"]], "Beam.from_endpoints": [[178, "beam-from-endpoints"]], "Beam.from_json": [[179, "beam-from-json"]], "Beam.from_jsonstring": [[180, "beam-from-jsonstring"]], "Beam.remove_blank_extension": [[181, "beam-remove-blank-extension"]], "Beam.remove_features": [[182, "beam-remove-features"]], "Beam.sha256": [[183, "beam-sha256"]], "Beam.to_json": [[184, "beam-to-json"]], "Beam.to_jsonstring": [[185, "beam-to-jsonstring"]], "Beam.transform": [[186, "beam-transform"]], "Beam.transformed": [[187, "beam-transformed"]], "Beam.validate_data": [[188, "beam-validate-data"]], "BeamJoinningError": [[8, "beamjoinningerror"]], "BuildingPlan": [[253, "buildingplan"]], "BuildingPlan.ToString": [[254, "buildingplan-tostring"]], "BuildingPlan.add_step": [[255, "buildingplan-add-step"]], "BuildingPlan.copy": [[256, "buildingplan-copy"]], "BuildingPlan.from_json": [[257, "buildingplan-from-json"]], "BuildingPlan.from_jsonstring": [[258, "buildingplan-from-jsonstring"]], "BuildingPlan.sha256": [[259, "buildingplan-sha256"]], "BuildingPlan.to_json": [[260, "buildingplan-to-json"]], "BuildingPlan.to_jsonstring": [[261, "buildingplan-to-jsonstring"]], "BuildingPlan.validate_data": [[262, "buildingplan-validate-data"]], "COMPAS Timber Documentation": [[278, "compas-timber-documentation"]], "Citing": [[275, "citing"]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"]], "ConnectionSolver": [[9, "connectionsolver"]], "ConnectionSolver.find_intersecting_pairs": [[10, "connectionsolver-find-intersecting-pairs"]], "ConnectionSolver.find_topology": [[11, "connectionsolver-find-topology"]], "Create Joint": [[277, "create-joint"]], "Dependencies": [[278, "dependencies"]], "Development": [[279, "development"]], "Errors": [[290, "errors"]], "Examples": [[276, "examples"], [286, "examples"]], "Exceptions": [[1, "exceptions"]], "Features": [[287, "features"]], "FrenchRidgeFactory": [[201, "frenchridgefactory"]], "FrenchRidgeFactory.apply_processings": [[202, "frenchridgefactory-apply-processings"]], "FrenchRidgeLapJoint": [[12, "frenchridgelapjoint"]], "FrenchRidgeLapJoint.ToString": [[13, "frenchridgelapjoint-tostring"]], "FrenchRidgeLapJoint.add_features": [[14, "frenchridgelapjoint-add-features"]], "FrenchRidgeLapJoint.check_geometry": [[15, "frenchridgelapjoint-check-geometry"]], "FrenchRidgeLapJoint.copy": [[16, "frenchridgelapjoint-copy"]], "FrenchRidgeLapJoint.create": [[17, "frenchridgelapjoint-create"]], "FrenchRidgeLapJoint.from_json": [[18, "frenchridgelapjoint-from-json"]], "FrenchRidgeLapJoint.from_jsonstring": [[19, "frenchridgelapjoint-from-jsonstring"]], "FrenchRidgeLapJoint.get_face_most_ortho_to_beam": [[20, "frenchridgelapjoint-get-face-most-ortho-to-beam"]], "FrenchRidgeLapJoint.get_face_most_towards_beam": [[21, "frenchridgelapjoint-get-face-most-towards-beam"]], "FrenchRidgeLapJoint.restore_beams_from_keys": [[22, "frenchridgelapjoint-restore-beams-from-keys"]], "FrenchRidgeLapJoint.sha256": [[23, "frenchridgelapjoint-sha256"]], "FrenchRidgeLapJoint.to_json": [[24, "frenchridgelapjoint-to-json"]], "FrenchRidgeLapJoint.to_jsonstring": [[25, "frenchridgelapjoint-to-jsonstring"]], "FrenchRidgeLapJoint.validate_data": [[26, "frenchridgelapjoint-validate-data"]], "Functions": [[1, "functions"]], "Geometries": [[290, "geometries"]], "Grasshopper plugin": [[281, "grasshopper-plugin"]], "Indices and tables": [[278, "indices-and-tables"]], "Install with conda": [[279, "install-with-conda"]], "Installation": [[279, "installation"]], "Joint": [[27, "joint"]], "Joint Rules": [[289, "joint-rules"]], "Joint Topologies": [[288, "joint-topologies"]], "Joint Topologies and Joint Types": [[288, "id1"]], "Joint Types": [[288, "joint-types"]], "Joint.ToString": [[28, "joint-tostring"]], "Joint.add_features": [[29, "joint-add-features"]], "Joint.copy": [[30, "joint-copy"]], "Joint.create": [[31, "joint-create"]], "Joint.from_json": [[32, "joint-from-json"]], "Joint.from_jsonstring": [[33, "joint-from-jsonstring"]], "Joint.get_face_most_ortho_to_beam": [[34, "joint-get-face-most-ortho-to-beam"]], "Joint.get_face_most_towards_beam": [[35, "joint-get-face-most-towards-beam"]], "Joint.restore_beams_from_keys": [[36, "joint-restore-beams-from-keys"]], "Joint.sha256": [[37, "joint-sha256"]], "Joint.to_json": [[38, "joint-to-json"]], "Joint.to_jsonstring": [[39, "joint-to-jsonstring"]], "Joint.validate_data": [[40, "joint-validate-data"]], "JointTopology": [[41, "jointtopology"]], "JointTopology.get_name": [[42, "jointtopology-get-name"]], "Joints": [[288, "joints"]], "Joints for L Topologies": [[288, "joints-for-l-topologies"]], "Joints for T Topologies": [[288, "joints-for-t-topologies"]], "Joints for X Topologies": [[288, "joints-for-x-topologies"]], "LButtFactory": [[203, "lbuttfactory"]], "LButtFactory.apply_processings": [[204, "lbuttfactory-apply-processings"]], "LButtJoint": [[43, "lbuttjoint"]], "LButtJoint.ToString": [[44, "lbuttjoint-tostring"]], "LButtJoint.add_features": [[45, "lbuttjoint-add-features"]], "LButtJoint.back_surface_main": [[46, "lbuttjoint-back-surface-main"]], "LButtJoint.calc_params_birdsmouth": [[47, "lbuttjoint-calc-params-birdsmouth"]], "LButtJoint.copy": [[48, "lbuttjoint-copy"]], "LButtJoint.create": [[49, "lbuttjoint-create"]], "LButtJoint.from_json": [[50, "lbuttjoint-from-json"]], "LButtJoint.from_jsonstring": [[51, "lbuttjoint-from-jsonstring"]], "LButtJoint.front_back_surface_main": [[52, "lbuttjoint-front-back-surface-main"]], "LButtJoint.get_cross_cutting_plane": [[53, "lbuttjoint-get-cross-cutting-plane"]], "LButtJoint.get_face_most_ortho_to_beam": [[54, "lbuttjoint-get-face-most-ortho-to-beam"]], "LButtJoint.get_face_most_towards_beam": [[55, "lbuttjoint-get-face-most-towards-beam"]], "LButtJoint.get_main_cutting_plane": [[56, "lbuttjoint-get-main-cutting-plane"]], "LButtJoint.restore_beams_from_keys": [[57, "lbuttjoint-restore-beams-from-keys"]], "LButtJoint.sha256": [[58, "lbuttjoint-sha256"]], "LButtJoint.side_surfaces_cross": [[59, "lbuttjoint-side-surfaces-cross"]], "LButtJoint.subtraction_volume": [[60, "lbuttjoint-subtraction-volume"]], "LButtJoint.to_json": [[61, "lbuttjoint-to-json"]], "LButtJoint.to_jsonstring": [[62, "lbuttjoint-to-jsonstring"]], "LButtJoint.validate_data": [[63, "lbuttjoint-validate-data"]], "LHalfLapJoint": [[64, "lhalflapjoint"]], "LHalfLapJoint.ToString": [[65, "lhalflapjoint-tostring"]], "LHalfLapJoint.add_features": [[66, "lhalflapjoint-add-features"]], "LHalfLapJoint.copy": [[67, "lhalflapjoint-copy"]], "LHalfLapJoint.create": [[68, "lhalflapjoint-create"]], "LHalfLapJoint.from_json": [[69, "lhalflapjoint-from-json"]], "LHalfLapJoint.from_jsonstring": [[70, "lhalflapjoint-from-jsonstring"]], "LHalfLapJoint.get_cross_cutting_frame": [[71, "lhalflapjoint-get-cross-cutting-frame"]], "LHalfLapJoint.get_face_most_ortho_to_beam": [[72, "lhalflapjoint-get-face-most-ortho-to-beam"]], "LHalfLapJoint.get_face_most_towards_beam": [[73, "lhalflapjoint-get-face-most-towards-beam"]], "LHalfLapJoint.get_main_cutting_frame": [[74, "lhalflapjoint-get-main-cutting-frame"]], "LHalfLapJoint.restore_beams_from_keys": [[75, "lhalflapjoint-restore-beams-from-keys"]], "LHalfLapJoint.sha256": [[76, "lhalflapjoint-sha256"]], "LHalfLapJoint.to_json": [[77, "lhalflapjoint-to-json"]], "LHalfLapJoint.to_jsonstring": [[78, "lhalflapjoint-to-jsonstring"]], "LHalfLapJoint.validate_data": [[79, "lhalflapjoint-validate-data"]], "LMiterFactory": [[205, "lmiterfactory"]], "LMiterFactory.apply_processings": [[206, "lmiterfactory-apply-processings"]], "LMiterJoint": [[80, "lmiterjoint"]], "LMiterJoint.ToString": [[81, "lmiterjoint-tostring"]], "LMiterJoint.add_features": [[82, "lmiterjoint-add-features"]], "LMiterJoint.copy": [[83, "lmiterjoint-copy"]], "LMiterJoint.create": [[84, "lmiterjoint-create"]], "LMiterJoint.from_json": [[85, "lmiterjoint-from-json"]], "LMiterJoint.from_jsonstring": [[86, "lmiterjoint-from-jsonstring"]], "LMiterJoint.get_cutting_planes": [[87, "lmiterjoint-get-cutting-planes"]], "LMiterJoint.get_face_most_ortho_to_beam": [[88, "lmiterjoint-get-face-most-ortho-to-beam"]], "LMiterJoint.get_face_most_towards_beam": [[89, "lmiterjoint-get-face-most-towards-beam"]], "LMiterJoint.restore_beams_from_keys": [[90, "lmiterjoint-restore-beams-from-keys"]], "LMiterJoint.sha256": [[91, "lmiterjoint-sha256"]], "LMiterJoint.to_json": [[92, "lmiterjoint-to-json"]], "LMiterJoint.to_jsonstring": [[93, "lmiterjoint-to-jsonstring"]], "LMiterJoint.validate_data": [[94, "lmiterjoint-validate-data"]], "LapJoint": [[95, "lapjoint"]], "LapJoint.ToString": [[96, "lapjoint-tostring"]], "LapJoint.add_features": [[97, "lapjoint-add-features"]], "LapJoint.copy": [[98, "lapjoint-copy"]], "LapJoint.create": [[99, "lapjoint-create"]], "LapJoint.from_json": [[100, "lapjoint-from-json"]], "LapJoint.from_jsonstring": [[101, "lapjoint-from-jsonstring"]], "LapJoint.get_cross_cutting_frame": [[102, "lapjoint-get-cross-cutting-frame"]], "LapJoint.get_face_most_ortho_to_beam": [[103, "lapjoint-get-face-most-ortho-to-beam"]], "LapJoint.get_face_most_towards_beam": [[104, "lapjoint-get-face-most-towards-beam"]], "LapJoint.get_main_cutting_frame": [[105, "lapjoint-get-main-cutting-frame"]], "LapJoint.restore_beams_from_keys": [[106, "lapjoint-restore-beams-from-keys"]], "LapJoint.sha256": [[107, "lapjoint-sha256"]], "LapJoint.to_json": [[108, "lapjoint-to-json"]], "LapJoint.to_jsonstring": [[109, "lapjoint-to-jsonstring"]], "LapJoint.validate_data": [[110, "lapjoint-validate-data"]], "License": [[280, "license"]], "Packages": [[0, "packages"]], "Parameters:": [[47, "parameters"], [115, "parameters"]], "Plugins": [[7, "plugins"]], "Show": [[290, "show"]], "SimpleSequenceGenerator": [[263, "simplesequencegenerator"]], "Stable": [[279, "stable"]], "Step": [[264, "step"]], "Step.ToString": [[265, "step-tostring"]], "Step.copy": [[266, "step-copy"]], "Step.from_json": [[267, "step-from-json"]], "Step.from_jsonstring": [[268, "step-from-jsonstring"]], "Step.sha256": [[269, "step-sha256"]], "Step.to_json": [[270, "step-to-json"]], "Step.to_jsonstring": [[271, "step-to-jsonstring"]], "Step.transform": [[272, "step-transform"]], "Step.validate_data": [[273, "step-validate-data"]], "Summary Table": [[288, "summary-table"]], "TButtFactory": [[207, "tbuttfactory"]], "TButtFactory.apply_processings": [[208, "tbuttfactory-apply-processings"]], "TButtJoint": [[111, "tbuttjoint"]], "TButtJoint.ToString": [[112, "tbuttjoint-tostring"]], "TButtJoint.add_features": [[113, "tbuttjoint-add-features"]], "TButtJoint.back_surface_main": [[114, "tbuttjoint-back-surface-main"]], "TButtJoint.calc_params_birdsmouth": [[115, "tbuttjoint-calc-params-birdsmouth"]], "TButtJoint.copy": [[116, "tbuttjoint-copy"]], "TButtJoint.create": [[117, "tbuttjoint-create"]], "TButtJoint.from_json": [[118, "tbuttjoint-from-json"]], "TButtJoint.from_jsonstring": [[119, "tbuttjoint-from-jsonstring"]], "TButtJoint.front_back_surface_main": [[120, "tbuttjoint-front-back-surface-main"]], "TButtJoint.get_face_most_ortho_to_beam": [[121, "tbuttjoint-get-face-most-ortho-to-beam"]], "TButtJoint.get_face_most_towards_beam": [[122, "tbuttjoint-get-face-most-towards-beam"]], "TButtJoint.get_main_cutting_plane": [[123, "tbuttjoint-get-main-cutting-plane"]], "TButtJoint.restore_beams_from_keys": [[124, "tbuttjoint-restore-beams-from-keys"]], "TButtJoint.sha256": [[125, "tbuttjoint-sha256"]], "TButtJoint.side_surfaces_cross": [[126, "tbuttjoint-side-surfaces-cross"]], "TButtJoint.subtraction_volume": [[127, "tbuttjoint-subtraction-volume"]], "TButtJoint.to_json": [[128, "tbuttjoint-to-json"]], "TButtJoint.to_jsonstring": [[129, "tbuttjoint-to-jsonstring"]], "TButtJoint.validate_data": [[130, "tbuttjoint-validate-data"]], "THalfLapJoint": [[131, "thalflapjoint"]], "THalfLapJoint.ToString": [[132, "thalflapjoint-tostring"]], "THalfLapJoint.add_features": [[133, "thalflapjoint-add-features"]], "THalfLapJoint.copy": [[134, "thalflapjoint-copy"]], "THalfLapJoint.create": [[135, "thalflapjoint-create"]], "THalfLapJoint.from_json": [[136, "thalflapjoint-from-json"]], "THalfLapJoint.from_jsonstring": [[137, "thalflapjoint-from-jsonstring"]], "THalfLapJoint.get_cross_cutting_frame": [[138, "thalflapjoint-get-cross-cutting-frame"]], "THalfLapJoint.get_face_most_ortho_to_beam": [[139, "thalflapjoint-get-face-most-ortho-to-beam"]], "THalfLapJoint.get_face_most_towards_beam": [[140, "thalflapjoint-get-face-most-towards-beam"]], "THalfLapJoint.get_main_cutting_frame": [[141, "thalflapjoint-get-main-cutting-frame"]], "THalfLapJoint.restore_beams_from_keys": [[142, "thalflapjoint-restore-beams-from-keys"]], "THalfLapJoint.sha256": [[143, "thalflapjoint-sha256"]], "THalfLapJoint.to_json": [[144, "thalflapjoint-to-json"]], "THalfLapJoint.to_jsonstring": [[145, "thalflapjoint-to-jsonstring"]], "THalfLapJoint.validate_data": [[146, "thalflapjoint-validate-data"]], "Table of Contents": [[278, "table-of-contents"]], "Timber Assembly Examples": [[276, "timber-assembly-examples"]], "TimberModel": [[209, "timbermodel"]], "TimberModel.ToString": [[210, "timbermodel-tostring"]], "TimberModel.add_beam": [[211, "timbermodel-add-beam"]], "TimberModel.add_element": [[212, "timbermodel-add-element"]], "TimberModel.add_elements": [[213, "timbermodel-add-elements"]], "TimberModel.add_group": [[214, "timbermodel-add-group"]], "TimberModel.add_interaction": [[215, "timbermodel-add-interaction"]], "TimberModel.add_joint": [[216, "timbermodel-add-joint"]], "TimberModel.add_material": [[217, "timbermodel-add-material"]], "TimberModel.add_wall": [[218, "timbermodel-add-wall"]], "TimberModel.assign_material": [[219, "timbermodel-assign-material"]], "TimberModel.beam_by_guid": [[220, "timbermodel-beam-by-guid"]], "TimberModel.compute_aabb": [[221, "timbermodel-compute-aabb"]], "TimberModel.compute_obb": [[222, "timbermodel-compute-obb"]], "TimberModel.copy": [[223, "timbermodel-copy"]], "TimberModel.elements": [[224, "timbermodel-elements"]], "TimberModel.elements_connected_by": [[225, "timbermodel-elements-connected-by"]], "TimberModel.from_json": [[226, "timbermodel-from-json"]], "TimberModel.from_jsonstring": [[227, "timbermodel-from-jsonstring"]], "TimberModel.has_element": [[228, "timbermodel-has-element"]], "TimberModel.has_interaction": [[229, "timbermodel-has-interaction"]], "TimberModel.has_material": [[230, "timbermodel-has-material"]], "TimberModel.interactions": [[231, "timbermodel-interactions"]], "TimberModel.materials": [[232, "timbermodel-materials"]], "TimberModel.remove_element": [[233, "timbermodel-remove-element"]], "TimberModel.remove_interaction": [[234, "timbermodel-remove-interaction"]], "TimberModel.remove_joint": [[235, "timbermodel-remove-joint"]], "TimberModel.rotate": [[236, "timbermodel-rotate"]], "TimberModel.rotated": [[237, "timbermodel-rotated"]], "TimberModel.scale": [[238, "timbermodel-scale"]], "TimberModel.scaled": [[239, "timbermodel-scaled"]], "TimberModel.set_topologies": [[240, "timbermodel-set-topologies"]], "TimberModel.sha256": [[241, "timbermodel-sha256"]], "TimberModel.to_json": [[242, "timbermodel-to-json"]], "TimberModel.to_jsonstring": [[243, "timbermodel-to-jsonstring"]], "TimberModel.transform": [[244, "timbermodel-transform"]], "TimberModel.transform_numpy": [[245, "timbermodel-transform-numpy"]], "TimberModel.transformed": [[246, "timbermodel-transformed"]], "TimberModel.transformed_numpy": [[247, "timbermodel-transformed-numpy"]], "TimberModel.translate": [[248, "timbermodel-translate"]], "TimberModel.translated": [[249, "timbermodel-translated"]], "TimberModel.validate_data": [[250, "timbermodel-validate-data"]], "Types": [[290, "types"]], "Utils": [[291, "utils"]], "Visualisation": [[290, "visualisation"]], "Workflow": [[292, "workflow"]], "XHalfLapJoint": [[147, "xhalflapjoint"]], "XHalfLapJoint.ToString": [[148, "xhalflapjoint-tostring"]], "XHalfLapJoint.add_features": [[149, "xhalflapjoint-add-features"]], "XHalfLapJoint.copy": [[150, "xhalflapjoint-copy"]], "XHalfLapJoint.create": [[151, "xhalflapjoint-create"]], "XHalfLapJoint.from_json": [[152, "xhalflapjoint-from-json"]], "XHalfLapJoint.from_jsonstring": [[153, "xhalflapjoint-from-jsonstring"]], "XHalfLapJoint.get_cross_cutting_frame": [[154, "xhalflapjoint-get-cross-cutting-frame"]], "XHalfLapJoint.get_face_most_ortho_to_beam": [[155, "xhalflapjoint-get-face-most-ortho-to-beam"]], "XHalfLapJoint.get_face_most_towards_beam": [[156, "xhalflapjoint-get-face-most-towards-beam"]], "XHalfLapJoint.get_main_cutting_frame": [[157, "xhalflapjoint-get-main-cutting-frame"]], "XHalfLapJoint.restore_beams_from_keys": [[158, "xhalflapjoint-restore-beams-from-keys"]], "XHalfLapJoint.sha256": [[159, "xhalflapjoint-sha256"]], "XHalfLapJoint.to_json": [[160, "xhalflapjoint-to-json"]], "XHalfLapJoint.to_jsonstring": [[161, "xhalflapjoint-to-jsonstring"]], "XHalfLapJoint.validate_data": [[162, "xhalflapjoint-validate-data"]], "compas_timber.connections": [[1, "compas-timber-connections"]], "compas_timber.elements": [[2, "compas-timber-elements"]], "compas_timber.fabrication": [[3, "compas-timber-fabrication"]], "compas_timber.ghpython": [[4, "compas-timber-ghpython"]], "compas_timber.model": [[5, "compas-timber-model"]], "compas_timber.planning": [[6, "compas-timber-planning"]], "find_neighboring_beams": [[163, "find-neighboring-beams"], [274, "find-neighboring-beams"]], "rhino": [[7, "rhino"]]}, "docnames": ["api", "api/compas_timber.connections", "api/compas_timber.elements", "api/compas_timber.fabrication", "api/compas_timber.ghpython", "api/compas_timber.model", "api/compas_timber.planning", "api/compas_timber.rhino", "api/generated/compas_timber.connections.BeamJoinningError", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.FrenchRidgeLapJoint", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.ToString", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_features", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.check_geometry", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.copy", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.create", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_json", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.sha256", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_json", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.validate_data", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.from_jsonstring", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.to_jsonstring", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.back_surface_main", "api/generated/compas_timber.connections.LButtJoint.calc_params_birdsmouth", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring", "api/generated/compas_timber.connections.LButtJoint.front_back_surface_main", "api/generated/compas_timber.connections.LButtJoint.get_cross_cutting_plane", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LButtJoint.get_main_cutting_plane", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.side_surfaces_cross", "api/generated/compas_timber.connections.LButtJoint.subtraction_volume", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LHalfLapJoint", "api/generated/compas_timber.connections.LHalfLapJoint.ToString", "api/generated/compas_timber.connections.LHalfLapJoint.add_features", "api/generated/compas_timber.connections.LHalfLapJoint.copy", "api/generated/compas_timber.connections.LHalfLapJoint.create", "api/generated/compas_timber.connections.LHalfLapJoint.from_json", "api/generated/compas_timber.connections.LHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LHalfLapJoint.sha256", "api/generated/compas_timber.connections.LHalfLapJoint.to_json", "api/generated/compas_timber.connections.LHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.LapJoint", "api/generated/compas_timber.connections.LapJoint.ToString", "api/generated/compas_timber.connections.LapJoint.add_features", "api/generated/compas_timber.connections.LapJoint.copy", "api/generated/compas_timber.connections.LapJoint.create", "api/generated/compas_timber.connections.LapJoint.from_json", "api/generated/compas_timber.connections.LapJoint.from_jsonstring", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LapJoint.sha256", "api/generated/compas_timber.connections.LapJoint.to_json", "api/generated/compas_timber.connections.LapJoint.to_jsonstring", "api/generated/compas_timber.connections.LapJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.back_surface_main", "api/generated/compas_timber.connections.TButtJoint.calc_params_birdsmouth", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring", "api/generated/compas_timber.connections.TButtJoint.front_back_surface_main", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TButtJoint.get_main_cutting_plane", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.side_surfaces_cross", "api/generated/compas_timber.connections.TButtJoint.subtraction_volume", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.THalfLapJoint", "api/generated/compas_timber.connections.THalfLapJoint.ToString", "api/generated/compas_timber.connections.THalfLapJoint.add_features", "api/generated/compas_timber.connections.THalfLapJoint.copy", "api/generated/compas_timber.connections.THalfLapJoint.create", "api/generated/compas_timber.connections.THalfLapJoint.from_json", "api/generated/compas_timber.connections.THalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.THalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.THalfLapJoint.sha256", "api/generated/compas_timber.connections.THalfLapJoint.to_json", "api/generated/compas_timber.connections.THalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.validate_data", "api/generated/compas_timber.connections.XHalfLapJoint", "api/generated/compas_timber.connections.XHalfLapJoint.ToString", "api/generated/compas_timber.connections.XHalfLapJoint.add_features", "api/generated/compas_timber.connections.XHalfLapJoint.copy", "api/generated/compas_timber.connections.XHalfLapJoint.create", "api/generated/compas_timber.connections.XHalfLapJoint.from_json", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.XHalfLapJoint.sha256", "api/generated/compas_timber.connections.XHalfLapJoint.to_json", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data", "api/generated/compas_timber.connections.find_neighboring_beams", "api/generated/compas_timber.elements.Beam", "api/generated/compas_timber.elements.Beam.ToString", "api/generated/compas_timber.elements.Beam.add_blank_extension", "api/generated/compas_timber.elements.Beam.add_feature", "api/generated/compas_timber.elements.Beam.add_features", "api/generated/compas_timber.elements.Beam.compute_aabb", "api/generated/compas_timber.elements.Beam.compute_collision_mesh", "api/generated/compas_timber.elements.Beam.compute_geometry", "api/generated/compas_timber.elements.Beam.compute_obb", "api/generated/compas_timber.elements.Beam.compute_worldtransformation", "api/generated/compas_timber.elements.Beam.copy", "api/generated/compas_timber.elements.Beam.endpoint_closest_to_point", "api/generated/compas_timber.elements.Beam.extension_to_plane", "api/generated/compas_timber.elements.Beam.from_centerline", "api/generated/compas_timber.elements.Beam.from_endpoints", "api/generated/compas_timber.elements.Beam.from_json", "api/generated/compas_timber.elements.Beam.from_jsonstring", "api/generated/compas_timber.elements.Beam.remove_blank_extension", "api/generated/compas_timber.elements.Beam.remove_features", "api/generated/compas_timber.elements.Beam.sha256", "api/generated/compas_timber.elements.Beam.to_json", "api/generated/compas_timber.elements.Beam.to_jsonstring", "api/generated/compas_timber.elements.Beam.transform", "api/generated/compas_timber.elements.Beam.transformed", "api/generated/compas_timber.elements.Beam.validate_data", "api/generated/compas_timber.fabrication.BTLx", "api/generated/compas_timber.fabrication.BTLx.btlx_string", "api/generated/compas_timber.fabrication.BTLx.process_model", "api/generated/compas_timber.fabrication.BTLx.register_joint", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints", "api/generated/compas_timber.fabrication.BTLxJackCut", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process", "api/generated/compas_timber.fabrication.BTLxProcess", "api/generated/compas_timber.fabrication.FrenchRidgeFactory", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings", "api/generated/compas_timber.fabrication.LButtFactory", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings", "api/generated/compas_timber.fabrication.LMiterFactory", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings", "api/generated/compas_timber.fabrication.TButtFactory", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings", "api/generated/compas_timber.model.TimberModel", "api/generated/compas_timber.model.TimberModel.ToString", "api/generated/compas_timber.model.TimberModel.add_beam", "api/generated/compas_timber.model.TimberModel.add_element", "api/generated/compas_timber.model.TimberModel.add_elements", "api/generated/compas_timber.model.TimberModel.add_group", "api/generated/compas_timber.model.TimberModel.add_interaction", "api/generated/compas_timber.model.TimberModel.add_joint", "api/generated/compas_timber.model.TimberModel.add_material", "api/generated/compas_timber.model.TimberModel.add_wall", "api/generated/compas_timber.model.TimberModel.assign_material", "api/generated/compas_timber.model.TimberModel.beam_by_guid", "api/generated/compas_timber.model.TimberModel.compute_aabb", "api/generated/compas_timber.model.TimberModel.compute_obb", "api/generated/compas_timber.model.TimberModel.copy", "api/generated/compas_timber.model.TimberModel.elements", "api/generated/compas_timber.model.TimberModel.elements_connected_by", "api/generated/compas_timber.model.TimberModel.from_json", "api/generated/compas_timber.model.TimberModel.from_jsonstring", "api/generated/compas_timber.model.TimberModel.has_element", "api/generated/compas_timber.model.TimberModel.has_interaction", "api/generated/compas_timber.model.TimberModel.has_material", "api/generated/compas_timber.model.TimberModel.interactions", "api/generated/compas_timber.model.TimberModel.materials", "api/generated/compas_timber.model.TimberModel.remove_element", "api/generated/compas_timber.model.TimberModel.remove_interaction", "api/generated/compas_timber.model.TimberModel.remove_joint", "api/generated/compas_timber.model.TimberModel.rotate", "api/generated/compas_timber.model.TimberModel.rotated", "api/generated/compas_timber.model.TimberModel.scale", "api/generated/compas_timber.model.TimberModel.scaled", "api/generated/compas_timber.model.TimberModel.set_topologies", "api/generated/compas_timber.model.TimberModel.sha256", "api/generated/compas_timber.model.TimberModel.to_json", "api/generated/compas_timber.model.TimberModel.to_jsonstring", "api/generated/compas_timber.model.TimberModel.transform", "api/generated/compas_timber.model.TimberModel.transform_numpy", "api/generated/compas_timber.model.TimberModel.transformed", "api/generated/compas_timber.model.TimberModel.transformed_numpy", "api/generated/compas_timber.model.TimberModel.translate", "api/generated/compas_timber.model.TimberModel.translated", "api/generated/compas_timber.model.TimberModel.validate_data", "api/generated/compas_timber.planning.Actor", "api/generated/compas_timber.planning.Actor.get_name", "api/generated/compas_timber.planning.BuildingPlan", "api/generated/compas_timber.planning.BuildingPlan.ToString", "api/generated/compas_timber.planning.BuildingPlan.add_step", "api/generated/compas_timber.planning.BuildingPlan.copy", "api/generated/compas_timber.planning.BuildingPlan.from_json", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.sha256", "api/generated/compas_timber.planning.BuildingPlan.to_json", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.validate_data", "api/generated/compas_timber.planning.SimpleSequenceGenerator", "api/generated/compas_timber.planning.Step", "api/generated/compas_timber.planning.Step.ToString", "api/generated/compas_timber.planning.Step.copy", "api/generated/compas_timber.planning.Step.from_json", "api/generated/compas_timber.planning.Step.from_jsonstring", "api/generated/compas_timber.planning.Step.sha256", "api/generated/compas_timber.planning.Step.to_json", "api/generated/compas_timber.planning.Step.to_jsonstring", "api/generated/compas_timber.planning.Step.transform", "api/generated/compas_timber.planning.Step.validate_data", "api/generated/compas_timber.rhino.find_neighboring_beams", "citing", "examples", "examples/create_joint", "index", "installation", "license", "tutorials", "tutorials/BTLx_contribution_guide", "tutorials/grasshopper/assembly", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beam", "tutorials/grasshopper/examples", "tutorials/grasshopper/features", "tutorials/grasshopper/joints", "tutorials/grasshopper/rules", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api.rst", "api/compas_timber.connections.rst", "api/compas_timber.elements.rst", "api/compas_timber.fabrication.rst", "api/compas_timber.ghpython.rst", "api/compas_timber.model.rst", "api/compas_timber.planning.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.connections.BeamJoinningError.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.ToString.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_features.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.check_geometry.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.copy.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.create.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_json.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.sha256.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_json.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.validate_data.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.from_json.rst", "api/generated/compas_timber.connections.Joint.from_jsonstring.rst", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_json.rst", "api/generated/compas_timber.connections.Joint.to_jsonstring.rst", "api/generated/compas_timber.connections.Joint.validate_data.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.back_surface_main.rst", "api/generated/compas_timber.connections.LButtJoint.calc_params_birdsmouth.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.from_json.rst", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.front_back_surface_main.rst", "api/generated/compas_timber.connections.LButtJoint.get_cross_cutting_plane.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LButtJoint.get_main_cutting_plane.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.side_surfaces_cross.rst", "api/generated/compas_timber.connections.LButtJoint.subtraction_volume.rst", "api/generated/compas_timber.connections.LButtJoint.to_json.rst", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.validate_data.rst", "api/generated/compas_timber.connections.LHalfLapJoint.rst", "api/generated/compas_timber.connections.LHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.LHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.LHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.LHalfLapJoint.create.rst", "api/generated/compas_timber.connections.LHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.LHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.LHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.LHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.from_json.rst", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_json.rst", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_data.rst", "api/generated/compas_timber.connections.LapJoint.rst", "api/generated/compas_timber.connections.LapJoint.ToString.rst", "api/generated/compas_timber.connections.LapJoint.add_features.rst", "api/generated/compas_timber.connections.LapJoint.copy.rst", "api/generated/compas_timber.connections.LapJoint.create.rst", "api/generated/compas_timber.connections.LapJoint.from_json.rst", "api/generated/compas_timber.connections.LapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LapJoint.sha256.rst", "api/generated/compas_timber.connections.LapJoint.to_json.rst", "api/generated/compas_timber.connections.LapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.validate_data.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.back_surface_main.rst", "api/generated/compas_timber.connections.TButtJoint.calc_params_birdsmouth.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.from_json.rst", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.front_back_surface_main.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TButtJoint.get_main_cutting_plane.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.side_surfaces_cross.rst", "api/generated/compas_timber.connections.TButtJoint.subtraction_volume.rst", "api/generated/compas_timber.connections.TButtJoint.to_json.rst", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.validate_data.rst", "api/generated/compas_timber.connections.THalfLapJoint.rst", "api/generated/compas_timber.connections.THalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.THalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.THalfLapJoint.copy.rst", "api/generated/compas_timber.connections.THalfLapJoint.create.rst", "api/generated/compas_timber.connections.THalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.THalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.THalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.THalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.THalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.THalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.THalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.rst", "api/generated/compas_timber.connections.XHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.XHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.XHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.XHalfLapJoint.create.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.XHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.find_neighboring_beams.rst", "api/generated/compas_timber.elements.Beam.rst", "api/generated/compas_timber.elements.Beam.ToString.rst", "api/generated/compas_timber.elements.Beam.add_blank_extension.rst", "api/generated/compas_timber.elements.Beam.add_feature.rst", "api/generated/compas_timber.elements.Beam.add_features.rst", "api/generated/compas_timber.elements.Beam.compute_aabb.rst", "api/generated/compas_timber.elements.Beam.compute_collision_mesh.rst", "api/generated/compas_timber.elements.Beam.compute_geometry.rst", "api/generated/compas_timber.elements.Beam.compute_obb.rst", "api/generated/compas_timber.elements.Beam.compute_worldtransformation.rst", "api/generated/compas_timber.elements.Beam.copy.rst", "api/generated/compas_timber.elements.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.elements.Beam.extension_to_plane.rst", "api/generated/compas_timber.elements.Beam.from_centerline.rst", "api/generated/compas_timber.elements.Beam.from_endpoints.rst", "api/generated/compas_timber.elements.Beam.from_json.rst", "api/generated/compas_timber.elements.Beam.from_jsonstring.rst", "api/generated/compas_timber.elements.Beam.remove_blank_extension.rst", "api/generated/compas_timber.elements.Beam.remove_features.rst", "api/generated/compas_timber.elements.Beam.sha256.rst", "api/generated/compas_timber.elements.Beam.to_json.rst", "api/generated/compas_timber.elements.Beam.to_jsonstring.rst", "api/generated/compas_timber.elements.Beam.transform.rst", "api/generated/compas_timber.elements.Beam.transformed.rst", "api/generated/compas_timber.elements.Beam.validate_data.rst", "api/generated/compas_timber.fabrication.BTLx.rst", "api/generated/compas_timber.fabrication.BTLx.btlx_string.rst", "api/generated/compas_timber.fabrication.BTLx.process_model.rst", "api/generated/compas_timber.fabrication.BTLx.register_joint.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process.rst", "api/generated/compas_timber.fabrication.BTLxProcess.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LButtFactory.rst", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LMiterFactory.rst", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.TButtFactory.rst", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings.rst", "api/generated/compas_timber.model.TimberModel.rst", "api/generated/compas_timber.model.TimberModel.ToString.rst", "api/generated/compas_timber.model.TimberModel.add_beam.rst", "api/generated/compas_timber.model.TimberModel.add_element.rst", "api/generated/compas_timber.model.TimberModel.add_elements.rst", "api/generated/compas_timber.model.TimberModel.add_group.rst", "api/generated/compas_timber.model.TimberModel.add_interaction.rst", "api/generated/compas_timber.model.TimberModel.add_joint.rst", "api/generated/compas_timber.model.TimberModel.add_material.rst", "api/generated/compas_timber.model.TimberModel.add_wall.rst", "api/generated/compas_timber.model.TimberModel.assign_material.rst", "api/generated/compas_timber.model.TimberModel.beam_by_guid.rst", "api/generated/compas_timber.model.TimberModel.compute_aabb.rst", "api/generated/compas_timber.model.TimberModel.compute_obb.rst", "api/generated/compas_timber.model.TimberModel.copy.rst", "api/generated/compas_timber.model.TimberModel.elements.rst", "api/generated/compas_timber.model.TimberModel.elements_connected_by.rst", "api/generated/compas_timber.model.TimberModel.from_json.rst", "api/generated/compas_timber.model.TimberModel.from_jsonstring.rst", "api/generated/compas_timber.model.TimberModel.has_element.rst", "api/generated/compas_timber.model.TimberModel.has_interaction.rst", "api/generated/compas_timber.model.TimberModel.has_material.rst", "api/generated/compas_timber.model.TimberModel.interactions.rst", "api/generated/compas_timber.model.TimberModel.materials.rst", "api/generated/compas_timber.model.TimberModel.remove_element.rst", "api/generated/compas_timber.model.TimberModel.remove_interaction.rst", "api/generated/compas_timber.model.TimberModel.remove_joint.rst", "api/generated/compas_timber.model.TimberModel.rotate.rst", "api/generated/compas_timber.model.TimberModel.rotated.rst", "api/generated/compas_timber.model.TimberModel.scale.rst", "api/generated/compas_timber.model.TimberModel.scaled.rst", "api/generated/compas_timber.model.TimberModel.set_topologies.rst", "api/generated/compas_timber.model.TimberModel.sha256.rst", "api/generated/compas_timber.model.TimberModel.to_json.rst", "api/generated/compas_timber.model.TimberModel.to_jsonstring.rst", "api/generated/compas_timber.model.TimberModel.transform.rst", "api/generated/compas_timber.model.TimberModel.transform_numpy.rst", "api/generated/compas_timber.model.TimberModel.transformed.rst", "api/generated/compas_timber.model.TimberModel.transformed_numpy.rst", "api/generated/compas_timber.model.TimberModel.translate.rst", "api/generated/compas_timber.model.TimberModel.translated.rst", "api/generated/compas_timber.model.TimberModel.validate_data.rst", "api/generated/compas_timber.planning.Actor.rst", "api/generated/compas_timber.planning.Actor.get_name.rst", "api/generated/compas_timber.planning.BuildingPlan.rst", "api/generated/compas_timber.planning.BuildingPlan.ToString.rst", "api/generated/compas_timber.planning.BuildingPlan.add_step.rst", "api/generated/compas_timber.planning.BuildingPlan.copy.rst", "api/generated/compas_timber.planning.BuildingPlan.from_json.rst", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.sha256.rst", "api/generated/compas_timber.planning.BuildingPlan.to_json.rst", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.validate_data.rst", "api/generated/compas_timber.planning.SimpleSequenceGenerator.rst", "api/generated/compas_timber.planning.Step.rst", "api/generated/compas_timber.planning.Step.ToString.rst", "api/generated/compas_timber.planning.Step.copy.rst", "api/generated/compas_timber.planning.Step.from_json.rst", "api/generated/compas_timber.planning.Step.from_jsonstring.rst", "api/generated/compas_timber.planning.Step.sha256.rst", "api/generated/compas_timber.planning.Step.to_json.rst", "api/generated/compas_timber.planning.Step.to_jsonstring.rst", "api/generated/compas_timber.planning.Step.transform.rst", "api/generated/compas_timber.planning.Step.validate_data.rst", "api/generated/compas_timber.rhino.find_neighboring_beams.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "license.rst", "tutorials.rst", "tutorials/BTLx_contribution_guide.rst", "tutorials/grasshopper/assembly.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beam.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joints.rst", "tutorials/grasshopper/rules.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "indexentries": {"actor (class in compas_timber.planning)": [[251, "compas_timber.planning.Actor", false]], "add_beam() (compas_timber.model.timbermodel method)": [[211, "compas_timber.model.TimberModel.add_beam", false]], "add_blank_extension() (compas_timber.elements.beam method)": [[166, "compas_timber.elements.Beam.add_blank_extension", false]], "add_element() (compas_timber.model.timbermodel method)": [[212, "compas_timber.model.TimberModel.add_element", false]], "add_elements() (compas_timber.model.timbermodel method)": [[213, "compas_timber.model.TimberModel.add_elements", false]], "add_feature() (compas_timber.elements.beam method)": [[167, "compas_timber.elements.Beam.add_feature", false]], "add_features() (compas_timber.connections.frenchridgelapjoint method)": [[14, "compas_timber.connections.FrenchRidgeLapJoint.add_features", false]], "add_features() (compas_timber.connections.joint method)": [[29, "compas_timber.connections.Joint.add_features", false]], "add_features() (compas_timber.connections.lapjoint method)": [[97, "compas_timber.connections.LapJoint.add_features", false]], "add_features() (compas_timber.connections.lbuttjoint method)": [[45, "compas_timber.connections.LButtJoint.add_features", false]], "add_features() (compas_timber.connections.lhalflapjoint method)": [[66, "compas_timber.connections.LHalfLapJoint.add_features", false]], "add_features() (compas_timber.connections.lmiterjoint method)": [[82, "compas_timber.connections.LMiterJoint.add_features", false]], "add_features() (compas_timber.connections.tbuttjoint method)": [[113, "compas_timber.connections.TButtJoint.add_features", false]], "add_features() (compas_timber.connections.thalflapjoint method)": [[133, "compas_timber.connections.THalfLapJoint.add_features", false]], "add_features() (compas_timber.connections.xhalflapjoint method)": [[149, "compas_timber.connections.XHalfLapJoint.add_features", false]], "add_features() (compas_timber.elements.beam method)": [[168, "compas_timber.elements.Beam.add_features", false]], "add_group() (compas_timber.model.timbermodel method)": [[214, "compas_timber.model.TimberModel.add_group", false]], "add_interaction() (compas_timber.model.timbermodel method)": [[215, "compas_timber.model.TimberModel.add_interaction", false]], "add_joint() (compas_timber.model.timbermodel method)": [[216, "compas_timber.model.TimberModel.add_joint", false]], "add_material() (compas_timber.model.timbermodel method)": [[217, "compas_timber.model.TimberModel.add_material", false]], "add_step() (compas_timber.planning.buildingplan method)": [[255, "compas_timber.planning.BuildingPlan.add_step", false]], "add_wall() (compas_timber.model.timbermodel method)": [[218, "compas_timber.model.TimberModel.add_wall", false]], "apply_processings() (compas_timber.fabrication.frenchridgefactory class method)": [[202, "compas_timber.fabrication.FrenchRidgeFactory.apply_processings", false]], "apply_processings() (compas_timber.fabrication.lbuttfactory class method)": [[204, "compas_timber.fabrication.LButtFactory.apply_processings", false]], "apply_processings() (compas_timber.fabrication.lmiterfactory class method)": [[206, "compas_timber.fabrication.LMiterFactory.apply_processings", false]], "apply_processings() (compas_timber.fabrication.tbuttfactory class method)": [[208, "compas_timber.fabrication.TButtFactory.apply_processings", false]], "assign_material() (compas_timber.model.timbermodel method)": [[219, "compas_timber.model.TimberModel.assign_material", false]], "back_surface_main() (compas_timber.connections.lbuttjoint method)": [[46, "compas_timber.connections.LButtJoint.back_surface_main", false]], "back_surface_main() (compas_timber.connections.tbuttjoint method)": [[114, "compas_timber.connections.TButtJoint.back_surface_main", false]], "beam (class in compas_timber.elements)": [[164, "compas_timber.elements.Beam", false]], "beam_by_guid() (compas_timber.model.timbermodel method)": [[220, "compas_timber.model.TimberModel.beam_by_guid", false]], "beamjoinningerror": [[8, "compas_timber.connections.BeamJoinningError", false]], "btlx (class in compas_timber.fabrication)": [[189, "compas_timber.fabrication.BTLx", false]], "btlx_string() (compas_timber.fabrication.btlx method)": [[190, "compas_timber.fabrication.BTLx.btlx_string", false]], "btlxfrenchridgelap (class in compas_timber.fabrication)": [[193, "compas_timber.fabrication.BTLxFrenchRidgeLap", false]], "btlxjackcut (class in compas_timber.fabrication)": [[197, "compas_timber.fabrication.BTLxJackCut", false]], "btlxprocess (class in compas_timber.fabrication)": [[200, "compas_timber.fabrication.BTLxProcess", false]], "buildingplan (class in compas_timber.planning)": [[253, "compas_timber.planning.BuildingPlan", false]], "calc_params_birdsmouth() (compas_timber.connections.lbuttjoint method)": [[47, "compas_timber.connections.LButtJoint.calc_params_birdsmouth", false]], "calc_params_birdsmouth() (compas_timber.connections.tbuttjoint method)": [[115, "compas_timber.connections.TButtJoint.calc_params_birdsmouth", false]], "check_geometry() (compas_timber.connections.frenchridgelapjoint method)": [[15, "compas_timber.connections.FrenchRidgeLapJoint.check_geometry", false]], "compute_aabb() (compas_timber.elements.beam method)": [[169, "compas_timber.elements.Beam.compute_aabb", false]], "compute_aabb() (compas_timber.model.timbermodel method)": [[221, "compas_timber.model.TimberModel.compute_aabb", false]], "compute_collision_mesh() (compas_timber.elements.beam method)": [[170, "compas_timber.elements.Beam.compute_collision_mesh", false]], "compute_geometry() (compas_timber.elements.beam method)": [[171, "compas_timber.elements.Beam.compute_geometry", false]], "compute_obb() (compas_timber.elements.beam method)": [[172, "compas_timber.elements.Beam.compute_obb", false]], "compute_obb() (compas_timber.model.timbermodel method)": [[222, "compas_timber.model.TimberModel.compute_obb", false]], "compute_worldtransformation() (compas_timber.elements.beam method)": [[173, "compas_timber.elements.Beam.compute_worldtransformation", false]], "connectionsolver (class in compas_timber.connections)": [[9, "compas_timber.connections.ConnectionSolver", false]], "copy() (compas_timber.connections.frenchridgelapjoint method)": [[16, "compas_timber.connections.FrenchRidgeLapJoint.copy", false]], "copy() (compas_timber.connections.joint method)": [[30, "compas_timber.connections.Joint.copy", false]], "copy() (compas_timber.connections.lapjoint method)": [[98, "compas_timber.connections.LapJoint.copy", false]], "copy() (compas_timber.connections.lbuttjoint method)": [[48, "compas_timber.connections.LButtJoint.copy", false]], "copy() (compas_timber.connections.lhalflapjoint method)": [[67, "compas_timber.connections.LHalfLapJoint.copy", false]], "copy() (compas_timber.connections.lmiterjoint method)": [[83, "compas_timber.connections.LMiterJoint.copy", false]], "copy() (compas_timber.connections.tbuttjoint method)": [[116, "compas_timber.connections.TButtJoint.copy", false]], "copy() (compas_timber.connections.thalflapjoint method)": [[134, "compas_timber.connections.THalfLapJoint.copy", false]], "copy() (compas_timber.connections.xhalflapjoint method)": [[150, "compas_timber.connections.XHalfLapJoint.copy", false]], "copy() (compas_timber.elements.beam method)": [[174, "compas_timber.elements.Beam.copy", false]], "copy() (compas_timber.model.timbermodel method)": [[223, "compas_timber.model.TimberModel.copy", false]], "copy() (compas_timber.planning.buildingplan method)": [[256, "compas_timber.planning.BuildingPlan.copy", false]], "copy() (compas_timber.planning.step method)": [[266, "compas_timber.planning.Step.copy", false]], "create() (compas_timber.connections.frenchridgelapjoint class method)": [[17, "compas_timber.connections.FrenchRidgeLapJoint.create", false]], "create() (compas_timber.connections.joint class method)": [[31, "compas_timber.connections.Joint.create", false]], "create() (compas_timber.connections.lapjoint class method)": [[99, "compas_timber.connections.LapJoint.create", false]], "create() (compas_timber.connections.lbuttjoint class method)": [[49, "compas_timber.connections.LButtJoint.create", false]], "create() (compas_timber.connections.lhalflapjoint class method)": [[68, "compas_timber.connections.LHalfLapJoint.create", false]], "create() (compas_timber.connections.lmiterjoint class method)": [[84, "compas_timber.connections.LMiterJoint.create", false]], "create() (compas_timber.connections.tbuttjoint class method)": [[117, "compas_timber.connections.TButtJoint.create", false]], "create() (compas_timber.connections.thalflapjoint class method)": [[135, "compas_timber.connections.THalfLapJoint.create", false]], "create() (compas_timber.connections.xhalflapjoint class method)": [[151, "compas_timber.connections.XHalfLapJoint.create", false]], "create_process() (compas_timber.fabrication.btlxfrenchridgelap class method)": [[194, "compas_timber.fabrication.BTLxFrenchRidgeLap.create_process", false]], "create_process() (compas_timber.fabrication.btlxjackcut class method)": [[198, "compas_timber.fabrication.BTLxJackCut.create_process", false]], "elements() (compas_timber.model.timbermodel method)": [[224, "compas_timber.model.TimberModel.elements", false]], "elements_connected_by() (compas_timber.model.timbermodel method)": [[225, "compas_timber.model.TimberModel.elements_connected_by", false]], "endpoint_closest_to_point() (compas_timber.elements.beam method)": [[175, "compas_timber.elements.Beam.endpoint_closest_to_point", false]], "extension_to_plane() (compas_timber.elements.beam method)": [[176, "compas_timber.elements.Beam.extension_to_plane", false]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[10, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs", false]], "find_neighboring_beams() (in module compas_timber.connections)": [[163, "compas_timber.connections.find_neighboring_beams", false]], "find_neighboring_beams() (in module compas_timber.rhino)": [[274, "compas_timber.rhino.find_neighboring_beams", false]], "find_topology() (compas_timber.connections.connectionsolver method)": [[11, "compas_timber.connections.ConnectionSolver.find_topology", false]], "frenchridgefactory (class in compas_timber.fabrication)": [[201, "compas_timber.fabrication.FrenchRidgeFactory", false]], "frenchridgelapjoint (class in compas_timber.connections)": [[12, "compas_timber.connections.FrenchRidgeLapJoint", false]], "from_centerline() (compas_timber.elements.beam class method)": [[177, "compas_timber.elements.Beam.from_centerline", false]], "from_endpoints() (compas_timber.elements.beam class method)": [[178, "compas_timber.elements.Beam.from_endpoints", false]], "from_json() (compas_timber.connections.frenchridgelapjoint class method)": [[18, "compas_timber.connections.FrenchRidgeLapJoint.from_json", false]], "from_json() (compas_timber.connections.joint class method)": [[32, "compas_timber.connections.Joint.from_json", false]], "from_json() (compas_timber.connections.lapjoint class method)": [[100, "compas_timber.connections.LapJoint.from_json", false]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[50, "compas_timber.connections.LButtJoint.from_json", false]], "from_json() (compas_timber.connections.lhalflapjoint class method)": [[69, "compas_timber.connections.LHalfLapJoint.from_json", false]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[85, "compas_timber.connections.LMiterJoint.from_json", false]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[118, "compas_timber.connections.TButtJoint.from_json", false]], "from_json() (compas_timber.connections.thalflapjoint class method)": [[136, "compas_timber.connections.THalfLapJoint.from_json", false]], "from_json() (compas_timber.connections.xhalflapjoint class method)": [[152, "compas_timber.connections.XHalfLapJoint.from_json", false]], "from_json() (compas_timber.elements.beam class method)": [[179, "compas_timber.elements.Beam.from_json", false]], "from_json() (compas_timber.model.timbermodel class method)": [[226, "compas_timber.model.TimberModel.from_json", false]], "from_json() (compas_timber.planning.buildingplan class method)": [[257, "compas_timber.planning.BuildingPlan.from_json", false]], "from_json() (compas_timber.planning.step class method)": [[267, "compas_timber.planning.Step.from_json", false]], "from_jsonstring() (compas_timber.connections.frenchridgelapjoint class method)": [[19, "compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.joint class method)": [[33, "compas_timber.connections.Joint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lapjoint class method)": [[101, "compas_timber.connections.LapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[51, "compas_timber.connections.LButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lhalflapjoint class method)": [[70, "compas_timber.connections.LHalfLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[86, "compas_timber.connections.LMiterJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[119, "compas_timber.connections.TButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.thalflapjoint class method)": [[137, "compas_timber.connections.THalfLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.xhalflapjoint class method)": [[153, "compas_timber.connections.XHalfLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.beam class method)": [[180, "compas_timber.elements.Beam.from_jsonstring", false]], "from_jsonstring() (compas_timber.model.timbermodel class method)": [[227, "compas_timber.model.TimberModel.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.buildingplan class method)": [[258, "compas_timber.planning.BuildingPlan.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.step class method)": [[268, "compas_timber.planning.Step.from_jsonstring", false]], "front_back_surface_main() (compas_timber.connections.lbuttjoint method)": [[52, "compas_timber.connections.LButtJoint.front_back_surface_main", false]], "front_back_surface_main() (compas_timber.connections.tbuttjoint method)": [[120, "compas_timber.connections.TButtJoint.front_back_surface_main", false]], "generate_process() (compas_timber.fabrication.btlxjackcut method)": [[199, "compas_timber.fabrication.BTLxJackCut.generate_process", false]], "get_cross_cutting_frame() (compas_timber.connections.lapjoint method)": [[102, "compas_timber.connections.LapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[71, "compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[138, "compas_timber.connections.THalfLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[154, "compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_plane() (compas_timber.connections.lbuttjoint method)": [[53, "compas_timber.connections.LButtJoint.get_cross_cutting_plane", false]], "get_cutting_planes() (compas_timber.connections.lmiterjoint method)": [[87, "compas_timber.connections.LMiterJoint.get_cutting_planes", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.frenchridgelapjoint static method)": [[20, "compas_timber.connections.FrenchRidgeLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.joint static method)": [[34, "compas_timber.connections.Joint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lapjoint static method)": [[103, "compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lbuttjoint static method)": [[54, "compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lhalflapjoint static method)": [[72, "compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lmiterjoint static method)": [[88, "compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tbuttjoint static method)": [[121, "compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.thalflapjoint static method)": [[139, "compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.xhalflapjoint static method)": [[155, "compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.frenchridgelapjoint static method)": [[21, "compas_timber.connections.FrenchRidgeLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.joint static method)": [[35, "compas_timber.connections.Joint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lapjoint static method)": [[104, "compas_timber.connections.LapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lbuttjoint static method)": [[55, "compas_timber.connections.LButtJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lhalflapjoint static method)": [[73, "compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lmiterjoint static method)": [[89, "compas_timber.connections.LMiterJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tbuttjoint static method)": [[122, "compas_timber.connections.TButtJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.thalflapjoint static method)": [[140, "compas_timber.connections.THalfLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.xhalflapjoint static method)": [[156, "compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam", false]], "get_main_cutting_frame() (compas_timber.connections.lapjoint method)": [[105, "compas_timber.connections.LapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[74, "compas_timber.connections.LHalfLapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[141, "compas_timber.connections.THalfLapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[157, "compas_timber.connections.XHalfLapJoint.get_main_cutting_frame", false]], "get_main_cutting_plane() (compas_timber.connections.lbuttjoint method)": [[56, "compas_timber.connections.LButtJoint.get_main_cutting_plane", false]], "get_main_cutting_plane() (compas_timber.connections.tbuttjoint method)": [[123, "compas_timber.connections.TButtJoint.get_main_cutting_plane", false]], "get_name() (compas_timber.connections.jointtopology class method)": [[42, "compas_timber.connections.JointTopology.get_name", false]], "get_name() (compas_timber.planning.actor class method)": [[252, "compas_timber.planning.Actor.get_name", false]], "get_params() (compas_timber.fabrication.btlxfrenchridgelap method)": [[195, "compas_timber.fabrication.BTLxFrenchRidgeLap.get_params", false]], "has_element() (compas_timber.model.timbermodel method)": [[228, "compas_timber.model.TimberModel.has_element", false]], "has_interaction() (compas_timber.model.timbermodel method)": [[229, "compas_timber.model.TimberModel.has_interaction", false]], "has_material() (compas_timber.model.timbermodel method)": [[230, "compas_timber.model.TimberModel.has_material", false]], "interactions() (compas_timber.model.timbermodel method)": [[231, "compas_timber.model.TimberModel.interactions", false]], "joint (class in compas_timber.connections)": [[27, "compas_timber.connections.Joint", false]], "jointtopology (class in compas_timber.connections)": [[41, "compas_timber.connections.JointTopology", false]], "lapjoint (class in compas_timber.connections)": [[95, "compas_timber.connections.LapJoint", false]], "lbuttfactory (class in compas_timber.fabrication)": [[203, "compas_timber.fabrication.LButtFactory", false]], "lbuttjoint (class in compas_timber.connections)": [[43, "compas_timber.connections.LButtJoint", false]], "lhalflapjoint (class in compas_timber.connections)": [[64, "compas_timber.connections.LHalfLapJoint", false]], "lmiterfactory (class in compas_timber.fabrication)": [[205, "compas_timber.fabrication.LMiterFactory", false]], "lmiterjoint (class in compas_timber.connections)": [[80, "compas_timber.connections.LMiterJoint", false]], "materials() (compas_timber.model.timbermodel method)": [[232, "compas_timber.model.TimberModel.materials", false]], "process_joints() (compas_timber.fabrication.btlxfrenchridgelap method)": [[196, "compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints", false]], "process_model() (compas_timber.fabrication.btlx method)": [[191, "compas_timber.fabrication.BTLx.process_model", false]], "register_joint() (compas_timber.fabrication.btlx class method)": [[192, "compas_timber.fabrication.BTLx.register_joint", false]], "remove_blank_extension() (compas_timber.elements.beam method)": [[181, "compas_timber.elements.Beam.remove_blank_extension", false]], "remove_element() (compas_timber.model.timbermodel method)": [[233, "compas_timber.model.TimberModel.remove_element", false]], "remove_features() (compas_timber.elements.beam method)": [[182, "compas_timber.elements.Beam.remove_features", false]], "remove_interaction() (compas_timber.model.timbermodel method)": [[234, "compas_timber.model.TimberModel.remove_interaction", false]], "remove_joint() (compas_timber.model.timbermodel method)": [[235, "compas_timber.model.TimberModel.remove_joint", false]], "restore_beams_from_keys() (compas_timber.connections.frenchridgelapjoint method)": [[22, "compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[36, "compas_timber.connections.Joint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lapjoint method)": [[106, "compas_timber.connections.LapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[57, "compas_timber.connections.LButtJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lhalflapjoint method)": [[75, "compas_timber.connections.LHalfLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[90, "compas_timber.connections.LMiterJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[124, "compas_timber.connections.TButtJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.thalflapjoint method)": [[142, "compas_timber.connections.THalfLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.xhalflapjoint method)": [[158, "compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", false]], "rotate() (compas_timber.model.timbermodel method)": [[236, "compas_timber.model.TimberModel.rotate", false]], "rotated() (compas_timber.model.timbermodel method)": [[237, "compas_timber.model.TimberModel.rotated", false]], "scale() (compas_timber.model.timbermodel method)": [[238, "compas_timber.model.TimberModel.scale", false]], "scaled() (compas_timber.model.timbermodel method)": [[239, "compas_timber.model.TimberModel.scaled", false]], "set_topologies() (compas_timber.model.timbermodel method)": [[240, "compas_timber.model.TimberModel.set_topologies", false]], "sha256() (compas_timber.connections.frenchridgelapjoint method)": [[23, "compas_timber.connections.FrenchRidgeLapJoint.sha256", false]], "sha256() (compas_timber.connections.joint method)": [[37, "compas_timber.connections.Joint.sha256", false]], "sha256() (compas_timber.connections.lapjoint method)": [[107, "compas_timber.connections.LapJoint.sha256", false]], "sha256() (compas_timber.connections.lbuttjoint method)": [[58, "compas_timber.connections.LButtJoint.sha256", false]], "sha256() (compas_timber.connections.lhalflapjoint method)": [[76, "compas_timber.connections.LHalfLapJoint.sha256", false]], "sha256() (compas_timber.connections.lmiterjoint method)": [[91, "compas_timber.connections.LMiterJoint.sha256", false]], "sha256() (compas_timber.connections.tbuttjoint method)": [[125, "compas_timber.connections.TButtJoint.sha256", false]], "sha256() (compas_timber.connections.thalflapjoint method)": [[143, "compas_timber.connections.THalfLapJoint.sha256", false]], "sha256() (compas_timber.connections.xhalflapjoint method)": [[159, "compas_timber.connections.XHalfLapJoint.sha256", false]], "sha256() (compas_timber.elements.beam method)": [[183, "compas_timber.elements.Beam.sha256", false]], "sha256() (compas_timber.model.timbermodel method)": [[241, "compas_timber.model.TimberModel.sha256", false]], "sha256() (compas_timber.planning.buildingplan method)": [[259, "compas_timber.planning.BuildingPlan.sha256", false]], "sha256() (compas_timber.planning.step method)": [[269, "compas_timber.planning.Step.sha256", false]], "side_surfaces_cross() (compas_timber.connections.lbuttjoint method)": [[59, "compas_timber.connections.LButtJoint.side_surfaces_cross", false]], "side_surfaces_cross() (compas_timber.connections.tbuttjoint method)": [[126, "compas_timber.connections.TButtJoint.side_surfaces_cross", false]], "simplesequencegenerator (class in compas_timber.planning)": [[263, "compas_timber.planning.SimpleSequenceGenerator", false]], "step (class in compas_timber.planning)": [[264, "compas_timber.planning.Step", false]], "subtraction_volume() (compas_timber.connections.lbuttjoint method)": [[60, "compas_timber.connections.LButtJoint.subtraction_volume", false]], "subtraction_volume() (compas_timber.connections.tbuttjoint method)": [[127, "compas_timber.connections.TButtJoint.subtraction_volume", false]], "tbuttfactory (class in compas_timber.fabrication)": [[207, "compas_timber.fabrication.TButtFactory", false]], "tbuttjoint (class in compas_timber.connections)": [[111, "compas_timber.connections.TButtJoint", false]], "thalflapjoint (class in compas_timber.connections)": [[131, "compas_timber.connections.THalfLapJoint", false]], "timbermodel (class in compas_timber.model)": [[209, "compas_timber.model.TimberModel", false]], "to_json() (compas_timber.connections.frenchridgelapjoint method)": [[24, "compas_timber.connections.FrenchRidgeLapJoint.to_json", false]], "to_json() (compas_timber.connections.joint method)": [[38, "compas_timber.connections.Joint.to_json", false]], "to_json() (compas_timber.connections.lapjoint method)": [[108, "compas_timber.connections.LapJoint.to_json", false]], "to_json() (compas_timber.connections.lbuttjoint method)": [[61, "compas_timber.connections.LButtJoint.to_json", false]], "to_json() (compas_timber.connections.lhalflapjoint method)": [[77, "compas_timber.connections.LHalfLapJoint.to_json", false]], "to_json() (compas_timber.connections.lmiterjoint method)": [[92, "compas_timber.connections.LMiterJoint.to_json", false]], "to_json() (compas_timber.connections.tbuttjoint method)": [[128, "compas_timber.connections.TButtJoint.to_json", false]], "to_json() (compas_timber.connections.thalflapjoint method)": [[144, "compas_timber.connections.THalfLapJoint.to_json", false]], "to_json() (compas_timber.connections.xhalflapjoint method)": [[160, "compas_timber.connections.XHalfLapJoint.to_json", false]], "to_json() (compas_timber.elements.beam method)": [[184, "compas_timber.elements.Beam.to_json", false]], "to_json() (compas_timber.model.timbermodel method)": [[242, "compas_timber.model.TimberModel.to_json", false]], "to_json() (compas_timber.planning.buildingplan method)": [[260, "compas_timber.planning.BuildingPlan.to_json", false]], "to_json() (compas_timber.planning.step method)": [[270, "compas_timber.planning.Step.to_json", false]], "to_jsonstring() (compas_timber.connections.frenchridgelapjoint method)": [[25, "compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.joint method)": [[39, "compas_timber.connections.Joint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lapjoint method)": [[109, "compas_timber.connections.LapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lbuttjoint method)": [[62, "compas_timber.connections.LButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lhalflapjoint method)": [[78, "compas_timber.connections.LHalfLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lmiterjoint method)": [[93, "compas_timber.connections.LMiterJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tbuttjoint method)": [[129, "compas_timber.connections.TButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.thalflapjoint method)": [[145, "compas_timber.connections.THalfLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.xhalflapjoint method)": [[161, "compas_timber.connections.XHalfLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.beam method)": [[185, "compas_timber.elements.Beam.to_jsonstring", false]], "to_jsonstring() (compas_timber.model.timbermodel method)": [[243, "compas_timber.model.TimberModel.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.buildingplan method)": [[261, "compas_timber.planning.BuildingPlan.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.step method)": [[271, "compas_timber.planning.Step.to_jsonstring", false]], "tostring() (compas_timber.connections.frenchridgelapjoint method)": [[13, "compas_timber.connections.FrenchRidgeLapJoint.ToString", false]], "tostring() (compas_timber.connections.joint method)": [[28, "compas_timber.connections.Joint.ToString", false]], "tostring() (compas_timber.connections.lapjoint method)": [[96, "compas_timber.connections.LapJoint.ToString", false]], "tostring() (compas_timber.connections.lbuttjoint method)": [[44, "compas_timber.connections.LButtJoint.ToString", false]], "tostring() (compas_timber.connections.lhalflapjoint method)": [[65, "compas_timber.connections.LHalfLapJoint.ToString", false]], "tostring() (compas_timber.connections.lmiterjoint method)": [[81, "compas_timber.connections.LMiterJoint.ToString", false]], "tostring() (compas_timber.connections.tbuttjoint method)": [[112, "compas_timber.connections.TButtJoint.ToString", false]], "tostring() (compas_timber.connections.thalflapjoint method)": [[132, "compas_timber.connections.THalfLapJoint.ToString", false]], "tostring() (compas_timber.connections.xhalflapjoint method)": [[148, "compas_timber.connections.XHalfLapJoint.ToString", false]], "tostring() (compas_timber.elements.beam method)": [[165, "compas_timber.elements.Beam.ToString", false]], "tostring() (compas_timber.model.timbermodel method)": [[210, "compas_timber.model.TimberModel.ToString", false]], "tostring() (compas_timber.planning.buildingplan method)": [[254, "compas_timber.planning.BuildingPlan.ToString", false]], "tostring() (compas_timber.planning.step method)": [[265, "compas_timber.planning.Step.ToString", false]], "transform() (compas_timber.elements.beam method)": [[186, "compas_timber.elements.Beam.transform", false]], "transform() (compas_timber.model.timbermodel method)": [[244, "compas_timber.model.TimberModel.transform", false]], "transform() (compas_timber.planning.step method)": [[272, "compas_timber.planning.Step.transform", false]], "transform_numpy() (compas_timber.model.timbermodel method)": [[245, "compas_timber.model.TimberModel.transform_numpy", false]], "transformed() (compas_timber.elements.beam method)": [[187, "compas_timber.elements.Beam.transformed", false]], "transformed() (compas_timber.model.timbermodel method)": [[246, "compas_timber.model.TimberModel.transformed", false]], "transformed_numpy() (compas_timber.model.timbermodel method)": [[247, "compas_timber.model.TimberModel.transformed_numpy", false]], "translate() (compas_timber.model.timbermodel method)": [[248, "compas_timber.model.TimberModel.translate", false]], "translated() (compas_timber.model.timbermodel method)": [[249, "compas_timber.model.TimberModel.translated", false]], "validate_data() (compas_timber.connections.frenchridgelapjoint class method)": [[26, "compas_timber.connections.FrenchRidgeLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.joint class method)": [[40, "compas_timber.connections.Joint.validate_data", false]], "validate_data() (compas_timber.connections.lapjoint class method)": [[110, "compas_timber.connections.LapJoint.validate_data", false]], "validate_data() (compas_timber.connections.lbuttjoint class method)": [[63, "compas_timber.connections.LButtJoint.validate_data", false]], "validate_data() (compas_timber.connections.lhalflapjoint class method)": [[79, "compas_timber.connections.LHalfLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.lmiterjoint class method)": [[94, "compas_timber.connections.LMiterJoint.validate_data", false]], "validate_data() (compas_timber.connections.tbuttjoint class method)": [[130, "compas_timber.connections.TButtJoint.validate_data", false]], "validate_data() (compas_timber.connections.thalflapjoint class method)": [[146, "compas_timber.connections.THalfLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.xhalflapjoint class method)": [[162, "compas_timber.connections.XHalfLapJoint.validate_data", false]], "validate_data() (compas_timber.elements.beam class method)": [[188, "compas_timber.elements.Beam.validate_data", false]], "validate_data() (compas_timber.model.timbermodel class method)": [[250, "compas_timber.model.TimberModel.validate_data", false]], "validate_data() (compas_timber.planning.buildingplan class method)": [[262, "compas_timber.planning.BuildingPlan.validate_data", false]], "validate_data() (compas_timber.planning.step class method)": [[273, "compas_timber.planning.Step.validate_data", false]], "xhalflapjoint (class in compas_timber.connections)": [[147, "compas_timber.connections.XHalfLapJoint", false]]}, "objects": {"compas_timber.connections": [[8, 0, 1, "", "BeamJoinningError"], [9, 1, 1, "", "ConnectionSolver"], [12, 1, 1, "", "FrenchRidgeLapJoint"], [27, 1, 1, "", "Joint"], [41, 1, 1, "", "JointTopology"], [43, 1, 1, "", "LButtJoint"], [64, 1, 1, "", "LHalfLapJoint"], [80, 1, 1, "", "LMiterJoint"], [95, 1, 1, "", "LapJoint"], [111, 1, 1, "", "TButtJoint"], [131, 1, 1, "", "THalfLapJoint"], [147, 1, 1, "", "XHalfLapJoint"], [163, 3, 1, "", "find_neighboring_beams"]], "compas_timber.connections.ConnectionSolver": [[10, 2, 1, "", "find_intersecting_pairs"], [11, 2, 1, "", "find_topology"]], "compas_timber.connections.FrenchRidgeLapJoint": [[13, 2, 1, "", "ToString"], [14, 2, 1, "", "add_features"], [15, 2, 1, "", "check_geometry"], [16, 2, 1, "", "copy"], [17, 2, 1, "", "create"], [18, 2, 1, "", "from_json"], [19, 2, 1, "", "from_jsonstring"], [20, 2, 1, "", "get_face_most_ortho_to_beam"], [21, 2, 1, "", "get_face_most_towards_beam"], [22, 2, 1, "", "restore_beams_from_keys"], [23, 2, 1, "", "sha256"], [24, 2, 1, "", "to_json"], [25, 2, 1, "", "to_jsonstring"], [26, 2, 1, "", "validate_data"]], "compas_timber.connections.Joint": [[28, 2, 1, "", "ToString"], [29, 2, 1, "", "add_features"], [30, 2, 1, "", "copy"], [31, 2, 1, "", "create"], [32, 2, 1, "", "from_json"], [33, 2, 1, "", "from_jsonstring"], [34, 2, 1, "", "get_face_most_ortho_to_beam"], [35, 2, 1, "", "get_face_most_towards_beam"], [36, 2, 1, "", "restore_beams_from_keys"], [37, 2, 1, "", "sha256"], [38, 2, 1, "", "to_json"], [39, 2, 1, "", "to_jsonstring"], [40, 2, 1, "", "validate_data"]], "compas_timber.connections.JointTopology": [[42, 2, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[44, 2, 1, "", "ToString"], [45, 2, 1, "", "add_features"], [46, 2, 1, "", "back_surface_main"], [47, 2, 1, "", "calc_params_birdsmouth"], [48, 2, 1, "", "copy"], [49, 2, 1, "", "create"], [50, 2, 1, "", "from_json"], [51, 2, 1, "", "from_jsonstring"], [52, 2, 1, "", "front_back_surface_main"], [53, 2, 1, "", "get_cross_cutting_plane"], [54, 2, 1, "", "get_face_most_ortho_to_beam"], [55, 2, 1, "", "get_face_most_towards_beam"], [56, 2, 1, "", "get_main_cutting_plane"], [57, 2, 1, "", "restore_beams_from_keys"], [58, 2, 1, "", "sha256"], [59, 2, 1, "", "side_surfaces_cross"], [60, 2, 1, "", "subtraction_volume"], [61, 2, 1, "", "to_json"], [62, 2, 1, "", "to_jsonstring"], [63, 2, 1, "", "validate_data"]], "compas_timber.connections.LHalfLapJoint": [[65, 2, 1, "", "ToString"], [66, 2, 1, "", "add_features"], [67, 2, 1, "", "copy"], [68, 2, 1, "", "create"], [69, 2, 1, "", "from_json"], [70, 2, 1, "", "from_jsonstring"], [71, 2, 1, "", "get_cross_cutting_frame"], [72, 2, 1, "", "get_face_most_ortho_to_beam"], [73, 2, 1, "", "get_face_most_towards_beam"], [74, 2, 1, "", "get_main_cutting_frame"], [75, 2, 1, "", "restore_beams_from_keys"], [76, 2, 1, "", "sha256"], [77, 2, 1, "", "to_json"], [78, 2, 1, "", "to_jsonstring"], [79, 2, 1, "", "validate_data"]], "compas_timber.connections.LMiterJoint": [[81, 2, 1, "", "ToString"], [82, 2, 1, "", "add_features"], [83, 2, 1, "", "copy"], [84, 2, 1, "", "create"], [85, 2, 1, "", "from_json"], [86, 2, 1, "", "from_jsonstring"], [87, 2, 1, "", "get_cutting_planes"], [88, 2, 1, "", "get_face_most_ortho_to_beam"], [89, 2, 1, "", "get_face_most_towards_beam"], [90, 2, 1, "", "restore_beams_from_keys"], [91, 2, 1, "", "sha256"], [92, 2, 1, "", "to_json"], [93, 2, 1, "", "to_jsonstring"], [94, 2, 1, "", "validate_data"]], "compas_timber.connections.LapJoint": [[96, 2, 1, "", "ToString"], [97, 2, 1, "", "add_features"], [98, 2, 1, "", "copy"], [99, 2, 1, "", "create"], [100, 2, 1, "", "from_json"], [101, 2, 1, "", "from_jsonstring"], [102, 2, 1, "", "get_cross_cutting_frame"], [103, 2, 1, "", "get_face_most_ortho_to_beam"], [104, 2, 1, "", "get_face_most_towards_beam"], [105, 2, 1, "", "get_main_cutting_frame"], [106, 2, 1, "", "restore_beams_from_keys"], [107, 2, 1, "", "sha256"], [108, 2, 1, "", "to_json"], [109, 2, 1, "", "to_jsonstring"], [110, 2, 1, "", "validate_data"]], "compas_timber.connections.TButtJoint": [[112, 2, 1, "", "ToString"], [113, 2, 1, "", "add_features"], [114, 2, 1, "", "back_surface_main"], [115, 2, 1, "", "calc_params_birdsmouth"], [116, 2, 1, "", "copy"], [117, 2, 1, "", "create"], [118, 2, 1, "", "from_json"], [119, 2, 1, "", "from_jsonstring"], [120, 2, 1, "", "front_back_surface_main"], [121, 2, 1, "", "get_face_most_ortho_to_beam"], [122, 2, 1, "", "get_face_most_towards_beam"], [123, 2, 1, "", "get_main_cutting_plane"], [124, 2, 1, "", "restore_beams_from_keys"], [125, 2, 1, "", "sha256"], [126, 2, 1, "", "side_surfaces_cross"], [127, 2, 1, "", "subtraction_volume"], [128, 2, 1, "", "to_json"], [129, 2, 1, "", "to_jsonstring"], [130, 2, 1, "", "validate_data"]], "compas_timber.connections.THalfLapJoint": [[132, 2, 1, "", "ToString"], [133, 2, 1, "", "add_features"], [134, 2, 1, "", "copy"], [135, 2, 1, "", "create"], [136, 2, 1, "", "from_json"], [137, 2, 1, "", "from_jsonstring"], [138, 2, 1, "", "get_cross_cutting_frame"], [139, 2, 1, "", "get_face_most_ortho_to_beam"], [140, 2, 1, "", "get_face_most_towards_beam"], [141, 2, 1, "", "get_main_cutting_frame"], [142, 2, 1, "", "restore_beams_from_keys"], [143, 2, 1, "", "sha256"], [144, 2, 1, "", "to_json"], [145, 2, 1, "", "to_jsonstring"], [146, 2, 1, "", "validate_data"]], "compas_timber.connections.XHalfLapJoint": [[148, 2, 1, "", "ToString"], [149, 2, 1, "", "add_features"], [150, 2, 1, "", "copy"], [151, 2, 1, "", "create"], [152, 2, 1, "", "from_json"], [153, 2, 1, "", "from_jsonstring"], [154, 2, 1, "", "get_cross_cutting_frame"], [155, 2, 1, "", "get_face_most_ortho_to_beam"], [156, 2, 1, "", "get_face_most_towards_beam"], [157, 2, 1, "", "get_main_cutting_frame"], [158, 2, 1, "", "restore_beams_from_keys"], [159, 2, 1, "", "sha256"], [160, 2, 1, "", "to_json"], [161, 2, 1, "", "to_jsonstring"], [162, 2, 1, "", "validate_data"]], "compas_timber.elements": [[164, 1, 1, "", "Beam"]], "compas_timber.elements.Beam": [[165, 2, 1, "", "ToString"], [166, 2, 1, "", "add_blank_extension"], [167, 2, 1, "", "add_feature"], [168, 2, 1, "", "add_features"], [169, 2, 1, "", "compute_aabb"], [170, 2, 1, "", "compute_collision_mesh"], [171, 2, 1, "", "compute_geometry"], [172, 2, 1, "", "compute_obb"], [173, 2, 1, "", "compute_worldtransformation"], [174, 2, 1, "", "copy"], [175, 2, 1, "", "endpoint_closest_to_point"], [176, 2, 1, "", "extension_to_plane"], [177, 2, 1, "", "from_centerline"], [178, 2, 1, "", "from_endpoints"], [179, 2, 1, "", "from_json"], [180, 2, 1, "", "from_jsonstring"], [181, 2, 1, "", "remove_blank_extension"], [182, 2, 1, "", "remove_features"], [183, 2, 1, "", "sha256"], [184, 2, 1, "", "to_json"], [185, 2, 1, "", "to_jsonstring"], [186, 2, 1, "", "transform"], [187, 2, 1, "", "transformed"], [188, 2, 1, "", "validate_data"]], "compas_timber.fabrication": [[189, 1, 1, "", "BTLx"], [193, 1, 1, "", "BTLxFrenchRidgeLap"], [197, 1, 1, "", "BTLxJackCut"], [200, 1, 1, "", "BTLxProcess"], [201, 1, 1, "", "FrenchRidgeFactory"], [203, 1, 1, "", "LButtFactory"], [205, 1, 1, "", "LMiterFactory"], [207, 1, 1, "", "TButtFactory"]], "compas_timber.fabrication.BTLx": [[190, 2, 1, "", "btlx_string"], [191, 2, 1, "", "process_model"], [192, 2, 1, "", "register_joint"]], "compas_timber.fabrication.BTLxFrenchRidgeLap": [[194, 2, 1, "", "create_process"], [195, 2, 1, "", "get_params"], [196, 2, 1, "", "process_joints"]], "compas_timber.fabrication.BTLxJackCut": [[198, 2, 1, "", "create_process"], [199, 2, 1, "", "generate_process"]], "compas_timber.fabrication.FrenchRidgeFactory": [[202, 2, 1, "", "apply_processings"]], "compas_timber.fabrication.LButtFactory": [[204, 2, 1, "", "apply_processings"]], "compas_timber.fabrication.LMiterFactory": [[206, 2, 1, "", "apply_processings"]], "compas_timber.fabrication.TButtFactory": [[208, 2, 1, "", "apply_processings"]], "compas_timber.model": [[209, 1, 1, "", "TimberModel"]], "compas_timber.model.TimberModel": [[210, 2, 1, "", "ToString"], [211, 2, 1, "", "add_beam"], [212, 2, 1, "", "add_element"], [213, 2, 1, "", "add_elements"], [214, 2, 1, "", "add_group"], [215, 2, 1, "", "add_interaction"], [216, 2, 1, "", "add_joint"], [217, 2, 1, "", "add_material"], [218, 2, 1, "", "add_wall"], [219, 2, 1, "", "assign_material"], [220, 2, 1, "", "beam_by_guid"], [221, 2, 1, "", "compute_aabb"], [222, 2, 1, "", "compute_obb"], [223, 2, 1, "", "copy"], [224, 2, 1, "", "elements"], [225, 2, 1, "", "elements_connected_by"], [226, 2, 1, "", "from_json"], [227, 2, 1, "", "from_jsonstring"], [228, 2, 1, "", "has_element"], [229, 2, 1, "", "has_interaction"], [230, 2, 1, "", "has_material"], [231, 2, 1, "", "interactions"], [232, 2, 1, "", "materials"], [233, 2, 1, "", "remove_element"], [234, 2, 1, "", "remove_interaction"], [235, 2, 1, "", "remove_joint"], [236, 2, 1, "", "rotate"], [237, 2, 1, "", "rotated"], [238, 2, 1, "", "scale"], [239, 2, 1, "", "scaled"], [240, 2, 1, "", "set_topologies"], [241, 2, 1, "", "sha256"], [242, 2, 1, "", "to_json"], [243, 2, 1, "", "to_jsonstring"], [244, 2, 1, "", "transform"], [245, 2, 1, "", "transform_numpy"], [246, 2, 1, "", "transformed"], [247, 2, 1, "", "transformed_numpy"], [248, 2, 1, "", "translate"], [249, 2, 1, "", "translated"], [250, 2, 1, "", "validate_data"]], "compas_timber.planning": [[251, 1, 1, "", "Actor"], [253, 1, 1, "", "BuildingPlan"], [263, 1, 1, "", "SimpleSequenceGenerator"], [264, 1, 1, "", "Step"]], "compas_timber.planning.Actor": [[252, 2, 1, "", "get_name"]], "compas_timber.planning.BuildingPlan": [[254, 2, 1, "", "ToString"], [255, 2, 1, "", "add_step"], [256, 2, 1, "", "copy"], [257, 2, 1, "", "from_json"], [258, 2, 1, "", "from_jsonstring"], [259, 2, 1, "", "sha256"], [260, 2, 1, "", "to_json"], [261, 2, 1, "", "to_jsonstring"], [262, 2, 1, "", "validate_data"]], "compas_timber.planning.Step": [[265, 2, 1, "", "ToString"], [266, 2, 1, "", "copy"], [267, 2, 1, "", "from_json"], [268, 2, 1, "", "from_jsonstring"], [269, 2, 1, "", "sha256"], [270, 2, 1, "", "to_json"], [271, 2, 1, "", "to_jsonstring"], [272, 2, 1, "", "transform"], [273, 2, 1, "", "validate_data"]], "compas_timber.rhino": [[274, 3, 1, "", "find_neighboring_beams"]]}, "objnames": {"0": ["py", "exception", "Python exception"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:exception", "1": "py:class", "2": "py:method", "3": "py:function"}, "terms": {"": [12, 14, 20, 21, 26, 29, 34, 35, 40, 47, 54, 55, 63, 64, 66, 72, 73, 79, 88, 89, 94, 97, 103, 104, 110, 115, 121, 122, 130, 133, 139, 140, 146, 149, 155, 156, 162, 164, 175, 177, 178, 188, 250, 262, 273, 284, 285, 291], "0": [10, 20, 23, 34, 37, 54, 58, 64, 72, 76, 88, 91, 95, 103, 107, 121, 125, 131, 139, 143, 147, 155, 159, 163, 164, 169, 172, 183, 241, 259, 269, 274, 277, 279, 285], "02": 280, "06": 11, "1": [21, 23, 35, 37, 55, 58, 64, 73, 76, 89, 91, 95, 104, 107, 122, 125, 131, 140, 143, 147, 156, 159, 164, 183, 241, 259, 269, 277, 282, 285, 292], "10": [275, 279], "17": 280, "1e": 11, "2": [164, 277, 282, 292], "2020": 280, "2022": 275, "2023": 275, "3": [164, 279, 282, 288, 292], "3d": 278, "4": [164, 277, 282], "5": [64, 95, 131, 147, 164], "5281": 275, "6": 164, "7": 279, "7934267": 275, "A": [8, 10, 12, 17, 27, 31, 49, 64, 68, 84, 99, 117, 135, 151, 163, 164, 167, 177, 178, 189, 202, 204, 206, 208, 209, 212, 217, 230, 275, 280, 285, 288], "AND": 280, "AS": 280, "As": 275, "At": 278, "BE": 280, "BUT": 280, "By": [289, 292], "FOR": 280, "For": [42, 163, 252, 278, 283, 288, 291], "IN": 280, "If": [11, 18, 19, 20, 21, 23, 24, 25, 32, 33, 34, 35, 37, 38, 39, 43, 50, 51, 54, 55, 58, 61, 62, 64, 69, 70, 72, 73, 76, 77, 78, 85, 86, 88, 89, 91, 92, 93, 95, 100, 101, 103, 104, 107, 108, 109, 118, 119, 121, 122, 125, 128, 129, 131, 136, 137, 139, 140, 143, 144, 145, 147, 152, 153, 155, 156, 159, 160, 161, 171, 179, 180, 182, 183, 184, 185, 212, 213, 215, 219, 226, 227, 241, 242, 243, 257, 258, 259, 260, 261, 267, 268, 269, 270, 271, 274, 275, 283, 285, 288], "In": [163, 278, 279, 288, 292], "It": [196, 278, 281, 283, 284, 285, 288, 289, 291], "NO": 280, "NOT": 280, "OF": 280, "OR": 280, "Of": [20, 21, 34, 35, 54, 55, 72, 73, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156], "One": [42, 252, 264, 288], "THE": 280, "TO": 280, "The": [7, 8, 12, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 38, 39, 40, 43, 47, 48, 49, 50, 51, 54, 55, 61, 62, 63, 64, 67, 68, 69, 70, 72, 73, 77, 78, 79, 83, 84, 85, 86, 88, 89, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 108, 109, 110, 111, 115, 116, 117, 118, 119, 121, 122, 128, 129, 130, 131, 134, 135, 136, 137, 139, 140, 144, 145, 146, 147, 150, 151, 152, 153, 155, 156, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 192, 193, 197, 200, 202, 204, 206, 208, 209, 211, 212, 213, 214, 215, 216, 218, 219, 220, 223, 225, 226, 227, 228, 229, 233, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 256, 257, 258, 260, 261, 262, 266, 267, 268, 270, 271, 273, 274, 280, 281, 284, 285, 287, 288, 289, 291, 292], "Then": 281, "There": [276, 284, 288, 289, 292], "These": 284, "To": [36, 279, 281, 282, 283, 292], "WITH": 280, "_": 284, "__from_data__": [26, 40, 63, 79, 94, 110, 130, 146, 162, 188, 250, 262, 273], "__init__": 282, "aabb": [163, 164, 169], "abl": [14, 29, 66, 97, 133, 149], "about": [8, 278], "abov": [280, 288], "abstract": [95, 283], "accord": [164, 284, 288], "acknowledg": 275, "action": 280, "activ": [278, 279, 283, 285, 291], "actor": [264, 278], "actual": 175, "acut": 288, "ad": [17, 27, 31, 49, 68, 84, 99, 117, 135, 151, 168, 212, 213, 214, 274, 289], "add": [14, 29, 45, 66, 82, 97, 113, 133, 149, 166, 167, 168, 211, 212, 213, 214, 215, 216, 217, 218, 281, 282, 283, 291], "add_beam": 277, "addit": [10, 27, 214, 281, 284, 285, 287], "adjac": [17, 31, 49, 68, 84, 99, 117, 135, 151], "adjust": 291, "affect": [14, 29, 66, 97, 133, 149], "after": [22, 57, 75, 90, 106, 124, 142, 158], "against": [26, 40, 63, 79, 94, 110, 130, 146, 162, 188, 250, 262, 273], "aleksandra": 275, "algorithm": [23, 37, 58, 76, 91, 107, 125, 143, 159, 163, 183, 241, 259, 269], "align": [15, 163, 164, 169, 221, 281, 291], "all": [20, 21, 34, 35, 54, 55, 72, 73, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156, 176, 182, 196, 224, 231, 232, 244, 274, 280, 284], "allow": [17, 31, 49, 64, 68, 84, 95, 99, 117, 131, 135, 147, 151, 176, 209, 264], "along": [111, 131, 147, 164, 288], "alreadi": 212, "also": [164, 275, 278, 281, 284, 285, 288, 289], "amount": [163, 166, 176, 274], "an": [8, 10, 12, 16, 17, 18, 19, 24, 25, 26, 30, 31, 32, 33, 38, 39, 40, 43, 48, 49, 50, 51, 61, 62, 63, 64, 67, 68, 69, 70, 77, 78, 79, 80, 83, 84, 85, 86, 92, 93, 94, 95, 98, 99, 100, 101, 108, 109, 110, 111, 116, 117, 118, 119, 128, 129, 130, 131, 134, 135, 136, 137, 144, 145, 146, 147, 150, 151, 152, 153, 160, 161, 162, 164, 174, 179, 180, 184, 185, 188, 195, 199, 212, 215, 216, 219, 223, 226, 227, 229, 233, 242, 243, 250, 251, 256, 257, 258, 260, 261, 262, 266, 267, 268, 270, 271, 273, 275, 276, 278, 279, 280, 281, 283, 284, 285, 288], "analysi": 278, "angl": [80, 193, 236, 237, 288], "ani": [26, 40, 63, 79, 94, 110, 130, 146, 162, 188, 250, 262, 273, 276, 280, 287, 289], "anna": 275, "anoth": [111, 131, 147], "apart": 10, "api": [278, 281], "apolinarska": 275, "append": [200, 282], "appli": [8, 14, 29, 66, 97, 133, 149, 186, 187, 193, 200, 202, 204, 206, 208, 244, 282, 288, 289, 292], "ar": [10, 11, 13, 15, 17, 20, 21, 28, 31, 34, 35, 36, 43, 44, 49, 54, 55, 65, 68, 72, 73, 81, 84, 88, 89, 96, 99, 103, 104, 112, 117, 121, 122, 132, 135, 139, 140, 148, 151, 155, 156, 163, 165, 200, 210, 215, 219, 254, 264, 265, 276, 282, 283, 284, 285, 287, 288, 289, 291, 292], "argument": 214, "aris": 280, "around": 285, "as_str": [23, 37, 58, 76, 91, 107, 125, 143, 159, 183, 241, 259, 269], "assembl": 264, "assembli": [277, 278, 281, 285, 287, 288, 289, 290, 292], "assemli": 22, "assign": [209, 212, 219, 289, 291], "associ": [12, 36, 43, 64, 80, 95, 111, 131, 147, 193, 204, 208, 264, 280], "attach": [20, 21, 34, 35, 54, 55, 72, 73, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156], "attr": [200, 214], "attr1nam": 284, "attr1value_attr2nam": 284, "attr2valu": 284, "attribut": [8, 12, 27, 41, 43, 64, 80, 95, 111, 164, 189, 193, 200, 209, 214, 263, 264, 278, 281, 282, 285], "author": [275, 280], "autom": 281, "automat": [45, 82, 113, 289, 291], "avail": 163, "avoid": [36, 169, 172], "axi": [163, 164, 169, 177, 178, 221, 236, 237, 285, 287, 291], "b": [215, 229, 234], "backend": 278, "bake": 281, "bakewithboxmap": 291, "base": [8, 9, 12, 27, 41, 43, 64, 80, 95, 111, 131, 147, 164, 171, 173, 189, 193, 197, 200, 201, 203, 205, 207, 209, 236, 237, 251, 253, 263, 264, 283, 290, 292], "basic": 278, "beak": 288, "beam": [8, 9, 10, 11, 12, 14, 17, 20, 21, 22, 27, 29, 31, 34, 35, 36, 43, 45, 49, 54, 55, 57, 60, 64, 66, 68, 72, 73, 75, 80, 82, 84, 88, 89, 90, 95, 97, 99, 103, 104, 106, 111, 113, 117, 121, 122, 124, 127, 131, 133, 135, 139, 140, 142, 147, 149, 151, 155, 156, 158, 163, 193, 197, 209, 211, 216, 220, 274, 277, 278, 281, 283, 284, 287, 288, 289, 290, 291, 292], "beam_a": [11, 12, 20, 21, 34, 35, 54, 55, 72, 73, 80, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156], "beam_a_kei": 209, "beam_b": [11, 12, 20, 21, 34, 35, 54, 55, 72, 73, 80, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156], "beam_b_kei": 209, "beamjoinningerror": [14, 29, 66, 97, 133, 149, 278], "been": [17, 31, 49, 68, 84, 99, 117, 135, 151, 212, 264], "befor": [17, 31, 49, 68, 84, 99, 117, 135, 151, 212], "being": 278, "belong": [17, 31, 49, 68, 84, 99, 117, 135, 151], "between": [64, 80, 95, 131, 147, 209, 215, 229, 231, 234, 284, 288, 289, 292], "bird": [47, 115], "birdsmouth": [47, 115], "bisector": [80, 288], "bitmap": 291, "blank": [164, 166, 181, 285], "blender": 276, "bool": [10, 20, 21, 23, 24, 25, 34, 35, 37, 38, 39, 43, 54, 55, 58, 61, 62, 64, 72, 73, 76, 77, 78, 88, 89, 91, 92, 93, 95, 103, 104, 107, 108, 109, 121, 122, 125, 128, 129, 131, 139, 140, 143, 144, 145, 147, 155, 156, 159, 160, 161, 171, 183, 184, 185, 193, 228, 229, 230, 241, 242, 243, 259, 260, 261, 264, 269, 270, 271], "boolean": [281, 283, 287], "both": [12, 45, 82, 215, 219], "bottom": [12, 22, 193, 288], "bound": [163, 164, 169, 172, 221, 222, 274], "box": [163, 164, 169, 172, 221, 222, 264, 274, 281, 285], "break": [47, 60, 115, 127], "brep": [171, 278, 283, 287, 291], "brepdrillholefeatur": 287, "brepsubtractionfeatur": 287, "btlx": [47, 60, 115, 127, 164, 193, 200, 278, 281], "btlx_2_1_0": 282, "btlx_process": [200, 282], "btlx_string": 189, "btlxfrenchridgelap": 278, "btlxjackcut": [200, 278], "btlxjoint": 282, "btlxpart": [189, 193, 197, 200, 202, 204, 206, 208, 282], "btlxprocess": [278, 282], "build": [253, 263, 264, 279, 292], "buildingplan": [263, 278], "built": [278, 281], "butt": [43, 47, 111, 115, 203, 207, 288, 289], "buttjoint": [43, 111], "byte": [23, 37, 58, 76, 91, 107, 125, 143, 159, 183, 241, 259, 269], "c": 280, "cad": [264, 276], "calcul": [8, 14, 20, 21, 29, 34, 35, 47, 54, 55, 66, 72, 73, 88, 89, 97, 103, 104, 115, 121, 122, 133, 139, 140, 149, 155, 156, 209, 240], "call": [17, 31, 36, 45, 49, 68, 82, 84, 99, 113, 117, 135, 151, 200, 282, 285], "can": [8, 26, 40, 63, 79, 94, 110, 130, 146, 162, 188, 200, 212, 250, 253, 262, 264, 273, 276, 281, 282, 285, 288, 289], "cannot": 285, "care": 292, "casa": 275, "case": 283, "cata": 289, "catb": 289, "categori": [284, 285, 288, 289, 292], "cd": 279, "center": [20, 21, 34, 35, 54, 55, 72, 73, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156, 209, 275], "center_of_mass": 209, "centerlin": [20, 21, 34, 35, 54, 55, 72, 73, 80, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156, 164, 175, 177, 178, 281, 284, 285, 291], "centerline_end": 164, "centerline_start": 164, "centr": 288, "centrelin": 285, "charg": 280, "check": [15, 228, 274, 278, 284], "checkstandardattribut": 284, "chen": 275, "chosen": [20, 21, 34, 35, 54, 55, 72, 73, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156], "circular": 36, "cite": 278, "cl": [16, 30, 48, 67, 83, 98, 116, 134, 150, 174, 223, 256, 266], "claim": 280, "class": [9, 12, 13, 27, 28, 41, 43, 44, 64, 65, 80, 81, 95, 96, 111, 112, 131, 132, 147, 148, 164, 165, 189, 192, 193, 197, 200, 201, 203, 205, 207, 209, 210, 216, 244, 251, 253, 254, 263, 264, 265, 278, 282], "classmethod": [10, 17, 18, 19, 26, 31, 32, 33, 40, 42, 49, 50, 51, 63, 68, 69, 70, 79, 84, 85, 86, 94, 99, 100, 101, 110, 117, 118, 119, 130, 135, 136, 137, 146, 151, 152, 153, 162, 177, 178, 179, 180, 188, 192, 194, 198, 202, 204, 206, 208, 226, 227, 250, 252, 257, 258, 262, 267, 268, 273], "clean": 288, "clone": 279, "closer": 175, "closest": [20, 21, 34, 35, 54, 55, 72, 73, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156], "code": [17, 31, 47, 49, 60, 68, 84, 99, 115, 117, 127, 135, 151, 276, 278], "collect": [253, 274, 283], "collis": 170, "colon": 284, "com": [275, 279, 282], "combin": [200, 288, 289], "common": 95, "compa": [16, 18, 19, 23, 30, 32, 33, 37, 48, 50, 51, 58, 67, 69, 70, 76, 83, 85, 86, 91, 98, 100, 101, 107, 116, 118, 119, 125, 134, 136, 137, 143, 150, 152, 153, 159, 164, 170, 171, 172, 173, 174, 179, 180, 183, 186, 187, 221, 222, 223, 226, 227, 236, 237, 241, 244, 248, 249, 256, 257, 258, 259, 264, 266, 267, 268, 269, 275, 281, 288], "comparison": [23, 37, 58, 76, 91, 107, 125, 143, 159, 183, 241, 259, 269], "compas_model": [187, 225, 263], "compas_rhino": 279, "compas_timb": [0, 8, 9, 12, 17, 27, 31, 36, 41, 43, 49, 64, 68, 80, 84, 95, 99, 111, 117, 131, 135, 147, 151, 163, 164, 189, 192, 193, 197, 200, 201, 203, 205, 207, 209, 251, 253, 263, 264, 274, 275, 278, 279], "compat": [12, 13, 28, 43, 44, 64, 65, 80, 81, 96, 111, 112, 131, 132, 147, 148, 163, 165, 210, 254, 265], "compet": 275, "compil": 279, "complet": [64, 95, 131, 147], "complex": [278, 288], "compon": [279, 283, 284, 285, 287, 288, 289], "componen": 281, "compos": 283, "comput": [11, 23, 37, 58, 76, 91, 107, 125, 143, 159, 169, 170, 171, 172, 173, 183, 221, 222, 241, 259, 269], "computation": 283, "concaten": 284, "concept": [276, 281], "concret": 36, "condit": 280, "connect": [0, 8, 9, 12, 13, 17, 27, 28, 31, 36, 41, 43, 44, 49, 64, 65, 68, 80, 81, 84, 95, 96, 99, 111, 112, 117, 131, 132, 135, 147, 148, 151, 163, 165, 202, 204, 206, 208, 210, 225, 254, 265, 278, 280, 283, 288], "connectionsolv": [240, 278], "consid": [10, 11, 288], "consist": 11, "construct": [18, 19, 26, 32, 33, 40, 50, 51, 63, 69, 70, 79, 85, 86, 94, 100, 101, 110, 118, 119, 130, 136, 137, 146, 152, 153, 162, 179, 180, 188, 226, 227, 250, 257, 258, 262, 267, 268, 273, 278], "contain": [7, 8, 10, 12, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 49, 50, 51, 54, 55, 68, 69, 70, 72, 73, 84, 85, 86, 88, 89, 99, 100, 101, 103, 104, 117, 118, 119, 121, 122, 135, 136, 137, 139, 140, 151, 152, 153, 155, 156, 163, 164, 179, 180, 209, 212, 224, 226, 227, 228, 230, 232, 244, 253, 257, 258, 264, 267, 268, 274], "context": 7, "continu": 278, "contract": 280, "contribut": [278, 281], "contributor": 275, "control": [23, 37, 58, 76, 91, 107, 125, 143, 159, 183, 241, 259, 269, 288], "convent": 285, "convers": [13, 28, 44, 65, 81, 96, 112, 132, 148, 165, 210, 254, 265], "convert": [13, 24, 25, 28, 38, 39, 44, 61, 62, 65, 77, 78, 81, 92, 93, 96, 108, 109, 112, 128, 129, 132, 144, 145, 148, 160, 161, 165, 184, 185, 210, 242, 243, 254, 260, 261, 265, 270, 271], "coordin": [164, 173, 285], "copi": [187, 237, 239, 246, 247, 249, 280], "copyright": 280, "corner": 288, "correct": [18, 19, 32, 33, 50, 51, 69, 70, 85, 86, 100, 101, 118, 119, 136, 137, 152, 153, 179, 180, 226, 227, 257, 258, 267, 268], "correctli": 284, "correspond": [164, 175, 192, 284, 285, 289, 291], "could": 251, "cover": 200, "cpython": [13, 28, 44, 65, 81, 96, 112, 132, 148, 165, 210, 254, 265], "crate": 288, "creat": [12, 15, 27, 43, 45, 64, 80, 82, 95, 111, 113, 131, 147, 177, 178, 187, 192, 193, 201, 203, 205, 207, 276, 278, 279, 281, 282, 283, 284, 285, 288, 292], "creategeometri": 283, "criteria": 284, "cross": [11, 36, 43, 47, 57, 60, 64, 75, 90, 95, 106, 111, 113, 115, 124, 127, 131, 142, 147, 158, 164, 177, 178, 285, 288], "cross_beam": [43, 64, 95, 111, 131, 147, 277], "cross_beam_kei": 64, "cross_part": [47, 115], "current": [16, 30, 48, 67, 83, 98, 116, 134, 150, 174, 223, 256, 266, 278, 288], "curv": 285, "custom": [278, 284], "cut": [43, 64, 95, 131, 147, 197, 281, 283, 285, 287, 288], "cut_plane_bia": [64, 95, 131, 147], "cutoff": 288, "cutplanebia": 288, "cylind": 264, "damag": 280, "data": [16, 18, 19, 23, 24, 25, 26, 30, 32, 33, 37, 38, 39, 40, 48, 50, 51, 58, 61, 62, 63, 67, 69, 70, 76, 77, 78, 79, 83, 85, 86, 91, 92, 93, 94, 98, 100, 101, 107, 108, 109, 110, 116, 118, 119, 125, 128, 129, 130, 134, 136, 137, 143, 144, 145, 146, 150, 152, 153, 159, 160, 161, 162, 174, 179, 180, 183, 184, 185, 188, 189, 223, 226, 227, 241, 242, 243, 245, 246, 247, 250, 253, 256, 257, 258, 259, 260, 261, 262, 264, 266, 267, 268, 269, 270, 271, 273, 290], "datastructur": [23, 37, 58, 76, 91, 107, 125, 143, 159, 170, 171, 183, 221, 222, 236, 238, 241, 246, 247, 248, 249, 259, 269], "de": [22, 36, 57, 75, 90, 106, 124, 142, 158], "deal": 280, "debug": [8, 283], "debug_geometri": 8, "debug_info": 8, "debuginfo": 283, "decomposebeam": 285, "deeper": [64, 95, 131, 147], "default": [13, 16, 24, 25, 28, 30, 38, 39, 43, 44, 48, 61, 62, 64, 65, 67, 77, 78, 81, 83, 92, 93, 95, 96, 98, 108, 109, 112, 116, 128, 129, 131, 132, 134, 144, 145, 147, 148, 150, 160, 161, 165, 174, 177, 178, 184, 185, 197, 210, 223, 236, 237, 238, 239, 242, 243, 254, 256, 260, 261, 265, 266, 270, 271, 278, 283, 285, 289, 291], "defin": [14, 29, 66, 97, 133, 149, 177, 193, 284, 285, 288, 289, 291, 292], "definit": [282, 283], "degre": 193, "deleteattribut": 284, "demo": 286, "depend": [175, 177, 178, 279, 282], "depth": [277, 288], "deriv": [200, 282], "describ": [200, 282], "desigen": 11, "design": [163, 275, 278, 281, 284, 285], "design2machin": 282, "desir": 291, "detail": 281, "detect": [9, 283], "detected_topo": 209, "determin": [15, 288], "dev": 279, "develop": [275, 278], "deviat": 291, "dfab": 275, "diamet": [193, 287], "dict": [12, 27, 189, 193, 196, 200, 202, 204, 206, 208, 209, 214, 282], "dictionari": [12, 27, 189, 202, 204, 206, 208], "differ": [209, 276, 282, 288, 289], "digest": [23, 37, 58, 76, 91, 107, 125, 143, 159, 183, 241, 259, 269], "digit": 275, "dimens": [164, 285], "direct": [164, 176, 177, 178, 238, 239, 274, 285, 289, 292], "directli": [27, 95, 212, 213, 289], "disabl": 283, "displai": [13, 28, 44, 65, 81, 96, 112, 132, 148, 165, 210, 254, 265, 284, 290], "distanc": [10, 11, 283, 288], "distribut": 280, "do": [95, 280, 282], "document": [280, 282, 284, 285, 291], "doe": [17, 31, 49, 68, 84, 99, 117, 135, 151, 282, 285], "doi": 275, "done": [20, 21, 34, 35, 54, 55, 72, 73, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156], "doublecut": [47, 115], "drawn": 285, "drill": [193, 287], "drill_hole_diamet": 193, "dure": [23, 36, 37, 58, 76, 91, 107, 125, 143, 159, 183, 241, 259, 264, 269, 283], "e": [11, 36, 43, 276, 284, 288, 289, 291], "each": [20, 21, 27, 34, 35, 54, 55, 72, 73, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156, 176, 200, 253, 282, 284, 288, 289, 290], "easi": 281, "eclips": 276, "ecosystem": 278, "edg": [164, 215, 288], "edit": 279, "editor": 276, "eg": 200, "either": [64, 95, 131, 147, 175], "element": [0, 163, 164, 169, 170, 171, 172, 173, 175, 186, 187, 200, 209, 212, 213, 215, 219, 225, 228, 229, 231, 233, 234, 263, 264, 278], "element_id": 264, "elementnod": [212, 213], "elements_held": 264, "els": [47, 115], "encod": 284, "encompass": 278, "end": [12, 20, 21, 27, 34, 35, 43, 54, 55, 60, 64, 72, 73, 80, 88, 89, 103, 104, 111, 121, 122, 127, 131, 139, 140, 147, 155, 156, 164, 166, 175, 176, 178, 193, 288], "end_point": 178, "endpoint": [175, 178], "enlarg": 163, "entail": [278, 284], "entir": 289, "entiti": 278, "entri": 284, "enum": 251, "enumer": 41, "environ": [276, 278, 279, 285], "equal": 164, "error": [8, 169, 172, 283, 284], "et": 200, "et_el": 200, "etc": [164, 189, 190, 276, 278, 285], "eth": [275, 278], "event": 280, "eventu": [47, 115], "exampl": [23, 36, 37, 58, 76, 91, 107, 125, 143, 159, 163, 183, 241, 259, 269, 278, 281, 284, 285, 292], "except": [8, 215], "execut": [251, 264, 276], "exist": [13, 28, 44, 65, 81, 96, 112, 132, 148, 165, 210, 254, 265, 282], "expand": 278, "expect": [17, 31, 49, 68, 84, 99, 117, 135, 151], "expens": 283, "explain": 281, "express": [209, 280], "extend": [43, 166, 176, 288], "extens": [45, 82, 166, 176, 181, 288], "extract": [285, 290], "fabric": [0, 189, 192, 193, 196, 197, 200, 201, 203, 205, 207, 275, 278], "face": [12, 15, 20, 21, 23, 34, 35, 37, 43, 54, 55, 58, 72, 73, 76, 88, 89, 91, 103, 104, 107, 121, 122, 125, 139, 140, 143, 155, 156, 159, 164, 176, 183, 193, 241, 259, 269, 288, 290], "face_index": [20, 21, 34, 35, 54, 55, 72, 73, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156], "factor": [238, 239], "factori": [192, 200, 201, 203, 205, 207, 282], "fals": [10, 23, 24, 25, 37, 38, 39, 43, 58, 61, 62, 76, 77, 78, 91, 92, 93, 107, 108, 109, 125, 128, 129, 143, 144, 145, 159, 160, 161, 171, 183, 184, 185, 241, 242, 243, 259, 260, 261, 269, 270, 271, 283], "fast": 278, "featur": [8, 14, 27, 29, 45, 47, 64, 66, 82, 97, 113, 115, 133, 149, 164, 167, 168, 171, 182, 278, 281, 283, 285, 292], "fibr": [164, 281], "file": [18, 24, 32, 38, 50, 61, 69, 77, 85, 92, 100, 108, 118, 128, 136, 144, 152, 160, 179, 184, 189, 226, 242, 257, 260, 267, 270, 280, 282, 286], "filepath": [18, 24, 32, 38, 50, 61, 69, 77, 85, 92, 100, 108, 118, 128, 136, 144, 152, 160, 179, 184, 226, 242, 257, 260, 267, 270], "filter": 284, "final": [288, 292], "find": [10, 163, 225, 274, 285, 289], "find_neighboring_beam": 278, "findbeambyrhinogeometri": 285, "first": [11, 80, 175, 215, 229, 289, 292], "fit": 280, "fix": [13, 28, 44, 65, 81, 96, 112, 132, 148, 165, 210, 254, 265], "flag": 193, "flip": [64, 95, 131, 147, 288], "flip_lap_sid": [64, 95, 131, 147], "fliplapsid": 288, "float": [10, 11, 64, 95, 131, 147, 163, 164, 166, 169, 172, 176, 177, 178, 193, 209, 236, 237, 238, 239, 274], "flush": 288, "follow": [280, 281, 282, 285, 288], "fork": 279, "format": [23, 37, 58, 76, 91, 107, 125, 143, 159, 183, 189, 241, 259, 269, 284], "found": 282, "foundat": 275, "four": [284, 288], "frame": [20, 21, 27, 34, 35, 54, 55, 72, 73, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156, 164, 193, 197, 198, 264, 277, 278, 281, 285, 292], "framework": 278, "free": 280, "french": [12, 15, 193, 201, 288], "frenchridgefactori": 278, "frenchridgelap": 193, "frenchridgelapjoint": 278, "from": [11, 18, 19, 23, 32, 33, 37, 50, 51, 58, 60, 69, 70, 76, 85, 86, 91, 100, 101, 107, 118, 119, 125, 127, 136, 137, 143, 152, 153, 159, 177, 178, 179, 180, 181, 182, 183, 200, 226, 227, 233, 235, 241, 257, 258, 259, 267, 268, 269, 276, 278, 280, 281, 282, 284, 285, 287, 288, 289, 290], "from_obj": [23, 37, 58, 76, 91, 107, 125, 143, 159, 183, 241, 259, 269], "fulli": 288, "fullnam": [13, 28, 44, 65, 81, 96, 112, 132, 148, 165, 210, 254, 265], "function": [7, 47, 60, 95, 115, 127, 163, 200, 281, 282, 288], "furnish": 280, "futur": 278, "g": [11, 36, 276, 284], "gap": 288, "gener": [11, 191, 195, 199, 200, 263, 282, 285, 288, 292], "geometr": [193, 196, 200, 278, 282, 283, 287], "geometri": [8, 164, 170, 171, 172, 173, 186, 187, 221, 222, 236, 237, 239, 244, 248, 249, 264, 274, 278, 281, 283, 285, 287, 288, 291, 292], "geometry_typ": 277, "get": [23, 37, 58, 76, 91, 107, 125, 143, 159, 183, 220, 241, 259, 269, 279, 281], "gettyp": [13, 28, 44, 65, 81, 96, 112, 132, 148, 165, 210, 254, 265], "gh": [189, 190], "ghpython": [0, 278, 281], "ghuser": 279, "git": 279, "github": [275, 279], "given": [10, 11, 17, 31, 42, 49, 68, 84, 99, 117, 135, 151, 163, 175, 176, 178, 228, 252, 284], "global": 290, "gonzalo": 275, "gramazio": [275, 278, 280], "gramaziokohl": 275, "grant": 280, "graph": 215, "grasshopp": [13, 28, 44, 65, 81, 96, 112, 132, 148, 165, 210, 254, 265, 276, 278, 279, 285], "group": [212, 213, 214, 225, 284], "groupnod": [212, 213, 214], "guid": [220, 278, 281, 285, 289], "ha": [8, 18, 19, 32, 33, 50, 51, 69, 70, 85, 86, 100, 101, 118, 119, 136, 137, 152, 153, 163, 179, 180, 226, 227, 257, 258, 264, 267, 268, 285, 291], "half": 288, "halflap": [288, 289], "handl": 278, "hash": [23, 37, 58, 76, 91, 107, 125, 143, 159, 183, 241, 259, 269], "have": [17, 31, 49, 68, 84, 99, 117, 135, 151, 200, 212, 229, 285], "header": 193, "header_attribut": [193, 200, 282], "height": [164, 177, 178, 277, 284, 285], "held": 264, "help": [283, 288], "here": [60, 127, 282, 286, 291], "hereaft": 289, "herebi": 280, "hexadecim": [23, 37, 58, 76, 91, 107, 125, 143, 159, 183, 241, 259, 269], "hierarchi": [173, 209, 212], "highest": 289, "histori": 189, "hold": [47, 115], "holder": 280, "hole": [193, 281, 287], "how": [281, 288, 292], "http": [275, 279, 282], "human": [252, 264], "hybrid": 284, "i": [10, 11, 12, 15, 17, 18, 19, 20, 21, 26, 27, 31, 32, 33, 34, 35, 36, 40, 43, 45, 47, 49, 50, 51, 54, 55, 63, 64, 68, 69, 70, 72, 73, 79, 80, 82, 84, 85, 86, 88, 89, 94, 95, 99, 100, 101, 103, 104, 110, 111, 113, 115, 117, 118, 119, 121, 122, 130, 131, 135, 136, 137, 139, 140, 146, 147, 151, 152, 153, 155, 156, 162, 163, 164, 166, 175, 176, 179, 180, 188, 189, 193, 195, 196, 199, 209, 212, 219, 226, 227, 244, 250, 253, 257, 258, 262, 263, 267, 268, 273, 275, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 291], "id": [264, 276], "idea": 281, "identifi": [27, 163, 220], "ignor": [20, 21, 34, 35, 54, 55, 72, 73, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156], "ignore_end": [20, 21, 34, 35, 54, 55, 72, 73, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156], "imag": 291, "implement": [27, 36, 274, 278, 288], "impli": [280, 283], "implicit": [13, 28, 44, 65, 81, 96, 112, 132, 148, 165, 210, 254, 265], "import": [23, 37, 58, 76, 91, 107, 125, 143, 159, 183, 241, 259, 269, 282, 292], "includ": [171, 280, 282], "include_featur": 171, "increment": 264, "independ": [16, 30, 48, 67, 83, 98, 116, 134, 150, 174, 223, 256, 266], "index": [20, 21, 34, 35, 54, 55, 72, 73, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156, 193, 278, 283, 290], "indic": [8, 12, 177, 178, 193, 284, 285], "individu": 200, "inflat": [163, 169, 172, 274], "inflate_bi": [163, 274], "inform": [8, 278, 283, 291], "inherit": [12, 27, 43, 64, 80, 95, 111, 131, 147, 164, 209, 253, 264, 278, 282], "inner": [20, 21, 34, 35, 54, 55, 72, 73, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156, 288], "input": [11, 163, 200, 281, 282, 283, 284, 285, 287, 288, 289], "insid": [240, 276], "inspect": 290, "instal": 278, "instanc": [12, 13, 17, 18, 19, 28, 31, 32, 33, 43, 44, 49, 50, 51, 64, 65, 68, 69, 70, 80, 81, 84, 85, 86, 95, 96, 99, 100, 101, 111, 112, 117, 118, 119, 131, 132, 135, 136, 137, 147, 148, 151, 152, 153, 165, 179, 180, 200, 210, 216, 226, 227, 254, 257, 258, 265, 267, 268, 276, 282], "instanti": [27, 95, 200, 282], "instead": [27, 285], "instruct": [251, 253, 264], "int": [42, 166, 181, 193, 215, 252, 264], "intend": [284, 285], "interact": [27, 209, 215, 225, 229, 234, 276], "interaction_typ": 225, "interest": 175, "interfac": 278, "intern": [195, 199], "intersect": [9, 10, 11], "introduct": 278, "intuit": 278, "invok": 279, "involv": 206, "ironpython": [13, 28, 44, 65, 81, 96, 112, 132, 148, 165, 210, 254, 265], "is_built": 264, "is_plan": 264, "is_top": [193, 194], "its": [13, 20, 21, 24, 25, 28, 34, 35, 38, 39, 44, 54, 55, 61, 62, 65, 72, 73, 77, 78, 81, 88, 89, 92, 93, 96, 103, 104, 108, 109, 112, 121, 122, 128, 129, 132, 139, 140, 144, 145, 148, 155, 156, 160, 161, 165, 173, 177, 184, 185, 192, 204, 208, 210, 220, 242, 243, 254, 260, 261, 265, 270, 271, 279, 284, 288], "jack": 197, "jo": [17, 31, 49, 68, 84, 99, 117, 135, 151], "join": [8, 12, 17, 27, 31, 43, 49, 64, 68, 80, 84, 95, 99, 111, 117, 131, 135, 147, 151, 193, 216, 283], "joint": [8, 9, 12, 14, 17, 41, 43, 45, 47, 49, 64, 66, 68, 80, 82, 84, 95, 97, 99, 111, 113, 115, 117, 131, 133, 135, 147, 149, 151, 166, 181, 189, 192, 193, 194, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 216, 235, 276, 278, 281, 282, 283, 285, 290, 292], "joint_factori": [192, 200, 282], "joint_kei": [166, 181], "joint_nam": [197, 198], "joint_typ": [12, 64, 192], "jointfactori": 192, "jointopt": 289, "jointsrul": 283, "jointtopologi": [11, 209, 278], "joist": 285, "json": [18, 19, 24, 25, 32, 33, 38, 39, 50, 51, 61, 62, 69, 70, 77, 78, 85, 86, 92, 93, 100, 101, 108, 109, 118, 119, 128, 129, 136, 137, 144, 145, 152, 153, 160, 161, 179, 180, 184, 185, 226, 227, 242, 243, 257, 258, 260, 261, 267, 268, 270, 271], "kasir": 275, "keep": 288, "kei": [27, 36, 64, 166, 181, 202, 204, 206, 208, 284], "keyword": 214, "kick": [13, 28, 44, 65, 81, 96, 112, 132, 148, 165, 210, 254, 265], "kind": 280, "kohler": [275, 278, 280], "kwarg": [17, 31, 49, 68, 84, 99, 117, 135, 151, 214], "l": [12, 43, 47, 64, 80, 95, 115, 203, 205, 206, 289], "lap": [12, 15, 64, 95, 131, 147, 193, 288], "lapfeatur": [60, 127], "lapjoint": [64, 131, 147, 278], "larger": [164, 285, 288], "later": [284, 285], "latest": 279, "latter": 285, "layer": 291, "lbuttfactori": 278, "lbuttjoint": [12, 278], "least": [47, 115], "lement": 167, "length": [111, 131, 147, 164, 177, 288], "less": [17, 31, 49, 68, 84, 99, 117, 135, 151, 164, 288], "level": 289, "lhalflapjoint": 278, "li": [285, 291], "liabil": 280, "liabl": 280, "librari": [275, 276, 278, 281], "licens": 278, "lie": [17, 31, 49, 68, 84, 99, 117, 135, 151], "like": [278, 281, 283], "limit": [280, 288], "line": [164, 177, 278, 284, 285, 287, 289], "linear": 285, "linecurv": 285, "list": [8, 10, 12, 17, 27, 31, 49, 64, 68, 84, 99, 117, 135, 151, 163, 164, 167, 168, 175, 182, 189, 200, 209, 213, 219, 225, 264, 274, 282, 289, 290], "lmiterfactori": 278, "lmiterjoint": 278, "local": [164, 285], "locat": [164, 264, 283, 285], "log": [42, 252], "long": [164, 176], "long_edg": 164, "lower": [288, 289], "lowest": 289, "ly": 287, "m": 279, "machin": [15, 164, 282], "made": 288, "mai": [283, 284], "main": [11, 36, 43, 47, 57, 64, 75, 90, 95, 106, 111, 113, 115, 124, 131, 142, 147, 158, 288], "main_beam": [43, 64, 95, 111, 131, 147, 277], "main_beam_kei": 64, "main_part": [47, 115], "mainbeam": 289, "maintain": [196, 278], "major": [164, 285], "make": [13, 16, 28, 30, 44, 48, 65, 67, 81, 83, 96, 98, 112, 116, 132, 134, 148, 150, 165, 174, 210, 223, 254, 256, 265, 266], "mani": [275, 276, 278], "map": [27, 281, 291], "mapsiz": 291, "mass": 209, "match": [200, 282, 288], "materi": [164, 212, 217, 219, 230, 285, 291], "mathemat": 11, "max": 283, "max_dist": [10, 11], "maxdist": 283, "maximum": 11, "meant": 7, "meet": 288, "merchant": 280, "merg": 280, "mesh": [23, 37, 58, 76, 91, 107, 125, 143, 159, 170, 171, 183, 241, 259, 269, 277], "method": [9, 11, 12, 13, 15, 17, 27, 28, 31, 36, 41, 43, 44, 45, 49, 64, 65, 68, 80, 81, 82, 84, 95, 96, 99, 111, 112, 113, 117, 131, 132, 135, 147, 148, 151, 164, 165, 189, 193, 195, 197, 199, 201, 203, 205, 207, 209, 210, 251, 253, 254, 264, 265, 278, 282], "metric": 176, "middl": [164, 288], "midpoint": 164, "might": 281, "mind": 282, "minimum": 176, "misc": 275, "miss": 284, "mit": 280, "miter": [80, 205, 206, 288, 289], "mode": 279, "model": [0, 12, 17, 22, 31, 36, 43, 49, 57, 64, 68, 75, 80, 84, 90, 95, 99, 106, 111, 117, 124, 131, 135, 142, 147, 151, 158, 173, 189, 191, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 224, 228, 230, 231, 232, 233, 235, 240, 244, 251, 263, 278], "modifi": [244, 280], "modify_cross": 43, "modifycross": 288, "modul": [7, 200, 278, 282], "more": [8, 47, 60, 115, 127, 168, 278, 281, 282, 285, 288], "most": [20, 21, 34, 35, 54, 55, 72, 73, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156], "mouth": [47, 115], "move": [47, 115], "multipl": [200, 213, 276, 282], "myenvnam": 279, "n": 279, "name": [197, 200, 214, 282, 284, 290], "nation": 275, "nativ": [24, 25, 38, 39, 61, 62, 77, 78, 92, 93, 108, 109, 128, 129, 144, 145, 160, 161, 184, 185, 242, 243, 260, 261, 270, 271], "nccr": 275, "necessari": [15, 279, 282], "need": [200, 282, 284, 292], "neighbor": [10, 163, 274], "neightbor": [10, 274], "neither": 219, "net": [13, 28, 44, 65, 81, 96, 112, 132, 148, 165, 210, 254, 265], "new": [17, 31, 49, 68, 84, 99, 117, 135, 151, 279, 282, 285], "node": [212, 213, 214], "non": 10, "none": [11, 16, 30, 48, 67, 83, 98, 116, 134, 150, 166, 167, 174, 177, 178, 181, 182, 186, 192, 197, 198, 202, 204, 206, 208, 212, 213, 214, 215, 217, 219, 223, 233, 234, 236, 237, 238, 239, 244, 245, 248, 256, 266, 285], "noninfring": 280, "normal": [20, 21, 34, 35, 54, 55, 72, 73, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156, 164], "note": [163, 212, 275], "notic": 280, "null": 288, "nulljoint": 288, "obb": 172, "obj": [23, 37, 58, 76, 91, 107, 125, 143, 159, 183, 241, 259, 264, 269], "object": [9, 10, 13, 16, 17, 18, 19, 24, 25, 26, 28, 30, 31, 32, 33, 36, 38, 39, 40, 41, 44, 47, 48, 49, 50, 51, 61, 62, 63, 65, 67, 68, 69, 70, 77, 78, 79, 81, 83, 84, 85, 86, 92, 93, 94, 96, 98, 99, 100, 101, 108, 109, 110, 112, 115, 116, 117, 118, 119, 128, 129, 130, 132, 134, 135, 136, 137, 144, 145, 146, 148, 150, 151, 152, 153, 160, 161, 162, 163, 165, 174, 179, 180, 184, 185, 188, 189, 193, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 215, 216, 223, 226, 227, 235, 242, 243, 250, 251, 254, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 273, 278, 283, 284, 285, 291], "obtain": 280, "occ": 278, "occur": [8, 283], "offset": [169, 172], "onc": 285, "one": [20, 21, 34, 35, 54, 55, 64, 72, 73, 88, 89, 95, 103, 104, 121, 122, 131, 139, 140, 147, 155, 156, 168, 215, 219, 263, 264, 282, 285, 288], "onli": [36, 47, 115, 171, 284], "open": [275, 278], "opencascad": 278, "oper": [283, 287], "opposit": [43, 288], "option": [10, 11, 16, 20, 21, 23, 24, 25, 30, 34, 35, 37, 38, 39, 48, 54, 55, 58, 61, 62, 67, 72, 73, 76, 77, 78, 83, 88, 89, 91, 92, 93, 98, 103, 104, 107, 108, 109, 116, 121, 122, 125, 128, 129, 134, 139, 140, 143, 144, 145, 150, 155, 156, 159, 160, 161, 163, 169, 171, 174, 183, 184, 185, 197, 212, 213, 214, 215, 219, 223, 234, 236, 237, 238, 239, 241, 242, 243, 256, 259, 260, 261, 266, 269, 270, 271, 285, 288, 292], "order": [11, 163, 196, 263, 292], "ordereddict": 196, "orient": [172, 177, 178, 193, 222, 291], "origin": [164, 196, 236, 237, 285, 291], "orthogon": [20, 34, 54, 72, 88, 103, 121, 139, 155], "other": [13, 20, 21, 28, 34, 35, 44, 54, 55, 64, 65, 72, 73, 81, 88, 89, 95, 96, 103, 104, 112, 121, 122, 131, 132, 139, 140, 147, 148, 155, 156, 165, 193, 210, 254, 265, 275, 280, 283, 288, 292], "other_beam": 193, "otherwis": [11, 43, 280, 285], "out": 280, "outer": 288, "output": [11, 13, 28, 44, 65, 81, 96, 112, 132, 148, 165, 210, 254, 265, 283, 285, 287, 288], "overal": 281, "overlap": 288, "overrid": [13, 28, 44, 65, 81, 96, 112, 132, 148, 165, 210, 254, 265, 289], "overwrit": 292, "packag": [278, 279, 282], "pair": [10, 11, 163, 274, 284], "panel": [13, 28, 44, 65, 81, 96, 112, 132, 148, 165, 210, 254, 265], "parallel": [264, 285, 288], "param": 200, "paramet": [10, 11, 12, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 48, 49, 50, 51, 54, 55, 58, 61, 62, 63, 64, 67, 68, 69, 70, 72, 73, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 116, 117, 118, 119, 121, 122, 125, 128, 129, 130, 131, 134, 135, 136, 137, 139, 140, 143, 144, 145, 146, 147, 150, 151, 152, 153, 155, 156, 159, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 195, 196, 197, 199, 200, 202, 204, 206, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 273, 274, 282, 284, 291], "parametr": [164, 278], "parent": [212, 213, 214], "part": [15, 36, 47, 60, 115, 127, 189, 191, 193, 194, 197, 198, 202, 204, 206, 208, 212, 219, 274, 278, 282, 285, 287], "particular": 280, "pass": 176, "path": [18, 24, 32, 38, 50, 61, 69, 77, 85, 92, 100, 108, 118, 128, 136, 144, 152, 160, 179, 184, 226, 242, 257, 260, 267, 270], "pdf": 282, "per": 263, "permiss": 280, "permit": 280, "perpendicular": 285, "person": 280, "pip": 279, "place": [13, 28, 44, 65, 81, 96, 112, 132, 148, 165, 210, 244, 254, 265, 288], "plan": [0, 251, 253, 263, 264, 278], "planar": [281, 288], "plane": [43, 80, 113, 176, 197, 285, 287, 288, 291], "pleas": [12, 43, 64, 80, 95, 111, 131, 147, 275], "pln": 176, "plug": 278, "pluggabl": 163, "plugin": [163, 278], "point": [164, 169, 172, 175, 178, 209, 236, 237, 278, 288, 291], "point_end": 178, "point_start": 178, "portion": 280, "posit": [164, 173, 287], "possibl": [41, 284], "present": [276, 288], "pretti": [24, 25, 38, 39, 61, 62, 77, 78, 92, 93, 108, 109, 128, 129, 144, 145, 160, 161, 184, 185, 189, 190, 242, 243, 260, 261, 270, 271], "prevent": 288, "preview": 290, "print": [13, 24, 25, 28, 38, 39, 44, 61, 62, 65, 77, 78, 81, 92, 93, 96, 108, 109, 112, 128, 129, 132, 144, 145, 148, 160, 161, 165, 184, 185, 210, 242, 243, 254, 260, 261, 265, 270, 271], "prior": 274, "prioriti": [264, 289], "process": [164, 191, 193, 195, 196, 197, 199, 200, 202, 204, 206, 208, 278, 281, 282, 283, 292], "process_param": 282, "process_paramet": [193, 200], "process_typ": [193, 200, 282], "produc": 164, "product": [20, 21, 34, 35, 54, 55, 72, 73, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156], "programm": 275, "project": [275, 278], "proper": [13, 28, 44, 65, 81, 96, 112, 132, 148, 165, 210, 254, 265], "properli": [12, 43, 64, 80, 95, 111, 131, 147], "properti": 196, "provid": [9, 212, 219, 280, 281, 283, 285], "publish": 280, "purpos": 280, "py": 282, "python": [276, 278, 279, 281], "r": [10, 163, 279], "radian": [236, 237], "rafter": 285, "rais": [14, 17, 18, 19, 29, 31, 32, 33, 49, 50, 51, 66, 68, 69, 70, 84, 85, 86, 97, 99, 100, 101, 117, 118, 119, 133, 135, 136, 137, 149, 151, 152, 153, 179, 180, 212, 215, 219, 226, 227, 257, 258, 267, 268], "random": 291, "rather": [23, 37, 58, 76, 91, 107, 125, 143, 159, 183, 241, 259, 269], "ratio": 291, "raw": [26, 40, 63, 79, 94, 110, 130, 146, 162, 188, 250, 262, 273, 285], "read": 284, "readabl": [47, 60, 115, 127], "readallattribut": 284, "readstandardattribut": 284, "recognis": 289, "rectangular": [164, 285], "ref_edg": 164, "ref_fac": 193, "ref_face_index": 193, "ref_fram": 164, "ref_sid": 164, "refer": [12, 15, 22, 36, 57, 75, 90, 106, 124, 142, 158, 164, 193, 278, 281, 282, 284], "referenc": 285, "reference_face_indic": 12, "regard": 163, "regist": 192, "register_joint": [200, 282], "reject": 43, "reject_i": 43, "rejecti": 288, "relat": [60, 127, 200, 282], "remain": 288, "remov": [166, 181, 182, 233, 234, 235, 284, 287, 288], "render": [281, 291], "repositori": 279, "repres": [12, 43, 64, 80, 111, 131, 147, 164, 189, 193, 197, 209, 215, 251, 285], "represent": [12, 13, 24, 25, 28, 38, 39, 42, 44, 61, 62, 64, 65, 77, 78, 81, 92, 93, 96, 108, 109, 112, 128, 129, 132, 144, 145, 148, 160, 161, 165, 184, 185, 210, 242, 243, 252, 254, 260, 261, 265, 270, 271, 282], "requir": [45, 82, 166, 181, 196, 200, 279], "requr": 282, "research": [275, 278, 280], "resolv": 278, "respect": [27, 36], "respons": [17, 31, 49, 68, 84, 99, 117, 135, 151], "restor": [22, 36, 57, 75, 90, 106, 124, 142, 158], "restrict": 280, "result": [20, 21, 34, 35, 54, 55, 72, 73, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156, 175, 263, 285], "retriev": [220, 284], "return": [10, 11, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 30, 31, 32, 33, 34, 35, 37, 39, 40, 42, 48, 49, 50, 51, 54, 55, 58, 60, 62, 63, 67, 68, 69, 70, 72, 73, 76, 78, 79, 83, 84, 85, 86, 88, 89, 91, 93, 94, 98, 99, 100, 101, 103, 104, 107, 109, 110, 116, 117, 118, 119, 121, 122, 125, 127, 129, 130, 134, 135, 136, 137, 139, 140, 143, 145, 146, 150, 151, 152, 153, 155, 156, 159, 161, 162, 163, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 185, 186, 187, 188, 189, 190, 192, 196, 202, 204, 206, 208, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 233, 234, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 256, 257, 258, 259, 261, 262, 266, 267, 268, 269, 271, 273, 274, 283], "rhino": [0, 13, 28, 44, 65, 81, 96, 112, 132, 148, 163, 165, 210, 254, 265, 274, 276, 278, 279, 284, 285, 289, 291], "rhinocero": 278, "rhinocommon": 278, "ridg": [12, 15, 193, 201, 288], "right": 280, "robot": [252, 264], "role": [11, 36], "root": [212, 213], "rotat": [238, 239, 248, 249, 285], "rtree": [10, 274], "rule": [278, 281, 283, 285, 288, 292], "run": [276, 278], "sai": 285, "same": [11, 43, 263, 264], "save": [22, 24, 25, 38, 39, 57, 61, 62, 75, 77, 78, 90, 92, 93, 106, 108, 109, 124, 128, 129, 142, 144, 145, 158, 160, 161, 184, 185, 242, 243, 260, 261, 270, 271], "scale": [236, 237, 248, 249, 291], "schema": [18, 19, 26, 32, 33, 40, 50, 51, 63, 69, 70, 79, 85, 86, 94, 100, 101, 110, 118, 119, 130, 136, 137, 146, 152, 153, 162, 179, 180, 188, 226, 227, 250, 257, 258, 262, 267, 268, 273], "scienc": 275, "sdk": 278, "search": [10, 163], "second": [11, 80, 175, 215, 229, 289], "secondarybeam": 289, "section": [43, 164, 177, 178, 276, 281, 285, 288], "secur": 288, "see": [36, 209, 281, 283, 285, 286, 287, 289, 291, 292], "select": 289, "self": [13, 28, 44, 65, 81, 96, 112, 132, 148, 165, 200, 210, 254, 265, 282], "sell": 280, "semant": 278, "sensit": 11, "separ": 284, "sequenc": [263, 278], "sequenti": 288, "serial": [22, 36, 57, 75, 90, 106, 124, 142, 158], "serv": 291, "session": 276, "set": [10, 163, 229, 274, 283, 284, 285], "setcustomattribut": 284, "setstandardattribut": 284, "sever": 288, "shall": 280, "shape": 164, "shift": [64, 95, 131, 147, 288], "shorten": 288, "should": [8, 14, 27, 29, 36, 47, 60, 64, 66, 95, 97, 115, 127, 131, 133, 147, 149, 163, 166, 200, 212, 216, 282], "shouldn": [47, 115], "show": [278, 281, 283], "showassembli": 283, "showbeamfac": 290, "showbeamindex": 290, "showfeatureerror": [283, 290], "showjoiningerror": [283, 290], "showjointtyp": 290, "showtopologytyp": 290, "side": [64, 95, 131, 147, 164, 287, 288], "similar": [13, 28, 44, 65, 81, 96, 112, 132, 148, 165, 210, 254, 265, 288], "simpl": [263, 278, 281], "simplesequencegener": 278, "sinc": 36, "singl": [264, 282, 289], "situat": 288, "size": [285, 291], "slat": 164, "small_beam_butt": 43, "smallbeambutt": 288, "smaller": [43, 47, 60, 115, 127, 164, 285], "so": [200, 280, 282], "softwar": [278, 280], "solid": [164, 283], "some": [47, 115, 200, 281, 291], "sourc": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 284, 285], "spatial": [173, 283], "specialist": 278, "specif": [11, 36, 200, 225, 230, 278, 282, 288, 289], "specifi": 220, "stage": 278, "standard": [164, 284], "start": [164, 166, 175, 176, 178, 281, 285], "static": [20, 21, 34, 35, 54, 55, 72, 73, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156], "step": [253, 255, 263, 278, 282], "still": 10, "stock": [164, 285], "store": [36, 284, 285], "str": [8, 12, 18, 19, 23, 24, 25, 27, 32, 33, 37, 38, 39, 42, 50, 51, 58, 61, 62, 64, 69, 70, 76, 77, 78, 85, 86, 91, 92, 93, 100, 101, 107, 108, 109, 118, 119, 125, 128, 129, 136, 137, 143, 144, 145, 152, 153, 159, 160, 161, 175, 179, 180, 183, 184, 185, 189, 193, 197, 200, 214, 220, 226, 227, 241, 242, 243, 252, 257, 258, 259, 260, 261, 264, 267, 268, 269, 270, 271], "straight": 285, "string": [8, 12, 13, 19, 25, 28, 33, 39, 42, 44, 51, 62, 64, 65, 70, 78, 81, 86, 93, 96, 101, 109, 112, 119, 129, 132, 137, 145, 148, 153, 161, 165, 180, 185, 189, 190, 210, 227, 243, 252, 254, 258, 261, 265, 268, 271, 284, 285, 289], "structur": [245, 246, 247, 275, 278, 281, 283, 292], "stud": [164, 285], "studio": 276, "style": 281, "sub": 95, "subject": 280, "sublicens": 280, "sublim": 276, "substanti": 280, "subtract": [60, 127, 283, 287], "summaris": 288, "support": [264, 275, 276], "suppos": 8, "surfac": [193, 282, 287, 288], "swiss": 275, "system": [164, 285], "t": [47, 95, 111, 115, 131, 147, 207, 289], "take": [13, 28, 44, 65, 81, 96, 112, 132, 148, 165, 210, 254, 265, 282, 292], "tbuttfactori": 278, "tbuttjoint": [36, 277, 278], "termin": [189, 190], "text": 276, "textur": [281, 291], "thalflapjoint": 278, "than": [17, 23, 31, 37, 49, 58, 68, 76, 84, 91, 99, 107, 117, 125, 135, 143, 151, 159, 183, 241, 259, 269, 288], "thei": [11, 292], "them": [17, 31, 49, 68, 80, 84, 99, 117, 135, 151, 200, 229, 276, 282, 284, 288, 289], "thi": [8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 43, 44, 45, 47, 48, 49, 50, 51, 54, 55, 60, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 94, 96, 97, 98, 99, 100, 101, 103, 104, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 127, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 162, 163, 164, 165, 166, 173, 174, 176, 179, 180, 181, 188, 193, 195, 196, 199, 200, 202, 204, 206, 208, 209, 210, 211, 218, 223, 226, 227, 235, 237, 239, 246, 247, 249, 250, 254, 256, 257, 258, 262, 264, 265, 266, 267, 268, 273, 274, 276, 280, 282, 284, 288, 292], "third": 288, "three": [288, 289, 292], "through": [64, 95, 131, 147, 176, 275, 289], "tilt": 288, "timber": [164, 189, 197, 209, 275, 281, 285, 288, 292], "timberassembli": 277, "timbermodel": [17, 31, 49, 68, 84, 99, 117, 135, 151, 278], "tip": 288, "titl": 275, "todo": [47, 60, 115, 127, 176, 240], "togeth": [17, 31, 49, 68, 84, 99, 117, 135, 151, 285], "tol": 11, "toler": [11, 283, 288], "tool": [9, 278, 281, 290, 291], "top": [12, 22, 193, 281, 288], "topo_i": 41, "topo_l": [41, 42], "topo_t": [41, 42], "topo_unknown": [41, 42], "topo_x": [41, 42], "topolog": 289, "topologi": [9, 11, 12, 17, 31, 41, 42, 43, 49, 64, 68, 80, 84, 99, 111, 117, 131, 135, 147, 151, 209, 240, 283, 289, 292], "tort": 280, "total": 209, "touch": 10, "transform": [173, 236, 237, 238, 239, 245, 247, 248, 249], "translat": [236, 237, 238, 239], "tree": [10, 163, 212], "trim": [43, 45, 64, 80, 82, 111, 113, 131, 147, 283, 287], "trimfeatur": 287, "true": [10, 20, 21, 23, 24, 25, 34, 35, 37, 38, 39, 43, 54, 55, 58, 61, 62, 64, 72, 73, 76, 77, 78, 88, 89, 91, 92, 93, 95, 103, 104, 107, 108, 109, 121, 122, 125, 128, 129, 131, 139, 140, 143, 144, 145, 147, 155, 156, 159, 160, 161, 171, 176, 183, 184, 185, 228, 229, 241, 242, 243, 259, 260, 261, 269, 270, 271, 283, 285, 288], "try": 8, "tupl": [11, 20, 21, 27, 34, 35, 54, 55, 72, 73, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156, 164, 176, 215, 216], "two": [8, 11, 12, 17, 27, 31, 43, 49, 64, 68, 80, 84, 99, 117, 135, 151, 175, 215, 216, 229, 234, 288, 289], "txt": 279, "type": [7, 11, 12, 13, 16, 18, 19, 26, 28, 30, 32, 33, 40, 43, 44, 48, 50, 51, 63, 64, 65, 67, 69, 70, 79, 80, 81, 83, 85, 86, 94, 95, 96, 98, 100, 101, 110, 111, 112, 116, 118, 119, 130, 131, 132, 134, 136, 137, 146, 147, 148, 150, 152, 153, 162, 165, 174, 179, 180, 188, 192, 193, 196, 200, 210, 223, 225, 226, 227, 250, 251, 254, 256, 257, 258, 262, 264, 265, 266, 267, 268, 273, 278, 282, 283, 289, 292], "typeerror": [18, 19, 32, 33, 50, 51, 69, 70, 85, 86, 100, 101, 118, 119, 136, 137, 152, 153, 179, 180, 226, 227, 257, 258, 267, 268], "typic": [200, 264, 282], "unchang": 288, "under": [212, 213], "underscor": 284, "uniqu": [27, 220], "unit": [11, 163, 176], "unlik": 288, "up": [60, 127], "updaterefobj": 285, "upon": 278, "upper": 288, "url": 275, "us": [7, 8, 10, 11, 12, 13, 15, 23, 26, 27, 28, 37, 40, 42, 43, 44, 58, 63, 64, 65, 76, 79, 80, 81, 91, 94, 95, 96, 107, 110, 111, 112, 125, 130, 131, 132, 143, 146, 147, 148, 159, 162, 163, 165, 176, 183, 188, 189, 196, 210, 240, 241, 245, 246, 247, 248, 249, 250, 252, 254, 259, 262, 264, 265, 269, 273, 274, 275, 278, 280, 281, 282, 284, 285, 287, 288, 289, 291], "user": 284, "usual": [13, 28, 44, 65, 81, 96, 112, 132, 148, 164, 165, 210, 254, 265], "util": [278, 281], "v1": [23, 37, 58, 76, 91, 107, 125, 143, 159, 183, 241, 259, 269], "v2": [23, 37, 58, 76, 91, 107, 125, 143, 159, 183, 241, 259, 269], "v3": [23, 37, 58, 76, 91, 107, 125, 143, 159, 183, 241, 259, 269], "v7": 279, "valid": [26, 40, 63, 79, 94, 110, 130, 146, 162, 188, 250, 262, 273], "valu": [42, 64, 95, 131, 147, 163, 164, 252, 284], "valueerror": [17, 31, 49, 68, 84, 99, 117, 135, 151, 212, 219], "vector": [177, 178, 236, 237, 248, 249, 278, 285], "veri": 288, "verifi": [17, 31, 49, 68, 84, 99, 117, 135, 151, 176, 230], "version": [23, 37, 58, 76, 91, 107, 125, 143, 159, 183, 241, 259, 269, 279, 288], "vertex_attribut": [23, 37, 58, 76, 91, 107, 125, 143, 159, 183, 241, 259, 269], "vertex_sampl": [23, 37, 58, 76, 91, 107, 125, 143, 159, 183, 241, 259, 269], "vertic": [285, 288], "via": 278, "visual": [8, 189, 190, 253, 264, 276], "visualis": [283, 288], "volum": [60, 127, 209], "wa": [8, 14, 29, 66, 97, 133, 149], "wai": 276, "wall": [209, 218], "warranti": 280, "well": [166, 289], "were": [8, 11, 27, 284], "when": [10, 13, 28, 44, 45, 65, 81, 82, 96, 112, 113, 132, 148, 165, 166, 210, 254, 265, 284, 288], "whenev": [14, 29, 66, 97, 133, 149], "where": [47, 115, 282, 285, 288, 289, 291], "whether": [15, 264, 280], "which": [8, 10, 11, 12, 15, 17, 20, 21, 27, 31, 34, 35, 43, 49, 54, 55, 64, 68, 72, 73, 80, 84, 88, 89, 99, 103, 104, 111, 117, 121, 122, 131, 135, 139, 140, 147, 151, 155, 156, 163, 166, 175, 176, 181, 193, 200, 214, 251, 253, 264, 282, 283, 285], "while": [8, 288], "whom": 280, "whose": [20, 21, 34, 35, 54, 55, 72, 73, 88, 89, 103, 104, 121, 122, 139, 140, 155, 156], "whould": [17, 31, 49, 68, 84, 99, 117, 135, 151], "width": [164, 177, 178, 277, 284, 285], "within": [11, 264, 285], "without": [64, 95, 131, 147, 280, 285], "wood": 164, "work": 275, "workflow": [278, 281, 284, 285], "world": [173, 285], "worldx": [177, 178], "worldxi": 277, "worldz": [177, 178], "write": [284, 285], "written": 278, "x": [95, 147, 164, 238, 239, 285, 289, 291], "xhalflapjoint": 278, "xmax": 164, "xmin": 164, "xml": [189, 190], "y": [164, 238, 239, 285, 291], "ye": 279, "year": 275, "yield": [224, 231, 232], "ymax": 164, "ymin": 164, "you": [275, 281, 292], "your": 275, "yourgithub_usernam": 279, "z": [23, 37, 58, 76, 91, 107, 125, 143, 159, 164, 177, 178, 183, 236, 237, 238, 239, 241, 259, 269, 285, 287, 291], "z_vector": [177, 178], "zenodo": 275, "zmax": 164, "zmin": 164, "zurich": [275, 278], "zvector": [284, 285]}, "titles": ["API Reference", "compas_timber.connections", "compas_timber.elements", "compas_timber.fabrication", "compas_timber.ghpython", "compas_timber.model", "compas_timber.planning", "rhino", "BeamJoinningError", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "FrenchRidgeLapJoint", "FrenchRidgeLapJoint.ToString", "FrenchRidgeLapJoint.add_features", "FrenchRidgeLapJoint.check_geometry", "FrenchRidgeLapJoint.copy", "FrenchRidgeLapJoint.create", "FrenchRidgeLapJoint.from_json", "FrenchRidgeLapJoint.from_jsonstring", "FrenchRidgeLapJoint.get_face_most_ortho_to_beam", "FrenchRidgeLapJoint.get_face_most_towards_beam", "FrenchRidgeLapJoint.restore_beams_from_keys", "FrenchRidgeLapJoint.sha256", "FrenchRidgeLapJoint.to_json", "FrenchRidgeLapJoint.to_jsonstring", "FrenchRidgeLapJoint.validate_data", "Joint", "Joint.ToString", "Joint.add_features", "Joint.copy", "Joint.create", "Joint.from_json", "Joint.from_jsonstring", "Joint.get_face_most_ortho_to_beam", "Joint.get_face_most_towards_beam", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_json", "Joint.to_jsonstring", "Joint.validate_data", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_features", "LButtJoint.back_surface_main", "LButtJoint.calc_params_birdsmouth", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.from_json", "LButtJoint.from_jsonstring", "LButtJoint.front_back_surface_main", "LButtJoint.get_cross_cutting_plane", "LButtJoint.get_face_most_ortho_to_beam", "LButtJoint.get_face_most_towards_beam", "LButtJoint.get_main_cutting_plane", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.side_surfaces_cross", "LButtJoint.subtraction_volume", "LButtJoint.to_json", "LButtJoint.to_jsonstring", "LButtJoint.validate_data", "LHalfLapJoint", "LHalfLapJoint.ToString", "LHalfLapJoint.add_features", "LHalfLapJoint.copy", "LHalfLapJoint.create", "LHalfLapJoint.from_json", "LHalfLapJoint.from_jsonstring", "LHalfLapJoint.get_cross_cutting_frame", "LHalfLapJoint.get_face_most_ortho_to_beam", "LHalfLapJoint.get_face_most_towards_beam", "LHalfLapJoint.get_main_cutting_frame", "LHalfLapJoint.restore_beams_from_keys", "LHalfLapJoint.sha256", "LHalfLapJoint.to_json", "LHalfLapJoint.to_jsonstring", "LHalfLapJoint.validate_data", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_features", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.from_json", "LMiterJoint.from_jsonstring", "LMiterJoint.get_cutting_planes", "LMiterJoint.get_face_most_ortho_to_beam", "LMiterJoint.get_face_most_towards_beam", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_json", "LMiterJoint.to_jsonstring", "LMiterJoint.validate_data", "LapJoint", "LapJoint.ToString", "LapJoint.add_features", "LapJoint.copy", "LapJoint.create", "LapJoint.from_json", "LapJoint.from_jsonstring", "LapJoint.get_cross_cutting_frame", "LapJoint.get_face_most_ortho_to_beam", "LapJoint.get_face_most_towards_beam", "LapJoint.get_main_cutting_frame", "LapJoint.restore_beams_from_keys", "LapJoint.sha256", "LapJoint.to_json", "LapJoint.to_jsonstring", "LapJoint.validate_data", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_features", "TButtJoint.back_surface_main", "TButtJoint.calc_params_birdsmouth", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.from_json", "TButtJoint.from_jsonstring", "TButtJoint.front_back_surface_main", "TButtJoint.get_face_most_ortho_to_beam", "TButtJoint.get_face_most_towards_beam", "TButtJoint.get_main_cutting_plane", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.side_surfaces_cross", "TButtJoint.subtraction_volume", "TButtJoint.to_json", "TButtJoint.to_jsonstring", "TButtJoint.validate_data", "THalfLapJoint", "THalfLapJoint.ToString", "THalfLapJoint.add_features", "THalfLapJoint.copy", "THalfLapJoint.create", "THalfLapJoint.from_json", "THalfLapJoint.from_jsonstring", "THalfLapJoint.get_cross_cutting_frame", "THalfLapJoint.get_face_most_ortho_to_beam", "THalfLapJoint.get_face_most_towards_beam", "THalfLapJoint.get_main_cutting_frame", "THalfLapJoint.restore_beams_from_keys", "THalfLapJoint.sha256", "THalfLapJoint.to_json", "THalfLapJoint.to_jsonstring", "THalfLapJoint.validate_data", "XHalfLapJoint", "XHalfLapJoint.ToString", "XHalfLapJoint.add_features", "XHalfLapJoint.copy", "XHalfLapJoint.create", "XHalfLapJoint.from_json", "XHalfLapJoint.from_jsonstring", "XHalfLapJoint.get_cross_cutting_frame", "XHalfLapJoint.get_face_most_ortho_to_beam", "XHalfLapJoint.get_face_most_towards_beam", "XHalfLapJoint.get_main_cutting_frame", "XHalfLapJoint.restore_beams_from_keys", "XHalfLapJoint.sha256", "XHalfLapJoint.to_json", "XHalfLapJoint.to_jsonstring", "XHalfLapJoint.validate_data", "find_neighboring_beams", "Beam", "Beam.ToString", "Beam.add_blank_extension", "Beam.add_feature", "Beam.add_features", "Beam.compute_aabb", "Beam.compute_collision_mesh", "Beam.compute_geometry", "Beam.compute_obb", "Beam.compute_worldtransformation", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_endpoints", "Beam.from_json", "Beam.from_jsonstring", "Beam.remove_blank_extension", "Beam.remove_features", "Beam.sha256", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transformed", "Beam.validate_data", "BTLx", "BTLx.btlx_string", "BTLx.process_model", "BTLx.register_joint", "BTLxFrenchRidgeLap", "BTLxFrenchRidgeLap.create_process", "BTLxFrenchRidgeLap.get_params", "BTLxFrenchRidgeLap.process_joints", "BTLxJackCut", "BTLxJackCut.create_process", "BTLxJackCut.generate_process", "BTLxProcess", "FrenchRidgeFactory", "FrenchRidgeFactory.apply_processings", "LButtFactory", "LButtFactory.apply_processings", "LMiterFactory", "LMiterFactory.apply_processings", "TButtFactory", "TButtFactory.apply_processings", "TimberModel", "TimberModel.ToString", "TimberModel.add_beam", "TimberModel.add_element", "TimberModel.add_elements", "TimberModel.add_group", "TimberModel.add_interaction", "TimberModel.add_joint", "TimberModel.add_material", "TimberModel.add_wall", "TimberModel.assign_material", "TimberModel.beam_by_guid", "TimberModel.compute_aabb", "TimberModel.compute_obb", "TimberModel.copy", "TimberModel.elements", "TimberModel.elements_connected_by", "TimberModel.from_json", "TimberModel.from_jsonstring", "TimberModel.has_element", "TimberModel.has_interaction", "TimberModel.has_material", "TimberModel.interactions", "TimberModel.materials", "TimberModel.remove_element", "TimberModel.remove_interaction", "TimberModel.remove_joint", "TimberModel.rotate", "TimberModel.rotated", "TimberModel.scale", "TimberModel.scaled", "TimberModel.set_topologies", "TimberModel.sha256", "TimberModel.to_json", "TimberModel.to_jsonstring", "TimberModel.transform", "TimberModel.transform_numpy", "TimberModel.transformed", "TimberModel.transformed_numpy", "TimberModel.translate", "TimberModel.translated", "TimberModel.validate_data", "Actor", "Actor.get_name", "BuildingPlan", "BuildingPlan.ToString", "BuildingPlan.add_step", "BuildingPlan.copy", "BuildingPlan.from_json", "BuildingPlan.from_jsonstring", "BuildingPlan.sha256", "BuildingPlan.to_json", "BuildingPlan.to_jsonstring", "BuildingPlan.validate_data", "SimpleSequenceGenerator", "Step", "Step.ToString", "Step.copy", "Step.from_json", "Step.from_jsonstring", "Step.sha256", "Step.to_json", "Step.to_jsonstring", "Step.transform", "Step.validate_data", "find_neighboring_beams", "Citing", "Examples", "Create Joint", "COMPAS Timber Documentation", "Installation", "License", "Grasshopper plugin", "BTLx Contribution Guide", "Assembly", "Attributes", "Beam", "Examples", "Features", "Joints", "Joint Rules", "Show", "Utils", "Workflow"], "titleterms": {"actor": [251, 252], "add_beam": 211, "add_blank_extens": 166, "add_el": [212, 213], "add_featur": [14, 29, 45, 66, 82, 97, 113, 133, 149, 167, 168], "add_group": 214, "add_interact": 215, "add_joint": 216, "add_materi": 217, "add_step": 255, "add_wal": 218, "api": 0, "apply_process": [202, 204, 206, 208], "assembli": [276, 283], "assign_materi": 219, "attribut": 284, "back_surface_main": [46, 114], "bake": 291, "beam": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 285], "beam_by_guid": 220, "beamjoinningerror": 8, "boxmap": 291, "btlx": [189, 190, 191, 192, 282], "btlx_string": 190, "btlxfrenchridgelap": [193, 194, 195, 196], "btlxjackcut": [197, 198, 199], "btlxprocess": 200, "buildingplan": [253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "calc_params_birdsmouth": [47, 115], "check_geometri": 15, "cite": 275, "class": [1, 2, 3, 4, 5, 6], "compa": 278, "compas_timb": [1, 2, 3, 4, 5, 6], "compute_aabb": [169, 221], "compute_collision_mesh": 170, "compute_geometri": 171, "compute_obb": [172, 222], "compute_worldtransform": 173, "conda": 279, "connect": 1, "connectionsolv": [9, 10, 11], "content": 278, "contribut": 282, "copi": [16, 30, 48, 67, 83, 98, 116, 134, 150, 174, 223, 256, 266], "creat": [17, 31, 49, 68, 84, 99, 117, 135, 151, 277], "create_process": [194, 198], "depend": 278, "develop": 279, "document": 278, "element": [2, 224], "elements_connected_bi": 225, "endpoint_closest_to_point": 175, "error": 290, "exampl": [276, 286], "except": 1, "extension_to_plan": 176, "fabric": 3, "featur": 287, "find_intersecting_pair": 10, "find_neighboring_beam": [163, 274], "find_topologi": 11, "frenchridgefactori": [201, 202], "frenchridgelapjoint": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "from_centerlin": 177, "from_endpoint": 178, "from_json": [18, 32, 50, 69, 85, 100, 118, 136, 152, 179, 226, 257, 267], "from_jsonstr": [19, 33, 51, 70, 86, 101, 119, 137, 153, 180, 227, 258, 268], "front_back_surface_main": [52, 120], "function": 1, "generate_process": 199, "geometri": 290, "get_cross_cutting_fram": [71, 102, 138, 154], "get_cross_cutting_plan": 53, "get_cutting_plan": 87, "get_face_most_ortho_to_beam": [20, 34, 54, 72, 88, 103, 121, 139, 155], "get_face_most_towards_beam": [21, 35, 55, 73, 89, 104, 122, 140, 156], "get_main_cutting_fram": [74, 105, 141, 157], "get_main_cutting_plan": [56, 123], "get_nam": [42, 252], "get_param": 195, "ghpython": 4, "grasshopp": 281, "guid": 282, "has_el": 228, "has_interact": 229, "has_materi": 230, "indic": 278, "instal": 279, "interact": 231, "joint": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 277, 288, 289], "jointtopologi": [41, 42], "l": 288, "lapjoint": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "lbuttfactori": [203, 204], "lbuttjoint": [43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "lhalflapjoint": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "licens": 280, "lmiterfactori": [205, 206], "lmiterjoint": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "materi": 232, "model": 5, "packag": 0, "paramet": [47, 115], "plan": 6, "plugin": [7, 281], "process_joint": 196, "process_model": 191, "refer": 0, "register_joint": 192, "remove_blank_extens": 181, "remove_el": 233, "remove_featur": 182, "remove_interact": 234, "remove_joint": 235, "restore_beams_from_kei": [22, 36, 57, 75, 90, 106, 124, 142, 158], "rhino": 7, "rotat": [236, 237], "rule": 289, "scale": [238, 239], "set_topologi": 240, "sha256": [23, 37, 58, 76, 91, 107, 125, 143, 159, 183, 241, 259, 269], "show": 290, "side_surfaces_cross": [59, 126], "simplesequencegener": 263, "stabl": 279, "step": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "subtraction_volum": [60, 127], "summari": 288, "t": 288, "tabl": [278, 288], "tbuttfactori": [207, 208], "tbuttjoint": [111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "thalflapjoint": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "timber": [276, 278], "timbermodel": [209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "to_json": [24, 38, 61, 77, 92, 108, 128, 144, 160, 184, 242, 260, 270], "to_jsonstr": [25, 39, 62, 78, 93, 109, 129, 145, 161, 185, 243, 261, 271], "topologi": 288, "tostr": [13, 28, 44, 65, 81, 96, 112, 132, 148, 165, 210, 254, 265], "transform": [186, 187, 244, 246, 272], "transform_numpi": 245, "transformed_numpi": 247, "translat": [248, 249], "type": [288, 290], "util": 291, "validate_data": [26, 40, 63, 79, 94, 110, 130, 146, 162, 188, 250, 262, 273], "visualis": 290, "workflow": 292, "x": 288, "xhalflapjoint": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162]}})