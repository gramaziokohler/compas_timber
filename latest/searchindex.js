Search.setIndex({"alltitles": {"API Reference": [[0, null]], "Actor": [[743, null]], "Actor.get_name": [[744, null]], "Attributes": [[818, null]], "BTLx Contribution Guide": [[817, null]], "BTLxPart": [[496, null]], "BTLxPart.et_point_vals": [[497, null]], "BTLxPart.ref_side_from_face": [[498, null]], "BTLxProcessing": [[499, null]], "BTLxProcessing.ToString": [[500, null]], "BTLxProcessing.add_subprocessing": [[501, null]], "BTLxProcessing.copy": [[502, null]], "BTLxProcessing.from_json": [[503, null]], "BTLxProcessing.from_jsonstring": [[504, null]], "BTLxProcessing.sha256": [[505, null]], "BTLxProcessing.to_json": [[506, null]], "BTLxProcessing.to_jsonstring": [[507, null]], "BTLxProcessing.validate_data": [[508, null]], "BTLxWriter": [[509, null]], "BTLxWriter.model_to_xml": [[510, null]], "BTLxWriter.write": [[511, null]], "Bake with BoxMap": [[827, "bake-with-boxmap"]], "BallNodeJoint": [[10, null]], "BallNodeJoint.ToString": [[11, null]], "BallNodeJoint.add_extensions": [[12, null]], "BallNodeJoint.add_features": [[13, null]], "BallNodeJoint.check_elements_compatibility": [[14, null]], "BallNodeJoint.copy": [[15, null]], "BallNodeJoint.create": [[16, null]], "BallNodeJoint.element_count_complies": [[17, null]], "BallNodeJoint.from_json": [[18, null]], "BallNodeJoint.from_jsonstring": [[19, null]], "BallNodeJoint.get_face_most_ortho_to_beam": [[20, null]], "BallNodeJoint.get_face_most_towards_beam": [[21, null]], "BallNodeJoint.restore_beams_from_keys": [[22, null]], "BallNodeJoint.sha256": [[23, null]], "BallNodeJoint.to_json": [[24, null]], "BallNodeJoint.to_jsonstring": [[25, null]], "BallNodeJoint.validate_data": [[26, null]], "Beam": [[369, null]], "Beam.ToString": [[370, null]], "Beam.add_blank_extension": [[371, null]], "Beam.add_feature": [[372, null]], "Beam.add_features": [[373, null]], "Beam.compute_aabb": [[374, null]], "Beam.compute_collision_mesh": [[375, null]], "Beam.compute_geometry": [[376, null]], "Beam.compute_obb": [[377, null]], "Beam.compute_worldtransformation": [[378, null]], "Beam.copy": [[379, null]], "Beam.endpoint_closest_to_point": [[380, null]], "Beam.extension_to_plane": [[381, null]], "Beam.from_centerline": [[382, null]], "Beam.from_endpoints": [[383, null]], "Beam.from_json": [[384, null]], "Beam.from_jsonstring": [[385, null]], "Beam.get_dimensions_relative_to_side": [[386, null]], "Beam.opposing_side_index": [[387, null]], "Beam.remove_blank_extension": [[388, null]], "Beam.remove_features": [[389, null]], "Beam.reset": [[390, null]], "Beam.sha256": [[391, null]], "Beam.side_as_surface": [[392, null]], "Beam.to_json": [[393, null]], "Beam.to_jsonstring": [[394, null]], "Beam.transform": [[395, null]], "Beam.transformed": [[396, null]], "Beam.validate_data": [[397, null]], "BeamJoiningError": [[493, null]], "Beams": [[819, null]], "BuildingPlan": [[745, null]], "BuildingPlan.ToString": [[746, null]], "BuildingPlan.add_step": [[747, null]], "BuildingPlan.copy": [[748, null]], "BuildingPlan.from_json": [[749, null]], "BuildingPlan.from_jsonstring": [[750, null]], "BuildingPlan.sha256": [[751, null]], "BuildingPlan.to_json": [[752, null]], "BuildingPlan.to_jsonstring": [[753, null]], "BuildingPlan.validate_data": [[754, null]], "BuildingPlanParser": [[755, null]], "BuildingPlanParser.parse": [[756, null]], "BuildingPlanParser.serialize": [[757, null]], "COMPAS Timber Documentation": [[813, null]], "Category Joint Rules": [[824, "category-joint-rules"]], "CategoryRule": [[309, null]], "CategoryRule.ToString": [[310, null]], "CategoryRule.comply": [[311, null]], "CategoryRule.get_category_rules": [[312, null]], "CategoryRule.get_direct_rules": [[313, null]], "CategoryRule.get_topology_rules": [[314, null]], "CategoryRule.joints_from_beams_and_rules": [[315, null]], "CategoryRule.reorder": [[316, null]], "Check Attributes": [[818, "check-attributes"]], "Citing": [[810, null]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"]], "ConnectionSolver": [[27, null]], "ConnectionSolver.find_intersecting_pairs": [[28, null]], "ConnectionSolver.find_topology": [[29, null]], "ConnectionSolver.find_wall_wall_topology": [[30, null]], "Create Joint": [[812, null]], "Custom Attributes": [[818, "custom-attributes"]], "Custom Beam Dimensions": [[820, "custom-beam-dimensions"]], "DebugInfomation": [[317, null]], "DebugInfomation.ToString": [[318, null]], "DebugInfomation.add_fastener_error": [[319, null]], "DebugInfomation.add_feature_error": [[320, null]], "DebugInfomation.add_joint_error": [[321, null]], "DecomposeBeam": [[819, "decomposebeam"]], "Default Joint Rules": [[824, "default-joint-rules"]], "Delete Attributes": [[818, "delete-attributes"]], "Dependencies": [[813, "dependencies"]], "Design": [[820, null]], "Development": [[814, "development"]], "Direct Joint Rules": [[824, "direct-joint-rules"]], "DirectRule": [[322, null]], "DirectRule.ToString": [[323, null]], "DirectRule.comply": [[324, null]], "DirectRule.contains": [[325, null]], "DirectRule.get_category_rules": [[326, null]], "DirectRule.get_direct_rules": [[327, null]], "DirectRule.get_topology_rules": [[328, null]], "DirectRule.joints_from_beams_and_rules": [[329, null]], "Double Cut Feature": [[823, "double-cut-feature"]], "DoubleCut": [[512, null]], "DoubleCut.ToString": [[513, null]], "DoubleCut.add_subprocessing": [[514, null]], "DoubleCut.apply": [[515, null]], "DoubleCut.copy": [[516, null]], "DoubleCut.from_json": [[517, null]], "DoubleCut.from_jsonstring": [[518, null]], "DoubleCut.from_planes_and_beam": [[519, null]], "DoubleCut.from_shapes_and_element": [[520, null]], "DoubleCut.planes_from_params_and_beam": [[521, null]], "DoubleCut.sha256": [[522, null]], "DoubleCut.to_json": [[523, null]], "DoubleCut.to_jsonstring": [[524, null]], "DoubleCut.validate_data": [[525, null]], "DovetailMortise": [[526, null]], "DovetailMortise.ToString": [[527, null]], "DovetailMortise.add_subprocessing": [[528, null]], "DovetailMortise.apply": [[529, null]], "DovetailMortise.copy": [[530, null]], "DovetailMortise.define_dovetail_tool": [[531, null]], "DovetailMortise.dovetail_cutting_frames_from_params_and_beam": [[532, null]], "DovetailMortise.dovetail_volume_from_params_and_beam": [[533, null]], "DovetailMortise.frame_from_params_and_beam": [[534, null]], "DovetailMortise.from_frame_and_beam": [[535, null]], "DovetailMortise.from_json": [[536, null]], "DovetailMortise.from_jsonstring": [[537, null]], "DovetailMortise.sha256": [[538, null]], "DovetailMortise.to_json": [[539, null]], "DovetailMortise.to_jsonstring": [[540, null]], "DovetailMortise.validate_data": [[541, null]], "DovetailTenon": [[542, null]], "DovetailTenon.ToString": [[543, null]], "DovetailTenon.add_subprocessing": [[544, null]], "DovetailTenon.apply": [[545, null]], "DovetailTenon.copy": [[546, null]], "DovetailTenon.define_dovetail_tool": [[547, null]], "DovetailTenon.dovetail_cutting_frames_from_params_and_beam": [[548, null]], "DovetailTenon.dovetail_volume_from_params_and_beam": [[549, null]], "DovetailTenon.frame_from_params_and_beam": [[550, null]], "DovetailTenon.from_json": [[551, null]], "DovetailTenon.from_jsonstring": [[552, null]], "DovetailTenon.from_plane_and_beam": [[553, null]], "DovetailTenon.sha256": [[554, null]], "DovetailTenon.to_json": [[555, null]], "DovetailTenon.to_jsonstring": [[556, null]], "DovetailTenon.validate_data": [[557, null]], "Drilling": [[558, null]], "Drilling Feature": [[823, "drilling-feature"]], "Drilling.ToString": [[559, null]], "Drilling.add_subprocessing": [[560, null]], "Drilling.apply": [[561, null]], "Drilling.copy": [[562, null]], "Drilling.cylinder_from_params_and_element": [[563, null]], "Drilling.from_json": [[564, null]], "Drilling.from_jsonstring": [[565, null]], "Drilling.from_line_and_element": [[566, null]], "Drilling.from_shapes_and_element": [[567, null]], "Drilling.sha256": [[568, null]], "Drilling.to_json": [[569, null]], "Drilling.to_jsonstring": [[570, null]], "Drilling.validate_data": [[571, null]], "EdgePositionType": [[572, null]], "Examples": [[811, null], [821, null]], "Exceptions": [[1, "exceptions"]], "Fabrication": [[822, null]], "Fastener": [[398, null]], "Fastener.ToString": [[399, null]], "Fastener.add_feature": [[400, null]], "Fastener.compute_aabb": [[401, null]], "Fastener.compute_collision_mesh": [[402, null]], "Fastener.compute_geometry": [[403, null]], "Fastener.compute_obb": [[404, null]], "Fastener.compute_worldtransformation": [[405, null]], "Fastener.copy": [[406, null]], "Fastener.from_json": [[407, null]], "Fastener.from_jsonstring": [[408, null]], "Fastener.remove_blank_extension": [[409, null]], "Fastener.remove_features": [[410, null]], "Fastener.reset": [[411, null]], "Fastener.sha256": [[412, null]], "Fastener.to_json": [[413, null]], "Fastener.to_jsonstring": [[414, null]], "Fastener.transform": [[415, null]], "Fastener.transformed": [[416, null]], "Fastener.validate_data": [[417, null]], "FastenerApplicationError": [[494, null]], "FastenerTimberInterface": [[418, null]], "FastenerTimberInterface.ToString": [[419, null]], "FastenerTimberInterface.copy": [[420, null]], "FastenerTimberInterface.from_json": [[421, null]], "FastenerTimberInterface.from_jsonstring": [[422, null]], "FastenerTimberInterface.get_features": [[423, null]], "FastenerTimberInterface.sha256": [[424, null]], "FastenerTimberInterface.to_json": [[425, null]], "FastenerTimberInterface.to_jsonstring": [[426, null]], "FastenerTimberInterface.validate_data": [[427, null]], "FeatureApplicationError": [[495, null]], "FeatureDefinition": [[330, null]], "FeatureDefinition.ToString": [[331, null]], "Features": [[823, null]], "FindBeamByRhinoGuid": [[819, "findbeambyrhinoguid"]], "French Ridge Lap": [[824, "french-ridge-lap"]], "FrenchRidgeLap": [[573, null]], "FrenchRidgeLap.ToString": [[574, null]], "FrenchRidgeLap.add_subprocessing": [[575, null]], "FrenchRidgeLap.apply": [[576, null]], "FrenchRidgeLap.copy": [[577, null]], "FrenchRidgeLap.frame_from_params_and_beam": [[578, null]], "FrenchRidgeLap.from_beam_beam_and_plane": [[579, null]], "FrenchRidgeLap.from_json": [[580, null]], "FrenchRidgeLap.from_jsonstring": [[581, null]], "FrenchRidgeLap.lap_volume_from_params_and_beam": [[582, null]], "FrenchRidgeLap.sha256": [[583, null]], "FrenchRidgeLap.to_json": [[584, null]], "FrenchRidgeLap.to_jsonstring": [[585, null]], "FrenchRidgeLap.validate_data": [[586, null]], "Functions": [[1, "functions"], [2, "functions"], [6, "functions"]], "Grasshopper plugin": [[816, null]], "Indices and tables": [[813, "indices-and-tables"]], "Install with conda": [[814, "install-with-conda"]], "Installation": [[814, null]], "Instruction": [[758, null]], "Instruction.ToString": [[759, null]], "Instruction.copy": [[760, null]], "Instruction.from_json": [[761, null]], "Instruction.from_jsonstring": [[762, null]], "Instruction.sha256": [[763, null]], "Instruction.to_json": [[764, null]], "Instruction.to_jsonstring": [[765, null]], "Instruction.transform": [[766, null]], "Instruction.validate_data": [[767, null]], "Jack Rafter Cut Feature": [[823, "jack-rafter-cut-feature"]], "JackRafterCut": [[587, null]], "JackRafterCut.ToString": [[588, null]], "JackRafterCut.add_subprocessing": [[589, null]], "JackRafterCut.apply": [[590, null]], "JackRafterCut.copy": [[591, null]], "JackRafterCut.from_json": [[592, null]], "JackRafterCut.from_jsonstring": [[593, null]], "JackRafterCut.from_plane_and_beam": [[594, null]], "JackRafterCut.from_shapes_and_element": [[595, null]], "JackRafterCut.plane_from_params_and_beam": [[596, null]], "JackRafterCut.sha256": [[597, null]], "JackRafterCut.to_json": [[598, null]], "JackRafterCut.to_jsonstring": [[599, null]], "JackRafterCut.validate_data": [[600, null]], "Joint": [[31, null]], "Joint Rules": [[824, null]], "Joint Rules Components": [[824, "joint-rules-components"]], "Joint Types": [[824, "joint-types"]], "Joint.ToString": [[32, null]], "Joint.add_extensions": [[33, null]], "Joint.add_features": [[34, null]], "Joint.check_elements_compatibility": [[35, null]], "Joint.copy": [[36, null]], "Joint.create": [[37, null]], "Joint.element_count_complies": [[38, null]], "Joint.from_json": [[39, null]], "Joint.from_jsonstring": [[40, null]], "Joint.get_face_most_ortho_to_beam": [[41, null]], "Joint.get_face_most_towards_beam": [[42, null]], "Joint.restore_beams_from_keys": [[43, null]], "Joint.sha256": [[44, null]], "Joint.to_json": [[45, null]], "Joint.to_jsonstring": [[46, null]], "Joint.validate_data": [[47, null]], "JointDefinition": [[332, null]], "JointDefinition.ToString": [[333, null]], "JointDefinition.is_identical": [[334, null]], "JointDefinition.match": [[335, null]], "JointRule": [[336, null]], "JointRule.comply": [[337, null]], "JointRule.get_category_rules": [[338, null]], "JointRule.get_direct_rules": [[339, null]], "JointRule.get_topology_rules": [[340, null]], "JointRule.joints_from_beams_and_rules": [[341, null]], "JointTopology": [[48, null]], "JointTopology.get_name": [[49, null]], "L-Butt": [[824, "l-butt"]], "L-Lap": [[824, "l-lap"]], "L-Miter": [[824, "l-miter"]], "LButtJoint": [[50, null]], "LButtJoint.ToString": [[51, null]], "LButtJoint.add_extensions": [[52, null]], "LButtJoint.add_features": [[53, null]], "LButtJoint.check_elements_compatibility": [[54, null]], "LButtJoint.copy": [[55, null]], "LButtJoint.create": [[56, null]], "LButtJoint.element_count_complies": [[57, null]], "LButtJoint.from_json": [[58, null]], "LButtJoint.from_jsonstring": [[59, null]], "LButtJoint.get_face_most_ortho_to_beam": [[60, null]], "LButtJoint.get_face_most_towards_beam": [[61, null]], "LButtJoint.restore_beams_from_keys": [[62, null]], "LButtJoint.sha256": [[63, null]], "LButtJoint.to_json": [[64, null]], "LButtJoint.to_jsonstring": [[65, null]], "LButtJoint.update_beam_roles": [[66, null]], "LButtJoint.validate_data": [[67, null]], "LFrenchRidgeLapJoint": [[68, null]], "LFrenchRidgeLapJoint.ToString": [[69, null]], "LFrenchRidgeLapJoint.add_extensions": [[70, null]], "LFrenchRidgeLapJoint.add_features": [[71, null]], "LFrenchRidgeLapJoint.check_elements_compatibility": [[72, null]], "LFrenchRidgeLapJoint.copy": [[73, null]], "LFrenchRidgeLapJoint.create": [[74, null]], "LFrenchRidgeLapJoint.element_count_complies": [[75, null]], "LFrenchRidgeLapJoint.from_json": [[76, null]], "LFrenchRidgeLapJoint.from_jsonstring": [[77, null]], "LFrenchRidgeLapJoint.get_cross_cutting_frame": [[78, null]], "LFrenchRidgeLapJoint.get_face_most_ortho_to_beam": [[79, null]], "LFrenchRidgeLapJoint.get_face_most_towards_beam": [[80, null]], "LFrenchRidgeLapJoint.get_main_cutting_frame": [[81, null]], "LFrenchRidgeLapJoint.restore_beams_from_keys": [[82, null]], "LFrenchRidgeLapJoint.sha256": [[83, null]], "LFrenchRidgeLapJoint.to_json": [[84, null]], "LFrenchRidgeLapJoint.to_jsonstring": [[85, null]], "LFrenchRidgeLapJoint.validate_data": [[86, null]], "LLapJoint": [[87, null]], "LLapJoint.ToString": [[88, null]], "LLapJoint.add_extensions": [[89, null]], "LLapJoint.add_features": [[90, null]], "LLapJoint.check_elements_compatibility": [[91, null]], "LLapJoint.copy": [[92, null]], "LLapJoint.create": [[93, null]], "LLapJoint.element_count_complies": [[94, null]], "LLapJoint.from_json": [[95, null]], "LLapJoint.from_jsonstring": [[96, null]], "LLapJoint.get_cross_cutting_frame": [[97, null]], "LLapJoint.get_face_most_ortho_to_beam": [[98, null]], "LLapJoint.get_face_most_towards_beam": [[99, null]], "LLapJoint.get_main_cutting_frame": [[100, null]], "LLapJoint.restore_beams_from_keys": [[101, null]], "LLapJoint.sha256": [[102, null]], "LLapJoint.to_json": [[103, null]], "LLapJoint.to_jsonstring": [[104, null]], "LLapJoint.validate_data": [[105, null]], "LMiterJoint": [[106, null]], "LMiterJoint.ToString": [[107, null]], "LMiterJoint.add_extensions": [[108, null]], "LMiterJoint.add_features": [[109, null]], "LMiterJoint.check_elements_compatibility": [[110, null]], "LMiterJoint.copy": [[111, null]], "LMiterJoint.create": [[112, null]], "LMiterJoint.element_count_complies": [[113, null]], "LMiterJoint.from_json": [[114, null]], "LMiterJoint.from_jsonstring": [[115, null]], "LMiterJoint.get_cutoff_plane": [[116, null]], "LMiterJoint.get_cutting_planes": [[117, null]], "LMiterJoint.get_face_most_ortho_to_beam": [[118, null]], "LMiterJoint.get_face_most_towards_beam": [[119, null]], "LMiterJoint.restore_beams_from_keys": [[120, null]], "LMiterJoint.sha256": [[121, null]], "LMiterJoint.to_json": [[122, null]], "LMiterJoint.to_jsonstring": [[123, null]], "LMiterJoint.validate_data": [[124, null]], "Lap": [[601, null]], "Lap.ToString": [[602, null]], "Lap.add_subprocessing": [[603, null]], "Lap.apply": [[604, null]], "Lap.copy": [[605, null]], "Lap.from_json": [[606, null]], "Lap.from_jsonstring": [[607, null]], "Lap.from_plane_and_beam": [[608, null]], "Lap.planes_from_params_and_beam": [[609, null]], "Lap.sha256": [[610, null]], "Lap.to_json": [[611, null]], "Lap.to_jsonstring": [[612, null]], "Lap.validate_data": [[613, null]], "Lap.volume_from_params_and_beam": [[614, null]], "LapJoint": [[125, null]], "LapJoint.ToString": [[126, null]], "LapJoint.add_extensions": [[127, null]], "LapJoint.add_features": [[128, null]], "LapJoint.check_elements_compatibility": [[129, null]], "LapJoint.copy": [[130, null]], "LapJoint.create": [[131, null]], "LapJoint.element_count_complies": [[132, null]], "LapJoint.from_json": [[133, null]], "LapJoint.from_jsonstring": [[134, null]], "LapJoint.get_cross_cutting_frame": [[135, null]], "LapJoint.get_face_most_ortho_to_beam": [[136, null]], "LapJoint.get_face_most_towards_beam": [[137, null]], "LapJoint.get_main_cutting_frame": [[138, null]], "LapJoint.restore_beams_from_keys": [[139, null]], "LapJoint.sha256": [[140, null]], "LapJoint.to_json": [[141, null]], "LapJoint.to_jsonstring": [[142, null]], "LapJoint.validate_data": [[143, null]], "License": [[815, null]], "LimitationTopType": [[615, null]], "LinearDimension": [[768, null]], "LinearDimension.ToString": [[769, null]], "LinearDimension.copy": [[770, null]], "LinearDimension.from_json": [[771, null]], "LinearDimension.from_jsonstring": [[772, null]], "LinearDimension.sha256": [[773, null]], "LinearDimension.to_json": [[774, null]], "LinearDimension.to_jsonstring": [[775, null]], "LinearDimension.transform": [[776, null]], "LinearDimension.validate_data": [[777, null]], "MachiningLimits": [[616, null]], "Model": [[825, null]], "Model3d": [[778, null]], "Model3d.ToString": [[779, null]], "Model3d.copy": [[780, null]], "Model3d.from_json": [[781, null]], "Model3d.from_jsonstring": [[782, null]], "Model3d.sha256": [[783, null]], "Model3d.to_json": [[784, null]], "Model3d.to_jsonstring": [[785, null]], "Model3d.transform": [[786, null]], "Model3d.validate_data": [[787, null]], "Mortise": [[617, null]], "Mortise.ToString": [[618, null]], "Mortise.add_subprocessing": [[619, null]], "Mortise.apply": [[620, null]], "Mortise.copy": [[621, null]], "Mortise.frame_from_params_and_beam": [[622, null]], "Mortise.from_frame_and_beam": [[623, null]], "Mortise.from_json": [[624, null]], "Mortise.from_jsonstring": [[625, null]], "Mortise.sha256": [[626, null]], "Mortise.to_json": [[627, null]], "Mortise.to_jsonstring": [[628, null]], "Mortise.validate_data": [[629, null]], "Mortise.volume_from_params_and_beam": [[630, null]], "NullJoint": [[144, null]], "NullJoint.ToString": [[145, null]], "NullJoint.add_extensions": [[146, null]], "NullJoint.add_features": [[147, null]], "NullJoint.check_elements_compatibility": [[148, null]], "NullJoint.copy": [[149, null]], "NullJoint.create": [[150, null]], "NullJoint.element_count_complies": [[151, null]], "NullJoint.from_json": [[152, null]], "NullJoint.from_jsonstring": [[153, null]], "NullJoint.get_face_most_ortho_to_beam": [[154, null]], "NullJoint.get_face_most_towards_beam": [[155, null]], "NullJoint.restore_beams_from_keys": [[156, null]], "NullJoint.sha256": [[157, null]], "NullJoint.to_json": [[158, null]], "NullJoint.to_jsonstring": [[159, null]], "NullJoint.validate_data": [[160, null]], "OrientationType": [[631, null]], "Packages": [[0, "packages"]], "Plate": [[428, null]], "Plate.ToString": [[429, null]], "Plate.add_feature": [[430, null]], "Plate.add_features": [[431, null]], "Plate.compute_aabb": [[432, null]], "Plate.compute_collision_mesh": [[433, null]], "Plate.compute_geometry": [[434, null]], "Plate.compute_obb": [[435, null]], "Plate.compute_worldtransformation": [[436, null]], "Plate.copy": [[437, null]], "Plate.from_json": [[438, null]], "Plate.from_jsonstring": [[439, null]], "Plate.remove_blank_extension": [[440, null]], "Plate.remove_features": [[441, null]], "Plate.reset": [[442, null]], "Plate.set_frame_and_outline": [[443, null]], "Plate.sha256": [[444, null]], "Plate.to_json": [[445, null]], "Plate.to_jsonstring": [[446, null]], "Plate.transform": [[447, null]], "Plate.transformed": [[448, null]], "Plate.validate_data": [[449, null]], "Plugins": [[9, "plugins"]], "Show": [[826, null]], "Show Beam Face Index": [[826, "show-beam-face-index"]], "Show Beam Index": [[826, "show-beam-index"]], "Show Feature Errors": [[826, "show-feature-errors"]], "Show Joining Errors": [[826, "show-joining-errors"]], "Show Joint Types": [[826, "show-joint-types"]], "Show Surface Model Beam Types": [[826, "show-surface-model-beam-types"]], "Show Topology Types": [[826, "show-topology-types"]], "SimpleSequenceGenerator": [[788, null]], "Slot": [[632, null]], "Slot.ToString": [[633, null]], "Slot.add_subprocessing": [[634, null]], "Slot.apply": [[635, null]], "Slot.copy": [[636, null]], "Slot.from_json": [[637, null]], "Slot.from_jsonstring": [[638, null]], "Slot.from_plane_and_beam": [[639, null]], "Slot.sha256": [[640, null]], "Slot.to_json": [[641, null]], "Slot.to_jsonstring": [[642, null]], "Slot.validate_data": [[643, null]], "Stable": [[814, "stable"]], "Standard Attributes": [[818, "standard-attributes"]], "Step": [[789, null]], "Step.ToString": [[790, null]], "Step.copy": [[791, null]], "Step.from_json": [[792, null]], "Step.from_jsonstring": [[793, null]], "Step.sha256": [[794, null]], "Step.to_json": [[795, null]], "Step.to_jsonstring": [[796, null]], "Step.transform": [[797, null]], "Step.validate_data": [[798, null]], "StepJoint": [[644, null]], "StepJoint.ToString": [[645, null]], "StepJoint.add_subprocessing": [[646, null]], "StepJoint.add_tenon": [[647, null]], "StepJoint.apply": [[648, null]], "StepJoint.copy": [[649, null]], "StepJoint.from_json": [[650, null]], "StepJoint.from_jsonstring": [[651, null]], "StepJoint.from_plane_and_beam": [[652, null]], "StepJoint.planes_from_params_and_beam": [[653, null]], "StepJoint.sha256": [[654, null]], "StepJoint.tenon_volume_from_params_and_beam": [[655, null]], "StepJoint.to_json": [[656, null]], "StepJoint.to_jsonstring": [[657, null]], "StepJoint.validate_data": [[658, null]], "StepJointNotch": [[659, null]], "StepJointNotch.ToString": [[660, null]], "StepJointNotch.add_mortise": [[661, null]], "StepJointNotch.add_subprocessing": [[662, null]], "StepJointNotch.apply": [[663, null]], "StepJointNotch.copy": [[664, null]], "StepJointNotch.from_json": [[665, null]], "StepJointNotch.from_jsonstring": [[666, null]], "StepJointNotch.from_plane_and_beam": [[667, null]], "StepJointNotch.mortise_volume_from_params_and_beam": [[668, null]], "StepJointNotch.planes_from_params_and_beam": [[669, null]], "StepJointNotch.sha256": [[670, null]], "StepJointNotch.to_json": [[671, null]], "StepJointNotch.to_jsonstring": [[672, null]], "StepJointNotch.validate_data": [[673, null]], "StepShapeType": [[674, null]], "Summary Table": [[824, "summary-table"]], "Surface Model": [[820, "surface-model"]], "Surface Model Joint Override": [[824, "surface-model-joint-override"]], "Surface Model Options": [[820, "surface-model-options"]], "SurfaceModel": [[342, null]], "SurfaceModel.beam_category_names": [[343, null]], "SurfaceModel.create_model": [[344, null]], "SurfaceModel.cull_overlaps": [[345, null]], "SurfaceModel.distance_between_elements": [[346, null]], "SurfaceModel.generate_frame": [[347, null]], "SurfaceModel.generate_perimeter_beams": [[348, null]], "SurfaceModel.generate_plates": [[349, null]], "SurfaceModel.generate_stud_lines": [[350, null]], "SurfaceModel.generate_studs": [[351, null]], "SurfaceModel.generate_windows": [[352, null]], "SurfaceModel.get_beam_intersections": [[353, null]], "SurfaceModel.get_interior_segment_indices": [[354, null]], "SurfaceModel.offset_elements": [[355, null]], "SurfaceModel.parse_loops": [[356, null]], "SurfaceModel.trim_jack_studs": [[357, null]], "SurfaceModel.trim_king_studs": [[358, null]], "SurfaceModel.trim_studs": [[359, null]], "T-Birdsmouth": [[824, "t-birdsmouth"]], "T-Butt": [[824, "t-butt"]], "T-Dovetail": [[824, "t-dovetail"]], "T-Lap": [[824, "t-lap"]], "T-Step": [[824, "t-step"]], "TBirdsmouthJoint": [[161, null]], "TBirdsmouthJoint.ToString": [[162, null]], "TBirdsmouthJoint.add_extensions": [[163, null]], "TBirdsmouthJoint.add_features": [[164, null]], "TBirdsmouthJoint.check_elements_compatibility": [[165, null]], "TBirdsmouthJoint.copy": [[166, null]], "TBirdsmouthJoint.create": [[167, null]], "TBirdsmouthJoint.element_count_complies": [[168, null]], "TBirdsmouthJoint.from_json": [[169, null]], "TBirdsmouthJoint.from_jsonstring": [[170, null]], "TBirdsmouthJoint.get_face_most_ortho_to_beam": [[171, null]], "TBirdsmouthJoint.get_face_most_towards_beam": [[172, null]], "TBirdsmouthJoint.restore_beams_from_keys": [[173, null]], "TBirdsmouthJoint.sha256": [[174, null]], "TBirdsmouthJoint.to_json": [[175, null]], "TBirdsmouthJoint.to_jsonstring": [[176, null]], "TBirdsmouthJoint.validate_data": [[177, null]], "TButtJoint": [[178, null]], "TButtJoint.ToString": [[179, null]], "TButtJoint.add_extensions": [[180, null]], "TButtJoint.add_features": [[181, null]], "TButtJoint.check_elements_compatibility": [[182, null]], "TButtJoint.copy": [[183, null]], "TButtJoint.create": [[184, null]], "TButtJoint.element_count_complies": [[185, null]], "TButtJoint.from_json": [[186, null]], "TButtJoint.from_jsonstring": [[187, null]], "TButtJoint.get_face_most_ortho_to_beam": [[188, null]], "TButtJoint.get_face_most_towards_beam": [[189, null]], "TButtJoint.restore_beams_from_keys": [[190, null]], "TButtJoint.sha256": [[191, null]], "TButtJoint.to_json": [[192, null]], "TButtJoint.to_jsonstring": [[193, null]], "TButtJoint.validate_data": [[194, null]], "TDovetailJoint": [[195, null]], "TDovetailJoint.ToString": [[196, null]], "TDovetailJoint.add_extensions": [[197, null]], "TDovetailJoint.add_features": [[198, null]], "TDovetailJoint.check_elements_compatibility": [[199, null]], "TDovetailJoint.copy": [[200, null]], "TDovetailJoint.create": [[201, null]], "TDovetailJoint.define_dovetail_tool": [[202, null]], "TDovetailJoint.element_count_complies": [[203, null]], "TDovetailJoint.from_json": [[204, null]], "TDovetailJoint.from_jsonstring": [[205, null]], "TDovetailJoint.get_face_most_ortho_to_beam": [[206, null]], "TDovetailJoint.get_face_most_towards_beam": [[207, null]], "TDovetailJoint.restore_beams_from_keys": [[208, null]], "TDovetailJoint.sha256": [[209, null]], "TDovetailJoint.to_json": [[210, null]], "TDovetailJoint.to_jsonstring": [[211, null]], "TDovetailJoint.validate_data": [[212, null]], "TLapJoint": [[213, null]], "TLapJoint.ToString": [[214, null]], "TLapJoint.add_extensions": [[215, null]], "TLapJoint.add_features": [[216, null]], "TLapJoint.check_elements_compatibility": [[217, null]], "TLapJoint.copy": [[218, null]], "TLapJoint.create": [[219, null]], "TLapJoint.element_count_complies": [[220, null]], "TLapJoint.from_json": [[221, null]], "TLapJoint.from_jsonstring": [[222, null]], "TLapJoint.get_cross_cutting_frame": [[223, null]], "TLapJoint.get_face_most_ortho_to_beam": [[224, null]], "TLapJoint.get_face_most_towards_beam": [[225, null]], "TLapJoint.get_main_cutting_frame": [[226, null]], "TLapJoint.restore_beams_from_keys": [[227, null]], "TLapJoint.sha256": [[228, null]], "TLapJoint.to_json": [[229, null]], "TLapJoint.to_jsonstring": [[230, null]], "TLapJoint.validate_data": [[231, null]], "TStepJoint": [[232, null]], "TStepJoint.ToString": [[233, null]], "TStepJoint.add_extensions": [[234, null]], "TStepJoint.add_features": [[235, null]], "TStepJoint.check_elements_compatibility": [[236, null]], "TStepJoint.copy": [[237, null]], "TStepJoint.create": [[238, null]], "TStepJoint.element_count_complies": [[239, null]], "TStepJoint.from_json": [[240, null]], "TStepJoint.from_jsonstring": [[241, null]], "TStepJoint.get_face_most_ortho_to_beam": [[242, null]], "TStepJoint.get_face_most_towards_beam": [[243, null]], "TStepJoint.restore_beams_from_keys": [[244, null]], "TStepJoint.set_step_depths": [[245, null]], "TStepJoint.sha256": [[246, null]], "TStepJoint.to_json": [[247, null]], "TStepJoint.to_jsonstring": [[248, null]], "TStepJoint.validate_data": [[249, null]], "Table of Contents": [[813, "table-of-contents"]], "Tenon": [[675, null]], "Tenon and Mortise": [[824, "tenon-and-mortise"], [824, "id1"]], "Tenon.ToString": [[676, null]], "Tenon.add_subprocessing": [[677, null]], "Tenon.apply": [[678, null]], "Tenon.copy": [[679, null]], "Tenon.frame_from_params_and_beam": [[680, null]], "Tenon.from_json": [[681, null]], "Tenon.from_jsonstring": [[682, null]], "Tenon.from_plane_and_beam": [[683, null]], "Tenon.sha256": [[684, null]], "Tenon.to_json": [[685, null]], "Tenon.to_jsonstring": [[686, null]], "Tenon.validate_data": [[687, null]], "Tenon.volume_from_params_and_beam": [[688, null]], "TenonMortiseJoint": [[250, null]], "TenonMortiseJoint.ToString": [[251, null]], "TenonMortiseJoint.add_extensions": [[252, null]], "TenonMortiseJoint.add_features": [[253, null]], "TenonMortiseJoint.check_elements_compatibility": [[254, null]], "TenonMortiseJoint.copy": [[255, null]], "TenonMortiseJoint.create": [[256, null]], "TenonMortiseJoint.element_count_complies": [[257, null]], "TenonMortiseJoint.from_json": [[258, null]], "TenonMortiseJoint.from_jsonstring": [[259, null]], "TenonMortiseJoint.get_face_most_ortho_to_beam": [[260, null]], "TenonMortiseJoint.get_face_most_towards_beam": [[261, null]], "TenonMortiseJoint.restore_beams_from_keys": [[262, null]], "TenonMortiseJoint.set_default_values": [[263, null]], "TenonMortiseJoint.sha256": [[264, null]], "TenonMortiseJoint.to_json": [[265, null]], "TenonMortiseJoint.to_jsonstring": [[266, null]], "TenonMortiseJoint.validate_data": [[267, null]], "TenonShapeType": [[689, null]], "Text3d": [[799, null]], "Text3d.ToString": [[800, null]], "Text3d.copy": [[801, null]], "Text3d.from_json": [[802, null]], "Text3d.from_jsonstring": [[803, null]], "Text3d.sha256": [[804, null]], "Text3d.to_json": [[805, null]], "Text3d.to_jsonstring": [[806, null]], "Text3d.transform": [[807, null]], "Text3d.validate_data": [[808, null]], "Timber Assembly Examples": [[811, "timber-assembly-examples"]], "TimberElement": [[450, null]], "TimberElement.ToString": [[451, null]], "TimberElement.add_feature": [[452, null]], "TimberElement.compute_aabb": [[453, null]], "TimberElement.compute_collision_mesh": [[454, null]], "TimberElement.compute_geometry": [[455, null]], "TimberElement.compute_obb": [[456, null]], "TimberElement.compute_worldtransformation": [[457, null]], "TimberElement.copy": [[458, null]], "TimberElement.from_json": [[459, null]], "TimberElement.from_jsonstring": [[460, null]], "TimberElement.remove_blank_extension": [[461, null]], "TimberElement.remove_features": [[462, null]], "TimberElement.reset": [[463, null]], "TimberElement.sha256": [[464, null]], "TimberElement.to_json": [[465, null]], "TimberElement.to_jsonstring": [[466, null]], "TimberElement.transform": [[467, null]], "TimberElement.transformed": [[468, null]], "TimberElement.validate_data": [[469, null]], "TimberModel": [[697, null]], "TimberModel.ToString": [[698, null]], "TimberModel.add_element": [[699, null]], "TimberModel.add_elements": [[700, null]], "TimberModel.add_group": [[701, null]], "TimberModel.add_group_element": [[702, null]], "TimberModel.add_interaction": [[703, null]], "TimberModel.add_joint": [[704, null]], "TimberModel.add_material": [[705, null]], "TimberModel.assign_material": [[706, null]], "TimberModel.compute_aabb": [[707, null]], "TimberModel.compute_obb": [[708, null]], "TimberModel.connect_adjacent_walls": [[709, null]], "TimberModel.copy": [[710, null]], "TimberModel.element_by_guid": [[711, null]], "TimberModel.elements": [[712, null]], "TimberModel.elements_connected_by": [[713, null]], "TimberModel.from_json": [[714, null]], "TimberModel.from_jsonstring": [[715, null]], "TimberModel.get_elements_in_group": [[716, null]], "TimberModel.get_interactions_for_element": [[717, null]], "TimberModel.has_element": [[718, null]], "TimberModel.has_group": [[719, null]], "TimberModel.has_interaction": [[720, null]], "TimberModel.has_material": [[721, null]], "TimberModel.interactions": [[722, null]], "TimberModel.materials": [[723, null]], "TimberModel.process_joinery": [[724, null]], "TimberModel.remove_element": [[725, null]], "TimberModel.remove_interaction": [[726, null]], "TimberModel.remove_joint": [[727, null]], "TimberModel.rotate": [[728, null]], "TimberModel.rotated": [[729, null]], "TimberModel.scale": [[730, null]], "TimberModel.scaled": [[731, null]], "TimberModel.set_topologies": [[732, null]], "TimberModel.sha256": [[733, null]], "TimberModel.to_json": [[734, null]], "TimberModel.to_jsonstring": [[735, null]], "TimberModel.transform": [[736, null]], "TimberModel.transform_numpy": [[737, null]], "TimberModel.transformed": [[738, null]], "TimberModel.transformed_numpy": [[739, null]], "TimberModel.translate": [[740, null]], "TimberModel.translated": [[741, null]], "TimberModel.validate_data": [[742, null]], "Topological Joint Rules": [[824, "topological-joint-rules"]], "TopologyRule": [[360, null]], "TopologyRule.ToString": [[361, null]], "TopologyRule.comply": [[362, null]], "TopologyRule.get_category_rules": [[363, null]], "TopologyRule.get_direct_rules": [[364, null]], "TopologyRule.get_topology_rules": [[365, null]], "TopologyRule.joints_from_beams_and_rules": [[366, null]], "Utils": [[827, null]], "Wall": [[470, null]], "Wall.ToString": [[471, null]], "Wall.add_feature": [[472, null]], "Wall.compute_aabb": [[473, null]], "Wall.compute_collision_mesh": [[474, null]], "Wall.compute_geometry": [[475, null]], "Wall.compute_obb": [[476, null]], "Wall.compute_worldtransformation": [[477, null]], "Wall.copy": [[478, null]], "Wall.from_boundary": [[479, null]], "Wall.from_brep": [[480, null]], "Wall.from_json": [[481, null]], "Wall.from_jsonstring": [[482, null]], "Wall.remove_blank_extension": [[483, null]], "Wall.remove_features": [[484, null]], "Wall.reset": [[485, null]], "Wall.rotate": [[486, null]], "Wall.sha256": [[487, null]], "Wall.to_json": [[488, null]], "Wall.to_jsonstring": [[489, null]], "Wall.transform": [[490, null]], "Wall.transformed": [[491, null]], "Wall.validate_data": [[492, null]], "Workflow": [[828, null]], "Write BTLx": [[822, "write-btlx"]], "X-Lap": [[824, "x-lap"]], "XLapJoint": [[268, null]], "XLapJoint.ToString": [[269, null]], "XLapJoint.add_extensions": [[270, null]], "XLapJoint.add_features": [[271, null]], "XLapJoint.check_elements_compatibility": [[272, null]], "XLapJoint.copy": [[273, null]], "XLapJoint.create": [[274, null]], "XLapJoint.element_count_complies": [[275, null]], "XLapJoint.from_json": [[276, null]], "XLapJoint.from_jsonstring": [[277, null]], "XLapJoint.get_cross_cutting_frame": [[278, null]], "XLapJoint.get_face_most_ortho_to_beam": [[279, null]], "XLapJoint.get_face_most_towards_beam": [[280, null]], "XLapJoint.get_main_cutting_frame": [[281, null]], "XLapJoint.restore_beams_from_keys": [[282, null]], "XLapJoint.sha256": [[283, null]], "XLapJoint.to_json": [[284, null]], "XLapJoint.to_jsonstring": [[285, null]], "XLapJoint.validate_data": [[286, null]], "YButtJoint": [[287, null]], "YButtJoint.ToString": [[288, null]], "YButtJoint.add_extensions": [[289, null]], "YButtJoint.add_features": [[290, null]], "YButtJoint.check_beam_compatibility": [[291, null]], "YButtJoint.check_elements_compatibility": [[292, null]], "YButtJoint.copy": [[293, null]], "YButtJoint.create": [[294, null]], "YButtJoint.cross_beam_ref_side_index": [[295, null]], "YButtJoint.element_count_complies": [[296, null]], "YButtJoint.from_json": [[297, null]], "YButtJoint.from_jsonstring": [[298, null]], "YButtJoint.get_face_most_ortho_to_beam": [[299, null]], "YButtJoint.get_face_most_towards_beam": [[300, null]], "YButtJoint.get_miter_planes": [[301, null]], "YButtJoint.main_beam_ref_side_index": [[302, null]], "YButtJoint.restore_beams_from_keys": [[303, null]], "YButtJoint.sha256": [[304, null]], "YButtJoint.to_json": [[305, null]], "YButtJoint.to_jsonstring": [[306, null]], "YButtJoint.validate_data": [[307, null]], "add_gh_param": [[690, null]], "clear_gh_params": [[691, null]], "compas_timber.connections": [[1, null]], "compas_timber.design": [[2, null]], "compas_timber.elements": [[3, null]], "compas_timber.errors": [[4, null]], "compas_timber.fabrication": [[5, null]], "compas_timber.ghpython": [[6, null]], "compas_timber.model": [[7, null]], "compas_timber.planning": [[8, null]], "compas_timber.rhino": [[9, null]], "find_neighboring_elements": [[308, null], [809, null]], "get_leaf_subclasses": [[692, null]], "guess_joint_topology_2beams": [[367, null]], "item_input_valid": [[693, null]], "list_input_valid": [[694, null]], "manage_dynamic_params": [[695, null]], "rename_gh_input": [[696, null]], "set_default_joints": [[368, null]]}, "docnames": ["api", "api/compas_timber.connections", "api/compas_timber.design", "api/compas_timber.elements", "api/compas_timber.errors", "api/compas_timber.fabrication", "api/compas_timber.ghpython", "api/compas_timber.model", "api/compas_timber.planning", "api/compas_timber.rhino", "api/generated/compas_timber.connections.BallNodeJoint", "api/generated/compas_timber.connections.BallNodeJoint.ToString", "api/generated/compas_timber.connections.BallNodeJoint.add_extensions", "api/generated/compas_timber.connections.BallNodeJoint.add_features", "api/generated/compas_timber.connections.BallNodeJoint.check_elements_compatibility", "api/generated/compas_timber.connections.BallNodeJoint.copy", "api/generated/compas_timber.connections.BallNodeJoint.create", "api/generated/compas_timber.connections.BallNodeJoint.element_count_complies", "api/generated/compas_timber.connections.BallNodeJoint.from_json", "api/generated/compas_timber.connections.BallNodeJoint.from_jsonstring", "api/generated/compas_timber.connections.BallNodeJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.BallNodeJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.BallNodeJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.BallNodeJoint.sha256", "api/generated/compas_timber.connections.BallNodeJoint.to_json", "api/generated/compas_timber.connections.BallNodeJoint.to_jsonstring", "api/generated/compas_timber.connections.BallNodeJoint.validate_data", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.ConnectionSolver.find_wall_wall_topology", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_extensions", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.check_elements_compatibility", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.element_count_complies", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.from_jsonstring", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.to_jsonstring", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_extensions", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.element_count_complies", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring", "api/generated/compas_timber.connections.LButtJoint.update_beam_roles", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.ToString", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.add_extensions", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.add_features", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.copy", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.create", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.element_count_complies", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.from_json", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.from_jsonstring", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.sha256", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.to_json", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.to_jsonstring", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.validate_data", "api/generated/compas_timber.connections.LLapJoint", "api/generated/compas_timber.connections.LLapJoint.ToString", "api/generated/compas_timber.connections.LLapJoint.add_extensions", "api/generated/compas_timber.connections.LLapJoint.add_features", "api/generated/compas_timber.connections.LLapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LLapJoint.copy", "api/generated/compas_timber.connections.LLapJoint.create", "api/generated/compas_timber.connections.LLapJoint.element_count_complies", "api/generated/compas_timber.connections.LLapJoint.from_json", "api/generated/compas_timber.connections.LLapJoint.from_jsonstring", "api/generated/compas_timber.connections.LLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LLapJoint.sha256", "api/generated/compas_timber.connections.LLapJoint.to_json", "api/generated/compas_timber.connections.LLapJoint.to_jsonstring", "api/generated/compas_timber.connections.LLapJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_extensions", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.element_count_complies", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.get_cutoff_plane", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.LapJoint", "api/generated/compas_timber.connections.LapJoint.ToString", "api/generated/compas_timber.connections.LapJoint.add_extensions", "api/generated/compas_timber.connections.LapJoint.add_features", "api/generated/compas_timber.connections.LapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LapJoint.copy", "api/generated/compas_timber.connections.LapJoint.create", "api/generated/compas_timber.connections.LapJoint.element_count_complies", "api/generated/compas_timber.connections.LapJoint.from_json", "api/generated/compas_timber.connections.LapJoint.from_jsonstring", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LapJoint.sha256", "api/generated/compas_timber.connections.LapJoint.to_json", "api/generated/compas_timber.connections.LapJoint.to_jsonstring", "api/generated/compas_timber.connections.LapJoint.validate_data", "api/generated/compas_timber.connections.NullJoint", "api/generated/compas_timber.connections.NullJoint.ToString", "api/generated/compas_timber.connections.NullJoint.add_extensions", "api/generated/compas_timber.connections.NullJoint.add_features", "api/generated/compas_timber.connections.NullJoint.check_elements_compatibility", "api/generated/compas_timber.connections.NullJoint.copy", "api/generated/compas_timber.connections.NullJoint.create", "api/generated/compas_timber.connections.NullJoint.element_count_complies", "api/generated/compas_timber.connections.NullJoint.from_json", "api/generated/compas_timber.connections.NullJoint.from_jsonstring", "api/generated/compas_timber.connections.NullJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.NullJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.NullJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.NullJoint.sha256", "api/generated/compas_timber.connections.NullJoint.to_json", "api/generated/compas_timber.connections.NullJoint.to_jsonstring", "api/generated/compas_timber.connections.NullJoint.validate_data", "api/generated/compas_timber.connections.TBirdsmouthJoint", "api/generated/compas_timber.connections.TBirdsmouthJoint.ToString", "api/generated/compas_timber.connections.TBirdsmouthJoint.add_extensions", "api/generated/compas_timber.connections.TBirdsmouthJoint.add_features", "api/generated/compas_timber.connections.TBirdsmouthJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TBirdsmouthJoint.copy", "api/generated/compas_timber.connections.TBirdsmouthJoint.create", "api/generated/compas_timber.connections.TBirdsmouthJoint.element_count_complies", "api/generated/compas_timber.connections.TBirdsmouthJoint.from_json", "api/generated/compas_timber.connections.TBirdsmouthJoint.from_jsonstring", "api/generated/compas_timber.connections.TBirdsmouthJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TBirdsmouthJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TBirdsmouthJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TBirdsmouthJoint.sha256", "api/generated/compas_timber.connections.TBirdsmouthJoint.to_json", "api/generated/compas_timber.connections.TBirdsmouthJoint.to_jsonstring", "api/generated/compas_timber.connections.TBirdsmouthJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_extensions", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.element_count_complies", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.TDovetailJoint", "api/generated/compas_timber.connections.TDovetailJoint.ToString", "api/generated/compas_timber.connections.TDovetailJoint.add_extensions", "api/generated/compas_timber.connections.TDovetailJoint.add_features", "api/generated/compas_timber.connections.TDovetailJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TDovetailJoint.copy", "api/generated/compas_timber.connections.TDovetailJoint.create", "api/generated/compas_timber.connections.TDovetailJoint.define_dovetail_tool", "api/generated/compas_timber.connections.TDovetailJoint.element_count_complies", "api/generated/compas_timber.connections.TDovetailJoint.from_json", "api/generated/compas_timber.connections.TDovetailJoint.from_jsonstring", "api/generated/compas_timber.connections.TDovetailJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TDovetailJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TDovetailJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TDovetailJoint.sha256", "api/generated/compas_timber.connections.TDovetailJoint.to_json", "api/generated/compas_timber.connections.TDovetailJoint.to_jsonstring", "api/generated/compas_timber.connections.TDovetailJoint.validate_data", "api/generated/compas_timber.connections.TLapJoint", "api/generated/compas_timber.connections.TLapJoint.ToString", "api/generated/compas_timber.connections.TLapJoint.add_extensions", "api/generated/compas_timber.connections.TLapJoint.add_features", "api/generated/compas_timber.connections.TLapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TLapJoint.copy", "api/generated/compas_timber.connections.TLapJoint.create", "api/generated/compas_timber.connections.TLapJoint.element_count_complies", "api/generated/compas_timber.connections.TLapJoint.from_json", "api/generated/compas_timber.connections.TLapJoint.from_jsonstring", "api/generated/compas_timber.connections.TLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.TLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.TLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TLapJoint.sha256", "api/generated/compas_timber.connections.TLapJoint.to_json", "api/generated/compas_timber.connections.TLapJoint.to_jsonstring", "api/generated/compas_timber.connections.TLapJoint.validate_data", "api/generated/compas_timber.connections.TStepJoint", "api/generated/compas_timber.connections.TStepJoint.ToString", "api/generated/compas_timber.connections.TStepJoint.add_extensions", "api/generated/compas_timber.connections.TStepJoint.add_features", "api/generated/compas_timber.connections.TStepJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TStepJoint.copy", "api/generated/compas_timber.connections.TStepJoint.create", "api/generated/compas_timber.connections.TStepJoint.element_count_complies", "api/generated/compas_timber.connections.TStepJoint.from_json", "api/generated/compas_timber.connections.TStepJoint.from_jsonstring", "api/generated/compas_timber.connections.TStepJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TStepJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TStepJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TStepJoint.set_step_depths", "api/generated/compas_timber.connections.TStepJoint.sha256", "api/generated/compas_timber.connections.TStepJoint.to_json", "api/generated/compas_timber.connections.TStepJoint.to_jsonstring", "api/generated/compas_timber.connections.TStepJoint.validate_data", "api/generated/compas_timber.connections.TenonMortiseJoint", "api/generated/compas_timber.connections.TenonMortiseJoint.ToString", "api/generated/compas_timber.connections.TenonMortiseJoint.add_extensions", "api/generated/compas_timber.connections.TenonMortiseJoint.add_features", "api/generated/compas_timber.connections.TenonMortiseJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TenonMortiseJoint.copy", "api/generated/compas_timber.connections.TenonMortiseJoint.create", "api/generated/compas_timber.connections.TenonMortiseJoint.element_count_complies", "api/generated/compas_timber.connections.TenonMortiseJoint.from_json", "api/generated/compas_timber.connections.TenonMortiseJoint.from_jsonstring", "api/generated/compas_timber.connections.TenonMortiseJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TenonMortiseJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TenonMortiseJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TenonMortiseJoint.set_default_values", "api/generated/compas_timber.connections.TenonMortiseJoint.sha256", "api/generated/compas_timber.connections.TenonMortiseJoint.to_json", "api/generated/compas_timber.connections.TenonMortiseJoint.to_jsonstring", "api/generated/compas_timber.connections.TenonMortiseJoint.validate_data", "api/generated/compas_timber.connections.XLapJoint", "api/generated/compas_timber.connections.XLapJoint.ToString", "api/generated/compas_timber.connections.XLapJoint.add_extensions", "api/generated/compas_timber.connections.XLapJoint.add_features", "api/generated/compas_timber.connections.XLapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.XLapJoint.copy", "api/generated/compas_timber.connections.XLapJoint.create", "api/generated/compas_timber.connections.XLapJoint.element_count_complies", "api/generated/compas_timber.connections.XLapJoint.from_json", "api/generated/compas_timber.connections.XLapJoint.from_jsonstring", "api/generated/compas_timber.connections.XLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.XLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.XLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.XLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.XLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.XLapJoint.sha256", "api/generated/compas_timber.connections.XLapJoint.to_json", "api/generated/compas_timber.connections.XLapJoint.to_jsonstring", "api/generated/compas_timber.connections.XLapJoint.validate_data", "api/generated/compas_timber.connections.YButtJoint", "api/generated/compas_timber.connections.YButtJoint.ToString", "api/generated/compas_timber.connections.YButtJoint.add_extensions", "api/generated/compas_timber.connections.YButtJoint.add_features", "api/generated/compas_timber.connections.YButtJoint.check_beam_compatibility", "api/generated/compas_timber.connections.YButtJoint.check_elements_compatibility", "api/generated/compas_timber.connections.YButtJoint.copy", "api/generated/compas_timber.connections.YButtJoint.create", "api/generated/compas_timber.connections.YButtJoint.cross_beam_ref_side_index", "api/generated/compas_timber.connections.YButtJoint.element_count_complies", "api/generated/compas_timber.connections.YButtJoint.from_json", "api/generated/compas_timber.connections.YButtJoint.from_jsonstring", "api/generated/compas_timber.connections.YButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.YButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.YButtJoint.get_miter_planes", "api/generated/compas_timber.connections.YButtJoint.main_beam_ref_side_index", "api/generated/compas_timber.connections.YButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.YButtJoint.sha256", "api/generated/compas_timber.connections.YButtJoint.to_json", "api/generated/compas_timber.connections.YButtJoint.to_jsonstring", "api/generated/compas_timber.connections.YButtJoint.validate_data", "api/generated/compas_timber.connections.find_neighboring_elements", "api/generated/compas_timber.design.CategoryRule", "api/generated/compas_timber.design.CategoryRule.ToString", "api/generated/compas_timber.design.CategoryRule.comply", "api/generated/compas_timber.design.CategoryRule.get_category_rules", "api/generated/compas_timber.design.CategoryRule.get_direct_rules", "api/generated/compas_timber.design.CategoryRule.get_topology_rules", "api/generated/compas_timber.design.CategoryRule.joints_from_beams_and_rules", "api/generated/compas_timber.design.CategoryRule.reorder", "api/generated/compas_timber.design.DebugInfomation", "api/generated/compas_timber.design.DebugInfomation.ToString", "api/generated/compas_timber.design.DebugInfomation.add_fastener_error", "api/generated/compas_timber.design.DebugInfomation.add_feature_error", "api/generated/compas_timber.design.DebugInfomation.add_joint_error", "api/generated/compas_timber.design.DirectRule", "api/generated/compas_timber.design.DirectRule.ToString", "api/generated/compas_timber.design.DirectRule.comply", "api/generated/compas_timber.design.DirectRule.contains", "api/generated/compas_timber.design.DirectRule.get_category_rules", "api/generated/compas_timber.design.DirectRule.get_direct_rules", "api/generated/compas_timber.design.DirectRule.get_topology_rules", "api/generated/compas_timber.design.DirectRule.joints_from_beams_and_rules", "api/generated/compas_timber.design.FeatureDefinition", "api/generated/compas_timber.design.FeatureDefinition.ToString", "api/generated/compas_timber.design.JointDefinition", "api/generated/compas_timber.design.JointDefinition.ToString", "api/generated/compas_timber.design.JointDefinition.is_identical", "api/generated/compas_timber.design.JointDefinition.match", "api/generated/compas_timber.design.JointRule", "api/generated/compas_timber.design.JointRule.comply", "api/generated/compas_timber.design.JointRule.get_category_rules", "api/generated/compas_timber.design.JointRule.get_direct_rules", "api/generated/compas_timber.design.JointRule.get_topology_rules", "api/generated/compas_timber.design.JointRule.joints_from_beams_and_rules", "api/generated/compas_timber.design.SurfaceModel", "api/generated/compas_timber.design.SurfaceModel.beam_category_names", "api/generated/compas_timber.design.SurfaceModel.create_model", "api/generated/compas_timber.design.SurfaceModel.cull_overlaps", "api/generated/compas_timber.design.SurfaceModel.distance_between_elements", "api/generated/compas_timber.design.SurfaceModel.generate_frame", "api/generated/compas_timber.design.SurfaceModel.generate_perimeter_beams", "api/generated/compas_timber.design.SurfaceModel.generate_plates", "api/generated/compas_timber.design.SurfaceModel.generate_stud_lines", "api/generated/compas_timber.design.SurfaceModel.generate_studs", "api/generated/compas_timber.design.SurfaceModel.generate_windows", "api/generated/compas_timber.design.SurfaceModel.get_beam_intersections", "api/generated/compas_timber.design.SurfaceModel.get_interior_segment_indices", "api/generated/compas_timber.design.SurfaceModel.offset_elements", "api/generated/compas_timber.design.SurfaceModel.parse_loops", "api/generated/compas_timber.design.SurfaceModel.trim_jack_studs", "api/generated/compas_timber.design.SurfaceModel.trim_king_studs", "api/generated/compas_timber.design.SurfaceModel.trim_studs", "api/generated/compas_timber.design.TopologyRule", "api/generated/compas_timber.design.TopologyRule.ToString", "api/generated/compas_timber.design.TopologyRule.comply", "api/generated/compas_timber.design.TopologyRule.get_category_rules", "api/generated/compas_timber.design.TopologyRule.get_direct_rules", "api/generated/compas_timber.design.TopologyRule.get_topology_rules", "api/generated/compas_timber.design.TopologyRule.joints_from_beams_and_rules", "api/generated/compas_timber.design.guess_joint_topology_2beams", "api/generated/compas_timber.design.set_default_joints", "api/generated/compas_timber.elements.Beam", "api/generated/compas_timber.elements.Beam.ToString", "api/generated/compas_timber.elements.Beam.add_blank_extension", "api/generated/compas_timber.elements.Beam.add_feature", "api/generated/compas_timber.elements.Beam.add_features", "api/generated/compas_timber.elements.Beam.compute_aabb", "api/generated/compas_timber.elements.Beam.compute_collision_mesh", "api/generated/compas_timber.elements.Beam.compute_geometry", "api/generated/compas_timber.elements.Beam.compute_obb", "api/generated/compas_timber.elements.Beam.compute_worldtransformation", "api/generated/compas_timber.elements.Beam.copy", "api/generated/compas_timber.elements.Beam.endpoint_closest_to_point", "api/generated/compas_timber.elements.Beam.extension_to_plane", "api/generated/compas_timber.elements.Beam.from_centerline", "api/generated/compas_timber.elements.Beam.from_endpoints", "api/generated/compas_timber.elements.Beam.from_json", "api/generated/compas_timber.elements.Beam.from_jsonstring", "api/generated/compas_timber.elements.Beam.get_dimensions_relative_to_side", "api/generated/compas_timber.elements.Beam.opposing_side_index", "api/generated/compas_timber.elements.Beam.remove_blank_extension", "api/generated/compas_timber.elements.Beam.remove_features", "api/generated/compas_timber.elements.Beam.reset", "api/generated/compas_timber.elements.Beam.sha256", "api/generated/compas_timber.elements.Beam.side_as_surface", "api/generated/compas_timber.elements.Beam.to_json", "api/generated/compas_timber.elements.Beam.to_jsonstring", "api/generated/compas_timber.elements.Beam.transform", "api/generated/compas_timber.elements.Beam.transformed", "api/generated/compas_timber.elements.Beam.validate_data", "api/generated/compas_timber.elements.Fastener", "api/generated/compas_timber.elements.Fastener.ToString", "api/generated/compas_timber.elements.Fastener.add_feature", "api/generated/compas_timber.elements.Fastener.compute_aabb", "api/generated/compas_timber.elements.Fastener.compute_collision_mesh", "api/generated/compas_timber.elements.Fastener.compute_geometry", "api/generated/compas_timber.elements.Fastener.compute_obb", "api/generated/compas_timber.elements.Fastener.compute_worldtransformation", "api/generated/compas_timber.elements.Fastener.copy", "api/generated/compas_timber.elements.Fastener.from_json", "api/generated/compas_timber.elements.Fastener.from_jsonstring", "api/generated/compas_timber.elements.Fastener.remove_blank_extension", "api/generated/compas_timber.elements.Fastener.remove_features", "api/generated/compas_timber.elements.Fastener.reset", "api/generated/compas_timber.elements.Fastener.sha256", "api/generated/compas_timber.elements.Fastener.to_json", "api/generated/compas_timber.elements.Fastener.to_jsonstring", "api/generated/compas_timber.elements.Fastener.transform", "api/generated/compas_timber.elements.Fastener.transformed", "api/generated/compas_timber.elements.Fastener.validate_data", "api/generated/compas_timber.elements.FastenerTimberInterface", "api/generated/compas_timber.elements.FastenerTimberInterface.ToString", "api/generated/compas_timber.elements.FastenerTimberInterface.copy", "api/generated/compas_timber.elements.FastenerTimberInterface.from_json", "api/generated/compas_timber.elements.FastenerTimberInterface.from_jsonstring", "api/generated/compas_timber.elements.FastenerTimberInterface.get_features", "api/generated/compas_timber.elements.FastenerTimberInterface.sha256", "api/generated/compas_timber.elements.FastenerTimberInterface.to_json", "api/generated/compas_timber.elements.FastenerTimberInterface.to_jsonstring", "api/generated/compas_timber.elements.FastenerTimberInterface.validate_data", "api/generated/compas_timber.elements.Plate", "api/generated/compas_timber.elements.Plate.ToString", "api/generated/compas_timber.elements.Plate.add_feature", "api/generated/compas_timber.elements.Plate.add_features", "api/generated/compas_timber.elements.Plate.compute_aabb", "api/generated/compas_timber.elements.Plate.compute_collision_mesh", "api/generated/compas_timber.elements.Plate.compute_geometry", "api/generated/compas_timber.elements.Plate.compute_obb", "api/generated/compas_timber.elements.Plate.compute_worldtransformation", "api/generated/compas_timber.elements.Plate.copy", "api/generated/compas_timber.elements.Plate.from_json", "api/generated/compas_timber.elements.Plate.from_jsonstring", "api/generated/compas_timber.elements.Plate.remove_blank_extension", "api/generated/compas_timber.elements.Plate.remove_features", "api/generated/compas_timber.elements.Plate.reset", "api/generated/compas_timber.elements.Plate.set_frame_and_outline", "api/generated/compas_timber.elements.Plate.sha256", "api/generated/compas_timber.elements.Plate.to_json", "api/generated/compas_timber.elements.Plate.to_jsonstring", "api/generated/compas_timber.elements.Plate.transform", "api/generated/compas_timber.elements.Plate.transformed", "api/generated/compas_timber.elements.Plate.validate_data", "api/generated/compas_timber.elements.TimberElement", "api/generated/compas_timber.elements.TimberElement.ToString", "api/generated/compas_timber.elements.TimberElement.add_feature", "api/generated/compas_timber.elements.TimberElement.compute_aabb", "api/generated/compas_timber.elements.TimberElement.compute_collision_mesh", "api/generated/compas_timber.elements.TimberElement.compute_geometry", "api/generated/compas_timber.elements.TimberElement.compute_obb", "api/generated/compas_timber.elements.TimberElement.compute_worldtransformation", "api/generated/compas_timber.elements.TimberElement.copy", "api/generated/compas_timber.elements.TimberElement.from_json", "api/generated/compas_timber.elements.TimberElement.from_jsonstring", "api/generated/compas_timber.elements.TimberElement.remove_blank_extension", "api/generated/compas_timber.elements.TimberElement.remove_features", "api/generated/compas_timber.elements.TimberElement.reset", "api/generated/compas_timber.elements.TimberElement.sha256", "api/generated/compas_timber.elements.TimberElement.to_json", "api/generated/compas_timber.elements.TimberElement.to_jsonstring", "api/generated/compas_timber.elements.TimberElement.transform", "api/generated/compas_timber.elements.TimberElement.transformed", "api/generated/compas_timber.elements.TimberElement.validate_data", "api/generated/compas_timber.elements.Wall", "api/generated/compas_timber.elements.Wall.ToString", "api/generated/compas_timber.elements.Wall.add_feature", "api/generated/compas_timber.elements.Wall.compute_aabb", "api/generated/compas_timber.elements.Wall.compute_collision_mesh", "api/generated/compas_timber.elements.Wall.compute_geometry", "api/generated/compas_timber.elements.Wall.compute_obb", "api/generated/compas_timber.elements.Wall.compute_worldtransformation", "api/generated/compas_timber.elements.Wall.copy", "api/generated/compas_timber.elements.Wall.from_boundary", "api/generated/compas_timber.elements.Wall.from_brep", "api/generated/compas_timber.elements.Wall.from_json", "api/generated/compas_timber.elements.Wall.from_jsonstring", "api/generated/compas_timber.elements.Wall.remove_blank_extension", "api/generated/compas_timber.elements.Wall.remove_features", "api/generated/compas_timber.elements.Wall.reset", "api/generated/compas_timber.elements.Wall.rotate", "api/generated/compas_timber.elements.Wall.sha256", "api/generated/compas_timber.elements.Wall.to_json", "api/generated/compas_timber.elements.Wall.to_jsonstring", "api/generated/compas_timber.elements.Wall.transform", "api/generated/compas_timber.elements.Wall.transformed", "api/generated/compas_timber.elements.Wall.validate_data", "api/generated/compas_timber.errors.BeamJoiningError", "api/generated/compas_timber.errors.FastenerApplicationError", "api/generated/compas_timber.errors.FeatureApplicationError", "api/generated/compas_timber.fabrication.BTLxPart", "api/generated/compas_timber.fabrication.BTLxPart.et_point_vals", "api/generated/compas_timber.fabrication.BTLxPart.ref_side_from_face", "api/generated/compas_timber.fabrication.BTLxProcessing", "api/generated/compas_timber.fabrication.BTLxProcessing.ToString", "api/generated/compas_timber.fabrication.BTLxProcessing.add_subprocessing", "api/generated/compas_timber.fabrication.BTLxProcessing.copy", "api/generated/compas_timber.fabrication.BTLxProcessing.from_json", "api/generated/compas_timber.fabrication.BTLxProcessing.from_jsonstring", "api/generated/compas_timber.fabrication.BTLxProcessing.sha256", "api/generated/compas_timber.fabrication.BTLxProcessing.to_json", "api/generated/compas_timber.fabrication.BTLxProcessing.to_jsonstring", "api/generated/compas_timber.fabrication.BTLxProcessing.validate_data", "api/generated/compas_timber.fabrication.BTLxWriter", "api/generated/compas_timber.fabrication.BTLxWriter.model_to_xml", "api/generated/compas_timber.fabrication.BTLxWriter.write", "api/generated/compas_timber.fabrication.DoubleCut", "api/generated/compas_timber.fabrication.DoubleCut.ToString", "api/generated/compas_timber.fabrication.DoubleCut.add_subprocessing", "api/generated/compas_timber.fabrication.DoubleCut.apply", "api/generated/compas_timber.fabrication.DoubleCut.copy", "api/generated/compas_timber.fabrication.DoubleCut.from_json", "api/generated/compas_timber.fabrication.DoubleCut.from_jsonstring", "api/generated/compas_timber.fabrication.DoubleCut.from_planes_and_beam", "api/generated/compas_timber.fabrication.DoubleCut.from_shapes_and_element", "api/generated/compas_timber.fabrication.DoubleCut.planes_from_params_and_beam", "api/generated/compas_timber.fabrication.DoubleCut.sha256", "api/generated/compas_timber.fabrication.DoubleCut.to_json", "api/generated/compas_timber.fabrication.DoubleCut.to_jsonstring", "api/generated/compas_timber.fabrication.DoubleCut.validate_data", "api/generated/compas_timber.fabrication.DovetailMortise", "api/generated/compas_timber.fabrication.DovetailMortise.ToString", "api/generated/compas_timber.fabrication.DovetailMortise.add_subprocessing", "api/generated/compas_timber.fabrication.DovetailMortise.apply", "api/generated/compas_timber.fabrication.DovetailMortise.copy", "api/generated/compas_timber.fabrication.DovetailMortise.define_dovetail_tool", "api/generated/compas_timber.fabrication.DovetailMortise.dovetail_cutting_frames_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailMortise.dovetail_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailMortise.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailMortise.from_frame_and_beam", "api/generated/compas_timber.fabrication.DovetailMortise.from_json", "api/generated/compas_timber.fabrication.DovetailMortise.from_jsonstring", "api/generated/compas_timber.fabrication.DovetailMortise.sha256", "api/generated/compas_timber.fabrication.DovetailMortise.to_json", "api/generated/compas_timber.fabrication.DovetailMortise.to_jsonstring", "api/generated/compas_timber.fabrication.DovetailMortise.validate_data", "api/generated/compas_timber.fabrication.DovetailTenon", "api/generated/compas_timber.fabrication.DovetailTenon.ToString", "api/generated/compas_timber.fabrication.DovetailTenon.add_subprocessing", "api/generated/compas_timber.fabrication.DovetailTenon.apply", "api/generated/compas_timber.fabrication.DovetailTenon.copy", "api/generated/compas_timber.fabrication.DovetailTenon.define_dovetail_tool", "api/generated/compas_timber.fabrication.DovetailTenon.dovetail_cutting_frames_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailTenon.dovetail_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailTenon.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailTenon.from_json", "api/generated/compas_timber.fabrication.DovetailTenon.from_jsonstring", "api/generated/compas_timber.fabrication.DovetailTenon.from_plane_and_beam", "api/generated/compas_timber.fabrication.DovetailTenon.sha256", "api/generated/compas_timber.fabrication.DovetailTenon.to_json", "api/generated/compas_timber.fabrication.DovetailTenon.to_jsonstring", "api/generated/compas_timber.fabrication.DovetailTenon.validate_data", "api/generated/compas_timber.fabrication.Drilling", "api/generated/compas_timber.fabrication.Drilling.ToString", "api/generated/compas_timber.fabrication.Drilling.add_subprocessing", "api/generated/compas_timber.fabrication.Drilling.apply", "api/generated/compas_timber.fabrication.Drilling.copy", "api/generated/compas_timber.fabrication.Drilling.cylinder_from_params_and_element", "api/generated/compas_timber.fabrication.Drilling.from_json", "api/generated/compas_timber.fabrication.Drilling.from_jsonstring", "api/generated/compas_timber.fabrication.Drilling.from_line_and_element", "api/generated/compas_timber.fabrication.Drilling.from_shapes_and_element", "api/generated/compas_timber.fabrication.Drilling.sha256", "api/generated/compas_timber.fabrication.Drilling.to_json", "api/generated/compas_timber.fabrication.Drilling.to_jsonstring", "api/generated/compas_timber.fabrication.Drilling.validate_data", "api/generated/compas_timber.fabrication.EdgePositionType", "api/generated/compas_timber.fabrication.FrenchRidgeLap", "api/generated/compas_timber.fabrication.FrenchRidgeLap.ToString", "api/generated/compas_timber.fabrication.FrenchRidgeLap.add_subprocessing", "api/generated/compas_timber.fabrication.FrenchRidgeLap.apply", "api/generated/compas_timber.fabrication.FrenchRidgeLap.copy", "api/generated/compas_timber.fabrication.FrenchRidgeLap.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_beam_beam_and_plane", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_json", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_jsonstring", "api/generated/compas_timber.fabrication.FrenchRidgeLap.lap_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.FrenchRidgeLap.sha256", "api/generated/compas_timber.fabrication.FrenchRidgeLap.to_json", "api/generated/compas_timber.fabrication.FrenchRidgeLap.to_jsonstring", "api/generated/compas_timber.fabrication.FrenchRidgeLap.validate_data", "api/generated/compas_timber.fabrication.JackRafterCut", "api/generated/compas_timber.fabrication.JackRafterCut.ToString", "api/generated/compas_timber.fabrication.JackRafterCut.add_subprocessing", "api/generated/compas_timber.fabrication.JackRafterCut.apply", "api/generated/compas_timber.fabrication.JackRafterCut.copy", "api/generated/compas_timber.fabrication.JackRafterCut.from_json", "api/generated/compas_timber.fabrication.JackRafterCut.from_jsonstring", "api/generated/compas_timber.fabrication.JackRafterCut.from_plane_and_beam", "api/generated/compas_timber.fabrication.JackRafterCut.from_shapes_and_element", "api/generated/compas_timber.fabrication.JackRafterCut.plane_from_params_and_beam", "api/generated/compas_timber.fabrication.JackRafterCut.sha256", "api/generated/compas_timber.fabrication.JackRafterCut.to_json", "api/generated/compas_timber.fabrication.JackRafterCut.to_jsonstring", "api/generated/compas_timber.fabrication.JackRafterCut.validate_data", "api/generated/compas_timber.fabrication.Lap", "api/generated/compas_timber.fabrication.Lap.ToString", "api/generated/compas_timber.fabrication.Lap.add_subprocessing", "api/generated/compas_timber.fabrication.Lap.apply", "api/generated/compas_timber.fabrication.Lap.copy", "api/generated/compas_timber.fabrication.Lap.from_json", "api/generated/compas_timber.fabrication.Lap.from_jsonstring", "api/generated/compas_timber.fabrication.Lap.from_plane_and_beam", "api/generated/compas_timber.fabrication.Lap.planes_from_params_and_beam", "api/generated/compas_timber.fabrication.Lap.sha256", "api/generated/compas_timber.fabrication.Lap.to_json", "api/generated/compas_timber.fabrication.Lap.to_jsonstring", "api/generated/compas_timber.fabrication.Lap.validate_data", "api/generated/compas_timber.fabrication.Lap.volume_from_params_and_beam", "api/generated/compas_timber.fabrication.LimitationTopType", "api/generated/compas_timber.fabrication.MachiningLimits", "api/generated/compas_timber.fabrication.Mortise", "api/generated/compas_timber.fabrication.Mortise.ToString", "api/generated/compas_timber.fabrication.Mortise.add_subprocessing", "api/generated/compas_timber.fabrication.Mortise.apply", "api/generated/compas_timber.fabrication.Mortise.copy", "api/generated/compas_timber.fabrication.Mortise.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.Mortise.from_frame_and_beam", "api/generated/compas_timber.fabrication.Mortise.from_json", "api/generated/compas_timber.fabrication.Mortise.from_jsonstring", "api/generated/compas_timber.fabrication.Mortise.sha256", "api/generated/compas_timber.fabrication.Mortise.to_json", "api/generated/compas_timber.fabrication.Mortise.to_jsonstring", "api/generated/compas_timber.fabrication.Mortise.validate_data", "api/generated/compas_timber.fabrication.Mortise.volume_from_params_and_beam", "api/generated/compas_timber.fabrication.OrientationType", "api/generated/compas_timber.fabrication.Slot", "api/generated/compas_timber.fabrication.Slot.ToString", "api/generated/compas_timber.fabrication.Slot.add_subprocessing", "api/generated/compas_timber.fabrication.Slot.apply", "api/generated/compas_timber.fabrication.Slot.copy", "api/generated/compas_timber.fabrication.Slot.from_json", "api/generated/compas_timber.fabrication.Slot.from_jsonstring", "api/generated/compas_timber.fabrication.Slot.from_plane_and_beam", "api/generated/compas_timber.fabrication.Slot.sha256", "api/generated/compas_timber.fabrication.Slot.to_json", "api/generated/compas_timber.fabrication.Slot.to_jsonstring", "api/generated/compas_timber.fabrication.Slot.validate_data", "api/generated/compas_timber.fabrication.StepJoint", "api/generated/compas_timber.fabrication.StepJoint.ToString", "api/generated/compas_timber.fabrication.StepJoint.add_subprocessing", "api/generated/compas_timber.fabrication.StepJoint.add_tenon", "api/generated/compas_timber.fabrication.StepJoint.apply", "api/generated/compas_timber.fabrication.StepJoint.copy", "api/generated/compas_timber.fabrication.StepJoint.from_json", "api/generated/compas_timber.fabrication.StepJoint.from_jsonstring", "api/generated/compas_timber.fabrication.StepJoint.from_plane_and_beam", "api/generated/compas_timber.fabrication.StepJoint.planes_from_params_and_beam", "api/generated/compas_timber.fabrication.StepJoint.sha256", "api/generated/compas_timber.fabrication.StepJoint.tenon_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.StepJoint.to_json", "api/generated/compas_timber.fabrication.StepJoint.to_jsonstring", "api/generated/compas_timber.fabrication.StepJoint.validate_data", "api/generated/compas_timber.fabrication.StepJointNotch", "api/generated/compas_timber.fabrication.StepJointNotch.ToString", "api/generated/compas_timber.fabrication.StepJointNotch.add_mortise", "api/generated/compas_timber.fabrication.StepJointNotch.add_subprocessing", "api/generated/compas_timber.fabrication.StepJointNotch.apply", "api/generated/compas_timber.fabrication.StepJointNotch.copy", "api/generated/compas_timber.fabrication.StepJointNotch.from_json", "api/generated/compas_timber.fabrication.StepJointNotch.from_jsonstring", "api/generated/compas_timber.fabrication.StepJointNotch.from_plane_and_beam", "api/generated/compas_timber.fabrication.StepJointNotch.mortise_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.StepJointNotch.planes_from_params_and_beam", "api/generated/compas_timber.fabrication.StepJointNotch.sha256", "api/generated/compas_timber.fabrication.StepJointNotch.to_json", "api/generated/compas_timber.fabrication.StepJointNotch.to_jsonstring", "api/generated/compas_timber.fabrication.StepJointNotch.validate_data", "api/generated/compas_timber.fabrication.StepShapeType", "api/generated/compas_timber.fabrication.Tenon", "api/generated/compas_timber.fabrication.Tenon.ToString", "api/generated/compas_timber.fabrication.Tenon.add_subprocessing", "api/generated/compas_timber.fabrication.Tenon.apply", "api/generated/compas_timber.fabrication.Tenon.copy", "api/generated/compas_timber.fabrication.Tenon.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.Tenon.from_json", "api/generated/compas_timber.fabrication.Tenon.from_jsonstring", "api/generated/compas_timber.fabrication.Tenon.from_plane_and_beam", "api/generated/compas_timber.fabrication.Tenon.sha256", "api/generated/compas_timber.fabrication.Tenon.to_json", "api/generated/compas_timber.fabrication.Tenon.to_jsonstring", "api/generated/compas_timber.fabrication.Tenon.validate_data", "api/generated/compas_timber.fabrication.Tenon.volume_from_params_and_beam", "api/generated/compas_timber.fabrication.TenonShapeType", "api/generated/compas_timber.ghpython.add_gh_param", "api/generated/compas_timber.ghpython.clear_gh_params", "api/generated/compas_timber.ghpython.get_leaf_subclasses", "api/generated/compas_timber.ghpython.item_input_valid", "api/generated/compas_timber.ghpython.list_input_valid", "api/generated/compas_timber.ghpython.manage_dynamic_params", "api/generated/compas_timber.ghpython.rename_gh_input", "api/generated/compas_timber.model.TimberModel", "api/generated/compas_timber.model.TimberModel.ToString", "api/generated/compas_timber.model.TimberModel.add_element", "api/generated/compas_timber.model.TimberModel.add_elements", "api/generated/compas_timber.model.TimberModel.add_group", "api/generated/compas_timber.model.TimberModel.add_group_element", "api/generated/compas_timber.model.TimberModel.add_interaction", "api/generated/compas_timber.model.TimberModel.add_joint", "api/generated/compas_timber.model.TimberModel.add_material", "api/generated/compas_timber.model.TimberModel.assign_material", "api/generated/compas_timber.model.TimberModel.compute_aabb", "api/generated/compas_timber.model.TimberModel.compute_obb", "api/generated/compas_timber.model.TimberModel.connect_adjacent_walls", "api/generated/compas_timber.model.TimberModel.copy", "api/generated/compas_timber.model.TimberModel.element_by_guid", "api/generated/compas_timber.model.TimberModel.elements", "api/generated/compas_timber.model.TimberModel.elements_connected_by", "api/generated/compas_timber.model.TimberModel.from_json", "api/generated/compas_timber.model.TimberModel.from_jsonstring", "api/generated/compas_timber.model.TimberModel.get_elements_in_group", "api/generated/compas_timber.model.TimberModel.get_interactions_for_element", "api/generated/compas_timber.model.TimberModel.has_element", "api/generated/compas_timber.model.TimberModel.has_group", "api/generated/compas_timber.model.TimberModel.has_interaction", "api/generated/compas_timber.model.TimberModel.has_material", "api/generated/compas_timber.model.TimberModel.interactions", "api/generated/compas_timber.model.TimberModel.materials", "api/generated/compas_timber.model.TimberModel.process_joinery", "api/generated/compas_timber.model.TimberModel.remove_element", "api/generated/compas_timber.model.TimberModel.remove_interaction", "api/generated/compas_timber.model.TimberModel.remove_joint", "api/generated/compas_timber.model.TimberModel.rotate", "api/generated/compas_timber.model.TimberModel.rotated", "api/generated/compas_timber.model.TimberModel.scale", "api/generated/compas_timber.model.TimberModel.scaled", "api/generated/compas_timber.model.TimberModel.set_topologies", "api/generated/compas_timber.model.TimberModel.sha256", "api/generated/compas_timber.model.TimberModel.to_json", "api/generated/compas_timber.model.TimberModel.to_jsonstring", "api/generated/compas_timber.model.TimberModel.transform", "api/generated/compas_timber.model.TimberModel.transform_numpy", "api/generated/compas_timber.model.TimberModel.transformed", "api/generated/compas_timber.model.TimberModel.transformed_numpy", "api/generated/compas_timber.model.TimberModel.translate", "api/generated/compas_timber.model.TimberModel.translated", "api/generated/compas_timber.model.TimberModel.validate_data", "api/generated/compas_timber.planning.Actor", "api/generated/compas_timber.planning.Actor.get_name", "api/generated/compas_timber.planning.BuildingPlan", "api/generated/compas_timber.planning.BuildingPlan.ToString", "api/generated/compas_timber.planning.BuildingPlan.add_step", "api/generated/compas_timber.planning.BuildingPlan.copy", "api/generated/compas_timber.planning.BuildingPlan.from_json", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.sha256", "api/generated/compas_timber.planning.BuildingPlan.to_json", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.validate_data", "api/generated/compas_timber.planning.BuildingPlanParser", "api/generated/compas_timber.planning.BuildingPlanParser.parse", "api/generated/compas_timber.planning.BuildingPlanParser.serialize", "api/generated/compas_timber.planning.Instruction", "api/generated/compas_timber.planning.Instruction.ToString", "api/generated/compas_timber.planning.Instruction.copy", "api/generated/compas_timber.planning.Instruction.from_json", "api/generated/compas_timber.planning.Instruction.from_jsonstring", "api/generated/compas_timber.planning.Instruction.sha256", "api/generated/compas_timber.planning.Instruction.to_json", "api/generated/compas_timber.planning.Instruction.to_jsonstring", "api/generated/compas_timber.planning.Instruction.transform", "api/generated/compas_timber.planning.Instruction.validate_data", "api/generated/compas_timber.planning.LinearDimension", "api/generated/compas_timber.planning.LinearDimension.ToString", "api/generated/compas_timber.planning.LinearDimension.copy", "api/generated/compas_timber.planning.LinearDimension.from_json", "api/generated/compas_timber.planning.LinearDimension.from_jsonstring", "api/generated/compas_timber.planning.LinearDimension.sha256", "api/generated/compas_timber.planning.LinearDimension.to_json", "api/generated/compas_timber.planning.LinearDimension.to_jsonstring", "api/generated/compas_timber.planning.LinearDimension.transform", "api/generated/compas_timber.planning.LinearDimension.validate_data", "api/generated/compas_timber.planning.Model3d", "api/generated/compas_timber.planning.Model3d.ToString", "api/generated/compas_timber.planning.Model3d.copy", "api/generated/compas_timber.planning.Model3d.from_json", "api/generated/compas_timber.planning.Model3d.from_jsonstring", "api/generated/compas_timber.planning.Model3d.sha256", "api/generated/compas_timber.planning.Model3d.to_json", "api/generated/compas_timber.planning.Model3d.to_jsonstring", "api/generated/compas_timber.planning.Model3d.transform", "api/generated/compas_timber.planning.Model3d.validate_data", "api/generated/compas_timber.planning.SimpleSequenceGenerator", "api/generated/compas_timber.planning.Step", "api/generated/compas_timber.planning.Step.ToString", "api/generated/compas_timber.planning.Step.copy", "api/generated/compas_timber.planning.Step.from_json", "api/generated/compas_timber.planning.Step.from_jsonstring", "api/generated/compas_timber.planning.Step.sha256", "api/generated/compas_timber.planning.Step.to_json", "api/generated/compas_timber.planning.Step.to_jsonstring", "api/generated/compas_timber.planning.Step.transform", "api/generated/compas_timber.planning.Step.validate_data", "api/generated/compas_timber.planning.Text3d", "api/generated/compas_timber.planning.Text3d.ToString", "api/generated/compas_timber.planning.Text3d.copy", "api/generated/compas_timber.planning.Text3d.from_json", "api/generated/compas_timber.planning.Text3d.from_jsonstring", "api/generated/compas_timber.planning.Text3d.sha256", "api/generated/compas_timber.planning.Text3d.to_json", "api/generated/compas_timber.planning.Text3d.to_jsonstring", "api/generated/compas_timber.planning.Text3d.transform", "api/generated/compas_timber.planning.Text3d.validate_data", "api/generated/compas_timber.rhino.find_neighboring_elements", "citing", "examples", "examples/create_joint", "index", "installation", "license", "tutorials", "tutorials/BTLx_contribution_guide", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beams", "tutorials/grasshopper/design", "tutorials/grasshopper/examples", "tutorials/grasshopper/fabrication", "tutorials/grasshopper/features", "tutorials/grasshopper/joint_rules", "tutorials/grasshopper/model", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api.rst", "api/compas_timber.connections.rst", "api/compas_timber.design.rst", "api/compas_timber.elements.rst", "api/compas_timber.errors.rst", "api/compas_timber.fabrication.rst", "api/compas_timber.ghpython.rst", "api/compas_timber.model.rst", "api/compas_timber.planning.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.connections.BallNodeJoint.rst", "api/generated/compas_timber.connections.BallNodeJoint.ToString.rst", "api/generated/compas_timber.connections.BallNodeJoint.add_extensions.rst", "api/generated/compas_timber.connections.BallNodeJoint.add_features.rst", "api/generated/compas_timber.connections.BallNodeJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.BallNodeJoint.copy.rst", "api/generated/compas_timber.connections.BallNodeJoint.create.rst", "api/generated/compas_timber.connections.BallNodeJoint.element_count_complies.rst", "api/generated/compas_timber.connections.BallNodeJoint.from_json.rst", "api/generated/compas_timber.connections.BallNodeJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.BallNodeJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.BallNodeJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.BallNodeJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.BallNodeJoint.sha256.rst", "api/generated/compas_timber.connections.BallNodeJoint.to_json.rst", "api/generated/compas_timber.connections.BallNodeJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.BallNodeJoint.validate_data.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_wall_wall_topology.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_extensions.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.element_count_complies.rst", "api/generated/compas_timber.connections.Joint.from_json.rst", "api/generated/compas_timber.connections.Joint.from_jsonstring.rst", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_json.rst", "api/generated/compas_timber.connections.Joint.to_jsonstring.rst", "api/generated/compas_timber.connections.Joint.validate_data.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_extensions.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LButtJoint.from_json.rst", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.to_json.rst", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.update_beam_roles.rst", "api/generated/compas_timber.connections.LButtJoint.validate_data.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.ToString.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.add_features.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.copy.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.create.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.from_json.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.sha256.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.to_json.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.validate_data.rst", "api/generated/compas_timber.connections.LLapJoint.rst", "api/generated/compas_timber.connections.LLapJoint.ToString.rst", "api/generated/compas_timber.connections.LLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.LLapJoint.add_features.rst", "api/generated/compas_timber.connections.LLapJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.LLapJoint.copy.rst", "api/generated/compas_timber.connections.LLapJoint.create.rst", "api/generated/compas_timber.connections.LLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LLapJoint.from_json.rst", "api/generated/compas_timber.connections.LLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LLapJoint.sha256.rst", "api/generated/compas_timber.connections.LLapJoint.to_json.rst", "api/generated/compas_timber.connections.LLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LLapJoint.validate_data.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_extensions.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LMiterJoint.from_json.rst", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.get_cutoff_plane.rst", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_json.rst", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_data.rst", "api/generated/compas_timber.connections.LapJoint.rst", "api/generated/compas_timber.connections.LapJoint.ToString.rst", "api/generated/compas_timber.connections.LapJoint.add_extensions.rst", "api/generated/compas_timber.connections.LapJoint.add_features.rst", "api/generated/compas_timber.connections.LapJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.LapJoint.copy.rst", "api/generated/compas_timber.connections.LapJoint.create.rst", "api/generated/compas_timber.connections.LapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LapJoint.from_json.rst", "api/generated/compas_timber.connections.LapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LapJoint.sha256.rst", "api/generated/compas_timber.connections.LapJoint.to_json.rst", "api/generated/compas_timber.connections.LapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.validate_data.rst", "api/generated/compas_timber.connections.NullJoint.rst", "api/generated/compas_timber.connections.NullJoint.ToString.rst", "api/generated/compas_timber.connections.NullJoint.add_extensions.rst", "api/generated/compas_timber.connections.NullJoint.add_features.rst", "api/generated/compas_timber.connections.NullJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.NullJoint.copy.rst", "api/generated/compas_timber.connections.NullJoint.create.rst", "api/generated/compas_timber.connections.NullJoint.element_count_complies.rst", "api/generated/compas_timber.connections.NullJoint.from_json.rst", "api/generated/compas_timber.connections.NullJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.NullJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.NullJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.NullJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.NullJoint.sha256.rst", "api/generated/compas_timber.connections.NullJoint.to_json.rst", "api/generated/compas_timber.connections.NullJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.NullJoint.validate_data.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.ToString.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.add_extensions.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.add_features.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.copy.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.create.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.from_json.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.sha256.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.to_json.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.validate_data.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_extensions.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TButtJoint.from_json.rst", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.to_json.rst", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.validate_data.rst", "api/generated/compas_timber.connections.TDovetailJoint.rst", "api/generated/compas_timber.connections.TDovetailJoint.ToString.rst", "api/generated/compas_timber.connections.TDovetailJoint.add_extensions.rst", "api/generated/compas_timber.connections.TDovetailJoint.add_features.rst", "api/generated/compas_timber.connections.TDovetailJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TDovetailJoint.copy.rst", "api/generated/compas_timber.connections.TDovetailJoint.create.rst", "api/generated/compas_timber.connections.TDovetailJoint.define_dovetail_tool.rst", "api/generated/compas_timber.connections.TDovetailJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TDovetailJoint.from_json.rst", "api/generated/compas_timber.connections.TDovetailJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TDovetailJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TDovetailJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TDovetailJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TDovetailJoint.sha256.rst", "api/generated/compas_timber.connections.TDovetailJoint.to_json.rst", "api/generated/compas_timber.connections.TDovetailJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TDovetailJoint.validate_data.rst", "api/generated/compas_timber.connections.TLapJoint.rst", "api/generated/compas_timber.connections.TLapJoint.ToString.rst", "api/generated/compas_timber.connections.TLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.TLapJoint.add_features.rst", "api/generated/compas_timber.connections.TLapJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TLapJoint.copy.rst", "api/generated/compas_timber.connections.TLapJoint.create.rst", "api/generated/compas_timber.connections.TLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TLapJoint.from_json.rst", "api/generated/compas_timber.connections.TLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.TLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.TLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TLapJoint.sha256.rst", "api/generated/compas_timber.connections.TLapJoint.to_json.rst", "api/generated/compas_timber.connections.TLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TLapJoint.validate_data.rst", "api/generated/compas_timber.connections.TStepJoint.rst", "api/generated/compas_timber.connections.TStepJoint.ToString.rst", "api/generated/compas_timber.connections.TStepJoint.add_extensions.rst", "api/generated/compas_timber.connections.TStepJoint.add_features.rst", "api/generated/compas_timber.connections.TStepJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TStepJoint.copy.rst", "api/generated/compas_timber.connections.TStepJoint.create.rst", "api/generated/compas_timber.connections.TStepJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TStepJoint.from_json.rst", "api/generated/compas_timber.connections.TStepJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TStepJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TStepJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TStepJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TStepJoint.set_step_depths.rst", "api/generated/compas_timber.connections.TStepJoint.sha256.rst", "api/generated/compas_timber.connections.TStepJoint.to_json.rst", "api/generated/compas_timber.connections.TStepJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TStepJoint.validate_data.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.ToString.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.add_extensions.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.add_features.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.copy.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.create.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.from_json.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.set_default_values.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.sha256.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.to_json.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.validate_data.rst", "api/generated/compas_timber.connections.XLapJoint.rst", "api/generated/compas_timber.connections.XLapJoint.ToString.rst", "api/generated/compas_timber.connections.XLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.XLapJoint.add_features.rst", "api/generated/compas_timber.connections.XLapJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.XLapJoint.copy.rst", "api/generated/compas_timber.connections.XLapJoint.create.rst", "api/generated/compas_timber.connections.XLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.XLapJoint.from_json.rst", "api/generated/compas_timber.connections.XLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.XLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.XLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.XLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.XLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.XLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.XLapJoint.sha256.rst", "api/generated/compas_timber.connections.XLapJoint.to_json.rst", "api/generated/compas_timber.connections.XLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.XLapJoint.validate_data.rst", "api/generated/compas_timber.connections.YButtJoint.rst", "api/generated/compas_timber.connections.YButtJoint.ToString.rst", "api/generated/compas_timber.connections.YButtJoint.add_extensions.rst", "api/generated/compas_timber.connections.YButtJoint.add_features.rst", "api/generated/compas_timber.connections.YButtJoint.check_beam_compatibility.rst", "api/generated/compas_timber.connections.YButtJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.YButtJoint.copy.rst", "api/generated/compas_timber.connections.YButtJoint.create.rst", "api/generated/compas_timber.connections.YButtJoint.cross_beam_ref_side_index.rst", "api/generated/compas_timber.connections.YButtJoint.element_count_complies.rst", "api/generated/compas_timber.connections.YButtJoint.from_json.rst", "api/generated/compas_timber.connections.YButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.YButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.YButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.YButtJoint.get_miter_planes.rst", "api/generated/compas_timber.connections.YButtJoint.main_beam_ref_side_index.rst", "api/generated/compas_timber.connections.YButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.YButtJoint.sha256.rst", "api/generated/compas_timber.connections.YButtJoint.to_json.rst", "api/generated/compas_timber.connections.YButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.YButtJoint.validate_data.rst", "api/generated/compas_timber.connections.find_neighboring_elements.rst", "api/generated/compas_timber.design.CategoryRule.rst", "api/generated/compas_timber.design.CategoryRule.ToString.rst", "api/generated/compas_timber.design.CategoryRule.comply.rst", "api/generated/compas_timber.design.CategoryRule.get_category_rules.rst", "api/generated/compas_timber.design.CategoryRule.get_direct_rules.rst", "api/generated/compas_timber.design.CategoryRule.get_topology_rules.rst", "api/generated/compas_timber.design.CategoryRule.joints_from_beams_and_rules.rst", "api/generated/compas_timber.design.CategoryRule.reorder.rst", "api/generated/compas_timber.design.DebugInfomation.rst", "api/generated/compas_timber.design.DebugInfomation.ToString.rst", "api/generated/compas_timber.design.DebugInfomation.add_fastener_error.rst", "api/generated/compas_timber.design.DebugInfomation.add_feature_error.rst", "api/generated/compas_timber.design.DebugInfomation.add_joint_error.rst", "api/generated/compas_timber.design.DirectRule.rst", "api/generated/compas_timber.design.DirectRule.ToString.rst", "api/generated/compas_timber.design.DirectRule.comply.rst", "api/generated/compas_timber.design.DirectRule.contains.rst", "api/generated/compas_timber.design.DirectRule.get_category_rules.rst", "api/generated/compas_timber.design.DirectRule.get_direct_rules.rst", "api/generated/compas_timber.design.DirectRule.get_topology_rules.rst", "api/generated/compas_timber.design.DirectRule.joints_from_beams_and_rules.rst", "api/generated/compas_timber.design.FeatureDefinition.rst", "api/generated/compas_timber.design.FeatureDefinition.ToString.rst", "api/generated/compas_timber.design.JointDefinition.rst", "api/generated/compas_timber.design.JointDefinition.ToString.rst", "api/generated/compas_timber.design.JointDefinition.is_identical.rst", "api/generated/compas_timber.design.JointDefinition.match.rst", "api/generated/compas_timber.design.JointRule.rst", "api/generated/compas_timber.design.JointRule.comply.rst", "api/generated/compas_timber.design.JointRule.get_category_rules.rst", "api/generated/compas_timber.design.JointRule.get_direct_rules.rst", "api/generated/compas_timber.design.JointRule.get_topology_rules.rst", "api/generated/compas_timber.design.JointRule.joints_from_beams_and_rules.rst", "api/generated/compas_timber.design.SurfaceModel.rst", "api/generated/compas_timber.design.SurfaceModel.beam_category_names.rst", "api/generated/compas_timber.design.SurfaceModel.create_model.rst", "api/generated/compas_timber.design.SurfaceModel.cull_overlaps.rst", "api/generated/compas_timber.design.SurfaceModel.distance_between_elements.rst", "api/generated/compas_timber.design.SurfaceModel.generate_frame.rst", "api/generated/compas_timber.design.SurfaceModel.generate_perimeter_beams.rst", "api/generated/compas_timber.design.SurfaceModel.generate_plates.rst", "api/generated/compas_timber.design.SurfaceModel.generate_stud_lines.rst", "api/generated/compas_timber.design.SurfaceModel.generate_studs.rst", "api/generated/compas_timber.design.SurfaceModel.generate_windows.rst", "api/generated/compas_timber.design.SurfaceModel.get_beam_intersections.rst", "api/generated/compas_timber.design.SurfaceModel.get_interior_segment_indices.rst", "api/generated/compas_timber.design.SurfaceModel.offset_elements.rst", "api/generated/compas_timber.design.SurfaceModel.parse_loops.rst", "api/generated/compas_timber.design.SurfaceModel.trim_jack_studs.rst", "api/generated/compas_timber.design.SurfaceModel.trim_king_studs.rst", "api/generated/compas_timber.design.SurfaceModel.trim_studs.rst", "api/generated/compas_timber.design.TopologyRule.rst", "api/generated/compas_timber.design.TopologyRule.ToString.rst", "api/generated/compas_timber.design.TopologyRule.comply.rst", "api/generated/compas_timber.design.TopologyRule.get_category_rules.rst", "api/generated/compas_timber.design.TopologyRule.get_direct_rules.rst", "api/generated/compas_timber.design.TopologyRule.get_topology_rules.rst", "api/generated/compas_timber.design.TopologyRule.joints_from_beams_and_rules.rst", "api/generated/compas_timber.design.guess_joint_topology_2beams.rst", "api/generated/compas_timber.design.set_default_joints.rst", "api/generated/compas_timber.elements.Beam.rst", "api/generated/compas_timber.elements.Beam.ToString.rst", "api/generated/compas_timber.elements.Beam.add_blank_extension.rst", "api/generated/compas_timber.elements.Beam.add_feature.rst", "api/generated/compas_timber.elements.Beam.add_features.rst", "api/generated/compas_timber.elements.Beam.compute_aabb.rst", "api/generated/compas_timber.elements.Beam.compute_collision_mesh.rst", "api/generated/compas_timber.elements.Beam.compute_geometry.rst", "api/generated/compas_timber.elements.Beam.compute_obb.rst", "api/generated/compas_timber.elements.Beam.compute_worldtransformation.rst", "api/generated/compas_timber.elements.Beam.copy.rst", "api/generated/compas_timber.elements.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.elements.Beam.extension_to_plane.rst", "api/generated/compas_timber.elements.Beam.from_centerline.rst", "api/generated/compas_timber.elements.Beam.from_endpoints.rst", "api/generated/compas_timber.elements.Beam.from_json.rst", "api/generated/compas_timber.elements.Beam.from_jsonstring.rst", "api/generated/compas_timber.elements.Beam.get_dimensions_relative_to_side.rst", "api/generated/compas_timber.elements.Beam.opposing_side_index.rst", "api/generated/compas_timber.elements.Beam.remove_blank_extension.rst", "api/generated/compas_timber.elements.Beam.remove_features.rst", "api/generated/compas_timber.elements.Beam.reset.rst", "api/generated/compas_timber.elements.Beam.sha256.rst", "api/generated/compas_timber.elements.Beam.side_as_surface.rst", "api/generated/compas_timber.elements.Beam.to_json.rst", "api/generated/compas_timber.elements.Beam.to_jsonstring.rst", "api/generated/compas_timber.elements.Beam.transform.rst", "api/generated/compas_timber.elements.Beam.transformed.rst", "api/generated/compas_timber.elements.Beam.validate_data.rst", "api/generated/compas_timber.elements.Fastener.rst", "api/generated/compas_timber.elements.Fastener.ToString.rst", "api/generated/compas_timber.elements.Fastener.add_feature.rst", "api/generated/compas_timber.elements.Fastener.compute_aabb.rst", "api/generated/compas_timber.elements.Fastener.compute_collision_mesh.rst", "api/generated/compas_timber.elements.Fastener.compute_geometry.rst", "api/generated/compas_timber.elements.Fastener.compute_obb.rst", "api/generated/compas_timber.elements.Fastener.compute_worldtransformation.rst", "api/generated/compas_timber.elements.Fastener.copy.rst", "api/generated/compas_timber.elements.Fastener.from_json.rst", "api/generated/compas_timber.elements.Fastener.from_jsonstring.rst", "api/generated/compas_timber.elements.Fastener.remove_blank_extension.rst", "api/generated/compas_timber.elements.Fastener.remove_features.rst", "api/generated/compas_timber.elements.Fastener.reset.rst", "api/generated/compas_timber.elements.Fastener.sha256.rst", "api/generated/compas_timber.elements.Fastener.to_json.rst", "api/generated/compas_timber.elements.Fastener.to_jsonstring.rst", "api/generated/compas_timber.elements.Fastener.transform.rst", "api/generated/compas_timber.elements.Fastener.transformed.rst", "api/generated/compas_timber.elements.Fastener.validate_data.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.ToString.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.copy.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.from_json.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.from_jsonstring.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.get_features.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.sha256.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.to_json.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.to_jsonstring.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.validate_data.rst", "api/generated/compas_timber.elements.Plate.rst", "api/generated/compas_timber.elements.Plate.ToString.rst", "api/generated/compas_timber.elements.Plate.add_feature.rst", "api/generated/compas_timber.elements.Plate.add_features.rst", "api/generated/compas_timber.elements.Plate.compute_aabb.rst", "api/generated/compas_timber.elements.Plate.compute_collision_mesh.rst", "api/generated/compas_timber.elements.Plate.compute_geometry.rst", "api/generated/compas_timber.elements.Plate.compute_obb.rst", "api/generated/compas_timber.elements.Plate.compute_worldtransformation.rst", "api/generated/compas_timber.elements.Plate.copy.rst", "api/generated/compas_timber.elements.Plate.from_json.rst", "api/generated/compas_timber.elements.Plate.from_jsonstring.rst", "api/generated/compas_timber.elements.Plate.remove_blank_extension.rst", "api/generated/compas_timber.elements.Plate.remove_features.rst", "api/generated/compas_timber.elements.Plate.reset.rst", "api/generated/compas_timber.elements.Plate.set_frame_and_outline.rst", "api/generated/compas_timber.elements.Plate.sha256.rst", "api/generated/compas_timber.elements.Plate.to_json.rst", "api/generated/compas_timber.elements.Plate.to_jsonstring.rst", "api/generated/compas_timber.elements.Plate.transform.rst", "api/generated/compas_timber.elements.Plate.transformed.rst", "api/generated/compas_timber.elements.Plate.validate_data.rst", "api/generated/compas_timber.elements.TimberElement.rst", "api/generated/compas_timber.elements.TimberElement.ToString.rst", "api/generated/compas_timber.elements.TimberElement.add_feature.rst", "api/generated/compas_timber.elements.TimberElement.compute_aabb.rst", "api/generated/compas_timber.elements.TimberElement.compute_collision_mesh.rst", "api/generated/compas_timber.elements.TimberElement.compute_geometry.rst", "api/generated/compas_timber.elements.TimberElement.compute_obb.rst", "api/generated/compas_timber.elements.TimberElement.compute_worldtransformation.rst", "api/generated/compas_timber.elements.TimberElement.copy.rst", "api/generated/compas_timber.elements.TimberElement.from_json.rst", "api/generated/compas_timber.elements.TimberElement.from_jsonstring.rst", "api/generated/compas_timber.elements.TimberElement.remove_blank_extension.rst", "api/generated/compas_timber.elements.TimberElement.remove_features.rst", "api/generated/compas_timber.elements.TimberElement.reset.rst", "api/generated/compas_timber.elements.TimberElement.sha256.rst", "api/generated/compas_timber.elements.TimberElement.to_json.rst", "api/generated/compas_timber.elements.TimberElement.to_jsonstring.rst", "api/generated/compas_timber.elements.TimberElement.transform.rst", "api/generated/compas_timber.elements.TimberElement.transformed.rst", "api/generated/compas_timber.elements.TimberElement.validate_data.rst", "api/generated/compas_timber.elements.Wall.rst", "api/generated/compas_timber.elements.Wall.ToString.rst", "api/generated/compas_timber.elements.Wall.add_feature.rst", "api/generated/compas_timber.elements.Wall.compute_aabb.rst", "api/generated/compas_timber.elements.Wall.compute_collision_mesh.rst", "api/generated/compas_timber.elements.Wall.compute_geometry.rst", "api/generated/compas_timber.elements.Wall.compute_obb.rst", "api/generated/compas_timber.elements.Wall.compute_worldtransformation.rst", "api/generated/compas_timber.elements.Wall.copy.rst", "api/generated/compas_timber.elements.Wall.from_boundary.rst", "api/generated/compas_timber.elements.Wall.from_brep.rst", "api/generated/compas_timber.elements.Wall.from_json.rst", "api/generated/compas_timber.elements.Wall.from_jsonstring.rst", "api/generated/compas_timber.elements.Wall.remove_blank_extension.rst", "api/generated/compas_timber.elements.Wall.remove_features.rst", "api/generated/compas_timber.elements.Wall.reset.rst", "api/generated/compas_timber.elements.Wall.rotate.rst", "api/generated/compas_timber.elements.Wall.sha256.rst", "api/generated/compas_timber.elements.Wall.to_json.rst", "api/generated/compas_timber.elements.Wall.to_jsonstring.rst", "api/generated/compas_timber.elements.Wall.transform.rst", "api/generated/compas_timber.elements.Wall.transformed.rst", "api/generated/compas_timber.elements.Wall.validate_data.rst", "api/generated/compas_timber.errors.BeamJoiningError.rst", "api/generated/compas_timber.errors.FastenerApplicationError.rst", "api/generated/compas_timber.errors.FeatureApplicationError.rst", "api/generated/compas_timber.fabrication.BTLxPart.rst", "api/generated/compas_timber.fabrication.BTLxPart.et_point_vals.rst", "api/generated/compas_timber.fabrication.BTLxPart.ref_side_from_face.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.ToString.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.add_subprocessing.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.copy.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.from_json.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.from_jsonstring.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.sha256.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.to_json.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.to_jsonstring.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.validate_data.rst", "api/generated/compas_timber.fabrication.BTLxWriter.rst", "api/generated/compas_timber.fabrication.BTLxWriter.model_to_xml.rst", "api/generated/compas_timber.fabrication.BTLxWriter.write.rst", "api/generated/compas_timber.fabrication.DoubleCut.rst", "api/generated/compas_timber.fabrication.DoubleCut.ToString.rst", "api/generated/compas_timber.fabrication.DoubleCut.add_subprocessing.rst", "api/generated/compas_timber.fabrication.DoubleCut.apply.rst", "api/generated/compas_timber.fabrication.DoubleCut.copy.rst", "api/generated/compas_timber.fabrication.DoubleCut.from_json.rst", "api/generated/compas_timber.fabrication.DoubleCut.from_jsonstring.rst", "api/generated/compas_timber.fabrication.DoubleCut.from_planes_and_beam.rst", "api/generated/compas_timber.fabrication.DoubleCut.from_shapes_and_element.rst", "api/generated/compas_timber.fabrication.DoubleCut.planes_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DoubleCut.sha256.rst", "api/generated/compas_timber.fabrication.DoubleCut.to_json.rst", "api/generated/compas_timber.fabrication.DoubleCut.to_jsonstring.rst", "api/generated/compas_timber.fabrication.DoubleCut.validate_data.rst", "api/generated/compas_timber.fabrication.DovetailMortise.rst", "api/generated/compas_timber.fabrication.DovetailMortise.ToString.rst", "api/generated/compas_timber.fabrication.DovetailMortise.add_subprocessing.rst", "api/generated/compas_timber.fabrication.DovetailMortise.apply.rst", "api/generated/compas_timber.fabrication.DovetailMortise.copy.rst", "api/generated/compas_timber.fabrication.DovetailMortise.define_dovetail_tool.rst", "api/generated/compas_timber.fabrication.DovetailMortise.dovetail_cutting_frames_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailMortise.dovetail_volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailMortise.frame_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailMortise.from_frame_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailMortise.from_json.rst", "api/generated/compas_timber.fabrication.DovetailMortise.from_jsonstring.rst", "api/generated/compas_timber.fabrication.DovetailMortise.sha256.rst", "api/generated/compas_timber.fabrication.DovetailMortise.to_json.rst", "api/generated/compas_timber.fabrication.DovetailMortise.to_jsonstring.rst", "api/generated/compas_timber.fabrication.DovetailMortise.validate_data.rst", "api/generated/compas_timber.fabrication.DovetailTenon.rst", "api/generated/compas_timber.fabrication.DovetailTenon.ToString.rst", "api/generated/compas_timber.fabrication.DovetailTenon.add_subprocessing.rst", "api/generated/compas_timber.fabrication.DovetailTenon.apply.rst", "api/generated/compas_timber.fabrication.DovetailTenon.copy.rst", "api/generated/compas_timber.fabrication.DovetailTenon.define_dovetail_tool.rst", "api/generated/compas_timber.fabrication.DovetailTenon.dovetail_cutting_frames_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailTenon.dovetail_volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailTenon.frame_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailTenon.from_json.rst", "api/generated/compas_timber.fabrication.DovetailTenon.from_jsonstring.rst", "api/generated/compas_timber.fabrication.DovetailTenon.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailTenon.sha256.rst", "api/generated/compas_timber.fabrication.DovetailTenon.to_json.rst", "api/generated/compas_timber.fabrication.DovetailTenon.to_jsonstring.rst", "api/generated/compas_timber.fabrication.DovetailTenon.validate_data.rst", "api/generated/compas_timber.fabrication.Drilling.rst", "api/generated/compas_timber.fabrication.Drilling.ToString.rst", "api/generated/compas_timber.fabrication.Drilling.add_subprocessing.rst", "api/generated/compas_timber.fabrication.Drilling.apply.rst", "api/generated/compas_timber.fabrication.Drilling.copy.rst", "api/generated/compas_timber.fabrication.Drilling.cylinder_from_params_and_element.rst", "api/generated/compas_timber.fabrication.Drilling.from_json.rst", "api/generated/compas_timber.fabrication.Drilling.from_jsonstring.rst", "api/generated/compas_timber.fabrication.Drilling.from_line_and_element.rst", "api/generated/compas_timber.fabrication.Drilling.from_shapes_and_element.rst", "api/generated/compas_timber.fabrication.Drilling.sha256.rst", "api/generated/compas_timber.fabrication.Drilling.to_json.rst", "api/generated/compas_timber.fabrication.Drilling.to_jsonstring.rst", "api/generated/compas_timber.fabrication.Drilling.validate_data.rst", "api/generated/compas_timber.fabrication.EdgePositionType.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.ToString.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.add_subprocessing.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.apply.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.copy.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.frame_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_beam_beam_and_plane.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_json.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_jsonstring.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.lap_volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.sha256.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.to_json.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.to_jsonstring.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.validate_data.rst", "api/generated/compas_timber.fabrication.JackRafterCut.rst", "api/generated/compas_timber.fabrication.JackRafterCut.ToString.rst", "api/generated/compas_timber.fabrication.JackRafterCut.add_subprocessing.rst", "api/generated/compas_timber.fabrication.JackRafterCut.apply.rst", "api/generated/compas_timber.fabrication.JackRafterCut.copy.rst", "api/generated/compas_timber.fabrication.JackRafterCut.from_json.rst", "api/generated/compas_timber.fabrication.JackRafterCut.from_jsonstring.rst", "api/generated/compas_timber.fabrication.JackRafterCut.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.JackRafterCut.from_shapes_and_element.rst", "api/generated/compas_timber.fabrication.JackRafterCut.plane_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.JackRafterCut.sha256.rst", "api/generated/compas_timber.fabrication.JackRafterCut.to_json.rst", "api/generated/compas_timber.fabrication.JackRafterCut.to_jsonstring.rst", "api/generated/compas_timber.fabrication.JackRafterCut.validate_data.rst", "api/generated/compas_timber.fabrication.Lap.rst", "api/generated/compas_timber.fabrication.Lap.ToString.rst", "api/generated/compas_timber.fabrication.Lap.add_subprocessing.rst", "api/generated/compas_timber.fabrication.Lap.apply.rst", "api/generated/compas_timber.fabrication.Lap.copy.rst", "api/generated/compas_timber.fabrication.Lap.from_json.rst", "api/generated/compas_timber.fabrication.Lap.from_jsonstring.rst", "api/generated/compas_timber.fabrication.Lap.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.Lap.planes_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.Lap.sha256.rst", "api/generated/compas_timber.fabrication.Lap.to_json.rst", "api/generated/compas_timber.fabrication.Lap.to_jsonstring.rst", "api/generated/compas_timber.fabrication.Lap.validate_data.rst", "api/generated/compas_timber.fabrication.Lap.volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.LimitationTopType.rst", "api/generated/compas_timber.fabrication.MachiningLimits.rst", "api/generated/compas_timber.fabrication.Mortise.rst", "api/generated/compas_timber.fabrication.Mortise.ToString.rst", "api/generated/compas_timber.fabrication.Mortise.add_subprocessing.rst", "api/generated/compas_timber.fabrication.Mortise.apply.rst", "api/generated/compas_timber.fabrication.Mortise.copy.rst", "api/generated/compas_timber.fabrication.Mortise.frame_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.Mortise.from_frame_and_beam.rst", "api/generated/compas_timber.fabrication.Mortise.from_json.rst", "api/generated/compas_timber.fabrication.Mortise.from_jsonstring.rst", "api/generated/compas_timber.fabrication.Mortise.sha256.rst", "api/generated/compas_timber.fabrication.Mortise.to_json.rst", "api/generated/compas_timber.fabrication.Mortise.to_jsonstring.rst", "api/generated/compas_timber.fabrication.Mortise.validate_data.rst", "api/generated/compas_timber.fabrication.Mortise.volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.OrientationType.rst", "api/generated/compas_timber.fabrication.Slot.rst", "api/generated/compas_timber.fabrication.Slot.ToString.rst", "api/generated/compas_timber.fabrication.Slot.add_subprocessing.rst", "api/generated/compas_timber.fabrication.Slot.apply.rst", "api/generated/compas_timber.fabrication.Slot.copy.rst", "api/generated/compas_timber.fabrication.Slot.from_json.rst", "api/generated/compas_timber.fabrication.Slot.from_jsonstring.rst", "api/generated/compas_timber.fabrication.Slot.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.Slot.sha256.rst", "api/generated/compas_timber.fabrication.Slot.to_json.rst", "api/generated/compas_timber.fabrication.Slot.to_jsonstring.rst", "api/generated/compas_timber.fabrication.Slot.validate_data.rst", "api/generated/compas_timber.fabrication.StepJoint.rst", "api/generated/compas_timber.fabrication.StepJoint.ToString.rst", "api/generated/compas_timber.fabrication.StepJoint.add_subprocessing.rst", "api/generated/compas_timber.fabrication.StepJoint.add_tenon.rst", "api/generated/compas_timber.fabrication.StepJoint.apply.rst", "api/generated/compas_timber.fabrication.StepJoint.copy.rst", "api/generated/compas_timber.fabrication.StepJoint.from_json.rst", "api/generated/compas_timber.fabrication.StepJoint.from_jsonstring.rst", "api/generated/compas_timber.fabrication.StepJoint.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.StepJoint.planes_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.StepJoint.sha256.rst", "api/generated/compas_timber.fabrication.StepJoint.tenon_volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.StepJoint.to_json.rst", "api/generated/compas_timber.fabrication.StepJoint.to_jsonstring.rst", "api/generated/compas_timber.fabrication.StepJoint.validate_data.rst", "api/generated/compas_timber.fabrication.StepJointNotch.rst", "api/generated/compas_timber.fabrication.StepJointNotch.ToString.rst", "api/generated/compas_timber.fabrication.StepJointNotch.add_mortise.rst", "api/generated/compas_timber.fabrication.StepJointNotch.add_subprocessing.rst", "api/generated/compas_timber.fabrication.StepJointNotch.apply.rst", "api/generated/compas_timber.fabrication.StepJointNotch.copy.rst", "api/generated/compas_timber.fabrication.StepJointNotch.from_json.rst", "api/generated/compas_timber.fabrication.StepJointNotch.from_jsonstring.rst", "api/generated/compas_timber.fabrication.StepJointNotch.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.StepJointNotch.mortise_volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.StepJointNotch.planes_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.StepJointNotch.sha256.rst", "api/generated/compas_timber.fabrication.StepJointNotch.to_json.rst", "api/generated/compas_timber.fabrication.StepJointNotch.to_jsonstring.rst", "api/generated/compas_timber.fabrication.StepJointNotch.validate_data.rst", "api/generated/compas_timber.fabrication.StepShapeType.rst", "api/generated/compas_timber.fabrication.Tenon.rst", "api/generated/compas_timber.fabrication.Tenon.ToString.rst", "api/generated/compas_timber.fabrication.Tenon.add_subprocessing.rst", "api/generated/compas_timber.fabrication.Tenon.apply.rst", "api/generated/compas_timber.fabrication.Tenon.copy.rst", "api/generated/compas_timber.fabrication.Tenon.frame_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.Tenon.from_json.rst", "api/generated/compas_timber.fabrication.Tenon.from_jsonstring.rst", "api/generated/compas_timber.fabrication.Tenon.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.Tenon.sha256.rst", "api/generated/compas_timber.fabrication.Tenon.to_json.rst", "api/generated/compas_timber.fabrication.Tenon.to_jsonstring.rst", "api/generated/compas_timber.fabrication.Tenon.validate_data.rst", "api/generated/compas_timber.fabrication.Tenon.volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.TenonShapeType.rst", "api/generated/compas_timber.ghpython.add_gh_param.rst", "api/generated/compas_timber.ghpython.clear_gh_params.rst", "api/generated/compas_timber.ghpython.get_leaf_subclasses.rst", "api/generated/compas_timber.ghpython.item_input_valid.rst", "api/generated/compas_timber.ghpython.list_input_valid.rst", "api/generated/compas_timber.ghpython.manage_dynamic_params.rst", "api/generated/compas_timber.ghpython.rename_gh_input.rst", "api/generated/compas_timber.model.TimberModel.rst", "api/generated/compas_timber.model.TimberModel.ToString.rst", "api/generated/compas_timber.model.TimberModel.add_element.rst", "api/generated/compas_timber.model.TimberModel.add_elements.rst", "api/generated/compas_timber.model.TimberModel.add_group.rst", "api/generated/compas_timber.model.TimberModel.add_group_element.rst", "api/generated/compas_timber.model.TimberModel.add_interaction.rst", "api/generated/compas_timber.model.TimberModel.add_joint.rst", "api/generated/compas_timber.model.TimberModel.add_material.rst", "api/generated/compas_timber.model.TimberModel.assign_material.rst", "api/generated/compas_timber.model.TimberModel.compute_aabb.rst", "api/generated/compas_timber.model.TimberModel.compute_obb.rst", "api/generated/compas_timber.model.TimberModel.connect_adjacent_walls.rst", "api/generated/compas_timber.model.TimberModel.copy.rst", "api/generated/compas_timber.model.TimberModel.element_by_guid.rst", "api/generated/compas_timber.model.TimberModel.elements.rst", "api/generated/compas_timber.model.TimberModel.elements_connected_by.rst", "api/generated/compas_timber.model.TimberModel.from_json.rst", "api/generated/compas_timber.model.TimberModel.from_jsonstring.rst", "api/generated/compas_timber.model.TimberModel.get_elements_in_group.rst", "api/generated/compas_timber.model.TimberModel.get_interactions_for_element.rst", "api/generated/compas_timber.model.TimberModel.has_element.rst", "api/generated/compas_timber.model.TimberModel.has_group.rst", "api/generated/compas_timber.model.TimberModel.has_interaction.rst", "api/generated/compas_timber.model.TimberModel.has_material.rst", "api/generated/compas_timber.model.TimberModel.interactions.rst", "api/generated/compas_timber.model.TimberModel.materials.rst", "api/generated/compas_timber.model.TimberModel.process_joinery.rst", "api/generated/compas_timber.model.TimberModel.remove_element.rst", "api/generated/compas_timber.model.TimberModel.remove_interaction.rst", "api/generated/compas_timber.model.TimberModel.remove_joint.rst", "api/generated/compas_timber.model.TimberModel.rotate.rst", "api/generated/compas_timber.model.TimberModel.rotated.rst", "api/generated/compas_timber.model.TimberModel.scale.rst", "api/generated/compas_timber.model.TimberModel.scaled.rst", "api/generated/compas_timber.model.TimberModel.set_topologies.rst", "api/generated/compas_timber.model.TimberModel.sha256.rst", "api/generated/compas_timber.model.TimberModel.to_json.rst", "api/generated/compas_timber.model.TimberModel.to_jsonstring.rst", "api/generated/compas_timber.model.TimberModel.transform.rst", "api/generated/compas_timber.model.TimberModel.transform_numpy.rst", "api/generated/compas_timber.model.TimberModel.transformed.rst", "api/generated/compas_timber.model.TimberModel.transformed_numpy.rst", "api/generated/compas_timber.model.TimberModel.translate.rst", "api/generated/compas_timber.model.TimberModel.translated.rst", "api/generated/compas_timber.model.TimberModel.validate_data.rst", "api/generated/compas_timber.planning.Actor.rst", "api/generated/compas_timber.planning.Actor.get_name.rst", "api/generated/compas_timber.planning.BuildingPlan.rst", "api/generated/compas_timber.planning.BuildingPlan.ToString.rst", "api/generated/compas_timber.planning.BuildingPlan.add_step.rst", "api/generated/compas_timber.planning.BuildingPlan.copy.rst", "api/generated/compas_timber.planning.BuildingPlan.from_json.rst", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.sha256.rst", "api/generated/compas_timber.planning.BuildingPlan.to_json.rst", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.validate_data.rst", "api/generated/compas_timber.planning.BuildingPlanParser.rst", "api/generated/compas_timber.planning.BuildingPlanParser.parse.rst", "api/generated/compas_timber.planning.BuildingPlanParser.serialize.rst", "api/generated/compas_timber.planning.Instruction.rst", "api/generated/compas_timber.planning.Instruction.ToString.rst", "api/generated/compas_timber.planning.Instruction.copy.rst", "api/generated/compas_timber.planning.Instruction.from_json.rst", "api/generated/compas_timber.planning.Instruction.from_jsonstring.rst", "api/generated/compas_timber.planning.Instruction.sha256.rst", "api/generated/compas_timber.planning.Instruction.to_json.rst", "api/generated/compas_timber.planning.Instruction.to_jsonstring.rst", "api/generated/compas_timber.planning.Instruction.transform.rst", "api/generated/compas_timber.planning.Instruction.validate_data.rst", "api/generated/compas_timber.planning.LinearDimension.rst", "api/generated/compas_timber.planning.LinearDimension.ToString.rst", "api/generated/compas_timber.planning.LinearDimension.copy.rst", "api/generated/compas_timber.planning.LinearDimension.from_json.rst", "api/generated/compas_timber.planning.LinearDimension.from_jsonstring.rst", "api/generated/compas_timber.planning.LinearDimension.sha256.rst", "api/generated/compas_timber.planning.LinearDimension.to_json.rst", "api/generated/compas_timber.planning.LinearDimension.to_jsonstring.rst", "api/generated/compas_timber.planning.LinearDimension.transform.rst", "api/generated/compas_timber.planning.LinearDimension.validate_data.rst", "api/generated/compas_timber.planning.Model3d.rst", "api/generated/compas_timber.planning.Model3d.ToString.rst", "api/generated/compas_timber.planning.Model3d.copy.rst", "api/generated/compas_timber.planning.Model3d.from_json.rst", "api/generated/compas_timber.planning.Model3d.from_jsonstring.rst", "api/generated/compas_timber.planning.Model3d.sha256.rst", "api/generated/compas_timber.planning.Model3d.to_json.rst", "api/generated/compas_timber.planning.Model3d.to_jsonstring.rst", "api/generated/compas_timber.planning.Model3d.transform.rst", "api/generated/compas_timber.planning.Model3d.validate_data.rst", "api/generated/compas_timber.planning.SimpleSequenceGenerator.rst", "api/generated/compas_timber.planning.Step.rst", "api/generated/compas_timber.planning.Step.ToString.rst", "api/generated/compas_timber.planning.Step.copy.rst", "api/generated/compas_timber.planning.Step.from_json.rst", "api/generated/compas_timber.planning.Step.from_jsonstring.rst", "api/generated/compas_timber.planning.Step.sha256.rst", "api/generated/compas_timber.planning.Step.to_json.rst", "api/generated/compas_timber.planning.Step.to_jsonstring.rst", "api/generated/compas_timber.planning.Step.transform.rst", "api/generated/compas_timber.planning.Step.validate_data.rst", "api/generated/compas_timber.planning.Text3d.rst", "api/generated/compas_timber.planning.Text3d.ToString.rst", "api/generated/compas_timber.planning.Text3d.copy.rst", "api/generated/compas_timber.planning.Text3d.from_json.rst", "api/generated/compas_timber.planning.Text3d.from_jsonstring.rst", "api/generated/compas_timber.planning.Text3d.sha256.rst", "api/generated/compas_timber.planning.Text3d.to_json.rst", "api/generated/compas_timber.planning.Text3d.to_jsonstring.rst", "api/generated/compas_timber.planning.Text3d.transform.rst", "api/generated/compas_timber.planning.Text3d.validate_data.rst", "api/generated/compas_timber.rhino.find_neighboring_elements.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "license.rst", "tutorials.rst", "tutorials/BTLx_contribution_guide.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beams.rst", "tutorials/grasshopper/design.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/fabrication.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joint_rules.rst", "tutorials/grasshopper/model.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "indexentries": {"actor (class in compas_timber.planning)": [[743, "compas_timber.planning.Actor", false]], "add_blank_extension() (compas_timber.elements.beam method)": [[371, "compas_timber.elements.Beam.add_blank_extension", false]], "add_element() (compas_timber.model.timbermodel method)": [[699, "compas_timber.model.TimberModel.add_element", false]], "add_elements() (compas_timber.model.timbermodel method)": [[700, "compas_timber.model.TimberModel.add_elements", false]], "add_extensions() (compas_timber.connections.ballnodejoint method)": [[12, "compas_timber.connections.BallNodeJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.joint method)": [[33, "compas_timber.connections.Joint.add_extensions", false]], "add_extensions() (compas_timber.connections.lapjoint method)": [[127, "compas_timber.connections.LapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lbuttjoint method)": [[52, "compas_timber.connections.LButtJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lfrenchridgelapjoint method)": [[70, "compas_timber.connections.LFrenchRidgeLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.llapjoint method)": [[89, "compas_timber.connections.LLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lmiterjoint method)": [[108, "compas_timber.connections.LMiterJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.nulljoint method)": [[146, "compas_timber.connections.NullJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tbirdsmouthjoint method)": [[163, "compas_timber.connections.TBirdsmouthJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tbuttjoint method)": [[180, "compas_timber.connections.TButtJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tdovetailjoint method)": [[197, "compas_timber.connections.TDovetailJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tenonmortisejoint method)": [[252, "compas_timber.connections.TenonMortiseJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tlapjoint method)": [[215, "compas_timber.connections.TLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tstepjoint method)": [[234, "compas_timber.connections.TStepJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.xlapjoint method)": [[270, "compas_timber.connections.XLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.ybuttjoint method)": [[289, "compas_timber.connections.YButtJoint.add_extensions", false]], "add_fastener_error() (compas_timber.design.debuginfomation method)": [[319, "compas_timber.design.DebugInfomation.add_fastener_error", false]], "add_feature() (compas_timber.elements.beam method)": [[372, "compas_timber.elements.Beam.add_feature", false]], "add_feature() (compas_timber.elements.fastener method)": [[400, "compas_timber.elements.Fastener.add_feature", false]], "add_feature() (compas_timber.elements.plate method)": [[430, "compas_timber.elements.Plate.add_feature", false]], "add_feature() (compas_timber.elements.timberelement method)": [[452, "compas_timber.elements.TimberElement.add_feature", false]], "add_feature() (compas_timber.elements.wall method)": [[472, "compas_timber.elements.Wall.add_feature", false]], "add_feature_error() (compas_timber.design.debuginfomation method)": [[320, "compas_timber.design.DebugInfomation.add_feature_error", false]], "add_features() (compas_timber.connections.ballnodejoint method)": [[13, "compas_timber.connections.BallNodeJoint.add_features", false]], "add_features() (compas_timber.connections.joint method)": [[34, "compas_timber.connections.Joint.add_features", false]], "add_features() (compas_timber.connections.lapjoint method)": [[128, "compas_timber.connections.LapJoint.add_features", false]], "add_features() (compas_timber.connections.lbuttjoint method)": [[53, "compas_timber.connections.LButtJoint.add_features", false]], "add_features() (compas_timber.connections.lfrenchridgelapjoint method)": [[71, "compas_timber.connections.LFrenchRidgeLapJoint.add_features", false]], "add_features() (compas_timber.connections.llapjoint method)": [[90, "compas_timber.connections.LLapJoint.add_features", false]], "add_features() (compas_timber.connections.lmiterjoint method)": [[109, "compas_timber.connections.LMiterJoint.add_features", false]], "add_features() (compas_timber.connections.nulljoint method)": [[147, "compas_timber.connections.NullJoint.add_features", false]], "add_features() (compas_timber.connections.tbirdsmouthjoint method)": [[164, "compas_timber.connections.TBirdsmouthJoint.add_features", false]], "add_features() (compas_timber.connections.tbuttjoint method)": [[181, "compas_timber.connections.TButtJoint.add_features", false]], "add_features() (compas_timber.connections.tdovetailjoint method)": [[198, "compas_timber.connections.TDovetailJoint.add_features", false]], "add_features() (compas_timber.connections.tenonmortisejoint method)": [[253, "compas_timber.connections.TenonMortiseJoint.add_features", false]], "add_features() (compas_timber.connections.tlapjoint method)": [[216, "compas_timber.connections.TLapJoint.add_features", false]], "add_features() (compas_timber.connections.tstepjoint method)": [[235, "compas_timber.connections.TStepJoint.add_features", false]], "add_features() (compas_timber.connections.xlapjoint method)": [[271, "compas_timber.connections.XLapJoint.add_features", false]], "add_features() (compas_timber.connections.ybuttjoint method)": [[290, "compas_timber.connections.YButtJoint.add_features", false]], "add_features() (compas_timber.elements.beam method)": [[373, "compas_timber.elements.Beam.add_features", false]], "add_features() (compas_timber.elements.plate method)": [[431, "compas_timber.elements.Plate.add_features", false]], "add_gh_param() (in module compas_timber.ghpython)": [[690, "compas_timber.ghpython.add_gh_param", false]], "add_group() (compas_timber.model.timbermodel method)": [[701, "compas_timber.model.TimberModel.add_group", false]], "add_group_element() (compas_timber.model.timbermodel method)": [[702, "compas_timber.model.TimberModel.add_group_element", false]], "add_interaction() (compas_timber.model.timbermodel method)": [[703, "compas_timber.model.TimberModel.add_interaction", false]], "add_joint() (compas_timber.model.timbermodel method)": [[704, "compas_timber.model.TimberModel.add_joint", false]], "add_joint_error() (compas_timber.design.debuginfomation method)": [[321, "compas_timber.design.DebugInfomation.add_joint_error", false]], "add_material() (compas_timber.model.timbermodel method)": [[705, "compas_timber.model.TimberModel.add_material", false]], "add_mortise() (compas_timber.fabrication.stepjointnotch method)": [[661, "compas_timber.fabrication.StepJointNotch.add_mortise", false]], "add_step() (compas_timber.planning.buildingplan method)": [[747, "compas_timber.planning.BuildingPlan.add_step", false]], "add_subprocessing() (compas_timber.fabrication.btlxprocessing method)": [[501, "compas_timber.fabrication.BTLxProcessing.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.doublecut method)": [[514, "compas_timber.fabrication.DoubleCut.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.dovetailmortise method)": [[528, "compas_timber.fabrication.DovetailMortise.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.dovetailtenon method)": [[544, "compas_timber.fabrication.DovetailTenon.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.drilling method)": [[560, "compas_timber.fabrication.Drilling.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.frenchridgelap method)": [[575, "compas_timber.fabrication.FrenchRidgeLap.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.jackraftercut method)": [[589, "compas_timber.fabrication.JackRafterCut.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.lap method)": [[603, "compas_timber.fabrication.Lap.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.mortise method)": [[619, "compas_timber.fabrication.Mortise.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.slot method)": [[634, "compas_timber.fabrication.Slot.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.stepjoint method)": [[646, "compas_timber.fabrication.StepJoint.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.stepjointnotch method)": [[662, "compas_timber.fabrication.StepJointNotch.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.tenon method)": [[677, "compas_timber.fabrication.Tenon.add_subprocessing", false]], "add_tenon() (compas_timber.fabrication.stepjoint method)": [[647, "compas_timber.fabrication.StepJoint.add_tenon", false]], "apply() (compas_timber.fabrication.doublecut method)": [[515, "compas_timber.fabrication.DoubleCut.apply", false]], "apply() (compas_timber.fabrication.dovetailmortise method)": [[529, "compas_timber.fabrication.DovetailMortise.apply", false]], "apply() (compas_timber.fabrication.dovetailtenon method)": [[545, "compas_timber.fabrication.DovetailTenon.apply", false]], "apply() (compas_timber.fabrication.drilling method)": [[561, "compas_timber.fabrication.Drilling.apply", false]], "apply() (compas_timber.fabrication.frenchridgelap method)": [[576, "compas_timber.fabrication.FrenchRidgeLap.apply", false]], "apply() (compas_timber.fabrication.jackraftercut method)": [[590, "compas_timber.fabrication.JackRafterCut.apply", false]], "apply() (compas_timber.fabrication.lap method)": [[604, "compas_timber.fabrication.Lap.apply", false]], "apply() (compas_timber.fabrication.mortise method)": [[620, "compas_timber.fabrication.Mortise.apply", false]], "apply() (compas_timber.fabrication.slot method)": [[635, "compas_timber.fabrication.Slot.apply", false]], "apply() (compas_timber.fabrication.stepjoint method)": [[648, "compas_timber.fabrication.StepJoint.apply", false]], "apply() (compas_timber.fabrication.stepjointnotch method)": [[663, "compas_timber.fabrication.StepJointNotch.apply", false]], "apply() (compas_timber.fabrication.tenon method)": [[678, "compas_timber.fabrication.Tenon.apply", false]], "assign_material() (compas_timber.model.timbermodel method)": [[706, "compas_timber.model.TimberModel.assign_material", false]], "ballnodejoint (class in compas_timber.connections)": [[10, "compas_timber.connections.BallNodeJoint", false]], "beam (class in compas_timber.elements)": [[369, "compas_timber.elements.Beam", false]], "beam_category_names() (compas_timber.design.surfacemodel class method)": [[343, "compas_timber.design.SurfaceModel.beam_category_names", false]], "beamjoiningerror": [[493, "compas_timber.errors.BeamJoiningError", false]], "btlxpart (class in compas_timber.fabrication)": [[496, "compas_timber.fabrication.BTLxPart", false]], "btlxprocessing (class in compas_timber.fabrication)": [[499, "compas_timber.fabrication.BTLxProcessing", false]], "btlxwriter (class in compas_timber.fabrication)": [[509, "compas_timber.fabrication.BTLxWriter", false]], "buildingplan (class in compas_timber.planning)": [[745, "compas_timber.planning.BuildingPlan", false]], "buildingplanparser (class in compas_timber.planning)": [[755, "compas_timber.planning.BuildingPlanParser", false]], "categoryrule (class in compas_timber.design)": [[309, "compas_timber.design.CategoryRule", false]], "check_beam_compatibility() (compas_timber.connections.ybuttjoint method)": [[291, "compas_timber.connections.YButtJoint.check_beam_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.ballnodejoint method)": [[14, "compas_timber.connections.BallNodeJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.joint method)": [[35, "compas_timber.connections.Joint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.lapjoint method)": [[129, "compas_timber.connections.LapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.lbuttjoint method)": [[54, "compas_timber.connections.LButtJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.lfrenchridgelapjoint method)": [[72, "compas_timber.connections.LFrenchRidgeLapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.llapjoint method)": [[91, "compas_timber.connections.LLapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.lmiterjoint method)": [[110, "compas_timber.connections.LMiterJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.nulljoint method)": [[148, "compas_timber.connections.NullJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tbirdsmouthjoint method)": [[165, "compas_timber.connections.TBirdsmouthJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tbuttjoint method)": [[182, "compas_timber.connections.TButtJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tdovetailjoint method)": [[199, "compas_timber.connections.TDovetailJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tenonmortisejoint method)": [[254, "compas_timber.connections.TenonMortiseJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tlapjoint method)": [[217, "compas_timber.connections.TLapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tstepjoint method)": [[236, "compas_timber.connections.TStepJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.xlapjoint method)": [[272, "compas_timber.connections.XLapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.ybuttjoint method)": [[292, "compas_timber.connections.YButtJoint.check_elements_compatibility", false]], "clear_gh_params() (in module compas_timber.ghpython)": [[691, "compas_timber.ghpython.clear_gh_params", false]], "comply() (compas_timber.design.categoryrule method)": [[311, "compas_timber.design.CategoryRule.comply", false]], "comply() (compas_timber.design.directrule method)": [[324, "compas_timber.design.DirectRule.comply", false]], "comply() (compas_timber.design.jointrule method)": [[337, "compas_timber.design.JointRule.comply", false]], "comply() (compas_timber.design.topologyrule method)": [[362, "compas_timber.design.TopologyRule.comply", false]], "compute_aabb() (compas_timber.elements.beam method)": [[374, "compas_timber.elements.Beam.compute_aabb", false]], "compute_aabb() (compas_timber.elements.fastener method)": [[401, "compas_timber.elements.Fastener.compute_aabb", false]], "compute_aabb() (compas_timber.elements.plate method)": [[432, "compas_timber.elements.Plate.compute_aabb", false]], "compute_aabb() (compas_timber.elements.timberelement method)": [[453, "compas_timber.elements.TimberElement.compute_aabb", false]], "compute_aabb() (compas_timber.elements.wall method)": [[473, "compas_timber.elements.Wall.compute_aabb", false]], "compute_aabb() (compas_timber.model.timbermodel method)": [[707, "compas_timber.model.TimberModel.compute_aabb", false]], "compute_collision_mesh() (compas_timber.elements.beam method)": [[375, "compas_timber.elements.Beam.compute_collision_mesh", false]], "compute_collision_mesh() (compas_timber.elements.fastener method)": [[402, "compas_timber.elements.Fastener.compute_collision_mesh", false]], "compute_collision_mesh() (compas_timber.elements.plate method)": [[433, "compas_timber.elements.Plate.compute_collision_mesh", false]], "compute_collision_mesh() (compas_timber.elements.timberelement method)": [[454, "compas_timber.elements.TimberElement.compute_collision_mesh", false]], "compute_collision_mesh() (compas_timber.elements.wall method)": [[474, "compas_timber.elements.Wall.compute_collision_mesh", false]], "compute_geometry() (compas_timber.elements.beam method)": [[376, "compas_timber.elements.Beam.compute_geometry", false]], "compute_geometry() (compas_timber.elements.fastener method)": [[403, "compas_timber.elements.Fastener.compute_geometry", false]], "compute_geometry() (compas_timber.elements.plate method)": [[434, "compas_timber.elements.Plate.compute_geometry", false]], "compute_geometry() (compas_timber.elements.timberelement method)": [[455, "compas_timber.elements.TimberElement.compute_geometry", false]], "compute_geometry() (compas_timber.elements.wall method)": [[475, "compas_timber.elements.Wall.compute_geometry", false]], "compute_obb() (compas_timber.elements.beam method)": [[377, "compas_timber.elements.Beam.compute_obb", false]], "compute_obb() (compas_timber.elements.fastener method)": [[404, "compas_timber.elements.Fastener.compute_obb", false]], "compute_obb() (compas_timber.elements.plate method)": [[435, "compas_timber.elements.Plate.compute_obb", false]], "compute_obb() (compas_timber.elements.timberelement method)": [[456, "compas_timber.elements.TimberElement.compute_obb", false]], "compute_obb() (compas_timber.elements.wall method)": [[476, "compas_timber.elements.Wall.compute_obb", false]], "compute_obb() (compas_timber.model.timbermodel method)": [[708, "compas_timber.model.TimberModel.compute_obb", false]], "compute_worldtransformation() (compas_timber.elements.beam method)": [[378, "compas_timber.elements.Beam.compute_worldtransformation", false]], "compute_worldtransformation() (compas_timber.elements.fastener method)": [[405, "compas_timber.elements.Fastener.compute_worldtransformation", false]], "compute_worldtransformation() (compas_timber.elements.plate method)": [[436, "compas_timber.elements.Plate.compute_worldtransformation", false]], "compute_worldtransformation() (compas_timber.elements.timberelement method)": [[457, "compas_timber.elements.TimberElement.compute_worldtransformation", false]], "compute_worldtransformation() (compas_timber.elements.wall method)": [[477, "compas_timber.elements.Wall.compute_worldtransformation", false]], "connect_adjacent_walls() (compas_timber.model.timbermodel method)": [[709, "compas_timber.model.TimberModel.connect_adjacent_walls", false]], "connectionsolver (class in compas_timber.connections)": [[27, "compas_timber.connections.ConnectionSolver", false]], "contains() (compas_timber.design.directrule method)": [[325, "compas_timber.design.DirectRule.contains", false]], "copy() (compas_timber.connections.ballnodejoint method)": [[15, "compas_timber.connections.BallNodeJoint.copy", false]], "copy() (compas_timber.connections.joint method)": [[36, "compas_timber.connections.Joint.copy", false]], "copy() (compas_timber.connections.lapjoint method)": [[130, "compas_timber.connections.LapJoint.copy", false]], "copy() (compas_timber.connections.lbuttjoint method)": [[55, "compas_timber.connections.LButtJoint.copy", false]], "copy() (compas_timber.connections.lfrenchridgelapjoint method)": [[73, "compas_timber.connections.LFrenchRidgeLapJoint.copy", false]], "copy() (compas_timber.connections.llapjoint method)": [[92, "compas_timber.connections.LLapJoint.copy", false]], "copy() (compas_timber.connections.lmiterjoint method)": [[111, "compas_timber.connections.LMiterJoint.copy", false]], "copy() (compas_timber.connections.nulljoint method)": [[149, "compas_timber.connections.NullJoint.copy", false]], "copy() (compas_timber.connections.tbirdsmouthjoint method)": [[166, "compas_timber.connections.TBirdsmouthJoint.copy", false]], "copy() (compas_timber.connections.tbuttjoint method)": [[183, "compas_timber.connections.TButtJoint.copy", false]], "copy() (compas_timber.connections.tdovetailjoint method)": [[200, "compas_timber.connections.TDovetailJoint.copy", false]], "copy() (compas_timber.connections.tenonmortisejoint method)": [[255, "compas_timber.connections.TenonMortiseJoint.copy", false]], "copy() (compas_timber.connections.tlapjoint method)": [[218, "compas_timber.connections.TLapJoint.copy", false]], "copy() (compas_timber.connections.tstepjoint method)": [[237, "compas_timber.connections.TStepJoint.copy", false]], "copy() (compas_timber.connections.xlapjoint method)": [[273, "compas_timber.connections.XLapJoint.copy", false]], "copy() (compas_timber.connections.ybuttjoint method)": [[293, "compas_timber.connections.YButtJoint.copy", false]], "copy() (compas_timber.elements.beam method)": [[379, "compas_timber.elements.Beam.copy", false]], "copy() (compas_timber.elements.fastener method)": [[406, "compas_timber.elements.Fastener.copy", false]], "copy() (compas_timber.elements.fastenertimberinterface method)": [[420, "compas_timber.elements.FastenerTimberInterface.copy", false]], "copy() (compas_timber.elements.plate method)": [[437, "compas_timber.elements.Plate.copy", false]], "copy() (compas_timber.elements.timberelement method)": [[458, "compas_timber.elements.TimberElement.copy", false]], "copy() (compas_timber.elements.wall method)": [[478, "compas_timber.elements.Wall.copy", false]], "copy() (compas_timber.fabrication.btlxprocessing method)": [[502, "compas_timber.fabrication.BTLxProcessing.copy", false]], "copy() (compas_timber.fabrication.doublecut method)": [[516, "compas_timber.fabrication.DoubleCut.copy", false]], "copy() (compas_timber.fabrication.dovetailmortise method)": [[530, "compas_timber.fabrication.DovetailMortise.copy", false]], "copy() (compas_timber.fabrication.dovetailtenon method)": [[546, "compas_timber.fabrication.DovetailTenon.copy", false]], "copy() (compas_timber.fabrication.drilling method)": [[562, "compas_timber.fabrication.Drilling.copy", false]], "copy() (compas_timber.fabrication.frenchridgelap method)": [[577, "compas_timber.fabrication.FrenchRidgeLap.copy", false]], "copy() (compas_timber.fabrication.jackraftercut method)": [[591, "compas_timber.fabrication.JackRafterCut.copy", false]], "copy() (compas_timber.fabrication.lap method)": [[605, "compas_timber.fabrication.Lap.copy", false]], "copy() (compas_timber.fabrication.mortise method)": [[621, "compas_timber.fabrication.Mortise.copy", false]], "copy() (compas_timber.fabrication.slot method)": [[636, "compas_timber.fabrication.Slot.copy", false]], "copy() (compas_timber.fabrication.stepjoint method)": [[649, "compas_timber.fabrication.StepJoint.copy", false]], "copy() (compas_timber.fabrication.stepjointnotch method)": [[664, "compas_timber.fabrication.StepJointNotch.copy", false]], "copy() (compas_timber.fabrication.tenon method)": [[679, "compas_timber.fabrication.Tenon.copy", false]], "copy() (compas_timber.model.timbermodel method)": [[710, "compas_timber.model.TimberModel.copy", false]], "copy() (compas_timber.planning.buildingplan method)": [[748, "compas_timber.planning.BuildingPlan.copy", false]], "copy() (compas_timber.planning.instruction method)": [[760, "compas_timber.planning.Instruction.copy", false]], "copy() (compas_timber.planning.lineardimension method)": [[770, "compas_timber.planning.LinearDimension.copy", false]], "copy() (compas_timber.planning.model3d method)": [[780, "compas_timber.planning.Model3d.copy", false]], "copy() (compas_timber.planning.step method)": [[791, "compas_timber.planning.Step.copy", false]], "copy() (compas_timber.planning.text3d method)": [[801, "compas_timber.planning.Text3d.copy", false]], "create() (compas_timber.connections.ballnodejoint class method)": [[16, "compas_timber.connections.BallNodeJoint.create", false]], "create() (compas_timber.connections.joint class method)": [[37, "compas_timber.connections.Joint.create", false]], "create() (compas_timber.connections.lapjoint class method)": [[131, "compas_timber.connections.LapJoint.create", false]], "create() (compas_timber.connections.lbuttjoint class method)": [[56, "compas_timber.connections.LButtJoint.create", false]], "create() (compas_timber.connections.lfrenchridgelapjoint class method)": [[74, "compas_timber.connections.LFrenchRidgeLapJoint.create", false]], "create() (compas_timber.connections.llapjoint class method)": [[93, "compas_timber.connections.LLapJoint.create", false]], "create() (compas_timber.connections.lmiterjoint class method)": [[112, "compas_timber.connections.LMiterJoint.create", false]], "create() (compas_timber.connections.nulljoint class method)": [[150, "compas_timber.connections.NullJoint.create", false]], "create() (compas_timber.connections.tbirdsmouthjoint class method)": [[167, "compas_timber.connections.TBirdsmouthJoint.create", false]], "create() (compas_timber.connections.tbuttjoint class method)": [[184, "compas_timber.connections.TButtJoint.create", false]], "create() (compas_timber.connections.tdovetailjoint class method)": [[201, "compas_timber.connections.TDovetailJoint.create", false]], "create() (compas_timber.connections.tenonmortisejoint class method)": [[256, "compas_timber.connections.TenonMortiseJoint.create", false]], "create() (compas_timber.connections.tlapjoint class method)": [[219, "compas_timber.connections.TLapJoint.create", false]], "create() (compas_timber.connections.tstepjoint class method)": [[238, "compas_timber.connections.TStepJoint.create", false]], "create() (compas_timber.connections.xlapjoint class method)": [[274, "compas_timber.connections.XLapJoint.create", false]], "create() (compas_timber.connections.ybuttjoint class method)": [[294, "compas_timber.connections.YButtJoint.create", false]], "create_model() (compas_timber.design.surfacemodel method)": [[344, "compas_timber.design.SurfaceModel.create_model", false]], "cross_beam_ref_side_index() (compas_timber.connections.ybuttjoint method)": [[295, "compas_timber.connections.YButtJoint.cross_beam_ref_side_index", false]], "cull_overlaps() (compas_timber.design.surfacemodel method)": [[345, "compas_timber.design.SurfaceModel.cull_overlaps", false]], "cylinder_from_params_and_element() (compas_timber.fabrication.drilling method)": [[563, "compas_timber.fabrication.Drilling.cylinder_from_params_and_element", false]], "debuginfomation (class in compas_timber.design)": [[317, "compas_timber.design.DebugInfomation", false]], "define_dovetail_tool() (compas_timber.connections.tdovetailjoint method)": [[202, "compas_timber.connections.TDovetailJoint.define_dovetail_tool", false]], "define_dovetail_tool() (compas_timber.fabrication.dovetailmortise class method)": [[531, "compas_timber.fabrication.DovetailMortise.define_dovetail_tool", false]], "define_dovetail_tool() (compas_timber.fabrication.dovetailtenon class method)": [[547, "compas_timber.fabrication.DovetailTenon.define_dovetail_tool", false]], "directrule (class in compas_timber.design)": [[322, "compas_timber.design.DirectRule", false]], "distance_between_elements() (compas_timber.design.surfacemodel method)": [[346, "compas_timber.design.SurfaceModel.distance_between_elements", false]], "doublecut (class in compas_timber.fabrication)": [[512, "compas_timber.fabrication.DoubleCut", false]], "dovetail_cutting_frames_from_params_and_beam() (compas_timber.fabrication.dovetailmortise method)": [[532, "compas_timber.fabrication.DovetailMortise.dovetail_cutting_frames_from_params_and_beam", false]], "dovetail_cutting_frames_from_params_and_beam() (compas_timber.fabrication.dovetailtenon method)": [[548, "compas_timber.fabrication.DovetailTenon.dovetail_cutting_frames_from_params_and_beam", false]], "dovetail_volume_from_params_and_beam() (compas_timber.fabrication.dovetailmortise method)": [[533, "compas_timber.fabrication.DovetailMortise.dovetail_volume_from_params_and_beam", false]], "dovetail_volume_from_params_and_beam() (compas_timber.fabrication.dovetailtenon method)": [[549, "compas_timber.fabrication.DovetailTenon.dovetail_volume_from_params_and_beam", false]], "dovetailmortise (class in compas_timber.fabrication)": [[526, "compas_timber.fabrication.DovetailMortise", false]], "dovetailtenon (class in compas_timber.fabrication)": [[542, "compas_timber.fabrication.DovetailTenon", false]], "drilling (class in compas_timber.fabrication)": [[558, "compas_timber.fabrication.Drilling", false]], "edgepositiontype (class in compas_timber.fabrication)": [[572, "compas_timber.fabrication.EdgePositionType", false]], "element_by_guid() (compas_timber.model.timbermodel method)": [[711, "compas_timber.model.TimberModel.element_by_guid", false]], "element_count_complies() (compas_timber.connections.ballnodejoint class method)": [[17, "compas_timber.connections.BallNodeJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.joint class method)": [[38, "compas_timber.connections.Joint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lapjoint class method)": [[132, "compas_timber.connections.LapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lbuttjoint class method)": [[57, "compas_timber.connections.LButtJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lfrenchridgelapjoint class method)": [[75, "compas_timber.connections.LFrenchRidgeLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.llapjoint class method)": [[94, "compas_timber.connections.LLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lmiterjoint class method)": [[113, "compas_timber.connections.LMiterJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.nulljoint class method)": [[151, "compas_timber.connections.NullJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tbirdsmouthjoint class method)": [[168, "compas_timber.connections.TBirdsmouthJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tbuttjoint class method)": [[185, "compas_timber.connections.TButtJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tdovetailjoint class method)": [[203, "compas_timber.connections.TDovetailJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tenonmortisejoint class method)": [[257, "compas_timber.connections.TenonMortiseJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tlapjoint class method)": [[220, "compas_timber.connections.TLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tstepjoint class method)": [[239, "compas_timber.connections.TStepJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.xlapjoint class method)": [[275, "compas_timber.connections.XLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.ybuttjoint class method)": [[296, "compas_timber.connections.YButtJoint.element_count_complies", false]], "elements() (compas_timber.model.timbermodel method)": [[712, "compas_timber.model.TimberModel.elements", false]], "elements_connected_by() (compas_timber.model.timbermodel method)": [[713, "compas_timber.model.TimberModel.elements_connected_by", false]], "endpoint_closest_to_point() (compas_timber.elements.beam method)": [[380, "compas_timber.elements.Beam.endpoint_closest_to_point", false]], "et_point_vals() (compas_timber.fabrication.btlxpart method)": [[497, "compas_timber.fabrication.BTLxPart.et_point_vals", false]], "extension_to_plane() (compas_timber.elements.beam method)": [[381, "compas_timber.elements.Beam.extension_to_plane", false]], "fastener (class in compas_timber.elements)": [[398, "compas_timber.elements.Fastener", false]], "fastenerapplicationerror": [[494, "compas_timber.errors.FastenerApplicationError", false]], "fastenertimberinterface (class in compas_timber.elements)": [[418, "compas_timber.elements.FastenerTimberInterface", false]], "featureapplicationerror": [[495, "compas_timber.errors.FeatureApplicationError", false]], "featuredefinition (class in compas_timber.design)": [[330, "compas_timber.design.FeatureDefinition", false]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[28, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs", false]], "find_neighboring_elements() (in module compas_timber.connections)": [[308, "compas_timber.connections.find_neighboring_elements", false]], "find_neighboring_elements() (in module compas_timber.rhino)": [[809, "compas_timber.rhino.find_neighboring_elements", false]], "find_topology() (compas_timber.connections.connectionsolver method)": [[29, "compas_timber.connections.ConnectionSolver.find_topology", false]], "find_wall_wall_topology() (compas_timber.connections.connectionsolver method)": [[30, "compas_timber.connections.ConnectionSolver.find_wall_wall_topology", false]], "frame_from_params_and_beam() (compas_timber.fabrication.dovetailmortise method)": [[534, "compas_timber.fabrication.DovetailMortise.frame_from_params_and_beam", false]], "frame_from_params_and_beam() (compas_timber.fabrication.dovetailtenon method)": [[550, "compas_timber.fabrication.DovetailTenon.frame_from_params_and_beam", false]], "frame_from_params_and_beam() (compas_timber.fabrication.frenchridgelap method)": [[578, "compas_timber.fabrication.FrenchRidgeLap.frame_from_params_and_beam", false]], "frame_from_params_and_beam() (compas_timber.fabrication.mortise method)": [[622, "compas_timber.fabrication.Mortise.frame_from_params_and_beam", false]], "frame_from_params_and_beam() (compas_timber.fabrication.tenon method)": [[680, "compas_timber.fabrication.Tenon.frame_from_params_and_beam", false]], "frenchridgelap (class in compas_timber.fabrication)": [[573, "compas_timber.fabrication.FrenchRidgeLap", false]], "from_beam_beam_and_plane() (compas_timber.fabrication.frenchridgelap class method)": [[579, "compas_timber.fabrication.FrenchRidgeLap.from_beam_beam_and_plane", false]], "from_boundary() (compas_timber.elements.wall class method)": [[479, "compas_timber.elements.Wall.from_boundary", false]], "from_brep() (compas_timber.elements.wall class method)": [[480, "compas_timber.elements.Wall.from_brep", false]], "from_centerline() (compas_timber.elements.beam class method)": [[382, "compas_timber.elements.Beam.from_centerline", false]], "from_endpoints() (compas_timber.elements.beam class method)": [[383, "compas_timber.elements.Beam.from_endpoints", false]], "from_frame_and_beam() (compas_timber.fabrication.dovetailmortise class method)": [[535, "compas_timber.fabrication.DovetailMortise.from_frame_and_beam", false]], "from_frame_and_beam() (compas_timber.fabrication.mortise class method)": [[623, "compas_timber.fabrication.Mortise.from_frame_and_beam", false]], "from_json() (compas_timber.connections.ballnodejoint class method)": [[18, "compas_timber.connections.BallNodeJoint.from_json", false]], "from_json() (compas_timber.connections.joint class method)": [[39, "compas_timber.connections.Joint.from_json", false]], "from_json() (compas_timber.connections.lapjoint class method)": [[133, "compas_timber.connections.LapJoint.from_json", false]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[58, "compas_timber.connections.LButtJoint.from_json", false]], "from_json() (compas_timber.connections.lfrenchridgelapjoint class method)": [[76, "compas_timber.connections.LFrenchRidgeLapJoint.from_json", false]], "from_json() (compas_timber.connections.llapjoint class method)": [[95, "compas_timber.connections.LLapJoint.from_json", false]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[114, "compas_timber.connections.LMiterJoint.from_json", false]], "from_json() (compas_timber.connections.nulljoint class method)": [[152, "compas_timber.connections.NullJoint.from_json", false]], "from_json() (compas_timber.connections.tbirdsmouthjoint class method)": [[169, "compas_timber.connections.TBirdsmouthJoint.from_json", false]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[186, "compas_timber.connections.TButtJoint.from_json", false]], "from_json() (compas_timber.connections.tdovetailjoint class method)": [[204, "compas_timber.connections.TDovetailJoint.from_json", false]], "from_json() (compas_timber.connections.tenonmortisejoint class method)": [[258, "compas_timber.connections.TenonMortiseJoint.from_json", false]], "from_json() (compas_timber.connections.tlapjoint class method)": [[221, "compas_timber.connections.TLapJoint.from_json", false]], "from_json() (compas_timber.connections.tstepjoint class method)": [[240, "compas_timber.connections.TStepJoint.from_json", false]], "from_json() (compas_timber.connections.xlapjoint class method)": [[276, "compas_timber.connections.XLapJoint.from_json", false]], "from_json() (compas_timber.connections.ybuttjoint class method)": [[297, "compas_timber.connections.YButtJoint.from_json", false]], "from_json() (compas_timber.elements.beam class method)": [[384, "compas_timber.elements.Beam.from_json", false]], "from_json() (compas_timber.elements.fastener class method)": [[407, "compas_timber.elements.Fastener.from_json", false]], "from_json() (compas_timber.elements.fastenertimberinterface class method)": [[421, "compas_timber.elements.FastenerTimberInterface.from_json", false]], "from_json() (compas_timber.elements.plate class method)": [[438, "compas_timber.elements.Plate.from_json", false]], "from_json() (compas_timber.elements.timberelement class method)": [[459, "compas_timber.elements.TimberElement.from_json", false]], "from_json() (compas_timber.elements.wall class method)": [[481, "compas_timber.elements.Wall.from_json", false]], "from_json() (compas_timber.fabrication.btlxprocessing class method)": [[503, "compas_timber.fabrication.BTLxProcessing.from_json", false]], "from_json() (compas_timber.fabrication.doublecut class method)": [[517, "compas_timber.fabrication.DoubleCut.from_json", false]], "from_json() (compas_timber.fabrication.dovetailmortise class method)": [[536, "compas_timber.fabrication.DovetailMortise.from_json", false]], "from_json() (compas_timber.fabrication.dovetailtenon class method)": [[551, "compas_timber.fabrication.DovetailTenon.from_json", false]], "from_json() (compas_timber.fabrication.drilling class method)": [[564, "compas_timber.fabrication.Drilling.from_json", false]], "from_json() (compas_timber.fabrication.frenchridgelap class method)": [[580, "compas_timber.fabrication.FrenchRidgeLap.from_json", false]], "from_json() (compas_timber.fabrication.jackraftercut class method)": [[592, "compas_timber.fabrication.JackRafterCut.from_json", false]], "from_json() (compas_timber.fabrication.lap class method)": [[606, "compas_timber.fabrication.Lap.from_json", false]], "from_json() (compas_timber.fabrication.mortise class method)": [[624, "compas_timber.fabrication.Mortise.from_json", false]], "from_json() (compas_timber.fabrication.slot class method)": [[637, "compas_timber.fabrication.Slot.from_json", false]], "from_json() (compas_timber.fabrication.stepjoint class method)": [[650, "compas_timber.fabrication.StepJoint.from_json", false]], "from_json() (compas_timber.fabrication.stepjointnotch class method)": [[665, "compas_timber.fabrication.StepJointNotch.from_json", false]], "from_json() (compas_timber.fabrication.tenon class method)": [[681, "compas_timber.fabrication.Tenon.from_json", false]], "from_json() (compas_timber.model.timbermodel class method)": [[714, "compas_timber.model.TimberModel.from_json", false]], "from_json() (compas_timber.planning.buildingplan class method)": [[749, "compas_timber.planning.BuildingPlan.from_json", false]], "from_json() (compas_timber.planning.instruction class method)": [[761, "compas_timber.planning.Instruction.from_json", false]], "from_json() (compas_timber.planning.lineardimension class method)": [[771, "compas_timber.planning.LinearDimension.from_json", false]], "from_json() (compas_timber.planning.model3d class method)": [[781, "compas_timber.planning.Model3d.from_json", false]], "from_json() (compas_timber.planning.step class method)": [[792, "compas_timber.planning.Step.from_json", false]], "from_json() (compas_timber.planning.text3d class method)": [[802, "compas_timber.planning.Text3d.from_json", false]], "from_jsonstring() (compas_timber.connections.ballnodejoint class method)": [[19, "compas_timber.connections.BallNodeJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.joint class method)": [[40, "compas_timber.connections.Joint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lapjoint class method)": [[134, "compas_timber.connections.LapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[59, "compas_timber.connections.LButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lfrenchridgelapjoint class method)": [[77, "compas_timber.connections.LFrenchRidgeLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.llapjoint class method)": [[96, "compas_timber.connections.LLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[115, "compas_timber.connections.LMiterJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.nulljoint class method)": [[153, "compas_timber.connections.NullJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tbirdsmouthjoint class method)": [[170, "compas_timber.connections.TBirdsmouthJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[187, "compas_timber.connections.TButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tdovetailjoint class method)": [[205, "compas_timber.connections.TDovetailJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tenonmortisejoint class method)": [[259, "compas_timber.connections.TenonMortiseJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tlapjoint class method)": [[222, "compas_timber.connections.TLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tstepjoint class method)": [[241, "compas_timber.connections.TStepJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.xlapjoint class method)": [[277, "compas_timber.connections.XLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.ybuttjoint class method)": [[298, "compas_timber.connections.YButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.beam class method)": [[385, "compas_timber.elements.Beam.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.fastener class method)": [[408, "compas_timber.elements.Fastener.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.fastenertimberinterface class method)": [[422, "compas_timber.elements.FastenerTimberInterface.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.plate class method)": [[439, "compas_timber.elements.Plate.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.timberelement class method)": [[460, "compas_timber.elements.TimberElement.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.wall class method)": [[482, "compas_timber.elements.Wall.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.btlxprocessing class method)": [[504, "compas_timber.fabrication.BTLxProcessing.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.doublecut class method)": [[518, "compas_timber.fabrication.DoubleCut.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.dovetailmortise class method)": [[537, "compas_timber.fabrication.DovetailMortise.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.dovetailtenon class method)": [[552, "compas_timber.fabrication.DovetailTenon.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.drilling class method)": [[565, "compas_timber.fabrication.Drilling.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.frenchridgelap class method)": [[581, "compas_timber.fabrication.FrenchRidgeLap.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.jackraftercut class method)": [[593, "compas_timber.fabrication.JackRafterCut.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.lap class method)": [[607, "compas_timber.fabrication.Lap.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.mortise class method)": [[625, "compas_timber.fabrication.Mortise.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.slot class method)": [[638, "compas_timber.fabrication.Slot.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.stepjoint class method)": [[651, "compas_timber.fabrication.StepJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.stepjointnotch class method)": [[666, "compas_timber.fabrication.StepJointNotch.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.tenon class method)": [[682, "compas_timber.fabrication.Tenon.from_jsonstring", false]], "from_jsonstring() (compas_timber.model.timbermodel class method)": [[715, "compas_timber.model.TimberModel.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.buildingplan class method)": [[750, "compas_timber.planning.BuildingPlan.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.instruction class method)": [[762, "compas_timber.planning.Instruction.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.lineardimension class method)": [[772, "compas_timber.planning.LinearDimension.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.model3d class method)": [[782, "compas_timber.planning.Model3d.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.step class method)": [[793, "compas_timber.planning.Step.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.text3d class method)": [[803, "compas_timber.planning.Text3d.from_jsonstring", false]], "from_line_and_element() (compas_timber.fabrication.drilling class method)": [[566, "compas_timber.fabrication.Drilling.from_line_and_element", false]], "from_plane_and_beam() (compas_timber.fabrication.dovetailtenon class method)": [[553, "compas_timber.fabrication.DovetailTenon.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.jackraftercut class method)": [[594, "compas_timber.fabrication.JackRafterCut.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.lap class method)": [[608, "compas_timber.fabrication.Lap.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.slot class method)": [[639, "compas_timber.fabrication.Slot.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.stepjoint class method)": [[652, "compas_timber.fabrication.StepJoint.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.stepjointnotch class method)": [[667, "compas_timber.fabrication.StepJointNotch.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.tenon class method)": [[683, "compas_timber.fabrication.Tenon.from_plane_and_beam", false]], "from_planes_and_beam() (compas_timber.fabrication.doublecut class method)": [[519, "compas_timber.fabrication.DoubleCut.from_planes_and_beam", false]], "from_shapes_and_element() (compas_timber.fabrication.doublecut class method)": [[520, "compas_timber.fabrication.DoubleCut.from_shapes_and_element", false]], "from_shapes_and_element() (compas_timber.fabrication.drilling class method)": [[567, "compas_timber.fabrication.Drilling.from_shapes_and_element", false]], "from_shapes_and_element() (compas_timber.fabrication.jackraftercut class method)": [[595, "compas_timber.fabrication.JackRafterCut.from_shapes_and_element", false]], "generate_frame() (compas_timber.design.surfacemodel method)": [[347, "compas_timber.design.SurfaceModel.generate_frame", false]], "generate_perimeter_beams() (compas_timber.design.surfacemodel method)": [[348, "compas_timber.design.SurfaceModel.generate_perimeter_beams", false]], "generate_plates() (compas_timber.design.surfacemodel method)": [[349, "compas_timber.design.SurfaceModel.generate_plates", false]], "generate_stud_lines() (compas_timber.design.surfacemodel method)": [[350, "compas_timber.design.SurfaceModel.generate_stud_lines", false]], "generate_studs() (compas_timber.design.surfacemodel method)": [[351, "compas_timber.design.SurfaceModel.generate_studs", false]], "generate_windows() (compas_timber.design.surfacemodel method)": [[352, "compas_timber.design.SurfaceModel.generate_windows", false]], "get_beam_intersections() (compas_timber.design.surfacemodel method)": [[353, "compas_timber.design.SurfaceModel.get_beam_intersections", false]], "get_category_rules() (compas_timber.design.categoryrule static method)": [[312, "compas_timber.design.CategoryRule.get_category_rules", false]], "get_category_rules() (compas_timber.design.directrule static method)": [[326, "compas_timber.design.DirectRule.get_category_rules", false]], "get_category_rules() (compas_timber.design.jointrule static method)": [[338, "compas_timber.design.JointRule.get_category_rules", false]], "get_category_rules() (compas_timber.design.topologyrule static method)": [[363, "compas_timber.design.TopologyRule.get_category_rules", false]], "get_cross_cutting_frame() (compas_timber.connections.lapjoint method)": [[135, "compas_timber.connections.LapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.lfrenchridgelapjoint method)": [[78, "compas_timber.connections.LFrenchRidgeLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.llapjoint method)": [[97, "compas_timber.connections.LLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.tlapjoint method)": [[223, "compas_timber.connections.TLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.xlapjoint method)": [[278, "compas_timber.connections.XLapJoint.get_cross_cutting_frame", false]], "get_cutoff_plane() (compas_timber.connections.lmiterjoint method)": [[116, "compas_timber.connections.LMiterJoint.get_cutoff_plane", false]], "get_cutting_planes() (compas_timber.connections.lmiterjoint method)": [[117, "compas_timber.connections.LMiterJoint.get_cutting_planes", false]], "get_dimensions_relative_to_side() (compas_timber.elements.beam method)": [[386, "compas_timber.elements.Beam.get_dimensions_relative_to_side", false]], "get_direct_rules() (compas_timber.design.categoryrule static method)": [[313, "compas_timber.design.CategoryRule.get_direct_rules", false]], "get_direct_rules() (compas_timber.design.directrule static method)": [[327, "compas_timber.design.DirectRule.get_direct_rules", false]], "get_direct_rules() (compas_timber.design.jointrule static method)": [[339, "compas_timber.design.JointRule.get_direct_rules", false]], "get_direct_rules() (compas_timber.design.topologyrule static method)": [[364, "compas_timber.design.TopologyRule.get_direct_rules", false]], "get_elements_in_group() (compas_timber.model.timbermodel method)": [[716, "compas_timber.model.TimberModel.get_elements_in_group", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.ballnodejoint static method)": [[20, "compas_timber.connections.BallNodeJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.joint static method)": [[41, "compas_timber.connections.Joint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lapjoint static method)": [[136, "compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lbuttjoint static method)": [[60, "compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lfrenchridgelapjoint static method)": [[79, "compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.llapjoint static method)": [[98, "compas_timber.connections.LLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lmiterjoint static method)": [[118, "compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.nulljoint static method)": [[154, "compas_timber.connections.NullJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tbirdsmouthjoint static method)": [[171, "compas_timber.connections.TBirdsmouthJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tbuttjoint static method)": [[188, "compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tdovetailjoint static method)": [[206, "compas_timber.connections.TDovetailJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tenonmortisejoint static method)": [[260, "compas_timber.connections.TenonMortiseJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tlapjoint static method)": [[224, "compas_timber.connections.TLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tstepjoint static method)": [[242, "compas_timber.connections.TStepJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.xlapjoint static method)": [[279, "compas_timber.connections.XLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.ybuttjoint static method)": [[299, "compas_timber.connections.YButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.ballnodejoint static method)": [[21, "compas_timber.connections.BallNodeJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.joint static method)": [[42, "compas_timber.connections.Joint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lapjoint static method)": [[137, "compas_timber.connections.LapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lbuttjoint static method)": [[61, "compas_timber.connections.LButtJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lfrenchridgelapjoint static method)": [[80, "compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.llapjoint static method)": [[99, "compas_timber.connections.LLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lmiterjoint static method)": [[119, "compas_timber.connections.LMiterJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.nulljoint static method)": [[155, "compas_timber.connections.NullJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tbirdsmouthjoint static method)": [[172, "compas_timber.connections.TBirdsmouthJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tbuttjoint static method)": [[189, "compas_timber.connections.TButtJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tdovetailjoint static method)": [[207, "compas_timber.connections.TDovetailJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tenonmortisejoint static method)": [[261, "compas_timber.connections.TenonMortiseJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tlapjoint static method)": [[225, "compas_timber.connections.TLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tstepjoint static method)": [[243, "compas_timber.connections.TStepJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.xlapjoint static method)": [[280, "compas_timber.connections.XLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.ybuttjoint static method)": [[300, "compas_timber.connections.YButtJoint.get_face_most_towards_beam", false]], "get_features() (compas_timber.elements.fastenertimberinterface method)": [[423, "compas_timber.elements.FastenerTimberInterface.get_features", false]], "get_interactions_for_element() (compas_timber.model.timbermodel method)": [[717, "compas_timber.model.TimberModel.get_interactions_for_element", false]], "get_interior_segment_indices() (compas_timber.design.surfacemodel method)": [[354, "compas_timber.design.SurfaceModel.get_interior_segment_indices", false]], "get_leaf_subclasses() (in module compas_timber.ghpython)": [[692, "compas_timber.ghpython.get_leaf_subclasses", false]], "get_main_cutting_frame() (compas_timber.connections.lapjoint method)": [[138, "compas_timber.connections.LapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.lfrenchridgelapjoint method)": [[81, "compas_timber.connections.LFrenchRidgeLapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.llapjoint method)": [[100, "compas_timber.connections.LLapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.tlapjoint method)": [[226, "compas_timber.connections.TLapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.xlapjoint method)": [[281, "compas_timber.connections.XLapJoint.get_main_cutting_frame", false]], "get_miter_planes() (compas_timber.connections.ybuttjoint method)": [[301, "compas_timber.connections.YButtJoint.get_miter_planes", false]], "get_name() (compas_timber.connections.jointtopology class method)": [[49, "compas_timber.connections.JointTopology.get_name", false]], "get_name() (compas_timber.planning.actor class method)": [[744, "compas_timber.planning.Actor.get_name", false]], "get_topology_rules() (compas_timber.design.categoryrule static method)": [[314, "compas_timber.design.CategoryRule.get_topology_rules", false]], "get_topology_rules() (compas_timber.design.directrule static method)": [[328, "compas_timber.design.DirectRule.get_topology_rules", false]], "get_topology_rules() (compas_timber.design.jointrule static method)": [[340, "compas_timber.design.JointRule.get_topology_rules", false]], "get_topology_rules() (compas_timber.design.topologyrule static method)": [[365, "compas_timber.design.TopologyRule.get_topology_rules", false]], "guess_joint_topology_2beams() (in module compas_timber.design)": [[367, "compas_timber.design.guess_joint_topology_2beams", false]], "has_element() (compas_timber.model.timbermodel method)": [[718, "compas_timber.model.TimberModel.has_element", false]], "has_group() (compas_timber.model.timbermodel method)": [[719, "compas_timber.model.TimberModel.has_group", false]], "has_interaction() (compas_timber.model.timbermodel method)": [[720, "compas_timber.model.TimberModel.has_interaction", false]], "has_material() (compas_timber.model.timbermodel method)": [[721, "compas_timber.model.TimberModel.has_material", false]], "instruction (class in compas_timber.planning)": [[758, "compas_timber.planning.Instruction", false]], "interactions() (compas_timber.model.timbermodel method)": [[722, "compas_timber.model.TimberModel.interactions", false]], "is_identical() (compas_timber.design.jointdefinition method)": [[334, "compas_timber.design.JointDefinition.is_identical", false]], "item_input_valid() (in module compas_timber.ghpython)": [[693, "compas_timber.ghpython.item_input_valid", false]], "jackraftercut (class in compas_timber.fabrication)": [[587, "compas_timber.fabrication.JackRafterCut", false]], "joint (class in compas_timber.connections)": [[31, "compas_timber.connections.Joint", false]], "jointdefinition (class in compas_timber.design)": [[332, "compas_timber.design.JointDefinition", false]], "jointrule (class in compas_timber.design)": [[336, "compas_timber.design.JointRule", false]], "joints_from_beams_and_rules() (compas_timber.design.categoryrule static method)": [[315, "compas_timber.design.CategoryRule.joints_from_beams_and_rules", false]], "joints_from_beams_and_rules() (compas_timber.design.directrule static method)": [[329, "compas_timber.design.DirectRule.joints_from_beams_and_rules", false]], "joints_from_beams_and_rules() (compas_timber.design.jointrule static method)": [[341, "compas_timber.design.JointRule.joints_from_beams_and_rules", false]], "joints_from_beams_and_rules() (compas_timber.design.topologyrule static method)": [[366, "compas_timber.design.TopologyRule.joints_from_beams_and_rules", false]], "jointtopology (class in compas_timber.connections)": [[48, "compas_timber.connections.JointTopology", false]], "lap (class in compas_timber.fabrication)": [[601, "compas_timber.fabrication.Lap", false]], "lap_volume_from_params_and_beam() (compas_timber.fabrication.frenchridgelap method)": [[582, "compas_timber.fabrication.FrenchRidgeLap.lap_volume_from_params_and_beam", false]], "lapjoint (class in compas_timber.connections)": [[125, "compas_timber.connections.LapJoint", false]], "lbuttjoint (class in compas_timber.connections)": [[50, "compas_timber.connections.LButtJoint", false]], "lfrenchridgelapjoint (class in compas_timber.connections)": [[68, "compas_timber.connections.LFrenchRidgeLapJoint", false]], "limitationtoptype (class in compas_timber.fabrication)": [[615, "compas_timber.fabrication.LimitationTopType", false]], "lineardimension (class in compas_timber.planning)": [[768, "compas_timber.planning.LinearDimension", false]], "list_input_valid() (in module compas_timber.ghpython)": [[694, "compas_timber.ghpython.list_input_valid", false]], "llapjoint (class in compas_timber.connections)": [[87, "compas_timber.connections.LLapJoint", false]], "lmiterjoint (class in compas_timber.connections)": [[106, "compas_timber.connections.LMiterJoint", false]], "machininglimits (class in compas_timber.fabrication)": [[616, "compas_timber.fabrication.MachiningLimits", false]], "main_beam_ref_side_index() (compas_timber.connections.ybuttjoint method)": [[302, "compas_timber.connections.YButtJoint.main_beam_ref_side_index", false]], "manage_dynamic_params() (in module compas_timber.ghpython)": [[695, "compas_timber.ghpython.manage_dynamic_params", false]], "match() (compas_timber.design.jointdefinition method)": [[335, "compas_timber.design.JointDefinition.match", false]], "materials() (compas_timber.model.timbermodel method)": [[723, "compas_timber.model.TimberModel.materials", false]], "model3d (class in compas_timber.planning)": [[778, "compas_timber.planning.Model3d", false]], "model_to_xml() (compas_timber.fabrication.btlxwriter method)": [[510, "compas_timber.fabrication.BTLxWriter.model_to_xml", false]], "mortise (class in compas_timber.fabrication)": [[617, "compas_timber.fabrication.Mortise", false]], "mortise_volume_from_params_and_beam() (compas_timber.fabrication.stepjointnotch method)": [[668, "compas_timber.fabrication.StepJointNotch.mortise_volume_from_params_and_beam", false]], "nulljoint (class in compas_timber.connections)": [[144, "compas_timber.connections.NullJoint", false]], "offset_elements() (compas_timber.design.surfacemodel method)": [[355, "compas_timber.design.SurfaceModel.offset_elements", false]], "opposing_side_index() (compas_timber.elements.beam method)": [[387, "compas_timber.elements.Beam.opposing_side_index", false]], "orientationtype (class in compas_timber.fabrication)": [[631, "compas_timber.fabrication.OrientationType", false]], "parse() (compas_timber.planning.buildingplanparser class method)": [[756, "compas_timber.planning.BuildingPlanParser.parse", false]], "parse_loops() (compas_timber.design.surfacemodel method)": [[356, "compas_timber.design.SurfaceModel.parse_loops", false]], "plane_from_params_and_beam() (compas_timber.fabrication.jackraftercut method)": [[596, "compas_timber.fabrication.JackRafterCut.plane_from_params_and_beam", false]], "planes_from_params_and_beam() (compas_timber.fabrication.doublecut method)": [[521, "compas_timber.fabrication.DoubleCut.planes_from_params_and_beam", false]], "planes_from_params_and_beam() (compas_timber.fabrication.lap method)": [[609, "compas_timber.fabrication.Lap.planes_from_params_and_beam", false]], "planes_from_params_and_beam() (compas_timber.fabrication.stepjoint method)": [[653, "compas_timber.fabrication.StepJoint.planes_from_params_and_beam", false]], "planes_from_params_and_beam() (compas_timber.fabrication.stepjointnotch method)": [[669, "compas_timber.fabrication.StepJointNotch.planes_from_params_and_beam", false]], "plate (class in compas_timber.elements)": [[428, "compas_timber.elements.Plate", false]], "process_joinery() (compas_timber.model.timbermodel method)": [[724, "compas_timber.model.TimberModel.process_joinery", false]], "ref_side_from_face() (compas_timber.fabrication.btlxpart method)": [[498, "compas_timber.fabrication.BTLxPart.ref_side_from_face", false]], "remove_blank_extension() (compas_timber.elements.beam method)": [[388, "compas_timber.elements.Beam.remove_blank_extension", false]], "remove_blank_extension() (compas_timber.elements.fastener method)": [[409, "compas_timber.elements.Fastener.remove_blank_extension", false]], "remove_blank_extension() (compas_timber.elements.plate method)": [[440, "compas_timber.elements.Plate.remove_blank_extension", false]], "remove_blank_extension() (compas_timber.elements.timberelement method)": [[461, "compas_timber.elements.TimberElement.remove_blank_extension", false]], "remove_blank_extension() (compas_timber.elements.wall method)": [[483, "compas_timber.elements.Wall.remove_blank_extension", false]], "remove_element() (compas_timber.model.timbermodel method)": [[725, "compas_timber.model.TimberModel.remove_element", false]], "remove_features() (compas_timber.elements.beam method)": [[389, "compas_timber.elements.Beam.remove_features", false]], "remove_features() (compas_timber.elements.fastener method)": [[410, "compas_timber.elements.Fastener.remove_features", false]], "remove_features() (compas_timber.elements.plate method)": [[441, "compas_timber.elements.Plate.remove_features", false]], "remove_features() (compas_timber.elements.timberelement method)": [[462, "compas_timber.elements.TimberElement.remove_features", false]], "remove_features() (compas_timber.elements.wall method)": [[484, "compas_timber.elements.Wall.remove_features", false]], "remove_interaction() (compas_timber.model.timbermodel method)": [[726, "compas_timber.model.TimberModel.remove_interaction", false]], "remove_joint() (compas_timber.model.timbermodel method)": [[727, "compas_timber.model.TimberModel.remove_joint", false]], "rename_gh_input() (in module compas_timber.ghpython)": [[696, "compas_timber.ghpython.rename_gh_input", false]], "reorder() (compas_timber.design.categoryrule method)": [[316, "compas_timber.design.CategoryRule.reorder", false]], "reset() (compas_timber.elements.beam method)": [[390, "compas_timber.elements.Beam.reset", false]], "reset() (compas_timber.elements.fastener method)": [[411, "compas_timber.elements.Fastener.reset", false]], "reset() (compas_timber.elements.plate method)": [[442, "compas_timber.elements.Plate.reset", false]], "reset() (compas_timber.elements.timberelement method)": [[463, "compas_timber.elements.TimberElement.reset", false]], "reset() (compas_timber.elements.wall method)": [[485, "compas_timber.elements.Wall.reset", false]], "restore_beams_from_keys() (compas_timber.connections.ballnodejoint method)": [[22, "compas_timber.connections.BallNodeJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[43, "compas_timber.connections.Joint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lapjoint method)": [[139, "compas_timber.connections.LapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[62, "compas_timber.connections.LButtJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lfrenchridgelapjoint method)": [[82, "compas_timber.connections.LFrenchRidgeLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.llapjoint method)": [[101, "compas_timber.connections.LLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[120, "compas_timber.connections.LMiterJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.nulljoint method)": [[156, "compas_timber.connections.NullJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tbirdsmouthjoint method)": [[173, "compas_timber.connections.TBirdsmouthJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[190, "compas_timber.connections.TButtJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tdovetailjoint method)": [[208, "compas_timber.connections.TDovetailJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tenonmortisejoint method)": [[262, "compas_timber.connections.TenonMortiseJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tlapjoint method)": [[227, "compas_timber.connections.TLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tstepjoint method)": [[244, "compas_timber.connections.TStepJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.xlapjoint method)": [[282, "compas_timber.connections.XLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.ybuttjoint method)": [[303, "compas_timber.connections.YButtJoint.restore_beams_from_keys", false]], "rotate() (compas_timber.elements.wall method)": [[486, "compas_timber.elements.Wall.rotate", false]], "rotate() (compas_timber.model.timbermodel method)": [[728, "compas_timber.model.TimberModel.rotate", false]], "rotated() (compas_timber.model.timbermodel method)": [[729, "compas_timber.model.TimberModel.rotated", false]], "scale() (compas_timber.model.timbermodel method)": [[730, "compas_timber.model.TimberModel.scale", false]], "scaled() (compas_timber.model.timbermodel method)": [[731, "compas_timber.model.TimberModel.scaled", false]], "serialize() (compas_timber.planning.buildingplanparser class method)": [[757, "compas_timber.planning.BuildingPlanParser.serialize", false]], "set_default_joints() (in module compas_timber.design)": [[368, "compas_timber.design.set_default_joints", false]], "set_default_values() (compas_timber.connections.tenonmortisejoint method)": [[263, "compas_timber.connections.TenonMortiseJoint.set_default_values", false]], "set_frame_and_outline() (compas_timber.elements.plate method)": [[443, "compas_timber.elements.Plate.set_frame_and_outline", false]], "set_step_depths() (compas_timber.connections.tstepjoint method)": [[245, "compas_timber.connections.TStepJoint.set_step_depths", false]], "set_topologies() (compas_timber.model.timbermodel method)": [[732, "compas_timber.model.TimberModel.set_topologies", false]], "sha256() (compas_timber.connections.ballnodejoint method)": [[23, "compas_timber.connections.BallNodeJoint.sha256", false]], "sha256() (compas_timber.connections.joint method)": [[44, "compas_timber.connections.Joint.sha256", false]], "sha256() (compas_timber.connections.lapjoint method)": [[140, "compas_timber.connections.LapJoint.sha256", false]], "sha256() (compas_timber.connections.lbuttjoint method)": [[63, "compas_timber.connections.LButtJoint.sha256", false]], "sha256() (compas_timber.connections.lfrenchridgelapjoint method)": [[83, "compas_timber.connections.LFrenchRidgeLapJoint.sha256", false]], "sha256() (compas_timber.connections.llapjoint method)": [[102, "compas_timber.connections.LLapJoint.sha256", false]], "sha256() (compas_timber.connections.lmiterjoint method)": [[121, "compas_timber.connections.LMiterJoint.sha256", false]], "sha256() (compas_timber.connections.nulljoint method)": [[157, "compas_timber.connections.NullJoint.sha256", false]], "sha256() (compas_timber.connections.tbirdsmouthjoint method)": [[174, "compas_timber.connections.TBirdsmouthJoint.sha256", false]], "sha256() (compas_timber.connections.tbuttjoint method)": [[191, "compas_timber.connections.TButtJoint.sha256", false]], "sha256() (compas_timber.connections.tdovetailjoint method)": [[209, "compas_timber.connections.TDovetailJoint.sha256", false]], "sha256() (compas_timber.connections.tenonmortisejoint method)": [[264, "compas_timber.connections.TenonMortiseJoint.sha256", false]], "sha256() (compas_timber.connections.tlapjoint method)": [[228, "compas_timber.connections.TLapJoint.sha256", false]], "sha256() (compas_timber.connections.tstepjoint method)": [[246, "compas_timber.connections.TStepJoint.sha256", false]], "sha256() (compas_timber.connections.xlapjoint method)": [[283, "compas_timber.connections.XLapJoint.sha256", false]], "sha256() (compas_timber.connections.ybuttjoint method)": [[304, "compas_timber.connections.YButtJoint.sha256", false]], "sha256() (compas_timber.elements.beam method)": [[391, "compas_timber.elements.Beam.sha256", false]], "sha256() (compas_timber.elements.fastener method)": [[412, "compas_timber.elements.Fastener.sha256", false]], "sha256() (compas_timber.elements.fastenertimberinterface method)": [[424, "compas_timber.elements.FastenerTimberInterface.sha256", false]], "sha256() (compas_timber.elements.plate method)": [[444, "compas_timber.elements.Plate.sha256", false]], "sha256() (compas_timber.elements.timberelement method)": [[464, "compas_timber.elements.TimberElement.sha256", false]], "sha256() (compas_timber.elements.wall method)": [[487, "compas_timber.elements.Wall.sha256", false]], "sha256() (compas_timber.fabrication.btlxprocessing method)": [[505, "compas_timber.fabrication.BTLxProcessing.sha256", false]], "sha256() (compas_timber.fabrication.doublecut method)": [[522, "compas_timber.fabrication.DoubleCut.sha256", false]], "sha256() (compas_timber.fabrication.dovetailmortise method)": [[538, "compas_timber.fabrication.DovetailMortise.sha256", false]], "sha256() (compas_timber.fabrication.dovetailtenon method)": [[554, "compas_timber.fabrication.DovetailTenon.sha256", false]], "sha256() (compas_timber.fabrication.drilling method)": [[568, "compas_timber.fabrication.Drilling.sha256", false]], "sha256() (compas_timber.fabrication.frenchridgelap method)": [[583, "compas_timber.fabrication.FrenchRidgeLap.sha256", false]], "sha256() (compas_timber.fabrication.jackraftercut method)": [[597, "compas_timber.fabrication.JackRafterCut.sha256", false]], "sha256() (compas_timber.fabrication.lap method)": [[610, "compas_timber.fabrication.Lap.sha256", false]], "sha256() (compas_timber.fabrication.mortise method)": [[626, "compas_timber.fabrication.Mortise.sha256", false]], "sha256() (compas_timber.fabrication.slot method)": [[640, "compas_timber.fabrication.Slot.sha256", false]], "sha256() (compas_timber.fabrication.stepjoint method)": [[654, "compas_timber.fabrication.StepJoint.sha256", false]], "sha256() (compas_timber.fabrication.stepjointnotch method)": [[670, "compas_timber.fabrication.StepJointNotch.sha256", false]], "sha256() (compas_timber.fabrication.tenon method)": [[684, "compas_timber.fabrication.Tenon.sha256", false]], "sha256() (compas_timber.model.timbermodel method)": [[733, "compas_timber.model.TimberModel.sha256", false]], "sha256() (compas_timber.planning.buildingplan method)": [[751, "compas_timber.planning.BuildingPlan.sha256", false]], "sha256() (compas_timber.planning.instruction method)": [[763, "compas_timber.planning.Instruction.sha256", false]], "sha256() (compas_timber.planning.lineardimension method)": [[773, "compas_timber.planning.LinearDimension.sha256", false]], "sha256() (compas_timber.planning.model3d method)": [[783, "compas_timber.planning.Model3d.sha256", false]], "sha256() (compas_timber.planning.step method)": [[794, "compas_timber.planning.Step.sha256", false]], "sha256() (compas_timber.planning.text3d method)": [[804, "compas_timber.planning.Text3d.sha256", false]], "side_as_surface() (compas_timber.elements.beam method)": [[392, "compas_timber.elements.Beam.side_as_surface", false]], "simplesequencegenerator (class in compas_timber.planning)": [[788, "compas_timber.planning.SimpleSequenceGenerator", false]], "slot (class in compas_timber.fabrication)": [[632, "compas_timber.fabrication.Slot", false]], "step (class in compas_timber.planning)": [[789, "compas_timber.planning.Step", false]], "stepjoint (class in compas_timber.fabrication)": [[644, "compas_timber.fabrication.StepJoint", false]], "stepjointnotch (class in compas_timber.fabrication)": [[659, "compas_timber.fabrication.StepJointNotch", false]], "stepshapetype (class in compas_timber.fabrication)": [[674, "compas_timber.fabrication.StepShapeType", false]], "surfacemodel (class in compas_timber.design)": [[342, "compas_timber.design.SurfaceModel", false]], "tbirdsmouthjoint (class in compas_timber.connections)": [[161, "compas_timber.connections.TBirdsmouthJoint", false]], "tbuttjoint (class in compas_timber.connections)": [[178, "compas_timber.connections.TButtJoint", false]], "tdovetailjoint (class in compas_timber.connections)": [[195, "compas_timber.connections.TDovetailJoint", false]], "tenon (class in compas_timber.fabrication)": [[675, "compas_timber.fabrication.Tenon", false]], "tenon_volume_from_params_and_beam() (compas_timber.fabrication.stepjoint method)": [[655, "compas_timber.fabrication.StepJoint.tenon_volume_from_params_and_beam", false]], "tenonmortisejoint (class in compas_timber.connections)": [[250, "compas_timber.connections.TenonMortiseJoint", false]], "tenonshapetype (class in compas_timber.fabrication)": [[689, "compas_timber.fabrication.TenonShapeType", false]], "text3d (class in compas_timber.planning)": [[799, "compas_timber.planning.Text3d", false]], "timberelement (class in compas_timber.elements)": [[450, "compas_timber.elements.TimberElement", false]], "timbermodel (class in compas_timber.model)": [[697, "compas_timber.model.TimberModel", false]], "tlapjoint (class in compas_timber.connections)": [[213, "compas_timber.connections.TLapJoint", false]], "to_json() (compas_timber.connections.ballnodejoint method)": [[24, "compas_timber.connections.BallNodeJoint.to_json", false]], "to_json() (compas_timber.connections.joint method)": [[45, "compas_timber.connections.Joint.to_json", false]], "to_json() (compas_timber.connections.lapjoint method)": [[141, "compas_timber.connections.LapJoint.to_json", false]], "to_json() (compas_timber.connections.lbuttjoint method)": [[64, "compas_timber.connections.LButtJoint.to_json", false]], "to_json() (compas_timber.connections.lfrenchridgelapjoint method)": [[84, "compas_timber.connections.LFrenchRidgeLapJoint.to_json", false]], "to_json() (compas_timber.connections.llapjoint method)": [[103, "compas_timber.connections.LLapJoint.to_json", false]], "to_json() (compas_timber.connections.lmiterjoint method)": [[122, "compas_timber.connections.LMiterJoint.to_json", false]], "to_json() (compas_timber.connections.nulljoint method)": [[158, "compas_timber.connections.NullJoint.to_json", false]], "to_json() (compas_timber.connections.tbirdsmouthjoint method)": [[175, "compas_timber.connections.TBirdsmouthJoint.to_json", false]], "to_json() (compas_timber.connections.tbuttjoint method)": [[192, "compas_timber.connections.TButtJoint.to_json", false]], "to_json() (compas_timber.connections.tdovetailjoint method)": [[210, "compas_timber.connections.TDovetailJoint.to_json", false]], "to_json() (compas_timber.connections.tenonmortisejoint method)": [[265, "compas_timber.connections.TenonMortiseJoint.to_json", false]], "to_json() (compas_timber.connections.tlapjoint method)": [[229, "compas_timber.connections.TLapJoint.to_json", false]], "to_json() (compas_timber.connections.tstepjoint method)": [[247, "compas_timber.connections.TStepJoint.to_json", false]], "to_json() (compas_timber.connections.xlapjoint method)": [[284, "compas_timber.connections.XLapJoint.to_json", false]], "to_json() (compas_timber.connections.ybuttjoint method)": [[305, "compas_timber.connections.YButtJoint.to_json", false]], "to_json() (compas_timber.elements.beam method)": [[393, "compas_timber.elements.Beam.to_json", false]], "to_json() (compas_timber.elements.fastener method)": [[413, "compas_timber.elements.Fastener.to_json", false]], "to_json() (compas_timber.elements.fastenertimberinterface method)": [[425, "compas_timber.elements.FastenerTimberInterface.to_json", false]], "to_json() (compas_timber.elements.plate method)": [[445, "compas_timber.elements.Plate.to_json", false]], "to_json() (compas_timber.elements.timberelement method)": [[465, "compas_timber.elements.TimberElement.to_json", false]], "to_json() (compas_timber.elements.wall method)": [[488, "compas_timber.elements.Wall.to_json", false]], "to_json() (compas_timber.fabrication.btlxprocessing method)": [[506, "compas_timber.fabrication.BTLxProcessing.to_json", false]], "to_json() (compas_timber.fabrication.doublecut method)": [[523, "compas_timber.fabrication.DoubleCut.to_json", false]], "to_json() (compas_timber.fabrication.dovetailmortise method)": [[539, "compas_timber.fabrication.DovetailMortise.to_json", false]], "to_json() (compas_timber.fabrication.dovetailtenon method)": [[555, "compas_timber.fabrication.DovetailTenon.to_json", false]], "to_json() (compas_timber.fabrication.drilling method)": [[569, "compas_timber.fabrication.Drilling.to_json", false]], "to_json() (compas_timber.fabrication.frenchridgelap method)": [[584, "compas_timber.fabrication.FrenchRidgeLap.to_json", false]], "to_json() (compas_timber.fabrication.jackraftercut method)": [[598, "compas_timber.fabrication.JackRafterCut.to_json", false]], "to_json() (compas_timber.fabrication.lap method)": [[611, "compas_timber.fabrication.Lap.to_json", false]], "to_json() (compas_timber.fabrication.mortise method)": [[627, "compas_timber.fabrication.Mortise.to_json", false]], "to_json() (compas_timber.fabrication.slot method)": [[641, "compas_timber.fabrication.Slot.to_json", false]], "to_json() (compas_timber.fabrication.stepjoint method)": [[656, "compas_timber.fabrication.StepJoint.to_json", false]], "to_json() (compas_timber.fabrication.stepjointnotch method)": [[671, "compas_timber.fabrication.StepJointNotch.to_json", false]], "to_json() (compas_timber.fabrication.tenon method)": [[685, "compas_timber.fabrication.Tenon.to_json", false]], "to_json() (compas_timber.model.timbermodel method)": [[734, "compas_timber.model.TimberModel.to_json", false]], "to_json() (compas_timber.planning.buildingplan method)": [[752, "compas_timber.planning.BuildingPlan.to_json", false]], "to_json() (compas_timber.planning.instruction method)": [[764, "compas_timber.planning.Instruction.to_json", false]], "to_json() (compas_timber.planning.lineardimension method)": [[774, "compas_timber.planning.LinearDimension.to_json", false]], "to_json() (compas_timber.planning.model3d method)": [[784, "compas_timber.planning.Model3d.to_json", false]], "to_json() (compas_timber.planning.step method)": [[795, "compas_timber.planning.Step.to_json", false]], "to_json() (compas_timber.planning.text3d method)": [[805, "compas_timber.planning.Text3d.to_json", false]], "to_jsonstring() (compas_timber.connections.ballnodejoint method)": [[25, "compas_timber.connections.BallNodeJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.joint method)": [[46, "compas_timber.connections.Joint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lapjoint method)": [[142, "compas_timber.connections.LapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lbuttjoint method)": [[65, "compas_timber.connections.LButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lfrenchridgelapjoint method)": [[85, "compas_timber.connections.LFrenchRidgeLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.llapjoint method)": [[104, "compas_timber.connections.LLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lmiterjoint method)": [[123, "compas_timber.connections.LMiterJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.nulljoint method)": [[159, "compas_timber.connections.NullJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tbirdsmouthjoint method)": [[176, "compas_timber.connections.TBirdsmouthJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tbuttjoint method)": [[193, "compas_timber.connections.TButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tdovetailjoint method)": [[211, "compas_timber.connections.TDovetailJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tenonmortisejoint method)": [[266, "compas_timber.connections.TenonMortiseJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tlapjoint method)": [[230, "compas_timber.connections.TLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tstepjoint method)": [[248, "compas_timber.connections.TStepJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.xlapjoint method)": [[285, "compas_timber.connections.XLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.ybuttjoint method)": [[306, "compas_timber.connections.YButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.beam method)": [[394, "compas_timber.elements.Beam.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.fastener method)": [[414, "compas_timber.elements.Fastener.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.fastenertimberinterface method)": [[426, "compas_timber.elements.FastenerTimberInterface.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.plate method)": [[446, "compas_timber.elements.Plate.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.timberelement method)": [[466, "compas_timber.elements.TimberElement.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.wall method)": [[489, "compas_timber.elements.Wall.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.btlxprocessing method)": [[507, "compas_timber.fabrication.BTLxProcessing.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.doublecut method)": [[524, "compas_timber.fabrication.DoubleCut.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.dovetailmortise method)": [[540, "compas_timber.fabrication.DovetailMortise.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.dovetailtenon method)": [[556, "compas_timber.fabrication.DovetailTenon.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.drilling method)": [[570, "compas_timber.fabrication.Drilling.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.frenchridgelap method)": [[585, "compas_timber.fabrication.FrenchRidgeLap.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.jackraftercut method)": [[599, "compas_timber.fabrication.JackRafterCut.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.lap method)": [[612, "compas_timber.fabrication.Lap.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.mortise method)": [[628, "compas_timber.fabrication.Mortise.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.slot method)": [[642, "compas_timber.fabrication.Slot.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.stepjoint method)": [[657, "compas_timber.fabrication.StepJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.stepjointnotch method)": [[672, "compas_timber.fabrication.StepJointNotch.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.tenon method)": [[686, "compas_timber.fabrication.Tenon.to_jsonstring", false]], "to_jsonstring() (compas_timber.model.timbermodel method)": [[735, "compas_timber.model.TimberModel.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.buildingplan method)": [[753, "compas_timber.planning.BuildingPlan.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.instruction method)": [[765, "compas_timber.planning.Instruction.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.lineardimension method)": [[775, "compas_timber.planning.LinearDimension.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.model3d method)": [[785, "compas_timber.planning.Model3d.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.step method)": [[796, "compas_timber.planning.Step.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.text3d method)": [[806, "compas_timber.planning.Text3d.to_jsonstring", false]], "topologyrule (class in compas_timber.design)": [[360, "compas_timber.design.TopologyRule", false]], "tostring() (compas_timber.connections.ballnodejoint method)": [[11, "compas_timber.connections.BallNodeJoint.ToString", false]], "tostring() (compas_timber.connections.joint method)": [[32, "compas_timber.connections.Joint.ToString", false]], "tostring() (compas_timber.connections.lapjoint method)": [[126, "compas_timber.connections.LapJoint.ToString", false]], "tostring() (compas_timber.connections.lbuttjoint method)": [[51, "compas_timber.connections.LButtJoint.ToString", false]], "tostring() (compas_timber.connections.lfrenchridgelapjoint method)": [[69, "compas_timber.connections.LFrenchRidgeLapJoint.ToString", false]], "tostring() (compas_timber.connections.llapjoint method)": [[88, "compas_timber.connections.LLapJoint.ToString", false]], "tostring() (compas_timber.connections.lmiterjoint method)": [[107, "compas_timber.connections.LMiterJoint.ToString", false]], "tostring() (compas_timber.connections.nulljoint method)": [[145, "compas_timber.connections.NullJoint.ToString", false]], "tostring() (compas_timber.connections.tbirdsmouthjoint method)": [[162, "compas_timber.connections.TBirdsmouthJoint.ToString", false]], "tostring() (compas_timber.connections.tbuttjoint method)": [[179, "compas_timber.connections.TButtJoint.ToString", false]], "tostring() (compas_timber.connections.tdovetailjoint method)": [[196, "compas_timber.connections.TDovetailJoint.ToString", false]], "tostring() (compas_timber.connections.tenonmortisejoint method)": [[251, "compas_timber.connections.TenonMortiseJoint.ToString", false]], "tostring() (compas_timber.connections.tlapjoint method)": [[214, "compas_timber.connections.TLapJoint.ToString", false]], "tostring() (compas_timber.connections.tstepjoint method)": [[233, "compas_timber.connections.TStepJoint.ToString", false]], "tostring() (compas_timber.connections.xlapjoint method)": [[269, "compas_timber.connections.XLapJoint.ToString", false]], "tostring() (compas_timber.connections.ybuttjoint method)": [[288, "compas_timber.connections.YButtJoint.ToString", false]], "tostring() (compas_timber.design.categoryrule method)": [[310, "compas_timber.design.CategoryRule.ToString", false]], "tostring() (compas_timber.design.debuginfomation method)": [[318, "compas_timber.design.DebugInfomation.ToString", false]], "tostring() (compas_timber.design.directrule method)": [[323, "compas_timber.design.DirectRule.ToString", false]], "tostring() (compas_timber.design.featuredefinition method)": [[331, "compas_timber.design.FeatureDefinition.ToString", false]], "tostring() (compas_timber.design.jointdefinition method)": [[333, "compas_timber.design.JointDefinition.ToString", false]], "tostring() (compas_timber.design.topologyrule method)": [[361, "compas_timber.design.TopologyRule.ToString", false]], "tostring() (compas_timber.elements.beam method)": [[370, "compas_timber.elements.Beam.ToString", false]], "tostring() (compas_timber.elements.fastener method)": [[399, "compas_timber.elements.Fastener.ToString", false]], "tostring() (compas_timber.elements.fastenertimberinterface method)": [[419, "compas_timber.elements.FastenerTimberInterface.ToString", false]], "tostring() (compas_timber.elements.plate method)": [[429, "compas_timber.elements.Plate.ToString", false]], "tostring() (compas_timber.elements.timberelement method)": [[451, "compas_timber.elements.TimberElement.ToString", false]], "tostring() (compas_timber.elements.wall method)": [[471, "compas_timber.elements.Wall.ToString", false]], "tostring() (compas_timber.fabrication.btlxprocessing method)": [[500, "compas_timber.fabrication.BTLxProcessing.ToString", false]], "tostring() (compas_timber.fabrication.doublecut method)": [[513, "compas_timber.fabrication.DoubleCut.ToString", false]], "tostring() (compas_timber.fabrication.dovetailmortise method)": [[527, "compas_timber.fabrication.DovetailMortise.ToString", false]], "tostring() (compas_timber.fabrication.dovetailtenon method)": [[543, "compas_timber.fabrication.DovetailTenon.ToString", false]], "tostring() (compas_timber.fabrication.drilling method)": [[559, "compas_timber.fabrication.Drilling.ToString", false]], "tostring() (compas_timber.fabrication.frenchridgelap method)": [[574, "compas_timber.fabrication.FrenchRidgeLap.ToString", false]], "tostring() (compas_timber.fabrication.jackraftercut method)": [[588, "compas_timber.fabrication.JackRafterCut.ToString", false]], "tostring() (compas_timber.fabrication.lap method)": [[602, "compas_timber.fabrication.Lap.ToString", false]], "tostring() (compas_timber.fabrication.mortise method)": [[618, "compas_timber.fabrication.Mortise.ToString", false]], "tostring() (compas_timber.fabrication.slot method)": [[633, "compas_timber.fabrication.Slot.ToString", false]], "tostring() (compas_timber.fabrication.stepjoint method)": [[645, "compas_timber.fabrication.StepJoint.ToString", false]], "tostring() (compas_timber.fabrication.stepjointnotch method)": [[660, "compas_timber.fabrication.StepJointNotch.ToString", false]], "tostring() (compas_timber.fabrication.tenon method)": [[676, "compas_timber.fabrication.Tenon.ToString", false]], "tostring() (compas_timber.model.timbermodel method)": [[698, "compas_timber.model.TimberModel.ToString", false]], "tostring() (compas_timber.planning.buildingplan method)": [[746, "compas_timber.planning.BuildingPlan.ToString", false]], "tostring() (compas_timber.planning.instruction method)": [[759, "compas_timber.planning.Instruction.ToString", false]], "tostring() (compas_timber.planning.lineardimension method)": [[769, "compas_timber.planning.LinearDimension.ToString", false]], "tostring() (compas_timber.planning.model3d method)": [[779, "compas_timber.planning.Model3d.ToString", false]], "tostring() (compas_timber.planning.step method)": [[790, "compas_timber.planning.Step.ToString", false]], "tostring() (compas_timber.planning.text3d method)": [[800, "compas_timber.planning.Text3d.ToString", false]], "transform() (compas_timber.elements.beam method)": [[395, "compas_timber.elements.Beam.transform", false]], "transform() (compas_timber.elements.fastener method)": [[415, "compas_timber.elements.Fastener.transform", false]], "transform() (compas_timber.elements.plate method)": [[447, "compas_timber.elements.Plate.transform", false]], "transform() (compas_timber.elements.timberelement method)": [[467, "compas_timber.elements.TimberElement.transform", false]], "transform() (compas_timber.elements.wall method)": [[490, "compas_timber.elements.Wall.transform", false]], "transform() (compas_timber.model.timbermodel method)": [[736, "compas_timber.model.TimberModel.transform", false]], "transform() (compas_timber.planning.instruction method)": [[766, "compas_timber.planning.Instruction.transform", false]], "transform() (compas_timber.planning.lineardimension method)": [[776, "compas_timber.planning.LinearDimension.transform", false]], "transform() (compas_timber.planning.model3d method)": [[786, "compas_timber.planning.Model3d.transform", false]], "transform() (compas_timber.planning.step method)": [[797, "compas_timber.planning.Step.transform", false]], "transform() (compas_timber.planning.text3d method)": [[807, "compas_timber.planning.Text3d.transform", false]], "transform_numpy() (compas_timber.model.timbermodel method)": [[737, "compas_timber.model.TimberModel.transform_numpy", false]], "transformed() (compas_timber.elements.beam method)": [[396, "compas_timber.elements.Beam.transformed", false]], "transformed() (compas_timber.elements.fastener method)": [[416, "compas_timber.elements.Fastener.transformed", false]], "transformed() (compas_timber.elements.plate method)": [[448, "compas_timber.elements.Plate.transformed", false]], "transformed() (compas_timber.elements.timberelement method)": [[468, "compas_timber.elements.TimberElement.transformed", false]], "transformed() (compas_timber.elements.wall method)": [[491, "compas_timber.elements.Wall.transformed", false]], "transformed() (compas_timber.model.timbermodel method)": [[738, "compas_timber.model.TimberModel.transformed", false]], "transformed_numpy() (compas_timber.model.timbermodel method)": [[739, "compas_timber.model.TimberModel.transformed_numpy", false]], "translate() (compas_timber.model.timbermodel method)": [[740, "compas_timber.model.TimberModel.translate", false]], "translated() (compas_timber.model.timbermodel method)": [[741, "compas_timber.model.TimberModel.translated", false]], "trim_jack_studs() (compas_timber.design.surfacemodel method)": [[357, "compas_timber.design.SurfaceModel.trim_jack_studs", false]], "trim_king_studs() (compas_timber.design.surfacemodel method)": [[358, "compas_timber.design.SurfaceModel.trim_king_studs", false]], "trim_studs() (compas_timber.design.surfacemodel method)": [[359, "compas_timber.design.SurfaceModel.trim_studs", false]], "tstepjoint (class in compas_timber.connections)": [[232, "compas_timber.connections.TStepJoint", false]], "update_beam_roles() (compas_timber.connections.lbuttjoint method)": [[66, "compas_timber.connections.LButtJoint.update_beam_roles", false]], "validate_data() (compas_timber.connections.ballnodejoint class method)": [[26, "compas_timber.connections.BallNodeJoint.validate_data", false]], "validate_data() (compas_timber.connections.joint class method)": [[47, "compas_timber.connections.Joint.validate_data", false]], "validate_data() (compas_timber.connections.lapjoint class method)": [[143, "compas_timber.connections.LapJoint.validate_data", false]], "validate_data() (compas_timber.connections.lbuttjoint class method)": [[67, "compas_timber.connections.LButtJoint.validate_data", false]], "validate_data() (compas_timber.connections.lfrenchridgelapjoint class method)": [[86, "compas_timber.connections.LFrenchRidgeLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.llapjoint class method)": [[105, "compas_timber.connections.LLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.lmiterjoint class method)": [[124, "compas_timber.connections.LMiterJoint.validate_data", false]], "validate_data() (compas_timber.connections.nulljoint class method)": [[160, "compas_timber.connections.NullJoint.validate_data", false]], "validate_data() (compas_timber.connections.tbirdsmouthjoint class method)": [[177, "compas_timber.connections.TBirdsmouthJoint.validate_data", false]], "validate_data() (compas_timber.connections.tbuttjoint class method)": [[194, "compas_timber.connections.TButtJoint.validate_data", false]], "validate_data() (compas_timber.connections.tdovetailjoint class method)": [[212, "compas_timber.connections.TDovetailJoint.validate_data", false]], "validate_data() (compas_timber.connections.tenonmortisejoint class method)": [[267, "compas_timber.connections.TenonMortiseJoint.validate_data", false]], "validate_data() (compas_timber.connections.tlapjoint class method)": [[231, "compas_timber.connections.TLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.tstepjoint class method)": [[249, "compas_timber.connections.TStepJoint.validate_data", false]], "validate_data() (compas_timber.connections.xlapjoint class method)": [[286, "compas_timber.connections.XLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.ybuttjoint class method)": [[307, "compas_timber.connections.YButtJoint.validate_data", false]], "validate_data() (compas_timber.elements.beam class method)": [[397, "compas_timber.elements.Beam.validate_data", false]], "validate_data() (compas_timber.elements.fastener class method)": [[417, "compas_timber.elements.Fastener.validate_data", false]], "validate_data() (compas_timber.elements.fastenertimberinterface class method)": [[427, "compas_timber.elements.FastenerTimberInterface.validate_data", false]], "validate_data() (compas_timber.elements.plate class method)": [[449, "compas_timber.elements.Plate.validate_data", false]], "validate_data() (compas_timber.elements.timberelement class method)": [[469, "compas_timber.elements.TimberElement.validate_data", false]], "validate_data() (compas_timber.elements.wall class method)": [[492, "compas_timber.elements.Wall.validate_data", false]], "validate_data() (compas_timber.fabrication.btlxprocessing class method)": [[508, "compas_timber.fabrication.BTLxProcessing.validate_data", false]], "validate_data() (compas_timber.fabrication.doublecut class method)": [[525, "compas_timber.fabrication.DoubleCut.validate_data", false]], "validate_data() (compas_timber.fabrication.dovetailmortise class method)": [[541, "compas_timber.fabrication.DovetailMortise.validate_data", false]], "validate_data() (compas_timber.fabrication.dovetailtenon class method)": [[557, "compas_timber.fabrication.DovetailTenon.validate_data", false]], "validate_data() (compas_timber.fabrication.drilling class method)": [[571, "compas_timber.fabrication.Drilling.validate_data", false]], "validate_data() (compas_timber.fabrication.frenchridgelap class method)": [[586, "compas_timber.fabrication.FrenchRidgeLap.validate_data", false]], "validate_data() (compas_timber.fabrication.jackraftercut class method)": [[600, "compas_timber.fabrication.JackRafterCut.validate_data", false]], "validate_data() (compas_timber.fabrication.lap class method)": [[613, "compas_timber.fabrication.Lap.validate_data", false]], "validate_data() (compas_timber.fabrication.mortise class method)": [[629, "compas_timber.fabrication.Mortise.validate_data", false]], "validate_data() (compas_timber.fabrication.slot class method)": [[643, "compas_timber.fabrication.Slot.validate_data", false]], "validate_data() (compas_timber.fabrication.stepjoint class method)": [[658, "compas_timber.fabrication.StepJoint.validate_data", false]], "validate_data() (compas_timber.fabrication.stepjointnotch class method)": [[673, "compas_timber.fabrication.StepJointNotch.validate_data", false]], "validate_data() (compas_timber.fabrication.tenon class method)": [[687, "compas_timber.fabrication.Tenon.validate_data", false]], "validate_data() (compas_timber.model.timbermodel class method)": [[742, "compas_timber.model.TimberModel.validate_data", false]], "validate_data() (compas_timber.planning.buildingplan class method)": [[754, "compas_timber.planning.BuildingPlan.validate_data", false]], "validate_data() (compas_timber.planning.instruction class method)": [[767, "compas_timber.planning.Instruction.validate_data", false]], "validate_data() (compas_timber.planning.lineardimension class method)": [[777, "compas_timber.planning.LinearDimension.validate_data", false]], "validate_data() (compas_timber.planning.model3d class method)": [[787, "compas_timber.planning.Model3d.validate_data", false]], "validate_data() (compas_timber.planning.step class method)": [[798, "compas_timber.planning.Step.validate_data", false]], "validate_data() (compas_timber.planning.text3d class method)": [[808, "compas_timber.planning.Text3d.validate_data", false]], "volume_from_params_and_beam() (compas_timber.fabrication.lap method)": [[614, "compas_timber.fabrication.Lap.volume_from_params_and_beam", false]], "volume_from_params_and_beam() (compas_timber.fabrication.mortise method)": [[630, "compas_timber.fabrication.Mortise.volume_from_params_and_beam", false]], "volume_from_params_and_beam() (compas_timber.fabrication.tenon method)": [[688, "compas_timber.fabrication.Tenon.volume_from_params_and_beam", false]], "wall (class in compas_timber.elements)": [[470, "compas_timber.elements.Wall", false]], "write() (compas_timber.fabrication.btlxwriter method)": [[511, "compas_timber.fabrication.BTLxWriter.write", false]], "xlapjoint (class in compas_timber.connections)": [[268, "compas_timber.connections.XLapJoint", false]], "ybuttjoint (class in compas_timber.connections)": [[287, "compas_timber.connections.YButtJoint", false]]}, "objects": {"compas_timber.connections": [[10, 0, 1, "", "BallNodeJoint"], [27, 0, 1, "", "ConnectionSolver"], [31, 0, 1, "", "Joint"], [48, 0, 1, "", "JointTopology"], [50, 0, 1, "", "LButtJoint"], [68, 0, 1, "", "LFrenchRidgeLapJoint"], [87, 0, 1, "", "LLapJoint"], [106, 0, 1, "", "LMiterJoint"], [125, 0, 1, "", "LapJoint"], [144, 0, 1, "", "NullJoint"], [161, 0, 1, "", "TBirdsmouthJoint"], [178, 0, 1, "", "TButtJoint"], [195, 0, 1, "", "TDovetailJoint"], [213, 0, 1, "", "TLapJoint"], [232, 0, 1, "", "TStepJoint"], [250, 0, 1, "", "TenonMortiseJoint"], [268, 0, 1, "", "XLapJoint"], [287, 0, 1, "", "YButtJoint"], [308, 2, 1, "", "find_neighboring_elements"]], "compas_timber.connections.BallNodeJoint": [[11, 1, 1, "", "ToString"], [12, 1, 1, "", "add_extensions"], [13, 1, 1, "", "add_features"], [14, 1, 1, "", "check_elements_compatibility"], [15, 1, 1, "", "copy"], [16, 1, 1, "", "create"], [17, 1, 1, "", "element_count_complies"], [18, 1, 1, "", "from_json"], [19, 1, 1, "", "from_jsonstring"], [20, 1, 1, "", "get_face_most_ortho_to_beam"], [21, 1, 1, "", "get_face_most_towards_beam"], [22, 1, 1, "", "restore_beams_from_keys"], [23, 1, 1, "", "sha256"], [24, 1, 1, "", "to_json"], [25, 1, 1, "", "to_jsonstring"], [26, 1, 1, "", "validate_data"]], "compas_timber.connections.ConnectionSolver": [[28, 1, 1, "", "find_intersecting_pairs"], [29, 1, 1, "", "find_topology"], [30, 1, 1, "", "find_wall_wall_topology"]], "compas_timber.connections.Joint": [[32, 1, 1, "", "ToString"], [33, 1, 1, "", "add_extensions"], [34, 1, 1, "", "add_features"], [35, 1, 1, "", "check_elements_compatibility"], [36, 1, 1, "", "copy"], [37, 1, 1, "", "create"], [38, 1, 1, "", "element_count_complies"], [39, 1, 1, "", "from_json"], [40, 1, 1, "", "from_jsonstring"], [41, 1, 1, "", "get_face_most_ortho_to_beam"], [42, 1, 1, "", "get_face_most_towards_beam"], [43, 1, 1, "", "restore_beams_from_keys"], [44, 1, 1, "", "sha256"], [45, 1, 1, "", "to_json"], [46, 1, 1, "", "to_jsonstring"], [47, 1, 1, "", "validate_data"]], "compas_timber.connections.JointTopology": [[49, 1, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[51, 1, 1, "", "ToString"], [52, 1, 1, "", "add_extensions"], [53, 1, 1, "", "add_features"], [54, 1, 1, "", "check_elements_compatibility"], [55, 1, 1, "", "copy"], [56, 1, 1, "", "create"], [57, 1, 1, "", "element_count_complies"], [58, 1, 1, "", "from_json"], [59, 1, 1, "", "from_jsonstring"], [60, 1, 1, "", "get_face_most_ortho_to_beam"], [61, 1, 1, "", "get_face_most_towards_beam"], [62, 1, 1, "", "restore_beams_from_keys"], [63, 1, 1, "", "sha256"], [64, 1, 1, "", "to_json"], [65, 1, 1, "", "to_jsonstring"], [66, 1, 1, "", "update_beam_roles"], [67, 1, 1, "", "validate_data"]], "compas_timber.connections.LFrenchRidgeLapJoint": [[69, 1, 1, "", "ToString"], [70, 1, 1, "", "add_extensions"], [71, 1, 1, "", "add_features"], [72, 1, 1, "", "check_elements_compatibility"], [73, 1, 1, "", "copy"], [74, 1, 1, "", "create"], [75, 1, 1, "", "element_count_complies"], [76, 1, 1, "", "from_json"], [77, 1, 1, "", "from_jsonstring"], [78, 1, 1, "", "get_cross_cutting_frame"], [79, 1, 1, "", "get_face_most_ortho_to_beam"], [80, 1, 1, "", "get_face_most_towards_beam"], [81, 1, 1, "", "get_main_cutting_frame"], [82, 1, 1, "", "restore_beams_from_keys"], [83, 1, 1, "", "sha256"], [84, 1, 1, "", "to_json"], [85, 1, 1, "", "to_jsonstring"], [86, 1, 1, "", "validate_data"]], "compas_timber.connections.LLapJoint": [[88, 1, 1, "", "ToString"], [89, 1, 1, "", "add_extensions"], [90, 1, 1, "", "add_features"], [91, 1, 1, "", "check_elements_compatibility"], [92, 1, 1, "", "copy"], [93, 1, 1, "", "create"], [94, 1, 1, "", "element_count_complies"], [95, 1, 1, "", "from_json"], [96, 1, 1, "", "from_jsonstring"], [97, 1, 1, "", "get_cross_cutting_frame"], [98, 1, 1, "", "get_face_most_ortho_to_beam"], [99, 1, 1, "", "get_face_most_towards_beam"], [100, 1, 1, "", "get_main_cutting_frame"], [101, 1, 1, "", "restore_beams_from_keys"], [102, 1, 1, "", "sha256"], [103, 1, 1, "", "to_json"], [104, 1, 1, "", "to_jsonstring"], [105, 1, 1, "", "validate_data"]], "compas_timber.connections.LMiterJoint": [[107, 1, 1, "", "ToString"], [108, 1, 1, "", "add_extensions"], [109, 1, 1, "", "add_features"], [110, 1, 1, "", "check_elements_compatibility"], [111, 1, 1, "", "copy"], [112, 1, 1, "", "create"], [113, 1, 1, "", "element_count_complies"], [114, 1, 1, "", "from_json"], [115, 1, 1, "", "from_jsonstring"], [116, 1, 1, "", "get_cutoff_plane"], [117, 1, 1, "", "get_cutting_planes"], [118, 1, 1, "", "get_face_most_ortho_to_beam"], [119, 1, 1, "", "get_face_most_towards_beam"], [120, 1, 1, "", "restore_beams_from_keys"], [121, 1, 1, "", "sha256"], [122, 1, 1, "", "to_json"], [123, 1, 1, "", "to_jsonstring"], [124, 1, 1, "", "validate_data"]], "compas_timber.connections.LapJoint": [[126, 1, 1, "", "ToString"], [127, 1, 1, "", "add_extensions"], [128, 1, 1, "", "add_features"], [129, 1, 1, "", "check_elements_compatibility"], [130, 1, 1, "", "copy"], [131, 1, 1, "", "create"], [132, 1, 1, "", "element_count_complies"], [133, 1, 1, "", "from_json"], [134, 1, 1, "", "from_jsonstring"], [135, 1, 1, "", "get_cross_cutting_frame"], [136, 1, 1, "", "get_face_most_ortho_to_beam"], [137, 1, 1, "", "get_face_most_towards_beam"], [138, 1, 1, "", "get_main_cutting_frame"], [139, 1, 1, "", "restore_beams_from_keys"], [140, 1, 1, "", "sha256"], [141, 1, 1, "", "to_json"], [142, 1, 1, "", "to_jsonstring"], [143, 1, 1, "", "validate_data"]], "compas_timber.connections.NullJoint": [[145, 1, 1, "", "ToString"], [146, 1, 1, "", "add_extensions"], [147, 1, 1, "", "add_features"], [148, 1, 1, "", "check_elements_compatibility"], [149, 1, 1, "", "copy"], [150, 1, 1, "", "create"], [151, 1, 1, "", "element_count_complies"], [152, 1, 1, "", "from_json"], [153, 1, 1, "", "from_jsonstring"], [154, 1, 1, "", "get_face_most_ortho_to_beam"], [155, 1, 1, "", "get_face_most_towards_beam"], [156, 1, 1, "", "restore_beams_from_keys"], [157, 1, 1, "", "sha256"], [158, 1, 1, "", "to_json"], [159, 1, 1, "", "to_jsonstring"], [160, 1, 1, "", "validate_data"]], "compas_timber.connections.TBirdsmouthJoint": [[162, 1, 1, "", "ToString"], [163, 1, 1, "", "add_extensions"], [164, 1, 1, "", "add_features"], [165, 1, 1, "", "check_elements_compatibility"], [166, 1, 1, "", "copy"], [167, 1, 1, "", "create"], [168, 1, 1, "", "element_count_complies"], [169, 1, 1, "", "from_json"], [170, 1, 1, "", "from_jsonstring"], [171, 1, 1, "", "get_face_most_ortho_to_beam"], [172, 1, 1, "", "get_face_most_towards_beam"], [173, 1, 1, "", "restore_beams_from_keys"], [174, 1, 1, "", "sha256"], [175, 1, 1, "", "to_json"], [176, 1, 1, "", "to_jsonstring"], [177, 1, 1, "", "validate_data"]], "compas_timber.connections.TButtJoint": [[179, 1, 1, "", "ToString"], [180, 1, 1, "", "add_extensions"], [181, 1, 1, "", "add_features"], [182, 1, 1, "", "check_elements_compatibility"], [183, 1, 1, "", "copy"], [184, 1, 1, "", "create"], [185, 1, 1, "", "element_count_complies"], [186, 1, 1, "", "from_json"], [187, 1, 1, "", "from_jsonstring"], [188, 1, 1, "", "get_face_most_ortho_to_beam"], [189, 1, 1, "", "get_face_most_towards_beam"], [190, 1, 1, "", "restore_beams_from_keys"], [191, 1, 1, "", "sha256"], [192, 1, 1, "", "to_json"], [193, 1, 1, "", "to_jsonstring"], [194, 1, 1, "", "validate_data"]], "compas_timber.connections.TDovetailJoint": [[196, 1, 1, "", "ToString"], [197, 1, 1, "", "add_extensions"], [198, 1, 1, "", "add_features"], [199, 1, 1, "", "check_elements_compatibility"], [200, 1, 1, "", "copy"], [201, 1, 1, "", "create"], [202, 1, 1, "", "define_dovetail_tool"], [203, 1, 1, "", "element_count_complies"], [204, 1, 1, "", "from_json"], [205, 1, 1, "", "from_jsonstring"], [206, 1, 1, "", "get_face_most_ortho_to_beam"], [207, 1, 1, "", "get_face_most_towards_beam"], [208, 1, 1, "", "restore_beams_from_keys"], [209, 1, 1, "", "sha256"], [210, 1, 1, "", "to_json"], [211, 1, 1, "", "to_jsonstring"], [212, 1, 1, "", "validate_data"]], "compas_timber.connections.TLapJoint": [[214, 1, 1, "", "ToString"], [215, 1, 1, "", "add_extensions"], [216, 1, 1, "", "add_features"], [217, 1, 1, "", "check_elements_compatibility"], [218, 1, 1, "", "copy"], [219, 1, 1, "", "create"], [220, 1, 1, "", "element_count_complies"], [221, 1, 1, "", "from_json"], [222, 1, 1, "", "from_jsonstring"], [223, 1, 1, "", "get_cross_cutting_frame"], [224, 1, 1, "", "get_face_most_ortho_to_beam"], [225, 1, 1, "", "get_face_most_towards_beam"], [226, 1, 1, "", "get_main_cutting_frame"], [227, 1, 1, "", "restore_beams_from_keys"], [228, 1, 1, "", "sha256"], [229, 1, 1, "", "to_json"], [230, 1, 1, "", "to_jsonstring"], [231, 1, 1, "", "validate_data"]], "compas_timber.connections.TStepJoint": [[233, 1, 1, "", "ToString"], [234, 1, 1, "", "add_extensions"], [235, 1, 1, "", "add_features"], [236, 1, 1, "", "check_elements_compatibility"], [237, 1, 1, "", "copy"], [238, 1, 1, "", "create"], [239, 1, 1, "", "element_count_complies"], [240, 1, 1, "", "from_json"], [241, 1, 1, "", "from_jsonstring"], [242, 1, 1, "", "get_face_most_ortho_to_beam"], [243, 1, 1, "", "get_face_most_towards_beam"], [244, 1, 1, "", "restore_beams_from_keys"], [245, 1, 1, "", "set_step_depths"], [246, 1, 1, "", "sha256"], [247, 1, 1, "", "to_json"], [248, 1, 1, "", "to_jsonstring"], [249, 1, 1, "", "validate_data"]], "compas_timber.connections.TenonMortiseJoint": [[251, 1, 1, "", "ToString"], [252, 1, 1, "", "add_extensions"], [253, 1, 1, "", "add_features"], [254, 1, 1, "", "check_elements_compatibility"], [255, 1, 1, "", "copy"], [256, 1, 1, "", "create"], [257, 1, 1, "", "element_count_complies"], [258, 1, 1, "", "from_json"], [259, 1, 1, "", "from_jsonstring"], [260, 1, 1, "", "get_face_most_ortho_to_beam"], [261, 1, 1, "", "get_face_most_towards_beam"], [262, 1, 1, "", "restore_beams_from_keys"], [263, 1, 1, "", "set_default_values"], [264, 1, 1, "", "sha256"], [265, 1, 1, "", "to_json"], [266, 1, 1, "", "to_jsonstring"], [267, 1, 1, "", "validate_data"]], "compas_timber.connections.XLapJoint": [[269, 1, 1, "", "ToString"], [270, 1, 1, "", "add_extensions"], [271, 1, 1, "", "add_features"], [272, 1, 1, "", "check_elements_compatibility"], [273, 1, 1, "", "copy"], [274, 1, 1, "", "create"], [275, 1, 1, "", "element_count_complies"], [276, 1, 1, "", "from_json"], [277, 1, 1, "", "from_jsonstring"], [278, 1, 1, "", "get_cross_cutting_frame"], [279, 1, 1, "", "get_face_most_ortho_to_beam"], [280, 1, 1, "", "get_face_most_towards_beam"], [281, 1, 1, "", "get_main_cutting_frame"], [282, 1, 1, "", "restore_beams_from_keys"], [283, 1, 1, "", "sha256"], [284, 1, 1, "", "to_json"], [285, 1, 1, "", "to_jsonstring"], [286, 1, 1, "", "validate_data"]], "compas_timber.connections.YButtJoint": [[288, 1, 1, "", "ToString"], [289, 1, 1, "", "add_extensions"], [290, 1, 1, "", "add_features"], [291, 1, 1, "", "check_beam_compatibility"], [292, 1, 1, "", "check_elements_compatibility"], [293, 1, 1, "", "copy"], [294, 1, 1, "", "create"], [295, 1, 1, "", "cross_beam_ref_side_index"], [296, 1, 1, "", "element_count_complies"], [297, 1, 1, "", "from_json"], [298, 1, 1, "", "from_jsonstring"], [299, 1, 1, "", "get_face_most_ortho_to_beam"], [300, 1, 1, "", "get_face_most_towards_beam"], [301, 1, 1, "", "get_miter_planes"], [302, 1, 1, "", "main_beam_ref_side_index"], [303, 1, 1, "", "restore_beams_from_keys"], [304, 1, 1, "", "sha256"], [305, 1, 1, "", "to_json"], [306, 1, 1, "", "to_jsonstring"], [307, 1, 1, "", "validate_data"]], "compas_timber.design": [[309, 0, 1, "", "CategoryRule"], [317, 0, 1, "", "DebugInfomation"], [322, 0, 1, "", "DirectRule"], [330, 0, 1, "", "FeatureDefinition"], [332, 0, 1, "", "JointDefinition"], [336, 0, 1, "", "JointRule"], [342, 0, 1, "", "SurfaceModel"], [360, 0, 1, "", "TopologyRule"], [367, 2, 1, "", "guess_joint_topology_2beams"], [368, 2, 1, "", "set_default_joints"]], "compas_timber.design.CategoryRule": [[310, 1, 1, "", "ToString"], [311, 1, 1, "", "comply"], [312, 1, 1, "", "get_category_rules"], [313, 1, 1, "", "get_direct_rules"], [314, 1, 1, "", "get_topology_rules"], [315, 1, 1, "", "joints_from_beams_and_rules"], [316, 1, 1, "", "reorder"]], "compas_timber.design.DebugInfomation": [[318, 1, 1, "", "ToString"], [319, 1, 1, "", "add_fastener_error"], [320, 1, 1, "", "add_feature_error"], [321, 1, 1, "", "add_joint_error"]], "compas_timber.design.DirectRule": [[323, 1, 1, "", "ToString"], [324, 1, 1, "", "comply"], [325, 1, 1, "", "contains"], [326, 1, 1, "", "get_category_rules"], [327, 1, 1, "", "get_direct_rules"], [328, 1, 1, "", "get_topology_rules"], [329, 1, 1, "", "joints_from_beams_and_rules"]], "compas_timber.design.FeatureDefinition": [[331, 1, 1, "", "ToString"]], "compas_timber.design.JointDefinition": [[333, 1, 1, "", "ToString"], [334, 1, 1, "", "is_identical"], [335, 1, 1, "", "match"]], "compas_timber.design.JointRule": [[337, 1, 1, "", "comply"], [338, 1, 1, "", "get_category_rules"], [339, 1, 1, "", "get_direct_rules"], [340, 1, 1, "", "get_topology_rules"], [341, 1, 1, "", "joints_from_beams_and_rules"]], "compas_timber.design.SurfaceModel": [[343, 1, 1, "", "beam_category_names"], [344, 1, 1, "", "create_model"], [345, 1, 1, "", "cull_overlaps"], [346, 1, 1, "", "distance_between_elements"], [347, 1, 1, "", "generate_frame"], [348, 1, 1, "", "generate_perimeter_beams"], [349, 1, 1, "", "generate_plates"], [350, 1, 1, "", "generate_stud_lines"], [351, 1, 1, "", "generate_studs"], [352, 1, 1, "", "generate_windows"], [353, 1, 1, "", "get_beam_intersections"], [354, 1, 1, "", "get_interior_segment_indices"], [355, 1, 1, "", "offset_elements"], [356, 1, 1, "", "parse_loops"], [357, 1, 1, "", "trim_jack_studs"], [358, 1, 1, "", "trim_king_studs"], [359, 1, 1, "", "trim_studs"]], "compas_timber.design.TopologyRule": [[361, 1, 1, "", "ToString"], [362, 1, 1, "", "comply"], [363, 1, 1, "", "get_category_rules"], [364, 1, 1, "", "get_direct_rules"], [365, 1, 1, "", "get_topology_rules"], [366, 1, 1, "", "joints_from_beams_and_rules"]], "compas_timber.elements": [[369, 0, 1, "", "Beam"], [398, 0, 1, "", "Fastener"], [418, 0, 1, "", "FastenerTimberInterface"], [428, 0, 1, "", "Plate"], [450, 0, 1, "", "TimberElement"], [470, 0, 1, "", "Wall"]], "compas_timber.elements.Beam": [[370, 1, 1, "", "ToString"], [371, 1, 1, "", "add_blank_extension"], [372, 1, 1, "", "add_feature"], [373, 1, 1, "", "add_features"], [374, 1, 1, "", "compute_aabb"], [375, 1, 1, "", "compute_collision_mesh"], [376, 1, 1, "", "compute_geometry"], [377, 1, 1, "", "compute_obb"], [378, 1, 1, "", "compute_worldtransformation"], [379, 1, 1, "", "copy"], [380, 1, 1, "", "endpoint_closest_to_point"], [381, 1, 1, "", "extension_to_plane"], [382, 1, 1, "", "from_centerline"], [383, 1, 1, "", "from_endpoints"], [384, 1, 1, "", "from_json"], [385, 1, 1, "", "from_jsonstring"], [386, 1, 1, "", "get_dimensions_relative_to_side"], [387, 1, 1, "", "opposing_side_index"], [388, 1, 1, "", "remove_blank_extension"], [389, 1, 1, "", "remove_features"], [390, 1, 1, "", "reset"], [391, 1, 1, "", "sha256"], [392, 1, 1, "", "side_as_surface"], [393, 1, 1, "", "to_json"], [394, 1, 1, "", "to_jsonstring"], [395, 1, 1, "", "transform"], [396, 1, 1, "", "transformed"], [397, 1, 1, "", "validate_data"]], "compas_timber.elements.Fastener": [[399, 1, 1, "", "ToString"], [400, 1, 1, "", "add_feature"], [401, 1, 1, "", "compute_aabb"], [402, 1, 1, "", "compute_collision_mesh"], [403, 1, 1, "", "compute_geometry"], [404, 1, 1, "", "compute_obb"], [405, 1, 1, "", "compute_worldtransformation"], [406, 1, 1, "", "copy"], [407, 1, 1, "", "from_json"], [408, 1, 1, "", "from_jsonstring"], [409, 1, 1, "", "remove_blank_extension"], [410, 1, 1, "", "remove_features"], [411, 1, 1, "", "reset"], [412, 1, 1, "", "sha256"], [413, 1, 1, "", "to_json"], [414, 1, 1, "", "to_jsonstring"], [415, 1, 1, "", "transform"], [416, 1, 1, "", "transformed"], [417, 1, 1, "", "validate_data"]], "compas_timber.elements.FastenerTimberInterface": [[419, 1, 1, "", "ToString"], [420, 1, 1, "", "copy"], [421, 1, 1, "", "from_json"], [422, 1, 1, "", "from_jsonstring"], [423, 1, 1, "", "get_features"], [424, 1, 1, "", "sha256"], [425, 1, 1, "", "to_json"], [426, 1, 1, "", "to_jsonstring"], [427, 1, 1, "", "validate_data"]], "compas_timber.elements.Plate": [[429, 1, 1, "", "ToString"], [430, 1, 1, "", "add_feature"], [431, 1, 1, "", "add_features"], [432, 1, 1, "", "compute_aabb"], [433, 1, 1, "", "compute_collision_mesh"], [434, 1, 1, "", "compute_geometry"], [435, 1, 1, "", "compute_obb"], [436, 1, 1, "", "compute_worldtransformation"], [437, 1, 1, "", "copy"], [438, 1, 1, "", "from_json"], [439, 1, 1, "", "from_jsonstring"], [440, 1, 1, "", "remove_blank_extension"], [441, 1, 1, "", "remove_features"], [442, 1, 1, "", "reset"], [443, 1, 1, "", "set_frame_and_outline"], [444, 1, 1, "", "sha256"], [445, 1, 1, "", "to_json"], [446, 1, 1, "", "to_jsonstring"], [447, 1, 1, "", "transform"], [448, 1, 1, "", "transformed"], [449, 1, 1, "", "validate_data"]], "compas_timber.elements.TimberElement": [[451, 1, 1, "", "ToString"], [452, 1, 1, "", "add_feature"], [453, 1, 1, "", "compute_aabb"], [454, 1, 1, "", "compute_collision_mesh"], [455, 1, 1, "", "compute_geometry"], [456, 1, 1, "", "compute_obb"], [457, 1, 1, "", "compute_worldtransformation"], [458, 1, 1, "", "copy"], [459, 1, 1, "", "from_json"], [460, 1, 1, "", "from_jsonstring"], [461, 1, 1, "", "remove_blank_extension"], [462, 1, 1, "", "remove_features"], [463, 1, 1, "", "reset"], [464, 1, 1, "", "sha256"], [465, 1, 1, "", "to_json"], [466, 1, 1, "", "to_jsonstring"], [467, 1, 1, "", "transform"], [468, 1, 1, "", "transformed"], [469, 1, 1, "", "validate_data"]], "compas_timber.elements.Wall": [[471, 1, 1, "", "ToString"], [472, 1, 1, "", "add_feature"], [473, 1, 1, "", "compute_aabb"], [474, 1, 1, "", "compute_collision_mesh"], [475, 1, 1, "", "compute_geometry"], [476, 1, 1, "", "compute_obb"], [477, 1, 1, "", "compute_worldtransformation"], [478, 1, 1, "", "copy"], [479, 1, 1, "", "from_boundary"], [480, 1, 1, "", "from_brep"], [481, 1, 1, "", "from_json"], [482, 1, 1, "", "from_jsonstring"], [483, 1, 1, "", "remove_blank_extension"], [484, 1, 1, "", "remove_features"], [485, 1, 1, "", "reset"], [486, 1, 1, "", "rotate"], [487, 1, 1, "", "sha256"], [488, 1, 1, "", "to_json"], [489, 1, 1, "", "to_jsonstring"], [490, 1, 1, "", "transform"], [491, 1, 1, "", "transformed"], [492, 1, 1, "", "validate_data"]], "compas_timber.errors": [[493, 3, 1, "", "BeamJoiningError"], [494, 3, 1, "", "FastenerApplicationError"], [495, 3, 1, "", "FeatureApplicationError"]], "compas_timber.fabrication": [[496, 0, 1, "", "BTLxPart"], [499, 0, 1, "", "BTLxProcessing"], [509, 0, 1, "", "BTLxWriter"], [512, 0, 1, "", "DoubleCut"], [526, 0, 1, "", "DovetailMortise"], [542, 0, 1, "", "DovetailTenon"], [558, 0, 1, "", "Drilling"], [572, 0, 1, "", "EdgePositionType"], [573, 0, 1, "", "FrenchRidgeLap"], [587, 0, 1, "", "JackRafterCut"], [601, 0, 1, "", "Lap"], [615, 0, 1, "", "LimitationTopType"], [616, 0, 1, "", "MachiningLimits"], [617, 0, 1, "", "Mortise"], [631, 0, 1, "", "OrientationType"], [632, 0, 1, "", "Slot"], [644, 0, 1, "", "StepJoint"], [659, 0, 1, "", "StepJointNotch"], [674, 0, 1, "", "StepShapeType"], [675, 0, 1, "", "Tenon"], [689, 0, 1, "", "TenonShapeType"]], "compas_timber.fabrication.BTLxPart": [[497, 1, 1, "", "et_point_vals"], [498, 1, 1, "", "ref_side_from_face"]], "compas_timber.fabrication.BTLxProcessing": [[500, 1, 1, "", "ToString"], [501, 1, 1, "", "add_subprocessing"], [502, 1, 1, "", "copy"], [503, 1, 1, "", "from_json"], [504, 1, 1, "", "from_jsonstring"], [505, 1, 1, "", "sha256"], [506, 1, 1, "", "to_json"], [507, 1, 1, "", "to_jsonstring"], [508, 1, 1, "", "validate_data"]], "compas_timber.fabrication.BTLxWriter": [[510, 1, 1, "", "model_to_xml"], [511, 1, 1, "", "write"]], "compas_timber.fabrication.DoubleCut": [[513, 1, 1, "", "ToString"], [514, 1, 1, "", "add_subprocessing"], [515, 1, 1, "", "apply"], [516, 1, 1, "", "copy"], [517, 1, 1, "", "from_json"], [518, 1, 1, "", "from_jsonstring"], [519, 1, 1, "", "from_planes_and_beam"], [520, 1, 1, "", "from_shapes_and_element"], [521, 1, 1, "", "planes_from_params_and_beam"], [522, 1, 1, "", "sha256"], [523, 1, 1, "", "to_json"], [524, 1, 1, "", "to_jsonstring"], [525, 1, 1, "", "validate_data"]], "compas_timber.fabrication.DovetailMortise": [[527, 1, 1, "", "ToString"], [528, 1, 1, "", "add_subprocessing"], [529, 1, 1, "", "apply"], [530, 1, 1, "", "copy"], [531, 1, 1, "", "define_dovetail_tool"], [532, 1, 1, "", "dovetail_cutting_frames_from_params_and_beam"], [533, 1, 1, "", "dovetail_volume_from_params_and_beam"], [534, 1, 1, "", "frame_from_params_and_beam"], [535, 1, 1, "", "from_frame_and_beam"], [536, 1, 1, "", "from_json"], [537, 1, 1, "", "from_jsonstring"], [538, 1, 1, "", "sha256"], [539, 1, 1, "", "to_json"], [540, 1, 1, "", "to_jsonstring"], [541, 1, 1, "", "validate_data"]], "compas_timber.fabrication.DovetailTenon": [[543, 1, 1, "", "ToString"], [544, 1, 1, "", "add_subprocessing"], [545, 1, 1, "", "apply"], [546, 1, 1, "", "copy"], [547, 1, 1, "", "define_dovetail_tool"], [548, 1, 1, "", "dovetail_cutting_frames_from_params_and_beam"], [549, 1, 1, "", "dovetail_volume_from_params_and_beam"], [550, 1, 1, "", "frame_from_params_and_beam"], [551, 1, 1, "", "from_json"], [552, 1, 1, "", "from_jsonstring"], [553, 1, 1, "", "from_plane_and_beam"], [554, 1, 1, "", "sha256"], [555, 1, 1, "", "to_json"], [556, 1, 1, "", "to_jsonstring"], [557, 1, 1, "", "validate_data"]], "compas_timber.fabrication.Drilling": [[559, 1, 1, "", "ToString"], [560, 1, 1, "", "add_subprocessing"], [561, 1, 1, "", "apply"], [562, 1, 1, "", "copy"], [563, 1, 1, "", "cylinder_from_params_and_element"], [564, 1, 1, "", "from_json"], [565, 1, 1, "", "from_jsonstring"], [566, 1, 1, "", "from_line_and_element"], [567, 1, 1, "", "from_shapes_and_element"], [568, 1, 1, "", "sha256"], [569, 1, 1, "", "to_json"], [570, 1, 1, "", "to_jsonstring"], [571, 1, 1, "", "validate_data"]], "compas_timber.fabrication.FrenchRidgeLap": [[574, 1, 1, "", "ToString"], [575, 1, 1, "", "add_subprocessing"], [576, 1, 1, "", "apply"], [577, 1, 1, "", "copy"], [578, 1, 1, "", "frame_from_params_and_beam"], [579, 1, 1, "", "from_beam_beam_and_plane"], [580, 1, 1, "", "from_json"], [581, 1, 1, "", "from_jsonstring"], [582, 1, 1, "", "lap_volume_from_params_and_beam"], [583, 1, 1, "", "sha256"], [584, 1, 1, "", "to_json"], [585, 1, 1, "", "to_jsonstring"], [586, 1, 1, "", "validate_data"]], "compas_timber.fabrication.JackRafterCut": [[588, 1, 1, "", "ToString"], [589, 1, 1, "", "add_subprocessing"], [590, 1, 1, "", "apply"], [591, 1, 1, "", "copy"], [592, 1, 1, "", "from_json"], [593, 1, 1, "", "from_jsonstring"], [594, 1, 1, "", "from_plane_and_beam"], [595, 1, 1, "", "from_shapes_and_element"], [596, 1, 1, "", "plane_from_params_and_beam"], [597, 1, 1, "", "sha256"], [598, 1, 1, "", "to_json"], [599, 1, 1, "", "to_jsonstring"], [600, 1, 1, "", "validate_data"]], "compas_timber.fabrication.Lap": [[602, 1, 1, "", "ToString"], [603, 1, 1, "", "add_subprocessing"], [604, 1, 1, "", "apply"], [605, 1, 1, "", "copy"], [606, 1, 1, "", "from_json"], [607, 1, 1, "", "from_jsonstring"], [608, 1, 1, "", "from_plane_and_beam"], [609, 1, 1, "", "planes_from_params_and_beam"], [610, 1, 1, "", "sha256"], [611, 1, 1, "", "to_json"], [612, 1, 1, "", "to_jsonstring"], [613, 1, 1, "", "validate_data"], [614, 1, 1, "", "volume_from_params_and_beam"]], "compas_timber.fabrication.Mortise": [[618, 1, 1, "", "ToString"], [619, 1, 1, "", "add_subprocessing"], [620, 1, 1, "", "apply"], [621, 1, 1, "", "copy"], [622, 1, 1, "", "frame_from_params_and_beam"], [623, 1, 1, "", "from_frame_and_beam"], [624, 1, 1, "", "from_json"], [625, 1, 1, "", "from_jsonstring"], [626, 1, 1, "", "sha256"], [627, 1, 1, "", "to_json"], [628, 1, 1, "", "to_jsonstring"], [629, 1, 1, "", "validate_data"], [630, 1, 1, "", "volume_from_params_and_beam"]], "compas_timber.fabrication.Slot": [[633, 1, 1, "", "ToString"], [634, 1, 1, "", "add_subprocessing"], [635, 1, 1, "", "apply"], [636, 1, 1, "", "copy"], [637, 1, 1, "", "from_json"], [638, 1, 1, "", "from_jsonstring"], [639, 1, 1, "", "from_plane_and_beam"], [640, 1, 1, "", "sha256"], [641, 1, 1, "", "to_json"], [642, 1, 1, "", "to_jsonstring"], [643, 1, 1, "", "validate_data"]], "compas_timber.fabrication.StepJoint": [[645, 1, 1, "", "ToString"], [646, 1, 1, "", "add_subprocessing"], [647, 1, 1, "", "add_tenon"], [648, 1, 1, "", "apply"], [649, 1, 1, "", "copy"], [650, 1, 1, "", "from_json"], [651, 1, 1, "", "from_jsonstring"], [652, 1, 1, "", "from_plane_and_beam"], [653, 1, 1, "", "planes_from_params_and_beam"], [654, 1, 1, "", "sha256"], [655, 1, 1, "", "tenon_volume_from_params_and_beam"], [656, 1, 1, "", "to_json"], [657, 1, 1, "", "to_jsonstring"], [658, 1, 1, "", "validate_data"]], "compas_timber.fabrication.StepJointNotch": [[660, 1, 1, "", "ToString"], [661, 1, 1, "", "add_mortise"], [662, 1, 1, "", "add_subprocessing"], [663, 1, 1, "", "apply"], [664, 1, 1, "", "copy"], [665, 1, 1, "", "from_json"], [666, 1, 1, "", "from_jsonstring"], [667, 1, 1, "", "from_plane_and_beam"], [668, 1, 1, "", "mortise_volume_from_params_and_beam"], [669, 1, 1, "", "planes_from_params_and_beam"], [670, 1, 1, "", "sha256"], [671, 1, 1, "", "to_json"], [672, 1, 1, "", "to_jsonstring"], [673, 1, 1, "", "validate_data"]], "compas_timber.fabrication.Tenon": [[676, 1, 1, "", "ToString"], [677, 1, 1, "", "add_subprocessing"], [678, 1, 1, "", "apply"], [679, 1, 1, "", "copy"], [680, 1, 1, "", "frame_from_params_and_beam"], [681, 1, 1, "", "from_json"], [682, 1, 1, "", "from_jsonstring"], [683, 1, 1, "", "from_plane_and_beam"], [684, 1, 1, "", "sha256"], [685, 1, 1, "", "to_json"], [686, 1, 1, "", "to_jsonstring"], [687, 1, 1, "", "validate_data"], [688, 1, 1, "", "volume_from_params_and_beam"]], "compas_timber.ghpython": [[690, 2, 1, "", "add_gh_param"], [691, 2, 1, "", "clear_gh_params"], [692, 2, 1, "", "get_leaf_subclasses"], [693, 2, 1, "", "item_input_valid"], [694, 2, 1, "", "list_input_valid"], [695, 2, 1, "", "manage_dynamic_params"], [696, 2, 1, "", "rename_gh_input"]], "compas_timber.model": [[697, 0, 1, "", "TimberModel"]], "compas_timber.model.TimberModel": [[698, 1, 1, "", "ToString"], [699, 1, 1, "", "add_element"], [700, 1, 1, "", "add_elements"], [701, 1, 1, "", "add_group"], [702, 1, 1, "", "add_group_element"], [703, 1, 1, "", "add_interaction"], [704, 1, 1, "", "add_joint"], [705, 1, 1, "", "add_material"], [706, 1, 1, "", "assign_material"], [707, 1, 1, "", "compute_aabb"], [708, 1, 1, "", "compute_obb"], [709, 1, 1, "", "connect_adjacent_walls"], [710, 1, 1, "", "copy"], [711, 1, 1, "", "element_by_guid"], [712, 1, 1, "", "elements"], [713, 1, 1, "", "elements_connected_by"], [714, 1, 1, "", "from_json"], [715, 1, 1, "", "from_jsonstring"], [716, 1, 1, "", "get_elements_in_group"], [717, 1, 1, "", "get_interactions_for_element"], [718, 1, 1, "", "has_element"], [719, 1, 1, "", "has_group"], [720, 1, 1, "", "has_interaction"], [721, 1, 1, "", "has_material"], [722, 1, 1, "", "interactions"], [723, 1, 1, "", "materials"], [724, 1, 1, "", "process_joinery"], [725, 1, 1, "", "remove_element"], [726, 1, 1, "", "remove_interaction"], [727, 1, 1, "", "remove_joint"], [728, 1, 1, "", "rotate"], [729, 1, 1, "", "rotated"], [730, 1, 1, "", "scale"], [731, 1, 1, "", "scaled"], [732, 1, 1, "", "set_topologies"], [733, 1, 1, "", "sha256"], [734, 1, 1, "", "to_json"], [735, 1, 1, "", "to_jsonstring"], [736, 1, 1, "", "transform"], [737, 1, 1, "", "transform_numpy"], [738, 1, 1, "", "transformed"], [739, 1, 1, "", "transformed_numpy"], [740, 1, 1, "", "translate"], [741, 1, 1, "", "translated"], [742, 1, 1, "", "validate_data"]], "compas_timber.planning": [[743, 0, 1, "", "Actor"], [745, 0, 1, "", "BuildingPlan"], [755, 0, 1, "", "BuildingPlanParser"], [758, 0, 1, "", "Instruction"], [768, 0, 1, "", "LinearDimension"], [778, 0, 1, "", "Model3d"], [788, 0, 1, "", "SimpleSequenceGenerator"], [789, 0, 1, "", "Step"], [799, 0, 1, "", "Text3d"]], "compas_timber.planning.Actor": [[744, 1, 1, "", "get_name"]], "compas_timber.planning.BuildingPlan": [[746, 1, 1, "", "ToString"], [747, 1, 1, "", "add_step"], [748, 1, 1, "", "copy"], [749, 1, 1, "", "from_json"], [750, 1, 1, "", "from_jsonstring"], [751, 1, 1, "", "sha256"], [752, 1, 1, "", "to_json"], [753, 1, 1, "", "to_jsonstring"], [754, 1, 1, "", "validate_data"]], "compas_timber.planning.BuildingPlanParser": [[756, 1, 1, "", "parse"], [757, 1, 1, "", "serialize"]], "compas_timber.planning.Instruction": [[759, 1, 1, "", "ToString"], [760, 1, 1, "", "copy"], [761, 1, 1, "", "from_json"], [762, 1, 1, "", "from_jsonstring"], [763, 1, 1, "", "sha256"], [764, 1, 1, "", "to_json"], [765, 1, 1, "", "to_jsonstring"], [766, 1, 1, "", "transform"], [767, 1, 1, "", "validate_data"]], "compas_timber.planning.LinearDimension": [[769, 1, 1, "", "ToString"], [770, 1, 1, "", "copy"], [771, 1, 1, "", "from_json"], [772, 1, 1, "", "from_jsonstring"], [773, 1, 1, "", "sha256"], [774, 1, 1, "", "to_json"], [775, 1, 1, "", "to_jsonstring"], [776, 1, 1, "", "transform"], [777, 1, 1, "", "validate_data"]], "compas_timber.planning.Model3d": [[779, 1, 1, "", "ToString"], [780, 1, 1, "", "copy"], [781, 1, 1, "", "from_json"], [782, 1, 1, "", "from_jsonstring"], [783, 1, 1, "", "sha256"], [784, 1, 1, "", "to_json"], [785, 1, 1, "", "to_jsonstring"], [786, 1, 1, "", "transform"], [787, 1, 1, "", "validate_data"]], "compas_timber.planning.Step": [[790, 1, 1, "", "ToString"], [791, 1, 1, "", "copy"], [792, 1, 1, "", "from_json"], [793, 1, 1, "", "from_jsonstring"], [794, 1, 1, "", "sha256"], [795, 1, 1, "", "to_json"], [796, 1, 1, "", "to_jsonstring"], [797, 1, 1, "", "transform"], [798, 1, 1, "", "validate_data"]], "compas_timber.planning.Text3d": [[800, 1, 1, "", "ToString"], [801, 1, 1, "", "copy"], [802, 1, 1, "", "from_json"], [803, 1, 1, "", "from_jsonstring"], [804, 1, 1, "", "sha256"], [805, 1, 1, "", "to_json"], [806, 1, 1, "", "to_jsonstring"], [807, 1, 1, "", "transform"], [808, 1, 1, "", "validate_data"]], "compas_timber.rhino": [[809, 2, 1, "", "find_neighboring_elements"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:exception"}, "terms": {"": [12, 20, 21, 26, 33, 34, 41, 42, 47, 60, 61, 67, 72, 79, 80, 86, 98, 99, 105, 118, 119, 124, 127, 128, 136, 137, 143, 146, 154, 155, 160, 161, 171, 172, 177, 188, 189, 194, 195, 206, 207, 212, 224, 225, 231, 232, 242, 243, 249, 250, 260, 261, 267, 270, 279, 280, 286, 299, 300, 307, 369, 380, 382, 383, 397, 398, 417, 418, 427, 449, 469, 492, 508, 525, 535, 541, 557, 571, 586, 600, 613, 623, 629, 643, 658, 659, 673, 687, 702, 742, 754, 767, 777, 787, 798, 808, 818, 819, 824, 827], "0": [20, 23, 28, 41, 44, 60, 63, 79, 83, 87, 98, 102, 118, 121, 125, 136, 140, 154, 157, 171, 174, 188, 191, 195, 206, 209, 213, 224, 228, 232, 242, 246, 250, 260, 264, 268, 279, 283, 299, 304, 308, 369, 374, 377, 387, 391, 392, 401, 404, 412, 424, 432, 435, 444, 453, 456, 464, 473, 476, 487, 499, 505, 512, 519, 522, 526, 535, 538, 542, 553, 554, 558, 568, 573, 579, 583, 587, 594, 597, 601, 608, 610, 617, 623, 626, 640, 644, 647, 652, 654, 659, 661, 667, 670, 675, 683, 684, 695, 709, 733, 751, 763, 773, 783, 794, 804, 809, 812, 814, 819, 823, 824], "01": [823, 824], "02": 815, "06": [29, 30, 367], "09": [311, 315, 324, 329, 341, 362, 366], "1": [21, 23, 42, 44, 61, 63, 80, 83, 87, 99, 102, 119, 121, 125, 137, 140, 155, 157, 172, 174, 189, 191, 195, 207, 209, 213, 225, 228, 232, 243, 246, 250, 261, 264, 268, 280, 283, 300, 304, 369, 391, 412, 424, 444, 464, 473, 487, 498, 505, 512, 522, 526, 538, 542, 554, 568, 573, 583, 587, 597, 601, 610, 617, 626, 640, 644, 654, 659, 670, 675, 684, 691, 733, 751, 763, 773, 783, 794, 804, 812, 817, 819, 824, 828], "10": [535, 553, 810, 814], "100": 702, "1000": [526, 542, 617, 644, 647, 659, 661, 675], "100000": [512, 526, 542, 573, 587, 601, 617, 644, 659, 675], "15": [535, 553], "17": 815, "179": [512, 526, 542, 573, 587, 601, 617, 644, 659, 675, 823], "180": [526, 617], "1e": [29, 30, 311, 315, 324, 329, 341, 362, 366, 367], "2": [195, 232, 250, 369, 812, 817, 824, 828], "20": [535, 553, 558, 623, 652, 667, 683], "200": 702, "2020": 815, "2022": 810, "2023": 810, "28": [535, 553, 623, 683], "3": [195, 250, 369, 814, 817, 824, 828], "30": [526, 542], "300": 702, "3000": 702, "35": [526, 542], "3d": [768, 778, 813], "4": [195, 250, 369, 812, 817, 824], "40": [535, 553, 623, 683], "5": [87, 125, 213, 268, 369, 387, 392, 499, 526, 542], "50": [553, 558, 683], "5000": [526, 542, 617, 675, 702], "50000": [512, 587, 601, 644, 659], "5281": 810, "6": [369, 428, 498], "7": 814, "7934267": 810, "80": [535, 553, 623, 683], "89": 601, "9": [512, 526, 542, 573, 587, 601, 617, 644, 659, 675, 823], "99": 824, "A": [16, 28, 31, 37, 56, 74, 93, 112, 131, 144, 150, 167, 184, 195, 201, 219, 238, 250, 256, 274, 294, 308, 311, 315, 316, 324, 329, 341, 362, 366, 369, 372, 382, 383, 398, 400, 418, 428, 430, 452, 472, 493, 496, 509, 674, 697, 699, 705, 716, 717, 721, 724, 810, 815, 819, 820, 824], "AND": 815, "AS": 815, "As": 810, "At": 813, "BE": 815, "BUT": 815, "By": [824, 828], "FOR": 815, "For": [49, 308, 724, 744, 813, 827], "IN": 815, "If": [15, 18, 19, 20, 21, 23, 24, 25, 29, 36, 39, 40, 41, 42, 44, 45, 46, 50, 52, 55, 58, 59, 60, 61, 63, 64, 65, 68, 70, 72, 73, 76, 77, 79, 80, 83, 84, 85, 87, 89, 91, 92, 95, 96, 98, 99, 102, 103, 104, 106, 108, 111, 114, 115, 118, 119, 121, 122, 123, 125, 129, 130, 133, 134, 136, 137, 140, 141, 142, 149, 152, 153, 154, 155, 157, 158, 159, 163, 166, 169, 170, 171, 172, 174, 175, 176, 180, 183, 186, 187, 188, 189, 191, 192, 193, 197, 200, 204, 205, 206, 207, 209, 210, 211, 213, 215, 217, 218, 221, 222, 224, 225, 228, 229, 230, 232, 234, 236, 237, 240, 241, 242, 243, 246, 247, 248, 252, 255, 258, 259, 260, 261, 264, 265, 266, 268, 272, 273, 276, 277, 279, 280, 283, 284, 285, 289, 291, 293, 297, 298, 299, 300, 304, 305, 306, 362, 376, 379, 384, 385, 389, 391, 393, 394, 406, 407, 408, 412, 413, 414, 420, 421, 422, 424, 425, 426, 434, 437, 438, 439, 441, 444, 445, 446, 455, 458, 459, 460, 464, 465, 466, 475, 478, 481, 482, 487, 488, 489, 502, 503, 504, 505, 506, 507, 515, 516, 517, 518, 522, 523, 524, 529, 530, 536, 537, 538, 539, 540, 545, 546, 551, 552, 554, 555, 556, 558, 561, 562, 564, 565, 568, 569, 570, 576, 577, 580, 581, 583, 584, 585, 590, 591, 592, 593, 597, 598, 599, 604, 605, 606, 607, 608, 610, 611, 612, 620, 621, 624, 625, 626, 627, 628, 635, 636, 637, 638, 640, 641, 642, 648, 649, 650, 651, 654, 656, 657, 659, 663, 664, 665, 666, 670, 671, 672, 678, 679, 681, 682, 684, 685, 686, 699, 700, 702, 703, 706, 710, 714, 715, 724, 733, 734, 735, 748, 749, 750, 751, 752, 753, 760, 761, 762, 763, 764, 765, 770, 771, 772, 773, 774, 775, 780, 781, 782, 783, 784, 785, 791, 792, 793, 794, 795, 796, 801, 802, 803, 804, 805, 806, 809, 810, 819, 820, 824, 825], "In": [13, 308, 558, 813, 814], "It": [71, 311, 362, 398, 470, 659, 813, 816, 818, 819, 824, 825, 827], "NO": 815, "NOT": 815, "No": 615, "OF": 815, "OR": 815, "Of": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 118, 119, 136, 137, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 279, 280, 299, 300], "One": [49, 744, 789], "THE": 815, "TO": 815, "The": [1, 9, 10, 15, 16, 18, 19, 20, 21, 24, 25, 26, 31, 36, 37, 39, 40, 41, 42, 45, 46, 47, 50, 55, 56, 58, 59, 60, 61, 64, 65, 67, 68, 73, 74, 76, 77, 79, 80, 84, 85, 86, 87, 92, 93, 95, 96, 98, 99, 103, 104, 105, 111, 112, 114, 115, 118, 119, 122, 123, 124, 125, 130, 131, 133, 134, 136, 137, 141, 142, 143, 149, 150, 152, 153, 154, 155, 158, 159, 160, 166, 167, 169, 170, 171, 172, 175, 176, 177, 178, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 200, 201, 202, 204, 205, 206, 207, 210, 211, 212, 213, 218, 219, 221, 222, 224, 225, 229, 230, 231, 237, 238, 240, 241, 242, 243, 247, 248, 249, 250, 255, 256, 258, 259, 260, 261, 265, 266, 267, 268, 273, 274, 276, 277, 279, 280, 284, 285, 286, 287, 293, 294, 297, 298, 299, 300, 305, 306, 307, 308, 309, 311, 315, 316, 322, 324, 329, 341, 342, 360, 362, 366, 369, 371, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 401, 402, 404, 406, 407, 408, 413, 414, 415, 416, 417, 418, 420, 421, 422, 425, 426, 427, 428, 431, 432, 433, 435, 437, 438, 439, 441, 445, 446, 447, 448, 449, 453, 454, 456, 458, 459, 460, 465, 466, 467, 468, 469, 473, 474, 476, 478, 481, 482, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 542, 545, 546, 547, 549, 550, 551, 552, 553, 555, 556, 557, 558, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 573, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 635, 636, 637, 638, 639, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 661, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 675, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 690, 691, 695, 696, 697, 699, 700, 701, 702, 703, 706, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 720, 724, 725, 727, 728, 729, 730, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 748, 749, 750, 752, 753, 754, 760, 761, 762, 764, 765, 767, 770, 771, 772, 774, 775, 777, 780, 781, 782, 784, 785, 787, 791, 792, 793, 795, 796, 798, 801, 802, 803, 805, 806, 808, 809, 815, 816, 818, 819, 823, 824, 825, 827, 828], "Then": 816, "There": [330, 811, 818, 824, 828], "These": [418, 818, 824], "To": [22, 43, 814, 816, 817, 825, 828], "WITH": 815, "_": [475, 818], "__from_data__": [26, 47, 67, 86, 105, 124, 143, 160, 177, 194, 212, 231, 249, 267, 286, 307, 397, 417, 427, 449, 469, 492, 508, 525, 541, 557, 571, 586, 600, 613, 629, 643, 658, 673, 687, 742, 754, 767, 777, 787, 798, 808], "__init__": 817, "aabb": [308, 369, 374, 401, 428, 432, 453, 473], "abl": [12, 33, 34, 127, 128, 146, 270], "about": [493, 813], "abov": [815, 824], "absolut": [311, 324, 362], "abstract": [125, 398, 450], "accord": [316, 369, 818], "accross": 639, "acknowledg": 810, "act": 496, "action": 815, "activ": [813, 814, 819, 825, 827], "actor": [789, 813], "actual": [330, 332, 380], "ad": [12, 16, 31, 33, 37, 56, 71, 74, 93, 112, 127, 131, 146, 150, 167, 184, 201, 219, 238, 250, 256, 270, 274, 294, 369, 373, 428, 431, 699, 700, 701, 702, 809, 820, 824], "adapt": [13, 330], "add": [12, 13, 33, 34, 52, 53, 70, 71, 89, 90, 108, 109, 127, 128, 146, 147, 163, 164, 180, 181, 197, 198, 215, 216, 234, 235, 252, 253, 270, 271, 289, 290, 371, 372, 373, 400, 423, 430, 431, 452, 472, 501, 514, 528, 544, 560, 575, 589, 603, 619, 634, 646, 647, 661, 662, 677, 690, 699, 700, 701, 702, 703, 704, 705, 724, 816, 817, 825, 827, 828], "add_beam": 812, "add_el": 702, "add_extens": 71, "add_gh_param": 813, "addit": [28, 31, 701, 816, 818, 819, 823], "addition": 72, "adjac": [16, 37, 56, 74, 93, 112, 131, 150, 167, 184, 201, 219, 238, 256, 274, 294, 709], "adjust": 827, "affect": [12, 33, 34, 127, 128, 146, 270], "after": [62, 71, 82, 101, 120, 139, 156, 173, 190, 208, 227, 244, 262, 282, 303, 515, 529, 545, 561, 576, 590, 604, 620, 635, 648, 663, 678], "against": [26, 47, 67, 86, 105, 124, 143, 160, 177, 194, 212, 231, 249, 267, 286, 307, 397, 417, 427, 449, 469, 492, 508, 525, 541, 557, 571, 586, 600, 613, 629, 643, 658, 673, 687, 742, 754, 767, 777, 787, 798, 808], "aka": 342, "aleksandra": 810, "algorithm": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 308, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 733, 751, 763, 773, 783, 794, 804], "align": [68, 308, 369, 374, 401, 428, 432, 453, 473, 707, 816, 827], "all": [12, 20, 21, 33, 41, 42, 60, 61, 79, 80, 98, 99, 118, 119, 127, 136, 137, 146, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 270, 279, 280, 299, 300, 381, 389, 390, 411, 418, 441, 442, 450, 463, 485, 691, 695, 697, 712, 716, 717, 722, 723, 724, 736, 809, 815, 818, 820, 824, 826], "allow": [16, 37, 56, 74, 87, 93, 112, 125, 131, 150, 167, 184, 201, 213, 219, 238, 256, 268, 274, 294, 316, 317, 330, 332, 381, 697, 789, 820, 824], "along": [161, 178, 195, 213, 232, 250, 268, 369, 386, 526, 535, 553, 617, 623, 683, 824], "alreadi": [311, 324, 362, 699, 702], "also": [369, 810, 813, 816, 818, 819, 824], "alt": 566, "altern": 330, "amount": [308, 371, 381, 809], "an": [10, 15, 16, 18, 19, 24, 25, 26, 28, 36, 37, 39, 40, 45, 46, 47, 50, 55, 56, 58, 59, 64, 65, 67, 68, 73, 74, 76, 77, 84, 85, 86, 87, 92, 93, 95, 96, 103, 104, 105, 106, 111, 112, 114, 115, 122, 123, 124, 125, 130, 131, 133, 134, 141, 142, 143, 144, 149, 150, 152, 153, 158, 159, 160, 161, 166, 167, 169, 170, 175, 176, 177, 178, 183, 184, 186, 187, 192, 193, 194, 195, 200, 201, 204, 205, 210, 211, 212, 213, 218, 219, 221, 222, 229, 230, 231, 232, 237, 238, 240, 241, 247, 248, 249, 250, 255, 256, 258, 259, 265, 266, 267, 268, 273, 274, 276, 277, 284, 285, 286, 287, 293, 294, 297, 298, 305, 306, 307, 369, 379, 384, 385, 393, 394, 397, 398, 406, 407, 408, 413, 414, 417, 418, 420, 421, 422, 425, 426, 427, 428, 437, 438, 439, 445, 446, 449, 450, 458, 459, 460, 465, 466, 469, 470, 478, 481, 482, 488, 489, 492, 493, 495, 502, 503, 504, 506, 507, 508, 510, 516, 517, 518, 520, 523, 524, 525, 530, 536, 537, 539, 540, 541, 546, 551, 552, 553, 555, 556, 557, 562, 564, 565, 569, 570, 571, 577, 580, 581, 584, 585, 586, 591, 592, 593, 598, 599, 600, 605, 606, 607, 611, 612, 613, 621, 624, 625, 627, 628, 629, 636, 637, 638, 641, 642, 643, 649, 650, 651, 656, 657, 658, 664, 665, 666, 671, 672, 673, 679, 681, 682, 683, 685, 686, 687, 699, 702, 703, 704, 706, 710, 714, 715, 720, 724, 725, 734, 735, 742, 743, 748, 749, 750, 752, 753, 754, 760, 761, 762, 764, 765, 767, 770, 771, 772, 774, 775, 777, 780, 781, 782, 784, 785, 787, 791, 792, 793, 795, 796, 798, 801, 802, 803, 805, 806, 808, 810, 811, 813, 814, 815, 816, 818, 819, 824], "analysi": 813, "angl": [106, 195, 202, 386, 512, 526, 531, 535, 542, 547, 553, 558, 573, 587, 601, 617, 623, 675, 683, 728, 729, 823, 824], "angle_1": 512, "angle_2": 512, "ani": [24, 25, 26, 45, 46, 47, 64, 65, 67, 84, 85, 86, 103, 104, 105, 122, 123, 124, 141, 142, 143, 144, 147, 158, 159, 160, 175, 176, 177, 192, 193, 194, 210, 211, 212, 229, 230, 231, 247, 248, 249, 265, 266, 267, 284, 285, 286, 305, 306, 307, 393, 394, 397, 413, 414, 417, 425, 426, 427, 445, 446, 449, 465, 466, 469, 488, 489, 492, 506, 507, 508, 523, 524, 525, 529, 539, 540, 541, 545, 555, 556, 557, 569, 570, 571, 584, 585, 586, 598, 599, 600, 611, 612, 613, 620, 627, 628, 629, 641, 642, 643, 648, 656, 657, 658, 663, 671, 672, 673, 678, 685, 686, 687, 734, 735, 742, 752, 753, 754, 764, 765, 767, 774, 775, 777, 784, 785, 787, 795, 796, 798, 805, 806, 808, 811, 815, 824, 828], "anna": 810, "anoth": [178, 213], "apart": 28, "api": [813, 816], "apolinarska": 810, "append": 817, "appli": [12, 33, 34, 127, 128, 146, 195, 250, 270, 309, 315, 322, 329, 330, 341, 360, 366, 395, 396, 415, 416, 418, 447, 448, 467, 468, 490, 491, 493, 494, 495, 496, 608, 716, 736, 817, 824, 828], "applic": [195, 250, 317, 824, 826], "appropri": 398, "ar": [11, 12, 14, 16, 20, 21, 22, 28, 29, 30, 32, 33, 35, 37, 41, 42, 43, 51, 54, 56, 60, 61, 68, 69, 72, 74, 79, 80, 88, 91, 93, 98, 99, 107, 110, 112, 118, 119, 126, 127, 129, 131, 136, 137, 145, 146, 148, 150, 154, 155, 162, 165, 167, 171, 172, 179, 182, 184, 188, 189, 196, 199, 201, 206, 207, 214, 217, 219, 224, 225, 232, 233, 236, 238, 242, 243, 245, 251, 254, 256, 260, 261, 263, 269, 270, 272, 274, 279, 280, 288, 291, 292, 294, 299, 300, 308, 309, 316, 325, 335, 362, 370, 399, 418, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 675, 676, 683, 698, 703, 706, 746, 759, 769, 779, 789, 790, 800, 811, 817, 818, 819, 822, 823, 824, 825, 827, 828], "argument": [16, 309, 322, 330, 360, 701], "aris": 815, "around": [195, 250, 558, 819, 824], "as_str": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 733, 751, 763, 773, 783, 794, 804], "asap": 29, "assembl": 789, "assembli": [342, 812, 813, 820, 826], "assign": [309, 360, 697, 699, 706, 824, 827], "associ": [10, 22, 43, 50, 68, 87, 106, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 789, 815], "assum": 418, "attach": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 118, 119, 136, 137, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 279, 280, 299, 300, 309], "attempt": [418, 826], "attr": [496, 701], "attr1nam": 818, "attr1value_attr2nam": 818, "attr2valu": 818, "attribut": [10, 31, 48, 50, 68, 87, 106, 125, 144, 161, 178, 195, 213, 232, 250, 263, 268, 287, 309, 311, 316, 317, 342, 369, 398, 418, 428, 450, 493, 494, 495, 496, 499, 572, 615, 616, 631, 674, 689, 697, 701, 788, 789, 813, 816, 817, 819], "author": [810, 815], "autom": 816, "automat": [52, 53, 70, 89, 90, 108, 109, 163, 164, 180, 181, 195, 197, 198, 215, 216, 234, 235, 250, 252, 253, 271, 289, 290, 526, 535, 542, 553, 617, 623, 675, 683, 689, 824, 827], "avail": 308, "avoid": [22, 43, 374, 377, 401, 404, 432, 435, 453, 456, 473, 476], "awai": 631, "axi": [195, 250, 308, 369, 374, 382, 383, 401, 428, 432, 453, 473, 526, 535, 542, 558, 601, 617, 623, 675, 707, 728, 729, 819, 823, 824, 827], "b": [703, 720, 726], "back": 616, "backend": 813, "bake": 816, "bakewithboxmap": 827, "ball": 10, "ball_diamet": 10, "ballnodejoint": [418, 813], "base": [10, 27, 31, 48, 50, 66, 68, 87, 106, 125, 144, 161, 178, 195, 202, 213, 232, 245, 250, 268, 287, 309, 317, 322, 330, 332, 336, 342, 360, 369, 376, 378, 398, 405, 418, 428, 434, 436, 450, 455, 457, 470, 475, 477, 493, 494, 495, 496, 498, 499, 509, 512, 526, 531, 542, 547, 558, 572, 573, 587, 601, 615, 616, 617, 631, 632, 644, 659, 674, 675, 689, 697, 724, 728, 729, 743, 745, 755, 758, 768, 778, 788, 789, 799, 825, 826, 828], "base_interfac": 10, "basic": 813, "beam": [10, 12, 13, 14, 16, 20, 21, 22, 27, 28, 29, 30, 31, 33, 34, 35, 37, 41, 42, 43, 50, 52, 53, 54, 56, 60, 61, 62, 66, 68, 70, 71, 72, 74, 79, 80, 82, 87, 89, 90, 93, 98, 99, 101, 106, 108, 109, 110, 112, 118, 119, 120, 125, 127, 128, 131, 136, 137, 139, 144, 146, 147, 148, 150, 154, 155, 156, 161, 163, 164, 165, 167, 171, 172, 173, 178, 180, 181, 182, 184, 188, 189, 190, 195, 197, 198, 199, 201, 206, 207, 208, 213, 215, 216, 219, 224, 225, 227, 232, 234, 235, 238, 242, 243, 244, 250, 252, 253, 254, 256, 260, 261, 262, 268, 270, 271, 274, 279, 280, 282, 287, 289, 290, 291, 292, 294, 295, 299, 300, 302, 303, 308, 317, 342, 450, 470, 493, 496, 498, 499, 512, 515, 519, 521, 526, 529, 532, 533, 534, 535, 542, 545, 548, 549, 550, 553, 573, 576, 578, 579, 582, 587, 590, 594, 595, 596, 601, 604, 608, 609, 614, 617, 620, 622, 623, 630, 631, 635, 639, 644, 648, 652, 653, 655, 659, 661, 663, 667, 668, 669, 675, 678, 680, 683, 688, 697, 702, 711, 724, 778, 809, 812, 813, 816, 818, 823, 824, 825, 827, 828], "beam_a": [20, 21, 29, 41, 42, 60, 61, 79, 80, 98, 99, 106, 118, 119, 136, 137, 144, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 279, 280, 299, 300, 301, 702], "beam_a_kei": 697, "beam_b": [20, 21, 29, 41, 42, 60, 61, 79, 80, 98, 99, 106, 118, 119, 136, 137, 144, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 279, 280, 299, 300, 301], "beam_b_kei": 697, "beam_def": 353, "beam_fac": 498, "beam_width": [342, 820], "beama": 367, "beamb": 367, "beamdefinit": 342, "beamjoiningerror": [1, 12, 14, 33, 34, 35, 52, 54, 70, 72, 89, 108, 110, 127, 128, 146, 148, 163, 165, 180, 182, 197, 199, 215, 234, 236, 252, 254, 270, 289, 291, 292, 317, 724, 813], "becaus": 824, "been": [16, 37, 56, 71, 74, 93, 112, 131, 150, 167, 184, 201, 219, 238, 256, 274, 294, 699, 789], "befor": [12, 16, 33, 37, 56, 74, 93, 112, 127, 131, 146, 150, 167, 184, 201, 219, 238, 256, 270, 274, 294, 330, 699], "being": 813, "belong": [16, 37, 56, 74, 93, 112, 131, 150, 167, 184, 201, 219, 238, 256, 274, 294], "between": [10, 30, 68, 87, 106, 125, 213, 268, 324, 342, 418, 498, 526, 542, 617, 675, 697, 703, 709, 720, 722, 726, 818, 820, 823, 824, 828], "birdsmouth": 161, "bisector": [106, 824], "bit": 820, "bitmap": 827, "blank": [369, 371, 388, 496, 578, 724, 819], "blank_fram": 496, "blank_length": 496, "blender": 811, "bodi": 470, "bool": [15, 20, 21, 23, 24, 25, 28, 36, 41, 42, 44, 45, 46, 50, 55, 60, 61, 63, 64, 65, 68, 73, 79, 80, 83, 84, 85, 87, 92, 98, 99, 102, 103, 104, 106, 111, 118, 119, 121, 122, 123, 125, 130, 136, 137, 140, 141, 142, 149, 154, 155, 157, 158, 159, 166, 171, 172, 174, 175, 176, 183, 188, 189, 191, 192, 193, 200, 206, 207, 209, 210, 211, 213, 218, 224, 225, 228, 229, 230, 232, 237, 242, 243, 246, 247, 248, 255, 260, 261, 264, 265, 266, 268, 273, 279, 280, 283, 284, 285, 293, 299, 300, 304, 305, 306, 311, 324, 337, 362, 376, 379, 391, 393, 394, 406, 412, 413, 414, 418, 420, 424, 425, 426, 434, 437, 444, 445, 446, 450, 455, 458, 464, 465, 466, 475, 478, 487, 488, 489, 502, 505, 506, 507, 516, 522, 523, 524, 526, 530, 538, 539, 540, 542, 546, 554, 555, 556, 558, 562, 568, 569, 570, 573, 577, 583, 584, 585, 591, 597, 598, 599, 601, 605, 608, 610, 611, 612, 616, 617, 621, 626, 627, 628, 636, 640, 641, 642, 649, 654, 656, 657, 659, 664, 670, 671, 672, 675, 679, 683, 684, 685, 686, 710, 718, 719, 720, 721, 724, 733, 734, 735, 748, 751, 752, 753, 760, 763, 764, 765, 770, 773, 774, 775, 780, 783, 784, 785, 789, 791, 794, 795, 796, 801, 804, 805, 806], "boolean": [418, 816, 820, 823, 825], "both": [53, 90, 109, 164, 181, 198, 216, 235, 250, 253, 271, 290, 703, 706, 823, 824], "bottom": [526, 542, 553, 616, 617, 675, 683, 824], "bound": [308, 369, 374, 377, 401, 404, 428, 432, 435, 453, 456, 473, 476, 707, 708, 809], "box": [308, 369, 374, 377, 401, 404, 428, 432, 435, 453, 456, 473, 476, 496, 668, 707, 708, 789, 809, 816, 819], "bracket": 398, "brep": [376, 428, 434, 455, 475, 480, 515, 529, 533, 545, 549, 561, 576, 582, 590, 604, 620, 630, 635, 648, 655, 663, 678, 688, 813, 827], "btlx": [369, 496, 498, 499, 509, 510, 511, 813, 816], "btlx_2_1_0": 817, "btlx_process": 817, "btlxfromgeometrydefinit": 418, "btlxjoint": 817, "btlxpart": [813, 817], "btlxprocess": [512, 526, 535, 542, 558, 573, 587, 601, 617, 623, 632, 644, 659, 675, 813, 817], "btlxwriter": 813, "build": [745, 755, 756, 757, 788, 789, 814, 828], "building_plan": 757, "buildingplan": [756, 757, 788, 813], "buildingplanpars": 813, "built": [813, 816], "butt": [50, 178, 287, 368, 820], "byte": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 733, 751, 763, 773, 783, 794, 804], "c": [814, 815], "cad": [789, 811], "calcul": [12, 20, 21, 30, 33, 34, 41, 42, 52, 60, 61, 70, 79, 80, 89, 98, 99, 108, 118, 119, 127, 128, 136, 137, 146, 154, 155, 163, 171, 172, 180, 188, 189, 197, 206, 207, 215, 224, 225, 234, 242, 243, 252, 260, 261, 270, 279, 280, 289, 299, 300, 386, 493, 521, 532, 533, 534, 548, 549, 550, 578, 582, 596, 609, 614, 622, 630, 653, 655, 668, 669, 680, 688, 697, 724, 732], "call": [16, 22, 37, 43, 52, 53, 56, 70, 71, 74, 89, 90, 93, 108, 109, 112, 131, 150, 163, 164, 167, 180, 181, 184, 197, 198, 201, 215, 216, 219, 234, 235, 238, 252, 253, 256, 271, 274, 289, 290, 294, 330, 817, 819], "callabl": 716, "can": [26, 47, 67, 68, 86, 105, 124, 143, 144, 160, 177, 194, 195, 212, 231, 249, 267, 286, 307, 315, 329, 341, 366, 397, 417, 418, 427, 449, 450, 469, 492, 493, 508, 525, 541, 553, 557, 566, 571, 586, 600, 613, 629, 643, 658, 673, 683, 687, 699, 742, 745, 754, 767, 777, 787, 789, 798, 808, 811, 816, 817, 819, 824, 828], "cannot": [494, 495, 819, 824], "canva": 824, "care": 828, "casa": 810, "case": [535, 623, 820, 825], "categori": [309, 311, 316, 818, 819, 828], "category_a": 309, "category_b": [309, 316], "categoryrul": [342, 813], "catergory_a": 316, "caus": 566, "caviti": 342, "cd": 814, "center": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 118, 119, 136, 137, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 279, 280, 299, 300, 697, 810, 824], "center_of_mass": 697, "centerlin": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 106, 116, 118, 119, 136, 137, 154, 155, 161, 171, 172, 188, 189, 195, 206, 207, 224, 225, 232, 242, 243, 250, 260, 261, 279, 280, 291, 299, 300, 324, 342, 369, 380, 382, 383, 816, 818, 819, 827], "centerline_end": 369, "centerline_start": 369, "centr": 824, "centrelin": 819, "chamfer": [675, 683], "chang": [566, 824], "charg": 815, "check": [14, 35, 54, 72, 91, 110, 129, 148, 165, 182, 199, 217, 236, 254, 272, 291, 292, 311, 324, 362, 718, 719, 724, 809, 813], "checkstandardattribut": 818, "chen": 810, "chosen": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 118, 119, 136, 137, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 279, 280, 299, 300], "circular": [22, 43], "cite": 813, "cl": [15, 36, 55, 73, 92, 111, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293, 309, 322, 360, 379, 406, 420, 437, 458, 478, 502, 516, 530, 546, 562, 577, 591, 605, 621, 636, 649, 664, 679, 692, 710, 748, 760, 770, 780, 791, 801], "claim": 815, "class": [10, 11, 27, 31, 32, 48, 50, 51, 68, 69, 87, 88, 106, 107, 125, 126, 144, 145, 161, 162, 178, 179, 195, 196, 213, 214, 232, 233, 250, 251, 268, 269, 287, 288, 309, 317, 322, 330, 332, 336, 342, 360, 369, 370, 398, 399, 418, 419, 428, 429, 450, 451, 470, 471, 494, 496, 499, 500, 509, 512, 513, 526, 527, 542, 543, 558, 559, 572, 573, 574, 587, 588, 601, 602, 615, 616, 617, 618, 631, 632, 633, 644, 645, 659, 660, 667, 674, 675, 676, 689, 697, 698, 704, 736, 743, 745, 746, 755, 758, 759, 768, 769, 778, 779, 788, 789, 790, 799, 800, 813, 817], "classmethod": [16, 17, 18, 19, 26, 28, 37, 38, 39, 40, 47, 49, 56, 57, 58, 59, 67, 74, 75, 76, 77, 86, 93, 94, 95, 96, 105, 112, 113, 114, 115, 124, 131, 132, 133, 134, 143, 150, 151, 152, 153, 160, 167, 168, 169, 170, 177, 184, 185, 186, 187, 194, 201, 203, 204, 205, 212, 219, 220, 221, 222, 231, 238, 239, 240, 241, 249, 256, 257, 258, 259, 267, 274, 275, 276, 277, 286, 294, 296, 297, 298, 307, 343, 382, 383, 384, 385, 397, 407, 408, 417, 421, 422, 427, 438, 439, 449, 459, 460, 469, 479, 480, 481, 482, 492, 503, 504, 508, 517, 518, 519, 520, 525, 531, 535, 536, 537, 541, 547, 551, 552, 553, 557, 564, 565, 566, 567, 571, 579, 580, 581, 586, 592, 593, 594, 595, 600, 606, 607, 608, 613, 623, 624, 625, 629, 637, 638, 639, 643, 650, 651, 652, 658, 665, 666, 667, 673, 681, 682, 683, 687, 714, 715, 742, 744, 749, 750, 754, 756, 757, 761, 762, 767, 771, 772, 777, 781, 782, 787, 792, 793, 798, 802, 803, 808], "clean": 824, "clear": [398, 691, 695], "clear_gh_param": 813, "clearli": 418, "click": 824, "clone": 814, "closer": 380, "closest": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 118, 119, 136, 137, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 279, 280, 299, 300, 820], "clt": 428, "code": [16, 37, 56, 74, 93, 112, 131, 150, 167, 184, 201, 219, 238, 256, 274, 294, 811, 813], "collect": [745, 809, 825], "collis": [375, 402, 433, 454, 474], "colon": 818, "com": [810, 814, 817], "combin": [232, 824], "comment": 509, "common": 125, "compa": [15, 18, 19, 23, 36, 39, 40, 44, 55, 58, 59, 63, 73, 76, 77, 83, 92, 95, 96, 102, 111, 114, 115, 121, 130, 133, 134, 140, 149, 152, 153, 157, 166, 169, 170, 174, 183, 186, 187, 191, 200, 204, 205, 209, 218, 221, 222, 228, 237, 240, 241, 246, 255, 258, 259, 264, 273, 276, 277, 283, 293, 297, 298, 304, 342, 369, 375, 376, 377, 378, 379, 384, 385, 391, 395, 396, 401, 402, 404, 405, 406, 407, 408, 412, 415, 416, 418, 420, 421, 422, 424, 433, 434, 435, 436, 437, 438, 439, 444, 447, 448, 453, 454, 455, 456, 457, 458, 459, 460, 464, 467, 468, 473, 474, 475, 476, 477, 478, 481, 482, 487, 490, 491, 502, 503, 504, 505, 516, 517, 518, 520, 522, 529, 530, 532, 533, 534, 536, 537, 538, 545, 546, 549, 550, 551, 552, 554, 561, 562, 563, 564, 565, 566, 567, 568, 577, 578, 580, 581, 582, 583, 591, 592, 593, 595, 596, 597, 605, 606, 607, 609, 610, 614, 620, 621, 622, 624, 625, 626, 630, 636, 637, 638, 640, 648, 649, 650, 651, 653, 654, 655, 664, 665, 666, 667, 668, 669, 670, 678, 679, 680, 681, 682, 684, 688, 707, 708, 710, 714, 715, 728, 729, 733, 736, 740, 741, 748, 749, 750, 751, 755, 760, 761, 762, 763, 770, 771, 772, 773, 780, 781, 782, 783, 789, 791, 792, 793, 794, 801, 802, 803, 804, 810, 816, 820, 822, 826], "compact": [24, 25, 45, 46, 64, 65, 84, 85, 103, 104, 122, 123, 141, 142, 158, 159, 175, 176, 192, 193, 210, 211, 229, 230, 247, 248, 265, 266, 284, 285, 305, 306, 393, 394, 413, 414, 425, 426, 445, 446, 465, 466, 488, 489, 506, 507, 523, 524, 539, 540, 555, 556, 569, 570, 584, 585, 598, 599, 611, 612, 627, 628, 641, 642, 656, 657, 671, 672, 685, 686, 734, 735, 752, 753, 764, 765, 774, 775, 784, 785, 795, 796, 805, 806], "compani": 509, "company_nam": 509, "compar": 72, "comparison": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 733, 751, 763, 773, 783, 794, 804], "compas_model": [396, 416, 448, 468, 491, 702, 713, 716, 719, 788], "compas_rhino": 814, "compas_timb": [0, 10, 16, 22, 27, 31, 37, 43, 48, 50, 56, 68, 74, 87, 93, 106, 112, 125, 131, 144, 150, 161, 167, 178, 184, 195, 201, 213, 219, 232, 238, 250, 256, 268, 274, 287, 294, 308, 309, 317, 322, 330, 332, 336, 342, 360, 367, 368, 369, 398, 418, 428, 450, 470, 493, 494, 495, 496, 499, 509, 512, 515, 520, 521, 526, 529, 532, 533, 534, 542, 545, 549, 550, 558, 561, 563, 566, 567, 572, 573, 576, 578, 582, 587, 590, 595, 596, 601, 604, 609, 614, 615, 616, 617, 620, 622, 630, 631, 632, 635, 644, 648, 653, 655, 659, 663, 668, 669, 674, 675, 678, 680, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 702, 743, 745, 755, 758, 768, 778, 788, 789, 799, 809, 810, 813, 814], "compat": [11, 14, 32, 35, 50, 51, 54, 68, 69, 72, 87, 88, 91, 106, 107, 110, 126, 129, 145, 148, 161, 162, 165, 178, 179, 182, 195, 196, 199, 213, 214, 217, 232, 233, 236, 250, 251, 254, 268, 269, 272, 288, 291, 292, 308, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800], "compet": 810, "compil": 814, "complet": [87, 125, 213, 268, 470], "complex": 813, "compli": [14, 35, 54, 110, 148, 165, 182, 199, 254, 292], "complianc": 324, "compon": [330, 332, 690, 691, 693, 694, 695, 696, 814, 818, 819, 820, 822, 823, 825, 828], "componen": 816, "compos": 825, "comput": [23, 29, 30, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 374, 375, 376, 377, 378, 391, 401, 402, 404, 405, 412, 424, 432, 433, 434, 435, 436, 444, 453, 454, 455, 456, 457, 464, 473, 474, 475, 476, 477, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 707, 708, 733, 751, 763, 773, 783, 794, 804], "computation": 825, "concaten": 818, "concept": [811, 816], "concret": [22, 43], "condit": 815, "cone": [526, 535, 542, 553], "cone_angl": [195, 526, 535, 542, 553, 824], "configur": 616, "connect": [0, 10, 11, 16, 22, 27, 31, 32, 37, 43, 48, 50, 51, 56, 68, 69, 74, 87, 88, 93, 106, 107, 112, 125, 126, 131, 144, 145, 150, 161, 162, 167, 178, 179, 184, 195, 196, 201, 213, 214, 219, 232, 233, 238, 250, 251, 256, 268, 269, 274, 287, 288, 294, 308, 360, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 709, 713, 746, 759, 769, 779, 790, 800, 813, 815, 824, 825], "connectionsolv": [732, 813], "consid": [28, 29, 30, 309, 311, 315, 322, 324, 329, 341, 360, 362, 366, 709, 824], "consist": 29, "constant": 360, "construct": [18, 19, 26, 39, 40, 47, 58, 59, 67, 76, 77, 86, 95, 96, 105, 114, 115, 124, 133, 134, 143, 152, 153, 160, 169, 170, 177, 186, 187, 194, 204, 205, 212, 221, 222, 231, 240, 241, 249, 258, 259, 267, 276, 277, 286, 297, 298, 307, 384, 385, 397, 407, 408, 417, 421, 422, 427, 438, 439, 449, 459, 460, 469, 481, 482, 492, 503, 504, 508, 517, 518, 520, 525, 536, 537, 541, 551, 552, 557, 563, 564, 565, 566, 567, 571, 580, 581, 586, 592, 593, 595, 600, 606, 607, 613, 624, 625, 629, 637, 638, 639, 643, 650, 651, 658, 665, 666, 673, 681, 682, 687, 714, 715, 742, 749, 750, 754, 761, 762, 767, 771, 772, 777, 781, 782, 787, 792, 793, 798, 802, 803, 808, 813, 820], "constructor": [16, 330, 566], "contain": [9, 16, 18, 19, 20, 21, 28, 37, 39, 40, 41, 42, 56, 58, 59, 60, 61, 74, 76, 77, 79, 80, 93, 95, 96, 98, 99, 112, 114, 115, 118, 119, 131, 133, 134, 136, 137, 150, 152, 153, 154, 155, 167, 169, 170, 171, 172, 184, 186, 187, 188, 189, 201, 204, 205, 206, 207, 219, 221, 222, 224, 225, 238, 240, 241, 242, 243, 256, 258, 259, 260, 261, 274, 276, 277, 279, 280, 294, 297, 298, 299, 300, 308, 311, 316, 317, 324, 330, 332, 362, 369, 384, 385, 407, 408, 421, 422, 438, 439, 450, 459, 460, 470, 481, 482, 493, 503, 504, 517, 518, 536, 537, 551, 552, 564, 565, 580, 581, 592, 593, 606, 607, 624, 625, 637, 638, 650, 651, 665, 666, 681, 682, 697, 699, 702, 712, 714, 715, 718, 721, 723, 736, 745, 749, 750, 761, 762, 771, 772, 781, 782, 789, 792, 793, 802, 803, 809], "content": 822, "context": 9, "continu": 813, "contract": 815, "contribut": [813, 816], "contributor": 810, "control": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 733, 751, 763, 773, 783, 794, 804], "convent": 819, "convers": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800], "convert": [11, 24, 25, 32, 45, 46, 51, 64, 65, 69, 84, 85, 88, 103, 104, 107, 122, 123, 126, 141, 142, 145, 158, 159, 162, 175, 176, 179, 192, 193, 196, 210, 211, 214, 229, 230, 233, 247, 248, 251, 265, 266, 269, 284, 285, 288, 305, 306, 330, 370, 393, 394, 399, 413, 414, 419, 425, 426, 429, 445, 446, 451, 465, 466, 471, 488, 489, 497, 500, 506, 507, 510, 513, 523, 524, 527, 539, 540, 543, 555, 556, 559, 569, 570, 574, 584, 585, 588, 598, 599, 602, 611, 612, 618, 627, 628, 633, 641, 642, 645, 656, 657, 660, 671, 672, 676, 685, 686, 698, 734, 735, 746, 752, 753, 759, 764, 765, 769, 774, 775, 779, 784, 785, 790, 795, 796, 800, 805, 806], "coordin": [369, 378, 405, 418, 428, 436, 457, 477, 496, 512, 526, 542, 553, 558, 573, 587, 601, 617, 644, 659, 675, 683, 819], "copi": [396, 416, 448, 468, 491, 729, 731, 738, 739, 741, 815], "copy_guid": [15, 36, 55, 73, 92, 111, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293, 379, 406, 420, 437, 458, 478, 502, 516, 530, 546, 562, 577, 591, 605, 621, 636, 649, 664, 679, 710, 748, 760, 770, 780, 791, 801], "copyright": 815, "corner": [496, 824], "correct": [18, 19, 39, 40, 58, 59, 76, 77, 95, 96, 114, 115, 133, 134, 152, 153, 169, 170, 186, 187, 204, 205, 221, 222, 240, 241, 258, 259, 276, 277, 297, 298, 362, 384, 385, 407, 408, 421, 422, 438, 439, 459, 460, 481, 482, 503, 504, 517, 518, 536, 537, 551, 552, 564, 565, 580, 581, 592, 593, 606, 607, 614, 624, 625, 637, 638, 650, 651, 665, 666, 681, 682, 714, 715, 749, 750, 761, 762, 771, 772, 781, 782, 792, 793, 802, 803], "correctli": [479, 614, 818], "correspond": [195, 250, 369, 380, 499, 818, 819, 824, 827], "could": [52, 70, 89, 108, 163, 180, 197, 215, 234, 252, 289, 494, 495, 535, 553, 623, 652, 667, 683, 743], "coupl": 418, "cpython": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800], "crate": 824, "creat": [10, 13, 31, 50, 52, 53, 68, 70, 87, 89, 90, 106, 108, 109, 125, 144, 161, 163, 164, 178, 180, 181, 195, 197, 198, 213, 215, 216, 232, 234, 235, 250, 252, 253, 268, 271, 287, 289, 290, 322, 330, 342, 382, 383, 396, 416, 448, 468, 480, 491, 519, 529, 535, 545, 553, 579, 594, 608, 609, 620, 623, 648, 652, 663, 667, 678, 683, 811, 813, 814, 816, 817, 818, 819, 820, 822, 824, 825, 828], "creategeometri": [820, 825], "creation": [14, 35, 54, 72, 91, 110, 129, 148, 165, 182, 199, 217, 236, 254, 272, 292, 824], "criteria": 818, "cross": [22, 29, 43, 50, 62, 66, 68, 82, 101, 120, 125, 139, 156, 161, 173, 178, 190, 195, 208, 213, 227, 232, 244, 250, 262, 282, 287, 291, 303, 369, 382, 383, 535, 553, 623, 652, 659, 667, 683, 819, 820, 824], "cross_beam": [50, 68, 87, 125, 161, 178, 195, 213, 232, 250, 268, 287, 812], "cross_beam_guid": 250, "current": [15, 36, 55, 73, 92, 111, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293, 379, 406, 420, 437, 458, 478, 502, 516, 530, 546, 562, 577, 591, 605, 621, 636, 649, 664, 679, 710, 748, 760, 770, 780, 791, 801, 813], "curv": 819, "custom": 813, "custom_dimens": 820, "cut": [50, 87, 125, 195, 202, 213, 232, 268, 287, 499, 512, 515, 519, 520, 521, 526, 529, 531, 532, 533, 534, 535, 542, 545, 547, 548, 549, 550, 553, 561, 572, 573, 576, 578, 579, 582, 587, 590, 594, 595, 596, 601, 604, 608, 609, 614, 615, 616, 617, 620, 622, 623, 630, 631, 635, 639, 644, 648, 652, 653, 655, 659, 663, 667, 668, 669, 674, 675, 678, 680, 683, 688, 689, 816, 819, 824, 825], "cut_plane_bia": [87, 125, 213, 268, 824], "cutoff": [106, 824], "cutter": [202, 531, 547], "cylind": [563, 789], "cylindr": 823, "damag": 815, "data": [15, 18, 19, 23, 24, 25, 26, 36, 39, 40, 44, 45, 46, 47, 55, 58, 59, 63, 64, 65, 67, 73, 76, 77, 83, 84, 85, 86, 92, 95, 96, 102, 103, 104, 105, 111, 114, 115, 121, 122, 123, 124, 130, 133, 134, 140, 141, 142, 143, 149, 152, 153, 157, 158, 159, 160, 166, 169, 170, 174, 175, 176, 177, 183, 186, 187, 191, 192, 193, 194, 200, 204, 205, 209, 210, 211, 212, 218, 221, 222, 228, 229, 230, 231, 237, 240, 241, 246, 247, 248, 249, 255, 258, 259, 264, 265, 266, 267, 273, 276, 277, 283, 284, 285, 286, 293, 297, 298, 304, 305, 306, 307, 379, 384, 385, 391, 393, 394, 397, 406, 407, 408, 412, 413, 414, 417, 418, 420, 421, 422, 424, 425, 426, 427, 437, 438, 439, 444, 445, 446, 449, 458, 459, 460, 464, 465, 466, 469, 478, 481, 482, 487, 488, 489, 492, 499, 502, 503, 504, 505, 506, 507, 508, 509, 516, 517, 518, 522, 523, 524, 525, 530, 536, 537, 538, 539, 540, 541, 546, 551, 552, 554, 555, 556, 557, 562, 564, 565, 568, 569, 570, 571, 577, 580, 581, 583, 584, 585, 586, 591, 592, 593, 597, 598, 599, 600, 605, 606, 607, 610, 611, 612, 613, 621, 624, 625, 626, 627, 628, 629, 636, 637, 638, 640, 641, 642, 643, 649, 650, 651, 654, 656, 657, 658, 664, 665, 666, 670, 671, 672, 673, 679, 681, 682, 684, 685, 686, 687, 710, 714, 715, 733, 734, 735, 737, 738, 739, 742, 745, 748, 749, 750, 751, 752, 753, 754, 758, 760, 761, 762, 763, 764, 765, 767, 770, 771, 772, 773, 774, 775, 777, 780, 781, 782, 783, 784, 785, 787, 789, 791, 792, 793, 794, 795, 796, 798, 801, 802, 803, 804, 805, 806, 808, 822, 826], "datastructur": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 375, 391, 402, 412, 424, 433, 434, 444, 454, 455, 464, 474, 475, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 707, 708, 728, 730, 733, 738, 739, 740, 741, 751, 763, 773, 783, 794, 804], "de": [22, 43, 62, 82, 101, 120, 139, 156, 173, 190, 208, 227, 244, 262, 282, 303], "deal": 815, "debug": [317, 493, 820, 825, 826], "debug_geometri": 493, "debug_info": [390, 411, 442, 463, 485, 493], "debuginfo": [820, 825], "debuginfom": 813, "deeper": [87, 125, 213, 268], "default": [11, 15, 32, 36, 50, 51, 55, 69, 73, 87, 88, 92, 107, 111, 125, 126, 130, 145, 149, 162, 166, 179, 183, 196, 200, 213, 214, 218, 233, 237, 245, 251, 255, 263, 268, 269, 273, 288, 293, 311, 324, 342, 362, 370, 379, 382, 383, 399, 406, 419, 420, 428, 429, 437, 451, 458, 471, 478, 500, 502, 509, 513, 516, 519, 527, 530, 535, 543, 546, 553, 558, 559, 562, 574, 577, 579, 588, 591, 594, 601, 602, 605, 608, 618, 621, 623, 633, 636, 645, 649, 652, 660, 664, 667, 676, 679, 683, 691, 695, 698, 709, 710, 724, 728, 729, 730, 731, 746, 748, 759, 760, 769, 770, 779, 780, 790, 791, 800, 801, 813, 819, 820, 825, 827], "defin": [12, 33, 34, 127, 128, 146, 195, 202, 250, 270, 325, 335, 337, 382, 418, 519, 531, 547, 553, 608, 683, 818, 819, 820, 824, 827, 828], "define_dovetail_tool": [553, 683], "definit": [315, 329, 341, 366, 817, 825], "degre": 558, "delai": [330, 332], "delet": [691, 695], "deleteattribut": 818, "demo": 821, "depend": [380, 382, 383, 814, 817, 824], "depth": [50, 178, 195, 232, 245, 250, 287, 526, 535, 542, 553, 558, 587, 601, 608, 617, 623, 639, 644, 659, 675, 683, 812, 824], "depth_limit": 558, "deriv": 817, "describ": [10, 817], "desigen": [29, 30], "design": [0, 308, 309, 317, 322, 330, 332, 336, 342, 360, 367, 368, 810, 813, 816, 818, 819], "design2machin": 817, "desir": 827, "detail": [1, 816], "detect": [27, 825], "detected_topo": 697, "determin": [195, 316, 342, 824], "dev": 814, "develop": [810, 813], "deviat": 827, "dfab": 810, "diamet": [10, 68, 195, 202, 418, 531, 547, 558, 566, 567, 573, 579, 823, 824], "dict": [31, 309, 322, 360, 418, 496, 497, 601, 697, 701, 817], "dictionari": [31, 616], "did": [14, 35, 54, 110, 148, 165, 182, 199, 254, 292], "differ": [16, 697, 755, 811, 817, 820, 824], "differec": 418, "digest": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 733, 751, 763, 773, 783, 794, 804], "digit": 810, "dimens": [68, 72, 369, 386, 768, 819], "direct": [369, 381, 382, 383, 386, 690, 730, 731, 809, 819, 820, 828], "directli": [31, 125, 322, 450, 699, 700, 820, 824], "directrul": 813, "disabl": 825, "displai": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800, 818, 826], "distanc": [28, 29, 30, 309, 311, 315, 322, 324, 329, 341, 360, 362, 366, 526, 542, 608, 617, 675, 709, 820, 825], "distribut": 815, "do": [125, 529, 545, 620, 648, 663, 678, 815, 817], "doblecut": 824, "docstr": 470, "document": [815, 817, 818, 819, 827], "doe": [16, 37, 56, 74, 93, 112, 131, 144, 147, 150, 167, 184, 201, 219, 238, 256, 274, 294, 311, 324, 362, 398, 515, 561, 576, 590, 604, 635, 755, 817, 819], "doi": 810, "done": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 118, 119, 136, 137, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 279, 280, 299, 300], "doubl": [232, 287, 512, 519, 520, 644, 659, 674, 824], "doublecut": [813, 823, 824], "dovetail": [195, 202, 526, 531, 532, 533, 535, 542, 547, 548, 549, 553, 683], "dovetail_shap": [195, 824], "dovetailmortis": 813, "dovetailtenon": [535, 683, 813], "dowel": [398, 824], "down": 824, "downstream": [330, 332], "drawn": 819, "drill": [68, 573, 595, 813], "drillhol": [573, 579], "drillhole_diam": [68, 573, 579, 824], "drop": 824, "dure": [22, 23, 43, 44, 63, 71, 83, 102, 121, 140, 157, 174, 191, 195, 209, 228, 246, 264, 283, 304, 317, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 724, 733, 751, 763, 773, 783, 789, 794, 804], "dynam": [820, 824], "e": [22, 29, 43, 519, 535, 553, 579, 594, 608, 623, 652, 667, 683, 811, 818, 827], "each": [10, 20, 21, 31, 41, 42, 60, 61, 79, 80, 98, 99, 118, 119, 136, 137, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 279, 280, 299, 300, 381, 745, 817, 818, 824, 826], "easi": 816, "eclips": 811, "ecosystem": 813, "edg": [342, 369, 526, 535, 542, 553, 572, 617, 623, 639, 675, 683, 703, 820, 824], "edge_stud": [342, 820, 824], "edge_stud_offset": 820, "edgepositiontyp": [573, 813], "edit": 814, "editor": 811, "either": [87, 125, 213, 268, 380, 512, 526, 542, 573, 587, 601, 617, 644, 659, 675, 690, 820], "element": [0, 10, 13, 14, 16, 17, 35, 37, 38, 54, 56, 57, 72, 74, 75, 91, 93, 94, 110, 112, 113, 125, 129, 131, 132, 148, 150, 151, 165, 167, 168, 182, 184, 185, 199, 201, 203, 217, 219, 220, 236, 238, 239, 250, 254, 256, 257, 272, 274, 275, 292, 294, 296, 308, 309, 311, 315, 316, 322, 324, 325, 329, 330, 332, 335, 337, 341, 342, 360, 362, 366, 369, 374, 375, 376, 377, 378, 380, 390, 395, 396, 398, 401, 402, 404, 405, 411, 415, 416, 418, 423, 428, 432, 433, 434, 435, 436, 442, 447, 448, 450, 453, 454, 455, 456, 457, 463, 467, 468, 470, 473, 474, 475, 476, 477, 485, 490, 491, 494, 495, 497, 515, 520, 521, 529, 532, 533, 534, 545, 549, 550, 558, 561, 563, 566, 567, 576, 578, 582, 590, 595, 596, 604, 609, 614, 620, 622, 630, 635, 648, 653, 655, 663, 668, 669, 678, 680, 688, 697, 699, 700, 702, 703, 706, 711, 713, 716, 717, 718, 720, 722, 725, 726, 788, 789, 809, 813, 825], "element_geometri": 495, "element_id": 789, "element_lists_to_intersect": 353, "element_loop": 355, "element_on": 346, "element_two": 346, "elementnod": [699, 700], "elements_held": 789, "encod": 818, "encompass": 813, "encount": 724, "end": [10, 20, 21, 31, 41, 42, 50, 60, 61, 68, 79, 80, 87, 98, 99, 106, 118, 119, 136, 137, 154, 155, 161, 171, 172, 178, 188, 189, 195, 206, 207, 213, 224, 225, 232, 242, 243, 250, 260, 261, 279, 280, 287, 299, 300, 369, 371, 380, 381, 383, 512, 542, 573, 587, 601, 616, 631, 639, 644, 659, 675, 824], "end_point": 383, "endpoint": [380, 383], "enlarg": 308, "ensur": 614, "entail": [813, 818], "entir": 398, "entiti": 813, "entri": 818, "enum": [572, 615, 631, 674, 689, 743], "enumer": 48, "envelop": 470, "environ": [690, 691, 695, 696, 811, 813, 814, 819], "equal": [369, 639], "equival": [535, 623], "error": [0, 1, 317, 319, 320, 321, 374, 377, 401, 404, 432, 435, 453, 456, 473, 476, 493, 494, 495, 561, 724, 813, 818, 820, 825], "essenti": 498, "et": 497, "etc": [369, 428, 778, 811, 813, 819], "eth": [810, 813], "event": 815, "everi": 824, "exactli": 639, "exampl": [22, 23, 43, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 308, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 702, 733, 751, 763, 773, 783, 794, 804, 813, 816, 818, 819, 828], "exceed": [311, 362, 578, 579], "except": [493, 494, 495, 703, 724], "exclud": [24, 25, 45, 46, 64, 65, 84, 85, 103, 104, 122, 123, 141, 142, 158, 159, 175, 176, 192, 193, 210, 211, 229, 230, 247, 248, 265, 266, 284, 285, 305, 306, 393, 394, 413, 414, 425, 426, 445, 446, 465, 466, 488, 489, 506, 507, 523, 524, 539, 540, 555, 556, 569, 570, 584, 585, 598, 599, 611, 612, 627, 628, 641, 642, 656, 657, 671, 672, 685, 686, 734, 735, 752, 753, 764, 765, 774, 775, 784, 785, 795, 796, 805, 806], "execut": [71, 743, 789, 811], "exist": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 647, 660, 661, 676, 698, 702, 719, 746, 759, 769, 779, 790, 800, 817], "expand": 813, "expect": [16, 37, 56, 74, 93, 112, 131, 150, 167, 184, 201, 219, 238, 256, 274, 294, 311, 616], "expected_kei": 616, "expens": 825, "explain": 816, "express": [697, 815], "extend": [50, 371, 381, 724, 824], "extens": [12, 33, 52, 53, 70, 71, 89, 108, 109, 127, 146, 163, 180, 181, 197, 215, 216, 234, 252, 270, 271, 289, 290, 371, 381, 388, 390, 411, 442, 463, 485, 724], "extra": 418, "extract": [819, 826], "extrus": 428, "f": 30, "fabric": [0, 418, 496, 499, 509, 512, 520, 526, 542, 558, 566, 567, 572, 573, 587, 595, 601, 615, 616, 617, 631, 632, 644, 659, 674, 675, 689, 810, 813, 816], "face": [20, 21, 23, 41, 42, 44, 50, 60, 61, 63, 79, 80, 83, 98, 99, 102, 118, 119, 121, 136, 137, 140, 154, 155, 157, 171, 172, 174, 188, 189, 191, 206, 207, 209, 224, 225, 228, 242, 243, 246, 260, 261, 264, 279, 280, 283, 299, 300, 304, 369, 381, 391, 412, 424, 444, 464, 480, 487, 498, 505, 522, 538, 542, 554, 568, 583, 597, 610, 614, 616, 626, 639, 640, 654, 670, 675, 684, 733, 751, 763, 773, 783, 794, 804, 824], "face_index": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 118, 119, 136, 137, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 279, 280, 299, 300], "face_limited_back": 616, "face_limited_bottom": 616, "face_limited_end": 616, "face_limited_front": 616, "face_limited_start": 616, "face_limited_top": 616, "factor": [730, 731], "factori": 817, "fail": [529, 545, 620, 648, 663, 678], "fals": [15, 23, 24, 25, 28, 36, 44, 45, 46, 50, 55, 63, 64, 65, 73, 83, 84, 85, 92, 102, 103, 104, 111, 121, 122, 123, 130, 140, 141, 142, 149, 157, 158, 159, 166, 174, 175, 176, 183, 191, 192, 193, 200, 209, 210, 211, 218, 228, 229, 230, 237, 246, 247, 248, 255, 264, 265, 266, 273, 283, 284, 285, 293, 304, 305, 306, 311, 314, 324, 328, 337, 340, 362, 365, 376, 379, 391, 393, 394, 406, 412, 413, 414, 420, 424, 425, 426, 434, 437, 444, 445, 446, 455, 458, 464, 465, 466, 475, 478, 487, 488, 489, 502, 505, 506, 507, 516, 522, 523, 524, 526, 530, 538, 539, 540, 542, 546, 554, 555, 556, 562, 568, 569, 570, 577, 583, 584, 585, 591, 597, 598, 599, 605, 608, 610, 611, 612, 617, 621, 626, 627, 628, 636, 640, 641, 642, 649, 652, 654, 656, 657, 664, 667, 670, 671, 672, 675, 679, 683, 684, 685, 686, 710, 724, 733, 734, 735, 748, 751, 752, 753, 760, 763, 764, 765, 770, 773, 774, 775, 780, 783, 784, 785, 791, 794, 795, 796, 801, 804, 805, 806, 820, 825], "fast": 813, "fasten": [10, 13, 418, 494, 813], "fastenerapplicationerror": [1, 813], "fastenertimberinterfac": [10, 13, 813], "feasibl": 724, "featru": [232, 824], "featur": [12, 13, 31, 33, 34, 53, 71, 90, 109, 127, 128, 144, 146, 147, 164, 181, 195, 198, 202, 216, 232, 235, 250, 253, 270, 271, 290, 317, 330, 369, 372, 373, 376, 389, 390, 400, 411, 418, 423, 430, 431, 434, 441, 442, 452, 455, 463, 472, 475, 485, 493, 495, 512, 515, 526, 529, 531, 542, 545, 547, 561, 573, 576, 587, 590, 601, 604, 617, 620, 635, 639, 644, 648, 659, 663, 675, 678, 724, 813, 816, 819, 820, 824, 825, 828], "feature_error": 317, "feature_geometri": 495, "featureapplicationerror": [1, 317, 515, 529, 545, 561, 576, 590, 604, 620, 635, 648, 663, 678, 813], "featuredefinit": 813, "fibr": [369, 816], "file": [18, 24, 39, 45, 58, 64, 76, 84, 95, 103, 114, 122, 133, 141, 152, 158, 169, 175, 186, 192, 204, 210, 221, 229, 240, 247, 258, 265, 276, 284, 297, 305, 384, 393, 407, 413, 421, 425, 438, 445, 459, 465, 481, 488, 503, 506, 509, 510, 511, 517, 523, 536, 539, 551, 555, 564, 569, 580, 584, 592, 598, 606, 611, 624, 627, 637, 641, 650, 656, 665, 671, 681, 685, 714, 734, 749, 752, 755, 756, 757, 761, 764, 771, 774, 781, 784, 792, 795, 802, 805, 815, 817, 821, 822], "file_nam": 509, "file_path": 511, "filepath": [18, 24, 39, 45, 58, 64, 76, 84, 95, 103, 114, 122, 133, 141, 152, 158, 169, 175, 186, 192, 204, 210, 221, 229, 240, 247, 258, 265, 276, 284, 297, 305, 384, 393, 407, 413, 421, 425, 438, 445, 459, 465, 481, 488, 503, 506, 517, 523, 536, 539, 551, 555, 564, 569, 580, 584, 592, 598, 606, 611, 624, 627, 637, 641, 650, 656, 665, 671, 681, 685, 714, 734, 749, 752, 756, 757, 761, 764, 771, 774, 781, 784, 792, 795, 802, 805], "filter": [716, 818], "filter_": 716, "final": 828, "find": [28, 308, 498, 713, 809, 819, 824], "find_neighboring_el": 813, "first": [29, 30, 87, 106, 144, 161, 195, 232, 250, 268, 309, 316, 380, 512, 520, 703, 720, 724, 823, 824, 828], "fit": [195, 232, 250, 815, 824], "fix": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800], "flag": 573, "flank": [195, 526, 535, 542, 553], "flank_angl": [195, 526, 535, 542, 553], "flip": [66, 68, 87, 125, 213, 268, 566, 824], "flip_lap_sid": [68, 87, 125, 213, 268, 824], "float": [10, 28, 29, 30, 50, 68, 87, 125, 178, 195, 202, 213, 232, 250, 268, 287, 308, 309, 311, 315, 322, 324, 329, 341, 342, 360, 362, 366, 369, 371, 374, 377, 381, 382, 383, 386, 401, 404, 418, 428, 432, 435, 453, 456, 473, 476, 496, 512, 526, 531, 535, 542, 547, 553, 558, 566, 567, 573, 579, 587, 601, 608, 617, 623, 644, 647, 659, 661, 675, 683, 697, 709, 728, 729, 730, 731, 809, 824], "flush": [820, 824], "follow": [1, 418, 815, 816, 817, 819, 824], "fom": 16, "forg": 814, "fork": 814, "form": 470, "format": [23, 24, 25, 44, 45, 46, 63, 64, 65, 83, 84, 85, 102, 103, 104, 121, 122, 123, 140, 141, 142, 157, 158, 159, 174, 175, 176, 191, 192, 193, 209, 210, 211, 228, 229, 230, 246, 247, 248, 264, 265, 266, 283, 284, 285, 304, 305, 306, 391, 393, 394, 412, 413, 414, 424, 425, 426, 444, 445, 446, 464, 465, 466, 487, 488, 489, 497, 505, 506, 507, 509, 522, 523, 524, 538, 539, 540, 554, 555, 556, 568, 569, 570, 583, 584, 585, 597, 598, 599, 610, 611, 612, 626, 627, 628, 640, 641, 642, 654, 656, 657, 670, 671, 672, 684, 685, 686, 733, 734, 735, 751, 752, 753, 755, 763, 764, 765, 773, 774, 775, 783, 784, 785, 794, 795, 796, 804, 805, 806, 818], "found": 817, "foundat": 810, "four": [818, 824], "fragil": 566, "frame": [20, 21, 31, 41, 42, 60, 61, 79, 80, 98, 99, 118, 119, 136, 137, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 279, 280, 299, 300, 342, 369, 381, 398, 418, 428, 496, 498, 519, 532, 534, 535, 545, 548, 550, 553, 578, 594, 595, 622, 623, 652, 667, 678, 680, 683, 702, 789, 812, 813, 816, 819, 820, 828], "frame_depth": [342, 820], "framework": 813, "free": 815, "french": [573, 582], "frenchridgelap": [68, 813], "from": [18, 19, 23, 24, 25, 29, 39, 40, 44, 45, 46, 58, 59, 63, 64, 65, 76, 77, 83, 84, 85, 95, 96, 102, 103, 104, 114, 115, 121, 122, 123, 133, 134, 140, 141, 142, 152, 153, 157, 158, 159, 169, 170, 174, 175, 176, 186, 187, 191, 192, 193, 195, 204, 205, 209, 210, 211, 221, 222, 228, 229, 230, 240, 241, 246, 247, 248, 250, 258, 259, 264, 265, 266, 276, 277, 283, 284, 285, 297, 298, 304, 305, 306, 342, 382, 383, 384, 385, 388, 389, 391, 393, 394, 398, 407, 408, 412, 413, 414, 418, 421, 422, 424, 425, 426, 438, 439, 441, 444, 445, 446, 459, 460, 464, 465, 466, 480, 481, 482, 487, 488, 489, 498, 503, 504, 505, 506, 507, 509, 517, 518, 519, 520, 521, 522, 523, 524, 526, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 548, 549, 550, 551, 552, 553, 554, 555, 556, 564, 565, 566, 567, 568, 569, 570, 578, 579, 580, 581, 582, 583, 584, 585, 592, 593, 594, 595, 596, 597, 598, 599, 606, 607, 608, 609, 610, 611, 612, 614, 617, 622, 623, 624, 625, 626, 627, 628, 630, 637, 638, 640, 641, 642, 650, 651, 652, 653, 654, 655, 656, 657, 665, 666, 667, 668, 669, 670, 671, 672, 675, 680, 681, 682, 683, 684, 685, 686, 688, 691, 695, 702, 714, 715, 725, 727, 733, 734, 735, 749, 750, 751, 752, 753, 755, 756, 761, 762, 763, 764, 765, 771, 772, 773, 774, 775, 781, 782, 783, 784, 785, 792, 793, 794, 795, 796, 802, 803, 804, 805, 806, 811, 813, 815, 816, 817, 818, 819, 820, 822, 823, 824, 826], "from_obj": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 733, 751, 763, 773, 783, 794, 804], "front": 616, "full": 639, "fullnam": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800], "function": [9, 125, 308, 716, 816, 817], "furnish": 815, "furthest": [579, 820], "futur": 813, "g": [22, 29, 43, 811, 818], "gener": [10, 13, 16, 29, 30, 232, 398, 418, 697, 716, 788, 817, 819, 820, 824, 828], "generated_el": 10, "geometr": [418, 813, 817, 823, 825], "geometri": [342, 369, 375, 376, 377, 378, 395, 396, 398, 401, 402, 403, 404, 405, 415, 416, 418, 428, 433, 434, 435, 436, 447, 448, 453, 454, 455, 456, 457, 467, 468, 473, 474, 475, 476, 477, 490, 491, 493, 495, 496, 515, 520, 529, 532, 533, 534, 545, 549, 550, 561, 563, 566, 567, 576, 578, 582, 590, 595, 596, 604, 609, 614, 620, 622, 630, 635, 648, 653, 655, 663, 667, 668, 669, 678, 680, 688, 707, 708, 728, 729, 731, 736, 740, 741, 789, 809, 813, 816, 819, 820, 825, 826, 827, 828], "geometry_typ": 812, "get": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 711, 716, 717, 733, 751, 763, 773, 783, 794, 804, 814, 816, 818], "get_leaf_subclass": 813, "getcustomattribut": 818, "getstandardattribut": 818, "gettyp": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800], "ghenv": [690, 691, 695, 696], "ghpython": [0, 690, 691, 692, 693, 694, 695, 696, 813, 816], "ghuser": 814, "git": 814, "github": [810, 814], "given": [16, 28, 29, 37, 49, 56, 74, 93, 112, 131, 150, 167, 184, 201, 219, 238, 256, 274, 294, 308, 311, 315, 316, 324, 325, 329, 341, 360, 362, 366, 380, 381, 383, 386, 387, 497, 498, 509, 511, 521, 532, 533, 534, 548, 549, 550, 578, 582, 596, 608, 609, 614, 622, 630, 653, 655, 668, 669, 680, 688, 717, 718, 744, 818], "global": [360, 826], "go": 558, "goe": 418, "gonzalo": 810, "gramazio": [509, 810, 813, 815], "gramaziokohl": 810, "grant": 815, "graph": 703, "grasshopp": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 690, 691, 695, 696, 698, 746, 759, 769, 779, 790, 800, 811, 813, 814, 819, 824, 828], "group": [470, 699, 700, 701, 702, 713, 716, 719, 818], "group_nam": [716, 719], "groupnod": [699, 700, 701, 702], "guess_joint_topology_2beam": 813, "guid": [15, 24, 25, 36, 45, 46, 55, 64, 65, 73, 84, 85, 92, 103, 104, 111, 122, 123, 130, 141, 142, 149, 158, 159, 166, 175, 176, 183, 192, 193, 200, 210, 211, 218, 229, 230, 237, 247, 248, 250, 255, 265, 266, 273, 284, 285, 293, 305, 306, 379, 393, 394, 406, 413, 414, 420, 425, 426, 437, 445, 446, 458, 465, 466, 478, 488, 489, 502, 506, 507, 516, 523, 524, 530, 539, 540, 546, 555, 556, 562, 569, 570, 577, 584, 585, 591, 598, 599, 605, 611, 612, 621, 627, 628, 636, 641, 642, 649, 656, 657, 664, 671, 672, 679, 685, 686, 710, 711, 734, 735, 748, 752, 753, 760, 764, 765, 770, 774, 775, 780, 784, 785, 791, 795, 796, 801, 805, 806, 813, 816, 819, 824], "ha": [18, 19, 39, 40, 58, 59, 71, 76, 77, 95, 96, 114, 115, 133, 134, 152, 153, 169, 170, 186, 187, 204, 205, 221, 222, 240, 241, 258, 259, 276, 277, 297, 298, 308, 384, 385, 407, 408, 421, 422, 438, 439, 459, 460, 481, 482, 493, 503, 504, 517, 518, 536, 537, 551, 552, 564, 565, 580, 581, 592, 593, 606, 607, 624, 625, 637, 638, 650, 651, 665, 666, 681, 682, 702, 714, 715, 749, 750, 761, 762, 771, 772, 781, 782, 789, 792, 793, 802, 803, 819, 824, 827], "half": 824, "halflap": 824, "handl": 813, "handled_pair": [315, 329, 341, 366], "has_group": 702, "hash": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 733, 751, 763, 773, 783, 794, 804], "have": [15, 16, 36, 37, 55, 56, 68, 71, 73, 74, 92, 93, 111, 112, 130, 131, 144, 149, 150, 166, 167, 183, 184, 200, 201, 218, 219, 237, 238, 255, 256, 273, 274, 293, 294, 311, 324, 362, 369, 379, 406, 420, 428, 437, 458, 478, 502, 516, 530, 546, 562, 577, 591, 605, 621, 636, 649, 664, 679, 699, 710, 720, 748, 760, 770, 780, 791, 801, 819], "header": [342, 820, 824], "header_attribut": 817, "heel": [232, 245, 644, 659, 674, 824], "heel_depth": [232, 245, 644, 652, 659, 667, 824], "height": [195, 202, 232, 250, 342, 369, 382, 383, 496, 531, 535, 542, 547, 553, 623, 644, 647, 659, 661, 675, 683, 812, 818, 819, 820, 824], "held": 789, "help": 820, "here": [418, 724, 817, 820, 821, 827], "hereaft": 824, "herebi": 815, "hexadecim": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 733, 751, 763, 773, 783, 794, 804], "hierarchi": [378, 405, 436, 457, 477, 697, 699, 828], "highest": 824, "highli": 824, "holder": 815, "hole": [68, 418, 573, 816, 823, 824], "horizont": [512, 573, 587, 601, 639], "hous": [535, 623], "how": [816, 824, 828], "http": [810, 814, 817], "human": [744, 789], "hybrid": 818, "i": [12, 14, 16, 18, 19, 20, 21, 22, 26, 28, 29, 31, 33, 35, 37, 39, 40, 41, 42, 43, 47, 50, 52, 53, 54, 56, 58, 59, 60, 61, 66, 67, 68, 70, 71, 74, 76, 77, 79, 80, 86, 87, 89, 90, 93, 95, 96, 98, 99, 105, 106, 108, 109, 110, 112, 114, 115, 116, 118, 119, 124, 125, 127, 131, 133, 134, 136, 137, 143, 144, 146, 148, 150, 152, 153, 154, 155, 160, 161, 163, 164, 165, 167, 169, 170, 171, 172, 177, 178, 180, 181, 182, 184, 186, 187, 188, 189, 194, 195, 197, 198, 199, 201, 204, 205, 206, 207, 212, 213, 215, 216, 219, 221, 222, 224, 225, 231, 232, 234, 235, 238, 240, 241, 242, 243, 249, 250, 252, 253, 254, 256, 258, 259, 260, 261, 267, 268, 270, 271, 274, 276, 277, 279, 280, 286, 289, 290, 291, 292, 294, 297, 298, 299, 300, 307, 308, 311, 324, 342, 360, 362, 369, 371, 380, 381, 384, 385, 397, 398, 407, 408, 417, 418, 421, 422, 427, 428, 438, 439, 449, 450, 459, 460, 469, 470, 479, 481, 482, 492, 503, 504, 508, 509, 515, 517, 518, 519, 521, 525, 526, 529, 532, 533, 534, 535, 536, 537, 541, 542, 545, 549, 550, 551, 552, 553, 557, 558, 564, 565, 566, 567, 571, 576, 578, 579, 580, 581, 582, 586, 590, 592, 593, 594, 596, 600, 601, 604, 606, 607, 608, 609, 613, 614, 617, 620, 622, 623, 624, 625, 629, 630, 631, 635, 637, 638, 639, 643, 648, 650, 651, 652, 653, 655, 658, 659, 663, 665, 666, 667, 668, 669, 673, 675, 678, 680, 681, 682, 683, 687, 688, 691, 695, 697, 699, 702, 706, 709, 714, 715, 724, 736, 742, 745, 749, 750, 754, 761, 762, 767, 771, 772, 777, 781, 782, 787, 788, 792, 793, 798, 802, 803, 808, 810, 813, 815, 816, 817, 818, 819, 820, 822, 823, 824, 825, 827, 828], "id": [499, 789, 811], "idea": 816, "identifi": [31, 308, 711], "ignor": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 118, 119, 136, 137, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 279, 280, 299, 300], "ignore_end": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 118, 119, 136, 137, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 279, 280, 299, 300], "imag": 827, "implement": [12, 14, 22, 31, 33, 35, 43, 54, 110, 127, 146, 148, 165, 182, 199, 254, 270, 292, 398, 755, 809, 813], "implemet": 755, "impli": [815, 825], "implicit": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800], "import": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 702, 724, 733, 751, 763, 773, 783, 794, 804, 817, 828], "inclin": [526, 542, 558, 587, 601, 617, 644, 659, 675], "inclination_1": 512, "inclination_2": 512, "includ": [376, 434, 455, 475, 509, 815, 817], "include_featur": [376, 434, 455, 475], "incorpor": 778, "increment": 789, "indent": [24, 25, 45, 46, 64, 65, 84, 85, 103, 104, 122, 123, 141, 142, 158, 159, 175, 176, 192, 193, 210, 211, 229, 230, 247, 248, 265, 266, 284, 285, 305, 306, 393, 394, 413, 414, 425, 426, 445, 446, 465, 466, 488, 489, 506, 507, 523, 524, 539, 540, 555, 556, 569, 570, 584, 585, 598, 599, 611, 612, 627, 628, 641, 642, 656, 657, 671, 672, 685, 686, 734, 735, 752, 753, 764, 765, 774, 775, 784, 785, 795, 796, 805, 806], "independ": [15, 36, 55, 73, 92, 111, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293, 379, 406, 420, 437, 458, 478, 502, 516, 530, 546, 562, 577, 591, 605, 621, 636, 649, 664, 679, 710, 748, 760, 770, 780, 791, 801], "index": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 118, 119, 136, 137, 154, 155, 171, 172, 188, 189, 195, 206, 207, 224, 225, 242, 243, 250, 260, 261, 279, 280, 299, 300, 386, 387, 392, 498, 499, 519, 535, 553, 579, 594, 608, 623, 652, 667, 683, 690, 696, 813, 824], "indic": [382, 383, 493, 573, 818, 819], "inflat": [308, 374, 377, 401, 404, 432, 435, 453, 456, 473, 476, 809], "inflate_bi": [308, 473, 476, 809], "inform": [317, 493, 813, 820, 825, 826, 827], "inherit": [10, 31, 50, 68, 87, 106, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 309, 322, 360, 369, 398, 418, 428, 450, 470, 499, 512, 526, 542, 558, 573, 587, 601, 617, 632, 644, 659, 675, 697, 745, 758, 768, 778, 789, 799, 813, 817], "initi": [195, 390, 411, 442, 463, 485], "inner": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 118, 119, 136, 137, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 279, 280, 299, 300, 824], "input": [29, 308, 418, 690, 691, 695, 816, 817, 818, 819, 820, 822, 823, 824, 825], "input_nam": [695, 696], "insid": [342, 732, 811], "inspect": [317, 826], "instal": 813, "instanc": [10, 11, 16, 18, 19, 32, 37, 39, 40, 50, 51, 56, 58, 59, 68, 69, 74, 76, 77, 87, 88, 93, 95, 96, 106, 107, 112, 114, 115, 125, 126, 131, 133, 134, 144, 145, 150, 152, 153, 161, 162, 167, 169, 170, 178, 179, 184, 186, 187, 195, 196, 201, 204, 205, 213, 214, 219, 221, 222, 232, 233, 238, 240, 241, 250, 251, 256, 258, 259, 268, 269, 274, 276, 277, 287, 288, 294, 297, 298, 337, 370, 384, 385, 399, 407, 408, 418, 419, 421, 422, 429, 438, 439, 451, 459, 460, 471, 481, 482, 500, 503, 504, 513, 515, 517, 518, 519, 521, 527, 529, 532, 533, 534, 535, 536, 537, 543, 545, 548, 549, 550, 551, 552, 553, 559, 563, 564, 565, 574, 576, 578, 579, 580, 581, 582, 588, 590, 592, 593, 594, 596, 602, 604, 606, 607, 608, 609, 614, 618, 620, 622, 623, 624, 625, 630, 633, 635, 637, 638, 639, 645, 647, 648, 650, 651, 652, 653, 655, 660, 661, 663, 665, 666, 667, 668, 669, 676, 678, 680, 681, 682, 683, 688, 698, 704, 714, 715, 746, 749, 750, 759, 761, 762, 769, 771, 772, 779, 781, 782, 790, 792, 793, 800, 802, 803, 811, 817], "instanti": [31, 71, 125, 450, 817], "instead": [16, 31, 566, 819], "instruct": [724, 743, 745, 768, 778, 789, 799, 813], "int": [49, 195, 232, 250, 369, 371, 386, 387, 388, 392, 428, 499, 512, 519, 535, 542, 553, 573, 579, 587, 594, 601, 608, 623, 644, 652, 659, 667, 675, 683, 691, 695, 696, 703, 744, 789], "integ": [195, 250, 369, 428, 824], "intend": [818, 819], "interact": [31, 697, 703, 713, 717, 720, 726, 811, 828], "interaction_typ": 713, "interest": 380, "interfac": [10, 418, 423, 813], "intersect": [27, 28, 29, 30, 116, 309, 311, 315, 322, 324, 329, 341, 360, 362, 366, 515, 561, 576, 590, 604, 635, 639], "introduct": 813, "intuit": 813, "invok": 814, "io": 690, "ironpython": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800], "is_beam": 450, "is_built": 789, "is_group_el": 450, "is_plan": 789, "is_plat": 450, "is_pocket": 608, "is_wal": 450, "issu": 566, "item_input_valid": 813, "iter": 724, "itersect": [529, 545, 620, 648, 663, 678], "its": [11, 20, 21, 24, 25, 32, 41, 42, 45, 46, 51, 60, 61, 64, 65, 69, 79, 80, 84, 85, 88, 98, 99, 103, 104, 107, 118, 119, 122, 123, 126, 136, 137, 141, 142, 145, 154, 155, 158, 159, 162, 171, 172, 175, 176, 179, 188, 189, 192, 193, 195, 196, 206, 207, 210, 211, 214, 224, 225, 229, 230, 233, 242, 243, 247, 248, 250, 251, 260, 261, 265, 266, 269, 279, 280, 284, 285, 288, 299, 300, 305, 306, 370, 378, 382, 390, 393, 394, 399, 405, 411, 413, 414, 419, 425, 426, 429, 436, 442, 445, 446, 451, 457, 463, 465, 466, 471, 477, 485, 488, 489, 500, 506, 507, 513, 523, 524, 527, 539, 540, 543, 555, 556, 559, 569, 570, 574, 584, 585, 588, 598, 599, 602, 611, 612, 618, 627, 628, 633, 639, 641, 642, 645, 656, 657, 660, 671, 672, 676, 685, 686, 698, 711, 734, 735, 746, 752, 753, 759, 764, 765, 769, 774, 775, 779, 784, 785, 790, 795, 796, 800, 805, 806, 814, 818, 824], "jack": [342, 587, 595, 820], "jack_stud": [342, 820, 824], "jackraftercut": [813, 823], "jo": [16, 37, 56, 74, 93, 112, 131, 150, 167, 184, 201, 219, 238, 256, 274, 294], "join": [10, 16, 31, 37, 50, 56, 68, 74, 87, 93, 106, 112, 125, 131, 144, 150, 161, 167, 178, 184, 195, 201, 213, 219, 232, 238, 250, 256, 268, 274, 287, 294, 315, 317, 322, 329, 332, 341, 366, 493, 820, 825], "joineri": 724, "joint": [10, 12, 13, 14, 16, 22, 27, 48, 50, 52, 53, 54, 56, 66, 68, 70, 71, 72, 74, 87, 89, 90, 91, 93, 106, 108, 109, 110, 112, 125, 127, 128, 129, 131, 144, 146, 147, 148, 150, 161, 163, 164, 165, 167, 178, 180, 181, 182, 184, 195, 197, 198, 199, 201, 213, 215, 216, 217, 219, 232, 234, 235, 236, 238, 245, 250, 252, 253, 254, 256, 268, 270, 271, 272, 274, 287, 289, 290, 291, 292, 294, 309, 311, 315, 317, 322, 329, 332, 341, 360, 366, 371, 388, 418, 470, 493, 494, 535, 553, 623, 644, 652, 659, 667, 683, 697, 704, 724, 727, 811, 813, 816, 817, 819, 820, 825, 828], "joint_error": 317, "joint_factori": 817, "joint_kei": [371, 388], "joint_overrid": 820, "joint_typ": [309, 322, 360], "jointdefinit": [315, 329, 341, 366, 813], "jointrul": [309, 315, 322, 329, 360, 366, 813, 825], "jointtopologi": [29, 30, 309, 324, 360, 697, 813], "joist": 819, "json": [18, 19, 24, 25, 39, 40, 45, 46, 58, 59, 64, 65, 76, 77, 84, 85, 95, 96, 103, 104, 114, 115, 122, 123, 133, 134, 141, 142, 152, 153, 158, 159, 169, 170, 175, 176, 186, 187, 192, 193, 204, 205, 210, 211, 221, 222, 229, 230, 240, 241, 247, 248, 258, 259, 265, 266, 276, 277, 284, 285, 297, 298, 305, 306, 384, 385, 393, 394, 407, 408, 413, 414, 421, 422, 425, 426, 438, 439, 445, 446, 459, 460, 465, 466, 481, 482, 488, 489, 503, 504, 506, 507, 517, 518, 523, 524, 536, 537, 539, 540, 551, 552, 555, 556, 564, 565, 569, 570, 580, 581, 584, 585, 592, 593, 598, 599, 606, 607, 611, 612, 624, 625, 627, 628, 637, 638, 641, 642, 650, 651, 656, 657, 665, 666, 671, 672, 681, 682, 685, 686, 714, 715, 734, 735, 749, 750, 752, 753, 755, 756, 757, 761, 762, 764, 765, 771, 772, 774, 775, 781, 782, 784, 785, 792, 793, 795, 796, 802, 803, 805, 806], "just": 418, "k": 360, "kasir": 810, "keep": 824, "keep_connect": 695, "kei": [22, 31, 43, 369, 371, 388, 428, 496, 498, 616, 818], "keyword": [309, 322, 360, 701], "kick": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800], "kind": [815, 824], "king": [342, 820], "king_stud": [342, 820, 824], "kohler": [509, 810, 813, 815], "kwarg": [16, 37, 56, 74, 93, 112, 131, 150, 167, 184, 201, 219, 238, 256, 274, 294, 309, 322, 360, 479, 480, 520, 567, 595, 699, 701], "l": [50, 68, 87, 106, 125, 250, 360, 368, 826], "l_default": 368, "lap": [68, 87, 125, 213, 268, 368, 573, 582, 813], "lapjoint": [68, 72, 87, 213, 268, 813], "larger": [369, 819, 824], "later": [195, 818, 819], "latest": 814, "latter": 819, "layer": 827, "lbuttjoint": 813, "lead": 601, "lead_angl": 601, "lead_angle_parallel": 601, "lead_inclin": 601, "lead_inclination_parallel": 601, "lement": [372, 400, 430, 452, 472], "length": [178, 195, 213, 250, 268, 342, 369, 382, 496, 526, 535, 542, 553, 601, 608, 617, 623, 639, 675, 683, 824], "length_limited_bottom": [526, 542, 617, 675, 683], "length_limited_top": [542, 617, 675, 683], "less": [16, 37, 56, 74, 93, 112, 131, 150, 167, 184, 201, 219, 238, 256, 274, 294, 324, 369], "level": 824, "lfrenchridgelapjoint": 813, "li": [819, 827], "liabil": 815, "liabl": 815, "librari": [810, 811, 813, 816], "licens": 813, "lie": [16, 37, 56, 74, 93, 112, 131, 150, 167, 184, 201, 219, 238, 256, 274, 294], "like": [615, 813, 816, 825], "limit": [526, 542, 558, 601, 615, 616, 617, 659, 675, 683, 815], "limitation_top": 526, "limitationtoptyp": 813, "line": [342, 369, 382, 428, 566, 567, 813, 818, 819, 820, 823], "linear": [768, 819], "lineardimens": 813, "linecurv": 819, "link": 330, "lintel_post": 820, "list": [10, 16, 28, 31, 37, 56, 74, 93, 112, 125, 131, 150, 167, 184, 195, 201, 219, 238, 250, 256, 274, 287, 294, 308, 309, 315, 317, 322, 329, 337, 341, 342, 362, 366, 369, 372, 373, 380, 389, 400, 418, 430, 431, 441, 452, 472, 493, 494, 496, 519, 521, 532, 609, 695, 697, 700, 706, 713, 717, 724, 789, 809, 817, 824, 826], "list_input_valid": 813, "liter": [572, 615, 631, 674, 689], "llapjoint": 813, "lmiterjoint": 813, "local": [369, 558, 819], "locat": [369, 789, 819], "log": [49, 744], "long": [369, 381], "long_edg": 369, "lower": 824, "lowest": 824, "ly": 823, "m": 814, "machin": [195, 250, 369, 521, 532, 533, 534, 548, 549, 550, 578, 582, 596, 601, 609, 614, 616, 622, 630, 653, 655, 668, 669, 680, 688, 817, 822], "machining_limit": 601, "machininglimit": 813, "made": [68, 195, 232, 250, 512, 526, 542, 566, 567, 573, 587, 601, 617, 644, 659, 675, 824], "mai": [1, 818, 825], "main": [10, 22, 29, 43, 50, 62, 66, 68, 82, 101, 120, 125, 139, 156, 161, 173, 178, 190, 195, 208, 213, 227, 232, 244, 250, 262, 282, 287, 303, 553, 623, 652, 667, 683, 824], "main_beam": [50, 68, 87, 125, 161, 178, 195, 213, 232, 250, 268, 287, 608, 812], "main_beam_guid": 250, "maintain": 813, "major": [369, 819], "make": [11, 15, 32, 36, 51, 55, 69, 73, 88, 92, 107, 111, 126, 130, 145, 149, 162, 166, 179, 183, 196, 200, 214, 218, 233, 237, 251, 255, 269, 273, 288, 293, 370, 379, 399, 406, 418, 419, 420, 429, 437, 451, 458, 471, 478, 479, 500, 502, 513, 516, 527, 530, 543, 546, 559, 562, 566, 574, 577, 588, 591, 602, 605, 618, 621, 633, 636, 639, 645, 649, 660, 664, 676, 679, 698, 710, 746, 748, 759, 760, 769, 770, 779, 780, 790, 791, 800, 801], "manage_dynamic_param": 813, "mani": [810, 811, 813], "map": [31, 816, 827], "mapsiz": 827, "margin": [526, 542, 617, 675], "mass": 697, "match": [72, 362, 498, 817, 824], "materi": [369, 428, 699, 705, 706, 721, 819, 827], "mathemat": [29, 30], "max": 825, "max_dist": [28, 29, 30, 309, 311, 315, 322, 324, 329, 341, 360, 362, 366, 367, 709], "maxdist": 825, "maximum": [29, 30, 309, 311, 315, 322, 324, 329, 341, 360, 362, 366, 709], "mayb": 702, "meant": 9, "measur": 386, "meet": 824, "merchant": 815, "merg": 815, "mesh": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 375, 391, 402, 412, 424, 433, 434, 444, 454, 455, 464, 474, 475, 487, 505, 522, 538, 554, 568, 583, 597, 610, 614, 626, 640, 654, 670, 684, 733, 751, 763, 773, 783, 794, 804, 812], "messag": [494, 495], "method": [10, 11, 16, 22, 27, 29, 31, 32, 37, 43, 48, 50, 51, 52, 53, 56, 68, 69, 70, 71, 72, 74, 87, 88, 89, 90, 93, 106, 107, 108, 109, 112, 125, 126, 131, 144, 145, 150, 161, 162, 163, 164, 167, 178, 179, 180, 181, 184, 195, 196, 197, 198, 201, 213, 214, 215, 216, 219, 232, 233, 234, 235, 238, 250, 251, 252, 253, 256, 268, 269, 271, 274, 287, 288, 289, 290, 291, 294, 309, 317, 322, 330, 332, 336, 342, 360, 369, 370, 398, 399, 418, 419, 428, 429, 450, 451, 470, 471, 496, 499, 500, 509, 512, 513, 526, 527, 542, 543, 553, 558, 559, 573, 574, 587, 588, 601, 602, 608, 617, 618, 632, 633, 644, 645, 659, 660, 675, 676, 683, 697, 698, 724, 743, 745, 746, 755, 758, 759, 768, 769, 778, 779, 789, 790, 799, 800, 813, 817], "metric": 381, "middl": [369, 824], "midpoint": 369, "might": [816, 824], "mill": [50, 178, 287, 529, 545, 620, 648, 663, 678, 824], "mill_depth": [50, 178, 287, 824], "mind": 817, "minim": [24, 25, 45, 46, 64, 65, 84, 85, 103, 104, 122, 123, 141, 142, 158, 159, 175, 176, 192, 193, 210, 211, 229, 230, 247, 248, 265, 266, 284, 285, 305, 306, 393, 394, 413, 414, 418, 425, 426, 445, 446, 465, 466, 488, 489, 506, 507, 523, 524, 539, 540, 555, 556, 569, 570, 584, 585, 598, 599, 611, 612, 627, 628, 641, 642, 656, 657, 671, 672, 685, 686, 734, 735, 752, 753, 764, 765, 774, 775, 784, 785, 795, 796, 805, 806], "minimum": 381, "misc": 810, "miss": 818, "mit": 815, "miter": [106, 116, 287, 291, 368], "mm": 558, "mode": 814, "model": [0, 10, 16, 22, 37, 43, 50, 56, 62, 68, 71, 74, 82, 87, 93, 101, 106, 112, 120, 125, 131, 139, 144, 150, 156, 161, 167, 173, 178, 184, 190, 195, 201, 208, 213, 219, 227, 232, 238, 244, 250, 256, 262, 268, 274, 282, 287, 294, 303, 342, 368, 369, 378, 403, 405, 418, 428, 436, 457, 477, 509, 510, 511, 697, 699, 700, 701, 702, 703, 704, 705, 706, 709, 712, 718, 719, 721, 722, 723, 724, 725, 727, 732, 736, 743, 778, 788, 813, 816, 819, 822, 823, 828], "model3d": 813, "model_max_dist": [311, 324, 362], "model_to_xml": 511, "modifi": [495, 736, 815], "modify_cross": [50, 824], "modul": [1, 9, 813, 817], "more": [232, 373, 418, 431, 493, 813, 816, 817, 819, 824], "mortis": [232, 250, 526, 532, 533, 535, 659, 661, 668, 813], "mortise_height": [659, 661], "mortise_width": [659, 661], "most": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 118, 119, 136, 137, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 279, 280, 299, 300], "move": 418, "multipl": [10, 322, 700, 811, 817], "must": [342, 512, 526, 542, 573, 587, 601, 617, 639, 644, 659, 675, 724, 820, 823], "myenvnam": 814, "n": 814, "name": [330, 499, 509, 690, 693, 694, 695, 696, 701, 702, 716, 719, 817, 818, 826], "nation": 810, "nativ": [24, 25, 45, 46, 64, 65, 84, 85, 103, 104, 122, 123, 141, 142, 158, 159, 175, 176, 192, 193, 210, 211, 229, 230, 247, 248, 265, 266, 284, 285, 305, 306, 393, 394, 413, 414, 425, 426, 445, 446, 465, 466, 488, 489, 506, 507, 523, 524, 539, 540, 555, 556, 569, 570, 584, 585, 598, 599, 611, 612, 627, 628, 641, 642, 656, 657, 671, 672, 685, 686, 734, 735, 752, 753, 764, 765, 774, 775, 784, 785, 795, 796, 805, 806], "nccr": 810, "necessari": [52, 70, 71, 89, 108, 163, 180, 197, 215, 234, 252, 289, 814, 817], "need": [29, 330, 418, 817, 818, 828], "neighbor": [28, 308, 809], "neightbor": [28, 809], "neither": 706, "nest": [501, 514, 528, 544, 560, 575, 589, 603, 619, 634, 646, 662, 677], "net": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800], "new": [16, 37, 56, 74, 93, 112, 131, 150, 167, 184, 201, 219, 238, 256, 274, 294, 696, 814, 817, 819], "newlin": [24, 25, 45, 46, 64, 65, 84, 85, 103, 104, 122, 123, 141, 142, 158, 159, 175, 176, 192, 193, 210, 211, 229, 230, 247, 248, 265, 266, 284, 285, 305, 306, 393, 394, 413, 414, 425, 426, 445, 446, 465, 466, 488, 489, 506, 507, 523, 524, 539, 540, 555, 556, 569, 570, 584, 585, 598, 599, 611, 612, 627, 628, 641, 642, 656, 657, 671, 672, 685, 686, 734, 735, 752, 753, 764, 765, 774, 775, 784, 785, 795, 796, 805, 806], "node": [10, 699, 700, 701, 702], "non": 28, "none": [15, 29, 30, 36, 55, 73, 92, 111, 130, 149, 166, 183, 200, 218, 232, 237, 245, 255, 273, 293, 315, 329, 341, 366, 371, 372, 379, 382, 383, 388, 389, 395, 400, 406, 415, 418, 420, 428, 430, 437, 441, 443, 447, 452, 458, 467, 472, 478, 479, 490, 502, 509, 516, 519, 530, 546, 562, 577, 591, 601, 605, 621, 636, 649, 664, 679, 690, 691, 695, 696, 699, 700, 701, 702, 703, 705, 706, 709, 710, 716, 725, 726, 728, 729, 730, 731, 736, 737, 740, 748, 760, 770, 780, 791, 801, 819, 824], "noninfring": 815, "normal": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 118, 119, 136, 137, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 279, 280, 299, 300, 342, 369, 479, 498, 553, 683], "notch": [195, 232, 659, 824], "notch_limit": [659, 667], "notch_width": [659, 667], "note": [12, 33, 127, 146, 270, 308, 699, 810], "notic": 815, "now": 824, "null": 144, "nulljoint": 813, "number": [691, 695, 820, 828], "obb": [377, 404, 435, 456, 476], "obj": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 733, 751, 763, 773, 783, 789, 794, 804], "object": [11, 15, 16, 18, 19, 22, 24, 25, 26, 27, 28, 32, 36, 37, 39, 40, 43, 45, 46, 47, 48, 51, 55, 56, 58, 59, 64, 65, 67, 69, 73, 74, 76, 77, 84, 85, 86, 88, 92, 93, 95, 96, 103, 104, 105, 107, 111, 112, 114, 115, 122, 123, 124, 126, 130, 131, 133, 134, 141, 142, 143, 145, 149, 150, 152, 153, 158, 159, 160, 162, 166, 167, 169, 170, 175, 176, 177, 179, 183, 184, 186, 187, 192, 193, 194, 196, 200, 201, 204, 205, 210, 211, 212, 214, 218, 219, 221, 222, 229, 230, 231, 233, 237, 238, 240, 241, 247, 248, 249, 251, 255, 256, 258, 259, 265, 266, 267, 269, 273, 274, 276, 277, 284, 285, 286, 288, 293, 294, 297, 298, 305, 306, 307, 308, 317, 330, 332, 336, 342, 370, 379, 384, 385, 393, 394, 397, 399, 406, 407, 408, 413, 414, 417, 419, 420, 421, 422, 425, 426, 427, 429, 437, 438, 439, 445, 446, 449, 451, 458, 459, 460, 465, 466, 469, 471, 478, 481, 482, 488, 489, 492, 496, 500, 502, 503, 504, 506, 507, 508, 509, 510, 511, 513, 516, 517, 518, 523, 524, 525, 527, 530, 536, 537, 539, 540, 541, 543, 546, 551, 552, 555, 556, 557, 559, 562, 563, 564, 565, 569, 570, 571, 572, 574, 577, 580, 581, 584, 585, 586, 588, 591, 592, 593, 598, 599, 600, 602, 605, 606, 607, 611, 612, 613, 615, 616, 618, 621, 624, 625, 627, 628, 629, 631, 633, 636, 637, 638, 641, 642, 643, 645, 649, 650, 651, 656, 657, 658, 660, 664, 665, 666, 671, 672, 673, 674, 676, 679, 681, 682, 685, 686, 687, 689, 690, 691, 695, 696, 697, 698, 703, 704, 710, 714, 715, 727, 734, 735, 742, 743, 746, 748, 749, 750, 752, 753, 754, 755, 759, 760, 761, 762, 764, 765, 767, 769, 770, 771, 772, 774, 775, 777, 779, 780, 781, 782, 784, 785, 787, 788, 790, 791, 792, 793, 795, 796, 798, 800, 801, 802, 803, 805, 806, 808, 813, 818, 819, 820, 825, 827], "obtain": 815, "occ": 813, "occur": [317, 493, 724, 826], "offset": [374, 377, 401, 404, 432, 435, 453, 456, 473, 476, 535, 553, 623, 683, 820], "often": 470, "onc": [369, 428, 819], "one": [20, 21, 41, 42, 60, 61, 72, 79, 80, 87, 98, 99, 118, 119, 125, 136, 137, 154, 155, 161, 171, 172, 188, 189, 195, 206, 207, 213, 224, 225, 232, 242, 243, 250, 260, 261, 268, 279, 280, 299, 300, 316, 373, 431, 498, 639, 703, 706, 788, 789, 817, 819, 824, 826], "onli": [12, 14, 22, 33, 35, 43, 54, 68, 110, 127, 146, 148, 165, 182, 199, 254, 270, 292, 311, 324, 362, 376, 434, 455, 475, 724, 818], "onto": 820, "open": [479, 810, 813], "opencascad": 813, "oper": [823, 825], "oppedg": [572, 573], "oppos": 387, "opposit": [50, 572, 824], "option": [12, 14, 15, 20, 21, 23, 24, 25, 28, 29, 30, 33, 35, 36, 41, 42, 44, 45, 46, 54, 55, 60, 61, 63, 64, 65, 73, 79, 80, 83, 84, 85, 92, 98, 99, 102, 103, 104, 106, 110, 111, 118, 119, 121, 122, 123, 127, 130, 136, 137, 140, 141, 142, 146, 148, 149, 154, 155, 157, 158, 159, 165, 166, 171, 172, 174, 175, 176, 182, 183, 188, 189, 191, 192, 193, 195, 199, 200, 206, 207, 209, 210, 211, 218, 224, 225, 228, 229, 230, 237, 242, 243, 246, 247, 248, 254, 255, 260, 261, 264, 265, 266, 270, 273, 279, 280, 283, 284, 285, 292, 293, 299, 300, 304, 305, 306, 308, 309, 311, 315, 322, 324, 329, 341, 342, 360, 362, 366, 369, 374, 376, 379, 391, 393, 394, 401, 406, 412, 413, 414, 418, 420, 424, 425, 426, 428, 432, 434, 437, 444, 445, 446, 453, 455, 458, 464, 465, 466, 473, 475, 478, 487, 488, 489, 502, 505, 506, 507, 509, 516, 519, 522, 523, 524, 530, 535, 538, 539, 540, 546, 553, 554, 555, 556, 562, 568, 569, 570, 577, 579, 583, 584, 585, 591, 594, 597, 598, 599, 601, 605, 608, 610, 611, 612, 621, 623, 626, 627, 628, 636, 640, 641, 642, 649, 652, 654, 656, 657, 664, 667, 670, 671, 672, 679, 683, 684, 685, 686, 691, 695, 699, 700, 701, 702, 703, 706, 709, 710, 716, 724, 726, 728, 729, 730, 731, 733, 734, 735, 748, 751, 752, 753, 760, 763, 764, 765, 770, 773, 774, 775, 780, 783, 784, 785, 791, 794, 795, 796, 801, 804, 805, 806, 819, 828], "order": [29, 308, 316, 330, 362, 788], "orient": [342, 377, 382, 383, 404, 435, 456, 476, 479, 512, 542, 573, 587, 601, 614, 631, 639, 644, 659, 675, 708, 827], "orientationtyp": [512, 542, 573, 587, 601, 644, 659, 675, 813], "origin": [15, 36, 55, 73, 92, 111, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293, 369, 379, 406, 420, 437, 458, 478, 502, 516, 530, 546, 562, 577, 591, 605, 621, 636, 649, 664, 679, 710, 728, 729, 748, 760, 770, 780, 791, 801, 819, 827], "orthogon": [20, 41, 60, 79, 98, 118, 136, 154, 171, 188, 206, 224, 242, 260, 279, 299], "other": [11, 20, 21, 32, 41, 42, 51, 60, 61, 68, 69, 79, 80, 87, 88, 98, 99, 107, 118, 119, 125, 126, 136, 137, 145, 154, 155, 161, 162, 171, 172, 179, 188, 189, 195, 196, 206, 207, 213, 214, 224, 225, 232, 233, 242, 243, 250, 251, 260, 261, 268, 269, 279, 280, 288, 299, 300, 334, 370, 399, 419, 429, 450, 451, 470, 471, 500, 513, 527, 543, 559, 574, 579, 588, 602, 618, 633, 645, 660, 676, 698, 702, 746, 759, 769, 779, 790, 800, 810, 815, 824, 828], "other_beam": 579, "otherwis": [29, 50, 311, 324, 337, 362, 558, 815, 819], "out": 815, "outer": 824, "outlin": [418, 428, 443], "outline_point": 418, "output": [11, 24, 25, 29, 32, 45, 46, 51, 64, 65, 69, 84, 85, 88, 103, 104, 107, 122, 123, 126, 141, 142, 145, 158, 159, 162, 175, 176, 179, 192, 193, 196, 210, 211, 214, 229, 230, 233, 247, 248, 251, 265, 266, 269, 284, 285, 288, 305, 306, 370, 393, 394, 399, 413, 414, 419, 425, 426, 429, 445, 446, 451, 465, 466, 471, 488, 489, 500, 506, 507, 513, 523, 524, 527, 539, 540, 543, 555, 556, 559, 569, 570, 574, 584, 585, 588, 598, 599, 602, 611, 612, 618, 627, 628, 633, 641, 642, 645, 656, 657, 660, 671, 672, 676, 685, 686, 690, 698, 734, 735, 746, 752, 753, 759, 764, 765, 769, 774, 775, 779, 784, 785, 790, 795, 796, 800, 805, 806, 819, 820, 822, 823, 825], "over": 418, "overal": 816, "overlai": 799, "overlap": 824, "overrid": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 360, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800, 820], "overwrit": [824, 828], "own": [755, 824], "packag": [813, 814, 817], "pair": [28, 29, 308, 809, 818], "panel": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 342, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800], "panel_height": 342, "panel_length": 342, "parallel": [386, 601, 608, 639, 789, 819, 824], "param": [693, 694], "paramet": [10, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 73, 74, 76, 77, 79, 80, 83, 84, 85, 86, 87, 92, 93, 95, 96, 98, 99, 102, 103, 104, 105, 106, 111, 112, 114, 115, 118, 119, 121, 122, 123, 124, 125, 130, 131, 133, 134, 136, 137, 140, 141, 142, 143, 144, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 161, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 212, 213, 218, 219, 221, 222, 224, 225, 228, 229, 230, 231, 232, 237, 238, 240, 241, 242, 243, 246, 247, 248, 249, 250, 255, 256, 258, 259, 260, 261, 264, 265, 266, 267, 268, 273, 274, 276, 277, 279, 280, 283, 284, 285, 286, 287, 293, 294, 297, 298, 299, 300, 304, 305, 306, 307, 308, 309, 311, 315, 316, 322, 324, 329, 337, 341, 342, 360, 362, 366, 369, 372, 373, 374, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 404, 406, 407, 408, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 434, 435, 437, 438, 439, 441, 444, 445, 446, 447, 448, 449, 452, 453, 455, 456, 458, 459, 460, 464, 465, 466, 467, 468, 469, 472, 473, 475, 476, 478, 481, 482, 487, 488, 489, 490, 491, 492, 496, 497, 498, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 695, 696, 699, 700, 701, 702, 703, 704, 705, 706, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 748, 749, 750, 751, 752, 753, 754, 756, 757, 760, 761, 762, 763, 764, 765, 767, 770, 771, 772, 773, 774, 775, 777, 780, 781, 782, 783, 784, 785, 787, 788, 791, 792, 793, 794, 795, 796, 798, 801, 802, 803, 804, 805, 806, 808, 809, 817, 818, 827], "parametr": [369, 392, 512, 526, 542, 553, 573, 587, 601, 617, 644, 659, 675, 683, 813], "parent": [699, 700, 701, 702], "pars": 755, "part": [22, 43, 496, 578, 579, 699, 706, 809, 813, 817, 819, 823], "particular": 815, "pass": [16, 30, 309, 322, 360, 381], "path": [18, 24, 39, 45, 58, 64, 76, 84, 95, 103, 114, 122, 133, 141, 152, 158, 169, 175, 186, 192, 204, 210, 221, 229, 240, 247, 258, 265, 276, 284, 297, 305, 384, 393, 407, 413, 421, 425, 438, 445, 459, 465, 481, 488, 503, 506, 509, 511, 517, 523, 536, 539, 551, 555, 564, 569, 580, 584, 592, 598, 606, 611, 624, 627, 637, 641, 650, 656, 665, 671, 681, 685, 714, 734, 749, 752, 756, 757, 761, 764, 771, 774, 781, 784, 792, 795, 802, 805, 822], "pdf": 817, "per": 788, "perhap": 418, "permanent_param_count": [691, 695], "permiss": 815, "permit": 815, "perpendicular": [106, 116, 291, 386, 418, 819], "person": 815, "pip": 814, "place": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 736, 746, 759, 769, 779, 790, 800, 824], "plan": [0, 743, 745, 755, 756, 757, 758, 768, 778, 788, 789, 799, 813], "plana": 667, "planar": [342, 392, 480, 816, 820, 824], "plane": [50, 106, 116, 291, 381, 515, 519, 520, 521, 529, 535, 553, 561, 576, 579, 590, 594, 595, 596, 604, 608, 609, 620, 623, 635, 639, 648, 652, 653, 663, 667, 669, 680, 683, 819, 823, 824, 827], "plane_a": [520, 823], "plane_b": [520, 823], "plate": [342, 418, 450, 697, 813, 820, 825], "pleas": [10, 50, 68, 87, 106, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287, 810], "pln": 381, "plug": 813, "pluggabl": 308, "plugin": [308, 813], "plywood": 428, "pocket": [50, 178, 287, 526, 608, 615, 824], "point": [116, 369, 374, 377, 380, 383, 401, 404, 418, 432, 435, 453, 456, 473, 476, 497, 526, 542, 558, 566, 617, 675, 697, 728, 729, 813, 824, 827], "point_end": 383, "point_start": 383, "polylin": [354, 418, 428, 479], "portion": 815, "posit": [195, 250, 369, 378, 405, 436, 457, 477, 496, 572, 573, 823, 824], "possibl": [48, 330, 818], "post": 342, "potenti": 30, "prefabr": 470, "prehap": 418, "presenc": [644, 659], "present": [811, 824], "pretti": [24, 25, 45, 46, 64, 65, 84, 85, 103, 104, 122, 123, 141, 142, 158, 159, 175, 176, 192, 193, 210, 211, 229, 230, 247, 248, 265, 266, 284, 285, 305, 306, 393, 394, 413, 414, 425, 426, 445, 446, 465, 466, 488, 489, 506, 507, 523, 524, 539, 540, 555, 556, 569, 570, 584, 585, 598, 599, 611, 612, 627, 628, 641, 642, 656, 657, 671, 672, 685, 686, 734, 735, 752, 753, 764, 765, 774, 775, 784, 785, 795, 796, 805, 806], "prevent": 824, "preview": 826, "princip": 579, "print": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800], "prior": 809, "priorit": 66, "prioriti": [499, 789, 824], "process": [71, 195, 250, 315, 329, 330, 341, 366, 369, 496, 499, 515, 520, 529, 545, 558, 561, 566, 567, 576, 590, 595, 604, 620, 635, 648, 663, 678, 724, 813, 816, 817, 828], "process_id": 499, "process_joineri": 71, "process_param": 817, "process_typ": 817, "processing_nam": 499, "produc": 369, "product": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 118, 119, 136, 137, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 279, 280, 291, 299, 300], "programm": 810, "project": [810, 813], "proper": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800], "properli": [10, 50, 68, 87, 106, 125, 144, 161, 178, 195, 213, 232, 250, 268, 287], "provid": [27, 245, 263, 337, 639, 699, 702, 706, 755, 815, 816, 819, 825], "publish": 815, "purpos": 815, "put": [418, 496], "py": 817, "python": [811, 813, 814, 816], "queri": [716, 717, 719], "r": [28, 308, 814], "radian": [728, 729], "radiu": [195, 250, 526, 535, 542, 553, 617, 623, 675, 683, 689, 824], "rafter": [587, 595, 819], "rais": [1, 12, 14, 16, 18, 19, 33, 34, 35, 37, 39, 40, 52, 54, 56, 58, 59, 70, 72, 74, 76, 77, 89, 91, 93, 95, 96, 108, 110, 112, 114, 115, 127, 128, 129, 131, 133, 134, 146, 148, 150, 152, 153, 163, 165, 167, 169, 170, 180, 182, 184, 186, 187, 197, 199, 201, 204, 205, 215, 217, 219, 221, 222, 234, 236, 238, 240, 241, 252, 254, 256, 258, 259, 270, 272, 274, 276, 277, 289, 291, 292, 294, 297, 298, 384, 385, 407, 408, 421, 422, 438, 439, 459, 460, 481, 482, 494, 495, 503, 504, 515, 517, 518, 529, 536, 537, 545, 551, 552, 561, 564, 565, 576, 580, 581, 590, 592, 593, 604, 606, 607, 620, 624, 625, 635, 637, 638, 648, 650, 651, 663, 665, 666, 678, 681, 682, 699, 702, 703, 706, 714, 715, 724, 749, 750, 761, 762, 771, 772, 781, 782, 792, 793, 802, 803], "random": 827, "rang": 824, "rather": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 733, 751, 763, 773, 783, 794, 804], "ratio": 827, "raw": [26, 47, 67, 86, 105, 124, 143, 160, 177, 194, 212, 231, 249, 267, 286, 307, 397, 417, 427, 449, 469, 492, 508, 525, 541, 557, 571, 586, 600, 613, 629, 643, 658, 673, 687, 742, 754, 767, 777, 787, 798, 808, 819], "reason": 724, "recogn": 826, "rectangular": [369, 819], "reder": [526, 542, 617, 675], "ref_edg": 369, "ref_fram": 369, "ref_posit": 573, "ref_sid": [369, 535, 553, 623, 652, 667, 683], "ref_side_index": [386, 499, 519, 535, 553, 579, 594, 608, 623, 652, 667, 683], "refedg": [572, 573], "refer": [22, 43, 62, 82, 101, 120, 139, 156, 173, 190, 208, 227, 244, 262, 282, 303, 369, 386, 387, 392, 470, 498, 499, 512, 519, 526, 535, 542, 553, 558, 566, 572, 573, 579, 587, 594, 601, 608, 617, 623, 644, 652, 659, 667, 675, 683, 813, 816, 817, 818], "referenc": [819, 820], "regard": [308, 535, 623], "register_joint": 817, "reject": 50, "reject_i": [50, 824], "relat": [317, 470, 553, 683, 817], "remain": 824, "remov": [371, 388, 389, 390, 411, 441, 442, 463, 485, 725, 726, 727, 818, 823, 824], "renam": [695, 696], "rename_count": 695, "rename_gh_input": 813, "render": [816, 827], "repositori": 814, "repres": [10, 50, 68, 87, 106, 161, 178, 195, 213, 232, 250, 268, 287, 369, 398, 418, 428, 470, 496, 509, 512, 526, 542, 558, 573, 587, 601, 617, 644, 659, 675, 697, 703, 743, 819, 824], "represent": [11, 24, 25, 32, 45, 46, 49, 51, 64, 65, 69, 84, 85, 88, 103, 104, 107, 122, 123, 126, 141, 142, 145, 158, 159, 162, 175, 176, 179, 192, 193, 196, 210, 211, 214, 229, 230, 233, 247, 248, 251, 265, 266, 269, 284, 285, 288, 305, 306, 370, 393, 394, 399, 413, 414, 418, 419, 425, 426, 429, 445, 446, 451, 465, 466, 471, 488, 489, 500, 506, 507, 513, 523, 524, 527, 539, 540, 543, 555, 556, 559, 569, 570, 574, 584, 585, 588, 598, 599, 602, 611, 612, 618, 627, 628, 633, 641, 642, 645, 656, 657, 660, 671, 672, 676, 685, 686, 698, 734, 735, 744, 746, 752, 753, 759, 764, 765, 769, 774, 775, 779, 784, 785, 790, 795, 796, 800, 805, 806, 817], "request": 392, "requir": [12, 14, 33, 35, 53, 54, 90, 109, 110, 127, 146, 148, 164, 165, 181, 182, 198, 199, 216, 235, 253, 254, 270, 271, 290, 292, 330, 371, 388, 814], "requr": 817, "research": [509, 810, 813, 815], "resolv": 813, "respect": [22, 31, 43], "respons": [16, 37, 56, 74, 93, 112, 131, 150, 167, 184, 201, 219, 238, 256, 274, 294, 418], "restor": [22, 43, 62, 82, 101, 120, 139, 156, 173, 190, 208, 227, 244, 262, 282, 303], "restrict": 815, "result": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 118, 119, 136, 137, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 279, 280, 299, 300, 380, 418, 515, 529, 545, 561, 576, 590, 604, 620, 635, 648, 663, 678, 788, 819, 820], "rethink": 398, "retriev": [711, 818], "return": [15, 16, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 36, 37, 39, 40, 41, 42, 44, 46, 47, 49, 55, 56, 58, 59, 60, 61, 63, 65, 67, 73, 74, 76, 77, 79, 80, 83, 85, 86, 92, 93, 95, 96, 98, 99, 102, 104, 105, 111, 112, 114, 115, 116, 118, 119, 121, 123, 124, 130, 131, 133, 134, 136, 137, 140, 142, 143, 149, 150, 152, 153, 154, 155, 157, 159, 160, 166, 167, 169, 170, 171, 172, 174, 176, 177, 183, 184, 186, 187, 188, 189, 191, 193, 194, 200, 201, 204, 205, 206, 207, 209, 211, 212, 218, 219, 221, 222, 224, 225, 228, 230, 231, 237, 238, 240, 241, 242, 243, 246, 248, 249, 255, 256, 258, 259, 260, 261, 264, 266, 267, 273, 274, 276, 277, 279, 280, 283, 285, 286, 293, 294, 297, 298, 299, 300, 304, 306, 307, 308, 311, 315, 316, 324, 325, 329, 335, 337, 341, 362, 366, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 412, 414, 415, 416, 417, 418, 420, 421, 422, 424, 426, 427, 430, 432, 433, 434, 435, 436, 437, 438, 439, 444, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 464, 466, 467, 468, 469, 472, 473, 474, 475, 476, 477, 478, 481, 482, 487, 489, 490, 491, 492, 497, 498, 502, 503, 504, 505, 507, 508, 510, 511, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 529, 530, 532, 533, 534, 535, 536, 537, 538, 540, 541, 545, 546, 549, 550, 551, 552, 553, 554, 556, 557, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 604, 605, 606, 607, 608, 609, 610, 612, 613, 614, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 635, 636, 637, 638, 639, 640, 642, 643, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 690, 691, 695, 696, 699, 700, 701, 702, 703, 705, 706, 707, 708, 710, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 724, 725, 726, 728, 729, 730, 731, 733, 735, 736, 737, 738, 739, 740, 741, 742, 744, 748, 749, 750, 751, 753, 754, 756, 760, 761, 762, 763, 765, 767, 770, 771, 772, 773, 775, 777, 780, 781, 782, 783, 785, 787, 791, 792, 793, 794, 796, 798, 801, 802, 803, 804, 806, 808, 809], "revers": 362, "rework": [29, 30], "rhino": [0, 11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 308, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800, 809, 811, 813, 814, 818, 819, 824, 827], "rhinocero": 813, "rhinocommon": 813, "rhinocurv": 428, "ridg": [68, 573, 582], "right": [386, 815, 824], "robot": [744, 789], "role": [22, 29, 43, 316], "root": [699, 700], "rotat": [195, 250, 542, 553, 558, 675, 683, 730, 731, 740, 741, 819, 824], "round": [195, 250, 526, 542, 617, 675, 689, 824], "rs1": [499, 519, 535, 553, 579, 594, 608, 623, 652, 667, 683], "rs6": 499, "rtree": [28, 809], "rule": [309, 311, 312, 313, 314, 315, 322, 324, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 360, 362, 363, 364, 365, 366, 813, 816, 819, 820, 825, 828], "run": [811, 813], "sai": 819, "same": [15, 29, 36, 50, 55, 68, 73, 92, 111, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293, 379, 386, 406, 420, 437, 458, 478, 502, 516, 530, 546, 562, 577, 591, 605, 621, 636, 649, 664, 679, 702, 710, 748, 760, 770, 780, 788, 789, 791, 801], "save": [24, 25, 45, 46, 62, 64, 65, 82, 84, 85, 101, 103, 104, 120, 122, 123, 139, 141, 142, 156, 158, 159, 173, 175, 176, 190, 192, 193, 208, 210, 211, 227, 229, 230, 244, 247, 248, 262, 265, 266, 282, 284, 285, 303, 305, 306, 393, 394, 413, 414, 425, 426, 445, 446, 465, 466, 488, 489, 506, 507, 523, 524, 539, 540, 555, 556, 569, 570, 584, 585, 598, 599, 611, 612, 627, 628, 641, 642, 656, 657, 671, 672, 685, 686, 734, 735, 752, 753, 764, 765, 774, 775, 784, 785, 795, 796, 805, 806, 822], "scale": [728, 729, 740, 741, 827], "schema": [18, 19, 26, 39, 40, 47, 58, 59, 67, 76, 77, 86, 95, 96, 105, 114, 115, 124, 133, 134, 143, 152, 153, 160, 169, 170, 177, 186, 187, 194, 204, 205, 212, 221, 222, 231, 240, 241, 249, 258, 259, 267, 276, 277, 286, 297, 298, 307, 384, 385, 397, 407, 408, 417, 421, 422, 427, 438, 439, 449, 459, 460, 469, 481, 482, 492, 503, 504, 508, 517, 518, 525, 536, 537, 541, 551, 552, 557, 564, 565, 571, 580, 581, 586, 592, 593, 600, 606, 607, 613, 624, 625, 629, 637, 638, 643, 650, 651, 658, 665, 666, 673, 681, 682, 687, 714, 715, 742, 749, 750, 754, 761, 762, 767, 771, 772, 777, 781, 782, 787, 792, 793, 798, 802, 803, 808], "scienc": 810, "screw": [398, 778], "sdk": 813, "search": [28, 308], "second": [29, 30, 87, 106, 144, 161, 195, 232, 250, 268, 309, 316, 380, 512, 520, 703, 720, 724, 823], "section": [50, 66, 369, 382, 383, 811, 816, 819, 820, 824], "secur": 824, "see": [1, 22, 43, 697, 816, 819, 821, 823, 824, 827], "seem": 418, "select": [820, 824, 826], "self": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800, 817], "sell": 815, "semant": 813, "sens": 418, "sensit": 29, "separ": [16, 818], "sequenc": [724, 788, 813], "sequenti": 824, "serial": [22, 43, 62, 82, 101, 120, 139, 156, 173, 190, 208, 227, 244, 262, 282, 303, 755], "serv": [470, 827], "session": 811, "set": [28, 195, 245, 263, 308, 311, 324, 360, 362, 616, 720, 809, 818, 819, 820, 824, 825], "set_default_joint": 813, "setcustomattribut": 818, "setstandardattribut": 818, "shall": [332, 702, 815], "shape": [195, 232, 250, 369, 418, 428, 526, 535, 542, 553, 595, 617, 623, 644, 659, 674, 675, 683, 689, 824], "shape_radiu": [195, 250, 526, 535, 542, 553, 617, 623, 675, 683, 824], "sheet": 820, "sheeting_insid": 820, "sheeting_outsid": 820, "shift": [87, 125, 213, 268, 824], "shorten": 824, "should": [12, 14, 22, 30, 31, 33, 34, 35, 43, 54, 87, 110, 125, 127, 128, 146, 148, 165, 182, 199, 213, 254, 268, 270, 292, 308, 330, 371, 381, 386, 398, 418, 450, 493, 519, 526, 535, 553, 573, 594, 623, 652, 667, 683, 691, 695, 699, 817, 824], "shouldn": 144, "show": [813, 816], "side": [68, 87, 125, 213, 268, 369, 386, 387, 392, 498, 499, 512, 519, 526, 535, 542, 553, 558, 566, 573, 579, 587, 594, 601, 608, 617, 623, 639, 644, 652, 659, 667, 675, 683, 820, 823, 824], "side_index": [387, 392], "sill": [342, 820, 824], "similar": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800, 824], "simpl": [788, 813, 816], "simplesequencegener": 813, "sinc": [22, 43, 724], "singl": [470, 480, 789, 817], "size": [819, 827], "slab": 470, "slat": 369, "slope": [526, 601, 617], "slot": 813, "small": 639, "small_beam_butt": [50, 66, 824], "smaller": [50, 66, 369, 819], "so": [815, 817], "softwar": [813, 815], "solid": [369, 418, 825], "some": [418, 816, 827], "somewher": 268, "sort": 316, "sourc": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 813, 818, 819], "space": [342, 512, 526, 542, 553, 573, 587, 601, 617, 644, 659, 675, 683, 820], "spatial": [378, 405, 436, 457, 477], "specialist": 813, "specif": [22, 29, 43, 713, 721, 813, 817, 819, 820, 824], "specifi": [639, 711, 820], "squar": [195, 250, 526, 542, 617, 675, 689, 824], "stage": 813, "standard": [369, 820], "start": [195, 250, 369, 371, 380, 381, 383, 512, 526, 535, 542, 553, 558, 573, 587, 601, 616, 617, 623, 631, 644, 659, 675, 683, 816, 819, 824], "start_depth": [195, 250, 526, 535, 542, 553, 587, 617, 623, 675, 683, 824], "start_i": [195, 250, 512, 526, 542, 553, 558, 587, 601, 617, 659, 667, 675, 683, 824], "start_x": [512, 526, 542, 558, 573, 587, 601, 617, 644, 659, 675], "state": [390, 411, 442, 463, 485], "static": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 118, 119, 136, 137, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 279, 280, 299, 300, 312, 313, 314, 315, 326, 327, 328, 329, 338, 339, 340, 341, 363, 364, 365, 366], "step": [232, 245, 529, 545, 620, 644, 648, 659, 663, 674, 678, 745, 747, 788, 813, 817], "step_depth": [232, 245, 644, 652, 659, 667, 824], "step_shap": [232, 644, 659, 824], "stepjoint": 813, "stepjointnotch": [647, 813], "stepshapetyp": [659, 813], "still": 28, "stock": [369, 819], "stop_on_first_error": 724, "store": [22, 43, 818, 819], "str": [18, 19, 23, 24, 25, 31, 39, 40, 44, 45, 46, 49, 58, 59, 63, 64, 65, 76, 77, 83, 84, 85, 95, 96, 102, 103, 104, 114, 115, 121, 122, 123, 133, 134, 140, 141, 142, 152, 153, 157, 158, 159, 169, 170, 174, 175, 176, 186, 187, 191, 192, 193, 204, 205, 209, 210, 211, 221, 222, 228, 229, 230, 240, 241, 246, 247, 248, 250, 258, 259, 264, 265, 266, 276, 277, 283, 284, 285, 297, 298, 304, 305, 306, 309, 380, 384, 385, 391, 393, 394, 407, 408, 412, 413, 414, 421, 422, 424, 425, 426, 438, 439, 444, 445, 446, 459, 460, 464, 465, 466, 481, 482, 487, 488, 489, 493, 494, 495, 496, 498, 499, 503, 504, 505, 506, 507, 509, 510, 511, 517, 518, 522, 523, 524, 526, 535, 536, 537, 538, 539, 540, 542, 551, 552, 553, 554, 555, 556, 564, 565, 568, 569, 570, 580, 581, 583, 584, 585, 592, 593, 597, 598, 599, 606, 607, 610, 611, 612, 617, 623, 624, 625, 626, 627, 628, 637, 638, 640, 641, 642, 644, 650, 651, 654, 656, 657, 659, 665, 666, 670, 671, 672, 675, 681, 682, 683, 684, 685, 686, 690, 695, 696, 701, 702, 711, 714, 715, 716, 719, 733, 734, 735, 744, 749, 750, 751, 752, 753, 756, 757, 761, 762, 763, 764, 765, 771, 772, 773, 774, 775, 781, 782, 783, 784, 785, 789, 792, 793, 794, 795, 796, 802, 803, 804, 805, 806], "straight": [566, 819], "string": [11, 19, 25, 32, 40, 46, 49, 51, 59, 65, 69, 77, 85, 88, 96, 104, 107, 115, 123, 126, 134, 142, 145, 153, 159, 162, 170, 176, 179, 187, 193, 196, 205, 211, 214, 222, 230, 233, 241, 248, 251, 259, 266, 269, 277, 285, 288, 298, 306, 370, 385, 394, 399, 408, 414, 419, 422, 426, 429, 439, 446, 451, 460, 466, 471, 482, 489, 493, 500, 504, 507, 510, 511, 513, 518, 524, 527, 537, 540, 543, 552, 556, 559, 565, 570, 574, 581, 585, 588, 593, 599, 602, 607, 612, 618, 625, 628, 633, 638, 642, 645, 651, 657, 660, 666, 672, 676, 682, 686, 698, 715, 735, 744, 746, 750, 753, 759, 762, 765, 769, 772, 775, 779, 782, 785, 790, 793, 796, 800, 803, 806, 818, 819, 824], "structur": [418, 737, 738, 739, 810, 813, 816, 820, 825, 828], "strut": [644, 659], "strut_height": [659, 667], "strut_inclin": [644, 659], "stud": [342, 369, 819, 820, 824], "stud_direct": 820, "stud_spac": [342, 820], "studio": 811, "stuff": 418, "style": 816, "sub": 125, "subject": 815, "sublicens": 815, "sublim": 811, "subprocess": [501, 514, 528, 544, 560, 575, 589, 603, 619, 634, 646, 662, 677], "substanti": 815, "subtract": [823, 825], "summaris": 824, "support": [309, 311, 789, 810, 811], "suppos": 493, "sure": 479, "surfac": [195, 250, 342, 392, 498, 535, 553, 652, 667, 817, 823], "surfaceassembli": 342, "surfacemodel": 813, "swiss": 810, "system": [369, 428, 498, 558, 819], "t": [125, 144, 161, 178, 195, 213, 232, 250, 360, 368, 826], "t_default": 368, "take": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 566, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800, 817, 828], "taper": [195, 232, 674, 824], "tapered_heel": [232, 652, 659, 667, 674, 824], "taperedheel": [644, 674], "tbirdsmouth": 161, "tbirdsmouthjoint": 813, "tbuttjoint": [22, 43, 812, 813], "tdovetailjoint": 813, "tenon": [232, 250, 542, 548, 549, 553, 623, 644, 647, 655, 689, 813], "tenon_height": [644, 647], "tenon_mortise_height": [232, 824], "tenon_width": [644, 647], "tenonmortis": 250, "tenonmortisejoint": 813, "tenonshapetyp": 813, "text": [799, 811, 822], "text3d": 813, "textur": [816, 827], "than": [16, 23, 37, 44, 56, 63, 74, 83, 93, 102, 112, 121, 131, 140, 150, 157, 167, 174, 184, 191, 201, 209, 219, 228, 238, 246, 256, 264, 274, 283, 294, 304, 324, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 733, 751, 763, 773, 783, 794, 804], "thei": [29, 245, 263, 362, 418, 519, 824, 828], "them": [16, 37, 56, 68, 74, 93, 106, 112, 131, 150, 161, 167, 184, 195, 201, 219, 232, 238, 250, 256, 274, 294, 470, 709, 720, 811, 817, 818, 824], "therefor": [13, 639], "thi": [1, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 99, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 118, 119, 124, 126, 127, 128, 130, 131, 133, 134, 136, 137, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 212, 213, 214, 215, 216, 218, 219, 221, 222, 224, 225, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 267, 268, 269, 270, 271, 273, 274, 276, 277, 279, 280, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 307, 308, 309, 311, 316, 324, 325, 330, 332, 335, 337, 360, 362, 369, 370, 371, 378, 379, 381, 384, 385, 388, 397, 398, 399, 405, 406, 407, 408, 417, 418, 419, 420, 421, 422, 427, 428, 429, 436, 437, 438, 439, 449, 450, 451, 457, 458, 459, 460, 469, 470, 471, 477, 478, 479, 481, 482, 492, 493, 496, 498, 500, 502, 503, 504, 508, 513, 515, 516, 517, 518, 519, 521, 525, 527, 529, 530, 532, 533, 534, 535, 536, 537, 541, 543, 545, 546, 548, 549, 550, 551, 552, 553, 557, 559, 562, 563, 564, 565, 566, 571, 574, 576, 577, 578, 579, 580, 581, 582, 586, 588, 590, 591, 592, 593, 594, 596, 600, 602, 604, 605, 606, 607, 608, 609, 613, 614, 618, 620, 621, 622, 623, 624, 625, 629, 630, 633, 635, 636, 637, 638, 639, 643, 645, 648, 649, 650, 651, 652, 653, 655, 658, 660, 663, 664, 665, 666, 667, 668, 669, 673, 676, 678, 679, 680, 681, 682, 683, 687, 688, 697, 698, 702, 710, 714, 715, 716, 719, 724, 727, 729, 731, 738, 739, 741, 742, 746, 748, 749, 750, 754, 755, 759, 760, 761, 762, 767, 769, 770, 771, 772, 777, 779, 780, 781, 782, 787, 789, 790, 791, 792, 793, 798, 800, 801, 802, 803, 808, 809, 811, 815, 817, 818, 820, 824, 828], "thick": [342, 418, 428, 479, 480, 639, 820], "third": 824, "thought": 418, "three": [287, 824, 828], "through": [30, 87, 125, 213, 268, 381, 418, 558, 566, 810, 824], "tightli": 418, "tilt": 824, "timber": [10, 13, 342, 369, 398, 418, 428, 450, 470, 509, 697, 810, 816, 819, 820, 822, 826, 828], "timberassembli": 812, "timberel": [311, 315, 316, 322, 324, 329, 337, 341, 362, 366, 369, 398, 428, 494, 702, 813], "timbermodel": [16, 37, 56, 74, 93, 112, 131, 150, 167, 184, 201, 219, 238, 256, 274, 294, 510, 511, 813], "titl": 810, "tlapjoint": 813, "todo": [29, 30, 330, 381, 398, 418, 470, 566, 702, 716, 719, 732, 824], "togeth": [16, 37, 56, 74, 93, 112, 131, 150, 167, 184, 201, 219, 238, 256, 274, 294, 470, 819], "tol": [29, 30, 311, 324, 362, 367], "toler": [29, 30, 825], "too": 566, "tool": [27, 195, 202, 526, 531, 542, 547, 553, 683, 813, 816, 824, 826, 827], "tool_angl": [195, 202, 531, 547, 824], "tool_diamet": [195, 202, 531, 547, 824], "tool_height": [195, 202, 531, 547, 824], "top": [526, 542, 615, 616, 617, 675, 683, 816, 824], "topo": 309, "topo_i": 48, "topo_l": [48, 49], "topo_t": [48, 49], "topo_unknown": [48, 49], "topo_x": [48, 49], "topologi": [16, 27, 29, 30, 37, 48, 49, 50, 56, 68, 74, 87, 93, 106, 112, 131, 150, 161, 167, 178, 184, 195, 201, 213, 219, 232, 238, 250, 256, 268, 274, 294, 309, 311, 360, 362, 697, 732, 824, 825, 828], "topology_typ": 360, "topologyrul": 813, "tort": 815, "total": 697, "touch": 28, "tranform": [766, 776, 786, 807], "transform": [330, 378, 405, 436, 457, 477, 728, 729, 730, 731, 737, 739, 740, 741], "translat": [498, 728, 729, 730, 731], "tree": [28, 308, 699], "trim": [10, 50, 53, 106, 109, 164, 178, 181, 198, 216, 235, 253, 271, 287, 290, 582, 614, 823, 825], "true": [15, 20, 21, 23, 24, 25, 28, 36, 41, 42, 44, 45, 46, 50, 55, 60, 61, 63, 64, 65, 66, 68, 73, 79, 80, 83, 84, 85, 87, 92, 98, 99, 102, 103, 104, 106, 111, 118, 119, 121, 122, 123, 125, 130, 136, 137, 140, 141, 142, 149, 154, 155, 157, 158, 159, 166, 171, 172, 174, 175, 176, 183, 188, 189, 191, 192, 193, 200, 206, 207, 209, 210, 211, 213, 218, 224, 225, 228, 229, 230, 232, 237, 242, 243, 246, 247, 248, 255, 260, 261, 264, 265, 266, 268, 273, 279, 280, 283, 284, 285, 293, 299, 300, 304, 305, 306, 311, 324, 325, 335, 337, 362, 376, 379, 381, 391, 393, 394, 406, 412, 413, 414, 418, 420, 424, 425, 426, 434, 437, 444, 445, 446, 450, 455, 458, 464, 465, 466, 475, 478, 487, 488, 489, 502, 505, 506, 507, 516, 522, 523, 524, 526, 530, 538, 539, 540, 542, 546, 554, 555, 556, 558, 562, 568, 569, 570, 577, 583, 584, 585, 591, 597, 598, 599, 605, 608, 610, 611, 612, 617, 621, 626, 627, 628, 636, 640, 641, 642, 649, 654, 656, 657, 659, 664, 670, 671, 672, 675, 679, 683, 684, 685, 686, 695, 702, 710, 718, 719, 720, 724, 733, 734, 735, 748, 751, 752, 753, 760, 763, 764, 765, 770, 773, 774, 775, 780, 783, 784, 785, 791, 794, 795, 796, 801, 804, 805, 806, 819, 820, 822, 824, 825], "try": 493, "tstepjoint": 813, "tupl": [20, 21, 29, 30, 31, 41, 42, 60, 61, 79, 80, 98, 99, 118, 119, 136, 137, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 279, 280, 299, 300, 311, 316, 324, 362, 369, 381, 386, 428, 703], "two": [16, 29, 30, 31, 37, 50, 56, 68, 74, 87, 93, 106, 112, 116, 131, 150, 161, 167, 184, 195, 201, 219, 232, 238, 250, 256, 268, 274, 294, 309, 311, 315, 316, 322, 324, 329, 341, 360, 362, 366, 380, 493, 519, 520, 579, 639, 703, 720, 726, 823, 824], "txt": 814, "type": [9, 10, 11, 15, 18, 19, 26, 29, 32, 36, 39, 40, 47, 50, 51, 55, 58, 59, 67, 68, 69, 73, 76, 77, 86, 87, 88, 92, 95, 96, 105, 106, 107, 111, 114, 115, 124, 125, 126, 130, 133, 134, 143, 145, 149, 152, 153, 160, 161, 162, 166, 169, 170, 177, 178, 179, 183, 186, 187, 194, 195, 196, 200, 204, 205, 212, 213, 214, 218, 221, 222, 231, 232, 233, 237, 240, 241, 245, 249, 250, 251, 255, 258, 259, 267, 268, 269, 273, 276, 277, 286, 287, 288, 293, 297, 298, 307, 309, 322, 332, 360, 370, 379, 384, 385, 397, 399, 406, 407, 408, 417, 419, 420, 421, 422, 427, 429, 437, 438, 439, 449, 451, 458, 459, 460, 469, 471, 478, 481, 482, 492, 500, 502, 503, 504, 508, 513, 516, 517, 518, 525, 526, 527, 530, 536, 537, 541, 543, 546, 551, 552, 557, 559, 562, 564, 565, 571, 574, 577, 580, 581, 586, 588, 591, 592, 593, 600, 602, 605, 606, 607, 613, 618, 621, 624, 625, 629, 633, 636, 637, 638, 643, 645, 649, 650, 651, 658, 660, 664, 665, 666, 673, 676, 679, 681, 682, 687, 698, 710, 713, 714, 715, 742, 743, 746, 748, 749, 750, 754, 759, 760, 761, 762, 767, 769, 770, 771, 772, 777, 779, 780, 781, 782, 787, 789, 790, 791, 792, 793, 798, 800, 801, 802, 803, 808, 813, 817, 820, 828], "typeerror": [18, 19, 39, 40, 58, 59, 76, 77, 95, 96, 114, 115, 133, 134, 152, 153, 169, 170, 186, 187, 204, 205, 221, 222, 240, 241, 258, 259, 276, 277, 297, 298, 384, 385, 407, 408, 421, 422, 438, 439, 459, 460, 481, 482, 503, 504, 517, 518, 536, 537, 551, 552, 564, 565, 580, 581, 592, 593, 606, 607, 624, 625, 637, 638, 650, 651, 665, 666, 681, 682, 714, 715, 749, 750, 761, 762, 771, 772, 781, 782, 792, 793, 802, 803], "typic": [789, 817], "unchang": 824, "under": [699, 700], "underscor": 818, "uniform": 428, "uniqu": [31, 369, 428, 711], "unit": [29, 30, 308, 381, 470], "unlik": 824, "unlimit": [526, 615], "updaterefobj": 819, "upon": 813, "upper": 824, "upstream": [702, 716, 719], "url": 810, "us": [9, 10, 11, 23, 26, 28, 29, 30, 31, 32, 44, 47, 49, 50, 51, 63, 67, 68, 69, 83, 86, 87, 88, 102, 105, 106, 107, 121, 124, 125, 126, 140, 143, 144, 145, 157, 160, 161, 162, 174, 177, 178, 179, 191, 194, 195, 196, 209, 212, 213, 214, 228, 231, 232, 233, 246, 249, 250, 251, 264, 267, 268, 269, 283, 286, 287, 288, 304, 307, 308, 311, 316, 324, 362, 370, 381, 391, 397, 399, 412, 417, 419, 424, 427, 429, 444, 449, 450, 451, 464, 469, 471, 479, 487, 492, 493, 500, 505, 508, 509, 513, 522, 525, 526, 527, 535, 538, 541, 542, 543, 553, 554, 557, 559, 563, 568, 571, 574, 579, 583, 586, 588, 597, 600, 602, 608, 610, 613, 618, 623, 626, 629, 633, 640, 643, 645, 654, 658, 660, 670, 673, 676, 683, 684, 687, 698, 702, 732, 733, 737, 738, 739, 740, 741, 742, 744, 746, 751, 754, 755, 759, 763, 767, 769, 773, 777, 779, 783, 787, 789, 790, 794, 798, 800, 804, 808, 809, 810, 813, 815, 816, 817, 818, 819, 820, 822, 823, 824, 826, 827], "use_default": [314, 328, 340, 365], "use_flank_angl": [526, 542], "user": [818, 820], "userwarn": [91, 129, 217, 272], "usual": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 369, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800], "util": [813, 816], "v": 418, "v1": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 733, 751, 763, 773, 783, 794, 804], "v2": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 733, 751, 763, 773, 783, 794, 804], "v3": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 733, 751, 763, 773, 783, 794, 804], "v7": 814, "valid": [26, 47, 67, 86, 105, 124, 143, 160, 177, 194, 212, 231, 249, 267, 286, 307, 397, 417, 427, 449, 469, 492, 508, 525, 541, 557, 571, 586, 600, 613, 629, 643, 658, 673, 687, 742, 754, 767, 777, 787, 798, 808], "valu": [49, 87, 125, 213, 263, 268, 308, 369, 428, 497, 535, 623, 659, 744, 818], "valueerror": [16, 37, 56, 74, 93, 112, 131, 150, 167, 184, 201, 219, 238, 256, 274, 294, 699, 702, 706], "variabl": 824, "vector": [342, 382, 383, 418, 428, 443, 566, 728, 729, 740, 741, 813, 819, 820], "verifi": [16, 37, 56, 74, 93, 112, 131, 150, 167, 184, 201, 219, 238, 256, 274, 294, 381, 721], "version": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 733, 751, 763, 773, 783, 794, 804, 814], "vertex_attribut": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 733, 751, 763, 773, 783, 794, 804], "vertex_sampl": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 733, 751, 763, 773, 783, 794, 804], "vertic": [512, 587, 601, 639, 819, 824], "via": [71, 813], "visual": [317, 493, 745, 789, 811], "visualis": 825, "vocabulari": 820, "volum": [529, 533, 545, 549, 582, 614, 620, 630, 648, 655, 663, 668, 678, 688, 697], "wa": [12, 33, 34, 127, 128, 146, 270, 493], "wai": [330, 755, 811], "wall": [30, 342, 450, 697, 702, 709, 813, 820], "wall1": 702, "wall1_group": 702, "wall_a": 30, "wall_b": 30, "want": 755, "warranti": 815, "we": [398, 418], "well": [371, 702], "were": [29, 31, 493, 818], "what": 418, "when": [11, 28, 32, 51, 52, 53, 69, 70, 88, 89, 90, 107, 108, 109, 126, 145, 162, 163, 164, 179, 180, 181, 196, 197, 198, 214, 215, 216, 233, 234, 235, 251, 252, 253, 269, 271, 288, 289, 290, 370, 371, 399, 419, 429, 451, 471, 494, 495, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800, 818, 824], "whenev": [12, 14, 33, 34, 35, 54, 110, 127, 128, 146, 148, 165, 182, 199, 254, 270, 292], "where": [817, 819, 822, 824, 827], "whether": [526, 542, 617, 659, 675, 683, 789, 815], "which": [10, 16, 20, 21, 28, 29, 30, 31, 37, 41, 42, 50, 56, 60, 61, 68, 74, 79, 80, 87, 93, 98, 99, 106, 112, 118, 119, 131, 136, 137, 144, 150, 154, 155, 161, 167, 171, 172, 178, 184, 188, 189, 195, 201, 206, 207, 213, 219, 224, 225, 232, 238, 242, 243, 250, 256, 260, 261, 268, 274, 279, 280, 287, 294, 299, 300, 308, 330, 360, 371, 380, 381, 386, 388, 493, 494, 553, 566, 567, 639, 683, 701, 702, 743, 745, 778, 789, 817, 819, 820, 825], "while": [418, 493, 824, 826], "whitespac": [24, 25, 45, 46, 64, 65, 84, 85, 103, 104, 122, 123, 141, 142, 158, 159, 175, 176, 192, 193, 210, 211, 229, 230, 247, 248, 265, 266, 284, 285, 305, 306, 393, 394, 413, 414, 425, 426, 445, 446, 465, 466, 488, 489, 506, 507, 523, 524, 539, 540, 555, 556, 569, 570, 584, 585, 598, 599, 611, 612, 627, 628, 641, 642, 656, 657, 671, 672, 685, 686, 734, 735, 752, 753, 764, 765, 774, 775, 784, 785, 795, 796, 805, 806], "whom": 815, "whose": [20, 21, 41, 42, 60, 61, 79, 80, 98, 99, 118, 119, 136, 137, 154, 155, 171, 172, 188, 189, 206, 207, 224, 225, 242, 243, 260, 261, 279, 280, 299, 300], "whould": [16, 37, 56, 74, 93, 112, 131, 150, 167, 184, 201, 219, 238, 256, 274, 294], "wide": [369, 428], "width": [195, 250, 342, 369, 382, 383, 496, 526, 535, 542, 553, 601, 617, 623, 644, 647, 659, 661, 675, 683, 812, 818, 819, 820, 824], "within": [29, 325, 335, 789, 819], "without": [24, 25, 45, 46, 64, 65, 84, 85, 87, 103, 104, 122, 123, 125, 141, 142, 158, 159, 175, 176, 192, 193, 210, 211, 213, 229, 230, 247, 248, 265, 266, 268, 284, 285, 305, 306, 393, 394, 413, 414, 425, 426, 445, 446, 465, 466, 488, 489, 506, 507, 523, 524, 539, 540, 555, 556, 569, 570, 584, 585, 598, 599, 611, 612, 627, 628, 641, 642, 656, 657, 671, 672, 685, 686, 734, 735, 752, 753, 764, 765, 774, 775, 784, 785, 795, 796, 805, 806, 815, 819], "wood": 369, "work": [810, 820], "workflow": [813, 816, 818, 819], "world": [378, 405, 418, 436, 457, 477, 819, 820], "worldx": [382, 383], "worldxi": [702, 812], "worldz": [382, 383], "would": 418, "wrapper": 496, "write": [509, 510, 757, 818, 819], "written": 813, "x": [125, 268, 360, 368, 369, 512, 526, 542, 558, 573, 587, 601, 617, 644, 659, 675, 730, 731, 819, 826, 827], "x_default": 368, "xlapjoint": 813, "xmax": [369, 428], "xmin": [369, 428], "xml": [510, 511, 822], "y": [195, 250, 287, 369, 512, 526, 535, 542, 553, 558, 587, 601, 617, 623, 659, 675, 683, 730, 731, 819, 824, 827], "ybuttjoint": 813, "ye": [644, 659, 814], "year": 810, "yield": [712, 722, 723], "ymax": [369, 428], "ymin": [369, 428], "you": [755, 810, 816, 820, 824, 828], "your": [755, 810], "yourgithub_usernam": 814, "z": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 369, 382, 383, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 558, 568, 583, 597, 610, 626, 640, 654, 670, 684, 728, 729, 730, 731, 733, 751, 763, 773, 783, 794, 804, 819, 820, 823, 827], "z_axi": 342, "z_vector": [382, 383], "zaxi": 342, "zenodo": 810, "zero": [499, 820], "zmax": [369, 428], "zmin": [369, 428], "zurich": [810, 813], "zvector": [818, 819]}, "titles": ["API Reference", "compas_timber.connections", "compas_timber.design", "compas_timber.elements", "compas_timber.errors", "compas_timber.fabrication", "compas_timber.ghpython", "compas_timber.model", "compas_timber.planning", "compas_timber.rhino", "BallNodeJoint", "BallNodeJoint.ToString", "BallNodeJoint.add_extensions", "BallNodeJoint.add_features", "BallNodeJoint.check_elements_compatibility", "BallNodeJoint.copy", "BallNodeJoint.create", "BallNodeJoint.element_count_complies", "BallNodeJoint.from_json", "BallNodeJoint.from_jsonstring", "BallNodeJoint.get_face_most_ortho_to_beam", "BallNodeJoint.get_face_most_towards_beam", "BallNodeJoint.restore_beams_from_keys", "BallNodeJoint.sha256", "BallNodeJoint.to_json", "BallNodeJoint.to_jsonstring", "BallNodeJoint.validate_data", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "ConnectionSolver.find_wall_wall_topology", "Joint", "Joint.ToString", "Joint.add_extensions", "Joint.add_features", "Joint.check_elements_compatibility", "Joint.copy", "Joint.create", "Joint.element_count_complies", "Joint.from_json", "Joint.from_jsonstring", "Joint.get_face_most_ortho_to_beam", "Joint.get_face_most_towards_beam", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_json", "Joint.to_jsonstring", "Joint.validate_data", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_extensions", "LButtJoint.add_features", "LButtJoint.check_elements_compatibility", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.element_count_complies", "LButtJoint.from_json", "LButtJoint.from_jsonstring", "LButtJoint.get_face_most_ortho_to_beam", "LButtJoint.get_face_most_towards_beam", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.to_json", "LButtJoint.to_jsonstring", "LButtJoint.update_beam_roles", "LButtJoint.validate_data", "LFrenchRidgeLapJoint", "LFrenchRidgeLapJoint.ToString", "LFrenchRidgeLapJoint.add_extensions", "LFrenchRidgeLapJoint.add_features", "LFrenchRidgeLapJoint.check_elements_compatibility", "LFrenchRidgeLapJoint.copy", "LFrenchRidgeLapJoint.create", "LFrenchRidgeLapJoint.element_count_complies", "LFrenchRidgeLapJoint.from_json", "LFrenchRidgeLapJoint.from_jsonstring", "LFrenchRidgeLapJoint.get_cross_cutting_frame", "LFrenchRidgeLapJoint.get_face_most_ortho_to_beam", "LFrenchRidgeLapJoint.get_face_most_towards_beam", "LFrenchRidgeLapJoint.get_main_cutting_frame", "LFrenchRidgeLapJoint.restore_beams_from_keys", "LFrenchRidgeLapJoint.sha256", "LFrenchRidgeLapJoint.to_json", "LFrenchRidgeLapJoint.to_jsonstring", "LFrenchRidgeLapJoint.validate_data", "LLapJoint", "LLapJoint.ToString", "LLapJoint.add_extensions", "LLapJoint.add_features", "LLapJoint.check_elements_compatibility", "LLapJoint.copy", "LLapJoint.create", "LLapJoint.element_count_complies", "LLapJoint.from_json", "LLapJoint.from_jsonstring", "LLapJoint.get_cross_cutting_frame", "LLapJoint.get_face_most_ortho_to_beam", "LLapJoint.get_face_most_towards_beam", "LLapJoint.get_main_cutting_frame", "LLapJoint.restore_beams_from_keys", "LLapJoint.sha256", "LLapJoint.to_json", "LLapJoint.to_jsonstring", "LLapJoint.validate_data", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_extensions", "LMiterJoint.add_features", "LMiterJoint.check_elements_compatibility", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.element_count_complies", "LMiterJoint.from_json", "LMiterJoint.from_jsonstring", "LMiterJoint.get_cutoff_plane", "LMiterJoint.get_cutting_planes", "LMiterJoint.get_face_most_ortho_to_beam", "LMiterJoint.get_face_most_towards_beam", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_json", "LMiterJoint.to_jsonstring", "LMiterJoint.validate_data", "LapJoint", "LapJoint.ToString", "LapJoint.add_extensions", "LapJoint.add_features", "LapJoint.check_elements_compatibility", "LapJoint.copy", "LapJoint.create", "LapJoint.element_count_complies", "LapJoint.from_json", "LapJoint.from_jsonstring", "LapJoint.get_cross_cutting_frame", "LapJoint.get_face_most_ortho_to_beam", "LapJoint.get_face_most_towards_beam", "LapJoint.get_main_cutting_frame", "LapJoint.restore_beams_from_keys", "LapJoint.sha256", "LapJoint.to_json", "LapJoint.to_jsonstring", "LapJoint.validate_data", "NullJoint", "NullJoint.ToString", "NullJoint.add_extensions", "NullJoint.add_features", "NullJoint.check_elements_compatibility", "NullJoint.copy", "NullJoint.create", "NullJoint.element_count_complies", "NullJoint.from_json", "NullJoint.from_jsonstring", "NullJoint.get_face_most_ortho_to_beam", "NullJoint.get_face_most_towards_beam", "NullJoint.restore_beams_from_keys", "NullJoint.sha256", "NullJoint.to_json", "NullJoint.to_jsonstring", "NullJoint.validate_data", "TBirdsmouthJoint", "TBirdsmouthJoint.ToString", "TBirdsmouthJoint.add_extensions", "TBirdsmouthJoint.add_features", "TBirdsmouthJoint.check_elements_compatibility", "TBirdsmouthJoint.copy", "TBirdsmouthJoint.create", "TBirdsmouthJoint.element_count_complies", "TBirdsmouthJoint.from_json", "TBirdsmouthJoint.from_jsonstring", "TBirdsmouthJoint.get_face_most_ortho_to_beam", "TBirdsmouthJoint.get_face_most_towards_beam", "TBirdsmouthJoint.restore_beams_from_keys", "TBirdsmouthJoint.sha256", "TBirdsmouthJoint.to_json", "TBirdsmouthJoint.to_jsonstring", "TBirdsmouthJoint.validate_data", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_extensions", "TButtJoint.add_features", "TButtJoint.check_elements_compatibility", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.element_count_complies", "TButtJoint.from_json", "TButtJoint.from_jsonstring", "TButtJoint.get_face_most_ortho_to_beam", "TButtJoint.get_face_most_towards_beam", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.to_json", "TButtJoint.to_jsonstring", "TButtJoint.validate_data", "TDovetailJoint", "TDovetailJoint.ToString", "TDovetailJoint.add_extensions", "TDovetailJoint.add_features", "TDovetailJoint.check_elements_compatibility", "TDovetailJoint.copy", "TDovetailJoint.create", "TDovetailJoint.define_dovetail_tool", "TDovetailJoint.element_count_complies", "TDovetailJoint.from_json", "TDovetailJoint.from_jsonstring", "TDovetailJoint.get_face_most_ortho_to_beam", "TDovetailJoint.get_face_most_towards_beam", "TDovetailJoint.restore_beams_from_keys", "TDovetailJoint.sha256", "TDovetailJoint.to_json", "TDovetailJoint.to_jsonstring", "TDovetailJoint.validate_data", "TLapJoint", "TLapJoint.ToString", "TLapJoint.add_extensions", "TLapJoint.add_features", "TLapJoint.check_elements_compatibility", "TLapJoint.copy", "TLapJoint.create", "TLapJoint.element_count_complies", "TLapJoint.from_json", "TLapJoint.from_jsonstring", "TLapJoint.get_cross_cutting_frame", "TLapJoint.get_face_most_ortho_to_beam", "TLapJoint.get_face_most_towards_beam", "TLapJoint.get_main_cutting_frame", "TLapJoint.restore_beams_from_keys", "TLapJoint.sha256", "TLapJoint.to_json", "TLapJoint.to_jsonstring", "TLapJoint.validate_data", "TStepJoint", "TStepJoint.ToString", "TStepJoint.add_extensions", "TStepJoint.add_features", "TStepJoint.check_elements_compatibility", "TStepJoint.copy", "TStepJoint.create", "TStepJoint.element_count_complies", "TStepJoint.from_json", "TStepJoint.from_jsonstring", "TStepJoint.get_face_most_ortho_to_beam", "TStepJoint.get_face_most_towards_beam", "TStepJoint.restore_beams_from_keys", "TStepJoint.set_step_depths", "TStepJoint.sha256", "TStepJoint.to_json", "TStepJoint.to_jsonstring", "TStepJoint.validate_data", "TenonMortiseJoint", "TenonMortiseJoint.ToString", "TenonMortiseJoint.add_extensions", "TenonMortiseJoint.add_features", "TenonMortiseJoint.check_elements_compatibility", "TenonMortiseJoint.copy", "TenonMortiseJoint.create", "TenonMortiseJoint.element_count_complies", "TenonMortiseJoint.from_json", "TenonMortiseJoint.from_jsonstring", "TenonMortiseJoint.get_face_most_ortho_to_beam", "TenonMortiseJoint.get_face_most_towards_beam", "TenonMortiseJoint.restore_beams_from_keys", "TenonMortiseJoint.set_default_values", "TenonMortiseJoint.sha256", "TenonMortiseJoint.to_json", "TenonMortiseJoint.to_jsonstring", "TenonMortiseJoint.validate_data", "XLapJoint", "XLapJoint.ToString", "XLapJoint.add_extensions", "XLapJoint.add_features", "XLapJoint.check_elements_compatibility", "XLapJoint.copy", "XLapJoint.create", "XLapJoint.element_count_complies", "XLapJoint.from_json", "XLapJoint.from_jsonstring", "XLapJoint.get_cross_cutting_frame", "XLapJoint.get_face_most_ortho_to_beam", "XLapJoint.get_face_most_towards_beam", "XLapJoint.get_main_cutting_frame", "XLapJoint.restore_beams_from_keys", "XLapJoint.sha256", "XLapJoint.to_json", "XLapJoint.to_jsonstring", "XLapJoint.validate_data", "YButtJoint", "YButtJoint.ToString", "YButtJoint.add_extensions", "YButtJoint.add_features", "YButtJoint.check_beam_compatibility", "YButtJoint.check_elements_compatibility", "YButtJoint.copy", "YButtJoint.create", "YButtJoint.cross_beam_ref_side_index", "YButtJoint.element_count_complies", "YButtJoint.from_json", "YButtJoint.from_jsonstring", "YButtJoint.get_face_most_ortho_to_beam", "YButtJoint.get_face_most_towards_beam", "YButtJoint.get_miter_planes", "YButtJoint.main_beam_ref_side_index", "YButtJoint.restore_beams_from_keys", "YButtJoint.sha256", "YButtJoint.to_json", "YButtJoint.to_jsonstring", "YButtJoint.validate_data", "find_neighboring_elements", "CategoryRule", "CategoryRule.ToString", "CategoryRule.comply", "CategoryRule.get_category_rules", "CategoryRule.get_direct_rules", "CategoryRule.get_topology_rules", "CategoryRule.joints_from_beams_and_rules", "CategoryRule.reorder", "DebugInfomation", "DebugInfomation.ToString", "DebugInfomation.add_fastener_error", "DebugInfomation.add_feature_error", "DebugInfomation.add_joint_error", "DirectRule", "DirectRule.ToString", "DirectRule.comply", "DirectRule.contains", "DirectRule.get_category_rules", "DirectRule.get_direct_rules", "DirectRule.get_topology_rules", "DirectRule.joints_from_beams_and_rules", "FeatureDefinition", "FeatureDefinition.ToString", "JointDefinition", "JointDefinition.ToString", "JointDefinition.is_identical", "JointDefinition.match", "JointRule", "JointRule.comply", "JointRule.get_category_rules", "JointRule.get_direct_rules", "JointRule.get_topology_rules", "JointRule.joints_from_beams_and_rules", "SurfaceModel", "SurfaceModel.beam_category_names", "SurfaceModel.create_model", "SurfaceModel.cull_overlaps", "SurfaceModel.distance_between_elements", "SurfaceModel.generate_frame", "SurfaceModel.generate_perimeter_beams", "SurfaceModel.generate_plates", "SurfaceModel.generate_stud_lines", "SurfaceModel.generate_studs", "SurfaceModel.generate_windows", "SurfaceModel.get_beam_intersections", "SurfaceModel.get_interior_segment_indices", "SurfaceModel.offset_elements", "SurfaceModel.parse_loops", "SurfaceModel.trim_jack_studs", "SurfaceModel.trim_king_studs", "SurfaceModel.trim_studs", "TopologyRule", "TopologyRule.ToString", "TopologyRule.comply", "TopologyRule.get_category_rules", "TopologyRule.get_direct_rules", "TopologyRule.get_topology_rules", "TopologyRule.joints_from_beams_and_rules", "guess_joint_topology_2beams", "set_default_joints", "Beam", "Beam.ToString", "Beam.add_blank_extension", "Beam.add_feature", "Beam.add_features", "Beam.compute_aabb", "Beam.compute_collision_mesh", "Beam.compute_geometry", "Beam.compute_obb", "Beam.compute_worldtransformation", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_endpoints", "Beam.from_json", "Beam.from_jsonstring", "Beam.get_dimensions_relative_to_side", "Beam.opposing_side_index", "Beam.remove_blank_extension", "Beam.remove_features", "Beam.reset", "Beam.sha256", "Beam.side_as_surface", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transformed", "Beam.validate_data", "Fastener", "Fastener.ToString", "Fastener.add_feature", "Fastener.compute_aabb", "Fastener.compute_collision_mesh", "Fastener.compute_geometry", "Fastener.compute_obb", "Fastener.compute_worldtransformation", "Fastener.copy", "Fastener.from_json", "Fastener.from_jsonstring", "Fastener.remove_blank_extension", "Fastener.remove_features", "Fastener.reset", "Fastener.sha256", "Fastener.to_json", "Fastener.to_jsonstring", "Fastener.transform", "Fastener.transformed", "Fastener.validate_data", "FastenerTimberInterface", "FastenerTimberInterface.ToString", "FastenerTimberInterface.copy", "FastenerTimberInterface.from_json", "FastenerTimberInterface.from_jsonstring", "FastenerTimberInterface.get_features", "FastenerTimberInterface.sha256", "FastenerTimberInterface.to_json", "FastenerTimberInterface.to_jsonstring", "FastenerTimberInterface.validate_data", "Plate", "Plate.ToString", "Plate.add_feature", "Plate.add_features", "Plate.compute_aabb", "Plate.compute_collision_mesh", "Plate.compute_geometry", "Plate.compute_obb", "Plate.compute_worldtransformation", "Plate.copy", "Plate.from_json", "Plate.from_jsonstring", "Plate.remove_blank_extension", "Plate.remove_features", "Plate.reset", "Plate.set_frame_and_outline", "Plate.sha256", "Plate.to_json", "Plate.to_jsonstring", "Plate.transform", "Plate.transformed", "Plate.validate_data", "TimberElement", "TimberElement.ToString", "TimberElement.add_feature", "TimberElement.compute_aabb", "TimberElement.compute_collision_mesh", "TimberElement.compute_geometry", "TimberElement.compute_obb", "TimberElement.compute_worldtransformation", "TimberElement.copy", "TimberElement.from_json", "TimberElement.from_jsonstring", "TimberElement.remove_blank_extension", "TimberElement.remove_features", "TimberElement.reset", "TimberElement.sha256", "TimberElement.to_json", "TimberElement.to_jsonstring", "TimberElement.transform", "TimberElement.transformed", "TimberElement.validate_data", "Wall", "Wall.ToString", "Wall.add_feature", "Wall.compute_aabb", "Wall.compute_collision_mesh", "Wall.compute_geometry", "Wall.compute_obb", "Wall.compute_worldtransformation", "Wall.copy", "Wall.from_boundary", "Wall.from_brep", "Wall.from_json", "Wall.from_jsonstring", "Wall.remove_blank_extension", "Wall.remove_features", "Wall.reset", "Wall.rotate", "Wall.sha256", "Wall.to_json", "Wall.to_jsonstring", "Wall.transform", "Wall.transformed", "Wall.validate_data", "BeamJoiningError", "FastenerApplicationError", "FeatureApplicationError", "BTLxPart", "BTLxPart.et_point_vals", "BTLxPart.ref_side_from_face", "BTLxProcessing", "BTLxProcessing.ToString", "BTLxProcessing.add_subprocessing", "BTLxProcessing.copy", "BTLxProcessing.from_json", "BTLxProcessing.from_jsonstring", "BTLxProcessing.sha256", "BTLxProcessing.to_json", "BTLxProcessing.to_jsonstring", "BTLxProcessing.validate_data", "BTLxWriter", "BTLxWriter.model_to_xml", "BTLxWriter.write", "DoubleCut", "DoubleCut.ToString", "DoubleCut.add_subprocessing", "DoubleCut.apply", "DoubleCut.copy", "DoubleCut.from_json", "DoubleCut.from_jsonstring", "DoubleCut.from_planes_and_beam", "DoubleCut.from_shapes_and_element", "DoubleCut.planes_from_params_and_beam", "DoubleCut.sha256", "DoubleCut.to_json", "DoubleCut.to_jsonstring", "DoubleCut.validate_data", "DovetailMortise", "DovetailMortise.ToString", "DovetailMortise.add_subprocessing", "DovetailMortise.apply", "DovetailMortise.copy", "DovetailMortise.define_dovetail_tool", "DovetailMortise.dovetail_cutting_frames_from_params_and_beam", "DovetailMortise.dovetail_volume_from_params_and_beam", "DovetailMortise.frame_from_params_and_beam", "DovetailMortise.from_frame_and_beam", "DovetailMortise.from_json", "DovetailMortise.from_jsonstring", "DovetailMortise.sha256", "DovetailMortise.to_json", "DovetailMortise.to_jsonstring", "DovetailMortise.validate_data", "DovetailTenon", "DovetailTenon.ToString", "DovetailTenon.add_subprocessing", "DovetailTenon.apply", "DovetailTenon.copy", "DovetailTenon.define_dovetail_tool", "DovetailTenon.dovetail_cutting_frames_from_params_and_beam", "DovetailTenon.dovetail_volume_from_params_and_beam", "DovetailTenon.frame_from_params_and_beam", "DovetailTenon.from_json", "DovetailTenon.from_jsonstring", "DovetailTenon.from_plane_and_beam", "DovetailTenon.sha256", "DovetailTenon.to_json", "DovetailTenon.to_jsonstring", "DovetailTenon.validate_data", "Drilling", "Drilling.ToString", "Drilling.add_subprocessing", "Drilling.apply", "Drilling.copy", "Drilling.cylinder_from_params_and_element", "Drilling.from_json", "Drilling.from_jsonstring", "Drilling.from_line_and_element", "Drilling.from_shapes_and_element", "Drilling.sha256", "Drilling.to_json", "Drilling.to_jsonstring", "Drilling.validate_data", "EdgePositionType", "FrenchRidgeLap", "FrenchRidgeLap.ToString", "FrenchRidgeLap.add_subprocessing", "FrenchRidgeLap.apply", "FrenchRidgeLap.copy", "FrenchRidgeLap.frame_from_params_and_beam", "FrenchRidgeLap.from_beam_beam_and_plane", "FrenchRidgeLap.from_json", "FrenchRidgeLap.from_jsonstring", "FrenchRidgeLap.lap_volume_from_params_and_beam", "FrenchRidgeLap.sha256", "FrenchRidgeLap.to_json", "FrenchRidgeLap.to_jsonstring", "FrenchRidgeLap.validate_data", "JackRafterCut", "JackRafterCut.ToString", "JackRafterCut.add_subprocessing", "JackRafterCut.apply", "JackRafterCut.copy", "JackRafterCut.from_json", "JackRafterCut.from_jsonstring", "JackRafterCut.from_plane_and_beam", "JackRafterCut.from_shapes_and_element", "JackRafterCut.plane_from_params_and_beam", "JackRafterCut.sha256", "JackRafterCut.to_json", "JackRafterCut.to_jsonstring", "JackRafterCut.validate_data", "Lap", "Lap.ToString", "Lap.add_subprocessing", "Lap.apply", "Lap.copy", "Lap.from_json", "Lap.from_jsonstring", "Lap.from_plane_and_beam", "Lap.planes_from_params_and_beam", "Lap.sha256", "Lap.to_json", "Lap.to_jsonstring", "Lap.validate_data", "Lap.volume_from_params_and_beam", "LimitationTopType", "MachiningLimits", "Mortise", "Mortise.ToString", "Mortise.add_subprocessing", "Mortise.apply", "Mortise.copy", "Mortise.frame_from_params_and_beam", "Mortise.from_frame_and_beam", "Mortise.from_json", "Mortise.from_jsonstring", "Mortise.sha256", "Mortise.to_json", "Mortise.to_jsonstring", "Mortise.validate_data", "Mortise.volume_from_params_and_beam", "OrientationType", "Slot", "Slot.ToString", "Slot.add_subprocessing", "Slot.apply", "Slot.copy", "Slot.from_json", "Slot.from_jsonstring", "Slot.from_plane_and_beam", "Slot.sha256", "Slot.to_json", "Slot.to_jsonstring", "Slot.validate_data", "StepJoint", "StepJoint.ToString", "StepJoint.add_subprocessing", "StepJoint.add_tenon", "StepJoint.apply", "StepJoint.copy", "StepJoint.from_json", "StepJoint.from_jsonstring", "StepJoint.from_plane_and_beam", "StepJoint.planes_from_params_and_beam", "StepJoint.sha256", "StepJoint.tenon_volume_from_params_and_beam", "StepJoint.to_json", "StepJoint.to_jsonstring", "StepJoint.validate_data", "StepJointNotch", "StepJointNotch.ToString", "StepJointNotch.add_mortise", "StepJointNotch.add_subprocessing", "StepJointNotch.apply", "StepJointNotch.copy", "StepJointNotch.from_json", "StepJointNotch.from_jsonstring", "StepJointNotch.from_plane_and_beam", "StepJointNotch.mortise_volume_from_params_and_beam", "StepJointNotch.planes_from_params_and_beam", "StepJointNotch.sha256", "StepJointNotch.to_json", "StepJointNotch.to_jsonstring", "StepJointNotch.validate_data", "StepShapeType", "Tenon", "Tenon.ToString", "Tenon.add_subprocessing", "Tenon.apply", "Tenon.copy", "Tenon.frame_from_params_and_beam", "Tenon.from_json", "Tenon.from_jsonstring", "Tenon.from_plane_and_beam", "Tenon.sha256", "Tenon.to_json", "Tenon.to_jsonstring", "Tenon.validate_data", "Tenon.volume_from_params_and_beam", "TenonShapeType", "add_gh_param", "clear_gh_params", "get_leaf_subclasses", "item_input_valid", "list_input_valid", "manage_dynamic_params", "rename_gh_input", "TimberModel", "TimberModel.ToString", "TimberModel.add_element", "TimberModel.add_elements", "TimberModel.add_group", "TimberModel.add_group_element", "TimberModel.add_interaction", "TimberModel.add_joint", "TimberModel.add_material", "TimberModel.assign_material", "TimberModel.compute_aabb", "TimberModel.compute_obb", "TimberModel.connect_adjacent_walls", "TimberModel.copy", "TimberModel.element_by_guid", "TimberModel.elements", "TimberModel.elements_connected_by", "TimberModel.from_json", "TimberModel.from_jsonstring", "TimberModel.get_elements_in_group", "TimberModel.get_interactions_for_element", "TimberModel.has_element", "TimberModel.has_group", "TimberModel.has_interaction", "TimberModel.has_material", "TimberModel.interactions", "TimberModel.materials", "TimberModel.process_joinery", "TimberModel.remove_element", "TimberModel.remove_interaction", "TimberModel.remove_joint", "TimberModel.rotate", "TimberModel.rotated", "TimberModel.scale", "TimberModel.scaled", "TimberModel.set_topologies", "TimberModel.sha256", "TimberModel.to_json", "TimberModel.to_jsonstring", "TimberModel.transform", "TimberModel.transform_numpy", "TimberModel.transformed", "TimberModel.transformed_numpy", "TimberModel.translate", "TimberModel.translated", "TimberModel.validate_data", "Actor", "Actor.get_name", "BuildingPlan", "BuildingPlan.ToString", "BuildingPlan.add_step", "BuildingPlan.copy", "BuildingPlan.from_json", "BuildingPlan.from_jsonstring", "BuildingPlan.sha256", "BuildingPlan.to_json", "BuildingPlan.to_jsonstring", "BuildingPlan.validate_data", "BuildingPlanParser", "BuildingPlanParser.parse", "BuildingPlanParser.serialize", "Instruction", "Instruction.ToString", "Instruction.copy", "Instruction.from_json", "Instruction.from_jsonstring", "Instruction.sha256", "Instruction.to_json", "Instruction.to_jsonstring", "Instruction.transform", "Instruction.validate_data", "LinearDimension", "LinearDimension.ToString", "LinearDimension.copy", "LinearDimension.from_json", "LinearDimension.from_jsonstring", "LinearDimension.sha256", "LinearDimension.to_json", "LinearDimension.to_jsonstring", "LinearDimension.transform", "LinearDimension.validate_data", "Model3d", "Model3d.ToString", "Model3d.copy", "Model3d.from_json", "Model3d.from_jsonstring", "Model3d.sha256", "Model3d.to_json", "Model3d.to_jsonstring", "Model3d.transform", "Model3d.validate_data", "SimpleSequenceGenerator", "Step", "Step.ToString", "Step.copy", "Step.from_json", "Step.from_jsonstring", "Step.sha256", "Step.to_json", "Step.to_jsonstring", "Step.transform", "Step.validate_data", "Text3d", "Text3d.ToString", "Text3d.copy", "Text3d.from_json", "Text3d.from_jsonstring", "Text3d.sha256", "Text3d.to_json", "Text3d.to_jsonstring", "Text3d.transform", "Text3d.validate_data", "find_neighboring_elements", "Citing", "Examples", "Create Joint", "COMPAS Timber Documentation", "Installation", "License", "Grasshopper plugin", "BTLx Contribution Guide", "Attributes", "Beams", "Design", "Examples", "Fabrication", "Features", "Joint Rules", "Model", "Show", "Utils", "Workflow"], "titleterms": {"actor": [743, 744], "add_blank_extens": 371, "add_el": [699, 700], "add_extens": [12, 33, 52, 70, 89, 108, 127, 146, 163, 180, 197, 215, 234, 252, 270, 289], "add_fastener_error": 319, "add_featur": [13, 34, 53, 71, 90, 109, 128, 147, 164, 181, 198, 216, 235, 253, 271, 290, 372, 373, 400, 430, 431, 452, 472], "add_feature_error": 320, "add_gh_param": 690, "add_group": 701, "add_group_el": 702, "add_interact": 703, "add_joint": 704, "add_joint_error": 321, "add_materi": 705, "add_mortis": 661, "add_step": 747, "add_subprocess": [501, 514, 528, 544, 560, 575, 589, 603, 619, 634, 646, 662, 677], "add_tenon": 647, "api": 0, "appli": [515, 529, 545, 561, 576, 590, 604, 620, 635, 648, 663, 678], "assembli": 811, "assign_materi": 706, "attribut": 818, "bake": 827, "ballnodejoint": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "beam": [369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 819, 820, 826], "beam_category_nam": 343, "beamjoiningerror": 493, "birdsmouth": 824, "boxmap": 827, "btlx": [817, 822], "btlxpart": [496, 497, 498], "btlxprocess": [499, 500, 501, 502, 503, 504, 505, 506, 507, 508], "btlxwriter": [509, 510, 511], "buildingplan": [745, 746, 747, 748, 749, 750, 751, 752, 753, 754], "buildingplanpars": [755, 756, 757], "butt": 824, "categori": 824, "categoryrul": [309, 310, 311, 312, 313, 314, 315, 316], "check": 818, "check_beam_compat": 291, "check_elements_compat": [14, 35, 54, 72, 91, 110, 129, 148, 165, 182, 199, 217, 236, 254, 272, 292], "cite": 810, "class": [1, 2, 3, 4, 5, 7, 8], "clear_gh_param": 691, "compa": 813, "compas_timb": [1, 2, 3, 4, 5, 6, 7, 8, 9], "compli": [311, 324, 337, 362], "compon": 824, "compute_aabb": [374, 401, 432, 453, 473, 707], "compute_collision_mesh": [375, 402, 433, 454, 474], "compute_geometri": [376, 403, 434, 455, 475], "compute_obb": [377, 404, 435, 456, 476, 708], "compute_worldtransform": [378, 405, 436, 457, 477], "conda": 814, "connect": 1, "connect_adjacent_wal": 709, "connectionsolv": [27, 28, 29, 30], "contain": 325, "content": 813, "contribut": 817, "copi": [15, 36, 55, 73, 92, 111, 130, 149, 166, 183, 200, 218, 237, 255, 273, 293, 379, 406, 420, 437, 458, 478, 502, 516, 530, 546, 562, 577, 591, 605, 621, 636, 649, 664, 679, 710, 748, 760, 770, 780, 791, 801], "creat": [16, 37, 56, 74, 93, 112, 131, 150, 167, 184, 201, 219, 238, 256, 274, 294, 812], "create_model": 344, "cross_beam_ref_side_index": 295, "cull_overlap": 345, "custom": [818, 820], "cut": 823, "cylinder_from_params_and_el": 563, "debuginfom": [317, 318, 319, 320, 321], "decomposebeam": 819, "default": 824, "define_dovetail_tool": [202, 531, 547], "delet": 818, "depend": 813, "design": [2, 820], "develop": 814, "dimens": 820, "direct": 824, "directrul": [322, 323, 324, 325, 326, 327, 328, 329], "distance_between_el": 346, "document": 813, "doubl": 823, "doublecut": [512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525], "dovetail": 824, "dovetail_cutting_frames_from_params_and_beam": [532, 548], "dovetail_volume_from_params_and_beam": [533, 549], "dovetailmortis": [526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541], "dovetailtenon": [542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557], "drill": [558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 823], "edgepositiontyp": 572, "element": [3, 712], "element_by_guid": 711, "element_count_compli": [17, 38, 57, 75, 94, 113, 132, 151, 168, 185, 203, 220, 239, 257, 275, 296], "elements_connected_bi": 713, "endpoint_closest_to_point": 380, "error": [4, 826], "et_point_v": 497, "exampl": [811, 821], "except": 1, "extension_to_plan": 381, "fabric": [5, 822], "face": 826, "fasten": [398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417], "fastenerapplicationerror": 494, "fastenertimberinterfac": [418, 419, 420, 421, 422, 423, 424, 425, 426, 427], "featur": [823, 826], "featureapplicationerror": 495, "featuredefinit": [330, 331], "find_intersecting_pair": 28, "find_neighboring_el": [308, 809], "find_topologi": 29, "find_wall_wall_topologi": 30, "findbeambyrhinoguid": 819, "frame_from_params_and_beam": [534, 550, 578, 622, 680], "french": 824, "frenchridgelap": [573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "from_beam_beam_and_plan": 579, "from_boundari": 479, "from_brep": 480, "from_centerlin": 382, "from_endpoint": 383, "from_frame_and_beam": [535, 623], "from_json": [18, 39, 58, 76, 95, 114, 133, 152, 169, 186, 204, 221, 240, 258, 276, 297, 384, 407, 421, 438, 459, 481, 503, 517, 536, 551, 564, 580, 592, 606, 624, 637, 650, 665, 681, 714, 749, 761, 771, 781, 792, 802], "from_jsonstr": [19, 40, 59, 77, 96, 115, 134, 153, 170, 187, 205, 222, 241, 259, 277, 298, 385, 408, 422, 439, 460, 482, 504, 518, 537, 552, 565, 581, 593, 607, 625, 638, 651, 666, 682, 715, 750, 762, 772, 782, 793, 803], "from_line_and_el": 566, "from_plane_and_beam": [553, 594, 608, 639, 652, 667, 683], "from_planes_and_beam": 519, "from_shapes_and_el": [520, 567, 595], "function": [1, 2, 6], "generate_fram": 347, "generate_perimeter_beam": 348, "generate_pl": 349, "generate_stud": 351, "generate_stud_lin": 350, "generate_window": 352, "get_beam_intersect": 353, "get_category_rul": [312, 326, 338, 363], "get_cross_cutting_fram": [78, 97, 135, 223, 278], "get_cutoff_plan": 116, "get_cutting_plan": 117, "get_dimensions_relative_to_sid": 386, "get_direct_rul": [313, 327, 339, 364], "get_elements_in_group": 716, "get_face_most_ortho_to_beam": [20, 41, 60, 79, 98, 118, 136, 154, 171, 188, 206, 224, 242, 260, 279, 299], "get_face_most_towards_beam": [21, 42, 61, 80, 99, 119, 137, 155, 172, 189, 207, 225, 243, 261, 280, 300], "get_featur": 423, "get_interactions_for_el": 717, "get_interior_segment_indic": 354, "get_leaf_subclass": 692, "get_main_cutting_fram": [81, 100, 138, 226, 281], "get_miter_plan": 301, "get_nam": [49, 744], "get_topology_rul": [314, 328, 340, 365], "ghpython": 6, "grasshopp": 816, "guess_joint_topology_2beam": 367, "guid": 817, "has_el": 718, "has_group": 719, "has_interact": 720, "has_materi": 721, "index": 826, "indic": 813, "instal": 814, "instruct": [758, 759, 760, 761, 762, 763, 764, 765, 766, 767], "interact": 722, "is_ident": 334, "item_input_valid": 693, "jack": 823, "jackraftercut": [587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600], "join": 826, "joint": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 812, 824, 826], "jointdefinit": [332, 333, 334, 335], "jointrul": [336, 337, 338, 339, 340, 341], "joints_from_beams_and_rul": [315, 329, 341, 366], "jointtopologi": [48, 49], "l": 824, "lap": [601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 824], "lap_volume_from_params_and_beam": 582, "lapjoint": [125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "lbuttjoint": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "lfrenchridgelapjoint": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "licens": 815, "limitationtoptyp": 615, "lineardimens": [768, 769, 770, 771, 772, 773, 774, 775, 776, 777], "list_input_valid": 694, "llapjoint": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "lmiterjoint": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "machininglimit": 616, "main_beam_ref_side_index": 302, "manage_dynamic_param": 695, "match": 335, "materi": 723, "miter": 824, "model": [7, 820, 824, 825, 826], "model3d": [778, 779, 780, 781, 782, 783, 784, 785, 786, 787], "model_to_xml": 510, "mortis": [617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 824], "mortise_volume_from_params_and_beam": 668, "nulljoint": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "offset_el": 355, "opposing_side_index": 387, "option": 820, "orientationtyp": 631, "overrid": 824, "packag": 0, "pars": 756, "parse_loop": 356, "plan": 8, "plane_from_params_and_beam": 596, "planes_from_params_and_beam": [521, 609, 653, 669], "plate": [428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449], "plugin": [9, 816], "process_joineri": 724, "rafter": 823, "ref_side_from_fac": 498, "refer": 0, "remove_blank_extens": [388, 409, 440, 461, 483], "remove_el": 725, "remove_featur": [389, 410, 441, 462, 484], "remove_interact": 726, "remove_joint": 727, "rename_gh_input": 696, "reorder": 316, "reset": [390, 411, 442, 463, 485], "restore_beams_from_kei": [22, 43, 62, 82, 101, 120, 139, 156, 173, 190, 208, 227, 244, 262, 282, 303], "rhino": 9, "ridg": 824, "rotat": [486, 728, 729], "rule": 824, "scale": [730, 731], "serial": 757, "set_default_joint": 368, "set_default_valu": 263, "set_frame_and_outlin": 443, "set_step_depth": 245, "set_topologi": 732, "sha256": [23, 44, 63, 83, 102, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 304, 391, 412, 424, 444, 464, 487, 505, 522, 538, 554, 568, 583, 597, 610, 626, 640, 654, 670, 684, 733, 751, 763, 773, 783, 794, 804], "show": 826, "side_as_surfac": 392, "simplesequencegener": 788, "slot": [632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643], "stabl": 814, "standard": 818, "step": [789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 824], "stepjoint": [644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658], "stepjointnotch": [659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673], "stepshapetyp": 674, "summari": 824, "surfac": [820, 824, 826], "surfacemodel": [342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359], "t": 824, "tabl": [813, 824], "tbirdsmouthjoint": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "tbuttjoint": [178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194], "tdovetailjoint": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212], "tenon": [675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 824], "tenon_volume_from_params_and_beam": 655, "tenonmortisejoint": [250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267], "tenonshapetyp": 689, "text3d": [799, 800, 801, 802, 803, 804, 805, 806, 807, 808], "timber": [811, 813], "timberel": [450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469], "timbermodel": [697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742], "tlapjoint": [213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "to_json": [24, 45, 64, 84, 103, 122, 141, 158, 175, 192, 210, 229, 247, 265, 284, 305, 393, 413, 425, 445, 465, 488, 506, 523, 539, 555, 569, 584, 598, 611, 627, 641, 656, 671, 685, 734, 752, 764, 774, 784, 795, 805], "to_jsonstr": [25, 46, 65, 85, 104, 123, 142, 159, 176, 193, 211, 230, 248, 266, 285, 306, 394, 414, 426, 446, 466, 489, 507, 524, 540, 556, 570, 585, 599, 612, 628, 642, 657, 672, 686, 735, 753, 765, 775, 785, 796, 806], "topolog": 824, "topologi": 826, "topologyrul": [360, 361, 362, 363, 364, 365, 366], "tostr": [11, 32, 51, 69, 88, 107, 126, 145, 162, 179, 196, 214, 233, 251, 269, 288, 310, 318, 323, 331, 333, 361, 370, 399, 419, 429, 451, 471, 500, 513, 527, 543, 559, 574, 588, 602, 618, 633, 645, 660, 676, 698, 746, 759, 769, 779, 790, 800], "transform": [395, 396, 415, 416, 447, 448, 467, 468, 490, 491, 736, 738, 766, 776, 786, 797, 807], "transform_numpi": 737, "transformed_numpi": 739, "translat": [740, 741], "trim_jack_stud": 357, "trim_king_stud": 358, "trim_stud": 359, "tstepjoint": [232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249], "type": [824, 826], "update_beam_rol": 66, "util": 827, "validate_data": [26, 47, 67, 86, 105, 124, 143, 160, 177, 194, 212, 231, 249, 267, 286, 307, 397, 417, 427, 449, 469, 492, 508, 525, 541, 557, 571, 586, 600, 613, 629, 643, 658, 673, 687, 742, 754, 767, 777, 787, 798, 808], "volume_from_params_and_beam": [614, 630, 688], "wall": [470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "workflow": 828, "write": [511, 822], "x": 824, "xlapjoint": [268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "ybuttjoint": [287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307]}})