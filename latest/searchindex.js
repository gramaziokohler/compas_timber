Search.setIndex({"alltitles": {"API Reference": [[0, null]], "Actor": [[750, null]], "Actor.get_name": [[751, null]], "Attributes": [[825, null]], "BTLx Contribution Guide": [[824, null]], "BTLxPart": [[487, null]], "BTLxPart.et_point_vals": [[488, null]], "BTLxPart.ref_side_from_face": [[489, null]], "BTLxProcessing": [[490, null]], "BTLxProcessing.ToString": [[491, null]], "BTLxProcessing.add_subprocessing": [[492, null]], "BTLxProcessing.copy": [[493, null]], "BTLxProcessing.from_json": [[494, null]], "BTLxProcessing.from_jsonstring": [[495, null]], "BTLxProcessing.sha256": [[496, null]], "BTLxProcessing.to_json": [[497, null]], "BTLxProcessing.to_jsonstring": [[498, null]], "BTLxProcessing.validate_data": [[499, null]], "BTLxWriter": [[500, null]], "BTLxWriter.model_to_xml": [[501, null]], "BTLxWriter.register_type_serializer": [[502, null]], "BTLxWriter.write": [[503, null]], "Bake with BoxMap": [[834, "bake-with-boxmap"]], "BallNodeJoint": [[10, null]], "BallNodeJoint.ToString": [[11, null]], "BallNodeJoint.add_extensions": [[12, null]], "BallNodeJoint.add_features": [[13, null]], "BallNodeJoint.check_elements_compatibility": [[14, null]], "BallNodeJoint.copy": [[15, null]], "BallNodeJoint.create": [[16, null]], "BallNodeJoint.element_count_complies": [[17, null]], "BallNodeJoint.from_json": [[18, null]], "BallNodeJoint.from_jsonstring": [[19, null]], "BallNodeJoint.get_face_most_ortho_to_beam": [[20, null]], "BallNodeJoint.get_face_most_towards_beam": [[21, null]], "BallNodeJoint.restore_beams_from_keys": [[22, null]], "BallNodeJoint.sha256": [[23, null]], "BallNodeJoint.to_json": [[24, null]], "BallNodeJoint.to_jsonstring": [[25, null]], "BallNodeJoint.validate_data": [[26, null]], "Beam": [[358, null]], "Beam.ToString": [[359, null]], "Beam.add_blank_extension": [[360, null]], "Beam.add_feature": [[361, null]], "Beam.add_features": [[362, null]], "Beam.back_side": [[363, null]], "Beam.compute_aabb": [[364, null]], "Beam.compute_collision_mesh": [[365, null]], "Beam.compute_geometry": [[366, null]], "Beam.compute_obb": [[367, null]], "Beam.compute_worldtransformation": [[368, null]], "Beam.copy": [[369, null]], "Beam.endpoint_closest_to_point": [[370, null]], "Beam.extension_to_plane": [[371, null]], "Beam.from_centerline": [[372, null]], "Beam.from_endpoints": [[373, null]], "Beam.from_json": [[374, null]], "Beam.from_jsonstring": [[375, null]], "Beam.front_side": [[376, null]], "Beam.get_dimensions_relative_to_side": [[377, null]], "Beam.opp_side": [[378, null]], "Beam.remove_blank_extension": [[379, null]], "Beam.remove_features": [[380, null]], "Beam.reset": [[381, null]], "Beam.sha256": [[382, null]], "Beam.side_as_surface": [[383, null]], "Beam.to_json": [[384, null]], "Beam.to_jsonstring": [[385, null]], "Beam.transform": [[386, null]], "Beam.transformed": [[387, null]], "Beam.validate_data": [[388, null]], "BeamJoiningError": [[484, null]], "Beams": [[826, null]], "BuildingPlan": [[752, null]], "BuildingPlan.ToString": [[753, null]], "BuildingPlan.add_step": [[754, null]], "BuildingPlan.copy": [[755, null]], "BuildingPlan.from_json": [[756, null]], "BuildingPlan.from_jsonstring": [[757, null]], "BuildingPlan.sha256": [[758, null]], "BuildingPlan.to_json": [[759, null]], "BuildingPlan.to_jsonstring": [[760, null]], "BuildingPlan.validate_data": [[761, null]], "BuildingPlanParser": [[762, null]], "BuildingPlanParser.parse": [[763, null]], "BuildingPlanParser.serialize": [[764, null]], "COMPAS Timber Documentation": [[820, null]], "Category Joint Rules": [[831, "category-joint-rules"]], "CategoryRule": [[298, null]], "CategoryRule.ToString": [[299, null]], "CategoryRule.comply": [[300, null]], "CategoryRule.get_category_rules": [[301, null]], "CategoryRule.get_direct_rules": [[302, null]], "CategoryRule.get_topology_rules": [[303, null]], "CategoryRule.joints_from_beams_and_rules": [[304, null]], "CategoryRule.reorder": [[305, null]], "Check Attributes": [[825, "check-attributes"]], "Citing": [[817, null]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"]], "ConnectionSolver": [[27, null]], "ConnectionSolver.find_intersecting_pairs": [[28, null]], "ConnectionSolver.find_topology": [[29, null]], "ConnectionSolver.find_wall_wall_topology": [[30, null]], "Create Joint": [[819, null]], "Custom Attributes": [[825, "custom-attributes"]], "Custom Beam Dimensions": [[827, "custom-beam-dimensions"]], "DebugInfomation": [[306, null]], "DebugInfomation.ToString": [[307, null]], "DebugInfomation.add_fastener_error": [[308, null]], "DebugInfomation.add_feature_error": [[309, null]], "DebugInfomation.add_joint_error": [[310, null]], "DecomposeBeam": [[826, "decomposebeam"]], "Default Joint Rules": [[831, "default-joint-rules"]], "Delete Attributes": [[825, "delete-attributes"]], "Dependencies": [[820, "dependencies"]], "Design": [[827, null]], "Development": [[821, "development"]], "Direct Joint Rules": [[831, "direct-joint-rules"]], "DirectRule": [[311, null]], "DirectRule.ToString": [[312, null]], "DirectRule.comply": [[313, null]], "DirectRule.contains": [[314, null]], "DirectRule.get_category_rules": [[315, null]], "DirectRule.get_direct_rules": [[316, null]], "DirectRule.get_topology_rules": [[317, null]], "DirectRule.joints_from_beams_and_rules": [[318, null]], "Double Cut Feature": [[830, "double-cut-feature"]], "DoubleCut": [[504, null]], "DoubleCut.ToString": [[505, null]], "DoubleCut.add_subprocessing": [[506, null]], "DoubleCut.apply": [[507, null]], "DoubleCut.copy": [[508, null]], "DoubleCut.from_json": [[509, null]], "DoubleCut.from_jsonstring": [[510, null]], "DoubleCut.from_planes_and_beam": [[511, null]], "DoubleCut.from_shapes_and_element": [[512, null]], "DoubleCut.planes_from_params_and_beam": [[513, null]], "DoubleCut.sha256": [[514, null]], "DoubleCut.to_json": [[515, null]], "DoubleCut.to_jsonstring": [[516, null]], "DoubleCut.validate_data": [[517, null]], "DovetailMortise": [[518, null]], "DovetailMortise.ToString": [[519, null]], "DovetailMortise.add_subprocessing": [[520, null]], "DovetailMortise.apply": [[521, null]], "DovetailMortise.copy": [[522, null]], "DovetailMortise.define_dovetail_tool": [[523, null]], "DovetailMortise.dovetail_cutting_frames_from_params_and_beam": [[524, null]], "DovetailMortise.dovetail_volume_from_params_and_beam": [[525, null]], "DovetailMortise.frame_from_params_and_beam": [[526, null]], "DovetailMortise.from_frame_and_beam": [[527, null]], "DovetailMortise.from_json": [[528, null]], "DovetailMortise.from_jsonstring": [[529, null]], "DovetailMortise.sha256": [[530, null]], "DovetailMortise.to_json": [[531, null]], "DovetailMortise.to_jsonstring": [[532, null]], "DovetailMortise.validate_data": [[533, null]], "DovetailTenon": [[534, null]], "DovetailTenon.ToString": [[535, null]], "DovetailTenon.add_subprocessing": [[536, null]], "DovetailTenon.apply": [[537, null]], "DovetailTenon.copy": [[538, null]], "DovetailTenon.define_dovetail_tool": [[539, null]], "DovetailTenon.dovetail_cutting_frames_from_params_and_beam": [[540, null]], "DovetailTenon.dovetail_volume_from_params_and_beam": [[541, null]], "DovetailTenon.frame_from_params_and_beam": [[542, null]], "DovetailTenon.from_json": [[543, null]], "DovetailTenon.from_jsonstring": [[544, null]], "DovetailTenon.from_plane_and_beam": [[545, null]], "DovetailTenon.sha256": [[546, null]], "DovetailTenon.to_json": [[547, null]], "DovetailTenon.to_jsonstring": [[548, null]], "DovetailTenon.validate_data": [[549, null]], "Drilling": [[550, null]], "Drilling Feature": [[830, "drilling-feature"]], "Drilling.ToString": [[551, null]], "Drilling.add_subprocessing": [[552, null]], "Drilling.apply": [[553, null]], "Drilling.copy": [[554, null]], "Drilling.cylinder_from_params_and_element": [[555, null]], "Drilling.from_json": [[556, null]], "Drilling.from_jsonstring": [[557, null]], "Drilling.from_line_and_element": [[558, null]], "Drilling.from_shapes_and_element": [[559, null]], "Drilling.sha256": [[560, null]], "Drilling.to_json": [[561, null]], "Drilling.to_jsonstring": [[562, null]], "Drilling.validate_data": [[563, null]], "EdgePositionType": [[564, null]], "Examples": [[818, null], [828, null]], "Exceptions": [[1, "exceptions"]], "Fabrication": [[829, null]], "Fastener": [[389, null]], "Fastener.ToString": [[390, null]], "Fastener.add_feature": [[391, null]], "Fastener.compute_aabb": [[392, null]], "Fastener.compute_collision_mesh": [[393, null]], "Fastener.compute_geometry": [[394, null]], "Fastener.compute_obb": [[395, null]], "Fastener.compute_worldtransformation": [[396, null]], "Fastener.copy": [[397, null]], "Fastener.from_json": [[398, null]], "Fastener.from_jsonstring": [[399, null]], "Fastener.remove_blank_extension": [[400, null]], "Fastener.remove_features": [[401, null]], "Fastener.reset": [[402, null]], "Fastener.sha256": [[403, null]], "Fastener.to_json": [[404, null]], "Fastener.to_jsonstring": [[405, null]], "Fastener.transform": [[406, null]], "Fastener.transformed": [[407, null]], "Fastener.validate_data": [[408, null]], "FastenerApplicationError": [[485, null]], "FastenerTimberInterface": [[409, null]], "FastenerTimberInterface.ToString": [[410, null]], "FastenerTimberInterface.copy": [[411, null]], "FastenerTimberInterface.from_json": [[412, null]], "FastenerTimberInterface.from_jsonstring": [[413, null]], "FastenerTimberInterface.get_features": [[414, null]], "FastenerTimberInterface.sha256": [[415, null]], "FastenerTimberInterface.to_json": [[416, null]], "FastenerTimberInterface.to_jsonstring": [[417, null]], "FastenerTimberInterface.validate_data": [[418, null]], "FeatureApplicationError": [[486, null]], "FeatureDefinition": [[319, null]], "FeatureDefinition.ToString": [[320, null]], "Features": [[830, null]], "FindBeamByRhinoGuid": [[826, "findbeambyrhinoguid"]], "French Ridge Lap": [[831, "french-ridge-lap"]], "FrenchRidgeLap": [[565, null]], "FrenchRidgeLap.ToString": [[566, null]], "FrenchRidgeLap.add_subprocessing": [[567, null]], "FrenchRidgeLap.apply": [[568, null]], "FrenchRidgeLap.copy": [[569, null]], "FrenchRidgeLap.frame_from_params_and_beam": [[570, null]], "FrenchRidgeLap.from_beam_beam_and_plane": [[571, null]], "FrenchRidgeLap.from_json": [[572, null]], "FrenchRidgeLap.from_jsonstring": [[573, null]], "FrenchRidgeLap.lap_volume_from_params_and_beam": [[574, null]], "FrenchRidgeLap.sha256": [[575, null]], "FrenchRidgeLap.to_json": [[576, null]], "FrenchRidgeLap.to_jsonstring": [[577, null]], "FrenchRidgeLap.validate_data": [[578, null]], "Functions": [[1, "functions"], [2, "functions"], [6, "functions"]], "Grasshopper plugin": [[823, null]], "Indices and tables": [[820, "indices-and-tables"]], "Install with conda": [[821, "install-with-conda"]], "Installation": [[821, null]], "Instruction": [[765, null]], "Instruction.ToString": [[766, null]], "Instruction.copy": [[767, null]], "Instruction.from_json": [[768, null]], "Instruction.from_jsonstring": [[769, null]], "Instruction.sha256": [[770, null]], "Instruction.to_json": [[771, null]], "Instruction.to_jsonstring": [[772, null]], "Instruction.transform": [[773, null]], "Instruction.validate_data": [[774, null]], "Jack Rafter Cut Feature": [[830, "jack-rafter-cut-feature"]], "JackRafterCut": [[579, null]], "JackRafterCut.ToString": [[580, null]], "JackRafterCut.add_subprocessing": [[581, null]], "JackRafterCut.apply": [[582, null]], "JackRafterCut.copy": [[583, null]], "JackRafterCut.from_json": [[584, null]], "JackRafterCut.from_jsonstring": [[585, null]], "JackRafterCut.from_plane_and_beam": [[586, null]], "JackRafterCut.from_shapes_and_element": [[587, null]], "JackRafterCut.plane_from_params_and_beam": [[588, null]], "JackRafterCut.sha256": [[589, null]], "JackRafterCut.to_json": [[590, null]], "JackRafterCut.to_jsonstring": [[591, null]], "JackRafterCut.validate_data": [[592, null]], "Joint": [[31, null]], "Joint Rules": [[831, null]], "Joint Rules Components": [[831, "joint-rules-components"]], "Joint Types": [[831, "joint-types"]], "Joint.ToString": [[32, null]], "Joint.add_extensions": [[33, null]], "Joint.add_features": [[34, null]], "Joint.check_elements_compatibility": [[35, null]], "Joint.copy": [[36, null]], "Joint.create": [[37, null]], "Joint.element_count_complies": [[38, null]], "Joint.from_json": [[39, null]], "Joint.from_jsonstring": [[40, null]], "Joint.get_face_most_ortho_to_beam": [[41, null]], "Joint.get_face_most_towards_beam": [[42, null]], "Joint.restore_beams_from_keys": [[43, null]], "Joint.sha256": [[44, null]], "Joint.to_json": [[45, null]], "Joint.to_jsonstring": [[46, null]], "Joint.validate_data": [[47, null]], "JointDefinition": [[321, null]], "JointDefinition.ToString": [[322, null]], "JointDefinition.is_identical": [[323, null]], "JointDefinition.match": [[324, null]], "JointRule": [[325, null]], "JointRule.comply": [[326, null]], "JointRule.get_category_rules": [[327, null]], "JointRule.get_direct_rules": [[328, null]], "JointRule.get_topology_rules": [[329, null]], "JointRule.joints_from_beams_and_rules": [[330, null]], "JointTopology": [[48, null]], "JointTopology.get_name": [[49, null]], "L-Butt": [[831, "l-butt"]], "L-Lap": [[831, "l-lap"]], "L-Miter": [[831, "l-miter"]], "LButtJoint": [[50, null]], "LButtJoint.ToString": [[51, null]], "LButtJoint.add_extensions": [[52, null]], "LButtJoint.add_features": [[53, null]], "LButtJoint.check_elements_compatibility": [[54, null]], "LButtJoint.copy": [[55, null]], "LButtJoint.create": [[56, null]], "LButtJoint.element_count_complies": [[57, null]], "LButtJoint.from_json": [[58, null]], "LButtJoint.from_jsonstring": [[59, null]], "LButtJoint.get_face_most_ortho_to_beam": [[60, null]], "LButtJoint.get_face_most_towards_beam": [[61, null]], "LButtJoint.restore_beams_from_keys": [[62, null]], "LButtJoint.sha256": [[63, null]], "LButtJoint.to_json": [[64, null]], "LButtJoint.to_jsonstring": [[65, null]], "LButtJoint.update_beam_roles": [[66, null]], "LButtJoint.validate_data": [[67, null]], "LFrenchRidgeLapJoint": [[68, null]], "LFrenchRidgeLapJoint.ToString": [[69, null]], "LFrenchRidgeLapJoint.add_extensions": [[70, null]], "LFrenchRidgeLapJoint.add_features": [[71, null]], "LFrenchRidgeLapJoint.check_elements_compatibility": [[72, null]], "LFrenchRidgeLapJoint.copy": [[73, null]], "LFrenchRidgeLapJoint.create": [[74, null]], "LFrenchRidgeLapJoint.element_count_complies": [[75, null]], "LFrenchRidgeLapJoint.from_json": [[76, null]], "LFrenchRidgeLapJoint.from_jsonstring": [[77, null]], "LFrenchRidgeLapJoint.get_face_most_ortho_to_beam": [[78, null]], "LFrenchRidgeLapJoint.get_face_most_towards_beam": [[79, null]], "LFrenchRidgeLapJoint.restore_beams_from_keys": [[80, null]], "LFrenchRidgeLapJoint.sha256": [[81, null]], "LFrenchRidgeLapJoint.to_json": [[82, null]], "LFrenchRidgeLapJoint.to_jsonstring": [[83, null]], "LFrenchRidgeLapJoint.validate_data": [[84, null]], "LLapJoint": [[85, null]], "LLapJoint.ToString": [[86, null]], "LLapJoint.add_extensions": [[87, null]], "LLapJoint.add_features": [[88, null]], "LLapJoint.check_elements_compatibility": [[89, null]], "LLapJoint.copy": [[90, null]], "LLapJoint.create": [[91, null]], "LLapJoint.element_count_complies": [[92, null]], "LLapJoint.from_json": [[93, null]], "LLapJoint.from_jsonstring": [[94, null]], "LLapJoint.get_face_most_ortho_to_beam": [[95, null]], "LLapJoint.get_face_most_towards_beam": [[96, null]], "LLapJoint.restore_beams_from_keys": [[97, null]], "LLapJoint.sha256": [[98, null]], "LLapJoint.to_json": [[99, null]], "LLapJoint.to_jsonstring": [[100, null]], "LLapJoint.validate_data": [[101, null]], "LMiterJoint": [[102, null]], "LMiterJoint.ToString": [[103, null]], "LMiterJoint.add_extensions": [[104, null]], "LMiterJoint.add_features": [[105, null]], "LMiterJoint.check_elements_compatibility": [[106, null]], "LMiterJoint.copy": [[107, null]], "LMiterJoint.create": [[108, null]], "LMiterJoint.element_count_complies": [[109, null]], "LMiterJoint.from_json": [[110, null]], "LMiterJoint.from_jsonstring": [[111, null]], "LMiterJoint.get_cutoff_plane": [[112, null]], "LMiterJoint.get_cutting_planes": [[113, null]], "LMiterJoint.get_face_most_ortho_to_beam": [[114, null]], "LMiterJoint.get_face_most_towards_beam": [[115, null]], "LMiterJoint.restore_beams_from_keys": [[116, null]], "LMiterJoint.sha256": [[117, null]], "LMiterJoint.to_json": [[118, null]], "LMiterJoint.to_jsonstring": [[119, null]], "LMiterJoint.validate_data": [[120, null]], "Lap": [[593, null]], "Lap.ToString": [[594, null]], "Lap.add_subprocessing": [[595, null]], "Lap.apply": [[596, null]], "Lap.copy": [[597, null]], "Lap.from_json": [[598, null]], "Lap.from_jsonstring": [[599, null]], "Lap.from_plane_and_beam": [[600, null]], "Lap.from_shapes_and_element": [[601, null]], "Lap.from_volume_and_beam": [[602, null]], "Lap.sha256": [[603, null]], "Lap.to_json": [[604, null]], "Lap.to_jsonstring": [[605, null]], "Lap.validate_data": [[606, null]], "Lap.volume_from_params_and_beam": [[607, null]], "LapJoint": [[121, null]], "LapJoint.ToString": [[122, null]], "LapJoint.add_extensions": [[123, null]], "LapJoint.add_features": [[124, null]], "LapJoint.check_elements_compatibility": [[125, null]], "LapJoint.copy": [[126, null]], "LapJoint.create": [[127, null]], "LapJoint.element_count_complies": [[128, null]], "LapJoint.from_json": [[129, null]], "LapJoint.from_jsonstring": [[130, null]], "LapJoint.get_face_most_ortho_to_beam": [[131, null]], "LapJoint.get_face_most_towards_beam": [[132, null]], "LapJoint.restore_beams_from_keys": [[133, null]], "LapJoint.sha256": [[134, null]], "LapJoint.to_json": [[135, null]], "LapJoint.to_jsonstring": [[136, null]], "LapJoint.validate_data": [[137, null]], "License": [[822, null]], "LimitationTopType": [[608, null]], "LinearDimension": [[775, null]], "LinearDimension.ToString": [[776, null]], "LinearDimension.copy": [[777, null]], "LinearDimension.from_json": [[778, null]], "LinearDimension.from_jsonstring": [[779, null]], "LinearDimension.sha256": [[780, null]], "LinearDimension.to_json": [[781, null]], "LinearDimension.to_jsonstring": [[782, null]], "LinearDimension.transform": [[783, null]], "LinearDimension.validate_data": [[784, null]], "MachiningLimits": [[609, null]], "Model": [[832, null]], "Model3d": [[785, null]], "Model3d.ToString": [[786, null]], "Model3d.copy": [[787, null]], "Model3d.from_json": [[788, null]], "Model3d.from_jsonstring": [[789, null]], "Model3d.sha256": [[790, null]], "Model3d.to_json": [[791, null]], "Model3d.to_jsonstring": [[792, null]], "Model3d.transform": [[793, null]], "Model3d.validate_data": [[794, null]], "Mortise": [[610, null]], "Mortise.ToString": [[611, null]], "Mortise.add_subprocessing": [[612, null]], "Mortise.apply": [[613, null]], "Mortise.copy": [[614, null]], "Mortise.frame_from_params_and_beam": [[615, null]], "Mortise.from_frame_and_beam": [[616, null]], "Mortise.from_json": [[617, null]], "Mortise.from_jsonstring": [[618, null]], "Mortise.sha256": [[619, null]], "Mortise.to_json": [[620, null]], "Mortise.to_jsonstring": [[621, null]], "Mortise.validate_data": [[622, null]], "Mortise.volume_from_params_and_beam": [[623, null]], "NullJoint": [[138, null]], "NullJoint.ToString": [[139, null]], "NullJoint.add_extensions": [[140, null]], "NullJoint.add_features": [[141, null]], "NullJoint.check_elements_compatibility": [[142, null]], "NullJoint.copy": [[143, null]], "NullJoint.create": [[144, null]], "NullJoint.element_count_complies": [[145, null]], "NullJoint.from_json": [[146, null]], "NullJoint.from_jsonstring": [[147, null]], "NullJoint.get_face_most_ortho_to_beam": [[148, null]], "NullJoint.get_face_most_towards_beam": [[149, null]], "NullJoint.restore_beams_from_keys": [[150, null]], "NullJoint.sha256": [[151, null]], "NullJoint.to_json": [[152, null]], "NullJoint.to_jsonstring": [[153, null]], "NullJoint.validate_data": [[154, null]], "OrientationType": [[624, null]], "Packages": [[0, "packages"]], "Plate": [[419, null]], "Plate.ToString": [[420, null]], "Plate.add_feature": [[421, null]], "Plate.add_features": [[422, null]], "Plate.compute_aabb": [[423, null]], "Plate.compute_collision_mesh": [[424, null]], "Plate.compute_geometry": [[425, null]], "Plate.compute_obb": [[426, null]], "Plate.compute_worldtransformation": [[427, null]], "Plate.copy": [[428, null]], "Plate.from_json": [[429, null]], "Plate.from_jsonstring": [[430, null]], "Plate.remove_blank_extension": [[431, null]], "Plate.remove_features": [[432, null]], "Plate.reset": [[433, null]], "Plate.sha256": [[434, null]], "Plate.side_as_surface": [[435, null]], "Plate.to_json": [[436, null]], "Plate.to_jsonstring": [[437, null]], "Plate.transform": [[438, null]], "Plate.transformed": [[439, null]], "Plate.validate_data": [[440, null]], "Plugins": [[9, "plugins"]], "Pocket": [[625, null]], "Pocket.ToString": [[626, null]], "Pocket.add_subprocessing": [[627, null]], "Pocket.apply": [[628, null]], "Pocket.copy": [[629, null]], "Pocket.from_json": [[630, null]], "Pocket.from_jsonstring": [[631, null]], "Pocket.from_shapes_and_element": [[632, null]], "Pocket.from_volume_and_element": [[633, null]], "Pocket.sha256": [[634, null]], "Pocket.to_json": [[635, null]], "Pocket.to_jsonstring": [[636, null]], "Pocket.validate_data": [[637, null]], "Pocket.volume_from_params_and_element": [[638, null]], "Show": [[833, null]], "Show Beam Face Index": [[833, "show-beam-face-index"]], "Show Beam Index": [[833, "show-beam-index"]], "Show Feature Errors": [[833, "show-feature-errors"]], "Show Joining Errors": [[833, "show-joining-errors"]], "Show Joint Types": [[833, "show-joint-types"]], "Show Surface Model Beam Types": [[833, "show-surface-model-beam-types"]], "Show Topology Types": [[833, "show-topology-types"]], "SimpleSequenceGenerator": [[795, null]], "Slot": [[639, null]], "Slot.ToString": [[640, null]], "Slot.add_subprocessing": [[641, null]], "Slot.apply": [[642, null]], "Slot.copy": [[643, null]], "Slot.from_json": [[644, null]], "Slot.from_jsonstring": [[645, null]], "Slot.from_plane_and_beam": [[646, null]], "Slot.sha256": [[647, null]], "Slot.to_json": [[648, null]], "Slot.to_jsonstring": [[649, null]], "Slot.validate_data": [[650, null]], "Stable": [[821, "stable"]], "Standard Attributes": [[825, "standard-attributes"]], "Step": [[796, null]], "Step.ToString": [[797, null]], "Step.copy": [[798, null]], "Step.from_json": [[799, null]], "Step.from_jsonstring": [[800, null]], "Step.sha256": [[801, null]], "Step.to_json": [[802, null]], "Step.to_jsonstring": [[803, null]], "Step.transform": [[804, null]], "Step.validate_data": [[805, null]], "StepJoint": [[651, null]], "StepJoint.ToString": [[652, null]], "StepJoint.add_subprocessing": [[653, null]], "StepJoint.add_tenon": [[654, null]], "StepJoint.apply": [[655, null]], "StepJoint.copy": [[656, null]], "StepJoint.from_json": [[657, null]], "StepJoint.from_jsonstring": [[658, null]], "StepJoint.from_plane_and_beam": [[659, null]], "StepJoint.planes_from_params_and_beam": [[660, null]], "StepJoint.sha256": [[661, null]], "StepJoint.tenon_volume_from_params_and_beam": [[662, null]], "StepJoint.to_json": [[663, null]], "StepJoint.to_jsonstring": [[664, null]], "StepJoint.validate_data": [[665, null]], "StepJointNotch": [[666, null]], "StepJointNotch.ToString": [[667, null]], "StepJointNotch.add_mortise": [[668, null]], "StepJointNotch.add_subprocessing": [[669, null]], "StepJointNotch.apply": [[670, null]], "StepJointNotch.copy": [[671, null]], "StepJointNotch.from_json": [[672, null]], "StepJointNotch.from_jsonstring": [[673, null]], "StepJointNotch.from_plane_and_beam": [[674, null]], "StepJointNotch.mortise_volume_from_params_and_beam": [[675, null]], "StepJointNotch.planes_from_params_and_beam": [[676, null]], "StepJointNotch.sha256": [[677, null]], "StepJointNotch.to_json": [[678, null]], "StepJointNotch.to_jsonstring": [[679, null]], "StepJointNotch.validate_data": [[680, null]], "StepShapeType": [[681, null]], "Summary Table": [[831, "summary-table"]], "Surface Model": [[827, "surface-model"]], "Surface Model Joint Override": [[831, "surface-model-joint-override"]], "Surface Model Options": [[827, "surface-model-options"]], "SurfaceModel": [[331, null]], "SurfaceModel.beam_category_names": [[332, null]], "SurfaceModel.create_model": [[333, null]], "SurfaceModel.cull_overlaps": [[334, null]], "SurfaceModel.distance_between_elements": [[335, null]], "SurfaceModel.generate_frame": [[336, null]], "SurfaceModel.generate_perimeter_beams": [[337, null]], "SurfaceModel.generate_plates": [[338, null]], "SurfaceModel.generate_stud_lines": [[339, null]], "SurfaceModel.generate_studs": [[340, null]], "SurfaceModel.generate_windows": [[341, null]], "SurfaceModel.get_beam_intersections": [[342, null]], "SurfaceModel.get_interior_segment_indices": [[343, null]], "SurfaceModel.offset_elements": [[344, null]], "SurfaceModel.parse_loops": [[345, null]], "SurfaceModel.trim_jack_studs": [[346, null]], "SurfaceModel.trim_king_studs": [[347, null]], "SurfaceModel.trim_studs": [[348, null]], "T-Birdsmouth": [[831, "t-birdsmouth"]], "T-Butt": [[831, "t-butt"]], "T-Dovetail": [[831, "t-dovetail"]], "T-Lap": [[831, "t-lap"]], "T-Step": [[831, "t-step"]], "TBirdsmouthJoint": [[155, null]], "TBirdsmouthJoint.ToString": [[156, null]], "TBirdsmouthJoint.add_extensions": [[157, null]], "TBirdsmouthJoint.add_features": [[158, null]], "TBirdsmouthJoint.check_elements_compatibility": [[159, null]], "TBirdsmouthJoint.copy": [[160, null]], "TBirdsmouthJoint.create": [[161, null]], "TBirdsmouthJoint.element_count_complies": [[162, null]], "TBirdsmouthJoint.from_json": [[163, null]], "TBirdsmouthJoint.from_jsonstring": [[164, null]], "TBirdsmouthJoint.get_face_most_ortho_to_beam": [[165, null]], "TBirdsmouthJoint.get_face_most_towards_beam": [[166, null]], "TBirdsmouthJoint.restore_beams_from_keys": [[167, null]], "TBirdsmouthJoint.sha256": [[168, null]], "TBirdsmouthJoint.to_json": [[169, null]], "TBirdsmouthJoint.to_jsonstring": [[170, null]], "TBirdsmouthJoint.validate_data": [[171, null]], "TButtJoint": [[172, null]], "TButtJoint.ToString": [[173, null]], "TButtJoint.add_extensions": [[174, null]], "TButtJoint.add_features": [[175, null]], "TButtJoint.check_elements_compatibility": [[176, null]], "TButtJoint.copy": [[177, null]], "TButtJoint.create": [[178, null]], "TButtJoint.element_count_complies": [[179, null]], "TButtJoint.from_json": [[180, null]], "TButtJoint.from_jsonstring": [[181, null]], "TButtJoint.get_face_most_ortho_to_beam": [[182, null]], "TButtJoint.get_face_most_towards_beam": [[183, null]], "TButtJoint.restore_beams_from_keys": [[184, null]], "TButtJoint.sha256": [[185, null]], "TButtJoint.to_json": [[186, null]], "TButtJoint.to_jsonstring": [[187, null]], "TButtJoint.validate_data": [[188, null]], "TDovetailJoint": [[189, null]], "TDovetailJoint.ToString": [[190, null]], "TDovetailJoint.add_extensions": [[191, null]], "TDovetailJoint.add_features": [[192, null]], "TDovetailJoint.check_elements_compatibility": [[193, null]], "TDovetailJoint.copy": [[194, null]], "TDovetailJoint.create": [[195, null]], "TDovetailJoint.define_dovetail_tool": [[196, null]], "TDovetailJoint.element_count_complies": [[197, null]], "TDovetailJoint.from_json": [[198, null]], "TDovetailJoint.from_jsonstring": [[199, null]], "TDovetailJoint.get_face_most_ortho_to_beam": [[200, null]], "TDovetailJoint.get_face_most_towards_beam": [[201, null]], "TDovetailJoint.restore_beams_from_keys": [[202, null]], "TDovetailJoint.sha256": [[203, null]], "TDovetailJoint.to_json": [[204, null]], "TDovetailJoint.to_jsonstring": [[205, null]], "TDovetailJoint.validate_data": [[206, null]], "TLapJoint": [[207, null]], "TLapJoint.ToString": [[208, null]], "TLapJoint.add_extensions": [[209, null]], "TLapJoint.add_features": [[210, null]], "TLapJoint.check_elements_compatibility": [[211, null]], "TLapJoint.copy": [[212, null]], "TLapJoint.create": [[213, null]], "TLapJoint.element_count_complies": [[214, null]], "TLapJoint.from_json": [[215, null]], "TLapJoint.from_jsonstring": [[216, null]], "TLapJoint.get_face_most_ortho_to_beam": [[217, null]], "TLapJoint.get_face_most_towards_beam": [[218, null]], "TLapJoint.restore_beams_from_keys": [[219, null]], "TLapJoint.sha256": [[220, null]], "TLapJoint.to_json": [[221, null]], "TLapJoint.to_jsonstring": [[222, null]], "TLapJoint.validate_data": [[223, null]], "TStepJoint": [[224, null]], "TStepJoint.ToString": [[225, null]], "TStepJoint.add_extensions": [[226, null]], "TStepJoint.add_features": [[227, null]], "TStepJoint.check_elements_compatibility": [[228, null]], "TStepJoint.copy": [[229, null]], "TStepJoint.create": [[230, null]], "TStepJoint.element_count_complies": [[231, null]], "TStepJoint.from_json": [[232, null]], "TStepJoint.from_jsonstring": [[233, null]], "TStepJoint.get_face_most_ortho_to_beam": [[234, null]], "TStepJoint.get_face_most_towards_beam": [[235, null]], "TStepJoint.restore_beams_from_keys": [[236, null]], "TStepJoint.set_step_depths": [[237, null]], "TStepJoint.sha256": [[238, null]], "TStepJoint.to_json": [[239, null]], "TStepJoint.to_jsonstring": [[240, null]], "TStepJoint.validate_data": [[241, null]], "Table of Contents": [[820, "table-of-contents"]], "Tenon": [[682, null]], "Tenon and Mortise": [[831, "tenon-and-mortise"], [831, "id1"]], "Tenon.ToString": [[683, null]], "Tenon.add_subprocessing": [[684, null]], "Tenon.apply": [[685, null]], "Tenon.copy": [[686, null]], "Tenon.frame_from_params_and_beam": [[687, null]], "Tenon.from_json": [[688, null]], "Tenon.from_jsonstring": [[689, null]], "Tenon.from_plane_and_beam": [[690, null]], "Tenon.sha256": [[691, null]], "Tenon.to_json": [[692, null]], "Tenon.to_jsonstring": [[693, null]], "Tenon.validate_data": [[694, null]], "Tenon.volume_from_params_and_beam": [[695, null]], "TenonMortiseJoint": [[242, null]], "TenonMortiseJoint.ToString": [[243, null]], "TenonMortiseJoint.add_extensions": [[244, null]], "TenonMortiseJoint.add_features": [[245, null]], "TenonMortiseJoint.check_elements_compatibility": [[246, null]], "TenonMortiseJoint.copy": [[247, null]], "TenonMortiseJoint.create": [[248, null]], "TenonMortiseJoint.element_count_complies": [[249, null]], "TenonMortiseJoint.from_json": [[250, null]], "TenonMortiseJoint.from_jsonstring": [[251, null]], "TenonMortiseJoint.get_face_most_ortho_to_beam": [[252, null]], "TenonMortiseJoint.get_face_most_towards_beam": [[253, null]], "TenonMortiseJoint.restore_beams_from_keys": [[254, null]], "TenonMortiseJoint.set_default_values": [[255, null]], "TenonMortiseJoint.sha256": [[256, null]], "TenonMortiseJoint.to_json": [[257, null]], "TenonMortiseJoint.to_jsonstring": [[258, null]], "TenonMortiseJoint.validate_data": [[259, null]], "TenonShapeType": [[696, null]], "Text3d": [[806, null]], "Text3d.ToString": [[807, null]], "Text3d.copy": [[808, null]], "Text3d.from_json": [[809, null]], "Text3d.from_jsonstring": [[810, null]], "Text3d.sha256": [[811, null]], "Text3d.to_json": [[812, null]], "Text3d.to_jsonstring": [[813, null]], "Text3d.transform": [[814, null]], "Text3d.validate_data": [[815, null]], "Timber Assembly Examples": [[818, "timber-assembly-examples"]], "TimberElement": [[441, null]], "TimberElement.ToString": [[442, null]], "TimberElement.add_feature": [[443, null]], "TimberElement.compute_aabb": [[444, null]], "TimberElement.compute_collision_mesh": [[445, null]], "TimberElement.compute_geometry": [[446, null]], "TimberElement.compute_obb": [[447, null]], "TimberElement.compute_worldtransformation": [[448, null]], "TimberElement.copy": [[449, null]], "TimberElement.from_json": [[450, null]], "TimberElement.from_jsonstring": [[451, null]], "TimberElement.remove_blank_extension": [[452, null]], "TimberElement.remove_features": [[453, null]], "TimberElement.reset": [[454, null]], "TimberElement.sha256": [[455, null]], "TimberElement.to_json": [[456, null]], "TimberElement.to_jsonstring": [[457, null]], "TimberElement.transform": [[458, null]], "TimberElement.transformed": [[459, null]], "TimberElement.validate_data": [[460, null]], "TimberModel": [[704, null]], "TimberModel.ToString": [[705, null]], "TimberModel.add_element": [[706, null]], "TimberModel.add_elements": [[707, null]], "TimberModel.add_group": [[708, null]], "TimberModel.add_group_element": [[709, null]], "TimberModel.add_interaction": [[710, null]], "TimberModel.add_joint": [[711, null]], "TimberModel.add_material": [[712, null]], "TimberModel.assign_material": [[713, null]], "TimberModel.compute_aabb": [[714, null]], "TimberModel.compute_obb": [[715, null]], "TimberModel.connect_adjacent_walls": [[716, null]], "TimberModel.copy": [[717, null]], "TimberModel.element_by_guid": [[718, null]], "TimberModel.elements": [[719, null]], "TimberModel.elements_connected_by": [[720, null]], "TimberModel.from_json": [[721, null]], "TimberModel.from_jsonstring": [[722, null]], "TimberModel.get_elements_in_group": [[723, null]], "TimberModel.get_interactions_for_element": [[724, null]], "TimberModel.has_element": [[725, null]], "TimberModel.has_group": [[726, null]], "TimberModel.has_interaction": [[727, null]], "TimberModel.has_material": [[728, null]], "TimberModel.interactions": [[729, null]], "TimberModel.materials": [[730, null]], "TimberModel.process_joinery": [[731, null]], "TimberModel.remove_element": [[732, null]], "TimberModel.remove_interaction": [[733, null]], "TimberModel.remove_joint": [[734, null]], "TimberModel.rotate": [[735, null]], "TimberModel.rotated": [[736, null]], "TimberModel.scale": [[737, null]], "TimberModel.scaled": [[738, null]], "TimberModel.set_topologies": [[739, null]], "TimberModel.sha256": [[740, null]], "TimberModel.to_json": [[741, null]], "TimberModel.to_jsonstring": [[742, null]], "TimberModel.transform": [[743, null]], "TimberModel.transform_numpy": [[744, null]], "TimberModel.transformed": [[745, null]], "TimberModel.transformed_numpy": [[746, null]], "TimberModel.translate": [[747, null]], "TimberModel.translated": [[748, null]], "TimberModel.validate_data": [[749, null]], "Topological Joint Rules": [[831, "topological-joint-rules"]], "TopologyRule": [[349, null]], "TopologyRule.ToString": [[350, null]], "TopologyRule.comply": [[351, null]], "TopologyRule.get_category_rules": [[352, null]], "TopologyRule.get_direct_rules": [[353, null]], "TopologyRule.get_topology_rules": [[354, null]], "TopologyRule.joints_from_beams_and_rules": [[355, null]], "Utils": [[834, null]], "Wall": [[461, null]], "Wall.ToString": [[462, null]], "Wall.add_feature": [[463, null]], "Wall.compute_aabb": [[464, null]], "Wall.compute_collision_mesh": [[465, null]], "Wall.compute_geometry": [[466, null]], "Wall.compute_obb": [[467, null]], "Wall.compute_worldtransformation": [[468, null]], "Wall.copy": [[469, null]], "Wall.from_boundary": [[470, null]], "Wall.from_brep": [[471, null]], "Wall.from_json": [[472, null]], "Wall.from_jsonstring": [[473, null]], "Wall.remove_blank_extension": [[474, null]], "Wall.remove_features": [[475, null]], "Wall.reset": [[476, null]], "Wall.rotate": [[477, null]], "Wall.sha256": [[478, null]], "Wall.to_json": [[479, null]], "Wall.to_jsonstring": [[480, null]], "Wall.transform": [[481, null]], "Wall.transformed": [[482, null]], "Wall.validate_data": [[483, null]], "Workflow": [[835, null]], "Write BTLx": [[829, "write-btlx"]], "X-Lap": [[831, "x-lap"]], "XLapJoint": [[260, null]], "XLapJoint.ToString": [[261, null]], "XLapJoint.add_extensions": [[262, null]], "XLapJoint.add_features": [[263, null]], "XLapJoint.check_elements_compatibility": [[264, null]], "XLapJoint.copy": [[265, null]], "XLapJoint.create": [[266, null]], "XLapJoint.element_count_complies": [[267, null]], "XLapJoint.from_json": [[268, null]], "XLapJoint.from_jsonstring": [[269, null]], "XLapJoint.get_face_most_ortho_to_beam": [[270, null]], "XLapJoint.get_face_most_towards_beam": [[271, null]], "XLapJoint.restore_beams_from_keys": [[272, null]], "XLapJoint.sha256": [[273, null]], "XLapJoint.to_json": [[274, null]], "XLapJoint.to_jsonstring": [[275, null]], "XLapJoint.validate_data": [[276, null]], "YButtJoint": [[277, null]], "YButtJoint.ToString": [[278, null]], "YButtJoint.add_extensions": [[279, null]], "YButtJoint.add_features": [[280, null]], "YButtJoint.check_elements_compatibility": [[281, null]], "YButtJoint.copy": [[282, null]], "YButtJoint.create": [[283, null]], "YButtJoint.cross_beam_ref_side_index": [[284, null]], "YButtJoint.element_count_complies": [[285, null]], "YButtJoint.from_json": [[286, null]], "YButtJoint.from_jsonstring": [[287, null]], "YButtJoint.get_face_most_ortho_to_beam": [[288, null]], "YButtJoint.get_face_most_towards_beam": [[289, null]], "YButtJoint.get_miter_planes": [[290, null]], "YButtJoint.main_beam_ref_side_index": [[291, null]], "YButtJoint.restore_beams_from_keys": [[292, null]], "YButtJoint.sha256": [[293, null]], "YButtJoint.to_json": [[294, null]], "YButtJoint.to_jsonstring": [[295, null]], "YButtJoint.validate_data": [[296, null]], "add_gh_param": [[697, null]], "clear_gh_params": [[698, null]], "compas_timber.connections": [[1, null]], "compas_timber.design": [[2, null]], "compas_timber.elements": [[3, null]], "compas_timber.errors": [[4, null]], "compas_timber.fabrication": [[5, null]], "compas_timber.ghpython": [[6, null]], "compas_timber.model": [[7, null]], "compas_timber.planning": [[8, null]], "compas_timber.rhino": [[9, null]], "find_neighboring_elements": [[297, null], [816, null]], "get_leaf_subclasses": [[699, null]], "guess_joint_topology_2beams": [[356, null]], "item_input_valid": [[700, null]], "list_input_valid": [[701, null]], "manage_dynamic_params": [[702, null]], "rename_gh_input": [[703, null]], "set_default_joints": [[357, null]]}, "docnames": ["api", "api/compas_timber.connections", "api/compas_timber.design", "api/compas_timber.elements", "api/compas_timber.errors", "api/compas_timber.fabrication", "api/compas_timber.ghpython", "api/compas_timber.model", "api/compas_timber.planning", "api/compas_timber.rhino", "api/generated/compas_timber.connections.BallNodeJoint", "api/generated/compas_timber.connections.BallNodeJoint.ToString", "api/generated/compas_timber.connections.BallNodeJoint.add_extensions", "api/generated/compas_timber.connections.BallNodeJoint.add_features", "api/generated/compas_timber.connections.BallNodeJoint.check_elements_compatibility", "api/generated/compas_timber.connections.BallNodeJoint.copy", "api/generated/compas_timber.connections.BallNodeJoint.create", "api/generated/compas_timber.connections.BallNodeJoint.element_count_complies", "api/generated/compas_timber.connections.BallNodeJoint.from_json", "api/generated/compas_timber.connections.BallNodeJoint.from_jsonstring", "api/generated/compas_timber.connections.BallNodeJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.BallNodeJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.BallNodeJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.BallNodeJoint.sha256", "api/generated/compas_timber.connections.BallNodeJoint.to_json", "api/generated/compas_timber.connections.BallNodeJoint.to_jsonstring", "api/generated/compas_timber.connections.BallNodeJoint.validate_data", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.ConnectionSolver.find_wall_wall_topology", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_extensions", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.check_elements_compatibility", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.element_count_complies", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.from_jsonstring", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.to_jsonstring", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_extensions", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.element_count_complies", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring", "api/generated/compas_timber.connections.LButtJoint.update_beam_roles", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.ToString", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.add_extensions", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.add_features", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.copy", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.create", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.element_count_complies", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.from_json", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.from_jsonstring", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.sha256", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.to_json", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.to_jsonstring", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.validate_data", "api/generated/compas_timber.connections.LLapJoint", "api/generated/compas_timber.connections.LLapJoint.ToString", "api/generated/compas_timber.connections.LLapJoint.add_extensions", "api/generated/compas_timber.connections.LLapJoint.add_features", "api/generated/compas_timber.connections.LLapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LLapJoint.copy", "api/generated/compas_timber.connections.LLapJoint.create", "api/generated/compas_timber.connections.LLapJoint.element_count_complies", "api/generated/compas_timber.connections.LLapJoint.from_json", "api/generated/compas_timber.connections.LLapJoint.from_jsonstring", "api/generated/compas_timber.connections.LLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LLapJoint.sha256", "api/generated/compas_timber.connections.LLapJoint.to_json", "api/generated/compas_timber.connections.LLapJoint.to_jsonstring", "api/generated/compas_timber.connections.LLapJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_extensions", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.element_count_complies", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.get_cutoff_plane", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.LapJoint", "api/generated/compas_timber.connections.LapJoint.ToString", "api/generated/compas_timber.connections.LapJoint.add_extensions", "api/generated/compas_timber.connections.LapJoint.add_features", "api/generated/compas_timber.connections.LapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LapJoint.copy", "api/generated/compas_timber.connections.LapJoint.create", "api/generated/compas_timber.connections.LapJoint.element_count_complies", "api/generated/compas_timber.connections.LapJoint.from_json", "api/generated/compas_timber.connections.LapJoint.from_jsonstring", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LapJoint.sha256", "api/generated/compas_timber.connections.LapJoint.to_json", "api/generated/compas_timber.connections.LapJoint.to_jsonstring", "api/generated/compas_timber.connections.LapJoint.validate_data", "api/generated/compas_timber.connections.NullJoint", "api/generated/compas_timber.connections.NullJoint.ToString", "api/generated/compas_timber.connections.NullJoint.add_extensions", "api/generated/compas_timber.connections.NullJoint.add_features", "api/generated/compas_timber.connections.NullJoint.check_elements_compatibility", "api/generated/compas_timber.connections.NullJoint.copy", "api/generated/compas_timber.connections.NullJoint.create", "api/generated/compas_timber.connections.NullJoint.element_count_complies", "api/generated/compas_timber.connections.NullJoint.from_json", "api/generated/compas_timber.connections.NullJoint.from_jsonstring", "api/generated/compas_timber.connections.NullJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.NullJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.NullJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.NullJoint.sha256", "api/generated/compas_timber.connections.NullJoint.to_json", "api/generated/compas_timber.connections.NullJoint.to_jsonstring", "api/generated/compas_timber.connections.NullJoint.validate_data", "api/generated/compas_timber.connections.TBirdsmouthJoint", "api/generated/compas_timber.connections.TBirdsmouthJoint.ToString", "api/generated/compas_timber.connections.TBirdsmouthJoint.add_extensions", "api/generated/compas_timber.connections.TBirdsmouthJoint.add_features", "api/generated/compas_timber.connections.TBirdsmouthJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TBirdsmouthJoint.copy", "api/generated/compas_timber.connections.TBirdsmouthJoint.create", "api/generated/compas_timber.connections.TBirdsmouthJoint.element_count_complies", "api/generated/compas_timber.connections.TBirdsmouthJoint.from_json", "api/generated/compas_timber.connections.TBirdsmouthJoint.from_jsonstring", "api/generated/compas_timber.connections.TBirdsmouthJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TBirdsmouthJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TBirdsmouthJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TBirdsmouthJoint.sha256", "api/generated/compas_timber.connections.TBirdsmouthJoint.to_json", "api/generated/compas_timber.connections.TBirdsmouthJoint.to_jsonstring", "api/generated/compas_timber.connections.TBirdsmouthJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_extensions", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.element_count_complies", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.TDovetailJoint", "api/generated/compas_timber.connections.TDovetailJoint.ToString", "api/generated/compas_timber.connections.TDovetailJoint.add_extensions", "api/generated/compas_timber.connections.TDovetailJoint.add_features", "api/generated/compas_timber.connections.TDovetailJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TDovetailJoint.copy", "api/generated/compas_timber.connections.TDovetailJoint.create", "api/generated/compas_timber.connections.TDovetailJoint.define_dovetail_tool", "api/generated/compas_timber.connections.TDovetailJoint.element_count_complies", "api/generated/compas_timber.connections.TDovetailJoint.from_json", "api/generated/compas_timber.connections.TDovetailJoint.from_jsonstring", "api/generated/compas_timber.connections.TDovetailJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TDovetailJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TDovetailJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TDovetailJoint.sha256", "api/generated/compas_timber.connections.TDovetailJoint.to_json", "api/generated/compas_timber.connections.TDovetailJoint.to_jsonstring", "api/generated/compas_timber.connections.TDovetailJoint.validate_data", "api/generated/compas_timber.connections.TLapJoint", "api/generated/compas_timber.connections.TLapJoint.ToString", "api/generated/compas_timber.connections.TLapJoint.add_extensions", "api/generated/compas_timber.connections.TLapJoint.add_features", "api/generated/compas_timber.connections.TLapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TLapJoint.copy", "api/generated/compas_timber.connections.TLapJoint.create", "api/generated/compas_timber.connections.TLapJoint.element_count_complies", "api/generated/compas_timber.connections.TLapJoint.from_json", "api/generated/compas_timber.connections.TLapJoint.from_jsonstring", "api/generated/compas_timber.connections.TLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TLapJoint.sha256", "api/generated/compas_timber.connections.TLapJoint.to_json", "api/generated/compas_timber.connections.TLapJoint.to_jsonstring", "api/generated/compas_timber.connections.TLapJoint.validate_data", "api/generated/compas_timber.connections.TStepJoint", "api/generated/compas_timber.connections.TStepJoint.ToString", "api/generated/compas_timber.connections.TStepJoint.add_extensions", "api/generated/compas_timber.connections.TStepJoint.add_features", "api/generated/compas_timber.connections.TStepJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TStepJoint.copy", "api/generated/compas_timber.connections.TStepJoint.create", "api/generated/compas_timber.connections.TStepJoint.element_count_complies", "api/generated/compas_timber.connections.TStepJoint.from_json", "api/generated/compas_timber.connections.TStepJoint.from_jsonstring", "api/generated/compas_timber.connections.TStepJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TStepJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TStepJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TStepJoint.set_step_depths", "api/generated/compas_timber.connections.TStepJoint.sha256", "api/generated/compas_timber.connections.TStepJoint.to_json", "api/generated/compas_timber.connections.TStepJoint.to_jsonstring", "api/generated/compas_timber.connections.TStepJoint.validate_data", "api/generated/compas_timber.connections.TenonMortiseJoint", "api/generated/compas_timber.connections.TenonMortiseJoint.ToString", "api/generated/compas_timber.connections.TenonMortiseJoint.add_extensions", "api/generated/compas_timber.connections.TenonMortiseJoint.add_features", "api/generated/compas_timber.connections.TenonMortiseJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TenonMortiseJoint.copy", "api/generated/compas_timber.connections.TenonMortiseJoint.create", "api/generated/compas_timber.connections.TenonMortiseJoint.element_count_complies", "api/generated/compas_timber.connections.TenonMortiseJoint.from_json", "api/generated/compas_timber.connections.TenonMortiseJoint.from_jsonstring", "api/generated/compas_timber.connections.TenonMortiseJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TenonMortiseJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TenonMortiseJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TenonMortiseJoint.set_default_values", "api/generated/compas_timber.connections.TenonMortiseJoint.sha256", "api/generated/compas_timber.connections.TenonMortiseJoint.to_json", "api/generated/compas_timber.connections.TenonMortiseJoint.to_jsonstring", "api/generated/compas_timber.connections.TenonMortiseJoint.validate_data", "api/generated/compas_timber.connections.XLapJoint", "api/generated/compas_timber.connections.XLapJoint.ToString", "api/generated/compas_timber.connections.XLapJoint.add_extensions", "api/generated/compas_timber.connections.XLapJoint.add_features", "api/generated/compas_timber.connections.XLapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.XLapJoint.copy", "api/generated/compas_timber.connections.XLapJoint.create", "api/generated/compas_timber.connections.XLapJoint.element_count_complies", "api/generated/compas_timber.connections.XLapJoint.from_json", "api/generated/compas_timber.connections.XLapJoint.from_jsonstring", "api/generated/compas_timber.connections.XLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.XLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.XLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.XLapJoint.sha256", "api/generated/compas_timber.connections.XLapJoint.to_json", "api/generated/compas_timber.connections.XLapJoint.to_jsonstring", "api/generated/compas_timber.connections.XLapJoint.validate_data", "api/generated/compas_timber.connections.YButtJoint", "api/generated/compas_timber.connections.YButtJoint.ToString", "api/generated/compas_timber.connections.YButtJoint.add_extensions", "api/generated/compas_timber.connections.YButtJoint.add_features", "api/generated/compas_timber.connections.YButtJoint.check_elements_compatibility", "api/generated/compas_timber.connections.YButtJoint.copy", "api/generated/compas_timber.connections.YButtJoint.create", "api/generated/compas_timber.connections.YButtJoint.cross_beam_ref_side_index", "api/generated/compas_timber.connections.YButtJoint.element_count_complies", "api/generated/compas_timber.connections.YButtJoint.from_json", "api/generated/compas_timber.connections.YButtJoint.from_jsonstring", "api/generated/compas_timber.connections.YButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.YButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.YButtJoint.get_miter_planes", "api/generated/compas_timber.connections.YButtJoint.main_beam_ref_side_index", "api/generated/compas_timber.connections.YButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.YButtJoint.sha256", "api/generated/compas_timber.connections.YButtJoint.to_json", "api/generated/compas_timber.connections.YButtJoint.to_jsonstring", "api/generated/compas_timber.connections.YButtJoint.validate_data", "api/generated/compas_timber.connections.find_neighboring_elements", "api/generated/compas_timber.design.CategoryRule", "api/generated/compas_timber.design.CategoryRule.ToString", "api/generated/compas_timber.design.CategoryRule.comply", "api/generated/compas_timber.design.CategoryRule.get_category_rules", "api/generated/compas_timber.design.CategoryRule.get_direct_rules", "api/generated/compas_timber.design.CategoryRule.get_topology_rules", "api/generated/compas_timber.design.CategoryRule.joints_from_beams_and_rules", "api/generated/compas_timber.design.CategoryRule.reorder", "api/generated/compas_timber.design.DebugInfomation", "api/generated/compas_timber.design.DebugInfomation.ToString", "api/generated/compas_timber.design.DebugInfomation.add_fastener_error", "api/generated/compas_timber.design.DebugInfomation.add_feature_error", "api/generated/compas_timber.design.DebugInfomation.add_joint_error", "api/generated/compas_timber.design.DirectRule", "api/generated/compas_timber.design.DirectRule.ToString", "api/generated/compas_timber.design.DirectRule.comply", "api/generated/compas_timber.design.DirectRule.contains", "api/generated/compas_timber.design.DirectRule.get_category_rules", "api/generated/compas_timber.design.DirectRule.get_direct_rules", "api/generated/compas_timber.design.DirectRule.get_topology_rules", "api/generated/compas_timber.design.DirectRule.joints_from_beams_and_rules", "api/generated/compas_timber.design.FeatureDefinition", "api/generated/compas_timber.design.FeatureDefinition.ToString", "api/generated/compas_timber.design.JointDefinition", "api/generated/compas_timber.design.JointDefinition.ToString", "api/generated/compas_timber.design.JointDefinition.is_identical", "api/generated/compas_timber.design.JointDefinition.match", "api/generated/compas_timber.design.JointRule", "api/generated/compas_timber.design.JointRule.comply", "api/generated/compas_timber.design.JointRule.get_category_rules", "api/generated/compas_timber.design.JointRule.get_direct_rules", "api/generated/compas_timber.design.JointRule.get_topology_rules", "api/generated/compas_timber.design.JointRule.joints_from_beams_and_rules", "api/generated/compas_timber.design.SurfaceModel", "api/generated/compas_timber.design.SurfaceModel.beam_category_names", "api/generated/compas_timber.design.SurfaceModel.create_model", "api/generated/compas_timber.design.SurfaceModel.cull_overlaps", "api/generated/compas_timber.design.SurfaceModel.distance_between_elements", "api/generated/compas_timber.design.SurfaceModel.generate_frame", "api/generated/compas_timber.design.SurfaceModel.generate_perimeter_beams", "api/generated/compas_timber.design.SurfaceModel.generate_plates", "api/generated/compas_timber.design.SurfaceModel.generate_stud_lines", "api/generated/compas_timber.design.SurfaceModel.generate_studs", "api/generated/compas_timber.design.SurfaceModel.generate_windows", "api/generated/compas_timber.design.SurfaceModel.get_beam_intersections", "api/generated/compas_timber.design.SurfaceModel.get_interior_segment_indices", "api/generated/compas_timber.design.SurfaceModel.offset_elements", "api/generated/compas_timber.design.SurfaceModel.parse_loops", "api/generated/compas_timber.design.SurfaceModel.trim_jack_studs", "api/generated/compas_timber.design.SurfaceModel.trim_king_studs", "api/generated/compas_timber.design.SurfaceModel.trim_studs", "api/generated/compas_timber.design.TopologyRule", "api/generated/compas_timber.design.TopologyRule.ToString", "api/generated/compas_timber.design.TopologyRule.comply", "api/generated/compas_timber.design.TopologyRule.get_category_rules", "api/generated/compas_timber.design.TopologyRule.get_direct_rules", "api/generated/compas_timber.design.TopologyRule.get_topology_rules", "api/generated/compas_timber.design.TopologyRule.joints_from_beams_and_rules", "api/generated/compas_timber.design.guess_joint_topology_2beams", "api/generated/compas_timber.design.set_default_joints", "api/generated/compas_timber.elements.Beam", "api/generated/compas_timber.elements.Beam.ToString", "api/generated/compas_timber.elements.Beam.add_blank_extension", "api/generated/compas_timber.elements.Beam.add_feature", "api/generated/compas_timber.elements.Beam.add_features", "api/generated/compas_timber.elements.Beam.back_side", "api/generated/compas_timber.elements.Beam.compute_aabb", "api/generated/compas_timber.elements.Beam.compute_collision_mesh", "api/generated/compas_timber.elements.Beam.compute_geometry", "api/generated/compas_timber.elements.Beam.compute_obb", "api/generated/compas_timber.elements.Beam.compute_worldtransformation", "api/generated/compas_timber.elements.Beam.copy", "api/generated/compas_timber.elements.Beam.endpoint_closest_to_point", "api/generated/compas_timber.elements.Beam.extension_to_plane", "api/generated/compas_timber.elements.Beam.from_centerline", "api/generated/compas_timber.elements.Beam.from_endpoints", "api/generated/compas_timber.elements.Beam.from_json", "api/generated/compas_timber.elements.Beam.from_jsonstring", "api/generated/compas_timber.elements.Beam.front_side", "api/generated/compas_timber.elements.Beam.get_dimensions_relative_to_side", "api/generated/compas_timber.elements.Beam.opp_side", "api/generated/compas_timber.elements.Beam.remove_blank_extension", "api/generated/compas_timber.elements.Beam.remove_features", "api/generated/compas_timber.elements.Beam.reset", "api/generated/compas_timber.elements.Beam.sha256", "api/generated/compas_timber.elements.Beam.side_as_surface", "api/generated/compas_timber.elements.Beam.to_json", "api/generated/compas_timber.elements.Beam.to_jsonstring", "api/generated/compas_timber.elements.Beam.transform", "api/generated/compas_timber.elements.Beam.transformed", "api/generated/compas_timber.elements.Beam.validate_data", "api/generated/compas_timber.elements.Fastener", "api/generated/compas_timber.elements.Fastener.ToString", "api/generated/compas_timber.elements.Fastener.add_feature", "api/generated/compas_timber.elements.Fastener.compute_aabb", "api/generated/compas_timber.elements.Fastener.compute_collision_mesh", "api/generated/compas_timber.elements.Fastener.compute_geometry", "api/generated/compas_timber.elements.Fastener.compute_obb", "api/generated/compas_timber.elements.Fastener.compute_worldtransformation", "api/generated/compas_timber.elements.Fastener.copy", "api/generated/compas_timber.elements.Fastener.from_json", "api/generated/compas_timber.elements.Fastener.from_jsonstring", "api/generated/compas_timber.elements.Fastener.remove_blank_extension", "api/generated/compas_timber.elements.Fastener.remove_features", "api/generated/compas_timber.elements.Fastener.reset", "api/generated/compas_timber.elements.Fastener.sha256", "api/generated/compas_timber.elements.Fastener.to_json", "api/generated/compas_timber.elements.Fastener.to_jsonstring", "api/generated/compas_timber.elements.Fastener.transform", "api/generated/compas_timber.elements.Fastener.transformed", "api/generated/compas_timber.elements.Fastener.validate_data", "api/generated/compas_timber.elements.FastenerTimberInterface", "api/generated/compas_timber.elements.FastenerTimberInterface.ToString", "api/generated/compas_timber.elements.FastenerTimberInterface.copy", "api/generated/compas_timber.elements.FastenerTimberInterface.from_json", "api/generated/compas_timber.elements.FastenerTimberInterface.from_jsonstring", "api/generated/compas_timber.elements.FastenerTimberInterface.get_features", "api/generated/compas_timber.elements.FastenerTimberInterface.sha256", "api/generated/compas_timber.elements.FastenerTimberInterface.to_json", "api/generated/compas_timber.elements.FastenerTimberInterface.to_jsonstring", "api/generated/compas_timber.elements.FastenerTimberInterface.validate_data", "api/generated/compas_timber.elements.Plate", "api/generated/compas_timber.elements.Plate.ToString", "api/generated/compas_timber.elements.Plate.add_feature", "api/generated/compas_timber.elements.Plate.add_features", "api/generated/compas_timber.elements.Plate.compute_aabb", "api/generated/compas_timber.elements.Plate.compute_collision_mesh", "api/generated/compas_timber.elements.Plate.compute_geometry", "api/generated/compas_timber.elements.Plate.compute_obb", "api/generated/compas_timber.elements.Plate.compute_worldtransformation", "api/generated/compas_timber.elements.Plate.copy", "api/generated/compas_timber.elements.Plate.from_json", "api/generated/compas_timber.elements.Plate.from_jsonstring", "api/generated/compas_timber.elements.Plate.remove_blank_extension", "api/generated/compas_timber.elements.Plate.remove_features", "api/generated/compas_timber.elements.Plate.reset", "api/generated/compas_timber.elements.Plate.sha256", "api/generated/compas_timber.elements.Plate.side_as_surface", "api/generated/compas_timber.elements.Plate.to_json", "api/generated/compas_timber.elements.Plate.to_jsonstring", "api/generated/compas_timber.elements.Plate.transform", "api/generated/compas_timber.elements.Plate.transformed", "api/generated/compas_timber.elements.Plate.validate_data", "api/generated/compas_timber.elements.TimberElement", "api/generated/compas_timber.elements.TimberElement.ToString", "api/generated/compas_timber.elements.TimberElement.add_feature", "api/generated/compas_timber.elements.TimberElement.compute_aabb", "api/generated/compas_timber.elements.TimberElement.compute_collision_mesh", "api/generated/compas_timber.elements.TimberElement.compute_geometry", "api/generated/compas_timber.elements.TimberElement.compute_obb", "api/generated/compas_timber.elements.TimberElement.compute_worldtransformation", "api/generated/compas_timber.elements.TimberElement.copy", "api/generated/compas_timber.elements.TimberElement.from_json", "api/generated/compas_timber.elements.TimberElement.from_jsonstring", "api/generated/compas_timber.elements.TimberElement.remove_blank_extension", "api/generated/compas_timber.elements.TimberElement.remove_features", "api/generated/compas_timber.elements.TimberElement.reset", "api/generated/compas_timber.elements.TimberElement.sha256", "api/generated/compas_timber.elements.TimberElement.to_json", "api/generated/compas_timber.elements.TimberElement.to_jsonstring", "api/generated/compas_timber.elements.TimberElement.transform", "api/generated/compas_timber.elements.TimberElement.transformed", "api/generated/compas_timber.elements.TimberElement.validate_data", "api/generated/compas_timber.elements.Wall", "api/generated/compas_timber.elements.Wall.ToString", "api/generated/compas_timber.elements.Wall.add_feature", "api/generated/compas_timber.elements.Wall.compute_aabb", "api/generated/compas_timber.elements.Wall.compute_collision_mesh", "api/generated/compas_timber.elements.Wall.compute_geometry", "api/generated/compas_timber.elements.Wall.compute_obb", "api/generated/compas_timber.elements.Wall.compute_worldtransformation", "api/generated/compas_timber.elements.Wall.copy", "api/generated/compas_timber.elements.Wall.from_boundary", "api/generated/compas_timber.elements.Wall.from_brep", "api/generated/compas_timber.elements.Wall.from_json", "api/generated/compas_timber.elements.Wall.from_jsonstring", "api/generated/compas_timber.elements.Wall.remove_blank_extension", "api/generated/compas_timber.elements.Wall.remove_features", "api/generated/compas_timber.elements.Wall.reset", "api/generated/compas_timber.elements.Wall.rotate", "api/generated/compas_timber.elements.Wall.sha256", "api/generated/compas_timber.elements.Wall.to_json", "api/generated/compas_timber.elements.Wall.to_jsonstring", "api/generated/compas_timber.elements.Wall.transform", "api/generated/compas_timber.elements.Wall.transformed", "api/generated/compas_timber.elements.Wall.validate_data", "api/generated/compas_timber.errors.BeamJoiningError", "api/generated/compas_timber.errors.FastenerApplicationError", "api/generated/compas_timber.errors.FeatureApplicationError", "api/generated/compas_timber.fabrication.BTLxPart", "api/generated/compas_timber.fabrication.BTLxPart.et_point_vals", "api/generated/compas_timber.fabrication.BTLxPart.ref_side_from_face", "api/generated/compas_timber.fabrication.BTLxProcessing", "api/generated/compas_timber.fabrication.BTLxProcessing.ToString", "api/generated/compas_timber.fabrication.BTLxProcessing.add_subprocessing", "api/generated/compas_timber.fabrication.BTLxProcessing.copy", "api/generated/compas_timber.fabrication.BTLxProcessing.from_json", "api/generated/compas_timber.fabrication.BTLxProcessing.from_jsonstring", "api/generated/compas_timber.fabrication.BTLxProcessing.sha256", "api/generated/compas_timber.fabrication.BTLxProcessing.to_json", "api/generated/compas_timber.fabrication.BTLxProcessing.to_jsonstring", "api/generated/compas_timber.fabrication.BTLxProcessing.validate_data", "api/generated/compas_timber.fabrication.BTLxWriter", "api/generated/compas_timber.fabrication.BTLxWriter.model_to_xml", "api/generated/compas_timber.fabrication.BTLxWriter.register_type_serializer", "api/generated/compas_timber.fabrication.BTLxWriter.write", "api/generated/compas_timber.fabrication.DoubleCut", "api/generated/compas_timber.fabrication.DoubleCut.ToString", "api/generated/compas_timber.fabrication.DoubleCut.add_subprocessing", "api/generated/compas_timber.fabrication.DoubleCut.apply", "api/generated/compas_timber.fabrication.DoubleCut.copy", "api/generated/compas_timber.fabrication.DoubleCut.from_json", "api/generated/compas_timber.fabrication.DoubleCut.from_jsonstring", "api/generated/compas_timber.fabrication.DoubleCut.from_planes_and_beam", "api/generated/compas_timber.fabrication.DoubleCut.from_shapes_and_element", "api/generated/compas_timber.fabrication.DoubleCut.planes_from_params_and_beam", "api/generated/compas_timber.fabrication.DoubleCut.sha256", "api/generated/compas_timber.fabrication.DoubleCut.to_json", "api/generated/compas_timber.fabrication.DoubleCut.to_jsonstring", "api/generated/compas_timber.fabrication.DoubleCut.validate_data", "api/generated/compas_timber.fabrication.DovetailMortise", "api/generated/compas_timber.fabrication.DovetailMortise.ToString", "api/generated/compas_timber.fabrication.DovetailMortise.add_subprocessing", "api/generated/compas_timber.fabrication.DovetailMortise.apply", "api/generated/compas_timber.fabrication.DovetailMortise.copy", "api/generated/compas_timber.fabrication.DovetailMortise.define_dovetail_tool", "api/generated/compas_timber.fabrication.DovetailMortise.dovetail_cutting_frames_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailMortise.dovetail_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailMortise.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailMortise.from_frame_and_beam", "api/generated/compas_timber.fabrication.DovetailMortise.from_json", "api/generated/compas_timber.fabrication.DovetailMortise.from_jsonstring", "api/generated/compas_timber.fabrication.DovetailMortise.sha256", "api/generated/compas_timber.fabrication.DovetailMortise.to_json", "api/generated/compas_timber.fabrication.DovetailMortise.to_jsonstring", "api/generated/compas_timber.fabrication.DovetailMortise.validate_data", "api/generated/compas_timber.fabrication.DovetailTenon", "api/generated/compas_timber.fabrication.DovetailTenon.ToString", "api/generated/compas_timber.fabrication.DovetailTenon.add_subprocessing", "api/generated/compas_timber.fabrication.DovetailTenon.apply", "api/generated/compas_timber.fabrication.DovetailTenon.copy", "api/generated/compas_timber.fabrication.DovetailTenon.define_dovetail_tool", "api/generated/compas_timber.fabrication.DovetailTenon.dovetail_cutting_frames_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailTenon.dovetail_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailTenon.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailTenon.from_json", "api/generated/compas_timber.fabrication.DovetailTenon.from_jsonstring", "api/generated/compas_timber.fabrication.DovetailTenon.from_plane_and_beam", "api/generated/compas_timber.fabrication.DovetailTenon.sha256", "api/generated/compas_timber.fabrication.DovetailTenon.to_json", "api/generated/compas_timber.fabrication.DovetailTenon.to_jsonstring", "api/generated/compas_timber.fabrication.DovetailTenon.validate_data", "api/generated/compas_timber.fabrication.Drilling", "api/generated/compas_timber.fabrication.Drilling.ToString", "api/generated/compas_timber.fabrication.Drilling.add_subprocessing", "api/generated/compas_timber.fabrication.Drilling.apply", "api/generated/compas_timber.fabrication.Drilling.copy", "api/generated/compas_timber.fabrication.Drilling.cylinder_from_params_and_element", "api/generated/compas_timber.fabrication.Drilling.from_json", "api/generated/compas_timber.fabrication.Drilling.from_jsonstring", "api/generated/compas_timber.fabrication.Drilling.from_line_and_element", "api/generated/compas_timber.fabrication.Drilling.from_shapes_and_element", "api/generated/compas_timber.fabrication.Drilling.sha256", "api/generated/compas_timber.fabrication.Drilling.to_json", "api/generated/compas_timber.fabrication.Drilling.to_jsonstring", "api/generated/compas_timber.fabrication.Drilling.validate_data", "api/generated/compas_timber.fabrication.EdgePositionType", "api/generated/compas_timber.fabrication.FrenchRidgeLap", "api/generated/compas_timber.fabrication.FrenchRidgeLap.ToString", "api/generated/compas_timber.fabrication.FrenchRidgeLap.add_subprocessing", "api/generated/compas_timber.fabrication.FrenchRidgeLap.apply", "api/generated/compas_timber.fabrication.FrenchRidgeLap.copy", "api/generated/compas_timber.fabrication.FrenchRidgeLap.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_beam_beam_and_plane", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_json", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_jsonstring", "api/generated/compas_timber.fabrication.FrenchRidgeLap.lap_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.FrenchRidgeLap.sha256", "api/generated/compas_timber.fabrication.FrenchRidgeLap.to_json", "api/generated/compas_timber.fabrication.FrenchRidgeLap.to_jsonstring", "api/generated/compas_timber.fabrication.FrenchRidgeLap.validate_data", "api/generated/compas_timber.fabrication.JackRafterCut", "api/generated/compas_timber.fabrication.JackRafterCut.ToString", "api/generated/compas_timber.fabrication.JackRafterCut.add_subprocessing", "api/generated/compas_timber.fabrication.JackRafterCut.apply", "api/generated/compas_timber.fabrication.JackRafterCut.copy", "api/generated/compas_timber.fabrication.JackRafterCut.from_json", "api/generated/compas_timber.fabrication.JackRafterCut.from_jsonstring", "api/generated/compas_timber.fabrication.JackRafterCut.from_plane_and_beam", "api/generated/compas_timber.fabrication.JackRafterCut.from_shapes_and_element", "api/generated/compas_timber.fabrication.JackRafterCut.plane_from_params_and_beam", "api/generated/compas_timber.fabrication.JackRafterCut.sha256", "api/generated/compas_timber.fabrication.JackRafterCut.to_json", "api/generated/compas_timber.fabrication.JackRafterCut.to_jsonstring", "api/generated/compas_timber.fabrication.JackRafterCut.validate_data", "api/generated/compas_timber.fabrication.Lap", "api/generated/compas_timber.fabrication.Lap.ToString", "api/generated/compas_timber.fabrication.Lap.add_subprocessing", "api/generated/compas_timber.fabrication.Lap.apply", "api/generated/compas_timber.fabrication.Lap.copy", "api/generated/compas_timber.fabrication.Lap.from_json", "api/generated/compas_timber.fabrication.Lap.from_jsonstring", "api/generated/compas_timber.fabrication.Lap.from_plane_and_beam", "api/generated/compas_timber.fabrication.Lap.from_shapes_and_element", "api/generated/compas_timber.fabrication.Lap.from_volume_and_beam", "api/generated/compas_timber.fabrication.Lap.sha256", "api/generated/compas_timber.fabrication.Lap.to_json", "api/generated/compas_timber.fabrication.Lap.to_jsonstring", "api/generated/compas_timber.fabrication.Lap.validate_data", "api/generated/compas_timber.fabrication.Lap.volume_from_params_and_beam", "api/generated/compas_timber.fabrication.LimitationTopType", "api/generated/compas_timber.fabrication.MachiningLimits", "api/generated/compas_timber.fabrication.Mortise", "api/generated/compas_timber.fabrication.Mortise.ToString", "api/generated/compas_timber.fabrication.Mortise.add_subprocessing", "api/generated/compas_timber.fabrication.Mortise.apply", "api/generated/compas_timber.fabrication.Mortise.copy", "api/generated/compas_timber.fabrication.Mortise.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.Mortise.from_frame_and_beam", "api/generated/compas_timber.fabrication.Mortise.from_json", "api/generated/compas_timber.fabrication.Mortise.from_jsonstring", "api/generated/compas_timber.fabrication.Mortise.sha256", "api/generated/compas_timber.fabrication.Mortise.to_json", "api/generated/compas_timber.fabrication.Mortise.to_jsonstring", "api/generated/compas_timber.fabrication.Mortise.validate_data", "api/generated/compas_timber.fabrication.Mortise.volume_from_params_and_beam", "api/generated/compas_timber.fabrication.OrientationType", "api/generated/compas_timber.fabrication.Pocket", "api/generated/compas_timber.fabrication.Pocket.ToString", "api/generated/compas_timber.fabrication.Pocket.add_subprocessing", "api/generated/compas_timber.fabrication.Pocket.apply", "api/generated/compas_timber.fabrication.Pocket.copy", "api/generated/compas_timber.fabrication.Pocket.from_json", "api/generated/compas_timber.fabrication.Pocket.from_jsonstring", "api/generated/compas_timber.fabrication.Pocket.from_shapes_and_element", "api/generated/compas_timber.fabrication.Pocket.from_volume_and_element", "api/generated/compas_timber.fabrication.Pocket.sha256", "api/generated/compas_timber.fabrication.Pocket.to_json", "api/generated/compas_timber.fabrication.Pocket.to_jsonstring", "api/generated/compas_timber.fabrication.Pocket.validate_data", "api/generated/compas_timber.fabrication.Pocket.volume_from_params_and_element", "api/generated/compas_timber.fabrication.Slot", "api/generated/compas_timber.fabrication.Slot.ToString", "api/generated/compas_timber.fabrication.Slot.add_subprocessing", "api/generated/compas_timber.fabrication.Slot.apply", "api/generated/compas_timber.fabrication.Slot.copy", "api/generated/compas_timber.fabrication.Slot.from_json", "api/generated/compas_timber.fabrication.Slot.from_jsonstring", "api/generated/compas_timber.fabrication.Slot.from_plane_and_beam", "api/generated/compas_timber.fabrication.Slot.sha256", "api/generated/compas_timber.fabrication.Slot.to_json", "api/generated/compas_timber.fabrication.Slot.to_jsonstring", "api/generated/compas_timber.fabrication.Slot.validate_data", "api/generated/compas_timber.fabrication.StepJoint", "api/generated/compas_timber.fabrication.StepJoint.ToString", "api/generated/compas_timber.fabrication.StepJoint.add_subprocessing", "api/generated/compas_timber.fabrication.StepJoint.add_tenon", "api/generated/compas_timber.fabrication.StepJoint.apply", "api/generated/compas_timber.fabrication.StepJoint.copy", "api/generated/compas_timber.fabrication.StepJoint.from_json", "api/generated/compas_timber.fabrication.StepJoint.from_jsonstring", "api/generated/compas_timber.fabrication.StepJoint.from_plane_and_beam", "api/generated/compas_timber.fabrication.StepJoint.planes_from_params_and_beam", "api/generated/compas_timber.fabrication.StepJoint.sha256", "api/generated/compas_timber.fabrication.StepJoint.tenon_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.StepJoint.to_json", "api/generated/compas_timber.fabrication.StepJoint.to_jsonstring", "api/generated/compas_timber.fabrication.StepJoint.validate_data", "api/generated/compas_timber.fabrication.StepJointNotch", "api/generated/compas_timber.fabrication.StepJointNotch.ToString", "api/generated/compas_timber.fabrication.StepJointNotch.add_mortise", "api/generated/compas_timber.fabrication.StepJointNotch.add_subprocessing", "api/generated/compas_timber.fabrication.StepJointNotch.apply", "api/generated/compas_timber.fabrication.StepJointNotch.copy", "api/generated/compas_timber.fabrication.StepJointNotch.from_json", "api/generated/compas_timber.fabrication.StepJointNotch.from_jsonstring", "api/generated/compas_timber.fabrication.StepJointNotch.from_plane_and_beam", "api/generated/compas_timber.fabrication.StepJointNotch.mortise_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.StepJointNotch.planes_from_params_and_beam", "api/generated/compas_timber.fabrication.StepJointNotch.sha256", "api/generated/compas_timber.fabrication.StepJointNotch.to_json", "api/generated/compas_timber.fabrication.StepJointNotch.to_jsonstring", "api/generated/compas_timber.fabrication.StepJointNotch.validate_data", "api/generated/compas_timber.fabrication.StepShapeType", "api/generated/compas_timber.fabrication.Tenon", "api/generated/compas_timber.fabrication.Tenon.ToString", "api/generated/compas_timber.fabrication.Tenon.add_subprocessing", "api/generated/compas_timber.fabrication.Tenon.apply", "api/generated/compas_timber.fabrication.Tenon.copy", "api/generated/compas_timber.fabrication.Tenon.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.Tenon.from_json", "api/generated/compas_timber.fabrication.Tenon.from_jsonstring", "api/generated/compas_timber.fabrication.Tenon.from_plane_and_beam", "api/generated/compas_timber.fabrication.Tenon.sha256", "api/generated/compas_timber.fabrication.Tenon.to_json", "api/generated/compas_timber.fabrication.Tenon.to_jsonstring", "api/generated/compas_timber.fabrication.Tenon.validate_data", "api/generated/compas_timber.fabrication.Tenon.volume_from_params_and_beam", "api/generated/compas_timber.fabrication.TenonShapeType", "api/generated/compas_timber.ghpython.add_gh_param", "api/generated/compas_timber.ghpython.clear_gh_params", "api/generated/compas_timber.ghpython.get_leaf_subclasses", "api/generated/compas_timber.ghpython.item_input_valid", "api/generated/compas_timber.ghpython.list_input_valid", "api/generated/compas_timber.ghpython.manage_dynamic_params", "api/generated/compas_timber.ghpython.rename_gh_input", "api/generated/compas_timber.model.TimberModel", "api/generated/compas_timber.model.TimberModel.ToString", "api/generated/compas_timber.model.TimberModel.add_element", "api/generated/compas_timber.model.TimberModel.add_elements", "api/generated/compas_timber.model.TimberModel.add_group", "api/generated/compas_timber.model.TimberModel.add_group_element", "api/generated/compas_timber.model.TimberModel.add_interaction", "api/generated/compas_timber.model.TimberModel.add_joint", "api/generated/compas_timber.model.TimberModel.add_material", "api/generated/compas_timber.model.TimberModel.assign_material", "api/generated/compas_timber.model.TimberModel.compute_aabb", "api/generated/compas_timber.model.TimberModel.compute_obb", "api/generated/compas_timber.model.TimberModel.connect_adjacent_walls", "api/generated/compas_timber.model.TimberModel.copy", "api/generated/compas_timber.model.TimberModel.element_by_guid", "api/generated/compas_timber.model.TimberModel.elements", "api/generated/compas_timber.model.TimberModel.elements_connected_by", "api/generated/compas_timber.model.TimberModel.from_json", "api/generated/compas_timber.model.TimberModel.from_jsonstring", "api/generated/compas_timber.model.TimberModel.get_elements_in_group", "api/generated/compas_timber.model.TimberModel.get_interactions_for_element", "api/generated/compas_timber.model.TimberModel.has_element", "api/generated/compas_timber.model.TimberModel.has_group", "api/generated/compas_timber.model.TimberModel.has_interaction", "api/generated/compas_timber.model.TimberModel.has_material", "api/generated/compas_timber.model.TimberModel.interactions", "api/generated/compas_timber.model.TimberModel.materials", "api/generated/compas_timber.model.TimberModel.process_joinery", "api/generated/compas_timber.model.TimberModel.remove_element", "api/generated/compas_timber.model.TimberModel.remove_interaction", "api/generated/compas_timber.model.TimberModel.remove_joint", "api/generated/compas_timber.model.TimberModel.rotate", "api/generated/compas_timber.model.TimberModel.rotated", "api/generated/compas_timber.model.TimberModel.scale", "api/generated/compas_timber.model.TimberModel.scaled", "api/generated/compas_timber.model.TimberModel.set_topologies", "api/generated/compas_timber.model.TimberModel.sha256", "api/generated/compas_timber.model.TimberModel.to_json", "api/generated/compas_timber.model.TimberModel.to_jsonstring", "api/generated/compas_timber.model.TimberModel.transform", "api/generated/compas_timber.model.TimberModel.transform_numpy", "api/generated/compas_timber.model.TimberModel.transformed", "api/generated/compas_timber.model.TimberModel.transformed_numpy", "api/generated/compas_timber.model.TimberModel.translate", "api/generated/compas_timber.model.TimberModel.translated", "api/generated/compas_timber.model.TimberModel.validate_data", "api/generated/compas_timber.planning.Actor", "api/generated/compas_timber.planning.Actor.get_name", "api/generated/compas_timber.planning.BuildingPlan", "api/generated/compas_timber.planning.BuildingPlan.ToString", "api/generated/compas_timber.planning.BuildingPlan.add_step", "api/generated/compas_timber.planning.BuildingPlan.copy", "api/generated/compas_timber.planning.BuildingPlan.from_json", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.sha256", "api/generated/compas_timber.planning.BuildingPlan.to_json", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.validate_data", "api/generated/compas_timber.planning.BuildingPlanParser", "api/generated/compas_timber.planning.BuildingPlanParser.parse", "api/generated/compas_timber.planning.BuildingPlanParser.serialize", "api/generated/compas_timber.planning.Instruction", "api/generated/compas_timber.planning.Instruction.ToString", "api/generated/compas_timber.planning.Instruction.copy", "api/generated/compas_timber.planning.Instruction.from_json", "api/generated/compas_timber.planning.Instruction.from_jsonstring", "api/generated/compas_timber.planning.Instruction.sha256", "api/generated/compas_timber.planning.Instruction.to_json", "api/generated/compas_timber.planning.Instruction.to_jsonstring", "api/generated/compas_timber.planning.Instruction.transform", "api/generated/compas_timber.planning.Instruction.validate_data", "api/generated/compas_timber.planning.LinearDimension", "api/generated/compas_timber.planning.LinearDimension.ToString", "api/generated/compas_timber.planning.LinearDimension.copy", "api/generated/compas_timber.planning.LinearDimension.from_json", "api/generated/compas_timber.planning.LinearDimension.from_jsonstring", "api/generated/compas_timber.planning.LinearDimension.sha256", "api/generated/compas_timber.planning.LinearDimension.to_json", "api/generated/compas_timber.planning.LinearDimension.to_jsonstring", "api/generated/compas_timber.planning.LinearDimension.transform", "api/generated/compas_timber.planning.LinearDimension.validate_data", "api/generated/compas_timber.planning.Model3d", "api/generated/compas_timber.planning.Model3d.ToString", "api/generated/compas_timber.planning.Model3d.copy", "api/generated/compas_timber.planning.Model3d.from_json", "api/generated/compas_timber.planning.Model3d.from_jsonstring", "api/generated/compas_timber.planning.Model3d.sha256", "api/generated/compas_timber.planning.Model3d.to_json", "api/generated/compas_timber.planning.Model3d.to_jsonstring", "api/generated/compas_timber.planning.Model3d.transform", "api/generated/compas_timber.planning.Model3d.validate_data", "api/generated/compas_timber.planning.SimpleSequenceGenerator", "api/generated/compas_timber.planning.Step", "api/generated/compas_timber.planning.Step.ToString", "api/generated/compas_timber.planning.Step.copy", "api/generated/compas_timber.planning.Step.from_json", "api/generated/compas_timber.planning.Step.from_jsonstring", "api/generated/compas_timber.planning.Step.sha256", "api/generated/compas_timber.planning.Step.to_json", "api/generated/compas_timber.planning.Step.to_jsonstring", "api/generated/compas_timber.planning.Step.transform", "api/generated/compas_timber.planning.Step.validate_data", "api/generated/compas_timber.planning.Text3d", "api/generated/compas_timber.planning.Text3d.ToString", "api/generated/compas_timber.planning.Text3d.copy", "api/generated/compas_timber.planning.Text3d.from_json", "api/generated/compas_timber.planning.Text3d.from_jsonstring", "api/generated/compas_timber.planning.Text3d.sha256", "api/generated/compas_timber.planning.Text3d.to_json", "api/generated/compas_timber.planning.Text3d.to_jsonstring", "api/generated/compas_timber.planning.Text3d.transform", "api/generated/compas_timber.planning.Text3d.validate_data", "api/generated/compas_timber.rhino.find_neighboring_elements", "citing", "examples", "examples/create_joint", "index", "installation", "license", "tutorials", "tutorials/BTLx_contribution_guide", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beams", "tutorials/grasshopper/design", "tutorials/grasshopper/examples", "tutorials/grasshopper/fabrication", "tutorials/grasshopper/features", "tutorials/grasshopper/joint_rules", "tutorials/grasshopper/model", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api.rst", "api/compas_timber.connections.rst", "api/compas_timber.design.rst", "api/compas_timber.elements.rst", "api/compas_timber.errors.rst", "api/compas_timber.fabrication.rst", "api/compas_timber.ghpython.rst", "api/compas_timber.model.rst", "api/compas_timber.planning.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.connections.BallNodeJoint.rst", "api/generated/compas_timber.connections.BallNodeJoint.ToString.rst", "api/generated/compas_timber.connections.BallNodeJoint.add_extensions.rst", "api/generated/compas_timber.connections.BallNodeJoint.add_features.rst", "api/generated/compas_timber.connections.BallNodeJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.BallNodeJoint.copy.rst", "api/generated/compas_timber.connections.BallNodeJoint.create.rst", "api/generated/compas_timber.connections.BallNodeJoint.element_count_complies.rst", "api/generated/compas_timber.connections.BallNodeJoint.from_json.rst", "api/generated/compas_timber.connections.BallNodeJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.BallNodeJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.BallNodeJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.BallNodeJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.BallNodeJoint.sha256.rst", "api/generated/compas_timber.connections.BallNodeJoint.to_json.rst", "api/generated/compas_timber.connections.BallNodeJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.BallNodeJoint.validate_data.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_wall_wall_topology.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_extensions.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.element_count_complies.rst", "api/generated/compas_timber.connections.Joint.from_json.rst", "api/generated/compas_timber.connections.Joint.from_jsonstring.rst", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_json.rst", "api/generated/compas_timber.connections.Joint.to_jsonstring.rst", "api/generated/compas_timber.connections.Joint.validate_data.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_extensions.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LButtJoint.from_json.rst", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.to_json.rst", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.update_beam_roles.rst", "api/generated/compas_timber.connections.LButtJoint.validate_data.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.ToString.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.add_features.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.copy.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.create.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.from_json.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.sha256.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.to_json.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.validate_data.rst", "api/generated/compas_timber.connections.LLapJoint.rst", "api/generated/compas_timber.connections.LLapJoint.ToString.rst", "api/generated/compas_timber.connections.LLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.LLapJoint.add_features.rst", "api/generated/compas_timber.connections.LLapJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.LLapJoint.copy.rst", "api/generated/compas_timber.connections.LLapJoint.create.rst", "api/generated/compas_timber.connections.LLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LLapJoint.from_json.rst", "api/generated/compas_timber.connections.LLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LLapJoint.sha256.rst", "api/generated/compas_timber.connections.LLapJoint.to_json.rst", "api/generated/compas_timber.connections.LLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LLapJoint.validate_data.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_extensions.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LMiterJoint.from_json.rst", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.get_cutoff_plane.rst", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_json.rst", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_data.rst", "api/generated/compas_timber.connections.LapJoint.rst", "api/generated/compas_timber.connections.LapJoint.ToString.rst", "api/generated/compas_timber.connections.LapJoint.add_extensions.rst", "api/generated/compas_timber.connections.LapJoint.add_features.rst", "api/generated/compas_timber.connections.LapJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.LapJoint.copy.rst", "api/generated/compas_timber.connections.LapJoint.create.rst", "api/generated/compas_timber.connections.LapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LapJoint.from_json.rst", "api/generated/compas_timber.connections.LapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LapJoint.sha256.rst", "api/generated/compas_timber.connections.LapJoint.to_json.rst", "api/generated/compas_timber.connections.LapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.validate_data.rst", "api/generated/compas_timber.connections.NullJoint.rst", "api/generated/compas_timber.connections.NullJoint.ToString.rst", "api/generated/compas_timber.connections.NullJoint.add_extensions.rst", "api/generated/compas_timber.connections.NullJoint.add_features.rst", "api/generated/compas_timber.connections.NullJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.NullJoint.copy.rst", "api/generated/compas_timber.connections.NullJoint.create.rst", "api/generated/compas_timber.connections.NullJoint.element_count_complies.rst", "api/generated/compas_timber.connections.NullJoint.from_json.rst", "api/generated/compas_timber.connections.NullJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.NullJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.NullJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.NullJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.NullJoint.sha256.rst", "api/generated/compas_timber.connections.NullJoint.to_json.rst", "api/generated/compas_timber.connections.NullJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.NullJoint.validate_data.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.ToString.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.add_extensions.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.add_features.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.copy.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.create.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.from_json.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.sha256.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.to_json.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.validate_data.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_extensions.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TButtJoint.from_json.rst", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.to_json.rst", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.validate_data.rst", "api/generated/compas_timber.connections.TDovetailJoint.rst", "api/generated/compas_timber.connections.TDovetailJoint.ToString.rst", "api/generated/compas_timber.connections.TDovetailJoint.add_extensions.rst", "api/generated/compas_timber.connections.TDovetailJoint.add_features.rst", "api/generated/compas_timber.connections.TDovetailJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TDovetailJoint.copy.rst", "api/generated/compas_timber.connections.TDovetailJoint.create.rst", "api/generated/compas_timber.connections.TDovetailJoint.define_dovetail_tool.rst", "api/generated/compas_timber.connections.TDovetailJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TDovetailJoint.from_json.rst", "api/generated/compas_timber.connections.TDovetailJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TDovetailJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TDovetailJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TDovetailJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TDovetailJoint.sha256.rst", "api/generated/compas_timber.connections.TDovetailJoint.to_json.rst", "api/generated/compas_timber.connections.TDovetailJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TDovetailJoint.validate_data.rst", "api/generated/compas_timber.connections.TLapJoint.rst", "api/generated/compas_timber.connections.TLapJoint.ToString.rst", "api/generated/compas_timber.connections.TLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.TLapJoint.add_features.rst", "api/generated/compas_timber.connections.TLapJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TLapJoint.copy.rst", "api/generated/compas_timber.connections.TLapJoint.create.rst", "api/generated/compas_timber.connections.TLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TLapJoint.from_json.rst", "api/generated/compas_timber.connections.TLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TLapJoint.sha256.rst", "api/generated/compas_timber.connections.TLapJoint.to_json.rst", "api/generated/compas_timber.connections.TLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TLapJoint.validate_data.rst", "api/generated/compas_timber.connections.TStepJoint.rst", "api/generated/compas_timber.connections.TStepJoint.ToString.rst", "api/generated/compas_timber.connections.TStepJoint.add_extensions.rst", "api/generated/compas_timber.connections.TStepJoint.add_features.rst", "api/generated/compas_timber.connections.TStepJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TStepJoint.copy.rst", "api/generated/compas_timber.connections.TStepJoint.create.rst", "api/generated/compas_timber.connections.TStepJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TStepJoint.from_json.rst", "api/generated/compas_timber.connections.TStepJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TStepJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TStepJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TStepJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TStepJoint.set_step_depths.rst", "api/generated/compas_timber.connections.TStepJoint.sha256.rst", "api/generated/compas_timber.connections.TStepJoint.to_json.rst", "api/generated/compas_timber.connections.TStepJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TStepJoint.validate_data.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.ToString.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.add_extensions.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.add_features.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.copy.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.create.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.from_json.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.set_default_values.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.sha256.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.to_json.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.validate_data.rst", "api/generated/compas_timber.connections.XLapJoint.rst", "api/generated/compas_timber.connections.XLapJoint.ToString.rst", "api/generated/compas_timber.connections.XLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.XLapJoint.add_features.rst", "api/generated/compas_timber.connections.XLapJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.XLapJoint.copy.rst", "api/generated/compas_timber.connections.XLapJoint.create.rst", "api/generated/compas_timber.connections.XLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.XLapJoint.from_json.rst", "api/generated/compas_timber.connections.XLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.XLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.XLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.XLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.XLapJoint.sha256.rst", "api/generated/compas_timber.connections.XLapJoint.to_json.rst", "api/generated/compas_timber.connections.XLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.XLapJoint.validate_data.rst", "api/generated/compas_timber.connections.YButtJoint.rst", "api/generated/compas_timber.connections.YButtJoint.ToString.rst", "api/generated/compas_timber.connections.YButtJoint.add_extensions.rst", "api/generated/compas_timber.connections.YButtJoint.add_features.rst", "api/generated/compas_timber.connections.YButtJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.YButtJoint.copy.rst", "api/generated/compas_timber.connections.YButtJoint.create.rst", "api/generated/compas_timber.connections.YButtJoint.cross_beam_ref_side_index.rst", "api/generated/compas_timber.connections.YButtJoint.element_count_complies.rst", "api/generated/compas_timber.connections.YButtJoint.from_json.rst", "api/generated/compas_timber.connections.YButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.YButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.YButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.YButtJoint.get_miter_planes.rst", "api/generated/compas_timber.connections.YButtJoint.main_beam_ref_side_index.rst", "api/generated/compas_timber.connections.YButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.YButtJoint.sha256.rst", "api/generated/compas_timber.connections.YButtJoint.to_json.rst", "api/generated/compas_timber.connections.YButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.YButtJoint.validate_data.rst", "api/generated/compas_timber.connections.find_neighboring_elements.rst", "api/generated/compas_timber.design.CategoryRule.rst", "api/generated/compas_timber.design.CategoryRule.ToString.rst", "api/generated/compas_timber.design.CategoryRule.comply.rst", "api/generated/compas_timber.design.CategoryRule.get_category_rules.rst", "api/generated/compas_timber.design.CategoryRule.get_direct_rules.rst", "api/generated/compas_timber.design.CategoryRule.get_topology_rules.rst", "api/generated/compas_timber.design.CategoryRule.joints_from_beams_and_rules.rst", "api/generated/compas_timber.design.CategoryRule.reorder.rst", "api/generated/compas_timber.design.DebugInfomation.rst", "api/generated/compas_timber.design.DebugInfomation.ToString.rst", "api/generated/compas_timber.design.DebugInfomation.add_fastener_error.rst", "api/generated/compas_timber.design.DebugInfomation.add_feature_error.rst", "api/generated/compas_timber.design.DebugInfomation.add_joint_error.rst", "api/generated/compas_timber.design.DirectRule.rst", "api/generated/compas_timber.design.DirectRule.ToString.rst", "api/generated/compas_timber.design.DirectRule.comply.rst", "api/generated/compas_timber.design.DirectRule.contains.rst", "api/generated/compas_timber.design.DirectRule.get_category_rules.rst", "api/generated/compas_timber.design.DirectRule.get_direct_rules.rst", "api/generated/compas_timber.design.DirectRule.get_topology_rules.rst", "api/generated/compas_timber.design.DirectRule.joints_from_beams_and_rules.rst", "api/generated/compas_timber.design.FeatureDefinition.rst", "api/generated/compas_timber.design.FeatureDefinition.ToString.rst", "api/generated/compas_timber.design.JointDefinition.rst", "api/generated/compas_timber.design.JointDefinition.ToString.rst", "api/generated/compas_timber.design.JointDefinition.is_identical.rst", "api/generated/compas_timber.design.JointDefinition.match.rst", "api/generated/compas_timber.design.JointRule.rst", "api/generated/compas_timber.design.JointRule.comply.rst", "api/generated/compas_timber.design.JointRule.get_category_rules.rst", "api/generated/compas_timber.design.JointRule.get_direct_rules.rst", "api/generated/compas_timber.design.JointRule.get_topology_rules.rst", "api/generated/compas_timber.design.JointRule.joints_from_beams_and_rules.rst", "api/generated/compas_timber.design.SurfaceModel.rst", "api/generated/compas_timber.design.SurfaceModel.beam_category_names.rst", "api/generated/compas_timber.design.SurfaceModel.create_model.rst", "api/generated/compas_timber.design.SurfaceModel.cull_overlaps.rst", "api/generated/compas_timber.design.SurfaceModel.distance_between_elements.rst", "api/generated/compas_timber.design.SurfaceModel.generate_frame.rst", "api/generated/compas_timber.design.SurfaceModel.generate_perimeter_beams.rst", "api/generated/compas_timber.design.SurfaceModel.generate_plates.rst", "api/generated/compas_timber.design.SurfaceModel.generate_stud_lines.rst", "api/generated/compas_timber.design.SurfaceModel.generate_studs.rst", "api/generated/compas_timber.design.SurfaceModel.generate_windows.rst", "api/generated/compas_timber.design.SurfaceModel.get_beam_intersections.rst", "api/generated/compas_timber.design.SurfaceModel.get_interior_segment_indices.rst", "api/generated/compas_timber.design.SurfaceModel.offset_elements.rst", "api/generated/compas_timber.design.SurfaceModel.parse_loops.rst", "api/generated/compas_timber.design.SurfaceModel.trim_jack_studs.rst", "api/generated/compas_timber.design.SurfaceModel.trim_king_studs.rst", "api/generated/compas_timber.design.SurfaceModel.trim_studs.rst", "api/generated/compas_timber.design.TopologyRule.rst", "api/generated/compas_timber.design.TopologyRule.ToString.rst", "api/generated/compas_timber.design.TopologyRule.comply.rst", "api/generated/compas_timber.design.TopologyRule.get_category_rules.rst", "api/generated/compas_timber.design.TopologyRule.get_direct_rules.rst", "api/generated/compas_timber.design.TopologyRule.get_topology_rules.rst", "api/generated/compas_timber.design.TopologyRule.joints_from_beams_and_rules.rst", "api/generated/compas_timber.design.guess_joint_topology_2beams.rst", "api/generated/compas_timber.design.set_default_joints.rst", "api/generated/compas_timber.elements.Beam.rst", "api/generated/compas_timber.elements.Beam.ToString.rst", "api/generated/compas_timber.elements.Beam.add_blank_extension.rst", "api/generated/compas_timber.elements.Beam.add_feature.rst", "api/generated/compas_timber.elements.Beam.add_features.rst", "api/generated/compas_timber.elements.Beam.back_side.rst", "api/generated/compas_timber.elements.Beam.compute_aabb.rst", "api/generated/compas_timber.elements.Beam.compute_collision_mesh.rst", "api/generated/compas_timber.elements.Beam.compute_geometry.rst", "api/generated/compas_timber.elements.Beam.compute_obb.rst", "api/generated/compas_timber.elements.Beam.compute_worldtransformation.rst", "api/generated/compas_timber.elements.Beam.copy.rst", "api/generated/compas_timber.elements.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.elements.Beam.extension_to_plane.rst", "api/generated/compas_timber.elements.Beam.from_centerline.rst", "api/generated/compas_timber.elements.Beam.from_endpoints.rst", "api/generated/compas_timber.elements.Beam.from_json.rst", "api/generated/compas_timber.elements.Beam.from_jsonstring.rst", "api/generated/compas_timber.elements.Beam.front_side.rst", "api/generated/compas_timber.elements.Beam.get_dimensions_relative_to_side.rst", "api/generated/compas_timber.elements.Beam.opp_side.rst", "api/generated/compas_timber.elements.Beam.remove_blank_extension.rst", "api/generated/compas_timber.elements.Beam.remove_features.rst", "api/generated/compas_timber.elements.Beam.reset.rst", "api/generated/compas_timber.elements.Beam.sha256.rst", "api/generated/compas_timber.elements.Beam.side_as_surface.rst", "api/generated/compas_timber.elements.Beam.to_json.rst", "api/generated/compas_timber.elements.Beam.to_jsonstring.rst", "api/generated/compas_timber.elements.Beam.transform.rst", "api/generated/compas_timber.elements.Beam.transformed.rst", "api/generated/compas_timber.elements.Beam.validate_data.rst", "api/generated/compas_timber.elements.Fastener.rst", "api/generated/compas_timber.elements.Fastener.ToString.rst", "api/generated/compas_timber.elements.Fastener.add_feature.rst", "api/generated/compas_timber.elements.Fastener.compute_aabb.rst", "api/generated/compas_timber.elements.Fastener.compute_collision_mesh.rst", "api/generated/compas_timber.elements.Fastener.compute_geometry.rst", "api/generated/compas_timber.elements.Fastener.compute_obb.rst", "api/generated/compas_timber.elements.Fastener.compute_worldtransformation.rst", "api/generated/compas_timber.elements.Fastener.copy.rst", "api/generated/compas_timber.elements.Fastener.from_json.rst", "api/generated/compas_timber.elements.Fastener.from_jsonstring.rst", "api/generated/compas_timber.elements.Fastener.remove_blank_extension.rst", "api/generated/compas_timber.elements.Fastener.remove_features.rst", "api/generated/compas_timber.elements.Fastener.reset.rst", "api/generated/compas_timber.elements.Fastener.sha256.rst", "api/generated/compas_timber.elements.Fastener.to_json.rst", "api/generated/compas_timber.elements.Fastener.to_jsonstring.rst", "api/generated/compas_timber.elements.Fastener.transform.rst", "api/generated/compas_timber.elements.Fastener.transformed.rst", "api/generated/compas_timber.elements.Fastener.validate_data.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.ToString.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.copy.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.from_json.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.from_jsonstring.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.get_features.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.sha256.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.to_json.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.to_jsonstring.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.validate_data.rst", "api/generated/compas_timber.elements.Plate.rst", "api/generated/compas_timber.elements.Plate.ToString.rst", "api/generated/compas_timber.elements.Plate.add_feature.rst", "api/generated/compas_timber.elements.Plate.add_features.rst", "api/generated/compas_timber.elements.Plate.compute_aabb.rst", "api/generated/compas_timber.elements.Plate.compute_collision_mesh.rst", "api/generated/compas_timber.elements.Plate.compute_geometry.rst", "api/generated/compas_timber.elements.Plate.compute_obb.rst", "api/generated/compas_timber.elements.Plate.compute_worldtransformation.rst", "api/generated/compas_timber.elements.Plate.copy.rst", "api/generated/compas_timber.elements.Plate.from_json.rst", "api/generated/compas_timber.elements.Plate.from_jsonstring.rst", "api/generated/compas_timber.elements.Plate.remove_blank_extension.rst", "api/generated/compas_timber.elements.Plate.remove_features.rst", "api/generated/compas_timber.elements.Plate.reset.rst", "api/generated/compas_timber.elements.Plate.sha256.rst", "api/generated/compas_timber.elements.Plate.side_as_surface.rst", "api/generated/compas_timber.elements.Plate.to_json.rst", "api/generated/compas_timber.elements.Plate.to_jsonstring.rst", "api/generated/compas_timber.elements.Plate.transform.rst", "api/generated/compas_timber.elements.Plate.transformed.rst", "api/generated/compas_timber.elements.Plate.validate_data.rst", "api/generated/compas_timber.elements.TimberElement.rst", "api/generated/compas_timber.elements.TimberElement.ToString.rst", "api/generated/compas_timber.elements.TimberElement.add_feature.rst", "api/generated/compas_timber.elements.TimberElement.compute_aabb.rst", "api/generated/compas_timber.elements.TimberElement.compute_collision_mesh.rst", "api/generated/compas_timber.elements.TimberElement.compute_geometry.rst", "api/generated/compas_timber.elements.TimberElement.compute_obb.rst", "api/generated/compas_timber.elements.TimberElement.compute_worldtransformation.rst", "api/generated/compas_timber.elements.TimberElement.copy.rst", "api/generated/compas_timber.elements.TimberElement.from_json.rst", "api/generated/compas_timber.elements.TimberElement.from_jsonstring.rst", "api/generated/compas_timber.elements.TimberElement.remove_blank_extension.rst", "api/generated/compas_timber.elements.TimberElement.remove_features.rst", "api/generated/compas_timber.elements.TimberElement.reset.rst", "api/generated/compas_timber.elements.TimberElement.sha256.rst", "api/generated/compas_timber.elements.TimberElement.to_json.rst", "api/generated/compas_timber.elements.TimberElement.to_jsonstring.rst", "api/generated/compas_timber.elements.TimberElement.transform.rst", "api/generated/compas_timber.elements.TimberElement.transformed.rst", "api/generated/compas_timber.elements.TimberElement.validate_data.rst", "api/generated/compas_timber.elements.Wall.rst", "api/generated/compas_timber.elements.Wall.ToString.rst", "api/generated/compas_timber.elements.Wall.add_feature.rst", "api/generated/compas_timber.elements.Wall.compute_aabb.rst", "api/generated/compas_timber.elements.Wall.compute_collision_mesh.rst", "api/generated/compas_timber.elements.Wall.compute_geometry.rst", "api/generated/compas_timber.elements.Wall.compute_obb.rst", "api/generated/compas_timber.elements.Wall.compute_worldtransformation.rst", "api/generated/compas_timber.elements.Wall.copy.rst", "api/generated/compas_timber.elements.Wall.from_boundary.rst", "api/generated/compas_timber.elements.Wall.from_brep.rst", "api/generated/compas_timber.elements.Wall.from_json.rst", "api/generated/compas_timber.elements.Wall.from_jsonstring.rst", "api/generated/compas_timber.elements.Wall.remove_blank_extension.rst", "api/generated/compas_timber.elements.Wall.remove_features.rst", "api/generated/compas_timber.elements.Wall.reset.rst", "api/generated/compas_timber.elements.Wall.rotate.rst", "api/generated/compas_timber.elements.Wall.sha256.rst", "api/generated/compas_timber.elements.Wall.to_json.rst", "api/generated/compas_timber.elements.Wall.to_jsonstring.rst", "api/generated/compas_timber.elements.Wall.transform.rst", "api/generated/compas_timber.elements.Wall.transformed.rst", "api/generated/compas_timber.elements.Wall.validate_data.rst", "api/generated/compas_timber.errors.BeamJoiningError.rst", "api/generated/compas_timber.errors.FastenerApplicationError.rst", "api/generated/compas_timber.errors.FeatureApplicationError.rst", "api/generated/compas_timber.fabrication.BTLxPart.rst", "api/generated/compas_timber.fabrication.BTLxPart.et_point_vals.rst", "api/generated/compas_timber.fabrication.BTLxPart.ref_side_from_face.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.ToString.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.add_subprocessing.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.copy.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.from_json.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.from_jsonstring.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.sha256.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.to_json.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.to_jsonstring.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.validate_data.rst", "api/generated/compas_timber.fabrication.BTLxWriter.rst", "api/generated/compas_timber.fabrication.BTLxWriter.model_to_xml.rst", "api/generated/compas_timber.fabrication.BTLxWriter.register_type_serializer.rst", "api/generated/compas_timber.fabrication.BTLxWriter.write.rst", "api/generated/compas_timber.fabrication.DoubleCut.rst", "api/generated/compas_timber.fabrication.DoubleCut.ToString.rst", "api/generated/compas_timber.fabrication.DoubleCut.add_subprocessing.rst", "api/generated/compas_timber.fabrication.DoubleCut.apply.rst", "api/generated/compas_timber.fabrication.DoubleCut.copy.rst", "api/generated/compas_timber.fabrication.DoubleCut.from_json.rst", "api/generated/compas_timber.fabrication.DoubleCut.from_jsonstring.rst", "api/generated/compas_timber.fabrication.DoubleCut.from_planes_and_beam.rst", "api/generated/compas_timber.fabrication.DoubleCut.from_shapes_and_element.rst", "api/generated/compas_timber.fabrication.DoubleCut.planes_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DoubleCut.sha256.rst", "api/generated/compas_timber.fabrication.DoubleCut.to_json.rst", "api/generated/compas_timber.fabrication.DoubleCut.to_jsonstring.rst", "api/generated/compas_timber.fabrication.DoubleCut.validate_data.rst", "api/generated/compas_timber.fabrication.DovetailMortise.rst", "api/generated/compas_timber.fabrication.DovetailMortise.ToString.rst", "api/generated/compas_timber.fabrication.DovetailMortise.add_subprocessing.rst", "api/generated/compas_timber.fabrication.DovetailMortise.apply.rst", "api/generated/compas_timber.fabrication.DovetailMortise.copy.rst", "api/generated/compas_timber.fabrication.DovetailMortise.define_dovetail_tool.rst", "api/generated/compas_timber.fabrication.DovetailMortise.dovetail_cutting_frames_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailMortise.dovetail_volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailMortise.frame_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailMortise.from_frame_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailMortise.from_json.rst", "api/generated/compas_timber.fabrication.DovetailMortise.from_jsonstring.rst", "api/generated/compas_timber.fabrication.DovetailMortise.sha256.rst", "api/generated/compas_timber.fabrication.DovetailMortise.to_json.rst", "api/generated/compas_timber.fabrication.DovetailMortise.to_jsonstring.rst", "api/generated/compas_timber.fabrication.DovetailMortise.validate_data.rst", "api/generated/compas_timber.fabrication.DovetailTenon.rst", "api/generated/compas_timber.fabrication.DovetailTenon.ToString.rst", "api/generated/compas_timber.fabrication.DovetailTenon.add_subprocessing.rst", "api/generated/compas_timber.fabrication.DovetailTenon.apply.rst", "api/generated/compas_timber.fabrication.DovetailTenon.copy.rst", "api/generated/compas_timber.fabrication.DovetailTenon.define_dovetail_tool.rst", "api/generated/compas_timber.fabrication.DovetailTenon.dovetail_cutting_frames_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailTenon.dovetail_volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailTenon.frame_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailTenon.from_json.rst", "api/generated/compas_timber.fabrication.DovetailTenon.from_jsonstring.rst", "api/generated/compas_timber.fabrication.DovetailTenon.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailTenon.sha256.rst", "api/generated/compas_timber.fabrication.DovetailTenon.to_json.rst", "api/generated/compas_timber.fabrication.DovetailTenon.to_jsonstring.rst", "api/generated/compas_timber.fabrication.DovetailTenon.validate_data.rst", "api/generated/compas_timber.fabrication.Drilling.rst", "api/generated/compas_timber.fabrication.Drilling.ToString.rst", "api/generated/compas_timber.fabrication.Drilling.add_subprocessing.rst", "api/generated/compas_timber.fabrication.Drilling.apply.rst", "api/generated/compas_timber.fabrication.Drilling.copy.rst", "api/generated/compas_timber.fabrication.Drilling.cylinder_from_params_and_element.rst", "api/generated/compas_timber.fabrication.Drilling.from_json.rst", "api/generated/compas_timber.fabrication.Drilling.from_jsonstring.rst", "api/generated/compas_timber.fabrication.Drilling.from_line_and_element.rst", "api/generated/compas_timber.fabrication.Drilling.from_shapes_and_element.rst", "api/generated/compas_timber.fabrication.Drilling.sha256.rst", "api/generated/compas_timber.fabrication.Drilling.to_json.rst", "api/generated/compas_timber.fabrication.Drilling.to_jsonstring.rst", "api/generated/compas_timber.fabrication.Drilling.validate_data.rst", "api/generated/compas_timber.fabrication.EdgePositionType.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.ToString.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.add_subprocessing.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.apply.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.copy.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.frame_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_beam_beam_and_plane.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_json.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_jsonstring.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.lap_volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.sha256.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.to_json.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.to_jsonstring.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.validate_data.rst", "api/generated/compas_timber.fabrication.JackRafterCut.rst", "api/generated/compas_timber.fabrication.JackRafterCut.ToString.rst", "api/generated/compas_timber.fabrication.JackRafterCut.add_subprocessing.rst", "api/generated/compas_timber.fabrication.JackRafterCut.apply.rst", "api/generated/compas_timber.fabrication.JackRafterCut.copy.rst", "api/generated/compas_timber.fabrication.JackRafterCut.from_json.rst", "api/generated/compas_timber.fabrication.JackRafterCut.from_jsonstring.rst", "api/generated/compas_timber.fabrication.JackRafterCut.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.JackRafterCut.from_shapes_and_element.rst", "api/generated/compas_timber.fabrication.JackRafterCut.plane_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.JackRafterCut.sha256.rst", "api/generated/compas_timber.fabrication.JackRafterCut.to_json.rst", "api/generated/compas_timber.fabrication.JackRafterCut.to_jsonstring.rst", "api/generated/compas_timber.fabrication.JackRafterCut.validate_data.rst", "api/generated/compas_timber.fabrication.Lap.rst", "api/generated/compas_timber.fabrication.Lap.ToString.rst", "api/generated/compas_timber.fabrication.Lap.add_subprocessing.rst", "api/generated/compas_timber.fabrication.Lap.apply.rst", "api/generated/compas_timber.fabrication.Lap.copy.rst", "api/generated/compas_timber.fabrication.Lap.from_json.rst", "api/generated/compas_timber.fabrication.Lap.from_jsonstring.rst", "api/generated/compas_timber.fabrication.Lap.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.Lap.from_shapes_and_element.rst", "api/generated/compas_timber.fabrication.Lap.from_volume_and_beam.rst", "api/generated/compas_timber.fabrication.Lap.sha256.rst", "api/generated/compas_timber.fabrication.Lap.to_json.rst", "api/generated/compas_timber.fabrication.Lap.to_jsonstring.rst", "api/generated/compas_timber.fabrication.Lap.validate_data.rst", "api/generated/compas_timber.fabrication.Lap.volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.LimitationTopType.rst", "api/generated/compas_timber.fabrication.MachiningLimits.rst", "api/generated/compas_timber.fabrication.Mortise.rst", "api/generated/compas_timber.fabrication.Mortise.ToString.rst", "api/generated/compas_timber.fabrication.Mortise.add_subprocessing.rst", "api/generated/compas_timber.fabrication.Mortise.apply.rst", "api/generated/compas_timber.fabrication.Mortise.copy.rst", "api/generated/compas_timber.fabrication.Mortise.frame_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.Mortise.from_frame_and_beam.rst", "api/generated/compas_timber.fabrication.Mortise.from_json.rst", "api/generated/compas_timber.fabrication.Mortise.from_jsonstring.rst", "api/generated/compas_timber.fabrication.Mortise.sha256.rst", "api/generated/compas_timber.fabrication.Mortise.to_json.rst", "api/generated/compas_timber.fabrication.Mortise.to_jsonstring.rst", "api/generated/compas_timber.fabrication.Mortise.validate_data.rst", "api/generated/compas_timber.fabrication.Mortise.volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.OrientationType.rst", "api/generated/compas_timber.fabrication.Pocket.rst", "api/generated/compas_timber.fabrication.Pocket.ToString.rst", "api/generated/compas_timber.fabrication.Pocket.add_subprocessing.rst", "api/generated/compas_timber.fabrication.Pocket.apply.rst", "api/generated/compas_timber.fabrication.Pocket.copy.rst", "api/generated/compas_timber.fabrication.Pocket.from_json.rst", "api/generated/compas_timber.fabrication.Pocket.from_jsonstring.rst", "api/generated/compas_timber.fabrication.Pocket.from_shapes_and_element.rst", "api/generated/compas_timber.fabrication.Pocket.from_volume_and_element.rst", "api/generated/compas_timber.fabrication.Pocket.sha256.rst", "api/generated/compas_timber.fabrication.Pocket.to_json.rst", "api/generated/compas_timber.fabrication.Pocket.to_jsonstring.rst", "api/generated/compas_timber.fabrication.Pocket.validate_data.rst", "api/generated/compas_timber.fabrication.Pocket.volume_from_params_and_element.rst", "api/generated/compas_timber.fabrication.Slot.rst", "api/generated/compas_timber.fabrication.Slot.ToString.rst", "api/generated/compas_timber.fabrication.Slot.add_subprocessing.rst", "api/generated/compas_timber.fabrication.Slot.apply.rst", "api/generated/compas_timber.fabrication.Slot.copy.rst", "api/generated/compas_timber.fabrication.Slot.from_json.rst", "api/generated/compas_timber.fabrication.Slot.from_jsonstring.rst", "api/generated/compas_timber.fabrication.Slot.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.Slot.sha256.rst", "api/generated/compas_timber.fabrication.Slot.to_json.rst", "api/generated/compas_timber.fabrication.Slot.to_jsonstring.rst", "api/generated/compas_timber.fabrication.Slot.validate_data.rst", "api/generated/compas_timber.fabrication.StepJoint.rst", "api/generated/compas_timber.fabrication.StepJoint.ToString.rst", "api/generated/compas_timber.fabrication.StepJoint.add_subprocessing.rst", "api/generated/compas_timber.fabrication.StepJoint.add_tenon.rst", "api/generated/compas_timber.fabrication.StepJoint.apply.rst", "api/generated/compas_timber.fabrication.StepJoint.copy.rst", "api/generated/compas_timber.fabrication.StepJoint.from_json.rst", "api/generated/compas_timber.fabrication.StepJoint.from_jsonstring.rst", "api/generated/compas_timber.fabrication.StepJoint.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.StepJoint.planes_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.StepJoint.sha256.rst", "api/generated/compas_timber.fabrication.StepJoint.tenon_volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.StepJoint.to_json.rst", "api/generated/compas_timber.fabrication.StepJoint.to_jsonstring.rst", "api/generated/compas_timber.fabrication.StepJoint.validate_data.rst", "api/generated/compas_timber.fabrication.StepJointNotch.rst", "api/generated/compas_timber.fabrication.StepJointNotch.ToString.rst", "api/generated/compas_timber.fabrication.StepJointNotch.add_mortise.rst", "api/generated/compas_timber.fabrication.StepJointNotch.add_subprocessing.rst", "api/generated/compas_timber.fabrication.StepJointNotch.apply.rst", "api/generated/compas_timber.fabrication.StepJointNotch.copy.rst", "api/generated/compas_timber.fabrication.StepJointNotch.from_json.rst", "api/generated/compas_timber.fabrication.StepJointNotch.from_jsonstring.rst", "api/generated/compas_timber.fabrication.StepJointNotch.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.StepJointNotch.mortise_volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.StepJointNotch.planes_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.StepJointNotch.sha256.rst", "api/generated/compas_timber.fabrication.StepJointNotch.to_json.rst", "api/generated/compas_timber.fabrication.StepJointNotch.to_jsonstring.rst", "api/generated/compas_timber.fabrication.StepJointNotch.validate_data.rst", "api/generated/compas_timber.fabrication.StepShapeType.rst", "api/generated/compas_timber.fabrication.Tenon.rst", "api/generated/compas_timber.fabrication.Tenon.ToString.rst", "api/generated/compas_timber.fabrication.Tenon.add_subprocessing.rst", "api/generated/compas_timber.fabrication.Tenon.apply.rst", "api/generated/compas_timber.fabrication.Tenon.copy.rst", "api/generated/compas_timber.fabrication.Tenon.frame_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.Tenon.from_json.rst", "api/generated/compas_timber.fabrication.Tenon.from_jsonstring.rst", "api/generated/compas_timber.fabrication.Tenon.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.Tenon.sha256.rst", "api/generated/compas_timber.fabrication.Tenon.to_json.rst", "api/generated/compas_timber.fabrication.Tenon.to_jsonstring.rst", "api/generated/compas_timber.fabrication.Tenon.validate_data.rst", "api/generated/compas_timber.fabrication.Tenon.volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.TenonShapeType.rst", "api/generated/compas_timber.ghpython.add_gh_param.rst", "api/generated/compas_timber.ghpython.clear_gh_params.rst", "api/generated/compas_timber.ghpython.get_leaf_subclasses.rst", "api/generated/compas_timber.ghpython.item_input_valid.rst", "api/generated/compas_timber.ghpython.list_input_valid.rst", "api/generated/compas_timber.ghpython.manage_dynamic_params.rst", "api/generated/compas_timber.ghpython.rename_gh_input.rst", "api/generated/compas_timber.model.TimberModel.rst", "api/generated/compas_timber.model.TimberModel.ToString.rst", "api/generated/compas_timber.model.TimberModel.add_element.rst", "api/generated/compas_timber.model.TimberModel.add_elements.rst", "api/generated/compas_timber.model.TimberModel.add_group.rst", "api/generated/compas_timber.model.TimberModel.add_group_element.rst", "api/generated/compas_timber.model.TimberModel.add_interaction.rst", "api/generated/compas_timber.model.TimberModel.add_joint.rst", "api/generated/compas_timber.model.TimberModel.add_material.rst", "api/generated/compas_timber.model.TimberModel.assign_material.rst", "api/generated/compas_timber.model.TimberModel.compute_aabb.rst", "api/generated/compas_timber.model.TimberModel.compute_obb.rst", "api/generated/compas_timber.model.TimberModel.connect_adjacent_walls.rst", "api/generated/compas_timber.model.TimberModel.copy.rst", "api/generated/compas_timber.model.TimberModel.element_by_guid.rst", "api/generated/compas_timber.model.TimberModel.elements.rst", "api/generated/compas_timber.model.TimberModel.elements_connected_by.rst", "api/generated/compas_timber.model.TimberModel.from_json.rst", "api/generated/compas_timber.model.TimberModel.from_jsonstring.rst", "api/generated/compas_timber.model.TimberModel.get_elements_in_group.rst", "api/generated/compas_timber.model.TimberModel.get_interactions_for_element.rst", "api/generated/compas_timber.model.TimberModel.has_element.rst", "api/generated/compas_timber.model.TimberModel.has_group.rst", "api/generated/compas_timber.model.TimberModel.has_interaction.rst", "api/generated/compas_timber.model.TimberModel.has_material.rst", "api/generated/compas_timber.model.TimberModel.interactions.rst", "api/generated/compas_timber.model.TimberModel.materials.rst", "api/generated/compas_timber.model.TimberModel.process_joinery.rst", "api/generated/compas_timber.model.TimberModel.remove_element.rst", "api/generated/compas_timber.model.TimberModel.remove_interaction.rst", "api/generated/compas_timber.model.TimberModel.remove_joint.rst", "api/generated/compas_timber.model.TimberModel.rotate.rst", "api/generated/compas_timber.model.TimberModel.rotated.rst", "api/generated/compas_timber.model.TimberModel.scale.rst", "api/generated/compas_timber.model.TimberModel.scaled.rst", "api/generated/compas_timber.model.TimberModel.set_topologies.rst", "api/generated/compas_timber.model.TimberModel.sha256.rst", "api/generated/compas_timber.model.TimberModel.to_json.rst", "api/generated/compas_timber.model.TimberModel.to_jsonstring.rst", "api/generated/compas_timber.model.TimberModel.transform.rst", "api/generated/compas_timber.model.TimberModel.transform_numpy.rst", "api/generated/compas_timber.model.TimberModel.transformed.rst", "api/generated/compas_timber.model.TimberModel.transformed_numpy.rst", "api/generated/compas_timber.model.TimberModel.translate.rst", "api/generated/compas_timber.model.TimberModel.translated.rst", "api/generated/compas_timber.model.TimberModel.validate_data.rst", "api/generated/compas_timber.planning.Actor.rst", "api/generated/compas_timber.planning.Actor.get_name.rst", "api/generated/compas_timber.planning.BuildingPlan.rst", "api/generated/compas_timber.planning.BuildingPlan.ToString.rst", "api/generated/compas_timber.planning.BuildingPlan.add_step.rst", "api/generated/compas_timber.planning.BuildingPlan.copy.rst", "api/generated/compas_timber.planning.BuildingPlan.from_json.rst", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.sha256.rst", "api/generated/compas_timber.planning.BuildingPlan.to_json.rst", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.validate_data.rst", "api/generated/compas_timber.planning.BuildingPlanParser.rst", "api/generated/compas_timber.planning.BuildingPlanParser.parse.rst", "api/generated/compas_timber.planning.BuildingPlanParser.serialize.rst", "api/generated/compas_timber.planning.Instruction.rst", "api/generated/compas_timber.planning.Instruction.ToString.rst", "api/generated/compas_timber.planning.Instruction.copy.rst", "api/generated/compas_timber.planning.Instruction.from_json.rst", "api/generated/compas_timber.planning.Instruction.from_jsonstring.rst", "api/generated/compas_timber.planning.Instruction.sha256.rst", "api/generated/compas_timber.planning.Instruction.to_json.rst", "api/generated/compas_timber.planning.Instruction.to_jsonstring.rst", "api/generated/compas_timber.planning.Instruction.transform.rst", "api/generated/compas_timber.planning.Instruction.validate_data.rst", "api/generated/compas_timber.planning.LinearDimension.rst", "api/generated/compas_timber.planning.LinearDimension.ToString.rst", "api/generated/compas_timber.planning.LinearDimension.copy.rst", "api/generated/compas_timber.planning.LinearDimension.from_json.rst", "api/generated/compas_timber.planning.LinearDimension.from_jsonstring.rst", "api/generated/compas_timber.planning.LinearDimension.sha256.rst", "api/generated/compas_timber.planning.LinearDimension.to_json.rst", "api/generated/compas_timber.planning.LinearDimension.to_jsonstring.rst", "api/generated/compas_timber.planning.LinearDimension.transform.rst", "api/generated/compas_timber.planning.LinearDimension.validate_data.rst", "api/generated/compas_timber.planning.Model3d.rst", "api/generated/compas_timber.planning.Model3d.ToString.rst", "api/generated/compas_timber.planning.Model3d.copy.rst", "api/generated/compas_timber.planning.Model3d.from_json.rst", "api/generated/compas_timber.planning.Model3d.from_jsonstring.rst", "api/generated/compas_timber.planning.Model3d.sha256.rst", "api/generated/compas_timber.planning.Model3d.to_json.rst", "api/generated/compas_timber.planning.Model3d.to_jsonstring.rst", "api/generated/compas_timber.planning.Model3d.transform.rst", "api/generated/compas_timber.planning.Model3d.validate_data.rst", "api/generated/compas_timber.planning.SimpleSequenceGenerator.rst", "api/generated/compas_timber.planning.Step.rst", "api/generated/compas_timber.planning.Step.ToString.rst", "api/generated/compas_timber.planning.Step.copy.rst", "api/generated/compas_timber.planning.Step.from_json.rst", "api/generated/compas_timber.planning.Step.from_jsonstring.rst", "api/generated/compas_timber.planning.Step.sha256.rst", "api/generated/compas_timber.planning.Step.to_json.rst", "api/generated/compas_timber.planning.Step.to_jsonstring.rst", "api/generated/compas_timber.planning.Step.transform.rst", "api/generated/compas_timber.planning.Step.validate_data.rst", "api/generated/compas_timber.planning.Text3d.rst", "api/generated/compas_timber.planning.Text3d.ToString.rst", "api/generated/compas_timber.planning.Text3d.copy.rst", "api/generated/compas_timber.planning.Text3d.from_json.rst", "api/generated/compas_timber.planning.Text3d.from_jsonstring.rst", "api/generated/compas_timber.planning.Text3d.sha256.rst", "api/generated/compas_timber.planning.Text3d.to_json.rst", "api/generated/compas_timber.planning.Text3d.to_jsonstring.rst", "api/generated/compas_timber.planning.Text3d.transform.rst", "api/generated/compas_timber.planning.Text3d.validate_data.rst", "api/generated/compas_timber.rhino.find_neighboring_elements.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "license.rst", "tutorials.rst", "tutorials/BTLx_contribution_guide.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beams.rst", "tutorials/grasshopper/design.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/fabrication.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joint_rules.rst", "tutorials/grasshopper/model.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "indexentries": {"actor (class in compas_timber.planning)": [[750, "compas_timber.planning.Actor", false]], "add_blank_extension() (compas_timber.elements.beam method)": [[360, "compas_timber.elements.Beam.add_blank_extension", false]], "add_element() (compas_timber.model.timbermodel method)": [[706, "compas_timber.model.TimberModel.add_element", false]], "add_elements() (compas_timber.model.timbermodel method)": [[707, "compas_timber.model.TimberModel.add_elements", false]], "add_extensions() (compas_timber.connections.ballnodejoint method)": [[12, "compas_timber.connections.BallNodeJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.joint method)": [[33, "compas_timber.connections.Joint.add_extensions", false]], "add_extensions() (compas_timber.connections.lapjoint method)": [[123, "compas_timber.connections.LapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lbuttjoint method)": [[52, "compas_timber.connections.LButtJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lfrenchridgelapjoint method)": [[70, "compas_timber.connections.LFrenchRidgeLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.llapjoint method)": [[87, "compas_timber.connections.LLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lmiterjoint method)": [[104, "compas_timber.connections.LMiterJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.nulljoint method)": [[140, "compas_timber.connections.NullJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tbirdsmouthjoint method)": [[157, "compas_timber.connections.TBirdsmouthJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tbuttjoint method)": [[174, "compas_timber.connections.TButtJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tdovetailjoint method)": [[191, "compas_timber.connections.TDovetailJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tenonmortisejoint method)": [[244, "compas_timber.connections.TenonMortiseJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tlapjoint method)": [[209, "compas_timber.connections.TLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tstepjoint method)": [[226, "compas_timber.connections.TStepJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.xlapjoint method)": [[262, "compas_timber.connections.XLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.ybuttjoint method)": [[279, "compas_timber.connections.YButtJoint.add_extensions", false]], "add_fastener_error() (compas_timber.design.debuginfomation method)": [[308, "compas_timber.design.DebugInfomation.add_fastener_error", false]], "add_feature() (compas_timber.elements.beam method)": [[361, "compas_timber.elements.Beam.add_feature", false]], "add_feature() (compas_timber.elements.fastener method)": [[391, "compas_timber.elements.Fastener.add_feature", false]], "add_feature() (compas_timber.elements.plate method)": [[421, "compas_timber.elements.Plate.add_feature", false]], "add_feature() (compas_timber.elements.timberelement method)": [[443, "compas_timber.elements.TimberElement.add_feature", false]], "add_feature() (compas_timber.elements.wall method)": [[463, "compas_timber.elements.Wall.add_feature", false]], "add_feature_error() (compas_timber.design.debuginfomation method)": [[309, "compas_timber.design.DebugInfomation.add_feature_error", false]], "add_features() (compas_timber.connections.ballnodejoint method)": [[13, "compas_timber.connections.BallNodeJoint.add_features", false]], "add_features() (compas_timber.connections.joint method)": [[34, "compas_timber.connections.Joint.add_features", false]], "add_features() (compas_timber.connections.lapjoint method)": [[124, "compas_timber.connections.LapJoint.add_features", false]], "add_features() (compas_timber.connections.lbuttjoint method)": [[53, "compas_timber.connections.LButtJoint.add_features", false]], "add_features() (compas_timber.connections.lfrenchridgelapjoint method)": [[71, "compas_timber.connections.LFrenchRidgeLapJoint.add_features", false]], "add_features() (compas_timber.connections.llapjoint method)": [[88, "compas_timber.connections.LLapJoint.add_features", false]], "add_features() (compas_timber.connections.lmiterjoint method)": [[105, "compas_timber.connections.LMiterJoint.add_features", false]], "add_features() (compas_timber.connections.nulljoint method)": [[141, "compas_timber.connections.NullJoint.add_features", false]], "add_features() (compas_timber.connections.tbirdsmouthjoint method)": [[158, "compas_timber.connections.TBirdsmouthJoint.add_features", false]], "add_features() (compas_timber.connections.tbuttjoint method)": [[175, "compas_timber.connections.TButtJoint.add_features", false]], "add_features() (compas_timber.connections.tdovetailjoint method)": [[192, "compas_timber.connections.TDovetailJoint.add_features", false]], "add_features() (compas_timber.connections.tenonmortisejoint method)": [[245, "compas_timber.connections.TenonMortiseJoint.add_features", false]], "add_features() (compas_timber.connections.tlapjoint method)": [[210, "compas_timber.connections.TLapJoint.add_features", false]], "add_features() (compas_timber.connections.tstepjoint method)": [[227, "compas_timber.connections.TStepJoint.add_features", false]], "add_features() (compas_timber.connections.xlapjoint method)": [[263, "compas_timber.connections.XLapJoint.add_features", false]], "add_features() (compas_timber.connections.ybuttjoint method)": [[280, "compas_timber.connections.YButtJoint.add_features", false]], "add_features() (compas_timber.elements.beam method)": [[362, "compas_timber.elements.Beam.add_features", false]], "add_features() (compas_timber.elements.plate method)": [[422, "compas_timber.elements.Plate.add_features", false]], "add_gh_param() (in module compas_timber.ghpython)": [[697, "compas_timber.ghpython.add_gh_param", false]], "add_group() (compas_timber.model.timbermodel method)": [[708, "compas_timber.model.TimberModel.add_group", false]], "add_group_element() (compas_timber.model.timbermodel method)": [[709, "compas_timber.model.TimberModel.add_group_element", false]], "add_interaction() (compas_timber.model.timbermodel method)": [[710, "compas_timber.model.TimberModel.add_interaction", false]], "add_joint() (compas_timber.model.timbermodel method)": [[711, "compas_timber.model.TimberModel.add_joint", false]], "add_joint_error() (compas_timber.design.debuginfomation method)": [[310, "compas_timber.design.DebugInfomation.add_joint_error", false]], "add_material() (compas_timber.model.timbermodel method)": [[712, "compas_timber.model.TimberModel.add_material", false]], "add_mortise() (compas_timber.fabrication.stepjointnotch method)": [[668, "compas_timber.fabrication.StepJointNotch.add_mortise", false]], "add_step() (compas_timber.planning.buildingplan method)": [[754, "compas_timber.planning.BuildingPlan.add_step", false]], "add_subprocessing() (compas_timber.fabrication.btlxprocessing method)": [[492, "compas_timber.fabrication.BTLxProcessing.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.doublecut method)": [[506, "compas_timber.fabrication.DoubleCut.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.dovetailmortise method)": [[520, "compas_timber.fabrication.DovetailMortise.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.dovetailtenon method)": [[536, "compas_timber.fabrication.DovetailTenon.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.drilling method)": [[552, "compas_timber.fabrication.Drilling.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.frenchridgelap method)": [[567, "compas_timber.fabrication.FrenchRidgeLap.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.jackraftercut method)": [[581, "compas_timber.fabrication.JackRafterCut.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.lap method)": [[595, "compas_timber.fabrication.Lap.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.mortise method)": [[612, "compas_timber.fabrication.Mortise.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.pocket method)": [[627, "compas_timber.fabrication.Pocket.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.slot method)": [[641, "compas_timber.fabrication.Slot.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.stepjoint method)": [[653, "compas_timber.fabrication.StepJoint.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.stepjointnotch method)": [[669, "compas_timber.fabrication.StepJointNotch.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.tenon method)": [[684, "compas_timber.fabrication.Tenon.add_subprocessing", false]], "add_tenon() (compas_timber.fabrication.stepjoint method)": [[654, "compas_timber.fabrication.StepJoint.add_tenon", false]], "apply() (compas_timber.fabrication.doublecut method)": [[507, "compas_timber.fabrication.DoubleCut.apply", false]], "apply() (compas_timber.fabrication.dovetailmortise method)": [[521, "compas_timber.fabrication.DovetailMortise.apply", false]], "apply() (compas_timber.fabrication.dovetailtenon method)": [[537, "compas_timber.fabrication.DovetailTenon.apply", false]], "apply() (compas_timber.fabrication.drilling method)": [[553, "compas_timber.fabrication.Drilling.apply", false]], "apply() (compas_timber.fabrication.frenchridgelap method)": [[568, "compas_timber.fabrication.FrenchRidgeLap.apply", false]], "apply() (compas_timber.fabrication.jackraftercut method)": [[582, "compas_timber.fabrication.JackRafterCut.apply", false]], "apply() (compas_timber.fabrication.lap method)": [[596, "compas_timber.fabrication.Lap.apply", false]], "apply() (compas_timber.fabrication.mortise method)": [[613, "compas_timber.fabrication.Mortise.apply", false]], "apply() (compas_timber.fabrication.pocket method)": [[628, "compas_timber.fabrication.Pocket.apply", false]], "apply() (compas_timber.fabrication.slot method)": [[642, "compas_timber.fabrication.Slot.apply", false]], "apply() (compas_timber.fabrication.stepjoint method)": [[655, "compas_timber.fabrication.StepJoint.apply", false]], "apply() (compas_timber.fabrication.stepjointnotch method)": [[670, "compas_timber.fabrication.StepJointNotch.apply", false]], "apply() (compas_timber.fabrication.tenon method)": [[685, "compas_timber.fabrication.Tenon.apply", false]], "assign_material() (compas_timber.model.timbermodel method)": [[713, "compas_timber.model.TimberModel.assign_material", false]], "back_side() (compas_timber.elements.beam method)": [[363, "compas_timber.elements.Beam.back_side", false]], "ballnodejoint (class in compas_timber.connections)": [[10, "compas_timber.connections.BallNodeJoint", false]], "beam (class in compas_timber.elements)": [[358, "compas_timber.elements.Beam", false]], "beam_category_names() (compas_timber.design.surfacemodel class method)": [[332, "compas_timber.design.SurfaceModel.beam_category_names", false]], "beamjoiningerror": [[484, "compas_timber.errors.BeamJoiningError", false]], "btlxpart (class in compas_timber.fabrication)": [[487, "compas_timber.fabrication.BTLxPart", false]], "btlxprocessing (class in compas_timber.fabrication)": [[490, "compas_timber.fabrication.BTLxProcessing", false]], "btlxwriter (class in compas_timber.fabrication)": [[500, "compas_timber.fabrication.BTLxWriter", false]], "buildingplan (class in compas_timber.planning)": [[752, "compas_timber.planning.BuildingPlan", false]], "buildingplanparser (class in compas_timber.planning)": [[762, "compas_timber.planning.BuildingPlanParser", false]], "categoryrule (class in compas_timber.design)": [[298, "compas_timber.design.CategoryRule", false]], "check_elements_compatibility() (compas_timber.connections.ballnodejoint method)": [[14, "compas_timber.connections.BallNodeJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.joint method)": [[35, "compas_timber.connections.Joint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.lapjoint method)": [[125, "compas_timber.connections.LapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.lbuttjoint method)": [[54, "compas_timber.connections.LButtJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.lfrenchridgelapjoint method)": [[72, "compas_timber.connections.LFrenchRidgeLapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.llapjoint method)": [[89, "compas_timber.connections.LLapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.lmiterjoint method)": [[106, "compas_timber.connections.LMiterJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.nulljoint method)": [[142, "compas_timber.connections.NullJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tbirdsmouthjoint method)": [[159, "compas_timber.connections.TBirdsmouthJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tbuttjoint method)": [[176, "compas_timber.connections.TButtJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tdovetailjoint method)": [[193, "compas_timber.connections.TDovetailJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tenonmortisejoint method)": [[246, "compas_timber.connections.TenonMortiseJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tlapjoint method)": [[211, "compas_timber.connections.TLapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tstepjoint method)": [[228, "compas_timber.connections.TStepJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.xlapjoint method)": [[264, "compas_timber.connections.XLapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.ybuttjoint method)": [[281, "compas_timber.connections.YButtJoint.check_elements_compatibility", false]], "clear_gh_params() (in module compas_timber.ghpython)": [[698, "compas_timber.ghpython.clear_gh_params", false]], "comply() (compas_timber.design.categoryrule method)": [[300, "compas_timber.design.CategoryRule.comply", false]], "comply() (compas_timber.design.directrule method)": [[313, "compas_timber.design.DirectRule.comply", false]], "comply() (compas_timber.design.jointrule method)": [[326, "compas_timber.design.JointRule.comply", false]], "comply() (compas_timber.design.topologyrule method)": [[351, "compas_timber.design.TopologyRule.comply", false]], "compute_aabb() (compas_timber.elements.beam method)": [[364, "compas_timber.elements.Beam.compute_aabb", false]], "compute_aabb() (compas_timber.elements.fastener method)": [[392, "compas_timber.elements.Fastener.compute_aabb", false]], "compute_aabb() (compas_timber.elements.plate method)": [[423, "compas_timber.elements.Plate.compute_aabb", false]], "compute_aabb() (compas_timber.elements.timberelement method)": [[444, "compas_timber.elements.TimberElement.compute_aabb", false]], "compute_aabb() (compas_timber.elements.wall method)": [[464, "compas_timber.elements.Wall.compute_aabb", false]], "compute_aabb() (compas_timber.model.timbermodel method)": [[714, "compas_timber.model.TimberModel.compute_aabb", false]], "compute_collision_mesh() (compas_timber.elements.beam method)": [[365, "compas_timber.elements.Beam.compute_collision_mesh", false]], "compute_collision_mesh() (compas_timber.elements.fastener method)": [[393, "compas_timber.elements.Fastener.compute_collision_mesh", false]], "compute_collision_mesh() (compas_timber.elements.plate method)": [[424, "compas_timber.elements.Plate.compute_collision_mesh", false]], "compute_collision_mesh() (compas_timber.elements.timberelement method)": [[445, "compas_timber.elements.TimberElement.compute_collision_mesh", false]], "compute_collision_mesh() (compas_timber.elements.wall method)": [[465, "compas_timber.elements.Wall.compute_collision_mesh", false]], "compute_geometry() (compas_timber.elements.beam method)": [[366, "compas_timber.elements.Beam.compute_geometry", false]], "compute_geometry() (compas_timber.elements.fastener method)": [[394, "compas_timber.elements.Fastener.compute_geometry", false]], "compute_geometry() (compas_timber.elements.plate method)": [[425, "compas_timber.elements.Plate.compute_geometry", false]], "compute_geometry() (compas_timber.elements.timberelement method)": [[446, "compas_timber.elements.TimberElement.compute_geometry", false]], "compute_geometry() (compas_timber.elements.wall method)": [[466, "compas_timber.elements.Wall.compute_geometry", false]], "compute_obb() (compas_timber.elements.beam method)": [[367, "compas_timber.elements.Beam.compute_obb", false]], "compute_obb() (compas_timber.elements.fastener method)": [[395, "compas_timber.elements.Fastener.compute_obb", false]], "compute_obb() (compas_timber.elements.plate method)": [[426, "compas_timber.elements.Plate.compute_obb", false]], "compute_obb() (compas_timber.elements.timberelement method)": [[447, "compas_timber.elements.TimberElement.compute_obb", false]], "compute_obb() (compas_timber.elements.wall method)": [[467, "compas_timber.elements.Wall.compute_obb", false]], "compute_obb() (compas_timber.model.timbermodel method)": [[715, "compas_timber.model.TimberModel.compute_obb", false]], "compute_worldtransformation() (compas_timber.elements.beam method)": [[368, "compas_timber.elements.Beam.compute_worldtransformation", false]], "compute_worldtransformation() (compas_timber.elements.fastener method)": [[396, "compas_timber.elements.Fastener.compute_worldtransformation", false]], "compute_worldtransformation() (compas_timber.elements.plate method)": [[427, "compas_timber.elements.Plate.compute_worldtransformation", false]], "compute_worldtransformation() (compas_timber.elements.timberelement method)": [[448, "compas_timber.elements.TimberElement.compute_worldtransformation", false]], "compute_worldtransformation() (compas_timber.elements.wall method)": [[468, "compas_timber.elements.Wall.compute_worldtransformation", false]], "connect_adjacent_walls() (compas_timber.model.timbermodel method)": [[716, "compas_timber.model.TimberModel.connect_adjacent_walls", false]], "connectionsolver (class in compas_timber.connections)": [[27, "compas_timber.connections.ConnectionSolver", false]], "contains() (compas_timber.design.directrule method)": [[314, "compas_timber.design.DirectRule.contains", false]], "copy() (compas_timber.connections.ballnodejoint method)": [[15, "compas_timber.connections.BallNodeJoint.copy", false]], "copy() (compas_timber.connections.joint method)": [[36, "compas_timber.connections.Joint.copy", false]], "copy() (compas_timber.connections.lapjoint method)": [[126, "compas_timber.connections.LapJoint.copy", false]], "copy() (compas_timber.connections.lbuttjoint method)": [[55, "compas_timber.connections.LButtJoint.copy", false]], "copy() (compas_timber.connections.lfrenchridgelapjoint method)": [[73, "compas_timber.connections.LFrenchRidgeLapJoint.copy", false]], "copy() (compas_timber.connections.llapjoint method)": [[90, "compas_timber.connections.LLapJoint.copy", false]], "copy() (compas_timber.connections.lmiterjoint method)": [[107, "compas_timber.connections.LMiterJoint.copy", false]], "copy() (compas_timber.connections.nulljoint method)": [[143, "compas_timber.connections.NullJoint.copy", false]], "copy() (compas_timber.connections.tbirdsmouthjoint method)": [[160, "compas_timber.connections.TBirdsmouthJoint.copy", false]], "copy() (compas_timber.connections.tbuttjoint method)": [[177, "compas_timber.connections.TButtJoint.copy", false]], "copy() (compas_timber.connections.tdovetailjoint method)": [[194, "compas_timber.connections.TDovetailJoint.copy", false]], "copy() (compas_timber.connections.tenonmortisejoint method)": [[247, "compas_timber.connections.TenonMortiseJoint.copy", false]], "copy() (compas_timber.connections.tlapjoint method)": [[212, "compas_timber.connections.TLapJoint.copy", false]], "copy() (compas_timber.connections.tstepjoint method)": [[229, "compas_timber.connections.TStepJoint.copy", false]], "copy() (compas_timber.connections.xlapjoint method)": [[265, "compas_timber.connections.XLapJoint.copy", false]], "copy() (compas_timber.connections.ybuttjoint method)": [[282, "compas_timber.connections.YButtJoint.copy", false]], "copy() (compas_timber.elements.beam method)": [[369, "compas_timber.elements.Beam.copy", false]], "copy() (compas_timber.elements.fastener method)": [[397, "compas_timber.elements.Fastener.copy", false]], "copy() (compas_timber.elements.fastenertimberinterface method)": [[411, "compas_timber.elements.FastenerTimberInterface.copy", false]], "copy() (compas_timber.elements.plate method)": [[428, "compas_timber.elements.Plate.copy", false]], "copy() (compas_timber.elements.timberelement method)": [[449, "compas_timber.elements.TimberElement.copy", false]], "copy() (compas_timber.elements.wall method)": [[469, "compas_timber.elements.Wall.copy", false]], "copy() (compas_timber.fabrication.btlxprocessing method)": [[493, "compas_timber.fabrication.BTLxProcessing.copy", false]], "copy() (compas_timber.fabrication.doublecut method)": [[508, "compas_timber.fabrication.DoubleCut.copy", false]], "copy() (compas_timber.fabrication.dovetailmortise method)": [[522, "compas_timber.fabrication.DovetailMortise.copy", false]], "copy() (compas_timber.fabrication.dovetailtenon method)": [[538, "compas_timber.fabrication.DovetailTenon.copy", false]], "copy() (compas_timber.fabrication.drilling method)": [[554, "compas_timber.fabrication.Drilling.copy", false]], "copy() (compas_timber.fabrication.frenchridgelap method)": [[569, "compas_timber.fabrication.FrenchRidgeLap.copy", false]], "copy() (compas_timber.fabrication.jackraftercut method)": [[583, "compas_timber.fabrication.JackRafterCut.copy", false]], "copy() (compas_timber.fabrication.lap method)": [[597, "compas_timber.fabrication.Lap.copy", false]], "copy() (compas_timber.fabrication.mortise method)": [[614, "compas_timber.fabrication.Mortise.copy", false]], "copy() (compas_timber.fabrication.pocket method)": [[629, "compas_timber.fabrication.Pocket.copy", false]], "copy() (compas_timber.fabrication.slot method)": [[643, "compas_timber.fabrication.Slot.copy", false]], "copy() (compas_timber.fabrication.stepjoint method)": [[656, "compas_timber.fabrication.StepJoint.copy", false]], "copy() (compas_timber.fabrication.stepjointnotch method)": [[671, "compas_timber.fabrication.StepJointNotch.copy", false]], "copy() (compas_timber.fabrication.tenon method)": [[686, "compas_timber.fabrication.Tenon.copy", false]], "copy() (compas_timber.model.timbermodel method)": [[717, "compas_timber.model.TimberModel.copy", false]], "copy() (compas_timber.planning.buildingplan method)": [[755, "compas_timber.planning.BuildingPlan.copy", false]], "copy() (compas_timber.planning.instruction method)": [[767, "compas_timber.planning.Instruction.copy", false]], "copy() (compas_timber.planning.lineardimension method)": [[777, "compas_timber.planning.LinearDimension.copy", false]], "copy() (compas_timber.planning.model3d method)": [[787, "compas_timber.planning.Model3d.copy", false]], "copy() (compas_timber.planning.step method)": [[798, "compas_timber.planning.Step.copy", false]], "copy() (compas_timber.planning.text3d method)": [[808, "compas_timber.planning.Text3d.copy", false]], "create() (compas_timber.connections.ballnodejoint class method)": [[16, "compas_timber.connections.BallNodeJoint.create", false]], "create() (compas_timber.connections.joint class method)": [[37, "compas_timber.connections.Joint.create", false]], "create() (compas_timber.connections.lapjoint class method)": [[127, "compas_timber.connections.LapJoint.create", false]], "create() (compas_timber.connections.lbuttjoint class method)": [[56, "compas_timber.connections.LButtJoint.create", false]], "create() (compas_timber.connections.lfrenchridgelapjoint class method)": [[74, "compas_timber.connections.LFrenchRidgeLapJoint.create", false]], "create() (compas_timber.connections.llapjoint class method)": [[91, "compas_timber.connections.LLapJoint.create", false]], "create() (compas_timber.connections.lmiterjoint class method)": [[108, "compas_timber.connections.LMiterJoint.create", false]], "create() (compas_timber.connections.nulljoint class method)": [[144, "compas_timber.connections.NullJoint.create", false]], "create() (compas_timber.connections.tbirdsmouthjoint class method)": [[161, "compas_timber.connections.TBirdsmouthJoint.create", false]], "create() (compas_timber.connections.tbuttjoint class method)": [[178, "compas_timber.connections.TButtJoint.create", false]], "create() (compas_timber.connections.tdovetailjoint class method)": [[195, "compas_timber.connections.TDovetailJoint.create", false]], "create() (compas_timber.connections.tenonmortisejoint class method)": [[248, "compas_timber.connections.TenonMortiseJoint.create", false]], "create() (compas_timber.connections.tlapjoint class method)": [[213, "compas_timber.connections.TLapJoint.create", false]], "create() (compas_timber.connections.tstepjoint class method)": [[230, "compas_timber.connections.TStepJoint.create", false]], "create() (compas_timber.connections.xlapjoint class method)": [[266, "compas_timber.connections.XLapJoint.create", false]], "create() (compas_timber.connections.ybuttjoint class method)": [[283, "compas_timber.connections.YButtJoint.create", false]], "create_model() (compas_timber.design.surfacemodel method)": [[333, "compas_timber.design.SurfaceModel.create_model", false]], "cross_beam_ref_side_index() (compas_timber.connections.ybuttjoint method)": [[284, "compas_timber.connections.YButtJoint.cross_beam_ref_side_index", false]], "cull_overlaps() (compas_timber.design.surfacemodel method)": [[334, "compas_timber.design.SurfaceModel.cull_overlaps", false]], "cylinder_from_params_and_element() (compas_timber.fabrication.drilling method)": [[555, "compas_timber.fabrication.Drilling.cylinder_from_params_and_element", false]], "debuginfomation (class in compas_timber.design)": [[306, "compas_timber.design.DebugInfomation", false]], "define_dovetail_tool() (compas_timber.connections.tdovetailjoint method)": [[196, "compas_timber.connections.TDovetailJoint.define_dovetail_tool", false]], "define_dovetail_tool() (compas_timber.fabrication.dovetailmortise class method)": [[523, "compas_timber.fabrication.DovetailMortise.define_dovetail_tool", false]], "define_dovetail_tool() (compas_timber.fabrication.dovetailtenon class method)": [[539, "compas_timber.fabrication.DovetailTenon.define_dovetail_tool", false]], "directrule (class in compas_timber.design)": [[311, "compas_timber.design.DirectRule", false]], "distance_between_elements() (compas_timber.design.surfacemodel method)": [[335, "compas_timber.design.SurfaceModel.distance_between_elements", false]], "doublecut (class in compas_timber.fabrication)": [[504, "compas_timber.fabrication.DoubleCut", false]], "dovetail_cutting_frames_from_params_and_beam() (compas_timber.fabrication.dovetailmortise method)": [[524, "compas_timber.fabrication.DovetailMortise.dovetail_cutting_frames_from_params_and_beam", false]], "dovetail_cutting_frames_from_params_and_beam() (compas_timber.fabrication.dovetailtenon method)": [[540, "compas_timber.fabrication.DovetailTenon.dovetail_cutting_frames_from_params_and_beam", false]], "dovetail_volume_from_params_and_beam() (compas_timber.fabrication.dovetailmortise method)": [[525, "compas_timber.fabrication.DovetailMortise.dovetail_volume_from_params_and_beam", false]], "dovetail_volume_from_params_and_beam() (compas_timber.fabrication.dovetailtenon method)": [[541, "compas_timber.fabrication.DovetailTenon.dovetail_volume_from_params_and_beam", false]], "dovetailmortise (class in compas_timber.fabrication)": [[518, "compas_timber.fabrication.DovetailMortise", false]], "dovetailtenon (class in compas_timber.fabrication)": [[534, "compas_timber.fabrication.DovetailTenon", false]], "drilling (class in compas_timber.fabrication)": [[550, "compas_timber.fabrication.Drilling", false]], "edgepositiontype (class in compas_timber.fabrication)": [[564, "compas_timber.fabrication.EdgePositionType", false]], "element_by_guid() (compas_timber.model.timbermodel method)": [[718, "compas_timber.model.TimberModel.element_by_guid", false]], "element_count_complies() (compas_timber.connections.ballnodejoint class method)": [[17, "compas_timber.connections.BallNodeJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.joint class method)": [[38, "compas_timber.connections.Joint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lapjoint class method)": [[128, "compas_timber.connections.LapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lbuttjoint class method)": [[57, "compas_timber.connections.LButtJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lfrenchridgelapjoint class method)": [[75, "compas_timber.connections.LFrenchRidgeLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.llapjoint class method)": [[92, "compas_timber.connections.LLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lmiterjoint class method)": [[109, "compas_timber.connections.LMiterJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.nulljoint class method)": [[145, "compas_timber.connections.NullJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tbirdsmouthjoint class method)": [[162, "compas_timber.connections.TBirdsmouthJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tbuttjoint class method)": [[179, "compas_timber.connections.TButtJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tdovetailjoint class method)": [[197, "compas_timber.connections.TDovetailJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tenonmortisejoint class method)": [[249, "compas_timber.connections.TenonMortiseJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tlapjoint class method)": [[214, "compas_timber.connections.TLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tstepjoint class method)": [[231, "compas_timber.connections.TStepJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.xlapjoint class method)": [[267, "compas_timber.connections.XLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.ybuttjoint class method)": [[285, "compas_timber.connections.YButtJoint.element_count_complies", false]], "elements() (compas_timber.model.timbermodel method)": [[719, "compas_timber.model.TimberModel.elements", false]], "elements_connected_by() (compas_timber.model.timbermodel method)": [[720, "compas_timber.model.TimberModel.elements_connected_by", false]], "endpoint_closest_to_point() (compas_timber.elements.beam method)": [[370, "compas_timber.elements.Beam.endpoint_closest_to_point", false]], "et_point_vals() (compas_timber.fabrication.btlxpart method)": [[488, "compas_timber.fabrication.BTLxPart.et_point_vals", false]], "extension_to_plane() (compas_timber.elements.beam method)": [[371, "compas_timber.elements.Beam.extension_to_plane", false]], "fastener (class in compas_timber.elements)": [[389, "compas_timber.elements.Fastener", false]], "fastenerapplicationerror": [[485, "compas_timber.errors.FastenerApplicationError", false]], "fastenertimberinterface (class in compas_timber.elements)": [[409, "compas_timber.elements.FastenerTimberInterface", false]], "featureapplicationerror": [[486, "compas_timber.errors.FeatureApplicationError", false]], "featuredefinition (class in compas_timber.design)": [[319, "compas_timber.design.FeatureDefinition", false]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[28, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs", false]], "find_neighboring_elements() (in module compas_timber.connections)": [[297, "compas_timber.connections.find_neighboring_elements", false]], "find_neighboring_elements() (in module compas_timber.rhino)": [[816, "compas_timber.rhino.find_neighboring_elements", false]], "find_topology() (compas_timber.connections.connectionsolver method)": [[29, "compas_timber.connections.ConnectionSolver.find_topology", false]], "find_wall_wall_topology() (compas_timber.connections.connectionsolver method)": [[30, "compas_timber.connections.ConnectionSolver.find_wall_wall_topology", false]], "frame_from_params_and_beam() (compas_timber.fabrication.dovetailmortise method)": [[526, "compas_timber.fabrication.DovetailMortise.frame_from_params_and_beam", false]], "frame_from_params_and_beam() (compas_timber.fabrication.dovetailtenon method)": [[542, "compas_timber.fabrication.DovetailTenon.frame_from_params_and_beam", false]], "frame_from_params_and_beam() (compas_timber.fabrication.frenchridgelap method)": [[570, "compas_timber.fabrication.FrenchRidgeLap.frame_from_params_and_beam", false]], "frame_from_params_and_beam() (compas_timber.fabrication.mortise method)": [[615, "compas_timber.fabrication.Mortise.frame_from_params_and_beam", false]], "frame_from_params_and_beam() (compas_timber.fabrication.tenon method)": [[687, "compas_timber.fabrication.Tenon.frame_from_params_and_beam", false]], "frenchridgelap (class in compas_timber.fabrication)": [[565, "compas_timber.fabrication.FrenchRidgeLap", false]], "from_beam_beam_and_plane() (compas_timber.fabrication.frenchridgelap class method)": [[571, "compas_timber.fabrication.FrenchRidgeLap.from_beam_beam_and_plane", false]], "from_boundary() (compas_timber.elements.wall class method)": [[470, "compas_timber.elements.Wall.from_boundary", false]], "from_brep() (compas_timber.elements.wall class method)": [[471, "compas_timber.elements.Wall.from_brep", false]], "from_centerline() (compas_timber.elements.beam class method)": [[372, "compas_timber.elements.Beam.from_centerline", false]], "from_endpoints() (compas_timber.elements.beam class method)": [[373, "compas_timber.elements.Beam.from_endpoints", false]], "from_frame_and_beam() (compas_timber.fabrication.dovetailmortise class method)": [[527, "compas_timber.fabrication.DovetailMortise.from_frame_and_beam", false]], "from_frame_and_beam() (compas_timber.fabrication.mortise class method)": [[616, "compas_timber.fabrication.Mortise.from_frame_and_beam", false]], "from_json() (compas_timber.connections.ballnodejoint class method)": [[18, "compas_timber.connections.BallNodeJoint.from_json", false]], "from_json() (compas_timber.connections.joint class method)": [[39, "compas_timber.connections.Joint.from_json", false]], "from_json() (compas_timber.connections.lapjoint class method)": [[129, "compas_timber.connections.LapJoint.from_json", false]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[58, "compas_timber.connections.LButtJoint.from_json", false]], "from_json() (compas_timber.connections.lfrenchridgelapjoint class method)": [[76, "compas_timber.connections.LFrenchRidgeLapJoint.from_json", false]], "from_json() (compas_timber.connections.llapjoint class method)": [[93, "compas_timber.connections.LLapJoint.from_json", false]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[110, "compas_timber.connections.LMiterJoint.from_json", false]], "from_json() (compas_timber.connections.nulljoint class method)": [[146, "compas_timber.connections.NullJoint.from_json", false]], "from_json() (compas_timber.connections.tbirdsmouthjoint class method)": [[163, "compas_timber.connections.TBirdsmouthJoint.from_json", false]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[180, "compas_timber.connections.TButtJoint.from_json", false]], "from_json() (compas_timber.connections.tdovetailjoint class method)": [[198, "compas_timber.connections.TDovetailJoint.from_json", false]], "from_json() (compas_timber.connections.tenonmortisejoint class method)": [[250, "compas_timber.connections.TenonMortiseJoint.from_json", false]], "from_json() (compas_timber.connections.tlapjoint class method)": [[215, "compas_timber.connections.TLapJoint.from_json", false]], "from_json() (compas_timber.connections.tstepjoint class method)": [[232, "compas_timber.connections.TStepJoint.from_json", false]], "from_json() (compas_timber.connections.xlapjoint class method)": [[268, "compas_timber.connections.XLapJoint.from_json", false]], "from_json() (compas_timber.connections.ybuttjoint class method)": [[286, "compas_timber.connections.YButtJoint.from_json", false]], "from_json() (compas_timber.elements.beam class method)": [[374, "compas_timber.elements.Beam.from_json", false]], "from_json() (compas_timber.elements.fastener class method)": [[398, "compas_timber.elements.Fastener.from_json", false]], "from_json() (compas_timber.elements.fastenertimberinterface class method)": [[412, "compas_timber.elements.FastenerTimberInterface.from_json", false]], "from_json() (compas_timber.elements.plate class method)": [[429, "compas_timber.elements.Plate.from_json", false]], "from_json() (compas_timber.elements.timberelement class method)": [[450, "compas_timber.elements.TimberElement.from_json", false]], "from_json() (compas_timber.elements.wall class method)": [[472, "compas_timber.elements.Wall.from_json", false]], "from_json() (compas_timber.fabrication.btlxprocessing class method)": [[494, "compas_timber.fabrication.BTLxProcessing.from_json", false]], "from_json() (compas_timber.fabrication.doublecut class method)": [[509, "compas_timber.fabrication.DoubleCut.from_json", false]], "from_json() (compas_timber.fabrication.dovetailmortise class method)": [[528, "compas_timber.fabrication.DovetailMortise.from_json", false]], "from_json() (compas_timber.fabrication.dovetailtenon class method)": [[543, "compas_timber.fabrication.DovetailTenon.from_json", false]], "from_json() (compas_timber.fabrication.drilling class method)": [[556, "compas_timber.fabrication.Drilling.from_json", false]], "from_json() (compas_timber.fabrication.frenchridgelap class method)": [[572, "compas_timber.fabrication.FrenchRidgeLap.from_json", false]], "from_json() (compas_timber.fabrication.jackraftercut class method)": [[584, "compas_timber.fabrication.JackRafterCut.from_json", false]], "from_json() (compas_timber.fabrication.lap class method)": [[598, "compas_timber.fabrication.Lap.from_json", false]], "from_json() (compas_timber.fabrication.mortise class method)": [[617, "compas_timber.fabrication.Mortise.from_json", false]], "from_json() (compas_timber.fabrication.pocket class method)": [[630, "compas_timber.fabrication.Pocket.from_json", false]], "from_json() (compas_timber.fabrication.slot class method)": [[644, "compas_timber.fabrication.Slot.from_json", false]], "from_json() (compas_timber.fabrication.stepjoint class method)": [[657, "compas_timber.fabrication.StepJoint.from_json", false]], "from_json() (compas_timber.fabrication.stepjointnotch class method)": [[672, "compas_timber.fabrication.StepJointNotch.from_json", false]], "from_json() (compas_timber.fabrication.tenon class method)": [[688, "compas_timber.fabrication.Tenon.from_json", false]], "from_json() (compas_timber.model.timbermodel class method)": [[721, "compas_timber.model.TimberModel.from_json", false]], "from_json() (compas_timber.planning.buildingplan class method)": [[756, "compas_timber.planning.BuildingPlan.from_json", false]], "from_json() (compas_timber.planning.instruction class method)": [[768, "compas_timber.planning.Instruction.from_json", false]], "from_json() (compas_timber.planning.lineardimension class method)": [[778, "compas_timber.planning.LinearDimension.from_json", false]], "from_json() (compas_timber.planning.model3d class method)": [[788, "compas_timber.planning.Model3d.from_json", false]], "from_json() (compas_timber.planning.step class method)": [[799, "compas_timber.planning.Step.from_json", false]], "from_json() (compas_timber.planning.text3d class method)": [[809, "compas_timber.planning.Text3d.from_json", false]], "from_jsonstring() (compas_timber.connections.ballnodejoint class method)": [[19, "compas_timber.connections.BallNodeJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.joint class method)": [[40, "compas_timber.connections.Joint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lapjoint class method)": [[130, "compas_timber.connections.LapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[59, "compas_timber.connections.LButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lfrenchridgelapjoint class method)": [[77, "compas_timber.connections.LFrenchRidgeLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.llapjoint class method)": [[94, "compas_timber.connections.LLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[111, "compas_timber.connections.LMiterJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.nulljoint class method)": [[147, "compas_timber.connections.NullJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tbirdsmouthjoint class method)": [[164, "compas_timber.connections.TBirdsmouthJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[181, "compas_timber.connections.TButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tdovetailjoint class method)": [[199, "compas_timber.connections.TDovetailJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tenonmortisejoint class method)": [[251, "compas_timber.connections.TenonMortiseJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tlapjoint class method)": [[216, "compas_timber.connections.TLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tstepjoint class method)": [[233, "compas_timber.connections.TStepJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.xlapjoint class method)": [[269, "compas_timber.connections.XLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.ybuttjoint class method)": [[287, "compas_timber.connections.YButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.beam class method)": [[375, "compas_timber.elements.Beam.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.fastener class method)": [[399, "compas_timber.elements.Fastener.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.fastenertimberinterface class method)": [[413, "compas_timber.elements.FastenerTimberInterface.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.plate class method)": [[430, "compas_timber.elements.Plate.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.timberelement class method)": [[451, "compas_timber.elements.TimberElement.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.wall class method)": [[473, "compas_timber.elements.Wall.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.btlxprocessing class method)": [[495, "compas_timber.fabrication.BTLxProcessing.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.doublecut class method)": [[510, "compas_timber.fabrication.DoubleCut.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.dovetailmortise class method)": [[529, "compas_timber.fabrication.DovetailMortise.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.dovetailtenon class method)": [[544, "compas_timber.fabrication.DovetailTenon.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.drilling class method)": [[557, "compas_timber.fabrication.Drilling.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.frenchridgelap class method)": [[573, "compas_timber.fabrication.FrenchRidgeLap.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.jackraftercut class method)": [[585, "compas_timber.fabrication.JackRafterCut.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.lap class method)": [[599, "compas_timber.fabrication.Lap.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.mortise class method)": [[618, "compas_timber.fabrication.Mortise.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.pocket class method)": [[631, "compas_timber.fabrication.Pocket.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.slot class method)": [[645, "compas_timber.fabrication.Slot.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.stepjoint class method)": [[658, "compas_timber.fabrication.StepJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.stepjointnotch class method)": [[673, "compas_timber.fabrication.StepJointNotch.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.tenon class method)": [[689, "compas_timber.fabrication.Tenon.from_jsonstring", false]], "from_jsonstring() (compas_timber.model.timbermodel class method)": [[722, "compas_timber.model.TimberModel.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.buildingplan class method)": [[757, "compas_timber.planning.BuildingPlan.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.instruction class method)": [[769, "compas_timber.planning.Instruction.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.lineardimension class method)": [[779, "compas_timber.planning.LinearDimension.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.model3d class method)": [[789, "compas_timber.planning.Model3d.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.step class method)": [[800, "compas_timber.planning.Step.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.text3d class method)": [[810, "compas_timber.planning.Text3d.from_jsonstring", false]], "from_line_and_element() (compas_timber.fabrication.drilling class method)": [[558, "compas_timber.fabrication.Drilling.from_line_and_element", false]], "from_plane_and_beam() (compas_timber.fabrication.dovetailtenon class method)": [[545, "compas_timber.fabrication.DovetailTenon.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.jackraftercut class method)": [[586, "compas_timber.fabrication.JackRafterCut.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.lap class method)": [[600, "compas_timber.fabrication.Lap.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.slot class method)": [[646, "compas_timber.fabrication.Slot.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.stepjoint class method)": [[659, "compas_timber.fabrication.StepJoint.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.stepjointnotch class method)": [[674, "compas_timber.fabrication.StepJointNotch.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.tenon class method)": [[690, "compas_timber.fabrication.Tenon.from_plane_and_beam", false]], "from_planes_and_beam() (compas_timber.fabrication.doublecut class method)": [[511, "compas_timber.fabrication.DoubleCut.from_planes_and_beam", false]], "from_shapes_and_element() (compas_timber.fabrication.doublecut class method)": [[512, "compas_timber.fabrication.DoubleCut.from_shapes_and_element", false]], "from_shapes_and_element() (compas_timber.fabrication.drilling class method)": [[559, "compas_timber.fabrication.Drilling.from_shapes_and_element", false]], "from_shapes_and_element() (compas_timber.fabrication.jackraftercut class method)": [[587, "compas_timber.fabrication.JackRafterCut.from_shapes_and_element", false]], "from_shapes_and_element() (compas_timber.fabrication.lap class method)": [[601, "compas_timber.fabrication.Lap.from_shapes_and_element", false]], "from_shapes_and_element() (compas_timber.fabrication.pocket class method)": [[632, "compas_timber.fabrication.Pocket.from_shapes_and_element", false]], "from_volume_and_beam() (compas_timber.fabrication.lap class method)": [[602, "compas_timber.fabrication.Lap.from_volume_and_beam", false]], "from_volume_and_element() (compas_timber.fabrication.pocket class method)": [[633, "compas_timber.fabrication.Pocket.from_volume_and_element", false]], "front_side() (compas_timber.elements.beam method)": [[376, "compas_timber.elements.Beam.front_side", false]], "generate_frame() (compas_timber.design.surfacemodel method)": [[336, "compas_timber.design.SurfaceModel.generate_frame", false]], "generate_perimeter_beams() (compas_timber.design.surfacemodel method)": [[337, "compas_timber.design.SurfaceModel.generate_perimeter_beams", false]], "generate_plates() (compas_timber.design.surfacemodel method)": [[338, "compas_timber.design.SurfaceModel.generate_plates", false]], "generate_stud_lines() (compas_timber.design.surfacemodel method)": [[339, "compas_timber.design.SurfaceModel.generate_stud_lines", false]], "generate_studs() (compas_timber.design.surfacemodel method)": [[340, "compas_timber.design.SurfaceModel.generate_studs", false]], "generate_windows() (compas_timber.design.surfacemodel method)": [[341, "compas_timber.design.SurfaceModel.generate_windows", false]], "get_beam_intersections() (compas_timber.design.surfacemodel method)": [[342, "compas_timber.design.SurfaceModel.get_beam_intersections", false]], "get_category_rules() (compas_timber.design.categoryrule static method)": [[301, "compas_timber.design.CategoryRule.get_category_rules", false]], "get_category_rules() (compas_timber.design.directrule static method)": [[315, "compas_timber.design.DirectRule.get_category_rules", false]], "get_category_rules() (compas_timber.design.jointrule static method)": [[327, "compas_timber.design.JointRule.get_category_rules", false]], "get_category_rules() (compas_timber.design.topologyrule static method)": [[352, "compas_timber.design.TopologyRule.get_category_rules", false]], "get_cutoff_plane() (compas_timber.connections.lmiterjoint method)": [[112, "compas_timber.connections.LMiterJoint.get_cutoff_plane", false]], "get_cutting_planes() (compas_timber.connections.lmiterjoint method)": [[113, "compas_timber.connections.LMiterJoint.get_cutting_planes", false]], "get_dimensions_relative_to_side() (compas_timber.elements.beam method)": [[377, "compas_timber.elements.Beam.get_dimensions_relative_to_side", false]], "get_direct_rules() (compas_timber.design.categoryrule static method)": [[302, "compas_timber.design.CategoryRule.get_direct_rules", false]], "get_direct_rules() (compas_timber.design.directrule static method)": [[316, "compas_timber.design.DirectRule.get_direct_rules", false]], "get_direct_rules() (compas_timber.design.jointrule static method)": [[328, "compas_timber.design.JointRule.get_direct_rules", false]], "get_direct_rules() (compas_timber.design.topologyrule static method)": [[353, "compas_timber.design.TopologyRule.get_direct_rules", false]], "get_elements_in_group() (compas_timber.model.timbermodel method)": [[723, "compas_timber.model.TimberModel.get_elements_in_group", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.ballnodejoint static method)": [[20, "compas_timber.connections.BallNodeJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.joint static method)": [[41, "compas_timber.connections.Joint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lapjoint static method)": [[131, "compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lbuttjoint static method)": [[60, "compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lfrenchridgelapjoint static method)": [[78, "compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.llapjoint static method)": [[95, "compas_timber.connections.LLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lmiterjoint static method)": [[114, "compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.nulljoint static method)": [[148, "compas_timber.connections.NullJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tbirdsmouthjoint static method)": [[165, "compas_timber.connections.TBirdsmouthJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tbuttjoint static method)": [[182, "compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tdovetailjoint static method)": [[200, "compas_timber.connections.TDovetailJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tenonmortisejoint static method)": [[252, "compas_timber.connections.TenonMortiseJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tlapjoint static method)": [[217, "compas_timber.connections.TLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tstepjoint static method)": [[234, "compas_timber.connections.TStepJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.xlapjoint static method)": [[270, "compas_timber.connections.XLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.ybuttjoint static method)": [[288, "compas_timber.connections.YButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.ballnodejoint static method)": [[21, "compas_timber.connections.BallNodeJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.joint static method)": [[42, "compas_timber.connections.Joint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lapjoint static method)": [[132, "compas_timber.connections.LapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lbuttjoint static method)": [[61, "compas_timber.connections.LButtJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lfrenchridgelapjoint static method)": [[79, "compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.llapjoint static method)": [[96, "compas_timber.connections.LLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lmiterjoint static method)": [[115, "compas_timber.connections.LMiterJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.nulljoint static method)": [[149, "compas_timber.connections.NullJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tbirdsmouthjoint static method)": [[166, "compas_timber.connections.TBirdsmouthJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tbuttjoint static method)": [[183, "compas_timber.connections.TButtJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tdovetailjoint static method)": [[201, "compas_timber.connections.TDovetailJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tenonmortisejoint static method)": [[253, "compas_timber.connections.TenonMortiseJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tlapjoint static method)": [[218, "compas_timber.connections.TLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tstepjoint static method)": [[235, "compas_timber.connections.TStepJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.xlapjoint static method)": [[271, "compas_timber.connections.XLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.ybuttjoint static method)": [[289, "compas_timber.connections.YButtJoint.get_face_most_towards_beam", false]], "get_features() (compas_timber.elements.fastenertimberinterface method)": [[414, "compas_timber.elements.FastenerTimberInterface.get_features", false]], "get_interactions_for_element() (compas_timber.model.timbermodel method)": [[724, "compas_timber.model.TimberModel.get_interactions_for_element", false]], "get_interior_segment_indices() (compas_timber.design.surfacemodel method)": [[343, "compas_timber.design.SurfaceModel.get_interior_segment_indices", false]], "get_leaf_subclasses() (in module compas_timber.ghpython)": [[699, "compas_timber.ghpython.get_leaf_subclasses", false]], "get_miter_planes() (compas_timber.connections.ybuttjoint method)": [[290, "compas_timber.connections.YButtJoint.get_miter_planes", false]], "get_name() (compas_timber.connections.jointtopology class method)": [[49, "compas_timber.connections.JointTopology.get_name", false]], "get_name() (compas_timber.planning.actor class method)": [[751, "compas_timber.planning.Actor.get_name", false]], "get_topology_rules() (compas_timber.design.categoryrule static method)": [[303, "compas_timber.design.CategoryRule.get_topology_rules", false]], "get_topology_rules() (compas_timber.design.directrule static method)": [[317, "compas_timber.design.DirectRule.get_topology_rules", false]], "get_topology_rules() (compas_timber.design.jointrule static method)": [[329, "compas_timber.design.JointRule.get_topology_rules", false]], "get_topology_rules() (compas_timber.design.topologyrule static method)": [[354, "compas_timber.design.TopologyRule.get_topology_rules", false]], "guess_joint_topology_2beams() (in module compas_timber.design)": [[356, "compas_timber.design.guess_joint_topology_2beams", false]], "has_element() (compas_timber.model.timbermodel method)": [[725, "compas_timber.model.TimberModel.has_element", false]], "has_group() (compas_timber.model.timbermodel method)": [[726, "compas_timber.model.TimberModel.has_group", false]], "has_interaction() (compas_timber.model.timbermodel method)": [[727, "compas_timber.model.TimberModel.has_interaction", false]], "has_material() (compas_timber.model.timbermodel method)": [[728, "compas_timber.model.TimberModel.has_material", false]], "instruction (class in compas_timber.planning)": [[765, "compas_timber.planning.Instruction", false]], "interactions() (compas_timber.model.timbermodel method)": [[729, "compas_timber.model.TimberModel.interactions", false]], "is_identical() (compas_timber.design.jointdefinition method)": [[323, "compas_timber.design.JointDefinition.is_identical", false]], "item_input_valid() (in module compas_timber.ghpython)": [[700, "compas_timber.ghpython.item_input_valid", false]], "jackraftercut (class in compas_timber.fabrication)": [[579, "compas_timber.fabrication.JackRafterCut", false]], "joint (class in compas_timber.connections)": [[31, "compas_timber.connections.Joint", false]], "jointdefinition (class in compas_timber.design)": [[321, "compas_timber.design.JointDefinition", false]], "jointrule (class in compas_timber.design)": [[325, "compas_timber.design.JointRule", false]], "joints_from_beams_and_rules() (compas_timber.design.categoryrule static method)": [[304, "compas_timber.design.CategoryRule.joints_from_beams_and_rules", false]], "joints_from_beams_and_rules() (compas_timber.design.directrule static method)": [[318, "compas_timber.design.DirectRule.joints_from_beams_and_rules", false]], "joints_from_beams_and_rules() (compas_timber.design.jointrule static method)": [[330, "compas_timber.design.JointRule.joints_from_beams_and_rules", false]], "joints_from_beams_and_rules() (compas_timber.design.topologyrule static method)": [[355, "compas_timber.design.TopologyRule.joints_from_beams_and_rules", false]], "jointtopology (class in compas_timber.connections)": [[48, "compas_timber.connections.JointTopology", false]], "lap (class in compas_timber.fabrication)": [[593, "compas_timber.fabrication.Lap", false]], "lap_volume_from_params_and_beam() (compas_timber.fabrication.frenchridgelap method)": [[574, "compas_timber.fabrication.FrenchRidgeLap.lap_volume_from_params_and_beam", false]], "lapjoint (class in compas_timber.connections)": [[121, "compas_timber.connections.LapJoint", false]], "lbuttjoint (class in compas_timber.connections)": [[50, "compas_timber.connections.LButtJoint", false]], "lfrenchridgelapjoint (class in compas_timber.connections)": [[68, "compas_timber.connections.LFrenchRidgeLapJoint", false]], "limitationtoptype (class in compas_timber.fabrication)": [[608, "compas_timber.fabrication.LimitationTopType", false]], "lineardimension (class in compas_timber.planning)": [[775, "compas_timber.planning.LinearDimension", false]], "list_input_valid() (in module compas_timber.ghpython)": [[701, "compas_timber.ghpython.list_input_valid", false]], "llapjoint (class in compas_timber.connections)": [[85, "compas_timber.connections.LLapJoint", false]], "lmiterjoint (class in compas_timber.connections)": [[102, "compas_timber.connections.LMiterJoint", false]], "machininglimits (class in compas_timber.fabrication)": [[609, "compas_timber.fabrication.MachiningLimits", false]], "main_beam_ref_side_index() (compas_timber.connections.ybuttjoint method)": [[291, "compas_timber.connections.YButtJoint.main_beam_ref_side_index", false]], "manage_dynamic_params() (in module compas_timber.ghpython)": [[702, "compas_timber.ghpython.manage_dynamic_params", false]], "match() (compas_timber.design.jointdefinition method)": [[324, "compas_timber.design.JointDefinition.match", false]], "materials() (compas_timber.model.timbermodel method)": [[730, "compas_timber.model.TimberModel.materials", false]], "model3d (class in compas_timber.planning)": [[785, "compas_timber.planning.Model3d", false]], "model_to_xml() (compas_timber.fabrication.btlxwriter method)": [[501, "compas_timber.fabrication.BTLxWriter.model_to_xml", false]], "mortise (class in compas_timber.fabrication)": [[610, "compas_timber.fabrication.Mortise", false]], "mortise_volume_from_params_and_beam() (compas_timber.fabrication.stepjointnotch method)": [[675, "compas_timber.fabrication.StepJointNotch.mortise_volume_from_params_and_beam", false]], "nulljoint (class in compas_timber.connections)": [[138, "compas_timber.connections.NullJoint", false]], "offset_elements() (compas_timber.design.surfacemodel method)": [[344, "compas_timber.design.SurfaceModel.offset_elements", false]], "opp_side() (compas_timber.elements.beam method)": [[378, "compas_timber.elements.Beam.opp_side", false]], "orientationtype (class in compas_timber.fabrication)": [[624, "compas_timber.fabrication.OrientationType", false]], "parse() (compas_timber.planning.buildingplanparser class method)": [[763, "compas_timber.planning.BuildingPlanParser.parse", false]], "parse_loops() (compas_timber.design.surfacemodel method)": [[345, "compas_timber.design.SurfaceModel.parse_loops", false]], "plane_from_params_and_beam() (compas_timber.fabrication.jackraftercut method)": [[588, "compas_timber.fabrication.JackRafterCut.plane_from_params_and_beam", false]], "planes_from_params_and_beam() (compas_timber.fabrication.doublecut method)": [[513, "compas_timber.fabrication.DoubleCut.planes_from_params_and_beam", false]], "planes_from_params_and_beam() (compas_timber.fabrication.stepjoint method)": [[660, "compas_timber.fabrication.StepJoint.planes_from_params_and_beam", false]], "planes_from_params_and_beam() (compas_timber.fabrication.stepjointnotch method)": [[676, "compas_timber.fabrication.StepJointNotch.planes_from_params_and_beam", false]], "plate (class in compas_timber.elements)": [[419, "compas_timber.elements.Plate", false]], "pocket (class in compas_timber.fabrication)": [[625, "compas_timber.fabrication.Pocket", false]], "process_joinery() (compas_timber.model.timbermodel method)": [[731, "compas_timber.model.TimberModel.process_joinery", false]], "ref_side_from_face() (compas_timber.fabrication.btlxpart method)": [[489, "compas_timber.fabrication.BTLxPart.ref_side_from_face", false]], "register_type_serializer() (compas_timber.fabrication.btlxwriter class method)": [[502, "compas_timber.fabrication.BTLxWriter.register_type_serializer", false]], "remove_blank_extension() (compas_timber.elements.beam method)": [[379, "compas_timber.elements.Beam.remove_blank_extension", false]], "remove_blank_extension() (compas_timber.elements.fastener method)": [[400, "compas_timber.elements.Fastener.remove_blank_extension", false]], "remove_blank_extension() (compas_timber.elements.plate method)": [[431, "compas_timber.elements.Plate.remove_blank_extension", false]], "remove_blank_extension() (compas_timber.elements.timberelement method)": [[452, "compas_timber.elements.TimberElement.remove_blank_extension", false]], "remove_blank_extension() (compas_timber.elements.wall method)": [[474, "compas_timber.elements.Wall.remove_blank_extension", false]], "remove_element() (compas_timber.model.timbermodel method)": [[732, "compas_timber.model.TimberModel.remove_element", false]], "remove_features() (compas_timber.elements.beam method)": [[380, "compas_timber.elements.Beam.remove_features", false]], "remove_features() (compas_timber.elements.fastener method)": [[401, "compas_timber.elements.Fastener.remove_features", false]], "remove_features() (compas_timber.elements.plate method)": [[432, "compas_timber.elements.Plate.remove_features", false]], "remove_features() (compas_timber.elements.timberelement method)": [[453, "compas_timber.elements.TimberElement.remove_features", false]], "remove_features() (compas_timber.elements.wall method)": [[475, "compas_timber.elements.Wall.remove_features", false]], "remove_interaction() (compas_timber.model.timbermodel method)": [[733, "compas_timber.model.TimberModel.remove_interaction", false]], "remove_joint() (compas_timber.model.timbermodel method)": [[734, "compas_timber.model.TimberModel.remove_joint", false]], "rename_gh_input() (in module compas_timber.ghpython)": [[703, "compas_timber.ghpython.rename_gh_input", false]], "reorder() (compas_timber.design.categoryrule method)": [[305, "compas_timber.design.CategoryRule.reorder", false]], "reset() (compas_timber.elements.beam method)": [[381, "compas_timber.elements.Beam.reset", false]], "reset() (compas_timber.elements.fastener method)": [[402, "compas_timber.elements.Fastener.reset", false]], "reset() (compas_timber.elements.plate method)": [[433, "compas_timber.elements.Plate.reset", false]], "reset() (compas_timber.elements.timberelement method)": [[454, "compas_timber.elements.TimberElement.reset", false]], "reset() (compas_timber.elements.wall method)": [[476, "compas_timber.elements.Wall.reset", false]], "restore_beams_from_keys() (compas_timber.connections.ballnodejoint method)": [[22, "compas_timber.connections.BallNodeJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[43, "compas_timber.connections.Joint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lapjoint method)": [[133, "compas_timber.connections.LapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[62, "compas_timber.connections.LButtJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lfrenchridgelapjoint method)": [[80, "compas_timber.connections.LFrenchRidgeLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.llapjoint method)": [[97, "compas_timber.connections.LLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[116, "compas_timber.connections.LMiterJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.nulljoint method)": [[150, "compas_timber.connections.NullJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tbirdsmouthjoint method)": [[167, "compas_timber.connections.TBirdsmouthJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[184, "compas_timber.connections.TButtJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tdovetailjoint method)": [[202, "compas_timber.connections.TDovetailJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tenonmortisejoint method)": [[254, "compas_timber.connections.TenonMortiseJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tlapjoint method)": [[219, "compas_timber.connections.TLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tstepjoint method)": [[236, "compas_timber.connections.TStepJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.xlapjoint method)": [[272, "compas_timber.connections.XLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.ybuttjoint method)": [[292, "compas_timber.connections.YButtJoint.restore_beams_from_keys", false]], "rotate() (compas_timber.elements.wall method)": [[477, "compas_timber.elements.Wall.rotate", false]], "rotate() (compas_timber.model.timbermodel method)": [[735, "compas_timber.model.TimberModel.rotate", false]], "rotated() (compas_timber.model.timbermodel method)": [[736, "compas_timber.model.TimberModel.rotated", false]], "scale() (compas_timber.model.timbermodel method)": [[737, "compas_timber.model.TimberModel.scale", false]], "scaled() (compas_timber.model.timbermodel method)": [[738, "compas_timber.model.TimberModel.scaled", false]], "serialize() (compas_timber.planning.buildingplanparser class method)": [[764, "compas_timber.planning.BuildingPlanParser.serialize", false]], "set_default_joints() (in module compas_timber.design)": [[357, "compas_timber.design.set_default_joints", false]], "set_default_values() (compas_timber.connections.tenonmortisejoint method)": [[255, "compas_timber.connections.TenonMortiseJoint.set_default_values", false]], "set_step_depths() (compas_timber.connections.tstepjoint method)": [[237, "compas_timber.connections.TStepJoint.set_step_depths", false]], "set_topologies() (compas_timber.model.timbermodel method)": [[739, "compas_timber.model.TimberModel.set_topologies", false]], "sha256() (compas_timber.connections.ballnodejoint method)": [[23, "compas_timber.connections.BallNodeJoint.sha256", false]], "sha256() (compas_timber.connections.joint method)": [[44, "compas_timber.connections.Joint.sha256", false]], "sha256() (compas_timber.connections.lapjoint method)": [[134, "compas_timber.connections.LapJoint.sha256", false]], "sha256() (compas_timber.connections.lbuttjoint method)": [[63, "compas_timber.connections.LButtJoint.sha256", false]], "sha256() (compas_timber.connections.lfrenchridgelapjoint method)": [[81, "compas_timber.connections.LFrenchRidgeLapJoint.sha256", false]], "sha256() (compas_timber.connections.llapjoint method)": [[98, "compas_timber.connections.LLapJoint.sha256", false]], "sha256() (compas_timber.connections.lmiterjoint method)": [[117, "compas_timber.connections.LMiterJoint.sha256", false]], "sha256() (compas_timber.connections.nulljoint method)": [[151, "compas_timber.connections.NullJoint.sha256", false]], "sha256() (compas_timber.connections.tbirdsmouthjoint method)": [[168, "compas_timber.connections.TBirdsmouthJoint.sha256", false]], "sha256() (compas_timber.connections.tbuttjoint method)": [[185, "compas_timber.connections.TButtJoint.sha256", false]], "sha256() (compas_timber.connections.tdovetailjoint method)": [[203, "compas_timber.connections.TDovetailJoint.sha256", false]], "sha256() (compas_timber.connections.tenonmortisejoint method)": [[256, "compas_timber.connections.TenonMortiseJoint.sha256", false]], "sha256() (compas_timber.connections.tlapjoint method)": [[220, "compas_timber.connections.TLapJoint.sha256", false]], "sha256() (compas_timber.connections.tstepjoint method)": [[238, "compas_timber.connections.TStepJoint.sha256", false]], "sha256() (compas_timber.connections.xlapjoint method)": [[273, "compas_timber.connections.XLapJoint.sha256", false]], "sha256() (compas_timber.connections.ybuttjoint method)": [[293, "compas_timber.connections.YButtJoint.sha256", false]], "sha256() (compas_timber.elements.beam method)": [[382, "compas_timber.elements.Beam.sha256", false]], "sha256() (compas_timber.elements.fastener method)": [[403, "compas_timber.elements.Fastener.sha256", false]], "sha256() (compas_timber.elements.fastenertimberinterface method)": [[415, "compas_timber.elements.FastenerTimberInterface.sha256", false]], "sha256() (compas_timber.elements.plate method)": [[434, "compas_timber.elements.Plate.sha256", false]], "sha256() (compas_timber.elements.timberelement method)": [[455, "compas_timber.elements.TimberElement.sha256", false]], "sha256() (compas_timber.elements.wall method)": [[478, "compas_timber.elements.Wall.sha256", false]], "sha256() (compas_timber.fabrication.btlxprocessing method)": [[496, "compas_timber.fabrication.BTLxProcessing.sha256", false]], "sha256() (compas_timber.fabrication.doublecut method)": [[514, "compas_timber.fabrication.DoubleCut.sha256", false]], "sha256() (compas_timber.fabrication.dovetailmortise method)": [[530, "compas_timber.fabrication.DovetailMortise.sha256", false]], "sha256() (compas_timber.fabrication.dovetailtenon method)": [[546, "compas_timber.fabrication.DovetailTenon.sha256", false]], "sha256() (compas_timber.fabrication.drilling method)": [[560, "compas_timber.fabrication.Drilling.sha256", false]], "sha256() (compas_timber.fabrication.frenchridgelap method)": [[575, "compas_timber.fabrication.FrenchRidgeLap.sha256", false]], "sha256() (compas_timber.fabrication.jackraftercut method)": [[589, "compas_timber.fabrication.JackRafterCut.sha256", false]], "sha256() (compas_timber.fabrication.lap method)": [[603, "compas_timber.fabrication.Lap.sha256", false]], "sha256() (compas_timber.fabrication.mortise method)": [[619, "compas_timber.fabrication.Mortise.sha256", false]], "sha256() (compas_timber.fabrication.pocket method)": [[634, "compas_timber.fabrication.Pocket.sha256", false]], "sha256() (compas_timber.fabrication.slot method)": [[647, "compas_timber.fabrication.Slot.sha256", false]], "sha256() (compas_timber.fabrication.stepjoint method)": [[661, "compas_timber.fabrication.StepJoint.sha256", false]], "sha256() (compas_timber.fabrication.stepjointnotch method)": [[677, "compas_timber.fabrication.StepJointNotch.sha256", false]], "sha256() (compas_timber.fabrication.tenon method)": [[691, "compas_timber.fabrication.Tenon.sha256", false]], "sha256() (compas_timber.model.timbermodel method)": [[740, "compas_timber.model.TimberModel.sha256", false]], "sha256() (compas_timber.planning.buildingplan method)": [[758, "compas_timber.planning.BuildingPlan.sha256", false]], "sha256() (compas_timber.planning.instruction method)": [[770, "compas_timber.planning.Instruction.sha256", false]], "sha256() (compas_timber.planning.lineardimension method)": [[780, "compas_timber.planning.LinearDimension.sha256", false]], "sha256() (compas_timber.planning.model3d method)": [[790, "compas_timber.planning.Model3d.sha256", false]], "sha256() (compas_timber.planning.step method)": [[801, "compas_timber.planning.Step.sha256", false]], "sha256() (compas_timber.planning.text3d method)": [[811, "compas_timber.planning.Text3d.sha256", false]], "side_as_surface() (compas_timber.elements.beam method)": [[383, "compas_timber.elements.Beam.side_as_surface", false]], "side_as_surface() (compas_timber.elements.plate method)": [[435, "compas_timber.elements.Plate.side_as_surface", false]], "simplesequencegenerator (class in compas_timber.planning)": [[795, "compas_timber.planning.SimpleSequenceGenerator", false]], "slot (class in compas_timber.fabrication)": [[639, "compas_timber.fabrication.Slot", false]], "step (class in compas_timber.planning)": [[796, "compas_timber.planning.Step", false]], "stepjoint (class in compas_timber.fabrication)": [[651, "compas_timber.fabrication.StepJoint", false]], "stepjointnotch (class in compas_timber.fabrication)": [[666, "compas_timber.fabrication.StepJointNotch", false]], "stepshapetype (class in compas_timber.fabrication)": [[681, "compas_timber.fabrication.StepShapeType", false]], "surfacemodel (class in compas_timber.design)": [[331, "compas_timber.design.SurfaceModel", false]], "tbirdsmouthjoint (class in compas_timber.connections)": [[155, "compas_timber.connections.TBirdsmouthJoint", false]], "tbuttjoint (class in compas_timber.connections)": [[172, "compas_timber.connections.TButtJoint", false]], "tdovetailjoint (class in compas_timber.connections)": [[189, "compas_timber.connections.TDovetailJoint", false]], "tenon (class in compas_timber.fabrication)": [[682, "compas_timber.fabrication.Tenon", false]], "tenon_volume_from_params_and_beam() (compas_timber.fabrication.stepjoint method)": [[662, "compas_timber.fabrication.StepJoint.tenon_volume_from_params_and_beam", false]], "tenonmortisejoint (class in compas_timber.connections)": [[242, "compas_timber.connections.TenonMortiseJoint", false]], "tenonshapetype (class in compas_timber.fabrication)": [[696, "compas_timber.fabrication.TenonShapeType", false]], "text3d (class in compas_timber.planning)": [[806, "compas_timber.planning.Text3d", false]], "timberelement (class in compas_timber.elements)": [[441, "compas_timber.elements.TimberElement", false]], "timbermodel (class in compas_timber.model)": [[704, "compas_timber.model.TimberModel", false]], "tlapjoint (class in compas_timber.connections)": [[207, "compas_timber.connections.TLapJoint", false]], "to_json() (compas_timber.connections.ballnodejoint method)": [[24, "compas_timber.connections.BallNodeJoint.to_json", false]], "to_json() (compas_timber.connections.joint method)": [[45, "compas_timber.connections.Joint.to_json", false]], "to_json() (compas_timber.connections.lapjoint method)": [[135, "compas_timber.connections.LapJoint.to_json", false]], "to_json() (compas_timber.connections.lbuttjoint method)": [[64, "compas_timber.connections.LButtJoint.to_json", false]], "to_json() (compas_timber.connections.lfrenchridgelapjoint method)": [[82, "compas_timber.connections.LFrenchRidgeLapJoint.to_json", false]], "to_json() (compas_timber.connections.llapjoint method)": [[99, "compas_timber.connections.LLapJoint.to_json", false]], "to_json() (compas_timber.connections.lmiterjoint method)": [[118, "compas_timber.connections.LMiterJoint.to_json", false]], "to_json() (compas_timber.connections.nulljoint method)": [[152, "compas_timber.connections.NullJoint.to_json", false]], "to_json() (compas_timber.connections.tbirdsmouthjoint method)": [[169, "compas_timber.connections.TBirdsmouthJoint.to_json", false]], "to_json() (compas_timber.connections.tbuttjoint method)": [[186, "compas_timber.connections.TButtJoint.to_json", false]], "to_json() (compas_timber.connections.tdovetailjoint method)": [[204, "compas_timber.connections.TDovetailJoint.to_json", false]], "to_json() (compas_timber.connections.tenonmortisejoint method)": [[257, "compas_timber.connections.TenonMortiseJoint.to_json", false]], "to_json() (compas_timber.connections.tlapjoint method)": [[221, "compas_timber.connections.TLapJoint.to_json", false]], "to_json() (compas_timber.connections.tstepjoint method)": [[239, "compas_timber.connections.TStepJoint.to_json", false]], "to_json() (compas_timber.connections.xlapjoint method)": [[274, "compas_timber.connections.XLapJoint.to_json", false]], "to_json() (compas_timber.connections.ybuttjoint method)": [[294, "compas_timber.connections.YButtJoint.to_json", false]], "to_json() (compas_timber.elements.beam method)": [[384, "compas_timber.elements.Beam.to_json", false]], "to_json() (compas_timber.elements.fastener method)": [[404, "compas_timber.elements.Fastener.to_json", false]], "to_json() (compas_timber.elements.fastenertimberinterface method)": [[416, "compas_timber.elements.FastenerTimberInterface.to_json", false]], "to_json() (compas_timber.elements.plate method)": [[436, "compas_timber.elements.Plate.to_json", false]], "to_json() (compas_timber.elements.timberelement method)": [[456, "compas_timber.elements.TimberElement.to_json", false]], "to_json() (compas_timber.elements.wall method)": [[479, "compas_timber.elements.Wall.to_json", false]], "to_json() (compas_timber.fabrication.btlxprocessing method)": [[497, "compas_timber.fabrication.BTLxProcessing.to_json", false]], "to_json() (compas_timber.fabrication.doublecut method)": [[515, "compas_timber.fabrication.DoubleCut.to_json", false]], "to_json() (compas_timber.fabrication.dovetailmortise method)": [[531, "compas_timber.fabrication.DovetailMortise.to_json", false]], "to_json() (compas_timber.fabrication.dovetailtenon method)": [[547, "compas_timber.fabrication.DovetailTenon.to_json", false]], "to_json() (compas_timber.fabrication.drilling method)": [[561, "compas_timber.fabrication.Drilling.to_json", false]], "to_json() (compas_timber.fabrication.frenchridgelap method)": [[576, "compas_timber.fabrication.FrenchRidgeLap.to_json", false]], "to_json() (compas_timber.fabrication.jackraftercut method)": [[590, "compas_timber.fabrication.JackRafterCut.to_json", false]], "to_json() (compas_timber.fabrication.lap method)": [[604, "compas_timber.fabrication.Lap.to_json", false]], "to_json() (compas_timber.fabrication.mortise method)": [[620, "compas_timber.fabrication.Mortise.to_json", false]], "to_json() (compas_timber.fabrication.pocket method)": [[635, "compas_timber.fabrication.Pocket.to_json", false]], "to_json() (compas_timber.fabrication.slot method)": [[648, "compas_timber.fabrication.Slot.to_json", false]], "to_json() (compas_timber.fabrication.stepjoint method)": [[663, "compas_timber.fabrication.StepJoint.to_json", false]], "to_json() (compas_timber.fabrication.stepjointnotch method)": [[678, "compas_timber.fabrication.StepJointNotch.to_json", false]], "to_json() (compas_timber.fabrication.tenon method)": [[692, "compas_timber.fabrication.Tenon.to_json", false]], "to_json() (compas_timber.model.timbermodel method)": [[741, "compas_timber.model.TimberModel.to_json", false]], "to_json() (compas_timber.planning.buildingplan method)": [[759, "compas_timber.planning.BuildingPlan.to_json", false]], "to_json() (compas_timber.planning.instruction method)": [[771, "compas_timber.planning.Instruction.to_json", false]], "to_json() (compas_timber.planning.lineardimension method)": [[781, "compas_timber.planning.LinearDimension.to_json", false]], "to_json() (compas_timber.planning.model3d method)": [[791, "compas_timber.planning.Model3d.to_json", false]], "to_json() (compas_timber.planning.step method)": [[802, "compas_timber.planning.Step.to_json", false]], "to_json() (compas_timber.planning.text3d method)": [[812, "compas_timber.planning.Text3d.to_json", false]], "to_jsonstring() (compas_timber.connections.ballnodejoint method)": [[25, "compas_timber.connections.BallNodeJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.joint method)": [[46, "compas_timber.connections.Joint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lapjoint method)": [[136, "compas_timber.connections.LapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lbuttjoint method)": [[65, "compas_timber.connections.LButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lfrenchridgelapjoint method)": [[83, "compas_timber.connections.LFrenchRidgeLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.llapjoint method)": [[100, "compas_timber.connections.LLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lmiterjoint method)": [[119, "compas_timber.connections.LMiterJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.nulljoint method)": [[153, "compas_timber.connections.NullJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tbirdsmouthjoint method)": [[170, "compas_timber.connections.TBirdsmouthJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tbuttjoint method)": [[187, "compas_timber.connections.TButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tdovetailjoint method)": [[205, "compas_timber.connections.TDovetailJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tenonmortisejoint method)": [[258, "compas_timber.connections.TenonMortiseJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tlapjoint method)": [[222, "compas_timber.connections.TLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tstepjoint method)": [[240, "compas_timber.connections.TStepJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.xlapjoint method)": [[275, "compas_timber.connections.XLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.ybuttjoint method)": [[295, "compas_timber.connections.YButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.beam method)": [[385, "compas_timber.elements.Beam.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.fastener method)": [[405, "compas_timber.elements.Fastener.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.fastenertimberinterface method)": [[417, "compas_timber.elements.FastenerTimberInterface.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.plate method)": [[437, "compas_timber.elements.Plate.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.timberelement method)": [[457, "compas_timber.elements.TimberElement.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.wall method)": [[480, "compas_timber.elements.Wall.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.btlxprocessing method)": [[498, "compas_timber.fabrication.BTLxProcessing.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.doublecut method)": [[516, "compas_timber.fabrication.DoubleCut.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.dovetailmortise method)": [[532, "compas_timber.fabrication.DovetailMortise.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.dovetailtenon method)": [[548, "compas_timber.fabrication.DovetailTenon.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.drilling method)": [[562, "compas_timber.fabrication.Drilling.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.frenchridgelap method)": [[577, "compas_timber.fabrication.FrenchRidgeLap.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.jackraftercut method)": [[591, "compas_timber.fabrication.JackRafterCut.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.lap method)": [[605, "compas_timber.fabrication.Lap.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.mortise method)": [[621, "compas_timber.fabrication.Mortise.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.pocket method)": [[636, "compas_timber.fabrication.Pocket.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.slot method)": [[649, "compas_timber.fabrication.Slot.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.stepjoint method)": [[664, "compas_timber.fabrication.StepJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.stepjointnotch method)": [[679, "compas_timber.fabrication.StepJointNotch.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.tenon method)": [[693, "compas_timber.fabrication.Tenon.to_jsonstring", false]], "to_jsonstring() (compas_timber.model.timbermodel method)": [[742, "compas_timber.model.TimberModel.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.buildingplan method)": [[760, "compas_timber.planning.BuildingPlan.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.instruction method)": [[772, "compas_timber.planning.Instruction.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.lineardimension method)": [[782, "compas_timber.planning.LinearDimension.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.model3d method)": [[792, "compas_timber.planning.Model3d.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.step method)": [[803, "compas_timber.planning.Step.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.text3d method)": [[813, "compas_timber.planning.Text3d.to_jsonstring", false]], "topologyrule (class in compas_timber.design)": [[349, "compas_timber.design.TopologyRule", false]], "tostring() (compas_timber.connections.ballnodejoint method)": [[11, "compas_timber.connections.BallNodeJoint.ToString", false]], "tostring() (compas_timber.connections.joint method)": [[32, "compas_timber.connections.Joint.ToString", false]], "tostring() (compas_timber.connections.lapjoint method)": [[122, "compas_timber.connections.LapJoint.ToString", false]], "tostring() (compas_timber.connections.lbuttjoint method)": [[51, "compas_timber.connections.LButtJoint.ToString", false]], "tostring() (compas_timber.connections.lfrenchridgelapjoint method)": [[69, "compas_timber.connections.LFrenchRidgeLapJoint.ToString", false]], "tostring() (compas_timber.connections.llapjoint method)": [[86, "compas_timber.connections.LLapJoint.ToString", false]], "tostring() (compas_timber.connections.lmiterjoint method)": [[103, "compas_timber.connections.LMiterJoint.ToString", false]], "tostring() (compas_timber.connections.nulljoint method)": [[139, "compas_timber.connections.NullJoint.ToString", false]], "tostring() (compas_timber.connections.tbirdsmouthjoint method)": [[156, "compas_timber.connections.TBirdsmouthJoint.ToString", false]], "tostring() (compas_timber.connections.tbuttjoint method)": [[173, "compas_timber.connections.TButtJoint.ToString", false]], "tostring() (compas_timber.connections.tdovetailjoint method)": [[190, "compas_timber.connections.TDovetailJoint.ToString", false]], "tostring() (compas_timber.connections.tenonmortisejoint method)": [[243, "compas_timber.connections.TenonMortiseJoint.ToString", false]], "tostring() (compas_timber.connections.tlapjoint method)": [[208, "compas_timber.connections.TLapJoint.ToString", false]], "tostring() (compas_timber.connections.tstepjoint method)": [[225, "compas_timber.connections.TStepJoint.ToString", false]], "tostring() (compas_timber.connections.xlapjoint method)": [[261, "compas_timber.connections.XLapJoint.ToString", false]], "tostring() (compas_timber.connections.ybuttjoint method)": [[278, "compas_timber.connections.YButtJoint.ToString", false]], "tostring() (compas_timber.design.categoryrule method)": [[299, "compas_timber.design.CategoryRule.ToString", false]], "tostring() (compas_timber.design.debuginfomation method)": [[307, "compas_timber.design.DebugInfomation.ToString", false]], "tostring() (compas_timber.design.directrule method)": [[312, "compas_timber.design.DirectRule.ToString", false]], "tostring() (compas_timber.design.featuredefinition method)": [[320, "compas_timber.design.FeatureDefinition.ToString", false]], "tostring() (compas_timber.design.jointdefinition method)": [[322, "compas_timber.design.JointDefinition.ToString", false]], "tostring() (compas_timber.design.topologyrule method)": [[350, "compas_timber.design.TopologyRule.ToString", false]], "tostring() (compas_timber.elements.beam method)": [[359, "compas_timber.elements.Beam.ToString", false]], "tostring() (compas_timber.elements.fastener method)": [[390, "compas_timber.elements.Fastener.ToString", false]], "tostring() (compas_timber.elements.fastenertimberinterface method)": [[410, "compas_timber.elements.FastenerTimberInterface.ToString", false]], "tostring() (compas_timber.elements.plate method)": [[420, "compas_timber.elements.Plate.ToString", false]], "tostring() (compas_timber.elements.timberelement method)": [[442, "compas_timber.elements.TimberElement.ToString", false]], "tostring() (compas_timber.elements.wall method)": [[462, "compas_timber.elements.Wall.ToString", false]], "tostring() (compas_timber.fabrication.btlxprocessing method)": [[491, "compas_timber.fabrication.BTLxProcessing.ToString", false]], "tostring() (compas_timber.fabrication.doublecut method)": [[505, "compas_timber.fabrication.DoubleCut.ToString", false]], "tostring() (compas_timber.fabrication.dovetailmortise method)": [[519, "compas_timber.fabrication.DovetailMortise.ToString", false]], "tostring() (compas_timber.fabrication.dovetailtenon method)": [[535, "compas_timber.fabrication.DovetailTenon.ToString", false]], "tostring() (compas_timber.fabrication.drilling method)": [[551, "compas_timber.fabrication.Drilling.ToString", false]], "tostring() (compas_timber.fabrication.frenchridgelap method)": [[566, "compas_timber.fabrication.FrenchRidgeLap.ToString", false]], "tostring() (compas_timber.fabrication.jackraftercut method)": [[580, "compas_timber.fabrication.JackRafterCut.ToString", false]], "tostring() (compas_timber.fabrication.lap method)": [[594, "compas_timber.fabrication.Lap.ToString", false]], "tostring() (compas_timber.fabrication.mortise method)": [[611, "compas_timber.fabrication.Mortise.ToString", false]], "tostring() (compas_timber.fabrication.pocket method)": [[626, "compas_timber.fabrication.Pocket.ToString", false]], "tostring() (compas_timber.fabrication.slot method)": [[640, "compas_timber.fabrication.Slot.ToString", false]], "tostring() (compas_timber.fabrication.stepjoint method)": [[652, "compas_timber.fabrication.StepJoint.ToString", false]], "tostring() (compas_timber.fabrication.stepjointnotch method)": [[667, "compas_timber.fabrication.StepJointNotch.ToString", false]], "tostring() (compas_timber.fabrication.tenon method)": [[683, "compas_timber.fabrication.Tenon.ToString", false]], "tostring() (compas_timber.model.timbermodel method)": [[705, "compas_timber.model.TimberModel.ToString", false]], "tostring() (compas_timber.planning.buildingplan method)": [[753, "compas_timber.planning.BuildingPlan.ToString", false]], "tostring() (compas_timber.planning.instruction method)": [[766, "compas_timber.planning.Instruction.ToString", false]], "tostring() (compas_timber.planning.lineardimension method)": [[776, "compas_timber.planning.LinearDimension.ToString", false]], "tostring() (compas_timber.planning.model3d method)": [[786, "compas_timber.planning.Model3d.ToString", false]], "tostring() (compas_timber.planning.step method)": [[797, "compas_timber.planning.Step.ToString", false]], "tostring() (compas_timber.planning.text3d method)": [[807, "compas_timber.planning.Text3d.ToString", false]], "transform() (compas_timber.elements.beam method)": [[386, "compas_timber.elements.Beam.transform", false]], "transform() (compas_timber.elements.fastener method)": [[406, "compas_timber.elements.Fastener.transform", false]], "transform() (compas_timber.elements.plate method)": [[438, "compas_timber.elements.Plate.transform", false]], "transform() (compas_timber.elements.timberelement method)": [[458, "compas_timber.elements.TimberElement.transform", false]], "transform() (compas_timber.elements.wall method)": [[481, "compas_timber.elements.Wall.transform", false]], "transform() (compas_timber.model.timbermodel method)": [[743, "compas_timber.model.TimberModel.transform", false]], "transform() (compas_timber.planning.instruction method)": [[773, "compas_timber.planning.Instruction.transform", false]], "transform() (compas_timber.planning.lineardimension method)": [[783, "compas_timber.planning.LinearDimension.transform", false]], "transform() (compas_timber.planning.model3d method)": [[793, "compas_timber.planning.Model3d.transform", false]], "transform() (compas_timber.planning.step method)": [[804, "compas_timber.planning.Step.transform", false]], "transform() (compas_timber.planning.text3d method)": [[814, "compas_timber.planning.Text3d.transform", false]], "transform_numpy() (compas_timber.model.timbermodel method)": [[744, "compas_timber.model.TimberModel.transform_numpy", false]], "transformed() (compas_timber.elements.beam method)": [[387, "compas_timber.elements.Beam.transformed", false]], "transformed() (compas_timber.elements.fastener method)": [[407, "compas_timber.elements.Fastener.transformed", false]], "transformed() (compas_timber.elements.plate method)": [[439, "compas_timber.elements.Plate.transformed", false]], "transformed() (compas_timber.elements.timberelement method)": [[459, "compas_timber.elements.TimberElement.transformed", false]], "transformed() (compas_timber.elements.wall method)": [[482, "compas_timber.elements.Wall.transformed", false]], "transformed() (compas_timber.model.timbermodel method)": [[745, "compas_timber.model.TimberModel.transformed", false]], "transformed_numpy() (compas_timber.model.timbermodel method)": [[746, "compas_timber.model.TimberModel.transformed_numpy", false]], "translate() (compas_timber.model.timbermodel method)": [[747, "compas_timber.model.TimberModel.translate", false]], "translated() (compas_timber.model.timbermodel method)": [[748, "compas_timber.model.TimberModel.translated", false]], "trim_jack_studs() (compas_timber.design.surfacemodel method)": [[346, "compas_timber.design.SurfaceModel.trim_jack_studs", false]], "trim_king_studs() (compas_timber.design.surfacemodel method)": [[347, "compas_timber.design.SurfaceModel.trim_king_studs", false]], "trim_studs() (compas_timber.design.surfacemodel method)": [[348, "compas_timber.design.SurfaceModel.trim_studs", false]], "tstepjoint (class in compas_timber.connections)": [[224, "compas_timber.connections.TStepJoint", false]], "update_beam_roles() (compas_timber.connections.lbuttjoint method)": [[66, "compas_timber.connections.LButtJoint.update_beam_roles", false]], "validate_data() (compas_timber.connections.ballnodejoint class method)": [[26, "compas_timber.connections.BallNodeJoint.validate_data", false]], "validate_data() (compas_timber.connections.joint class method)": [[47, "compas_timber.connections.Joint.validate_data", false]], "validate_data() (compas_timber.connections.lapjoint class method)": [[137, "compas_timber.connections.LapJoint.validate_data", false]], "validate_data() (compas_timber.connections.lbuttjoint class method)": [[67, "compas_timber.connections.LButtJoint.validate_data", false]], "validate_data() (compas_timber.connections.lfrenchridgelapjoint class method)": [[84, "compas_timber.connections.LFrenchRidgeLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.llapjoint class method)": [[101, "compas_timber.connections.LLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.lmiterjoint class method)": [[120, "compas_timber.connections.LMiterJoint.validate_data", false]], "validate_data() (compas_timber.connections.nulljoint class method)": [[154, "compas_timber.connections.NullJoint.validate_data", false]], "validate_data() (compas_timber.connections.tbirdsmouthjoint class method)": [[171, "compas_timber.connections.TBirdsmouthJoint.validate_data", false]], "validate_data() (compas_timber.connections.tbuttjoint class method)": [[188, "compas_timber.connections.TButtJoint.validate_data", false]], "validate_data() (compas_timber.connections.tdovetailjoint class method)": [[206, "compas_timber.connections.TDovetailJoint.validate_data", false]], "validate_data() (compas_timber.connections.tenonmortisejoint class method)": [[259, "compas_timber.connections.TenonMortiseJoint.validate_data", false]], "validate_data() (compas_timber.connections.tlapjoint class method)": [[223, "compas_timber.connections.TLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.tstepjoint class method)": [[241, "compas_timber.connections.TStepJoint.validate_data", false]], "validate_data() (compas_timber.connections.xlapjoint class method)": [[276, "compas_timber.connections.XLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.ybuttjoint class method)": [[296, "compas_timber.connections.YButtJoint.validate_data", false]], "validate_data() (compas_timber.elements.beam class method)": [[388, "compas_timber.elements.Beam.validate_data", false]], "validate_data() (compas_timber.elements.fastener class method)": [[408, "compas_timber.elements.Fastener.validate_data", false]], "validate_data() (compas_timber.elements.fastenertimberinterface class method)": [[418, "compas_timber.elements.FastenerTimberInterface.validate_data", false]], "validate_data() (compas_timber.elements.plate class method)": [[440, "compas_timber.elements.Plate.validate_data", false]], "validate_data() (compas_timber.elements.timberelement class method)": [[460, "compas_timber.elements.TimberElement.validate_data", false]], "validate_data() (compas_timber.elements.wall class method)": [[483, "compas_timber.elements.Wall.validate_data", false]], "validate_data() (compas_timber.fabrication.btlxprocessing class method)": [[499, "compas_timber.fabrication.BTLxProcessing.validate_data", false]], "validate_data() (compas_timber.fabrication.doublecut class method)": [[517, "compas_timber.fabrication.DoubleCut.validate_data", false]], "validate_data() (compas_timber.fabrication.dovetailmortise class method)": [[533, "compas_timber.fabrication.DovetailMortise.validate_data", false]], "validate_data() (compas_timber.fabrication.dovetailtenon class method)": [[549, "compas_timber.fabrication.DovetailTenon.validate_data", false]], "validate_data() (compas_timber.fabrication.drilling class method)": [[563, "compas_timber.fabrication.Drilling.validate_data", false]], "validate_data() (compas_timber.fabrication.frenchridgelap class method)": [[578, "compas_timber.fabrication.FrenchRidgeLap.validate_data", false]], "validate_data() (compas_timber.fabrication.jackraftercut class method)": [[592, "compas_timber.fabrication.JackRafterCut.validate_data", false]], "validate_data() (compas_timber.fabrication.lap class method)": [[606, "compas_timber.fabrication.Lap.validate_data", false]], "validate_data() (compas_timber.fabrication.mortise class method)": [[622, "compas_timber.fabrication.Mortise.validate_data", false]], "validate_data() (compas_timber.fabrication.pocket class method)": [[637, "compas_timber.fabrication.Pocket.validate_data", false]], "validate_data() (compas_timber.fabrication.slot class method)": [[650, "compas_timber.fabrication.Slot.validate_data", false]], "validate_data() (compas_timber.fabrication.stepjoint class method)": [[665, "compas_timber.fabrication.StepJoint.validate_data", false]], "validate_data() (compas_timber.fabrication.stepjointnotch class method)": [[680, "compas_timber.fabrication.StepJointNotch.validate_data", false]], "validate_data() (compas_timber.fabrication.tenon class method)": [[694, "compas_timber.fabrication.Tenon.validate_data", false]], "validate_data() (compas_timber.model.timbermodel class method)": [[749, "compas_timber.model.TimberModel.validate_data", false]], "validate_data() (compas_timber.planning.buildingplan class method)": [[761, "compas_timber.planning.BuildingPlan.validate_data", false]], "validate_data() (compas_timber.planning.instruction class method)": [[774, "compas_timber.planning.Instruction.validate_data", false]], "validate_data() (compas_timber.planning.lineardimension class method)": [[784, "compas_timber.planning.LinearDimension.validate_data", false]], "validate_data() (compas_timber.planning.model3d class method)": [[794, "compas_timber.planning.Model3d.validate_data", false]], "validate_data() (compas_timber.planning.step class method)": [[805, "compas_timber.planning.Step.validate_data", false]], "validate_data() (compas_timber.planning.text3d class method)": [[815, "compas_timber.planning.Text3d.validate_data", false]], "volume_from_params_and_beam() (compas_timber.fabrication.lap method)": [[607, "compas_timber.fabrication.Lap.volume_from_params_and_beam", false]], "volume_from_params_and_beam() (compas_timber.fabrication.mortise method)": [[623, "compas_timber.fabrication.Mortise.volume_from_params_and_beam", false]], "volume_from_params_and_beam() (compas_timber.fabrication.tenon method)": [[695, "compas_timber.fabrication.Tenon.volume_from_params_and_beam", false]], "volume_from_params_and_element() (compas_timber.fabrication.pocket method)": [[638, "compas_timber.fabrication.Pocket.volume_from_params_and_element", false]], "wall (class in compas_timber.elements)": [[461, "compas_timber.elements.Wall", false]], "write() (compas_timber.fabrication.btlxwriter method)": [[503, "compas_timber.fabrication.BTLxWriter.write", false]], "xlapjoint (class in compas_timber.connections)": [[260, "compas_timber.connections.XLapJoint", false]], "ybuttjoint (class in compas_timber.connections)": [[277, "compas_timber.connections.YButtJoint", false]]}, "objects": {"compas_timber.connections": [[10, 0, 1, "", "BallNodeJoint"], [27, 0, 1, "", "ConnectionSolver"], [31, 0, 1, "", "Joint"], [48, 0, 1, "", "JointTopology"], [50, 0, 1, "", "LButtJoint"], [68, 0, 1, "", "LFrenchRidgeLapJoint"], [85, 0, 1, "", "LLapJoint"], [102, 0, 1, "", "LMiterJoint"], [121, 0, 1, "", "LapJoint"], [138, 0, 1, "", "NullJoint"], [155, 0, 1, "", "TBirdsmouthJoint"], [172, 0, 1, "", "TButtJoint"], [189, 0, 1, "", "TDovetailJoint"], [207, 0, 1, "", "TLapJoint"], [224, 0, 1, "", "TStepJoint"], [242, 0, 1, "", "TenonMortiseJoint"], [260, 0, 1, "", "XLapJoint"], [277, 0, 1, "", "YButtJoint"], [297, 2, 1, "", "find_neighboring_elements"]], "compas_timber.connections.BallNodeJoint": [[11, 1, 1, "", "ToString"], [12, 1, 1, "", "add_extensions"], [13, 1, 1, "", "add_features"], [14, 1, 1, "", "check_elements_compatibility"], [15, 1, 1, "", "copy"], [16, 1, 1, "", "create"], [17, 1, 1, "", "element_count_complies"], [18, 1, 1, "", "from_json"], [19, 1, 1, "", "from_jsonstring"], [20, 1, 1, "", "get_face_most_ortho_to_beam"], [21, 1, 1, "", "get_face_most_towards_beam"], [22, 1, 1, "", "restore_beams_from_keys"], [23, 1, 1, "", "sha256"], [24, 1, 1, "", "to_json"], [25, 1, 1, "", "to_jsonstring"], [26, 1, 1, "", "validate_data"]], "compas_timber.connections.ConnectionSolver": [[28, 1, 1, "", "find_intersecting_pairs"], [29, 1, 1, "", "find_topology"], [30, 1, 1, "", "find_wall_wall_topology"]], "compas_timber.connections.Joint": [[32, 1, 1, "", "ToString"], [33, 1, 1, "", "add_extensions"], [34, 1, 1, "", "add_features"], [35, 1, 1, "", "check_elements_compatibility"], [36, 1, 1, "", "copy"], [37, 1, 1, "", "create"], [38, 1, 1, "", "element_count_complies"], [39, 1, 1, "", "from_json"], [40, 1, 1, "", "from_jsonstring"], [41, 1, 1, "", "get_face_most_ortho_to_beam"], [42, 1, 1, "", "get_face_most_towards_beam"], [43, 1, 1, "", "restore_beams_from_keys"], [44, 1, 1, "", "sha256"], [45, 1, 1, "", "to_json"], [46, 1, 1, "", "to_jsonstring"], [47, 1, 1, "", "validate_data"]], "compas_timber.connections.JointTopology": [[49, 1, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[51, 1, 1, "", "ToString"], [52, 1, 1, "", "add_extensions"], [53, 1, 1, "", "add_features"], [54, 1, 1, "", "check_elements_compatibility"], [55, 1, 1, "", "copy"], [56, 1, 1, "", "create"], [57, 1, 1, "", "element_count_complies"], [58, 1, 1, "", "from_json"], [59, 1, 1, "", "from_jsonstring"], [60, 1, 1, "", "get_face_most_ortho_to_beam"], [61, 1, 1, "", "get_face_most_towards_beam"], [62, 1, 1, "", "restore_beams_from_keys"], [63, 1, 1, "", "sha256"], [64, 1, 1, "", "to_json"], [65, 1, 1, "", "to_jsonstring"], [66, 1, 1, "", "update_beam_roles"], [67, 1, 1, "", "validate_data"]], "compas_timber.connections.LFrenchRidgeLapJoint": [[69, 1, 1, "", "ToString"], [70, 1, 1, "", "add_extensions"], [71, 1, 1, "", "add_features"], [72, 1, 1, "", "check_elements_compatibility"], [73, 1, 1, "", "copy"], [74, 1, 1, "", "create"], [75, 1, 1, "", "element_count_complies"], [76, 1, 1, "", "from_json"], [77, 1, 1, "", "from_jsonstring"], [78, 1, 1, "", "get_face_most_ortho_to_beam"], [79, 1, 1, "", "get_face_most_towards_beam"], [80, 1, 1, "", "restore_beams_from_keys"], [81, 1, 1, "", "sha256"], [82, 1, 1, "", "to_json"], [83, 1, 1, "", "to_jsonstring"], [84, 1, 1, "", "validate_data"]], "compas_timber.connections.LLapJoint": [[86, 1, 1, "", "ToString"], [87, 1, 1, "", "add_extensions"], [88, 1, 1, "", "add_features"], [89, 1, 1, "", "check_elements_compatibility"], [90, 1, 1, "", "copy"], [91, 1, 1, "", "create"], [92, 1, 1, "", "element_count_complies"], [93, 1, 1, "", "from_json"], [94, 1, 1, "", "from_jsonstring"], [95, 1, 1, "", "get_face_most_ortho_to_beam"], [96, 1, 1, "", "get_face_most_towards_beam"], [97, 1, 1, "", "restore_beams_from_keys"], [98, 1, 1, "", "sha256"], [99, 1, 1, "", "to_json"], [100, 1, 1, "", "to_jsonstring"], [101, 1, 1, "", "validate_data"]], "compas_timber.connections.LMiterJoint": [[103, 1, 1, "", "ToString"], [104, 1, 1, "", "add_extensions"], [105, 1, 1, "", "add_features"], [106, 1, 1, "", "check_elements_compatibility"], [107, 1, 1, "", "copy"], [108, 1, 1, "", "create"], [109, 1, 1, "", "element_count_complies"], [110, 1, 1, "", "from_json"], [111, 1, 1, "", "from_jsonstring"], [112, 1, 1, "", "get_cutoff_plane"], [113, 1, 1, "", "get_cutting_planes"], [114, 1, 1, "", "get_face_most_ortho_to_beam"], [115, 1, 1, "", "get_face_most_towards_beam"], [116, 1, 1, "", "restore_beams_from_keys"], [117, 1, 1, "", "sha256"], [118, 1, 1, "", "to_json"], [119, 1, 1, "", "to_jsonstring"], [120, 1, 1, "", "validate_data"]], "compas_timber.connections.LapJoint": [[122, 1, 1, "", "ToString"], [123, 1, 1, "", "add_extensions"], [124, 1, 1, "", "add_features"], [125, 1, 1, "", "check_elements_compatibility"], [126, 1, 1, "", "copy"], [127, 1, 1, "", "create"], [128, 1, 1, "", "element_count_complies"], [129, 1, 1, "", "from_json"], [130, 1, 1, "", "from_jsonstring"], [131, 1, 1, "", "get_face_most_ortho_to_beam"], [132, 1, 1, "", "get_face_most_towards_beam"], [133, 1, 1, "", "restore_beams_from_keys"], [134, 1, 1, "", "sha256"], [135, 1, 1, "", "to_json"], [136, 1, 1, "", "to_jsonstring"], [137, 1, 1, "", "validate_data"]], "compas_timber.connections.NullJoint": [[139, 1, 1, "", "ToString"], [140, 1, 1, "", "add_extensions"], [141, 1, 1, "", "add_features"], [142, 1, 1, "", "check_elements_compatibility"], [143, 1, 1, "", "copy"], [144, 1, 1, "", "create"], [145, 1, 1, "", "element_count_complies"], [146, 1, 1, "", "from_json"], [147, 1, 1, "", "from_jsonstring"], [148, 1, 1, "", "get_face_most_ortho_to_beam"], [149, 1, 1, "", "get_face_most_towards_beam"], [150, 1, 1, "", "restore_beams_from_keys"], [151, 1, 1, "", "sha256"], [152, 1, 1, "", "to_json"], [153, 1, 1, "", "to_jsonstring"], [154, 1, 1, "", "validate_data"]], "compas_timber.connections.TBirdsmouthJoint": [[156, 1, 1, "", "ToString"], [157, 1, 1, "", "add_extensions"], [158, 1, 1, "", "add_features"], [159, 1, 1, "", "check_elements_compatibility"], [160, 1, 1, "", "copy"], [161, 1, 1, "", "create"], [162, 1, 1, "", "element_count_complies"], [163, 1, 1, "", "from_json"], [164, 1, 1, "", "from_jsonstring"], [165, 1, 1, "", "get_face_most_ortho_to_beam"], [166, 1, 1, "", "get_face_most_towards_beam"], [167, 1, 1, "", "restore_beams_from_keys"], [168, 1, 1, "", "sha256"], [169, 1, 1, "", "to_json"], [170, 1, 1, "", "to_jsonstring"], [171, 1, 1, "", "validate_data"]], "compas_timber.connections.TButtJoint": [[173, 1, 1, "", "ToString"], [174, 1, 1, "", "add_extensions"], [175, 1, 1, "", "add_features"], [176, 1, 1, "", "check_elements_compatibility"], [177, 1, 1, "", "copy"], [178, 1, 1, "", "create"], [179, 1, 1, "", "element_count_complies"], [180, 1, 1, "", "from_json"], [181, 1, 1, "", "from_jsonstring"], [182, 1, 1, "", "get_face_most_ortho_to_beam"], [183, 1, 1, "", "get_face_most_towards_beam"], [184, 1, 1, "", "restore_beams_from_keys"], [185, 1, 1, "", "sha256"], [186, 1, 1, "", "to_json"], [187, 1, 1, "", "to_jsonstring"], [188, 1, 1, "", "validate_data"]], "compas_timber.connections.TDovetailJoint": [[190, 1, 1, "", "ToString"], [191, 1, 1, "", "add_extensions"], [192, 1, 1, "", "add_features"], [193, 1, 1, "", "check_elements_compatibility"], [194, 1, 1, "", "copy"], [195, 1, 1, "", "create"], [196, 1, 1, "", "define_dovetail_tool"], [197, 1, 1, "", "element_count_complies"], [198, 1, 1, "", "from_json"], [199, 1, 1, "", "from_jsonstring"], [200, 1, 1, "", "get_face_most_ortho_to_beam"], [201, 1, 1, "", "get_face_most_towards_beam"], [202, 1, 1, "", "restore_beams_from_keys"], [203, 1, 1, "", "sha256"], [204, 1, 1, "", "to_json"], [205, 1, 1, "", "to_jsonstring"], [206, 1, 1, "", "validate_data"]], "compas_timber.connections.TLapJoint": [[208, 1, 1, "", "ToString"], [209, 1, 1, "", "add_extensions"], [210, 1, 1, "", "add_features"], [211, 1, 1, "", "check_elements_compatibility"], [212, 1, 1, "", "copy"], [213, 1, 1, "", "create"], [214, 1, 1, "", "element_count_complies"], [215, 1, 1, "", "from_json"], [216, 1, 1, "", "from_jsonstring"], [217, 1, 1, "", "get_face_most_ortho_to_beam"], [218, 1, 1, "", "get_face_most_towards_beam"], [219, 1, 1, "", "restore_beams_from_keys"], [220, 1, 1, "", "sha256"], [221, 1, 1, "", "to_json"], [222, 1, 1, "", "to_jsonstring"], [223, 1, 1, "", "validate_data"]], "compas_timber.connections.TStepJoint": [[225, 1, 1, "", "ToString"], [226, 1, 1, "", "add_extensions"], [227, 1, 1, "", "add_features"], [228, 1, 1, "", "check_elements_compatibility"], [229, 1, 1, "", "copy"], [230, 1, 1, "", "create"], [231, 1, 1, "", "element_count_complies"], [232, 1, 1, "", "from_json"], [233, 1, 1, "", "from_jsonstring"], [234, 1, 1, "", "get_face_most_ortho_to_beam"], [235, 1, 1, "", "get_face_most_towards_beam"], [236, 1, 1, "", "restore_beams_from_keys"], [237, 1, 1, "", "set_step_depths"], [238, 1, 1, "", "sha256"], [239, 1, 1, "", "to_json"], [240, 1, 1, "", "to_jsonstring"], [241, 1, 1, "", "validate_data"]], "compas_timber.connections.TenonMortiseJoint": [[243, 1, 1, "", "ToString"], [244, 1, 1, "", "add_extensions"], [245, 1, 1, "", "add_features"], [246, 1, 1, "", "check_elements_compatibility"], [247, 1, 1, "", "copy"], [248, 1, 1, "", "create"], [249, 1, 1, "", "element_count_complies"], [250, 1, 1, "", "from_json"], [251, 1, 1, "", "from_jsonstring"], [252, 1, 1, "", "get_face_most_ortho_to_beam"], [253, 1, 1, "", "get_face_most_towards_beam"], [254, 1, 1, "", "restore_beams_from_keys"], [255, 1, 1, "", "set_default_values"], [256, 1, 1, "", "sha256"], [257, 1, 1, "", "to_json"], [258, 1, 1, "", "to_jsonstring"], [259, 1, 1, "", "validate_data"]], "compas_timber.connections.XLapJoint": [[261, 1, 1, "", "ToString"], [262, 1, 1, "", "add_extensions"], [263, 1, 1, "", "add_features"], [264, 1, 1, "", "check_elements_compatibility"], [265, 1, 1, "", "copy"], [266, 1, 1, "", "create"], [267, 1, 1, "", "element_count_complies"], [268, 1, 1, "", "from_json"], [269, 1, 1, "", "from_jsonstring"], [270, 1, 1, "", "get_face_most_ortho_to_beam"], [271, 1, 1, "", "get_face_most_towards_beam"], [272, 1, 1, "", "restore_beams_from_keys"], [273, 1, 1, "", "sha256"], [274, 1, 1, "", "to_json"], [275, 1, 1, "", "to_jsonstring"], [276, 1, 1, "", "validate_data"]], "compas_timber.connections.YButtJoint": [[278, 1, 1, "", "ToString"], [279, 1, 1, "", "add_extensions"], [280, 1, 1, "", "add_features"], [281, 1, 1, "", "check_elements_compatibility"], [282, 1, 1, "", "copy"], [283, 1, 1, "", "create"], [284, 1, 1, "", "cross_beam_ref_side_index"], [285, 1, 1, "", "element_count_complies"], [286, 1, 1, "", "from_json"], [287, 1, 1, "", "from_jsonstring"], [288, 1, 1, "", "get_face_most_ortho_to_beam"], [289, 1, 1, "", "get_face_most_towards_beam"], [290, 1, 1, "", "get_miter_planes"], [291, 1, 1, "", "main_beam_ref_side_index"], [292, 1, 1, "", "restore_beams_from_keys"], [293, 1, 1, "", "sha256"], [294, 1, 1, "", "to_json"], [295, 1, 1, "", "to_jsonstring"], [296, 1, 1, "", "validate_data"]], "compas_timber.design": [[298, 0, 1, "", "CategoryRule"], [306, 0, 1, "", "DebugInfomation"], [311, 0, 1, "", "DirectRule"], [319, 0, 1, "", "FeatureDefinition"], [321, 0, 1, "", "JointDefinition"], [325, 0, 1, "", "JointRule"], [331, 0, 1, "", "SurfaceModel"], [349, 0, 1, "", "TopologyRule"], [356, 2, 1, "", "guess_joint_topology_2beams"], [357, 2, 1, "", "set_default_joints"]], "compas_timber.design.CategoryRule": [[299, 1, 1, "", "ToString"], [300, 1, 1, "", "comply"], [301, 1, 1, "", "get_category_rules"], [302, 1, 1, "", "get_direct_rules"], [303, 1, 1, "", "get_topology_rules"], [304, 1, 1, "", "joints_from_beams_and_rules"], [305, 1, 1, "", "reorder"]], "compas_timber.design.DebugInfomation": [[307, 1, 1, "", "ToString"], [308, 1, 1, "", "add_fastener_error"], [309, 1, 1, "", "add_feature_error"], [310, 1, 1, "", "add_joint_error"]], "compas_timber.design.DirectRule": [[312, 1, 1, "", "ToString"], [313, 1, 1, "", "comply"], [314, 1, 1, "", "contains"], [315, 1, 1, "", "get_category_rules"], [316, 1, 1, "", "get_direct_rules"], [317, 1, 1, "", "get_topology_rules"], [318, 1, 1, "", "joints_from_beams_and_rules"]], "compas_timber.design.FeatureDefinition": [[320, 1, 1, "", "ToString"]], "compas_timber.design.JointDefinition": [[322, 1, 1, "", "ToString"], [323, 1, 1, "", "is_identical"], [324, 1, 1, "", "match"]], "compas_timber.design.JointRule": [[326, 1, 1, "", "comply"], [327, 1, 1, "", "get_category_rules"], [328, 1, 1, "", "get_direct_rules"], [329, 1, 1, "", "get_topology_rules"], [330, 1, 1, "", "joints_from_beams_and_rules"]], "compas_timber.design.SurfaceModel": [[332, 1, 1, "", "beam_category_names"], [333, 1, 1, "", "create_model"], [334, 1, 1, "", "cull_overlaps"], [335, 1, 1, "", "distance_between_elements"], [336, 1, 1, "", "generate_frame"], [337, 1, 1, "", "generate_perimeter_beams"], [338, 1, 1, "", "generate_plates"], [339, 1, 1, "", "generate_stud_lines"], [340, 1, 1, "", "generate_studs"], [341, 1, 1, "", "generate_windows"], [342, 1, 1, "", "get_beam_intersections"], [343, 1, 1, "", "get_interior_segment_indices"], [344, 1, 1, "", "offset_elements"], [345, 1, 1, "", "parse_loops"], [346, 1, 1, "", "trim_jack_studs"], [347, 1, 1, "", "trim_king_studs"], [348, 1, 1, "", "trim_studs"]], "compas_timber.design.TopologyRule": [[350, 1, 1, "", "ToString"], [351, 1, 1, "", "comply"], [352, 1, 1, "", "get_category_rules"], [353, 1, 1, "", "get_direct_rules"], [354, 1, 1, "", "get_topology_rules"], [355, 1, 1, "", "joints_from_beams_and_rules"]], "compas_timber.elements": [[358, 0, 1, "", "Beam"], [389, 0, 1, "", "Fastener"], [409, 0, 1, "", "FastenerTimberInterface"], [419, 0, 1, "", "Plate"], [441, 0, 1, "", "TimberElement"], [461, 0, 1, "", "Wall"]], "compas_timber.elements.Beam": [[359, 1, 1, "", "ToString"], [360, 1, 1, "", "add_blank_extension"], [361, 1, 1, "", "add_feature"], [362, 1, 1, "", "add_features"], [363, 1, 1, "", "back_side"], [364, 1, 1, "", "compute_aabb"], [365, 1, 1, "", "compute_collision_mesh"], [366, 1, 1, "", "compute_geometry"], [367, 1, 1, "", "compute_obb"], [368, 1, 1, "", "compute_worldtransformation"], [369, 1, 1, "", "copy"], [370, 1, 1, "", "endpoint_closest_to_point"], [371, 1, 1, "", "extension_to_plane"], [372, 1, 1, "", "from_centerline"], [373, 1, 1, "", "from_endpoints"], [374, 1, 1, "", "from_json"], [375, 1, 1, "", "from_jsonstring"], [376, 1, 1, "", "front_side"], [377, 1, 1, "", "get_dimensions_relative_to_side"], [378, 1, 1, "", "opp_side"], [379, 1, 1, "", "remove_blank_extension"], [380, 1, 1, "", "remove_features"], [381, 1, 1, "", "reset"], [382, 1, 1, "", "sha256"], [383, 1, 1, "", "side_as_surface"], [384, 1, 1, "", "to_json"], [385, 1, 1, "", "to_jsonstring"], [386, 1, 1, "", "transform"], [387, 1, 1, "", "transformed"], [388, 1, 1, "", "validate_data"]], "compas_timber.elements.Fastener": [[390, 1, 1, "", "ToString"], [391, 1, 1, "", "add_feature"], [392, 1, 1, "", "compute_aabb"], [393, 1, 1, "", "compute_collision_mesh"], [394, 1, 1, "", "compute_geometry"], [395, 1, 1, "", "compute_obb"], [396, 1, 1, "", "compute_worldtransformation"], [397, 1, 1, "", "copy"], [398, 1, 1, "", "from_json"], [399, 1, 1, "", "from_jsonstring"], [400, 1, 1, "", "remove_blank_extension"], [401, 1, 1, "", "remove_features"], [402, 1, 1, "", "reset"], [403, 1, 1, "", "sha256"], [404, 1, 1, "", "to_json"], [405, 1, 1, "", "to_jsonstring"], [406, 1, 1, "", "transform"], [407, 1, 1, "", "transformed"], [408, 1, 1, "", "validate_data"]], "compas_timber.elements.FastenerTimberInterface": [[410, 1, 1, "", "ToString"], [411, 1, 1, "", "copy"], [412, 1, 1, "", "from_json"], [413, 1, 1, "", "from_jsonstring"], [414, 1, 1, "", "get_features"], [415, 1, 1, "", "sha256"], [416, 1, 1, "", "to_json"], [417, 1, 1, "", "to_jsonstring"], [418, 1, 1, "", "validate_data"]], "compas_timber.elements.Plate": [[420, 1, 1, "", "ToString"], [421, 1, 1, "", "add_feature"], [422, 1, 1, "", "add_features"], [423, 1, 1, "", "compute_aabb"], [424, 1, 1, "", "compute_collision_mesh"], [425, 1, 1, "", "compute_geometry"], [426, 1, 1, "", "compute_obb"], [427, 1, 1, "", "compute_worldtransformation"], [428, 1, 1, "", "copy"], [429, 1, 1, "", "from_json"], [430, 1, 1, "", "from_jsonstring"], [431, 1, 1, "", "remove_blank_extension"], [432, 1, 1, "", "remove_features"], [433, 1, 1, "", "reset"], [434, 1, 1, "", "sha256"], [435, 1, 1, "", "side_as_surface"], [436, 1, 1, "", "to_json"], [437, 1, 1, "", "to_jsonstring"], [438, 1, 1, "", "transform"], [439, 1, 1, "", "transformed"], [440, 1, 1, "", "validate_data"]], "compas_timber.elements.TimberElement": [[442, 1, 1, "", "ToString"], [443, 1, 1, "", "add_feature"], [444, 1, 1, "", "compute_aabb"], [445, 1, 1, "", "compute_collision_mesh"], [446, 1, 1, "", "compute_geometry"], [447, 1, 1, "", "compute_obb"], [448, 1, 1, "", "compute_worldtransformation"], [449, 1, 1, "", "copy"], [450, 1, 1, "", "from_json"], [451, 1, 1, "", "from_jsonstring"], [452, 1, 1, "", "remove_blank_extension"], [453, 1, 1, "", "remove_features"], [454, 1, 1, "", "reset"], [455, 1, 1, "", "sha256"], [456, 1, 1, "", "to_json"], [457, 1, 1, "", "to_jsonstring"], [458, 1, 1, "", "transform"], [459, 1, 1, "", "transformed"], [460, 1, 1, "", "validate_data"]], "compas_timber.elements.Wall": [[462, 1, 1, "", "ToString"], [463, 1, 1, "", "add_feature"], [464, 1, 1, "", "compute_aabb"], [465, 1, 1, "", "compute_collision_mesh"], [466, 1, 1, "", "compute_geometry"], [467, 1, 1, "", "compute_obb"], [468, 1, 1, "", "compute_worldtransformation"], [469, 1, 1, "", "copy"], [470, 1, 1, "", "from_boundary"], [471, 1, 1, "", "from_brep"], [472, 1, 1, "", "from_json"], [473, 1, 1, "", "from_jsonstring"], [474, 1, 1, "", "remove_blank_extension"], [475, 1, 1, "", "remove_features"], [476, 1, 1, "", "reset"], [477, 1, 1, "", "rotate"], [478, 1, 1, "", "sha256"], [479, 1, 1, "", "to_json"], [480, 1, 1, "", "to_jsonstring"], [481, 1, 1, "", "transform"], [482, 1, 1, "", "transformed"], [483, 1, 1, "", "validate_data"]], "compas_timber.errors": [[484, 3, 1, "", "BeamJoiningError"], [485, 3, 1, "", "FastenerApplicationError"], [486, 3, 1, "", "FeatureApplicationError"]], "compas_timber.fabrication": [[487, 0, 1, "", "BTLxPart"], [490, 0, 1, "", "BTLxProcessing"], [500, 0, 1, "", "BTLxWriter"], [504, 0, 1, "", "DoubleCut"], [518, 0, 1, "", "DovetailMortise"], [534, 0, 1, "", "DovetailTenon"], [550, 0, 1, "", "Drilling"], [564, 0, 1, "", "EdgePositionType"], [565, 0, 1, "", "FrenchRidgeLap"], [579, 0, 1, "", "JackRafterCut"], [593, 0, 1, "", "Lap"], [608, 0, 1, "", "LimitationTopType"], [609, 0, 1, "", "MachiningLimits"], [610, 0, 1, "", "Mortise"], [624, 0, 1, "", "OrientationType"], [625, 0, 1, "", "Pocket"], [639, 0, 1, "", "Slot"], [651, 0, 1, "", "StepJoint"], [666, 0, 1, "", "StepJointNotch"], [681, 0, 1, "", "StepShapeType"], [682, 0, 1, "", "Tenon"], [696, 0, 1, "", "TenonShapeType"]], "compas_timber.fabrication.BTLxPart": [[488, 1, 1, "", "et_point_vals"], [489, 1, 1, "", "ref_side_from_face"]], "compas_timber.fabrication.BTLxProcessing": [[491, 1, 1, "", "ToString"], [492, 1, 1, "", "add_subprocessing"], [493, 1, 1, "", "copy"], [494, 1, 1, "", "from_json"], [495, 1, 1, "", "from_jsonstring"], [496, 1, 1, "", "sha256"], [497, 1, 1, "", "to_json"], [498, 1, 1, "", "to_jsonstring"], [499, 1, 1, "", "validate_data"]], "compas_timber.fabrication.BTLxWriter": [[501, 1, 1, "", "model_to_xml"], [502, 1, 1, "", "register_type_serializer"], [503, 1, 1, "", "write"]], "compas_timber.fabrication.DoubleCut": [[505, 1, 1, "", "ToString"], [506, 1, 1, "", "add_subprocessing"], [507, 1, 1, "", "apply"], [508, 1, 1, "", "copy"], [509, 1, 1, "", "from_json"], [510, 1, 1, "", "from_jsonstring"], [511, 1, 1, "", "from_planes_and_beam"], [512, 1, 1, "", "from_shapes_and_element"], [513, 1, 1, "", "planes_from_params_and_beam"], [514, 1, 1, "", "sha256"], [515, 1, 1, "", "to_json"], [516, 1, 1, "", "to_jsonstring"], [517, 1, 1, "", "validate_data"]], "compas_timber.fabrication.DovetailMortise": [[519, 1, 1, "", "ToString"], [520, 1, 1, "", "add_subprocessing"], [521, 1, 1, "", "apply"], [522, 1, 1, "", "copy"], [523, 1, 1, "", "define_dovetail_tool"], [524, 1, 1, "", "dovetail_cutting_frames_from_params_and_beam"], [525, 1, 1, "", "dovetail_volume_from_params_and_beam"], [526, 1, 1, "", "frame_from_params_and_beam"], [527, 1, 1, "", "from_frame_and_beam"], [528, 1, 1, "", "from_json"], [529, 1, 1, "", "from_jsonstring"], [530, 1, 1, "", "sha256"], [531, 1, 1, "", "to_json"], [532, 1, 1, "", "to_jsonstring"], [533, 1, 1, "", "validate_data"]], "compas_timber.fabrication.DovetailTenon": [[535, 1, 1, "", "ToString"], [536, 1, 1, "", "add_subprocessing"], [537, 1, 1, "", "apply"], [538, 1, 1, "", "copy"], [539, 1, 1, "", "define_dovetail_tool"], [540, 1, 1, "", "dovetail_cutting_frames_from_params_and_beam"], [541, 1, 1, "", "dovetail_volume_from_params_and_beam"], [542, 1, 1, "", "frame_from_params_and_beam"], [543, 1, 1, "", "from_json"], [544, 1, 1, "", "from_jsonstring"], [545, 1, 1, "", "from_plane_and_beam"], [546, 1, 1, "", "sha256"], [547, 1, 1, "", "to_json"], [548, 1, 1, "", "to_jsonstring"], [549, 1, 1, "", "validate_data"]], "compas_timber.fabrication.Drilling": [[551, 1, 1, "", "ToString"], [552, 1, 1, "", "add_subprocessing"], [553, 1, 1, "", "apply"], [554, 1, 1, "", "copy"], [555, 1, 1, "", "cylinder_from_params_and_element"], [556, 1, 1, "", "from_json"], [557, 1, 1, "", "from_jsonstring"], [558, 1, 1, "", "from_line_and_element"], [559, 1, 1, "", "from_shapes_and_element"], [560, 1, 1, "", "sha256"], [561, 1, 1, "", "to_json"], [562, 1, 1, "", "to_jsonstring"], [563, 1, 1, "", "validate_data"]], "compas_timber.fabrication.FrenchRidgeLap": [[566, 1, 1, "", "ToString"], [567, 1, 1, "", "add_subprocessing"], [568, 1, 1, "", "apply"], [569, 1, 1, "", "copy"], [570, 1, 1, "", "frame_from_params_and_beam"], [571, 1, 1, "", "from_beam_beam_and_plane"], [572, 1, 1, "", "from_json"], [573, 1, 1, "", "from_jsonstring"], [574, 1, 1, "", "lap_volume_from_params_and_beam"], [575, 1, 1, "", "sha256"], [576, 1, 1, "", "to_json"], [577, 1, 1, "", "to_jsonstring"], [578, 1, 1, "", "validate_data"]], "compas_timber.fabrication.JackRafterCut": [[580, 1, 1, "", "ToString"], [581, 1, 1, "", "add_subprocessing"], [582, 1, 1, "", "apply"], [583, 1, 1, "", "copy"], [584, 1, 1, "", "from_json"], [585, 1, 1, "", "from_jsonstring"], [586, 1, 1, "", "from_plane_and_beam"], [587, 1, 1, "", "from_shapes_and_element"], [588, 1, 1, "", "plane_from_params_and_beam"], [589, 1, 1, "", "sha256"], [590, 1, 1, "", "to_json"], [591, 1, 1, "", "to_jsonstring"], [592, 1, 1, "", "validate_data"]], "compas_timber.fabrication.Lap": [[594, 1, 1, "", "ToString"], [595, 1, 1, "", "add_subprocessing"], [596, 1, 1, "", "apply"], [597, 1, 1, "", "copy"], [598, 1, 1, "", "from_json"], [599, 1, 1, "", "from_jsonstring"], [600, 1, 1, "", "from_plane_and_beam"], [601, 1, 1, "", "from_shapes_and_element"], [602, 1, 1, "", "from_volume_and_beam"], [603, 1, 1, "", "sha256"], [604, 1, 1, "", "to_json"], [605, 1, 1, "", "to_jsonstring"], [606, 1, 1, "", "validate_data"], [607, 1, 1, "", "volume_from_params_and_beam"]], "compas_timber.fabrication.Mortise": [[611, 1, 1, "", "ToString"], [612, 1, 1, "", "add_subprocessing"], [613, 1, 1, "", "apply"], [614, 1, 1, "", "copy"], [615, 1, 1, "", "frame_from_params_and_beam"], [616, 1, 1, "", "from_frame_and_beam"], [617, 1, 1, "", "from_json"], [618, 1, 1, "", "from_jsonstring"], [619, 1, 1, "", "sha256"], [620, 1, 1, "", "to_json"], [621, 1, 1, "", "to_jsonstring"], [622, 1, 1, "", "validate_data"], [623, 1, 1, "", "volume_from_params_and_beam"]], "compas_timber.fabrication.Pocket": [[626, 1, 1, "", "ToString"], [627, 1, 1, "", "add_subprocessing"], [628, 1, 1, "", "apply"], [629, 1, 1, "", "copy"], [630, 1, 1, "", "from_json"], [631, 1, 1, "", "from_jsonstring"], [632, 1, 1, "", "from_shapes_and_element"], [633, 1, 1, "", "from_volume_and_element"], [634, 1, 1, "", "sha256"], [635, 1, 1, "", "to_json"], [636, 1, 1, "", "to_jsonstring"], [637, 1, 1, "", "validate_data"], [638, 1, 1, "", "volume_from_params_and_element"]], "compas_timber.fabrication.Slot": [[640, 1, 1, "", "ToString"], [641, 1, 1, "", "add_subprocessing"], [642, 1, 1, "", "apply"], [643, 1, 1, "", "copy"], [644, 1, 1, "", "from_json"], [645, 1, 1, "", "from_jsonstring"], [646, 1, 1, "", "from_plane_and_beam"], [647, 1, 1, "", "sha256"], [648, 1, 1, "", "to_json"], [649, 1, 1, "", "to_jsonstring"], [650, 1, 1, "", "validate_data"]], "compas_timber.fabrication.StepJoint": [[652, 1, 1, "", "ToString"], [653, 1, 1, "", "add_subprocessing"], [654, 1, 1, "", "add_tenon"], [655, 1, 1, "", "apply"], [656, 1, 1, "", "copy"], [657, 1, 1, "", "from_json"], [658, 1, 1, "", "from_jsonstring"], [659, 1, 1, "", "from_plane_and_beam"], [660, 1, 1, "", "planes_from_params_and_beam"], [661, 1, 1, "", "sha256"], [662, 1, 1, "", "tenon_volume_from_params_and_beam"], [663, 1, 1, "", "to_json"], [664, 1, 1, "", "to_jsonstring"], [665, 1, 1, "", "validate_data"]], "compas_timber.fabrication.StepJointNotch": [[667, 1, 1, "", "ToString"], [668, 1, 1, "", "add_mortise"], [669, 1, 1, "", "add_subprocessing"], [670, 1, 1, "", "apply"], [671, 1, 1, "", "copy"], [672, 1, 1, "", "from_json"], [673, 1, 1, "", "from_jsonstring"], [674, 1, 1, "", "from_plane_and_beam"], [675, 1, 1, "", "mortise_volume_from_params_and_beam"], [676, 1, 1, "", "planes_from_params_and_beam"], [677, 1, 1, "", "sha256"], [678, 1, 1, "", "to_json"], [679, 1, 1, "", "to_jsonstring"], [680, 1, 1, "", "validate_data"]], "compas_timber.fabrication.Tenon": [[683, 1, 1, "", "ToString"], [684, 1, 1, "", "add_subprocessing"], [685, 1, 1, "", "apply"], [686, 1, 1, "", "copy"], [687, 1, 1, "", "frame_from_params_and_beam"], [688, 1, 1, "", "from_json"], [689, 1, 1, "", "from_jsonstring"], [690, 1, 1, "", "from_plane_and_beam"], [691, 1, 1, "", "sha256"], [692, 1, 1, "", "to_json"], [693, 1, 1, "", "to_jsonstring"], [694, 1, 1, "", "validate_data"], [695, 1, 1, "", "volume_from_params_and_beam"]], "compas_timber.ghpython": [[697, 2, 1, "", "add_gh_param"], [698, 2, 1, "", "clear_gh_params"], [699, 2, 1, "", "get_leaf_subclasses"], [700, 2, 1, "", "item_input_valid"], [701, 2, 1, "", "list_input_valid"], [702, 2, 1, "", "manage_dynamic_params"], [703, 2, 1, "", "rename_gh_input"]], "compas_timber.model": [[704, 0, 1, "", "TimberModel"]], "compas_timber.model.TimberModel": [[705, 1, 1, "", "ToString"], [706, 1, 1, "", "add_element"], [707, 1, 1, "", "add_elements"], [708, 1, 1, "", "add_group"], [709, 1, 1, "", "add_group_element"], [710, 1, 1, "", "add_interaction"], [711, 1, 1, "", "add_joint"], [712, 1, 1, "", "add_material"], [713, 1, 1, "", "assign_material"], [714, 1, 1, "", "compute_aabb"], [715, 1, 1, "", "compute_obb"], [716, 1, 1, "", "connect_adjacent_walls"], [717, 1, 1, "", "copy"], [718, 1, 1, "", "element_by_guid"], [719, 1, 1, "", "elements"], [720, 1, 1, "", "elements_connected_by"], [721, 1, 1, "", "from_json"], [722, 1, 1, "", "from_jsonstring"], [723, 1, 1, "", "get_elements_in_group"], [724, 1, 1, "", "get_interactions_for_element"], [725, 1, 1, "", "has_element"], [726, 1, 1, "", "has_group"], [727, 1, 1, "", "has_interaction"], [728, 1, 1, "", "has_material"], [729, 1, 1, "", "interactions"], [730, 1, 1, "", "materials"], [731, 1, 1, "", "process_joinery"], [732, 1, 1, "", "remove_element"], [733, 1, 1, "", "remove_interaction"], [734, 1, 1, "", "remove_joint"], [735, 1, 1, "", "rotate"], [736, 1, 1, "", "rotated"], [737, 1, 1, "", "scale"], [738, 1, 1, "", "scaled"], [739, 1, 1, "", "set_topologies"], [740, 1, 1, "", "sha256"], [741, 1, 1, "", "to_json"], [742, 1, 1, "", "to_jsonstring"], [743, 1, 1, "", "transform"], [744, 1, 1, "", "transform_numpy"], [745, 1, 1, "", "transformed"], [746, 1, 1, "", "transformed_numpy"], [747, 1, 1, "", "translate"], [748, 1, 1, "", "translated"], [749, 1, 1, "", "validate_data"]], "compas_timber.planning": [[750, 0, 1, "", "Actor"], [752, 0, 1, "", "BuildingPlan"], [762, 0, 1, "", "BuildingPlanParser"], [765, 0, 1, "", "Instruction"], [775, 0, 1, "", "LinearDimension"], [785, 0, 1, "", "Model3d"], [795, 0, 1, "", "SimpleSequenceGenerator"], [796, 0, 1, "", "Step"], [806, 0, 1, "", "Text3d"]], "compas_timber.planning.Actor": [[751, 1, 1, "", "get_name"]], "compas_timber.planning.BuildingPlan": [[753, 1, 1, "", "ToString"], [754, 1, 1, "", "add_step"], [755, 1, 1, "", "copy"], [756, 1, 1, "", "from_json"], [757, 1, 1, "", "from_jsonstring"], [758, 1, 1, "", "sha256"], [759, 1, 1, "", "to_json"], [760, 1, 1, "", "to_jsonstring"], [761, 1, 1, "", "validate_data"]], "compas_timber.planning.BuildingPlanParser": [[763, 1, 1, "", "parse"], [764, 1, 1, "", "serialize"]], "compas_timber.planning.Instruction": [[766, 1, 1, "", "ToString"], [767, 1, 1, "", "copy"], [768, 1, 1, "", "from_json"], [769, 1, 1, "", "from_jsonstring"], [770, 1, 1, "", "sha256"], [771, 1, 1, "", "to_json"], [772, 1, 1, "", "to_jsonstring"], [773, 1, 1, "", "transform"], [774, 1, 1, "", "validate_data"]], "compas_timber.planning.LinearDimension": [[776, 1, 1, "", "ToString"], [777, 1, 1, "", "copy"], [778, 1, 1, "", "from_json"], [779, 1, 1, "", "from_jsonstring"], [780, 1, 1, "", "sha256"], [781, 1, 1, "", "to_json"], [782, 1, 1, "", "to_jsonstring"], [783, 1, 1, "", "transform"], [784, 1, 1, "", "validate_data"]], "compas_timber.planning.Model3d": [[786, 1, 1, "", "ToString"], [787, 1, 1, "", "copy"], [788, 1, 1, "", "from_json"], [789, 1, 1, "", "from_jsonstring"], [790, 1, 1, "", "sha256"], [791, 1, 1, "", "to_json"], [792, 1, 1, "", "to_jsonstring"], [793, 1, 1, "", "transform"], [794, 1, 1, "", "validate_data"]], "compas_timber.planning.Step": [[797, 1, 1, "", "ToString"], [798, 1, 1, "", "copy"], [799, 1, 1, "", "from_json"], [800, 1, 1, "", "from_jsonstring"], [801, 1, 1, "", "sha256"], [802, 1, 1, "", "to_json"], [803, 1, 1, "", "to_jsonstring"], [804, 1, 1, "", "transform"], [805, 1, 1, "", "validate_data"]], "compas_timber.planning.Text3d": [[807, 1, 1, "", "ToString"], [808, 1, 1, "", "copy"], [809, 1, 1, "", "from_json"], [810, 1, 1, "", "from_jsonstring"], [811, 1, 1, "", "sha256"], [812, 1, 1, "", "to_json"], [813, 1, 1, "", "to_jsonstring"], [814, 1, 1, "", "transform"], [815, 1, 1, "", "validate_data"]], "compas_timber.rhino": [[816, 2, 1, "", "find_neighboring_elements"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:exception"}, "terms": {"": [12, 20, 21, 26, 33, 34, 41, 42, 47, 60, 61, 67, 72, 78, 79, 84, 95, 96, 101, 114, 115, 120, 123, 124, 131, 132, 137, 140, 148, 149, 154, 155, 165, 166, 171, 182, 183, 188, 189, 200, 201, 206, 217, 218, 223, 224, 234, 235, 241, 242, 252, 253, 259, 262, 270, 271, 276, 288, 289, 296, 358, 363, 370, 372, 373, 376, 378, 388, 389, 408, 409, 418, 440, 460, 483, 499, 517, 527, 533, 549, 563, 578, 592, 606, 616, 622, 637, 650, 665, 666, 680, 694, 709, 749, 761, 774, 784, 794, 805, 815, 825, 826, 831, 834], "0": [20, 23, 28, 41, 44, 60, 63, 78, 81, 85, 95, 98, 114, 117, 121, 131, 134, 148, 151, 165, 168, 182, 185, 189, 200, 203, 207, 217, 220, 224, 234, 238, 242, 252, 256, 260, 270, 273, 288, 293, 297, 358, 364, 367, 382, 383, 392, 395, 403, 415, 423, 426, 434, 435, 444, 447, 455, 464, 467, 478, 490, 496, 504, 511, 514, 518, 527, 530, 534, 545, 546, 550, 560, 565, 571, 575, 579, 586, 589, 593, 600, 601, 602, 603, 610, 616, 619, 625, 632, 633, 634, 647, 651, 654, 659, 661, 666, 668, 674, 677, 682, 690, 691, 702, 716, 740, 758, 770, 780, 790, 801, 811, 816, 819, 821, 826, 830, 831], "01": [830, 831], "02": 822, "06": [29, 30, 356], "09": [300, 304, 313, 318, 330, 351, 355], "1": [21, 23, 42, 44, 61, 63, 79, 81, 85, 96, 98, 115, 117, 121, 132, 134, 149, 151, 166, 168, 183, 185, 189, 201, 203, 207, 218, 220, 224, 235, 238, 242, 253, 256, 260, 271, 273, 289, 293, 358, 382, 403, 415, 434, 455, 464, 478, 489, 496, 504, 514, 518, 530, 534, 546, 560, 565, 575, 579, 589, 593, 603, 610, 619, 625, 634, 647, 651, 661, 666, 677, 682, 691, 698, 740, 758, 770, 780, 790, 801, 811, 819, 824, 826, 831, 835], "10": [527, 545, 817, 821], "100": 709, "1000": [518, 534, 610, 651, 654, 666, 668, 682], "100000": [504, 518, 534, 565, 579, 593, 610, 625, 651, 666, 682], "15": [527, 545], "17": 822, "179": [504, 518, 534, 565, 579, 593, 610, 625, 651, 666, 682, 830], "180": [518, 610], "1e": [29, 30, 300, 304, 313, 318, 330, 351, 355, 356], "2": [189, 224, 242, 358, 819, 824, 831, 835], "20": [527, 545, 550, 616, 659, 674, 690], "200": 709, "2020": 822, "2022": 817, "2023": 817, "28": [527, 545, 616, 690], "3": [189, 242, 358, 821, 824, 831, 835], "30": [518, 534], "300": 709, "3000": 709, "35": [518, 534], "3d": [775, 785, 820], "4": [189, 242, 358, 819, 824, 831], "40": [527, 545, 616, 690], "5": [85, 121, 207, 260, 358, 383, 435, 490, 518, 534], "50": [545, 550, 690], "5000": [518, 534, 610, 682, 709], "50000": [504, 579, 593, 625, 651, 666], "5281": 817, "6": [358, 419, 489, 601, 602, 632, 633], "7": 821, "7934267": 817, "80": [527, 545, 616, 690], "89": 593, "9": [504, 518, 534, 565, 579, 593, 610, 625, 651, 666, 682, 830], "99": 831, "A": [16, 28, 31, 37, 56, 74, 91, 108, 127, 138, 144, 161, 178, 189, 195, 213, 230, 242, 248, 266, 283, 297, 300, 304, 305, 313, 318, 330, 351, 355, 358, 361, 372, 373, 389, 391, 409, 419, 443, 463, 484, 487, 500, 681, 704, 706, 712, 723, 724, 728, 731, 817, 822, 826, 827, 831], "AND": 822, "AS": 822, "As": 817, "At": 820, "BE": 822, "BUT": 822, "By": [831, 835], "FOR": 822, "For": [49, 281, 297, 731, 751, 820, 834], "IN": 822, "If": [15, 18, 19, 20, 21, 23, 24, 25, 29, 36, 39, 40, 41, 42, 44, 45, 46, 50, 52, 55, 58, 59, 60, 61, 63, 64, 65, 68, 70, 72, 73, 76, 77, 78, 79, 81, 82, 83, 85, 87, 90, 93, 94, 95, 96, 98, 99, 100, 102, 104, 107, 110, 111, 114, 115, 117, 118, 119, 121, 126, 129, 130, 131, 132, 134, 135, 136, 143, 146, 147, 148, 149, 151, 152, 153, 157, 160, 163, 164, 165, 166, 168, 169, 170, 174, 177, 180, 181, 182, 183, 185, 186, 187, 191, 194, 198, 199, 200, 201, 203, 204, 205, 207, 209, 212, 215, 216, 217, 218, 220, 221, 222, 224, 226, 228, 229, 232, 233, 234, 235, 238, 239, 240, 244, 247, 250, 251, 252, 253, 256, 257, 258, 260, 265, 268, 269, 270, 271, 273, 274, 275, 279, 281, 282, 286, 287, 288, 289, 293, 294, 295, 351, 366, 369, 374, 375, 380, 382, 384, 385, 397, 398, 399, 403, 404, 405, 411, 412, 413, 415, 416, 417, 425, 428, 429, 430, 432, 434, 436, 437, 446, 449, 450, 451, 455, 456, 457, 466, 469, 472, 473, 478, 479, 480, 493, 494, 495, 496, 497, 498, 507, 508, 509, 510, 514, 515, 516, 521, 522, 528, 529, 530, 531, 532, 537, 538, 543, 544, 546, 547, 548, 550, 553, 554, 556, 557, 560, 561, 562, 568, 569, 572, 573, 575, 576, 577, 582, 583, 584, 585, 589, 590, 591, 596, 597, 598, 599, 603, 604, 605, 613, 614, 617, 618, 619, 620, 621, 628, 629, 630, 631, 634, 635, 636, 642, 643, 644, 645, 647, 648, 649, 655, 656, 657, 658, 661, 663, 664, 666, 670, 671, 672, 673, 677, 678, 679, 685, 686, 688, 689, 691, 692, 693, 706, 707, 709, 710, 713, 717, 721, 722, 731, 740, 741, 742, 755, 756, 757, 758, 759, 760, 767, 768, 769, 770, 771, 772, 777, 778, 779, 780, 781, 782, 787, 788, 789, 790, 791, 792, 798, 799, 800, 801, 802, 803, 808, 809, 810, 811, 812, 813, 816, 817, 826, 827, 831, 832], "In": [13, 297, 550, 820, 821], "It": [71, 300, 351, 389, 461, 666, 820, 823, 825, 826, 831, 832, 834], "NO": 822, "NOT": 822, "No": 608, "OF": 822, "OR": 822, "Of": [20, 21, 41, 42, 60, 61, 78, 79, 95, 96, 114, 115, 131, 132, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 270, 271, 288, 289], "One": [49, 751, 796], "THE": 822, "TO": 822, "The": [1, 9, 10, 15, 16, 18, 19, 20, 21, 24, 25, 26, 31, 36, 37, 39, 40, 41, 42, 45, 46, 47, 50, 55, 56, 58, 59, 60, 61, 64, 65, 67, 68, 73, 74, 76, 77, 78, 79, 82, 83, 84, 85, 90, 91, 93, 94, 95, 96, 99, 100, 101, 107, 108, 110, 111, 114, 115, 118, 119, 120, 121, 126, 127, 129, 130, 131, 132, 135, 136, 137, 143, 144, 146, 147, 148, 149, 152, 153, 154, 155, 160, 161, 163, 164, 165, 166, 169, 170, 171, 172, 177, 178, 180, 181, 182, 183, 186, 187, 188, 189, 194, 195, 196, 198, 199, 200, 201, 204, 205, 206, 207, 212, 213, 215, 216, 217, 218, 221, 222, 223, 229, 230, 232, 233, 234, 235, 239, 240, 241, 242, 247, 248, 250, 251, 252, 253, 257, 258, 259, 260, 265, 266, 268, 269, 270, 271, 274, 275, 276, 277, 282, 283, 286, 287, 288, 289, 294, 295, 296, 297, 298, 300, 304, 305, 311, 313, 318, 330, 331, 349, 351, 355, 358, 360, 362, 363, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 392, 393, 395, 397, 398, 399, 404, 405, 406, 407, 408, 409, 411, 412, 413, 416, 417, 418, 419, 421, 422, 423, 424, 426, 428, 429, 430, 432, 435, 436, 437, 438, 439, 440, 444, 445, 447, 449, 450, 451, 456, 457, 458, 459, 460, 464, 465, 467, 469, 472, 473, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 537, 538, 539, 541, 542, 543, 544, 545, 547, 548, 549, 550, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 565, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 609, 610, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 642, 643, 644, 645, 646, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 668, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 682, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 697, 698, 702, 703, 704, 706, 707, 708, 709, 710, 713, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 731, 732, 734, 735, 736, 737, 738, 741, 742, 743, 744, 745, 746, 747, 748, 749, 755, 756, 757, 759, 760, 761, 767, 768, 769, 771, 772, 774, 777, 778, 779, 781, 782, 784, 787, 788, 789, 791, 792, 794, 798, 799, 800, 802, 803, 805, 808, 809, 810, 812, 813, 815, 816, 822, 823, 825, 826, 830, 831, 832, 834, 835], "Then": 823, "There": [319, 818, 825, 831, 835], "These": [409, 825, 831], "To": [22, 43, 821, 823, 824, 832, 835], "WITH": 822, "_": [466, 825], "__from_data__": [26, 47, 67, 84, 101, 120, 137, 154, 171, 188, 206, 223, 241, 259, 276, 296, 388, 408, 418, 440, 460, 483, 499, 517, 533, 549, 563, 578, 592, 606, 622, 637, 650, 665, 680, 694, 749, 761, 774, 784, 794, 805, 815], "__init__": 824, "aabb": [297, 358, 364, 392, 419, 423, 444, 464], "abl": [12, 33, 34, 123, 124, 140, 262], "about": [484, 820], "abov": [822, 831], "absolut": [300, 313, 351], "abstract": [121, 389, 441], "accord": [305, 358, 825], "accross": 646, "acknowledg": 817, "across": 378, "act": 487, "action": 822, "activ": [820, 821, 826, 832, 834], "actor": [796, 820], "actual": [319, 321, 370], "ad": [12, 16, 31, 33, 37, 56, 71, 74, 91, 108, 123, 127, 140, 144, 161, 178, 195, 213, 230, 242, 248, 262, 266, 283, 358, 362, 419, 421, 422, 706, 707, 708, 709, 816, 827, 831], "adapt": [13, 319], "add": [12, 13, 33, 34, 52, 53, 70, 71, 87, 88, 104, 105, 123, 124, 140, 141, 157, 158, 174, 175, 191, 192, 209, 210, 226, 227, 244, 245, 262, 263, 279, 280, 360, 361, 362, 391, 414, 421, 422, 443, 463, 492, 506, 520, 536, 552, 567, 581, 595, 612, 627, 641, 653, 654, 668, 669, 684, 697, 706, 707, 708, 709, 710, 711, 712, 731, 823, 824, 832, 834, 835], "add_beam": 819, "add_el": 709, "add_extens": 71, "add_gh_param": 820, "addit": [28, 31, 708, 823, 825, 826, 830], "addition": 72, "adjac": [16, 37, 56, 74, 91, 108, 127, 144, 161, 178, 195, 213, 230, 248, 266, 283, 716], "adjust": 834, "affect": [12, 33, 34, 123, 124, 140, 262], "after": [62, 71, 80, 97, 116, 133, 150, 167, 184, 202, 219, 236, 254, 272, 292, 376, 507, 521, 537, 553, 568, 582, 596, 613, 628, 642, 655, 670, 685], "against": [26, 47, 67, 84, 101, 120, 137, 154, 171, 188, 206, 223, 241, 259, 276, 296, 388, 408, 418, 440, 460, 483, 499, 517, 533, 549, 563, 578, 592, 606, 622, 637, 650, 665, 680, 694, 749, 761, 774, 784, 794, 805, 815], "aka": 331, "aleksandra": 817, "algorithm": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 297, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 740, 758, 770, 780, 790, 801, 811], "align": [68, 297, 358, 364, 392, 419, 423, 444, 464, 714, 823, 834], "all": [12, 20, 21, 33, 41, 42, 60, 61, 78, 79, 95, 96, 114, 115, 123, 131, 132, 140, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 262, 270, 271, 288, 289, 371, 380, 381, 402, 409, 432, 433, 441, 454, 476, 698, 702, 704, 719, 723, 724, 729, 730, 731, 743, 816, 822, 825, 827, 831, 833], "allow": [16, 37, 56, 74, 85, 91, 108, 121, 127, 144, 161, 178, 195, 207, 213, 230, 248, 260, 266, 283, 305, 306, 319, 321, 371, 704, 796, 827, 831], "along": [155, 172, 189, 207, 224, 242, 260, 358, 363, 376, 377, 378, 518, 527, 545, 610, 616, 690, 831], "alreadi": [300, 313, 351, 706, 709], "also": [358, 817, 820, 823, 825, 826, 831], "alt": 558, "altern": 319, "amount": [297, 360, 371, 816], "an": [10, 15, 16, 18, 19, 24, 25, 26, 28, 36, 37, 39, 40, 45, 46, 47, 50, 55, 56, 58, 59, 64, 65, 67, 68, 73, 74, 76, 77, 82, 83, 84, 85, 90, 91, 93, 94, 99, 100, 101, 102, 107, 108, 110, 111, 118, 119, 120, 121, 126, 127, 129, 130, 135, 136, 137, 138, 143, 144, 146, 147, 152, 153, 154, 155, 160, 161, 163, 164, 169, 170, 171, 172, 177, 178, 180, 181, 186, 187, 188, 189, 194, 195, 198, 199, 204, 205, 206, 207, 212, 213, 215, 216, 221, 222, 223, 224, 229, 230, 232, 233, 239, 240, 241, 242, 247, 248, 250, 251, 257, 258, 259, 260, 265, 266, 268, 269, 274, 275, 276, 277, 282, 283, 286, 287, 294, 295, 296, 358, 369, 374, 375, 384, 385, 388, 389, 397, 398, 399, 404, 405, 408, 409, 411, 412, 413, 416, 417, 418, 419, 428, 429, 430, 436, 437, 440, 441, 449, 450, 451, 456, 457, 460, 461, 469, 472, 473, 479, 480, 483, 484, 486, 487, 489, 493, 494, 495, 497, 498, 499, 501, 502, 508, 509, 510, 512, 515, 516, 517, 522, 528, 529, 531, 532, 533, 538, 543, 544, 545, 547, 548, 549, 554, 556, 557, 561, 562, 563, 569, 572, 573, 576, 577, 578, 583, 584, 585, 590, 591, 592, 597, 598, 599, 604, 605, 606, 614, 617, 618, 620, 621, 622, 629, 630, 631, 635, 636, 637, 643, 644, 645, 648, 649, 650, 656, 657, 658, 663, 664, 665, 671, 672, 673, 678, 679, 680, 686, 688, 689, 690, 692, 693, 694, 706, 709, 710, 711, 713, 717, 721, 722, 727, 731, 732, 741, 742, 749, 750, 755, 756, 757, 759, 760, 761, 767, 768, 769, 771, 772, 774, 777, 778, 779, 781, 782, 784, 787, 788, 789, 791, 792, 794, 798, 799, 800, 802, 803, 805, 808, 809, 810, 812, 813, 815, 817, 818, 820, 821, 822, 823, 825, 826, 831], "analysi": 820, "angl": [102, 189, 196, 504, 518, 523, 527, 534, 539, 545, 550, 565, 579, 593, 610, 616, 625, 682, 690, 735, 736, 830, 831], "angle_1": 504, "angle_2": 504, "ani": [24, 25, 26, 45, 46, 47, 64, 65, 67, 82, 83, 84, 99, 100, 101, 118, 119, 120, 135, 136, 137, 138, 141, 152, 153, 154, 169, 170, 171, 186, 187, 188, 204, 205, 206, 221, 222, 223, 239, 240, 241, 257, 258, 259, 274, 275, 276, 294, 295, 296, 384, 385, 388, 404, 405, 408, 416, 417, 418, 436, 437, 440, 456, 457, 460, 479, 480, 483, 497, 498, 499, 515, 516, 517, 521, 531, 532, 533, 537, 547, 548, 549, 561, 562, 563, 576, 577, 578, 590, 591, 592, 604, 605, 606, 613, 620, 621, 622, 635, 636, 637, 648, 649, 650, 655, 663, 664, 665, 670, 678, 679, 680, 685, 692, 693, 694, 741, 742, 749, 759, 760, 761, 771, 772, 774, 781, 782, 784, 791, 792, 794, 802, 803, 805, 812, 813, 815, 818, 822, 831, 835], "anna": 817, "anoth": [172, 207], "apart": 28, "api": [820, 823], "apolinarska": 817, "append": 824, "appli": [12, 33, 34, 123, 124, 140, 189, 242, 262, 298, 304, 311, 318, 319, 330, 349, 355, 386, 387, 406, 407, 409, 438, 439, 458, 459, 481, 482, 484, 485, 486, 487, 600, 723, 743, 824, 831, 835], "applic": [189, 242, 306, 831, 833], "appropri": 389, "ar": [11, 12, 14, 16, 20, 21, 22, 28, 29, 30, 32, 33, 35, 37, 41, 42, 43, 51, 54, 56, 60, 61, 68, 69, 72, 74, 78, 79, 86, 89, 91, 95, 96, 103, 106, 108, 114, 115, 122, 123, 125, 127, 131, 132, 139, 140, 142, 144, 148, 149, 156, 159, 161, 165, 166, 173, 176, 178, 182, 183, 190, 193, 195, 200, 201, 208, 211, 213, 217, 218, 224, 225, 228, 230, 234, 235, 237, 243, 246, 248, 252, 253, 255, 261, 262, 264, 266, 270, 271, 278, 281, 283, 288, 289, 297, 298, 305, 314, 324, 351, 359, 390, 409, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 682, 683, 690, 705, 710, 713, 753, 766, 776, 786, 796, 797, 807, 818, 824, 825, 826, 829, 830, 831, 832, 834, 835], "argument": [16, 298, 311, 319, 349, 708], "aris": 822, "around": [189, 242, 550, 826, 831], "as_str": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 740, 758, 770, 780, 790, 801, 811], "asap": 29, "assembl": 796, "assembli": [331, 819, 820, 827, 833], "assign": [298, 349, 704, 706, 713, 831, 834], "associ": [10, 22, 43, 50, 68, 85, 102, 121, 138, 155, 172, 189, 207, 224, 242, 260, 277, 796, 822], "assum": 409, "attach": [20, 21, 41, 42, 60, 61, 78, 79, 95, 96, 114, 115, 131, 132, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 270, 271, 288, 289, 298], "attempt": [409, 833], "attr": [487, 708], "attr1nam": 825, "attr1value_attr2nam": 825, "attr2valu": 825, "attribut": [10, 31, 48, 50, 68, 85, 102, 121, 138, 155, 172, 189, 207, 224, 242, 255, 260, 277, 298, 300, 305, 306, 331, 358, 389, 409, 419, 441, 484, 485, 486, 487, 490, 564, 608, 609, 624, 681, 696, 704, 708, 795, 796, 820, 823, 824, 826], "author": [817, 822], "autom": 823, "automat": [52, 53, 70, 87, 88, 104, 105, 157, 158, 174, 175, 189, 191, 192, 209, 210, 226, 227, 242, 244, 245, 263, 279, 280, 518, 527, 534, 545, 610, 616, 682, 690, 696, 831, 834], "avail": 297, "avoid": [22, 43, 364, 367, 392, 395, 423, 444, 447, 464, 467], "awai": 624, "axi": [189, 242, 297, 358, 363, 364, 372, 373, 376, 377, 378, 392, 419, 423, 444, 464, 518, 527, 534, 550, 593, 610, 616, 682, 714, 735, 736, 826, 830, 831, 834], "b": [710, 727, 733], "back": [363, 609], "backend": 820, "bake": 823, "bakewithboxmap": 834, "ball": 10, "ball_diamet": 10, "ballnodejoint": [409, 820], "base": [10, 27, 31, 48, 50, 66, 68, 85, 102, 121, 138, 155, 172, 189, 196, 207, 224, 237, 242, 260, 277, 298, 306, 311, 319, 321, 325, 331, 349, 358, 366, 368, 389, 396, 409, 419, 427, 441, 446, 448, 461, 466, 468, 484, 485, 486, 487, 489, 490, 500, 504, 518, 523, 534, 539, 550, 564, 565, 579, 593, 608, 609, 610, 624, 625, 639, 651, 666, 681, 682, 696, 704, 731, 735, 736, 750, 752, 762, 765, 775, 785, 795, 796, 806, 832, 833, 835], "base_interfac": 10, "basic": 820, "beam": [10, 12, 13, 14, 16, 20, 21, 22, 27, 28, 29, 30, 31, 33, 34, 35, 37, 41, 42, 43, 50, 52, 53, 54, 56, 60, 61, 62, 66, 68, 70, 71, 72, 74, 78, 79, 80, 85, 87, 88, 89, 91, 95, 96, 97, 102, 104, 105, 106, 108, 114, 115, 116, 121, 123, 124, 125, 127, 131, 132, 133, 138, 140, 141, 142, 144, 148, 149, 150, 155, 157, 158, 159, 161, 165, 166, 167, 172, 174, 175, 176, 178, 182, 183, 184, 189, 191, 192, 193, 195, 200, 201, 202, 207, 209, 210, 211, 213, 217, 218, 219, 224, 226, 227, 230, 234, 235, 236, 242, 244, 245, 246, 248, 252, 253, 254, 260, 262, 263, 264, 266, 270, 271, 272, 277, 279, 280, 281, 283, 284, 288, 289, 291, 292, 297, 306, 331, 435, 441, 461, 484, 504, 507, 511, 513, 518, 521, 524, 525, 526, 527, 534, 537, 540, 541, 542, 545, 565, 568, 570, 571, 574, 579, 582, 586, 587, 588, 593, 596, 600, 601, 602, 607, 610, 613, 615, 616, 623, 625, 628, 632, 633, 638, 642, 646, 651, 655, 659, 660, 662, 666, 668, 670, 674, 675, 676, 682, 685, 687, 690, 695, 704, 709, 718, 731, 785, 816, 819, 820, 823, 825, 830, 831, 832, 834, 835], "beam_a": [20, 21, 29, 41, 42, 60, 61, 78, 79, 95, 96, 102, 114, 115, 131, 132, 138, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 270, 271, 288, 289, 290, 709], "beam_a_kei": 704, "beam_b": [20, 21, 29, 41, 42, 60, 61, 78, 79, 95, 96, 102, 114, 115, 131, 132, 138, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 270, 271, 288, 289, 290], "beam_b_kei": 704, "beam_def": 342, "beam_width": [331, 827], "beama": 356, "beamb": 356, "beamdefinit": 331, "beamjoiningerror": [1, 12, 14, 33, 34, 35, 52, 54, 70, 72, 87, 89, 104, 106, 123, 124, 125, 140, 142, 157, 159, 174, 176, 191, 193, 209, 211, 226, 228, 244, 246, 262, 264, 279, 281, 306, 731, 820], "becaus": 831, "been": [16, 37, 56, 71, 74, 91, 108, 127, 144, 161, 178, 195, 213, 230, 248, 266, 283, 706, 796], "befor": [12, 16, 33, 37, 56, 74, 91, 108, 123, 127, 140, 144, 161, 178, 195, 213, 230, 248, 262, 266, 283, 319, 363, 706], "being": 820, "belong": [16, 37, 56, 74, 91, 108, 127, 144, 161, 178, 195, 213, 230, 248, 266, 283], "between": [10, 30, 68, 85, 102, 121, 207, 260, 313, 331, 409, 489, 518, 534, 610, 682, 704, 710, 716, 727, 729, 733, 825, 827, 830, 831, 835], "birdsmouth": 155, "bisector": [102, 831], "bit": 827, "bitmap": 834, "blank": [358, 360, 379, 487, 570, 731, 826], "blank_fram": 487, "blank_length": 487, "blender": 818, "bodi": 461, "bool": [15, 20, 21, 23, 24, 25, 28, 36, 41, 42, 44, 45, 46, 50, 55, 60, 61, 63, 64, 65, 68, 73, 78, 79, 81, 82, 83, 85, 90, 95, 96, 98, 99, 100, 102, 107, 114, 115, 117, 118, 119, 121, 126, 131, 132, 134, 135, 136, 143, 148, 149, 151, 152, 153, 160, 165, 166, 168, 169, 170, 177, 182, 183, 185, 186, 187, 194, 200, 201, 203, 204, 205, 207, 212, 217, 218, 220, 221, 222, 224, 229, 234, 235, 238, 239, 240, 247, 252, 253, 256, 257, 258, 260, 265, 270, 271, 273, 274, 275, 282, 288, 289, 293, 294, 295, 300, 313, 326, 351, 366, 369, 382, 384, 385, 397, 403, 404, 405, 409, 411, 415, 416, 417, 425, 428, 434, 436, 437, 441, 446, 449, 455, 456, 457, 466, 469, 478, 479, 480, 493, 496, 497, 498, 508, 514, 515, 516, 518, 522, 530, 531, 532, 534, 538, 546, 547, 548, 550, 554, 560, 561, 562, 565, 569, 575, 576, 577, 583, 589, 590, 591, 593, 597, 603, 604, 605, 609, 610, 614, 619, 620, 621, 629, 634, 635, 636, 643, 647, 648, 649, 656, 661, 663, 664, 666, 671, 677, 678, 679, 682, 686, 690, 691, 692, 693, 717, 725, 726, 727, 728, 731, 740, 741, 742, 755, 758, 759, 760, 767, 770, 771, 772, 777, 780, 781, 782, 787, 790, 791, 792, 796, 798, 801, 802, 803, 808, 811, 812, 813], "boolean": [409, 823, 827, 830, 832], "both": [53, 88, 105, 158, 175, 192, 210, 227, 242, 245, 263, 280, 710, 713, 830, 831], "bottom": [518, 534, 545, 609, 610, 682, 690, 831], "bound": [297, 358, 364, 367, 392, 395, 419, 423, 426, 444, 447, 464, 467, 714, 715, 816], "box": [297, 358, 364, 367, 392, 395, 419, 423, 426, 444, 447, 464, 467, 487, 675, 714, 715, 796, 816, 823, 826], "bracket": 389, "brep": [366, 419, 425, 446, 466, 471, 507, 521, 525, 537, 541, 553, 568, 574, 582, 596, 601, 602, 613, 623, 628, 632, 633, 642, 655, 662, 670, 685, 695, 820, 834], "btlx": [358, 487, 489, 490, 500, 501, 503, 820, 823], "btlx_2_1_0": 824, "btlx_process": 824, "btlxfromgeometrydefinit": 409, "btlxjoint": 824, "btlxpart": [820, 824], "btlxprocess": [504, 518, 527, 534, 550, 565, 579, 593, 610, 616, 625, 639, 651, 666, 682, 820, 824], "btlxwriter": 820, "build": [752, 762, 763, 764, 795, 796, 821, 835], "building_plan": 764, "buildingplan": [763, 764, 795, 820], "buildingplanpars": 820, "built": [820, 823], "butt": [50, 172, 277, 281, 357, 827], "byte": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 740, 758, 770, 780, 790, 801, 811], "c": [821, 822], "cad": [796, 818], "calcul": [12, 20, 21, 30, 33, 34, 41, 42, 52, 60, 61, 70, 78, 79, 87, 95, 96, 104, 114, 115, 123, 124, 131, 132, 140, 148, 149, 157, 165, 166, 174, 182, 183, 191, 200, 201, 209, 217, 218, 226, 234, 235, 244, 252, 253, 262, 270, 271, 279, 288, 289, 363, 376, 377, 378, 484, 513, 524, 525, 526, 540, 541, 542, 570, 574, 588, 607, 615, 623, 638, 660, 662, 675, 676, 687, 695, 704, 731, 739], "call": [16, 22, 37, 43, 52, 53, 56, 70, 71, 74, 87, 88, 91, 104, 105, 108, 127, 144, 157, 158, 161, 174, 175, 178, 191, 192, 195, 209, 210, 213, 226, 227, 230, 244, 245, 248, 263, 266, 279, 280, 283, 319, 824, 826], "callabl": [502, 723], "can": [26, 47, 67, 68, 84, 101, 120, 137, 138, 154, 171, 188, 189, 206, 223, 241, 259, 276, 296, 304, 318, 330, 355, 388, 408, 409, 418, 440, 441, 460, 483, 484, 499, 517, 533, 545, 549, 558, 563, 578, 592, 606, 622, 637, 650, 665, 680, 690, 694, 706, 749, 752, 761, 774, 784, 794, 796, 805, 815, 818, 823, 824, 826, 831, 835], "cannot": [485, 486, 826, 831], "canva": 831, "care": 835, "casa": 817, "case": [527, 616, 827, 832], "categori": [298, 300, 305, 825, 826, 835], "category_a": 298, "category_b": [298, 305], "categoryrul": [331, 820], "catergory_a": 305, "caus": 558, "caviti": 331, "cd": 821, "center": [20, 21, 41, 42, 60, 61, 78, 79, 95, 96, 114, 115, 131, 132, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 270, 271, 288, 289, 704, 817, 831], "center_of_mass": 704, "centerlin": [20, 21, 41, 42, 60, 61, 78, 79, 95, 96, 102, 112, 114, 115, 131, 132, 148, 149, 155, 165, 166, 182, 183, 189, 200, 201, 217, 218, 224, 234, 235, 242, 252, 253, 270, 271, 288, 289, 313, 331, 358, 370, 372, 373, 823, 825, 826, 834], "centerline_end": 358, "centerline_start": 358, "centr": 831, "centrelin": 826, "chamfer": [682, 690], "chang": [558, 831], "charg": 822, "check": [14, 35, 54, 72, 89, 106, 125, 142, 159, 176, 193, 211, 228, 246, 264, 281, 300, 313, 351, 725, 726, 731, 816, 820], "checkstandardattribut": 825, "chen": 817, "chosen": [20, 21, 41, 42, 60, 61, 78, 79, 95, 96, 114, 115, 131, 132, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 270, 271, 288, 289], "circular": [22, 43], "cite": 820, "cl": [15, 36, 55, 73, 90, 107, 126, 143, 160, 177, 194, 212, 229, 247, 265, 282, 298, 311, 349, 369, 397, 411, 428, 449, 469, 493, 508, 522, 538, 554, 569, 583, 597, 614, 629, 643, 656, 671, 686, 699, 717, 755, 767, 777, 787, 798, 808], "claim": 822, "class": [10, 11, 27, 31, 32, 48, 50, 51, 68, 69, 85, 86, 102, 103, 121, 122, 138, 139, 155, 156, 172, 173, 189, 190, 207, 208, 224, 225, 242, 243, 260, 261, 277, 278, 298, 306, 311, 319, 321, 325, 331, 349, 358, 359, 389, 390, 409, 410, 419, 420, 441, 442, 461, 462, 485, 487, 490, 491, 500, 504, 505, 518, 519, 534, 535, 550, 551, 564, 565, 566, 579, 580, 593, 594, 608, 609, 610, 611, 624, 625, 626, 639, 640, 651, 652, 666, 667, 674, 681, 682, 683, 696, 704, 705, 711, 743, 750, 752, 753, 762, 765, 766, 775, 776, 785, 786, 795, 796, 797, 806, 807, 820, 824], "classmethod": [16, 17, 18, 19, 26, 28, 37, 38, 39, 40, 47, 49, 56, 57, 58, 59, 67, 74, 75, 76, 77, 84, 91, 92, 93, 94, 101, 108, 109, 110, 111, 120, 127, 128, 129, 130, 137, 144, 145, 146, 147, 154, 161, 162, 163, 164, 171, 178, 179, 180, 181, 188, 195, 197, 198, 199, 206, 213, 214, 215, 216, 223, 230, 231, 232, 233, 241, 248, 249, 250, 251, 259, 266, 267, 268, 269, 276, 283, 285, 286, 287, 296, 332, 372, 373, 374, 375, 388, 398, 399, 408, 412, 413, 418, 429, 430, 440, 450, 451, 460, 470, 471, 472, 473, 483, 494, 495, 499, 502, 509, 510, 511, 512, 517, 523, 527, 528, 529, 533, 539, 543, 544, 545, 549, 556, 557, 558, 559, 563, 571, 572, 573, 578, 584, 585, 586, 587, 592, 598, 599, 600, 601, 602, 606, 616, 617, 618, 622, 630, 631, 632, 633, 637, 644, 645, 646, 650, 657, 658, 659, 665, 672, 673, 674, 680, 688, 689, 690, 694, 721, 722, 749, 751, 756, 757, 761, 763, 764, 768, 769, 774, 778, 779, 784, 788, 789, 794, 799, 800, 805, 809, 810, 815], "clean": 831, "clear": [389, 698, 702], "clear_gh_param": 820, "clearli": 409, "click": 831, "clone": 821, "closer": 370, "closest": [20, 21, 41, 42, 60, 61, 78, 79, 95, 96, 114, 115, 131, 132, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 270, 271, 288, 289, 827], "clt": 419, "code": [16, 37, 56, 74, 91, 108, 127, 144, 161, 178, 195, 213, 230, 248, 266, 283, 818, 820], "collect": [752, 816, 832], "collis": [365, 393, 424, 445, 465], "colon": 825, "com": [817, 821, 824], "combin": [224, 831], "comment": 500, "common": 121, "compa": [15, 18, 19, 23, 36, 39, 40, 44, 55, 58, 59, 63, 73, 76, 77, 81, 90, 93, 94, 98, 107, 110, 111, 117, 126, 129, 130, 134, 143, 146, 147, 151, 160, 163, 164, 168, 177, 180, 181, 185, 194, 198, 199, 203, 212, 215, 216, 220, 229, 232, 233, 238, 247, 250, 251, 256, 265, 268, 269, 273, 282, 286, 287, 293, 331, 358, 365, 366, 367, 368, 369, 374, 375, 382, 386, 387, 392, 393, 395, 396, 397, 398, 399, 403, 406, 407, 409, 411, 412, 413, 415, 424, 425, 426, 427, 428, 429, 430, 434, 438, 439, 444, 445, 446, 447, 448, 449, 450, 451, 455, 458, 459, 464, 465, 466, 467, 468, 469, 472, 473, 478, 481, 482, 493, 494, 495, 496, 508, 509, 510, 512, 514, 521, 522, 524, 525, 526, 528, 529, 530, 537, 538, 541, 542, 543, 544, 546, 553, 554, 555, 556, 557, 558, 559, 560, 569, 570, 572, 573, 574, 575, 583, 584, 585, 587, 588, 589, 597, 598, 599, 603, 607, 613, 614, 615, 617, 618, 619, 623, 629, 630, 631, 634, 638, 643, 644, 645, 647, 655, 656, 657, 658, 660, 661, 662, 671, 672, 673, 674, 675, 676, 677, 685, 686, 687, 688, 689, 691, 695, 714, 715, 717, 721, 722, 735, 736, 740, 743, 747, 748, 755, 756, 757, 758, 762, 767, 768, 769, 770, 777, 778, 779, 780, 787, 788, 789, 790, 796, 798, 799, 800, 801, 808, 809, 810, 811, 817, 823, 827, 829, 833], "compact": [24, 25, 45, 46, 64, 65, 82, 83, 99, 100, 118, 119, 135, 136, 152, 153, 169, 170, 186, 187, 204, 205, 221, 222, 239, 240, 257, 258, 274, 275, 294, 295, 384, 385, 404, 405, 416, 417, 436, 437, 456, 457, 479, 480, 497, 498, 515, 516, 531, 532, 547, 548, 561, 562, 576, 577, 590, 591, 604, 605, 620, 621, 635, 636, 648, 649, 663, 664, 678, 679, 692, 693, 741, 742, 759, 760, 771, 772, 781, 782, 791, 792, 802, 803, 812, 813], "compani": 500, "company_nam": 500, "compar": 72, "comparison": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 740, 758, 770, 780, 790, 801, 811], "compas_model": [387, 407, 439, 459, 482, 709, 720, 723, 726, 795], "compas_rhino": 821, "compas_timb": [0, 10, 16, 22, 27, 31, 37, 43, 48, 50, 56, 68, 74, 85, 91, 102, 108, 121, 127, 138, 144, 155, 161, 172, 178, 189, 195, 207, 213, 224, 230, 242, 248, 260, 266, 277, 283, 297, 298, 306, 311, 319, 321, 325, 331, 349, 356, 357, 358, 389, 409, 419, 441, 461, 484, 485, 486, 487, 490, 500, 504, 507, 512, 513, 518, 521, 524, 525, 526, 534, 537, 541, 542, 550, 553, 555, 558, 559, 564, 565, 568, 570, 574, 579, 582, 587, 588, 593, 596, 607, 608, 609, 610, 613, 615, 623, 624, 625, 628, 638, 639, 642, 651, 655, 660, 662, 666, 670, 675, 676, 681, 682, 685, 687, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 709, 750, 752, 762, 765, 775, 785, 795, 796, 806, 816, 817, 820, 821], "compat": [11, 14, 32, 35, 50, 51, 54, 68, 69, 72, 85, 86, 89, 102, 103, 106, 122, 125, 139, 142, 155, 156, 159, 172, 173, 176, 189, 190, 193, 207, 208, 211, 224, 225, 228, 242, 243, 246, 260, 261, 264, 278, 281, 297, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807], "compet": 817, "compil": 821, "complet": [85, 121, 207, 260, 461], "complex": 820, "compli": [14, 35, 54, 89, 106, 125, 142, 159, 176, 193, 211, 246, 264], "complianc": 313, "compon": [319, 321, 697, 698, 700, 701, 702, 703, 821, 825, 826, 827, 829, 830, 832, 835], "componen": 823, "compos": 832, "comput": [23, 29, 30, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 364, 365, 366, 367, 368, 382, 392, 393, 395, 396, 403, 415, 423, 424, 425, 426, 427, 434, 444, 445, 446, 447, 448, 455, 464, 465, 466, 467, 468, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 714, 715, 740, 758, 770, 780, 790, 801, 811], "computation": 832, "concaten": 825, "concept": [818, 823], "concret": [22, 43], "condit": 822, "cone": [518, 527, 534, 545], "cone_angl": [189, 518, 527, 534, 545, 831], "configur": 609, "connect": [0, 10, 11, 16, 22, 27, 31, 32, 37, 43, 48, 50, 51, 56, 68, 69, 74, 85, 86, 91, 102, 103, 108, 121, 122, 127, 138, 139, 144, 155, 156, 161, 172, 173, 178, 189, 190, 195, 207, 208, 213, 224, 225, 230, 242, 243, 248, 260, 261, 266, 277, 278, 283, 297, 349, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 716, 720, 753, 766, 776, 786, 797, 807, 820, 822, 831, 832], "connectionsolv": [739, 820], "consid": [28, 29, 30, 298, 300, 304, 311, 313, 318, 330, 349, 351, 355, 363, 376, 378, 716, 831], "consist": 29, "constant": 349, "construct": [18, 19, 26, 39, 40, 47, 58, 59, 67, 76, 77, 84, 93, 94, 101, 110, 111, 120, 129, 130, 137, 146, 147, 154, 163, 164, 171, 180, 181, 188, 198, 199, 206, 215, 216, 223, 232, 233, 241, 250, 251, 259, 268, 269, 276, 286, 287, 296, 374, 375, 388, 398, 399, 408, 412, 413, 418, 429, 430, 440, 450, 451, 460, 472, 473, 483, 494, 495, 499, 509, 510, 512, 517, 528, 529, 533, 543, 544, 549, 555, 556, 557, 558, 559, 563, 572, 573, 578, 584, 585, 587, 592, 598, 599, 601, 602, 606, 617, 618, 622, 630, 631, 632, 633, 637, 644, 645, 646, 650, 657, 658, 665, 672, 673, 680, 688, 689, 694, 721, 722, 749, 756, 757, 761, 768, 769, 774, 778, 779, 784, 788, 789, 794, 799, 800, 805, 809, 810, 815, 820, 827], "constructor": [16, 319, 558], "contain": [9, 16, 18, 19, 20, 21, 28, 37, 39, 40, 41, 42, 56, 58, 59, 60, 61, 74, 76, 77, 78, 79, 91, 93, 94, 95, 96, 108, 110, 111, 114, 115, 127, 129, 130, 131, 132, 144, 146, 147, 148, 149, 161, 163, 164, 165, 166, 178, 180, 181, 182, 183, 195, 198, 199, 200, 201, 213, 215, 216, 217, 218, 230, 232, 233, 234, 235, 248, 250, 251, 252, 253, 266, 268, 269, 270, 271, 283, 286, 287, 288, 289, 297, 300, 305, 306, 313, 319, 321, 351, 358, 374, 375, 398, 399, 412, 413, 429, 430, 441, 450, 451, 461, 472, 473, 484, 494, 495, 509, 510, 528, 529, 543, 544, 556, 557, 572, 573, 584, 585, 598, 599, 617, 618, 630, 631, 644, 645, 657, 658, 672, 673, 688, 689, 704, 706, 709, 719, 721, 722, 725, 728, 730, 743, 752, 756, 757, 768, 769, 778, 779, 788, 789, 796, 799, 800, 809, 810, 816], "content": 829, "context": 9, "continu": 820, "contract": 822, "contribut": [820, 823], "contributor": 817, "control": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 740, 758, 770, 780, 790, 801, 811], "convent": 826, "convers": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807], "convert": [11, 24, 25, 32, 45, 46, 51, 64, 65, 69, 82, 83, 86, 99, 100, 103, 118, 119, 122, 135, 136, 139, 152, 153, 156, 169, 170, 173, 186, 187, 190, 204, 205, 208, 221, 222, 225, 239, 240, 243, 257, 258, 261, 274, 275, 278, 294, 295, 319, 359, 384, 385, 390, 404, 405, 410, 416, 417, 420, 436, 437, 442, 456, 457, 462, 479, 480, 488, 491, 497, 498, 501, 505, 515, 516, 519, 531, 532, 535, 547, 548, 551, 561, 562, 566, 576, 577, 580, 590, 591, 594, 604, 605, 611, 620, 621, 626, 635, 636, 640, 648, 649, 652, 663, 664, 667, 678, 679, 683, 692, 693, 705, 741, 742, 753, 759, 760, 766, 771, 772, 776, 781, 782, 786, 791, 792, 797, 802, 803, 807, 812, 813], "coordin": [358, 368, 396, 409, 419, 427, 448, 468, 487, 504, 518, 534, 545, 550, 565, 579, 593, 610, 625, 651, 666, 682, 690, 826], "copi": [387, 407, 439, 459, 482, 736, 738, 745, 746, 748, 822], "coplanar": 281, "copy_guid": [15, 36, 55, 73, 90, 107, 126, 143, 160, 177, 194, 212, 229, 247, 265, 282, 369, 397, 411, 428, 449, 469, 493, 508, 522, 538, 554, 569, 583, 597, 614, 629, 643, 656, 671, 686, 717, 755, 767, 777, 787, 798, 808], "copyright": 822, "corner": [487, 831], "correct": [18, 19, 39, 40, 58, 59, 76, 77, 93, 94, 110, 111, 129, 130, 146, 147, 163, 164, 180, 181, 198, 199, 215, 216, 232, 233, 250, 251, 268, 269, 286, 287, 351, 374, 375, 398, 399, 412, 413, 429, 430, 450, 451, 472, 473, 494, 495, 509, 510, 528, 529, 543, 544, 556, 557, 572, 573, 584, 585, 598, 599, 607, 617, 618, 630, 631, 638, 644, 645, 657, 658, 672, 673, 688, 689, 721, 722, 756, 757, 768, 769, 778, 779, 788, 789, 799, 800, 809, 810], "correctli": [470, 607, 638, 825], "correspond": [189, 242, 358, 370, 490, 502, 825, 826, 831, 834], "could": [52, 70, 87, 104, 157, 174, 191, 209, 226, 244, 279, 485, 486, 527, 545, 616, 659, 674, 690, 750], "coupl": 409, "cpython": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807], "crate": 831, "creat": [10, 13, 31, 50, 52, 53, 68, 70, 85, 87, 88, 102, 104, 105, 121, 138, 155, 157, 158, 172, 174, 175, 189, 191, 192, 207, 209, 210, 224, 226, 227, 242, 244, 245, 260, 263, 277, 279, 280, 311, 319, 331, 372, 373, 387, 407, 439, 459, 471, 482, 511, 521, 527, 537, 545, 571, 586, 600, 613, 616, 655, 659, 670, 674, 685, 690, 818, 820, 821, 823, 824, 825, 826, 827, 829, 831, 832, 835], "creategeometri": [827, 832], "creation": [14, 35, 54, 72, 89, 106, 125, 142, 159, 176, 193, 211, 228, 246, 264, 281, 831], "criteria": 825, "cross": [22, 29, 43, 50, 62, 66, 68, 80, 97, 116, 121, 133, 150, 155, 167, 172, 184, 189, 202, 207, 219, 224, 236, 242, 254, 272, 277, 281, 292, 358, 372, 373, 527, 545, 616, 659, 666, 674, 690, 826, 827, 831], "cross_beam": [50, 68, 85, 121, 155, 172, 189, 207, 224, 242, 260, 277, 819], "cross_beam_guid": 242, "current": [15, 36, 55, 73, 90, 107, 126, 143, 160, 177, 194, 212, 229, 247, 265, 282, 369, 397, 411, 428, 449, 469, 493, 508, 522, 538, 554, 569, 583, 597, 614, 629, 643, 656, 671, 686, 717, 755, 767, 777, 787, 798, 808, 820], "curv": 826, "custom": 820, "custom_dimens": 827, "cut": [50, 85, 121, 189, 196, 207, 224, 260, 277, 490, 504, 507, 511, 512, 513, 518, 521, 523, 524, 525, 526, 527, 534, 537, 539, 540, 541, 542, 545, 553, 564, 565, 568, 570, 571, 574, 579, 582, 586, 587, 588, 593, 596, 600, 601, 602, 607, 608, 609, 610, 613, 615, 616, 623, 624, 625, 628, 632, 633, 638, 642, 646, 651, 655, 659, 660, 662, 666, 670, 674, 675, 676, 681, 682, 685, 687, 690, 695, 696, 823, 826, 831, 832], "cut_plane_bia": [85, 121, 207, 260, 831], "cutoff": [102, 831], "cutter": [196, 523, 539], "cylind": [555, 796], "cylindr": 830, "damag": 822, "data": [15, 18, 19, 23, 24, 25, 26, 36, 39, 40, 44, 45, 46, 47, 55, 58, 59, 63, 64, 65, 67, 73, 76, 77, 81, 82, 83, 84, 90, 93, 94, 98, 99, 100, 101, 107, 110, 111, 117, 118, 119, 120, 126, 129, 130, 134, 135, 136, 137, 143, 146, 147, 151, 152, 153, 154, 160, 163, 164, 168, 169, 170, 171, 177, 180, 181, 185, 186, 187, 188, 194, 198, 199, 203, 204, 205, 206, 212, 215, 216, 220, 221, 222, 223, 229, 232, 233, 238, 239, 240, 241, 247, 250, 251, 256, 257, 258, 259, 265, 268, 269, 273, 274, 275, 276, 282, 286, 287, 293, 294, 295, 296, 369, 374, 375, 382, 384, 385, 388, 397, 398, 399, 403, 404, 405, 408, 409, 411, 412, 413, 415, 416, 417, 418, 428, 429, 430, 434, 436, 437, 440, 449, 450, 451, 455, 456, 457, 460, 469, 472, 473, 478, 479, 480, 483, 490, 493, 494, 495, 496, 497, 498, 499, 500, 508, 509, 510, 514, 515, 516, 517, 522, 528, 529, 530, 531, 532, 533, 538, 543, 544, 546, 547, 548, 549, 554, 556, 557, 560, 561, 562, 563, 569, 572, 573, 575, 576, 577, 578, 583, 584, 585, 589, 590, 591, 592, 597, 598, 599, 603, 604, 605, 606, 614, 617, 618, 619, 620, 621, 622, 629, 630, 631, 634, 635, 636, 637, 643, 644, 645, 647, 648, 649, 650, 656, 657, 658, 661, 663, 664, 665, 671, 672, 673, 677, 678, 679, 680, 686, 688, 689, 691, 692, 693, 694, 717, 721, 722, 740, 741, 742, 744, 745, 746, 749, 752, 755, 756, 757, 758, 759, 760, 761, 765, 767, 768, 769, 770, 771, 772, 774, 777, 778, 779, 780, 781, 782, 784, 787, 788, 789, 790, 791, 792, 794, 796, 798, 799, 800, 801, 802, 803, 805, 808, 809, 810, 811, 812, 813, 815, 829, 833], "datastructur": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 365, 382, 393, 403, 415, 424, 425, 434, 445, 446, 455, 465, 466, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 714, 715, 735, 737, 740, 745, 746, 747, 748, 758, 770, 780, 790, 801, 811], "de": [22, 43, 62, 80, 97, 116, 133, 150, 167, 184, 202, 219, 236, 254, 272, 292], "deal": 822, "debug": [306, 484, 827, 832, 833], "debug_geometri": 484, "debug_info": [381, 402, 433, 454, 476, 484], "debuginfo": [827, 832], "debuginfom": 820, "deeper": [85, 121, 207, 260], "default": [11, 15, 32, 36, 50, 51, 55, 69, 73, 85, 86, 90, 103, 107, 121, 122, 126, 139, 143, 156, 160, 173, 177, 190, 194, 207, 208, 212, 225, 229, 237, 243, 247, 255, 260, 261, 265, 278, 282, 300, 313, 331, 351, 359, 369, 372, 373, 390, 397, 410, 411, 419, 420, 428, 442, 449, 462, 469, 491, 493, 500, 505, 508, 511, 519, 522, 527, 535, 538, 545, 550, 551, 554, 566, 569, 571, 580, 583, 586, 593, 594, 597, 600, 601, 602, 611, 614, 616, 625, 626, 629, 632, 633, 640, 643, 652, 656, 659, 667, 671, 674, 683, 686, 690, 698, 702, 705, 716, 717, 731, 735, 736, 737, 738, 753, 755, 766, 767, 776, 777, 786, 787, 797, 798, 807, 808, 820, 826, 827, 832, 834], "defin": [12, 33, 34, 123, 124, 140, 189, 196, 242, 262, 314, 324, 326, 372, 409, 511, 523, 539, 545, 600, 690, 825, 826, 827, 831, 834, 835], "define_dovetail_tool": [545, 690], "definit": [304, 318, 330, 355, 824, 832], "degre": 550, "delai": [319, 321], "delet": [698, 702], "deleteattribut": 825, "demo": 828, "depend": [370, 372, 373, 821, 824, 831], "depth": [50, 155, 172, 189, 224, 237, 242, 277, 518, 527, 534, 545, 550, 579, 593, 600, 610, 616, 625, 646, 651, 666, 682, 690, 819, 831], "depth_limit": 550, "deriv": 824, "describ": [10, 824], "desigen": [29, 30], "design": [0, 297, 298, 306, 311, 319, 321, 325, 331, 349, 356, 357, 817, 820, 823, 825, 826], "design2machin": 824, "desir": 834, "detail": [1, 823], "detect": [27, 832], "detected_topo": 704, "determin": [189, 305, 331, 831], "dev": 821, "develop": [817, 820], "deviat": 834, "dfab": 817, "diamet": [10, 68, 189, 196, 409, 523, 539, 550, 558, 559, 565, 571, 830, 831], "dict": [31, 298, 311, 349, 409, 487, 488, 593, 601, 602, 625, 632, 633, 704, 708, 824], "dictionari": [31, 609], "did": [14, 35, 54, 89, 106, 125, 142, 159, 176, 193, 211, 246, 264], "differ": [16, 704, 762, 818, 824, 827, 831], "differec": 409, "digest": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 740, 758, 770, 780, 790, 801, 811], "digit": 817, "dimens": [68, 72, 281, 358, 377, 775, 826], "direct": [358, 371, 372, 373, 697, 737, 738, 816, 826, 827, 835], "directli": [31, 121, 311, 378, 441, 706, 707, 827, 831], "directrul": 820, "disabl": 832, "displai": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807, 825, 833], "distanc": [28, 29, 30, 298, 300, 304, 311, 313, 318, 330, 349, 351, 355, 518, 534, 600, 610, 682, 716, 827, 832], "distribut": 822, "do": [121, 521, 537, 613, 655, 670, 685, 822, 824], "doblecut": 831, "docstr": 461, "document": [822, 824, 825, 826, 834], "doe": [16, 37, 56, 74, 91, 108, 127, 138, 141, 144, 161, 178, 195, 213, 230, 248, 266, 283, 300, 313, 351, 363, 376, 378, 389, 507, 553, 568, 582, 596, 628, 642, 762, 824, 826], "doi": 817, "done": [20, 21, 41, 42, 60, 61, 78, 79, 95, 96, 114, 115, 131, 132, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 270, 271, 288, 289], "doubl": [224, 277, 504, 511, 512, 651, 666, 681, 831], "doublecut": [820, 830, 831], "dovetail": [189, 196, 518, 523, 524, 525, 527, 534, 539, 540, 541, 545, 690], "dovetail_shap": [189, 831], "dovetailmortis": 820, "dovetailtenon": [527, 690, 820], "dowel": [389, 831], "down": 831, "downstream": [319, 321], "drawn": 826, "drill": [68, 565, 587, 820], "drillhol": [565, 571], "drillhole_diam": [68, 565, 571, 831], "drop": 831, "dure": [22, 23, 43, 44, 63, 71, 81, 98, 117, 134, 151, 168, 185, 189, 203, 220, 238, 256, 273, 293, 306, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 731, 740, 758, 770, 780, 790, 796, 801, 811], "dynam": [827, 831], "e": [22, 29, 43, 511, 527, 545, 571, 586, 600, 616, 659, 674, 690, 818, 825, 834], "each": [10, 20, 21, 31, 41, 42, 60, 61, 78, 79, 95, 96, 114, 115, 131, 132, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 270, 271, 288, 289, 371, 752, 824, 825, 831, 833], "easi": 823, "eclips": 818, "ecosystem": 820, "edg": [331, 358, 518, 527, 534, 545, 564, 610, 616, 646, 682, 690, 710, 827, 831], "edge_stud": [331, 827, 831], "edge_stud_offset": 827, "edgepositiontyp": [565, 820], "edit": 821, "editor": 818, "either": [85, 121, 207, 260, 370, 504, 518, 534, 565, 579, 593, 610, 651, 666, 682, 697, 827], "element": [0, 10, 13, 14, 16, 17, 35, 37, 38, 54, 56, 57, 72, 74, 75, 89, 91, 92, 106, 108, 109, 121, 125, 127, 128, 142, 144, 145, 159, 161, 162, 176, 178, 179, 193, 195, 197, 211, 213, 214, 228, 230, 231, 242, 246, 248, 249, 264, 266, 267, 281, 283, 285, 297, 298, 300, 304, 305, 311, 313, 314, 318, 319, 321, 324, 326, 330, 331, 349, 351, 355, 358, 364, 365, 366, 367, 368, 370, 381, 386, 387, 389, 392, 393, 395, 396, 402, 406, 407, 409, 414, 419, 423, 424, 425, 426, 427, 433, 438, 439, 441, 444, 445, 446, 447, 448, 454, 458, 459, 461, 464, 465, 466, 467, 468, 476, 481, 482, 485, 486, 487, 488, 489, 490, 502, 507, 512, 513, 521, 524, 525, 526, 537, 541, 542, 550, 553, 555, 558, 559, 568, 570, 574, 582, 587, 588, 596, 601, 602, 607, 613, 615, 623, 624, 628, 632, 633, 638, 642, 655, 660, 662, 670, 675, 676, 685, 687, 695, 704, 706, 707, 709, 710, 713, 718, 720, 723, 724, 725, 727, 729, 732, 733, 795, 796, 816, 820, 832], "element_fac": 489, "element_geometri": 486, "element_id": 796, "element_lists_to_intersect": 342, "element_loop": 344, "element_on": 335, "element_two": 335, "elementnod": [706, 707], "elements_held": 796, "encod": 825, "encompass": 820, "encount": 731, "end": [10, 20, 21, 31, 41, 42, 50, 60, 61, 68, 78, 79, 85, 95, 96, 102, 114, 115, 131, 132, 148, 149, 155, 165, 166, 172, 182, 183, 189, 200, 201, 207, 217, 218, 224, 234, 235, 242, 252, 253, 270, 271, 277, 288, 289, 358, 360, 363, 370, 371, 373, 376, 378, 504, 534, 565, 579, 593, 609, 624, 625, 646, 651, 666, 682, 831], "end_point": 373, "endpoint": [370, 373], "enlarg": 297, "ensur": [607, 638], "entail": [820, 825], "entir": 389, "entiti": 820, "entri": 825, "enum": [564, 608, 624, 681, 696, 750], "enumer": 48, "envelop": 461, "environ": [697, 698, 702, 703, 818, 820, 821, 826], "equal": [358, 646], "equival": [527, 616], "error": [0, 1, 306, 308, 309, 310, 364, 367, 392, 395, 423, 444, 447, 464, 467, 484, 485, 486, 553, 731, 820, 825, 827, 832], "essenti": 489, "et": 488, "etc": [358, 419, 785, 818, 820, 826], "eth": [817, 820], "event": 822, "everi": 831, "exactli": 646, "exampl": [22, 23, 43, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 297, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 709, 740, 758, 770, 780, 790, 801, 811, 820, 823, 825, 826, 835], "exceed": [300, 351, 570, 571], "except": [484, 485, 486, 710, 731], "exclud": [24, 25, 45, 46, 64, 65, 82, 83, 99, 100, 118, 119, 135, 136, 152, 153, 169, 170, 186, 187, 204, 205, 221, 222, 239, 240, 257, 258, 274, 275, 294, 295, 384, 385, 404, 405, 416, 417, 436, 437, 456, 457, 479, 480, 497, 498, 515, 516, 531, 532, 547, 548, 561, 562, 576, 577, 590, 591, 604, 605, 620, 621, 635, 636, 648, 649, 663, 664, 678, 679, 692, 693, 741, 742, 759, 760, 771, 772, 781, 782, 791, 792, 802, 803, 812, 813], "execut": [71, 750, 796, 818], "exist": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 654, 667, 668, 683, 705, 709, 726, 753, 766, 776, 786, 797, 807, 824], "expand": 820, "expect": [16, 37, 56, 74, 91, 108, 127, 144, 161, 178, 195, 213, 230, 248, 266, 283, 300, 609], "expected_kei": 609, "expens": 832, "explain": 823, "express": [704, 822], "extend": [50, 360, 371, 731, 831], "extens": [12, 33, 52, 53, 70, 71, 87, 104, 105, 123, 140, 157, 174, 175, 191, 209, 210, 226, 244, 262, 263, 279, 280, 360, 371, 379, 381, 402, 433, 454, 476, 731], "extra": 409, "extract": [826, 833], "extrus": 419, "f": 30, "fabric": [0, 409, 487, 490, 500, 504, 512, 518, 534, 550, 558, 559, 564, 565, 579, 587, 593, 608, 609, 610, 624, 625, 639, 651, 666, 681, 682, 696, 817, 820, 823], "face": [20, 21, 23, 41, 42, 44, 50, 60, 61, 63, 78, 79, 81, 95, 96, 98, 114, 115, 117, 131, 132, 134, 148, 149, 151, 165, 166, 168, 182, 183, 185, 200, 201, 203, 217, 218, 220, 234, 235, 238, 252, 253, 256, 270, 271, 273, 288, 289, 293, 358, 371, 382, 403, 415, 434, 455, 471, 478, 489, 496, 514, 530, 534, 546, 560, 575, 589, 601, 602, 603, 607, 609, 619, 632, 633, 634, 638, 646, 647, 661, 677, 682, 691, 740, 758, 770, 780, 790, 801, 811, 831], "face_index": [20, 21, 41, 42, 60, 61, 78, 79, 95, 96, 114, 115, 131, 132, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 270, 271, 288, 289], "face_limited_back": 609, "face_limited_bottom": 609, "face_limited_end": 609, "face_limited_front": 609, "face_limited_start": 609, "face_limited_top": 609, "factor": [737, 738], "factori": 824, "fail": [521, 537, 613, 655, 670, 685], "fals": [15, 23, 24, 25, 28, 36, 44, 45, 46, 50, 55, 63, 64, 65, 73, 81, 82, 83, 90, 98, 99, 100, 107, 117, 118, 119, 126, 134, 135, 136, 143, 151, 152, 153, 160, 168, 169, 170, 177, 185, 186, 187, 194, 203, 204, 205, 212, 220, 221, 222, 229, 238, 239, 240, 247, 256, 257, 258, 265, 273, 274, 275, 282, 293, 294, 295, 300, 303, 313, 317, 326, 329, 351, 354, 366, 369, 382, 384, 385, 397, 403, 404, 405, 411, 415, 416, 417, 425, 428, 434, 436, 437, 446, 449, 455, 456, 457, 466, 469, 478, 479, 480, 493, 496, 497, 498, 508, 514, 515, 516, 518, 522, 530, 531, 532, 534, 538, 546, 547, 548, 554, 560, 561, 562, 569, 575, 576, 577, 583, 589, 590, 591, 597, 603, 604, 605, 610, 614, 619, 620, 621, 629, 634, 635, 636, 643, 647, 648, 649, 656, 659, 661, 663, 664, 671, 674, 677, 678, 679, 682, 686, 690, 691, 692, 693, 717, 731, 740, 741, 742, 755, 758, 759, 760, 767, 770, 771, 772, 777, 780, 781, 782, 787, 790, 791, 792, 798, 801, 802, 803, 808, 811, 812, 813, 827, 832], "fast": 820, "fasten": [10, 13, 409, 485, 820], "fastenerapplicationerror": [1, 820], "fastenertimberinterfac": [10, 13, 820], "feasibl": 731, "featru": [224, 831], "featur": [12, 13, 31, 33, 34, 53, 71, 88, 105, 123, 124, 138, 140, 141, 158, 175, 189, 192, 196, 210, 224, 227, 242, 245, 262, 263, 280, 306, 319, 358, 361, 362, 366, 380, 381, 391, 402, 409, 414, 421, 422, 425, 432, 433, 443, 446, 454, 463, 466, 476, 484, 486, 504, 507, 518, 521, 523, 534, 537, 539, 553, 565, 568, 579, 582, 593, 596, 601, 602, 610, 613, 625, 628, 632, 633, 642, 646, 651, 655, 666, 670, 682, 685, 731, 820, 823, 826, 827, 831, 832, 835], "feature_error": 306, "feature_geometri": 486, "featureapplicationerror": [1, 306, 507, 521, 537, 553, 568, 582, 596, 613, 628, 642, 655, 670, 685, 820], "featuredefinit": 820, "fibr": [358, 823], "file": [18, 24, 39, 45, 58, 64, 76, 82, 93, 99, 110, 118, 129, 135, 146, 152, 163, 169, 180, 186, 198, 204, 215, 221, 232, 239, 250, 257, 268, 274, 286, 294, 374, 384, 398, 404, 412, 416, 429, 436, 450, 456, 472, 479, 494, 497, 500, 501, 503, 509, 515, 528, 531, 543, 547, 556, 561, 572, 576, 584, 590, 598, 604, 617, 620, 630, 635, 644, 648, 657, 663, 672, 678, 688, 692, 721, 741, 756, 759, 762, 763, 764, 768, 771, 778, 781, 788, 791, 799, 802, 809, 812, 822, 824, 828, 829], "file_nam": 500, "file_path": 503, "filepath": [18, 24, 39, 45, 58, 64, 76, 82, 93, 99, 110, 118, 129, 135, 146, 152, 163, 169, 180, 186, 198, 204, 215, 221, 232, 239, 250, 257, 268, 274, 286, 294, 374, 384, 398, 404, 412, 416, 429, 436, 450, 456, 472, 479, 494, 497, 509, 515, 528, 531, 543, 547, 556, 561, 572, 576, 584, 590, 598, 604, 617, 620, 630, 635, 644, 648, 657, 663, 672, 678, 688, 692, 721, 741, 756, 759, 763, 764, 768, 771, 778, 781, 788, 791, 799, 802, 809, 812], "filter": [723, 825], "filter_": 723, "final": 835, "find": [28, 297, 489, 720, 816, 826, 831], "find_neighboring_el": 820, "first": [29, 30, 85, 102, 138, 155, 189, 224, 242, 260, 298, 305, 370, 504, 512, 710, 727, 731, 830, 831, 835], "fit": [189, 224, 242, 822, 831], "fix": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807], "flag": 565, "flank": [189, 518, 527, 534, 545], "flank_angl": [189, 518, 527, 534, 545], "flip": [66, 68, 85, 121, 207, 260, 558, 831], "flip_lap_sid": [68, 85, 121, 207, 260, 831], "float": [10, 28, 29, 30, 50, 68, 85, 121, 155, 172, 189, 196, 207, 224, 242, 260, 277, 297, 298, 300, 304, 311, 313, 318, 330, 331, 349, 351, 355, 358, 360, 364, 367, 371, 372, 373, 377, 392, 395, 409, 419, 423, 444, 447, 464, 467, 487, 504, 518, 523, 527, 534, 539, 545, 550, 558, 559, 565, 571, 579, 593, 600, 610, 616, 625, 651, 654, 666, 668, 682, 690, 704, 716, 735, 736, 737, 738, 816, 831], "flush": [827, 831], "follow": [1, 363, 376, 378, 409, 822, 823, 824, 826, 831], "fom": 16, "forg": 821, "fork": 821, "form": 461, "format": [23, 24, 25, 44, 45, 46, 63, 64, 65, 81, 82, 83, 98, 99, 100, 117, 118, 119, 134, 135, 136, 151, 152, 153, 168, 169, 170, 185, 186, 187, 203, 204, 205, 220, 221, 222, 238, 239, 240, 256, 257, 258, 273, 274, 275, 293, 294, 295, 382, 384, 385, 403, 404, 405, 415, 416, 417, 434, 436, 437, 455, 456, 457, 478, 479, 480, 488, 496, 497, 498, 500, 514, 515, 516, 530, 531, 532, 546, 547, 548, 560, 561, 562, 575, 576, 577, 589, 590, 591, 603, 604, 605, 619, 620, 621, 634, 635, 636, 647, 648, 649, 661, 663, 664, 677, 678, 679, 691, 692, 693, 740, 741, 742, 758, 759, 760, 762, 770, 771, 772, 780, 781, 782, 790, 791, 792, 801, 802, 803, 811, 812, 813, 825], "found": 824, "foundat": 817, "four": [825, 831], "fragil": 558, "frame": [20, 21, 31, 41, 42, 60, 61, 78, 79, 95, 96, 114, 115, 131, 132, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 270, 271, 288, 289, 331, 358, 363, 371, 376, 378, 389, 409, 419, 487, 489, 511, 524, 526, 527, 537, 540, 542, 545, 570, 586, 587, 615, 616, 659, 674, 685, 687, 690, 709, 796, 819, 820, 823, 826, 827, 835], "frame_depth": [331, 827], "framework": 820, "free": 822, "french": [565, 574], "frenchridgelap": [68, 820], "from": [18, 19, 23, 24, 25, 29, 39, 40, 44, 45, 46, 58, 59, 63, 64, 65, 76, 77, 81, 82, 83, 93, 94, 98, 99, 100, 110, 111, 117, 118, 119, 129, 130, 134, 135, 136, 146, 147, 151, 152, 153, 163, 164, 168, 169, 170, 180, 181, 185, 186, 187, 189, 198, 199, 203, 204, 205, 215, 216, 220, 221, 222, 232, 233, 238, 239, 240, 242, 250, 251, 256, 257, 258, 268, 269, 273, 274, 275, 286, 287, 293, 294, 295, 331, 372, 373, 374, 375, 378, 379, 380, 382, 384, 385, 389, 398, 399, 403, 404, 405, 409, 412, 413, 415, 416, 417, 429, 430, 432, 434, 436, 437, 450, 451, 455, 456, 457, 471, 472, 473, 478, 479, 480, 489, 494, 495, 496, 497, 498, 500, 509, 510, 511, 512, 513, 514, 515, 516, 518, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 540, 541, 542, 543, 544, 545, 546, 547, 548, 556, 557, 558, 559, 560, 561, 562, 570, 571, 572, 573, 574, 575, 576, 577, 584, 585, 586, 587, 588, 589, 590, 591, 598, 599, 600, 601, 602, 603, 604, 605, 607, 610, 615, 616, 617, 618, 619, 620, 621, 623, 630, 631, 632, 633, 634, 635, 636, 638, 644, 645, 647, 648, 649, 657, 658, 659, 660, 661, 662, 663, 664, 672, 673, 674, 675, 676, 677, 678, 679, 682, 687, 688, 689, 690, 691, 692, 693, 695, 698, 702, 709, 721, 722, 732, 734, 740, 741, 742, 756, 757, 758, 759, 760, 762, 763, 768, 769, 770, 771, 772, 778, 779, 780, 781, 782, 788, 789, 790, 791, 792, 799, 800, 801, 802, 803, 809, 810, 811, 812, 813, 818, 820, 822, 823, 824, 825, 826, 827, 829, 830, 831, 833], "from_obj": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 740, 758, 770, 780, 790, 801, 811], "front": [376, 609], "full": 646, "fullnam": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807], "function": [9, 121, 297, 502, 723, 823, 824], "furnish": 822, "furthest": [571, 827], "futur": 820, "g": [22, 29, 43, 818, 825], "gener": [10, 13, 16, 29, 30, 224, 389, 409, 704, 723, 795, 824, 826, 827, 831, 835], "generated_el": 10, "geometr": [409, 820, 824, 830, 832], "geometri": [331, 358, 365, 366, 367, 368, 386, 387, 389, 392, 393, 394, 395, 396, 406, 407, 409, 419, 424, 425, 426, 427, 438, 439, 444, 445, 446, 447, 448, 458, 459, 464, 465, 466, 467, 468, 481, 482, 484, 486, 487, 507, 512, 521, 524, 525, 526, 537, 541, 542, 553, 555, 558, 559, 568, 570, 574, 582, 587, 588, 596, 607, 613, 615, 623, 628, 638, 642, 655, 660, 662, 670, 674, 675, 676, 685, 687, 695, 714, 715, 735, 736, 738, 743, 747, 748, 796, 816, 820, 823, 826, 827, 832, 833, 834, 835], "geometry_typ": 819, "get": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 718, 723, 724, 740, 758, 770, 780, 790, 801, 811, 821, 823, 825], "get_leaf_subclass": 820, "getcustomattribut": 825, "getstandardattribut": 825, "gettyp": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807], "ghenv": [697, 698, 702, 703], "ghpython": [0, 697, 698, 699, 700, 701, 702, 703, 820, 823], "ghuser": 821, "git": 821, "github": [817, 821], "given": [16, 28, 29, 37, 49, 56, 74, 91, 108, 127, 144, 161, 178, 195, 213, 230, 248, 266, 283, 297, 300, 304, 305, 313, 314, 318, 330, 349, 351, 355, 370, 371, 373, 377, 488, 489, 500, 503, 513, 524, 525, 526, 540, 541, 542, 570, 574, 588, 600, 607, 615, 623, 638, 660, 662, 675, 676, 687, 695, 724, 725, 751, 825], "global": [349, 833], "go": 550, "goe": 409, "gonzalo": 817, "gramazio": [500, 817, 820, 822], "gramaziokohl": 817, "grant": 822, "graph": 710, "grasshopp": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 697, 698, 702, 703, 705, 753, 766, 776, 786, 797, 807, 818, 820, 821, 826, 831, 835], "group": [461, 706, 707, 708, 709, 720, 723, 726, 825], "group_nam": [723, 726], "groupnod": [706, 707, 708, 709], "guess_joint_topology_2beam": 820, "guid": [15, 24, 25, 36, 45, 46, 55, 64, 65, 73, 82, 83, 90, 99, 100, 107, 118, 119, 126, 135, 136, 143, 152, 153, 160, 169, 170, 177, 186, 187, 194, 204, 205, 212, 221, 222, 229, 239, 240, 242, 247, 257, 258, 265, 274, 275, 282, 294, 295, 369, 384, 385, 397, 404, 405, 411, 416, 417, 428, 436, 437, 449, 456, 457, 469, 479, 480, 493, 497, 498, 508, 515, 516, 522, 531, 532, 538, 547, 548, 554, 561, 562, 569, 576, 577, 583, 590, 591, 597, 604, 605, 614, 620, 621, 629, 635, 636, 643, 648, 649, 656, 663, 664, 671, 678, 679, 686, 692, 693, 717, 718, 741, 742, 755, 759, 760, 767, 771, 772, 777, 781, 782, 787, 791, 792, 798, 802, 803, 808, 812, 813, 820, 823, 826, 831], "ha": [18, 19, 39, 40, 58, 59, 71, 76, 77, 93, 94, 110, 111, 129, 130, 146, 147, 163, 164, 180, 181, 198, 199, 215, 216, 232, 233, 250, 251, 268, 269, 286, 287, 297, 374, 375, 398, 399, 412, 413, 429, 430, 450, 451, 472, 473, 484, 494, 495, 509, 510, 528, 529, 543, 544, 556, 557, 572, 573, 584, 585, 598, 599, 617, 618, 630, 631, 644, 645, 657, 658, 672, 673, 688, 689, 709, 721, 722, 756, 757, 768, 769, 778, 779, 788, 789, 796, 799, 800, 809, 810, 826, 831, 834], "half": 831, "halflap": 831, "hand": [363, 376, 378], "handl": 820, "handled_pair": [304, 318, 330, 355], "has_group": 709, "hash": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 740, 758, 770, 780, 790, 801, 811], "have": [15, 16, 36, 37, 55, 56, 68, 71, 73, 74, 90, 91, 107, 108, 126, 127, 138, 143, 144, 160, 161, 177, 178, 194, 195, 212, 213, 229, 230, 247, 248, 265, 266, 281, 282, 283, 300, 313, 351, 358, 369, 397, 411, 419, 428, 449, 469, 493, 508, 522, 538, 554, 569, 583, 597, 601, 602, 614, 629, 632, 633, 643, 656, 671, 686, 706, 717, 727, 755, 767, 777, 787, 798, 808, 826], "header": [331, 827, 831], "header_attribut": 824, "heel": [224, 237, 651, 666, 681, 831], "heel_depth": [224, 237, 651, 659, 666, 674, 831], "height": [189, 196, 224, 242, 331, 358, 372, 373, 487, 523, 527, 534, 539, 545, 616, 651, 654, 666, 668, 682, 690, 819, 825, 826, 827, 831], "held": 796, "help": 827, "here": [409, 731, 824, 827, 828, 834], "hereaft": 831, "herebi": 822, "hexadecim": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 740, 758, 770, 780, 790, 801, 811], "hierarchi": [368, 396, 427, 448, 468, 704, 706, 835], "highest": 831, "highli": 831, "holder": 822, "hole": [68, 409, 565, 823, 830, 831], "horizont": [504, 565, 579, 593, 625, 646], "hous": [527, 616], "how": [823, 831, 835], "http": [817, 821, 824], "human": [751, 796], "hybrid": 825, "i": [12, 14, 16, 18, 19, 20, 21, 22, 26, 28, 29, 31, 33, 35, 37, 39, 40, 41, 42, 43, 47, 50, 52, 53, 54, 56, 58, 59, 60, 61, 66, 67, 68, 70, 71, 74, 76, 77, 78, 79, 84, 85, 87, 88, 89, 91, 93, 94, 95, 96, 101, 102, 104, 105, 106, 108, 110, 111, 112, 114, 115, 120, 121, 123, 125, 127, 129, 130, 131, 132, 137, 138, 140, 142, 144, 146, 147, 148, 149, 154, 155, 157, 158, 159, 161, 163, 164, 165, 166, 171, 172, 174, 175, 176, 178, 180, 181, 182, 183, 188, 189, 191, 192, 193, 195, 198, 199, 200, 201, 206, 207, 209, 210, 211, 213, 215, 216, 217, 218, 223, 224, 226, 227, 230, 232, 233, 234, 235, 241, 242, 244, 245, 246, 248, 250, 251, 252, 253, 259, 260, 262, 263, 264, 266, 268, 269, 270, 271, 276, 279, 280, 283, 286, 287, 288, 289, 296, 297, 300, 313, 331, 349, 351, 358, 360, 370, 371, 374, 375, 378, 388, 389, 398, 399, 408, 409, 412, 413, 418, 419, 429, 430, 440, 441, 450, 451, 460, 461, 470, 472, 473, 483, 494, 495, 499, 500, 507, 509, 510, 511, 513, 517, 518, 521, 524, 525, 526, 527, 528, 529, 533, 534, 537, 541, 542, 543, 544, 545, 549, 550, 556, 557, 558, 559, 563, 568, 570, 571, 572, 573, 574, 578, 582, 584, 585, 586, 588, 592, 593, 596, 598, 599, 600, 601, 602, 606, 607, 610, 613, 615, 616, 617, 618, 622, 623, 624, 625, 628, 630, 631, 632, 633, 637, 638, 642, 644, 645, 646, 650, 655, 657, 658, 659, 660, 662, 665, 666, 670, 672, 673, 674, 675, 676, 680, 682, 685, 687, 688, 689, 690, 694, 695, 698, 702, 704, 706, 709, 713, 716, 721, 722, 731, 743, 749, 752, 756, 757, 761, 768, 769, 774, 778, 779, 784, 788, 789, 794, 795, 799, 800, 805, 809, 810, 815, 817, 820, 822, 823, 824, 825, 826, 827, 829, 830, 831, 832, 834, 835], "id": [490, 796, 818], "idea": 823, "identifi": [31, 297, 718], "ignor": [20, 21, 41, 42, 60, 61, 78, 79, 95, 96, 114, 115, 131, 132, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 270, 271, 288, 289], "ignore_end": [20, 21, 41, 42, 60, 61, 78, 79, 95, 96, 114, 115, 131, 132, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 270, 271, 288, 289], "imag": 834, "implement": [12, 14, 22, 31, 33, 35, 43, 54, 89, 106, 123, 125, 140, 142, 159, 176, 193, 211, 246, 262, 264, 389, 762, 816, 820], "implemet": 762, "impli": [822, 832], "implicit": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807], "import": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 709, 731, 740, 758, 770, 780, 790, 801, 811, 824, 835], "inclin": [518, 534, 550, 579, 593, 610, 625, 651, 666, 682], "inclination_1": 504, "inclination_2": 504, "includ": [366, 425, 446, 466, 500, 822, 824], "include_featur": [366, 425, 446, 466], "incorpor": 785, "increment": 796, "indent": [24, 25, 45, 46, 64, 65, 82, 83, 99, 100, 118, 119, 135, 136, 152, 153, 169, 170, 186, 187, 204, 205, 221, 222, 239, 240, 257, 258, 274, 275, 294, 295, 384, 385, 404, 405, 416, 417, 436, 437, 456, 457, 479, 480, 497, 498, 515, 516, 531, 532, 547, 548, 561, 562, 576, 577, 590, 591, 604, 605, 620, 621, 635, 636, 648, 649, 663, 664, 678, 679, 692, 693, 741, 742, 759, 760, 771, 772, 781, 782, 791, 792, 802, 803, 812, 813], "independ": [15, 36, 55, 73, 90, 107, 126, 143, 160, 177, 194, 212, 229, 247, 265, 282, 369, 397, 411, 428, 449, 469, 493, 508, 522, 538, 554, 569, 583, 597, 614, 629, 643, 656, 671, 686, 717, 755, 767, 777, 787, 798, 808], "index": [20, 21, 41, 42, 60, 61, 78, 79, 95, 96, 114, 115, 131, 132, 148, 149, 165, 166, 182, 183, 189, 200, 201, 217, 218, 234, 235, 242, 252, 253, 270, 271, 288, 289, 363, 376, 377, 378, 383, 435, 489, 490, 511, 527, 545, 571, 586, 600, 601, 602, 616, 632, 633, 659, 674, 690, 697, 703, 820, 831], "indic": [372, 373, 484, 565, 825, 826], "inflat": [297, 364, 367, 392, 395, 423, 426, 444, 447, 464, 467, 816], "inflate_bi": [297, 464, 467, 816], "inform": [306, 484, 820, 827, 832, 833, 834], "inherit": [10, 31, 50, 68, 85, 102, 121, 138, 155, 172, 189, 207, 224, 242, 260, 277, 298, 311, 349, 358, 389, 409, 419, 441, 461, 490, 504, 518, 534, 550, 565, 579, 593, 610, 625, 639, 651, 666, 682, 704, 752, 765, 775, 785, 796, 806, 820, 824], "initi": [189, 381, 402, 433, 454, 476], "inner": [20, 21, 41, 42, 60, 61, 78, 79, 95, 96, 114, 115, 131, 132, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 270, 271, 288, 289, 831], "input": [29, 297, 409, 697, 698, 702, 823, 824, 825, 826, 827, 829, 830, 831, 832], "input_nam": [702, 703], "insid": [331, 739, 818], "inspect": [306, 833], "instal": 820, "instanc": [10, 11, 16, 18, 19, 32, 37, 39, 40, 50, 51, 56, 58, 59, 68, 69, 74, 76, 77, 85, 86, 91, 93, 94, 102, 103, 108, 110, 111, 121, 122, 127, 129, 130, 138, 139, 144, 146, 147, 155, 156, 161, 163, 164, 172, 173, 178, 180, 181, 189, 190, 195, 198, 199, 207, 208, 213, 215, 216, 224, 225, 230, 232, 233, 242, 243, 248, 250, 251, 260, 261, 266, 268, 269, 277, 278, 283, 286, 287, 326, 359, 374, 375, 390, 398, 399, 409, 410, 412, 413, 420, 429, 430, 442, 450, 451, 462, 472, 473, 491, 494, 495, 502, 505, 507, 509, 510, 511, 513, 519, 521, 524, 525, 526, 527, 528, 529, 535, 537, 540, 541, 542, 543, 544, 545, 551, 555, 556, 557, 566, 568, 570, 571, 572, 573, 574, 580, 582, 584, 585, 586, 588, 594, 596, 598, 599, 600, 601, 602, 607, 611, 613, 615, 616, 617, 618, 623, 626, 628, 630, 631, 632, 633, 638, 640, 642, 644, 645, 646, 652, 654, 655, 657, 658, 659, 660, 662, 667, 668, 670, 672, 673, 674, 675, 676, 683, 685, 687, 688, 689, 690, 695, 705, 711, 721, 722, 753, 756, 757, 766, 768, 769, 776, 778, 779, 786, 788, 789, 797, 799, 800, 807, 809, 810, 818, 824], "instanti": [31, 71, 121, 441, 824], "instead": [16, 31, 558, 826], "instruct": [731, 750, 752, 775, 785, 796, 806, 820], "int": [49, 189, 224, 242, 358, 360, 363, 376, 377, 378, 379, 383, 419, 435, 490, 504, 511, 527, 534, 545, 565, 571, 579, 586, 593, 600, 601, 602, 616, 632, 633, 651, 659, 666, 674, 682, 690, 698, 702, 703, 710, 751, 796], "integ": [189, 242, 358, 419, 831], "intend": [825, 826], "interact": [31, 704, 710, 720, 724, 727, 733, 818, 835], "interaction_typ": 720, "interest": 370, "interfac": [10, 409, 414, 820], "intern": 625, "internal_angl": 625, "intersect": [27, 28, 29, 30, 112, 298, 300, 304, 311, 313, 318, 330, 349, 351, 355, 507, 553, 568, 582, 596, 628, 642, 646], "introduct": 820, "intuit": 820, "invok": 821, "io": 697, "ironpython": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807], "is_beam": 441, "is_built": 796, "is_group_el": 441, "is_plan": 796, "is_plat": 441, "is_wal": 441, "issu": 558, "item_input_valid": 820, "iter": 731, "itersect": [521, 537, 613, 655, 670, 685], "its": [11, 20, 21, 24, 25, 32, 41, 42, 45, 46, 51, 60, 61, 64, 65, 69, 78, 79, 82, 83, 86, 95, 96, 99, 100, 103, 114, 115, 118, 119, 122, 131, 132, 135, 136, 139, 148, 149, 152, 153, 156, 165, 166, 169, 170, 173, 182, 183, 186, 187, 189, 190, 200, 201, 204, 205, 208, 217, 218, 221, 222, 225, 234, 235, 239, 240, 242, 243, 252, 253, 257, 258, 261, 270, 271, 274, 275, 278, 288, 289, 294, 295, 359, 368, 372, 381, 384, 385, 390, 396, 402, 404, 405, 410, 416, 417, 420, 427, 433, 436, 437, 442, 448, 454, 456, 457, 462, 468, 476, 479, 480, 491, 497, 498, 502, 505, 515, 516, 519, 531, 532, 535, 547, 548, 551, 561, 562, 566, 576, 577, 580, 590, 591, 594, 604, 605, 611, 620, 621, 626, 635, 636, 640, 646, 648, 649, 652, 663, 664, 667, 678, 679, 683, 692, 693, 705, 718, 741, 742, 753, 759, 760, 766, 771, 772, 776, 781, 782, 786, 791, 792, 797, 802, 803, 807, 812, 813, 821, 825, 831], "jack": [331, 579, 587, 827], "jack_stud": [331, 827, 831], "jackraftercut": [820, 830], "jo": [16, 37, 56, 74, 91, 108, 127, 144, 161, 178, 195, 213, 230, 248, 266, 283], "join": [10, 16, 31, 37, 50, 56, 68, 74, 85, 91, 102, 108, 121, 127, 138, 144, 155, 161, 172, 178, 189, 195, 207, 213, 224, 230, 242, 248, 260, 266, 277, 283, 304, 306, 311, 318, 321, 330, 355, 484, 827, 832], "joineri": 731, "joint": [10, 12, 13, 14, 16, 22, 27, 48, 50, 52, 53, 54, 56, 66, 68, 70, 71, 72, 74, 85, 87, 88, 89, 91, 102, 104, 105, 106, 108, 121, 123, 124, 125, 127, 138, 140, 141, 142, 144, 155, 157, 158, 159, 161, 172, 174, 175, 176, 178, 189, 191, 192, 193, 195, 207, 209, 210, 211, 213, 224, 226, 227, 228, 230, 237, 242, 244, 245, 246, 248, 260, 262, 263, 264, 266, 277, 279, 280, 281, 283, 298, 300, 304, 306, 311, 318, 321, 330, 349, 355, 360, 379, 409, 461, 484, 485, 527, 545, 616, 651, 659, 666, 674, 690, 704, 711, 731, 734, 818, 820, 823, 824, 826, 827, 832, 835], "joint_error": 306, "joint_factori": 824, "joint_kei": [360, 379], "joint_overrid": 827, "joint_typ": [298, 311, 349], "jointdefinit": [304, 318, 330, 355, 820], "jointrul": [298, 304, 311, 318, 349, 355, 820, 832], "jointtopologi": [29, 30, 298, 313, 349, 704, 820], "joist": 826, "json": [18, 19, 24, 25, 39, 40, 45, 46, 58, 59, 64, 65, 76, 77, 82, 83, 93, 94, 99, 100, 110, 111, 118, 119, 129, 130, 135, 136, 146, 147, 152, 153, 163, 164, 169, 170, 180, 181, 186, 187, 198, 199, 204, 205, 215, 216, 221, 222, 232, 233, 239, 240, 250, 251, 257, 258, 268, 269, 274, 275, 286, 287, 294, 295, 374, 375, 384, 385, 398, 399, 404, 405, 412, 413, 416, 417, 429, 430, 436, 437, 450, 451, 456, 457, 472, 473, 479, 480, 494, 495, 497, 498, 509, 510, 515, 516, 528, 529, 531, 532, 543, 544, 547, 548, 556, 557, 561, 562, 572, 573, 576, 577, 584, 585, 590, 591, 598, 599, 604, 605, 617, 618, 620, 621, 630, 631, 635, 636, 644, 645, 648, 649, 657, 658, 663, 664, 672, 673, 678, 679, 688, 689, 692, 693, 721, 722, 741, 742, 756, 757, 759, 760, 762, 763, 764, 768, 769, 771, 772, 778, 779, 781, 782, 788, 789, 791, 792, 799, 800, 802, 803, 809, 810, 812, 813], "just": 409, "k": 349, "kasir": 817, "keep": 831, "keep_connect": 702, "kei": [22, 31, 43, 358, 360, 379, 419, 487, 489, 609, 825], "keyword": [298, 311, 349, 708], "kick": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807], "kind": [822, 831], "king": [331, 827], "king_stud": [331, 827, 831], "kohler": [500, 817, 820, 822], "kwarg": [16, 37, 56, 74, 91, 108, 127, 144, 161, 178, 195, 213, 230, 248, 266, 283, 298, 311, 349, 470, 471, 512, 559, 587, 601, 632, 706, 708], "l": [50, 68, 85, 102, 121, 242, 349, 357, 833], "l_default": 357, "lap": [68, 85, 121, 207, 260, 357, 565, 574, 820], "lapjoint": [68, 72, 85, 207, 260, 820], "larger": [358, 826, 831], "later": [189, 825, 826], "latest": 821, "latter": 826, "layer": 834, "lbuttjoint": 820, "lead": 593, "lead_angl": 593, "lead_angle_parallel": 593, "lead_inclin": 593, "lead_inclination_parallel": 593, "lement": [361, 391, 443, 463], "length": [172, 189, 207, 242, 260, 331, 358, 372, 487, 518, 527, 534, 545, 593, 600, 610, 616, 625, 646, 682, 690, 831], "length_limited_bottom": [518, 534, 610, 682, 690], "length_limited_top": [534, 610, 682, 690], "less": [16, 37, 56, 74, 91, 108, 127, 144, 161, 178, 195, 213, 230, 248, 266, 283, 313, 358], "level": 831, "lfrenchridgelapjoint": 820, "li": [826, 834], "liabil": 822, "liabl": 822, "librari": [817, 818, 820, 823], "licens": 820, "lie": [16, 37, 56, 74, 91, 108, 127, 144, 161, 178, 195, 213, 230, 248, 266, 283], "like": [608, 820, 823, 832], "limit": [518, 534, 550, 593, 601, 602, 608, 609, 610, 625, 632, 633, 666, 682, 690, 822], "limitation_top": 518, "limitationtoptyp": 820, "line": [331, 358, 372, 419, 558, 559, 820, 825, 826, 827, 830], "linear": [775, 826], "lineardimens": 820, "linecurv": 826, "link": 319, "lintel_post": 827, "list": [10, 16, 28, 31, 37, 56, 74, 91, 108, 121, 127, 144, 161, 178, 189, 195, 213, 230, 242, 248, 266, 277, 283, 297, 298, 304, 306, 311, 318, 326, 330, 331, 351, 355, 358, 361, 362, 370, 380, 391, 409, 422, 432, 443, 463, 484, 485, 487, 511, 513, 524, 702, 704, 707, 713, 720, 724, 731, 796, 816, 824, 831, 833], "list_input_valid": 820, "liter": [564, 608, 624, 681, 696], "llapjoint": 820, "lmiterjoint": 820, "local": [358, 550, 826], "locat": [358, 796, 826], "log": [49, 751], "long": [358, 371], "long_edg": 358, "lower": 831, "lowest": 831, "ly": 830, "m": 821, "machin": [189, 242, 358, 513, 524, 525, 526, 540, 541, 542, 570, 574, 588, 593, 601, 602, 607, 609, 615, 623, 625, 632, 633, 638, 660, 662, 675, 676, 687, 695, 824, 829], "machining_limit": [593, 601, 602, 625, 632, 633], "machininglimit": 820, "made": [68, 189, 224, 242, 504, 518, 534, 558, 559, 565, 579, 593, 610, 625, 651, 666, 682, 831], "mai": [1, 825, 832], "main": [10, 22, 29, 43, 50, 62, 66, 68, 80, 97, 116, 121, 133, 150, 155, 167, 172, 184, 189, 202, 207, 219, 224, 236, 242, 254, 272, 277, 292, 545, 616, 659, 674, 690, 831], "main_beam": [50, 68, 85, 121, 155, 172, 189, 207, 224, 242, 260, 277, 600, 819], "main_beam_guid": 242, "maintain": 820, "major": [358, 826], "make": [11, 15, 32, 36, 51, 55, 69, 73, 86, 90, 103, 107, 122, 126, 139, 143, 156, 160, 173, 177, 190, 194, 208, 212, 225, 229, 243, 247, 261, 265, 278, 282, 359, 369, 390, 397, 409, 410, 411, 420, 428, 442, 449, 462, 469, 470, 487, 491, 493, 505, 508, 519, 522, 535, 538, 551, 554, 558, 566, 569, 580, 583, 594, 597, 611, 614, 626, 629, 640, 643, 646, 652, 656, 667, 671, 683, 686, 705, 717, 753, 755, 766, 767, 776, 777, 786, 787, 797, 798, 807, 808], "manage_dynamic_param": 820, "mani": [817, 818, 820], "map": [31, 823, 834], "mapsiz": 834, "margin": [518, 534, 610, 682], "mass": 704, "match": [72, 351, 489, 824, 831], "materi": [358, 419, 706, 712, 713, 728, 826, 834], "mathemat": [29, 30], "max": 832, "max_dist": [28, 29, 30, 298, 300, 304, 311, 313, 318, 330, 349, 351, 355, 356, 716], "maxdist": 832, "maximum": [29, 30, 298, 300, 304, 311, 313, 318, 330, 349, 351, 355, 716], "mayb": 709, "meant": 9, "measur": 377, "meet": 831, "merchant": 822, "merg": 822, "mesh": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 365, 382, 393, 403, 415, 424, 425, 434, 445, 446, 455, 465, 466, 478, 496, 514, 530, 546, 560, 575, 589, 601, 602, 603, 619, 632, 633, 634, 647, 661, 677, 691, 740, 758, 770, 780, 790, 801, 811, 819], "messag": [485, 486], "method": [10, 11, 16, 22, 27, 29, 31, 32, 37, 43, 48, 50, 51, 52, 53, 56, 68, 69, 70, 71, 72, 74, 85, 86, 87, 88, 91, 102, 103, 104, 105, 108, 121, 122, 127, 138, 139, 144, 155, 156, 157, 158, 161, 172, 173, 174, 175, 178, 189, 190, 191, 192, 195, 207, 208, 209, 210, 213, 224, 225, 226, 227, 230, 242, 243, 244, 245, 248, 260, 261, 263, 266, 277, 278, 279, 280, 281, 283, 298, 306, 311, 319, 321, 325, 331, 349, 358, 359, 363, 376, 378, 389, 390, 409, 410, 419, 420, 441, 442, 461, 462, 487, 490, 491, 500, 504, 505, 518, 519, 534, 535, 545, 550, 551, 565, 566, 579, 580, 593, 594, 600, 610, 611, 625, 626, 639, 640, 651, 652, 666, 667, 682, 683, 690, 704, 705, 731, 750, 752, 753, 762, 765, 766, 775, 776, 785, 786, 796, 797, 806, 807, 820, 824], "metric": 371, "middl": [358, 831], "midpoint": 358, "might": [823, 831], "mill": [50, 155, 172, 277, 521, 537, 613, 655, 670, 685, 831], "mill_depth": [50, 155, 172, 277, 831], "mind": 824, "minim": [24, 25, 45, 46, 64, 65, 82, 83, 99, 100, 118, 119, 135, 136, 152, 153, 169, 170, 186, 187, 204, 205, 221, 222, 239, 240, 257, 258, 274, 275, 294, 295, 384, 385, 404, 405, 409, 416, 417, 436, 437, 456, 457, 479, 480, 497, 498, 515, 516, 531, 532, 547, 548, 561, 562, 576, 577, 590, 591, 604, 605, 620, 621, 635, 636, 648, 649, 663, 664, 678, 679, 692, 693, 741, 742, 759, 760, 771, 772, 781, 782, 791, 792, 802, 803, 812, 813], "minimum": 371, "misc": 817, "miss": 825, "mit": 822, "miter": [102, 112, 277, 357], "mm": 550, "mode": 821, "model": [0, 10, 16, 22, 37, 43, 50, 56, 62, 68, 71, 74, 80, 85, 91, 97, 102, 108, 116, 121, 127, 133, 138, 144, 150, 155, 161, 167, 172, 178, 184, 189, 195, 202, 207, 213, 219, 224, 230, 236, 242, 248, 254, 260, 266, 272, 277, 283, 292, 331, 357, 358, 368, 394, 396, 409, 419, 427, 448, 468, 500, 501, 503, 704, 706, 707, 708, 709, 710, 711, 712, 713, 716, 719, 725, 726, 728, 729, 730, 731, 732, 734, 739, 743, 750, 785, 795, 820, 823, 826, 829, 830, 835], "model3d": 820, "model_max_dist": [300, 313, 351], "model_to_xml": 503, "modifi": [486, 743, 822], "modify_cross": [50, 831], "modul": [1, 9, 820, 824], "more": [224, 362, 409, 422, 484, 820, 823, 824, 826, 831], "mortis": [224, 242, 518, 524, 525, 527, 666, 668, 675, 820], "mortise_height": [666, 668], "mortise_width": [666, 668], "most": [20, 21, 41, 42, 60, 61, 78, 79, 95, 96, 114, 115, 131, 132, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 270, 271, 288, 289], "move": 409, "multipl": [10, 311, 707, 818, 824], "must": [331, 504, 518, 534, 565, 579, 593, 601, 602, 610, 632, 633, 646, 651, 666, 682, 731, 827, 830], "myenvnam": 821, "n": 821, "name": [319, 490, 500, 697, 700, 701, 702, 703, 708, 709, 723, 726, 824, 825, 833], "nation": 817, "nativ": [24, 25, 45, 46, 64, 65, 82, 83, 99, 100, 118, 119, 135, 136, 152, 153, 169, 170, 186, 187, 204, 205, 221, 222, 239, 240, 257, 258, 274, 275, 294, 295, 384, 385, 404, 405, 416, 417, 436, 437, 456, 457, 479, 480, 497, 498, 515, 516, 531, 532, 547, 548, 561, 562, 576, 577, 590, 591, 604, 605, 620, 621, 635, 636, 648, 649, 663, 664, 678, 679, 692, 693, 741, 742, 759, 760, 771, 772, 781, 782, 791, 792, 802, 803, 812, 813], "nccr": 817, "necessari": [52, 70, 71, 87, 104, 157, 174, 191, 209, 226, 244, 279, 821, 824], "need": [29, 319, 409, 824, 825, 835], "neighbor": [28, 297, 816], "neightbor": [28, 816], "neither": 713, "nest": [492, 506, 520, 536, 552, 567, 581, 595, 612, 627, 641, 653, 669, 684], "net": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807], "new": [16, 37, 56, 74, 91, 108, 127, 144, 161, 178, 195, 213, 230, 248, 266, 283, 703, 821, 824, 826], "newlin": [24, 25, 45, 46, 64, 65, 82, 83, 99, 100, 118, 119, 135, 136, 152, 153, 169, 170, 186, 187, 204, 205, 221, 222, 239, 240, 257, 258, 274, 275, 294, 295, 384, 385, 404, 405, 416, 417, 436, 437, 456, 457, 479, 480, 497, 498, 515, 516, 531, 532, 547, 548, 561, 562, 576, 577, 590, 591, 604, 605, 620, 621, 635, 636, 648, 649, 663, 664, 678, 679, 692, 693, 741, 742, 759, 760, 771, 772, 781, 782, 791, 792, 802, 803, 812, 813], "next": 376, "node": [10, 706, 707, 708, 709], "non": 28, "none": [15, 29, 30, 36, 55, 73, 90, 107, 126, 143, 160, 177, 194, 212, 224, 229, 237, 247, 265, 282, 304, 318, 330, 355, 360, 361, 369, 372, 373, 379, 380, 386, 391, 397, 406, 409, 411, 419, 428, 432, 438, 443, 449, 458, 463, 469, 470, 481, 493, 500, 508, 511, 522, 538, 554, 569, 583, 593, 597, 601, 602, 614, 625, 629, 632, 633, 643, 656, 671, 686, 697, 698, 702, 703, 706, 707, 708, 709, 710, 712, 713, 716, 717, 723, 732, 733, 735, 736, 737, 738, 743, 744, 747, 755, 767, 777, 787, 798, 808, 826, 831], "noninfring": 822, "normal": [20, 21, 41, 42, 60, 61, 78, 79, 95, 96, 114, 115, 131, 132, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 270, 271, 288, 289, 331, 358, 377, 470, 489, 545, 690], "notch": [189, 224, 666, 831], "notch_limit": [666, 674], "notch_width": [666, 674], "note": [12, 33, 123, 140, 262, 297, 706, 817], "notic": 822, "now": 831, "null": 138, "nulljoint": 820, "number": [698, 702, 827, 835], "obb": [367, 395, 426, 447, 467], "obj": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 740, 758, 770, 780, 790, 796, 801, 811], "object": [11, 15, 16, 18, 19, 22, 24, 25, 26, 27, 28, 32, 36, 37, 39, 40, 43, 45, 46, 47, 48, 51, 55, 56, 58, 59, 64, 65, 67, 69, 73, 74, 76, 77, 82, 83, 84, 86, 90, 91, 93, 94, 99, 100, 101, 103, 107, 108, 110, 111, 118, 119, 120, 122, 126, 127, 129, 130, 135, 136, 137, 139, 143, 144, 146, 147, 152, 153, 154, 156, 160, 161, 163, 164, 169, 170, 171, 173, 177, 178, 180, 181, 186, 187, 188, 190, 194, 195, 198, 199, 204, 205, 206, 208, 212, 213, 215, 216, 221, 222, 223, 225, 229, 230, 232, 233, 239, 240, 241, 243, 247, 248, 250, 251, 257, 258, 259, 261, 265, 266, 268, 269, 274, 275, 276, 278, 282, 283, 286, 287, 294, 295, 296, 297, 306, 319, 321, 325, 331, 359, 369, 374, 375, 384, 385, 388, 390, 397, 398, 399, 404, 405, 408, 410, 411, 412, 413, 416, 417, 418, 420, 428, 429, 430, 436, 437, 440, 442, 449, 450, 451, 456, 457, 460, 462, 469, 472, 473, 479, 480, 483, 487, 491, 493, 494, 495, 497, 498, 499, 500, 501, 503, 505, 508, 509, 510, 515, 516, 517, 519, 522, 528, 529, 531, 532, 533, 535, 538, 543, 544, 547, 548, 549, 551, 554, 555, 556, 557, 561, 562, 563, 564, 566, 569, 572, 573, 576, 577, 578, 580, 583, 584, 585, 590, 591, 592, 594, 597, 598, 599, 604, 605, 606, 608, 609, 611, 614, 617, 618, 620, 621, 622, 624, 626, 629, 630, 631, 635, 636, 637, 640, 643, 644, 645, 648, 649, 650, 652, 656, 657, 658, 663, 664, 665, 667, 671, 672, 673, 678, 679, 680, 681, 683, 686, 688, 689, 692, 693, 694, 696, 697, 698, 702, 703, 704, 705, 710, 711, 717, 721, 722, 734, 741, 742, 749, 750, 753, 755, 756, 757, 759, 760, 761, 762, 766, 767, 768, 769, 771, 772, 774, 776, 777, 778, 779, 781, 782, 784, 786, 787, 788, 789, 791, 792, 794, 795, 797, 798, 799, 800, 802, 803, 805, 807, 808, 809, 810, 812, 813, 815, 820, 825, 826, 827, 832, 834], "obtain": 822, "occ": 820, "occur": [306, 484, 731, 833], "offset": [364, 367, 392, 395, 423, 444, 447, 464, 467, 527, 545, 616, 690, 827], "often": 461, "onc": [358, 419, 826], "one": [20, 21, 41, 42, 60, 61, 72, 78, 79, 85, 95, 96, 114, 115, 121, 131, 132, 148, 149, 155, 165, 166, 182, 183, 189, 200, 201, 207, 217, 218, 224, 234, 235, 242, 252, 253, 260, 270, 271, 288, 289, 305, 362, 422, 489, 646, 710, 713, 795, 796, 824, 826, 831, 833], "onli": [12, 14, 22, 33, 35, 43, 54, 68, 89, 106, 123, 125, 140, 142, 159, 176, 193, 211, 246, 262, 264, 300, 313, 351, 366, 425, 446, 466, 731, 825], "onto": 827, "open": [470, 817, 820], "opencascad": 820, "oper": [830, 832], "oppedg": [564, 565], "oppos": 625, "opposit": [50, 378, 564, 831], "option": [12, 14, 15, 20, 21, 23, 24, 25, 28, 29, 30, 33, 35, 36, 41, 42, 44, 45, 46, 54, 55, 60, 61, 63, 64, 65, 73, 78, 79, 81, 82, 83, 89, 90, 95, 96, 98, 99, 100, 102, 106, 107, 114, 115, 117, 118, 119, 123, 125, 126, 131, 132, 134, 135, 136, 140, 142, 143, 148, 149, 151, 152, 153, 159, 160, 165, 166, 168, 169, 170, 176, 177, 182, 183, 185, 186, 187, 189, 193, 194, 200, 201, 203, 204, 205, 211, 212, 217, 218, 220, 221, 222, 229, 234, 235, 238, 239, 240, 246, 247, 252, 253, 256, 257, 258, 262, 264, 265, 270, 271, 273, 274, 275, 282, 288, 289, 293, 294, 295, 297, 298, 300, 304, 311, 313, 318, 330, 331, 349, 351, 355, 358, 364, 366, 369, 382, 384, 385, 392, 397, 403, 404, 405, 409, 411, 415, 416, 417, 419, 423, 425, 428, 434, 436, 437, 444, 446, 449, 455, 456, 457, 464, 466, 469, 478, 479, 480, 493, 496, 497, 498, 500, 508, 511, 514, 515, 516, 522, 527, 530, 531, 532, 538, 545, 546, 547, 548, 554, 560, 561, 562, 569, 571, 575, 576, 577, 583, 586, 589, 590, 591, 593, 597, 600, 601, 602, 603, 604, 605, 614, 616, 619, 620, 621, 625, 629, 632, 633, 634, 635, 636, 643, 647, 648, 649, 656, 659, 661, 663, 664, 671, 674, 677, 678, 679, 686, 690, 691, 692, 693, 698, 702, 706, 707, 708, 709, 710, 713, 716, 717, 723, 731, 733, 735, 736, 737, 738, 740, 741, 742, 755, 758, 759, 760, 767, 770, 771, 772, 777, 780, 781, 782, 787, 790, 791, 792, 798, 801, 802, 803, 808, 811, 812, 813, 826, 835], "order": [29, 297, 305, 319, 351, 795], "orient": [331, 367, 372, 373, 395, 426, 447, 467, 470, 504, 534, 565, 579, 593, 607, 624, 638, 646, 651, 666, 682, 715, 834], "orientationtyp": [504, 534, 565, 579, 593, 651, 666, 682, 820], "origin": [15, 36, 55, 73, 90, 107, 126, 143, 160, 177, 194, 212, 229, 247, 265, 282, 358, 369, 397, 411, 428, 449, 469, 493, 508, 522, 538, 554, 569, 583, 597, 614, 629, 643, 656, 671, 686, 717, 735, 736, 755, 767, 777, 787, 798, 808, 826, 834], "orthogon": [20, 41, 60, 78, 95, 114, 131, 148, 165, 182, 200, 217, 234, 252, 270, 288], "other": [11, 20, 21, 32, 41, 42, 51, 60, 61, 68, 69, 78, 79, 85, 86, 95, 96, 103, 114, 115, 121, 122, 131, 132, 139, 148, 149, 155, 156, 165, 166, 173, 182, 183, 189, 190, 200, 201, 207, 208, 217, 218, 224, 225, 234, 235, 242, 243, 252, 253, 260, 261, 270, 271, 278, 288, 289, 323, 359, 390, 410, 420, 441, 442, 461, 462, 491, 505, 519, 535, 551, 566, 571, 580, 594, 611, 626, 640, 652, 667, 683, 705, 709, 753, 766, 776, 786, 797, 807, 817, 822, 831, 835], "other_beam": 571, "otherwis": [29, 50, 300, 313, 326, 351, 550, 822, 826], "out": 822, "outer": 831, "outlin": [409, 419, 425], "outline_point": 409, "output": [11, 24, 25, 29, 32, 45, 46, 51, 64, 65, 69, 82, 83, 86, 99, 100, 103, 118, 119, 122, 135, 136, 139, 152, 153, 156, 169, 170, 173, 186, 187, 190, 204, 205, 208, 221, 222, 225, 239, 240, 243, 257, 258, 261, 274, 275, 278, 294, 295, 359, 384, 385, 390, 404, 405, 410, 416, 417, 420, 436, 437, 442, 456, 457, 462, 479, 480, 491, 497, 498, 505, 515, 516, 519, 531, 532, 535, 547, 548, 551, 561, 562, 566, 576, 577, 580, 590, 591, 594, 604, 605, 611, 620, 621, 626, 635, 636, 640, 648, 649, 652, 663, 664, 667, 678, 679, 683, 692, 693, 697, 705, 741, 742, 753, 759, 760, 766, 771, 772, 776, 781, 782, 786, 791, 792, 797, 802, 803, 807, 812, 813, 826, 827, 829, 830, 832], "over": 409, "overal": 823, "overlai": 806, "overlap": 831, "overrid": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 349, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807, 827], "overwrit": [831, 835], "own": [762, 831], "packag": [820, 821, 824], "pair": [28, 29, 297, 816, 825], "panel": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 331, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807], "panel_height": 331, "panel_length": 331, "parallel": [377, 593, 600, 646, 796, 826, 831], "param": [700, 701], "paramet": [10, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 107, 108, 110, 111, 114, 115, 117, 118, 119, 120, 121, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 160, 161, 163, 164, 165, 166, 168, 169, 170, 171, 172, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 247, 248, 250, 251, 252, 253, 256, 257, 258, 259, 260, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 282, 283, 286, 287, 288, 289, 293, 294, 295, 296, 297, 298, 300, 304, 305, 311, 313, 318, 326, 330, 331, 349, 351, 355, 358, 361, 362, 363, 364, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 395, 397, 398, 399, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 425, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 443, 444, 446, 447, 449, 450, 451, 455, 456, 457, 458, 459, 460, 463, 464, 466, 467, 469, 472, 473, 478, 479, 480, 481, 482, 483, 487, 488, 489, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 698, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 731, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 755, 756, 757, 758, 759, 760, 761, 763, 764, 767, 768, 769, 770, 771, 772, 774, 777, 778, 779, 780, 781, 782, 784, 787, 788, 789, 790, 791, 792, 794, 795, 798, 799, 800, 801, 802, 803, 805, 808, 809, 810, 811, 812, 813, 815, 816, 824, 825, 834], "parametr": [358, 383, 435, 504, 518, 534, 545, 565, 579, 593, 610, 625, 651, 666, 682, 690, 820], "parent": [487, 706, 707, 708, 709], "pars": 762, "part": [22, 43, 487, 570, 571, 706, 713, 816, 820, 824, 826, 830], "particular": 822, "pass": [16, 30, 298, 311, 349, 371], "path": [18, 24, 39, 45, 58, 64, 76, 82, 93, 99, 110, 118, 129, 135, 146, 152, 163, 169, 180, 186, 198, 204, 215, 221, 232, 239, 250, 257, 268, 274, 286, 294, 374, 384, 398, 404, 412, 416, 429, 436, 450, 456, 472, 479, 494, 497, 500, 503, 509, 515, 528, 531, 543, 547, 556, 561, 572, 576, 584, 590, 598, 604, 617, 620, 630, 635, 644, 648, 657, 663, 672, 678, 688, 692, 721, 741, 756, 759, 763, 764, 768, 771, 778, 781, 788, 791, 799, 802, 809, 812, 829], "pdf": 824, "per": 795, "perhap": 409, "permanent_param_count": [698, 702], "permiss": 822, "permit": 822, "perpendicular": [102, 112, 377, 409, 826], "person": 822, "pip": 821, "place": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 743, 753, 766, 776, 786, 797, 807, 831], "plan": [0, 750, 752, 762, 763, 764, 765, 775, 785, 795, 796, 806, 820], "plana": 674, "planar": [331, 383, 435, 471, 823, 827, 831], "plane": [50, 102, 112, 371, 507, 511, 512, 513, 521, 527, 545, 553, 568, 571, 582, 586, 587, 588, 596, 600, 613, 616, 628, 642, 646, 655, 659, 660, 670, 674, 676, 687, 690, 826, 830, 831, 834], "plane_a": [512, 830], "plane_b": [512, 830], "plate": [331, 409, 441, 628, 632, 633, 638, 704, 820, 827, 832], "pleas": [10, 50, 68, 85, 102, 121, 138, 155, 172, 189, 207, 224, 242, 260, 277, 817], "pln": 371, "plug": 820, "pluggabl": 297, "plugin": [297, 820], "plywood": 419, "pocket": [50, 155, 172, 277, 518, 600, 608, 820, 831], "point": [112, 358, 364, 367, 370, 373, 392, 395, 409, 423, 444, 447, 464, 467, 488, 518, 534, 550, 558, 610, 682, 704, 735, 736, 820, 831, 834], "point_end": 373, "point_start": 373, "polyhedron": [601, 602, 607, 632, 633, 638], "polylin": [343, 409, 419, 470], "portion": 822, "posit": [189, 242, 358, 368, 396, 427, 448, 468, 487, 564, 565, 830, 831], "possibl": [48, 319, 825], "post": 331, "potenti": 30, "prefabr": 461, "prehap": 409, "presenc": [651, 666], "present": [818, 831], "pretti": [24, 25, 45, 46, 64, 65, 82, 83, 99, 100, 118, 119, 135, 136, 152, 153, 169, 170, 186, 187, 204, 205, 221, 222, 239, 240, 257, 258, 274, 275, 294, 295, 384, 385, 404, 405, 416, 417, 436, 437, 456, 457, 479, 480, 497, 498, 515, 516, 531, 532, 547, 548, 561, 562, 576, 577, 590, 591, 604, 605, 620, 621, 635, 636, 648, 649, 663, 664, 678, 679, 692, 693, 741, 742, 759, 760, 771, 772, 781, 782, 791, 792, 802, 803, 812, 813], "prevent": 831, "preview": 833, "previou": 363, "princip": 571, "print": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807], "prior": 816, "priorit": 66, "prioriti": [490, 796, 831], "process": [71, 189, 242, 304, 318, 319, 330, 355, 358, 487, 490, 507, 512, 521, 537, 550, 553, 558, 559, 568, 582, 587, 596, 613, 628, 642, 655, 670, 685, 731, 820, 823, 824, 835], "process_id": 490, "process_joineri": 71, "process_param": 824, "process_typ": 824, "processing_nam": 490, "produc": 358, "product": [20, 21, 41, 42, 60, 61, 78, 79, 95, 96, 114, 115, 131, 132, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 270, 271, 288, 289], "programm": 817, "project": [817, 820], "proper": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807], "properli": [10, 50, 68, 85, 102, 121, 138, 155, 172, 189, 207, 224, 242, 260, 277], "provid": [27, 237, 255, 326, 646, 706, 709, 713, 762, 822, 823, 826, 832], "publish": 822, "purpos": 822, "put": [409, 487], "py": 824, "python": [818, 820, 821, 823], "queri": [723, 724, 726], "r": [28, 297, 821], "radian": [735, 736], "radiu": [189, 242, 518, 527, 534, 545, 610, 616, 682, 690, 696, 831], "rafter": [579, 587, 826], "rais": [1, 12, 14, 16, 18, 19, 33, 34, 35, 37, 39, 40, 52, 54, 56, 58, 59, 70, 72, 74, 76, 77, 87, 89, 91, 93, 94, 104, 106, 108, 110, 111, 123, 124, 125, 127, 129, 130, 140, 142, 144, 146, 147, 157, 159, 161, 163, 164, 174, 176, 178, 180, 181, 191, 193, 195, 198, 199, 209, 211, 213, 215, 216, 226, 228, 230, 232, 233, 244, 246, 248, 250, 251, 262, 264, 266, 268, 269, 279, 281, 283, 286, 287, 374, 375, 398, 399, 412, 413, 429, 430, 450, 451, 472, 473, 485, 486, 494, 495, 507, 509, 510, 521, 528, 529, 537, 543, 544, 553, 556, 557, 568, 572, 573, 582, 584, 585, 596, 598, 599, 613, 617, 618, 628, 630, 631, 642, 644, 645, 655, 657, 658, 670, 672, 673, 685, 688, 689, 706, 709, 710, 713, 721, 722, 731, 756, 757, 768, 769, 778, 779, 788, 789, 799, 800, 809, 810], "random": 834, "rang": 831, "rather": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 740, 758, 770, 780, 790, 801, 811], "ratio": 834, "raw": [26, 47, 67, 84, 101, 120, 137, 154, 171, 188, 206, 223, 241, 259, 276, 296, 388, 408, 418, 440, 460, 483, 499, 517, 533, 549, 563, 578, 592, 606, 622, 637, 650, 665, 680, 694, 749, 761, 774, 784, 794, 805, 815, 826], "realli": 487, "reason": 731, "recogn": 833, "rectangular": [358, 826], "reder": [518, 534, 610, 682], "ref_edg": 358, "ref_fram": 358, "ref_posit": 565, "ref_sid": [358, 527, 545, 616, 659, 674, 690], "ref_side_index": [363, 376, 377, 378, 490, 511, 527, 545, 571, 586, 600, 601, 602, 616, 632, 633, 659, 674, 690], "refedg": [564, 565], "refer": [22, 43, 62, 80, 97, 116, 133, 150, 167, 184, 202, 219, 236, 254, 272, 292, 358, 363, 376, 377, 378, 383, 435, 461, 489, 490, 504, 511, 518, 527, 534, 545, 550, 558, 564, 565, 571, 579, 586, 593, 600, 601, 602, 610, 616, 625, 632, 633, 651, 659, 666, 674, 682, 690, 820, 823, 824, 825], "referenc": [826, 827], "regard": [297, 527, 616], "regist": 502, "register_joint": 824, "reject": 50, "reject_i": [50, 831], "rel": [363, 376, 378], "relat": [306, 461, 545, 690, 824], "remain": 831, "remov": [360, 379, 380, 381, 402, 432, 433, 454, 476, 732, 733, 734, 825, 830, 831], "renam": [702, 703], "rename_count": 702, "rename_gh_input": 820, "render": [823, 834], "repositori": 821, "repres": [10, 50, 68, 85, 102, 155, 172, 189, 207, 224, 242, 260, 277, 358, 389, 409, 419, 461, 487, 500, 504, 518, 534, 550, 565, 579, 593, 610, 625, 651, 666, 682, 704, 710, 750, 826, 831], "represent": [11, 24, 25, 32, 45, 46, 49, 51, 64, 65, 69, 82, 83, 86, 99, 100, 103, 118, 119, 122, 135, 136, 139, 152, 153, 156, 169, 170, 173, 186, 187, 190, 204, 205, 208, 221, 222, 225, 239, 240, 243, 257, 258, 261, 274, 275, 278, 294, 295, 359, 384, 385, 390, 404, 405, 409, 410, 416, 417, 420, 436, 437, 442, 456, 457, 462, 479, 480, 491, 497, 498, 505, 515, 516, 519, 531, 532, 535, 547, 548, 551, 561, 562, 566, 576, 577, 580, 590, 591, 594, 604, 605, 611, 620, 621, 626, 635, 636, 640, 648, 649, 652, 663, 664, 667, 678, 679, 683, 692, 693, 705, 741, 742, 751, 753, 759, 760, 766, 771, 772, 776, 781, 782, 786, 791, 792, 797, 802, 803, 807, 812, 813, 824], "request": [383, 435], "requir": [12, 14, 33, 35, 53, 54, 88, 89, 105, 106, 123, 125, 140, 142, 158, 159, 175, 176, 192, 193, 210, 211, 227, 245, 246, 262, 263, 264, 280, 319, 360, 379, 821], "requr": 824, "research": [500, 817, 820, 822], "resolv": 820, "respect": [22, 31, 43], "respons": [16, 37, 56, 74, 91, 108, 127, 144, 161, 178, 195, 213, 230, 248, 266, 283, 409], "restor": [22, 43, 62, 80, 97, 116, 133, 150, 167, 184, 202, 219, 236, 254, 272, 292], "restrict": 822, "result": [20, 21, 41, 42, 60, 61, 78, 79, 95, 96, 114, 115, 131, 132, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 270, 271, 288, 289, 370, 409, 507, 521, 537, 553, 568, 582, 596, 613, 628, 642, 655, 670, 685, 795, 826, 827], "rethink": 389, "retriev": [718, 825], "return": [15, 16, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 36, 37, 39, 40, 41, 42, 44, 46, 47, 49, 55, 56, 58, 59, 60, 61, 63, 65, 67, 73, 74, 76, 77, 78, 79, 81, 83, 84, 90, 91, 93, 94, 95, 96, 98, 100, 101, 107, 108, 110, 111, 112, 114, 115, 117, 119, 120, 126, 127, 129, 130, 131, 132, 134, 136, 137, 143, 144, 146, 147, 148, 149, 151, 153, 154, 160, 161, 163, 164, 165, 166, 168, 170, 171, 177, 178, 180, 181, 182, 183, 185, 187, 188, 194, 195, 198, 199, 200, 201, 203, 205, 206, 212, 213, 215, 216, 217, 218, 220, 222, 223, 229, 230, 232, 233, 234, 235, 238, 240, 241, 247, 248, 250, 251, 252, 253, 256, 258, 259, 265, 266, 268, 269, 270, 271, 273, 275, 276, 282, 283, 286, 287, 288, 289, 293, 295, 296, 297, 300, 304, 305, 313, 314, 318, 324, 326, 330, 351, 355, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 382, 383, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 434, 435, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 455, 457, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 472, 473, 478, 480, 481, 482, 483, 488, 489, 493, 494, 495, 496, 498, 499, 501, 502, 503, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 521, 522, 524, 525, 526, 527, 528, 529, 530, 532, 533, 537, 538, 541, 542, 543, 544, 545, 546, 548, 549, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 642, 643, 644, 645, 646, 647, 649, 650, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 702, 703, 706, 707, 708, 709, 710, 712, 713, 714, 715, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 731, 732, 733, 735, 736, 737, 738, 740, 742, 743, 744, 745, 746, 747, 748, 749, 751, 755, 756, 757, 758, 760, 761, 763, 767, 768, 769, 770, 772, 774, 777, 778, 779, 780, 782, 784, 787, 788, 789, 790, 792, 794, 798, 799, 800, 801, 803, 805, 808, 809, 810, 811, 813, 815, 816], "revers": 351, "rework": [29, 30], "rhino": [0, 11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 297, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807, 816, 818, 820, 821, 825, 826, 831, 834], "rhinocero": 820, "rhinocommon": 820, "rhinocurv": 419, "ridg": [68, 565, 574], "right": [363, 376, 378, 822, 831], "robot": [751, 796], "role": [22, 29, 43, 305], "root": [706, 707], "rotat": [189, 242, 534, 545, 550, 682, 690, 737, 738, 747, 748, 826, 831], "round": [189, 242, 518, 534, 610, 682, 696, 831], "rs1": [490, 511, 527, 545, 571, 586, 600, 616, 659, 674, 690], "rs5": [363, 376, 378], "rs6": [363, 376, 378, 490], "rtree": [28, 816], "rule": [298, 300, 301, 302, 303, 304, 311, 313, 315, 316, 317, 318, 326, 327, 328, 329, 330, 331, 349, 351, 352, 353, 354, 355, 363, 376, 378, 820, 823, 826, 827, 832, 835], "run": [818, 820], "sai": 826, "same": [15, 29, 36, 50, 55, 68, 73, 90, 107, 126, 143, 160, 177, 194, 212, 229, 247, 265, 281, 282, 369, 397, 411, 428, 449, 469, 493, 508, 522, 538, 554, 569, 583, 597, 614, 629, 643, 656, 671, 686, 709, 717, 755, 767, 777, 787, 795, 796, 798, 808], "save": [24, 25, 45, 46, 62, 64, 65, 80, 82, 83, 97, 99, 100, 116, 118, 119, 133, 135, 136, 150, 152, 153, 167, 169, 170, 184, 186, 187, 202, 204, 205, 219, 221, 222, 236, 239, 240, 254, 257, 258, 272, 274, 275, 292, 294, 295, 384, 385, 404, 405, 416, 417, 436, 437, 456, 457, 479, 480, 497, 498, 515, 516, 531, 532, 547, 548, 561, 562, 576, 577, 590, 591, 604, 605, 620, 621, 635, 636, 648, 649, 663, 664, 678, 679, 692, 693, 741, 742, 759, 760, 771, 772, 781, 782, 791, 792, 802, 803, 812, 813, 829], "scale": [735, 736, 747, 748, 834], "schema": [18, 19, 26, 39, 40, 47, 58, 59, 67, 76, 77, 84, 93, 94, 101, 110, 111, 120, 129, 130, 137, 146, 147, 154, 163, 164, 171, 180, 181, 188, 198, 199, 206, 215, 216, 223, 232, 233, 241, 250, 251, 259, 268, 269, 276, 286, 287, 296, 374, 375, 388, 398, 399, 408, 412, 413, 418, 429, 430, 440, 450, 451, 460, 472, 473, 483, 494, 495, 499, 509, 510, 517, 528, 529, 533, 543, 544, 549, 556, 557, 563, 572, 573, 578, 584, 585, 592, 598, 599, 606, 617, 618, 622, 630, 631, 637, 644, 645, 650, 657, 658, 665, 672, 673, 680, 688, 689, 694, 721, 722, 749, 756, 757, 761, 768, 769, 774, 778, 779, 784, 788, 789, 794, 799, 800, 805, 809, 810, 815], "scienc": 817, "screw": [389, 785], "sdk": 820, "search": [28, 297], "second": [29, 30, 85, 102, 138, 155, 189, 224, 242, 260, 298, 305, 370, 504, 512, 710, 727, 731, 830], "section": [50, 66, 358, 372, 373, 818, 823, 826, 827, 831], "secur": 831, "see": [1, 22, 43, 704, 823, 826, 828, 830, 831, 834], "seem": 409, "select": [827, 831, 833], "self": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807, 824], "sell": 822, "semant": 820, "sens": 409, "sensit": 29, "separ": [16, 825], "sequenc": [731, 795, 820], "sequenti": 831, "serial": [22, 43, 62, 80, 97, 116, 133, 150, 167, 184, 202, 219, 236, 254, 272, 292, 502, 762], "serv": [461, 834], "session": 818, "set": [28, 189, 237, 255, 297, 300, 313, 349, 351, 609, 727, 816, 825, 826, 827, 831, 832], "set_default_joint": 820, "setcustomattribut": 825, "setstandardattribut": 825, "shall": [321, 709, 822], "shape": [189, 224, 242, 358, 409, 419, 518, 527, 534, 545, 587, 610, 616, 651, 666, 681, 682, 690, 696, 831], "shape_radiu": [189, 242, 518, 527, 534, 545, 610, 616, 682, 690, 831], "sheet": 827, "sheeting_insid": 827, "sheeting_outsid": 827, "shift": [85, 121, 207, 260, 831], "shorten": 831, "should": [12, 14, 22, 30, 31, 33, 34, 35, 43, 54, 85, 89, 106, 121, 123, 124, 125, 140, 142, 159, 176, 193, 207, 211, 246, 260, 262, 264, 297, 319, 360, 363, 371, 376, 377, 378, 389, 409, 441, 484, 511, 518, 527, 545, 565, 586, 616, 659, 674, 690, 698, 702, 706, 824, 831], "shouldn": 138, "show": [820, 823], "side": [68, 85, 121, 207, 260, 358, 363, 376, 377, 378, 383, 435, 489, 490, 504, 511, 518, 527, 534, 545, 550, 558, 565, 571, 579, 586, 593, 600, 601, 602, 610, 616, 625, 632, 633, 646, 651, 659, 666, 674, 682, 690, 827, 830, 831], "side_index": [383, 435], "sill": [331, 827, 831], "similar": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807, 831], "simpl": [795, 820, 823], "simplesequencegener": 820, "sinc": [22, 43, 731], "singl": [461, 471, 796, 824], "size": [826, 834], "slab": 461, "slat": 358, "slope": [518, 593, 610, 625], "slot": 820, "small": 646, "small_beam_butt": [50, 66, 831], "smaller": [50, 66, 358, 826], "so": [822, 824], "softwar": [820, 822], "solid": [358, 409, 832], "some": [409, 823, 834], "somewher": 260, "sort": 305, "sourc": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 820, 825, 826], "space": [331, 504, 518, 534, 545, 565, 579, 593, 610, 625, 651, 666, 682, 690, 827], "spatial": [368, 396, 427, 448, 468], "specialist": 820, "specif": [22, 29, 43, 720, 728, 820, 824, 826, 827, 831], "specifi": [646, 718, 827], "squar": [189, 242, 518, 534, 610, 682, 696, 831], "stage": 820, "standard": [358, 827], "start": [189, 242, 358, 360, 363, 370, 371, 373, 376, 378, 504, 518, 527, 534, 545, 550, 565, 579, 593, 609, 610, 616, 624, 625, 651, 666, 682, 690, 823, 826, 831], "start_depth": [189, 242, 518, 527, 534, 545, 579, 610, 616, 625, 682, 690, 831], "start_i": [189, 242, 504, 518, 534, 545, 550, 579, 593, 610, 625, 666, 674, 682, 690, 831], "start_x": [504, 518, 534, 550, 565, 579, 593, 610, 625, 651, 666, 682], "state": [381, 402, 433, 454, 476], "static": [20, 21, 41, 42, 60, 61, 78, 79, 95, 96, 114, 115, 131, 132, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 270, 271, 288, 289, 301, 302, 303, 304, 315, 316, 317, 318, 327, 328, 329, 330, 352, 353, 354, 355], "step": [224, 237, 521, 537, 613, 651, 655, 666, 670, 681, 685, 752, 754, 795, 820, 824], "step_depth": [224, 237, 651, 659, 666, 674, 831], "step_shap": [224, 651, 666, 831], "stepjoint": 820, "stepjointnotch": [654, 820], "stepshapetyp": [666, 820], "still": 28, "stock": [358, 826], "stop_on_first_error": 731, "store": [22, 43, 825, 826], "str": [18, 19, 23, 24, 25, 31, 39, 40, 44, 45, 46, 49, 58, 59, 63, 64, 65, 76, 77, 81, 82, 83, 93, 94, 98, 99, 100, 110, 111, 117, 118, 119, 129, 130, 134, 135, 136, 146, 147, 151, 152, 153, 163, 164, 168, 169, 170, 180, 181, 185, 186, 187, 198, 199, 203, 204, 205, 215, 216, 220, 221, 222, 232, 233, 238, 239, 240, 242, 250, 251, 256, 257, 258, 268, 269, 273, 274, 275, 286, 287, 293, 294, 295, 298, 370, 374, 375, 382, 384, 385, 398, 399, 403, 404, 405, 412, 413, 415, 416, 417, 429, 430, 434, 436, 437, 450, 451, 455, 456, 457, 472, 473, 478, 479, 480, 484, 485, 486, 487, 489, 490, 494, 495, 496, 497, 498, 500, 501, 503, 509, 510, 514, 515, 516, 518, 527, 528, 529, 530, 531, 532, 534, 543, 544, 545, 546, 547, 548, 556, 557, 560, 561, 562, 572, 573, 575, 576, 577, 584, 585, 589, 590, 591, 598, 599, 603, 604, 605, 610, 616, 617, 618, 619, 620, 621, 630, 631, 634, 635, 636, 644, 645, 647, 648, 649, 651, 657, 658, 661, 663, 664, 666, 672, 673, 677, 678, 679, 682, 688, 689, 690, 691, 692, 693, 697, 702, 703, 708, 709, 718, 721, 722, 723, 726, 740, 741, 742, 751, 756, 757, 758, 759, 760, 763, 764, 768, 769, 770, 771, 772, 778, 779, 780, 781, 782, 788, 789, 790, 791, 792, 796, 799, 800, 801, 802, 803, 809, 810, 811, 812, 813], "straight": [558, 826], "string": [11, 19, 25, 32, 40, 46, 49, 51, 59, 65, 69, 77, 83, 86, 94, 100, 103, 111, 119, 122, 130, 136, 139, 147, 153, 156, 164, 170, 173, 181, 187, 190, 199, 205, 208, 216, 222, 225, 233, 240, 243, 251, 258, 261, 269, 275, 278, 287, 295, 359, 375, 385, 390, 399, 405, 410, 413, 417, 420, 430, 437, 442, 451, 457, 462, 473, 480, 484, 491, 495, 498, 501, 503, 505, 510, 516, 519, 529, 532, 535, 544, 548, 551, 557, 562, 566, 573, 577, 580, 585, 591, 594, 599, 605, 611, 618, 621, 626, 631, 636, 640, 645, 649, 652, 658, 664, 667, 673, 679, 683, 689, 693, 705, 722, 742, 751, 753, 757, 760, 766, 769, 772, 776, 779, 782, 786, 789, 792, 797, 800, 803, 807, 810, 813, 825, 826, 831], "structur": [409, 744, 745, 746, 817, 820, 823, 827, 832, 835], "strut": [651, 666], "strut_height": [666, 674], "strut_inclin": [651, 666], "stud": [331, 358, 826, 827, 831], "stud_direct": 827, "stud_spac": [331, 827], "studio": 818, "stuff": 409, "style": 823, "sub": 121, "subject": 822, "sublicens": 822, "sublim": 818, "subprocess": [492, 506, 520, 536, 552, 567, 581, 595, 612, 627, 641, 653, 669, 684], "substanti": 822, "subtract": [607, 638, 830, 832], "summaris": 831, "support": [298, 300, 796, 817, 818], "suppos": 484, "sure": 470, "surfac": [189, 242, 331, 383, 435, 489, 527, 545, 659, 674, 824, 830], "surfaceassembli": 331, "surfacemodel": 820, "swiss": 817, "system": [358, 419, 489, 550, 826], "t": [121, 138, 155, 172, 189, 207, 224, 242, 349, 357, 833], "t_default": 357, "take": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 359, 390, 410, 420, 442, 462, 491, 502, 505, 519, 535, 551, 558, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807, 824, 835], "taper": [189, 224, 681, 831], "tapered_heel": [224, 659, 666, 674, 681, 831], "taperedheel": [651, 681], "tbirdsmouth": 155, "tbirdsmouthjoint": 820, "tbuttjoint": [22, 43, 819, 820], "tdovetailjoint": 820, "tenon": [224, 242, 534, 540, 541, 545, 616, 651, 654, 662, 696, 820], "tenon_height": [651, 654], "tenon_mortise_height": [224, 831], "tenon_width": [651, 654], "tenonmortis": 242, "tenonmortisejoint": 820, "tenonshapetyp": 820, "text": [806, 818, 829], "text3d": 820, "textur": [823, 834], "than": [16, 23, 37, 44, 56, 63, 74, 81, 91, 98, 108, 117, 127, 134, 144, 151, 161, 168, 178, 185, 195, 203, 213, 220, 230, 238, 248, 256, 266, 273, 283, 293, 313, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 740, 758, 770, 780, 790, 801, 811], "thei": [29, 237, 255, 351, 409, 511, 831, 835], "them": [16, 37, 56, 68, 74, 91, 102, 108, 127, 144, 155, 161, 178, 189, 195, 213, 224, 230, 242, 248, 266, 283, 461, 716, 727, 818, 824, 825, 831], "therefor": [13, 646], "thi": [1, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 114, 115, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 296, 297, 298, 300, 305, 313, 314, 319, 321, 324, 326, 349, 351, 358, 359, 360, 363, 368, 369, 371, 374, 375, 376, 378, 379, 388, 389, 390, 396, 397, 398, 399, 408, 409, 410, 411, 412, 413, 418, 419, 420, 427, 428, 429, 430, 440, 441, 442, 448, 449, 450, 451, 460, 461, 462, 468, 469, 470, 472, 473, 483, 484, 487, 489, 491, 493, 494, 495, 499, 505, 507, 508, 509, 510, 511, 513, 517, 519, 521, 522, 524, 525, 526, 527, 528, 529, 533, 535, 537, 538, 540, 541, 542, 543, 544, 545, 549, 551, 554, 555, 556, 557, 558, 563, 566, 568, 569, 570, 571, 572, 573, 574, 578, 580, 582, 583, 584, 585, 586, 588, 592, 594, 596, 597, 598, 599, 600, 601, 602, 606, 607, 611, 613, 614, 615, 616, 617, 618, 622, 623, 626, 628, 629, 630, 631, 632, 633, 637, 638, 640, 642, 643, 644, 645, 646, 650, 652, 655, 656, 657, 658, 659, 660, 662, 665, 667, 670, 671, 672, 673, 674, 675, 676, 680, 683, 685, 686, 687, 688, 689, 690, 694, 695, 704, 705, 709, 717, 721, 722, 723, 726, 731, 734, 736, 738, 745, 746, 748, 749, 753, 755, 756, 757, 761, 762, 766, 767, 768, 769, 774, 776, 777, 778, 779, 784, 786, 787, 788, 789, 794, 796, 797, 798, 799, 800, 805, 807, 808, 809, 810, 815, 816, 818, 822, 824, 825, 827, 831, 835], "thick": [331, 409, 419, 470, 471, 646, 827], "third": 831, "thought": 409, "three": [277, 831, 835], "through": [30, 85, 121, 207, 260, 371, 409, 550, 558, 817, 831], "thumb": [363, 376, 378], "tightli": 409, "tilt": [625, 831], "tilt_end_sid": 625, "tilt_opp_sid": 625, "tilt_ref_sid": 625, "tilt_start_sid": 625, "timber": [10, 13, 331, 358, 389, 409, 419, 441, 461, 500, 704, 817, 823, 826, 827, 829, 833, 835], "timberassembli": 819, "timberel": [300, 304, 305, 311, 313, 318, 326, 330, 351, 355, 358, 389, 419, 485, 601, 632, 633, 709, 820], "timbermodel": [16, 37, 56, 74, 91, 108, 127, 144, 161, 178, 195, 213, 230, 248, 266, 283, 501, 503, 820], "titl": 817, "tlapjoint": 820, "todo": [29, 30, 319, 371, 389, 409, 461, 487, 558, 709, 723, 726, 739, 831], "togeth": [16, 37, 56, 74, 91, 108, 127, 144, 161, 178, 195, 213, 230, 248, 266, 283, 461, 826], "tol": [29, 30, 300, 313, 351, 356], "toler": [29, 30, 832], "too": 558, "tool": [27, 189, 196, 518, 523, 534, 539, 545, 690, 820, 823, 831, 833, 834], "tool_angl": [189, 196, 523, 539, 831], "tool_diamet": [189, 196, 523, 539, 831], "tool_height": [189, 196, 523, 539, 831], "top": [518, 534, 608, 609, 610, 682, 690, 823, 831], "topo": 298, "topo_i": 48, "topo_l": [48, 49], "topo_t": [48, 49], "topo_unknown": [48, 49], "topo_x": [48, 49], "topologi": [16, 27, 29, 30, 37, 48, 49, 50, 56, 68, 74, 85, 91, 102, 108, 127, 144, 155, 161, 172, 178, 189, 195, 207, 213, 224, 230, 242, 248, 260, 266, 283, 298, 300, 349, 351, 704, 739, 831, 832, 835], "topology_typ": 349, "topologyrul": 820, "tort": 822, "total": 704, "touch": 28, "tranform": [773, 783, 793, 814], "transform": [319, 368, 396, 427, 448, 468, 735, 736, 737, 738, 744, 746, 747, 748], "translat": [489, 735, 736, 737, 738], "tree": [28, 297, 706], "trim": [10, 50, 53, 102, 105, 158, 172, 175, 192, 210, 227, 245, 263, 277, 280, 574, 830, 832], "true": [15, 20, 21, 23, 24, 25, 28, 36, 41, 42, 44, 45, 46, 50, 55, 60, 61, 63, 64, 65, 66, 68, 73, 78, 79, 81, 82, 83, 85, 90, 95, 96, 98, 99, 100, 102, 107, 114, 115, 117, 118, 119, 121, 126, 131, 132, 134, 135, 136, 143, 148, 149, 151, 152, 153, 160, 165, 166, 168, 169, 170, 177, 182, 183, 185, 186, 187, 194, 200, 201, 203, 204, 205, 207, 212, 217, 218, 220, 221, 222, 224, 229, 234, 235, 238, 239, 240, 247, 252, 253, 256, 257, 258, 260, 265, 270, 271, 273, 274, 275, 282, 288, 289, 293, 294, 295, 300, 313, 314, 324, 326, 351, 366, 369, 371, 382, 384, 385, 397, 403, 404, 405, 409, 411, 415, 416, 417, 425, 428, 434, 436, 437, 441, 446, 449, 455, 456, 457, 466, 469, 478, 479, 480, 493, 496, 497, 498, 508, 514, 515, 516, 518, 522, 530, 531, 532, 534, 538, 546, 547, 548, 550, 554, 560, 561, 562, 569, 575, 576, 577, 583, 589, 590, 591, 597, 603, 604, 605, 610, 614, 619, 620, 621, 629, 634, 635, 636, 643, 647, 648, 649, 656, 661, 663, 664, 666, 671, 677, 678, 679, 682, 686, 690, 691, 692, 693, 702, 709, 717, 725, 726, 727, 731, 740, 741, 742, 755, 758, 759, 760, 767, 770, 771, 772, 777, 780, 781, 782, 787, 790, 791, 792, 798, 801, 802, 803, 808, 811, 812, 813, 826, 827, 829, 831, 832], "try": 484, "tstepjoint": 820, "tupl": [20, 21, 29, 30, 31, 41, 42, 60, 61, 78, 79, 95, 96, 114, 115, 131, 132, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 270, 271, 288, 289, 300, 305, 313, 351, 358, 371, 377, 419, 710], "two": [16, 29, 30, 31, 37, 50, 56, 68, 74, 85, 91, 102, 108, 112, 127, 144, 155, 161, 178, 189, 195, 213, 224, 230, 242, 248, 260, 266, 281, 283, 298, 300, 304, 305, 311, 313, 318, 330, 349, 351, 355, 370, 484, 511, 512, 571, 646, 710, 727, 733, 830, 831], "txt": 821, "type": [9, 10, 11, 15, 18, 19, 26, 29, 32, 36, 39, 40, 47, 50, 51, 55, 58, 59, 67, 68, 69, 73, 76, 77, 84, 85, 86, 90, 93, 94, 101, 102, 103, 107, 110, 111, 120, 121, 122, 126, 129, 130, 137, 139, 143, 146, 147, 154, 155, 156, 160, 163, 164, 171, 172, 173, 177, 180, 181, 188, 189, 190, 194, 198, 199, 206, 207, 208, 212, 215, 216, 223, 224, 225, 229, 232, 233, 237, 241, 242, 243, 247, 250, 251, 259, 260, 261, 265, 268, 269, 276, 277, 278, 282, 286, 287, 296, 298, 311, 321, 349, 359, 369, 374, 375, 388, 390, 397, 398, 399, 408, 410, 411, 412, 413, 418, 420, 428, 429, 430, 440, 442, 449, 450, 451, 460, 462, 469, 472, 473, 483, 491, 493, 494, 495, 499, 502, 505, 508, 509, 510, 517, 518, 519, 522, 528, 529, 533, 535, 538, 543, 544, 549, 551, 554, 556, 557, 563, 566, 569, 572, 573, 578, 580, 583, 584, 585, 592, 594, 597, 598, 599, 606, 611, 614, 617, 618, 622, 626, 629, 630, 631, 637, 640, 643, 644, 645, 650, 652, 656, 657, 658, 665, 667, 671, 672, 673, 680, 683, 686, 688, 689, 694, 705, 717, 720, 721, 722, 749, 750, 753, 755, 756, 757, 761, 766, 767, 768, 769, 774, 776, 777, 778, 779, 784, 786, 787, 788, 789, 794, 796, 797, 798, 799, 800, 805, 807, 808, 809, 810, 815, 820, 824, 827, 835], "type_": 502, "typeerror": [18, 19, 39, 40, 58, 59, 76, 77, 93, 94, 110, 111, 129, 130, 146, 147, 163, 164, 180, 181, 198, 199, 215, 216, 232, 233, 250, 251, 268, 269, 286, 287, 374, 375, 398, 399, 412, 413, 429, 430, 450, 451, 472, 473, 494, 495, 509, 510, 528, 529, 543, 544, 556, 557, 572, 573, 584, 585, 598, 599, 617, 618, 630, 631, 644, 645, 657, 658, 672, 673, 688, 689, 721, 722, 756, 757, 768, 769, 778, 779, 788, 789, 799, 800, 809, 810], "typic": [796, 824], "unchang": 831, "under": [706, 707], "underscor": 825, "uniform": 419, "uniqu": [31, 358, 419, 718], "unit": [29, 30, 297, 371, 461], "unlik": 831, "unlimit": [518, 608], "updaterefobj": 826, "upon": 820, "upper": 831, "upstream": [709, 723, 726], "url": 817, "us": [9, 10, 11, 23, 26, 28, 29, 30, 31, 32, 44, 47, 49, 50, 51, 63, 67, 68, 69, 81, 84, 85, 86, 98, 101, 102, 103, 117, 120, 121, 122, 134, 137, 138, 139, 151, 154, 155, 156, 168, 171, 172, 173, 185, 188, 189, 190, 203, 206, 207, 208, 220, 223, 224, 225, 238, 241, 242, 243, 256, 259, 260, 261, 273, 276, 277, 278, 293, 296, 297, 300, 305, 313, 351, 359, 371, 382, 388, 390, 403, 408, 410, 415, 418, 420, 434, 440, 441, 442, 455, 460, 462, 470, 478, 483, 484, 491, 496, 499, 500, 505, 514, 517, 518, 519, 527, 530, 533, 534, 535, 545, 546, 549, 551, 555, 560, 563, 566, 571, 575, 578, 580, 589, 592, 594, 600, 603, 606, 611, 616, 619, 622, 626, 634, 637, 640, 647, 650, 652, 661, 665, 667, 677, 680, 683, 690, 691, 694, 705, 709, 739, 740, 744, 745, 746, 747, 748, 749, 751, 753, 758, 761, 762, 766, 770, 774, 776, 780, 784, 786, 790, 794, 796, 797, 801, 805, 807, 811, 815, 816, 817, 820, 822, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834], "use_default": [303, 317, 329, 354], "use_flank_angl": [518, 534], "user": [825, 827], "usual": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 358, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807], "util": [820, 823], "v": 409, "v1": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 740, 758, 770, 780, 790, 801, 811], "v2": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 740, 758, 770, 780, 790, 801, 811], "v3": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 740, 758, 770, 780, 790, 801, 811], "v7": 821, "valid": [26, 47, 67, 84, 101, 120, 137, 154, 171, 188, 206, 223, 241, 259, 276, 296, 388, 408, 418, 440, 460, 483, 499, 517, 533, 549, 563, 578, 592, 606, 622, 637, 650, 665, 680, 694, 749, 761, 774, 784, 794, 805, 815], "valu": [49, 85, 121, 207, 255, 260, 297, 358, 419, 488, 527, 616, 666, 751, 825], "valueerror": [16, 37, 56, 74, 91, 108, 127, 144, 161, 178, 195, 213, 230, 248, 266, 283, 706, 709, 713], "variabl": 831, "vector": [331, 372, 373, 409, 419, 558, 735, 736, 747, 748, 820, 826, 827], "verifi": [16, 37, 56, 74, 91, 108, 127, 144, 161, 178, 195, 213, 230, 248, 266, 283, 371, 728], "version": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 740, 758, 770, 780, 790, 801, 811, 821], "vertex_attribut": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 740, 758, 770, 780, 790, 801, 811], "vertex_sampl": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 740, 758, 770, 780, 790, 801, 811], "vertic": [504, 579, 593, 625, 646, 826, 831], "via": [71, 820], "visual": [306, 484, 752, 796, 818], "visualis": 832, "vocabulari": 827, "volum": [521, 525, 537, 541, 574, 601, 602, 607, 613, 623, 632, 633, 638, 655, 662, 670, 675, 685, 695, 704], "wa": [12, 33, 34, 123, 124, 140, 262, 484], "wai": [319, 762, 818], "wall": [30, 331, 441, 704, 709, 716, 820, 827], "wall1": 709, "wall1_group": 709, "wall_a": 30, "wall_b": 30, "want": 762, "warranti": 822, "we": [389, 409], "well": [360, 709], "were": [29, 31, 484, 825], "what": 409, "when": [11, 28, 32, 51, 52, 53, 69, 70, 86, 87, 88, 103, 104, 105, 122, 139, 156, 157, 158, 173, 174, 175, 190, 191, 192, 208, 209, 210, 225, 226, 227, 243, 244, 245, 261, 263, 278, 279, 280, 359, 360, 390, 410, 420, 442, 462, 485, 486, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807, 825, 831], "whenev": [12, 14, 33, 34, 35, 54, 89, 106, 123, 124, 125, 140, 142, 159, 176, 193, 211, 246, 262, 264], "where": [824, 826, 829, 831, 834], "whether": [518, 534, 610, 666, 682, 690, 796, 822], "which": [10, 16, 20, 21, 28, 29, 30, 31, 37, 41, 42, 50, 56, 60, 61, 68, 74, 78, 79, 85, 91, 95, 96, 102, 108, 114, 115, 127, 131, 132, 138, 144, 148, 149, 155, 161, 165, 166, 172, 178, 182, 183, 189, 195, 200, 201, 207, 213, 217, 218, 224, 230, 234, 235, 242, 248, 252, 253, 260, 266, 270, 271, 277, 283, 288, 289, 297, 319, 349, 360, 363, 370, 371, 376, 377, 378, 379, 484, 485, 502, 545, 558, 559, 646, 690, 708, 709, 750, 752, 785, 796, 824, 826, 827, 832], "while": [409, 484, 831, 833], "whitespac": [24, 25, 45, 46, 64, 65, 82, 83, 99, 100, 118, 119, 135, 136, 152, 153, 169, 170, 186, 187, 204, 205, 221, 222, 239, 240, 257, 258, 274, 275, 294, 295, 384, 385, 404, 405, 416, 417, 436, 437, 456, 457, 479, 480, 497, 498, 515, 516, 531, 532, 547, 548, 561, 562, 576, 577, 590, 591, 604, 605, 620, 621, 635, 636, 648, 649, 663, 664, 678, 679, 692, 693, 741, 742, 759, 760, 771, 772, 781, 782, 791, 792, 802, 803, 812, 813], "whom": 822, "whose": [20, 21, 41, 42, 60, 61, 78, 79, 95, 96, 114, 115, 131, 132, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 234, 235, 252, 253, 270, 271, 288, 289], "whould": [16, 37, 56, 74, 91, 108, 127, 144, 161, 178, 195, 213, 230, 248, 266, 283], "wide": [358, 419], "width": [189, 242, 331, 358, 372, 373, 487, 518, 527, 534, 545, 593, 610, 616, 625, 651, 654, 666, 668, 682, 690, 819, 825, 826, 827, 831], "within": [29, 314, 324, 796, 826], "without": [24, 25, 45, 46, 64, 65, 82, 83, 85, 99, 100, 118, 119, 121, 135, 136, 152, 153, 169, 170, 186, 187, 204, 205, 207, 221, 222, 239, 240, 257, 258, 260, 274, 275, 294, 295, 384, 385, 404, 405, 416, 417, 436, 437, 456, 457, 479, 480, 497, 498, 515, 516, 531, 532, 547, 548, 561, 562, 576, 577, 590, 591, 604, 605, 620, 621, 635, 636, 648, 649, 663, 664, 678, 679, 692, 693, 741, 742, 759, 760, 771, 772, 781, 782, 791, 792, 802, 803, 812, 813, 822, 826], "wood": 358, "work": [817, 827], "workflow": [820, 823, 825, 826], "world": [368, 396, 409, 427, 448, 468, 826, 827], "worldx": [372, 373], "worldxi": [709, 819], "worldz": [372, 373], "would": 409, "wrapper": 487, "write": [500, 501, 764, 825, 826], "written": 820, "x": [121, 260, 349, 357, 358, 363, 376, 378, 504, 518, 534, 550, 565, 579, 593, 610, 625, 651, 666, 682, 737, 738, 826, 833, 834], "x_default": 357, "xlapjoint": 820, "xmax": [358, 419], "xmin": [358, 419], "xml": [501, 502, 503, 829], "y": [189, 242, 277, 281, 358, 377, 504, 518, 527, 534, 545, 550, 579, 593, 610, 616, 625, 666, 682, 690, 737, 738, 826, 831, 834], "ybuttjoint": 820, "ye": [651, 666, 821], "year": 817, "yield": [719, 729, 730], "ymax": [358, 419], "ymin": [358, 419], "you": [762, 817, 823, 827, 831, 835], "your": [762, 817], "yourgithub_usernam": 821, "z": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 358, 372, 373, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 550, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 735, 736, 737, 738, 740, 758, 770, 780, 790, 801, 811, 826, 827, 830, 834], "z_axi": 331, "z_vector": [372, 373], "zaxi": 331, "zenodo": 817, "zero": [490, 827], "zmax": [358, 419], "zmin": [358, 419], "zurich": [817, 820], "zvector": [825, 826]}, "titles": ["API Reference", "compas_timber.connections", "compas_timber.design", "compas_timber.elements", "compas_timber.errors", "compas_timber.fabrication", "compas_timber.ghpython", "compas_timber.model", "compas_timber.planning", "compas_timber.rhino", "BallNodeJoint", "BallNodeJoint.ToString", "BallNodeJoint.add_extensions", "BallNodeJoint.add_features", "BallNodeJoint.check_elements_compatibility", "BallNodeJoint.copy", "BallNodeJoint.create", "BallNodeJoint.element_count_complies", "BallNodeJoint.from_json", "BallNodeJoint.from_jsonstring", "BallNodeJoint.get_face_most_ortho_to_beam", "BallNodeJoint.get_face_most_towards_beam", "BallNodeJoint.restore_beams_from_keys", "BallNodeJoint.sha256", "BallNodeJoint.to_json", "BallNodeJoint.to_jsonstring", "BallNodeJoint.validate_data", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "ConnectionSolver.find_wall_wall_topology", "Joint", "Joint.ToString", "Joint.add_extensions", "Joint.add_features", "Joint.check_elements_compatibility", "Joint.copy", "Joint.create", "Joint.element_count_complies", "Joint.from_json", "Joint.from_jsonstring", "Joint.get_face_most_ortho_to_beam", "Joint.get_face_most_towards_beam", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_json", "Joint.to_jsonstring", "Joint.validate_data", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_extensions", "LButtJoint.add_features", "LButtJoint.check_elements_compatibility", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.element_count_complies", "LButtJoint.from_json", "LButtJoint.from_jsonstring", "LButtJoint.get_face_most_ortho_to_beam", "LButtJoint.get_face_most_towards_beam", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.to_json", "LButtJoint.to_jsonstring", "LButtJoint.update_beam_roles", "LButtJoint.validate_data", "LFrenchRidgeLapJoint", "LFrenchRidgeLapJoint.ToString", "LFrenchRidgeLapJoint.add_extensions", "LFrenchRidgeLapJoint.add_features", "LFrenchRidgeLapJoint.check_elements_compatibility", "LFrenchRidgeLapJoint.copy", "LFrenchRidgeLapJoint.create", "LFrenchRidgeLapJoint.element_count_complies", "LFrenchRidgeLapJoint.from_json", "LFrenchRidgeLapJoint.from_jsonstring", "LFrenchRidgeLapJoint.get_face_most_ortho_to_beam", "LFrenchRidgeLapJoint.get_face_most_towards_beam", "LFrenchRidgeLapJoint.restore_beams_from_keys", "LFrenchRidgeLapJoint.sha256", "LFrenchRidgeLapJoint.to_json", "LFrenchRidgeLapJoint.to_jsonstring", "LFrenchRidgeLapJoint.validate_data", "LLapJoint", "LLapJoint.ToString", "LLapJoint.add_extensions", "LLapJoint.add_features", "LLapJoint.check_elements_compatibility", "LLapJoint.copy", "LLapJoint.create", "LLapJoint.element_count_complies", "LLapJoint.from_json", "LLapJoint.from_jsonstring", "LLapJoint.get_face_most_ortho_to_beam", "LLapJoint.get_face_most_towards_beam", "LLapJoint.restore_beams_from_keys", "LLapJoint.sha256", "LLapJoint.to_json", "LLapJoint.to_jsonstring", "LLapJoint.validate_data", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_extensions", "LMiterJoint.add_features", "LMiterJoint.check_elements_compatibility", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.element_count_complies", "LMiterJoint.from_json", "LMiterJoint.from_jsonstring", "LMiterJoint.get_cutoff_plane", "LMiterJoint.get_cutting_planes", "LMiterJoint.get_face_most_ortho_to_beam", "LMiterJoint.get_face_most_towards_beam", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_json", "LMiterJoint.to_jsonstring", "LMiterJoint.validate_data", "LapJoint", "LapJoint.ToString", "LapJoint.add_extensions", "LapJoint.add_features", "LapJoint.check_elements_compatibility", "LapJoint.copy", "LapJoint.create", "LapJoint.element_count_complies", "LapJoint.from_json", "LapJoint.from_jsonstring", "LapJoint.get_face_most_ortho_to_beam", "LapJoint.get_face_most_towards_beam", "LapJoint.restore_beams_from_keys", "LapJoint.sha256", "LapJoint.to_json", "LapJoint.to_jsonstring", "LapJoint.validate_data", "NullJoint", "NullJoint.ToString", "NullJoint.add_extensions", "NullJoint.add_features", "NullJoint.check_elements_compatibility", "NullJoint.copy", "NullJoint.create", "NullJoint.element_count_complies", "NullJoint.from_json", "NullJoint.from_jsonstring", "NullJoint.get_face_most_ortho_to_beam", "NullJoint.get_face_most_towards_beam", "NullJoint.restore_beams_from_keys", "NullJoint.sha256", "NullJoint.to_json", "NullJoint.to_jsonstring", "NullJoint.validate_data", "TBirdsmouthJoint", "TBirdsmouthJoint.ToString", "TBirdsmouthJoint.add_extensions", "TBirdsmouthJoint.add_features", "TBirdsmouthJoint.check_elements_compatibility", "TBirdsmouthJoint.copy", "TBirdsmouthJoint.create", "TBirdsmouthJoint.element_count_complies", "TBirdsmouthJoint.from_json", "TBirdsmouthJoint.from_jsonstring", "TBirdsmouthJoint.get_face_most_ortho_to_beam", "TBirdsmouthJoint.get_face_most_towards_beam", "TBirdsmouthJoint.restore_beams_from_keys", "TBirdsmouthJoint.sha256", "TBirdsmouthJoint.to_json", "TBirdsmouthJoint.to_jsonstring", "TBirdsmouthJoint.validate_data", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_extensions", "TButtJoint.add_features", "TButtJoint.check_elements_compatibility", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.element_count_complies", "TButtJoint.from_json", "TButtJoint.from_jsonstring", "TButtJoint.get_face_most_ortho_to_beam", "TButtJoint.get_face_most_towards_beam", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.to_json", "TButtJoint.to_jsonstring", "TButtJoint.validate_data", "TDovetailJoint", "TDovetailJoint.ToString", "TDovetailJoint.add_extensions", "TDovetailJoint.add_features", "TDovetailJoint.check_elements_compatibility", "TDovetailJoint.copy", "TDovetailJoint.create", "TDovetailJoint.define_dovetail_tool", "TDovetailJoint.element_count_complies", "TDovetailJoint.from_json", "TDovetailJoint.from_jsonstring", "TDovetailJoint.get_face_most_ortho_to_beam", "TDovetailJoint.get_face_most_towards_beam", "TDovetailJoint.restore_beams_from_keys", "TDovetailJoint.sha256", "TDovetailJoint.to_json", "TDovetailJoint.to_jsonstring", "TDovetailJoint.validate_data", "TLapJoint", "TLapJoint.ToString", "TLapJoint.add_extensions", "TLapJoint.add_features", "TLapJoint.check_elements_compatibility", "TLapJoint.copy", "TLapJoint.create", "TLapJoint.element_count_complies", "TLapJoint.from_json", "TLapJoint.from_jsonstring", "TLapJoint.get_face_most_ortho_to_beam", "TLapJoint.get_face_most_towards_beam", "TLapJoint.restore_beams_from_keys", "TLapJoint.sha256", "TLapJoint.to_json", "TLapJoint.to_jsonstring", "TLapJoint.validate_data", "TStepJoint", "TStepJoint.ToString", "TStepJoint.add_extensions", "TStepJoint.add_features", "TStepJoint.check_elements_compatibility", "TStepJoint.copy", "TStepJoint.create", "TStepJoint.element_count_complies", "TStepJoint.from_json", "TStepJoint.from_jsonstring", "TStepJoint.get_face_most_ortho_to_beam", "TStepJoint.get_face_most_towards_beam", "TStepJoint.restore_beams_from_keys", "TStepJoint.set_step_depths", "TStepJoint.sha256", "TStepJoint.to_json", "TStepJoint.to_jsonstring", "TStepJoint.validate_data", "TenonMortiseJoint", "TenonMortiseJoint.ToString", "TenonMortiseJoint.add_extensions", "TenonMortiseJoint.add_features", "TenonMortiseJoint.check_elements_compatibility", "TenonMortiseJoint.copy", "TenonMortiseJoint.create", "TenonMortiseJoint.element_count_complies", "TenonMortiseJoint.from_json", "TenonMortiseJoint.from_jsonstring", "TenonMortiseJoint.get_face_most_ortho_to_beam", "TenonMortiseJoint.get_face_most_towards_beam", "TenonMortiseJoint.restore_beams_from_keys", "TenonMortiseJoint.set_default_values", "TenonMortiseJoint.sha256", "TenonMortiseJoint.to_json", "TenonMortiseJoint.to_jsonstring", "TenonMortiseJoint.validate_data", "XLapJoint", "XLapJoint.ToString", "XLapJoint.add_extensions", "XLapJoint.add_features", "XLapJoint.check_elements_compatibility", "XLapJoint.copy", "XLapJoint.create", "XLapJoint.element_count_complies", "XLapJoint.from_json", "XLapJoint.from_jsonstring", "XLapJoint.get_face_most_ortho_to_beam", "XLapJoint.get_face_most_towards_beam", "XLapJoint.restore_beams_from_keys", "XLapJoint.sha256", "XLapJoint.to_json", "XLapJoint.to_jsonstring", "XLapJoint.validate_data", "YButtJoint", "YButtJoint.ToString", "YButtJoint.add_extensions", "YButtJoint.add_features", "YButtJoint.check_elements_compatibility", "YButtJoint.copy", "YButtJoint.create", "YButtJoint.cross_beam_ref_side_index", "YButtJoint.element_count_complies", "YButtJoint.from_json", "YButtJoint.from_jsonstring", "YButtJoint.get_face_most_ortho_to_beam", "YButtJoint.get_face_most_towards_beam", "YButtJoint.get_miter_planes", "YButtJoint.main_beam_ref_side_index", "YButtJoint.restore_beams_from_keys", "YButtJoint.sha256", "YButtJoint.to_json", "YButtJoint.to_jsonstring", "YButtJoint.validate_data", "find_neighboring_elements", "CategoryRule", "CategoryRule.ToString", "CategoryRule.comply", "CategoryRule.get_category_rules", "CategoryRule.get_direct_rules", "CategoryRule.get_topology_rules", "CategoryRule.joints_from_beams_and_rules", "CategoryRule.reorder", "DebugInfomation", "DebugInfomation.ToString", "DebugInfomation.add_fastener_error", "DebugInfomation.add_feature_error", "DebugInfomation.add_joint_error", "DirectRule", "DirectRule.ToString", "DirectRule.comply", "DirectRule.contains", "DirectRule.get_category_rules", "DirectRule.get_direct_rules", "DirectRule.get_topology_rules", "DirectRule.joints_from_beams_and_rules", "FeatureDefinition", "FeatureDefinition.ToString", "JointDefinition", "JointDefinition.ToString", "JointDefinition.is_identical", "JointDefinition.match", "JointRule", "JointRule.comply", "JointRule.get_category_rules", "JointRule.get_direct_rules", "JointRule.get_topology_rules", "JointRule.joints_from_beams_and_rules", "SurfaceModel", "SurfaceModel.beam_category_names", "SurfaceModel.create_model", "SurfaceModel.cull_overlaps", "SurfaceModel.distance_between_elements", "SurfaceModel.generate_frame", "SurfaceModel.generate_perimeter_beams", "SurfaceModel.generate_plates", "SurfaceModel.generate_stud_lines", "SurfaceModel.generate_studs", "SurfaceModel.generate_windows", "SurfaceModel.get_beam_intersections", "SurfaceModel.get_interior_segment_indices", "SurfaceModel.offset_elements", "SurfaceModel.parse_loops", "SurfaceModel.trim_jack_studs", "SurfaceModel.trim_king_studs", "SurfaceModel.trim_studs", "TopologyRule", "TopologyRule.ToString", "TopologyRule.comply", "TopologyRule.get_category_rules", "TopologyRule.get_direct_rules", "TopologyRule.get_topology_rules", "TopologyRule.joints_from_beams_and_rules", "guess_joint_topology_2beams", "set_default_joints", "Beam", "Beam.ToString", "Beam.add_blank_extension", "Beam.add_feature", "Beam.add_features", "Beam.back_side", "Beam.compute_aabb", "Beam.compute_collision_mesh", "Beam.compute_geometry", "Beam.compute_obb", "Beam.compute_worldtransformation", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_endpoints", "Beam.from_json", "Beam.from_jsonstring", "Beam.front_side", "Beam.get_dimensions_relative_to_side", "Beam.opp_side", "Beam.remove_blank_extension", "Beam.remove_features", "Beam.reset", "Beam.sha256", "Beam.side_as_surface", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transformed", "Beam.validate_data", "Fastener", "Fastener.ToString", "Fastener.add_feature", "Fastener.compute_aabb", "Fastener.compute_collision_mesh", "Fastener.compute_geometry", "Fastener.compute_obb", "Fastener.compute_worldtransformation", "Fastener.copy", "Fastener.from_json", "Fastener.from_jsonstring", "Fastener.remove_blank_extension", "Fastener.remove_features", "Fastener.reset", "Fastener.sha256", "Fastener.to_json", "Fastener.to_jsonstring", "Fastener.transform", "Fastener.transformed", "Fastener.validate_data", "FastenerTimberInterface", "FastenerTimberInterface.ToString", "FastenerTimberInterface.copy", "FastenerTimberInterface.from_json", "FastenerTimberInterface.from_jsonstring", "FastenerTimberInterface.get_features", "FastenerTimberInterface.sha256", "FastenerTimberInterface.to_json", "FastenerTimberInterface.to_jsonstring", "FastenerTimberInterface.validate_data", "Plate", "Plate.ToString", "Plate.add_feature", "Plate.add_features", "Plate.compute_aabb", "Plate.compute_collision_mesh", "Plate.compute_geometry", "Plate.compute_obb", "Plate.compute_worldtransformation", "Plate.copy", "Plate.from_json", "Plate.from_jsonstring", "Plate.remove_blank_extension", "Plate.remove_features", "Plate.reset", "Plate.sha256", "Plate.side_as_surface", "Plate.to_json", "Plate.to_jsonstring", "Plate.transform", "Plate.transformed", "Plate.validate_data", "TimberElement", "TimberElement.ToString", "TimberElement.add_feature", "TimberElement.compute_aabb", "TimberElement.compute_collision_mesh", "TimberElement.compute_geometry", "TimberElement.compute_obb", "TimberElement.compute_worldtransformation", "TimberElement.copy", "TimberElement.from_json", "TimberElement.from_jsonstring", "TimberElement.remove_blank_extension", "TimberElement.remove_features", "TimberElement.reset", "TimberElement.sha256", "TimberElement.to_json", "TimberElement.to_jsonstring", "TimberElement.transform", "TimberElement.transformed", "TimberElement.validate_data", "Wall", "Wall.ToString", "Wall.add_feature", "Wall.compute_aabb", "Wall.compute_collision_mesh", "Wall.compute_geometry", "Wall.compute_obb", "Wall.compute_worldtransformation", "Wall.copy", "Wall.from_boundary", "Wall.from_brep", "Wall.from_json", "Wall.from_jsonstring", "Wall.remove_blank_extension", "Wall.remove_features", "Wall.reset", "Wall.rotate", "Wall.sha256", "Wall.to_json", "Wall.to_jsonstring", "Wall.transform", "Wall.transformed", "Wall.validate_data", "BeamJoiningError", "FastenerApplicationError", "FeatureApplicationError", "BTLxPart", "BTLxPart.et_point_vals", "BTLxPart.ref_side_from_face", "BTLxProcessing", "BTLxProcessing.ToString", "BTLxProcessing.add_subprocessing", "BTLxProcessing.copy", "BTLxProcessing.from_json", "BTLxProcessing.from_jsonstring", "BTLxProcessing.sha256", "BTLxProcessing.to_json", "BTLxProcessing.to_jsonstring", "BTLxProcessing.validate_data", "BTLxWriter", "BTLxWriter.model_to_xml", "BTLxWriter.register_type_serializer", "BTLxWriter.write", "DoubleCut", "DoubleCut.ToString", "DoubleCut.add_subprocessing", "DoubleCut.apply", "DoubleCut.copy", "DoubleCut.from_json", "DoubleCut.from_jsonstring", "DoubleCut.from_planes_and_beam", "DoubleCut.from_shapes_and_element", "DoubleCut.planes_from_params_and_beam", "DoubleCut.sha256", "DoubleCut.to_json", "DoubleCut.to_jsonstring", "DoubleCut.validate_data", "DovetailMortise", "DovetailMortise.ToString", "DovetailMortise.add_subprocessing", "DovetailMortise.apply", "DovetailMortise.copy", "DovetailMortise.define_dovetail_tool", "DovetailMortise.dovetail_cutting_frames_from_params_and_beam", "DovetailMortise.dovetail_volume_from_params_and_beam", "DovetailMortise.frame_from_params_and_beam", "DovetailMortise.from_frame_and_beam", "DovetailMortise.from_json", "DovetailMortise.from_jsonstring", "DovetailMortise.sha256", "DovetailMortise.to_json", "DovetailMortise.to_jsonstring", "DovetailMortise.validate_data", "DovetailTenon", "DovetailTenon.ToString", "DovetailTenon.add_subprocessing", "DovetailTenon.apply", "DovetailTenon.copy", "DovetailTenon.define_dovetail_tool", "DovetailTenon.dovetail_cutting_frames_from_params_and_beam", "DovetailTenon.dovetail_volume_from_params_and_beam", "DovetailTenon.frame_from_params_and_beam", "DovetailTenon.from_json", "DovetailTenon.from_jsonstring", "DovetailTenon.from_plane_and_beam", "DovetailTenon.sha256", "DovetailTenon.to_json", "DovetailTenon.to_jsonstring", "DovetailTenon.validate_data", "Drilling", "Drilling.ToString", "Drilling.add_subprocessing", "Drilling.apply", "Drilling.copy", "Drilling.cylinder_from_params_and_element", "Drilling.from_json", "Drilling.from_jsonstring", "Drilling.from_line_and_element", "Drilling.from_shapes_and_element", "Drilling.sha256", "Drilling.to_json", "Drilling.to_jsonstring", "Drilling.validate_data", "EdgePositionType", "FrenchRidgeLap", "FrenchRidgeLap.ToString", "FrenchRidgeLap.add_subprocessing", "FrenchRidgeLap.apply", "FrenchRidgeLap.copy", "FrenchRidgeLap.frame_from_params_and_beam", "FrenchRidgeLap.from_beam_beam_and_plane", "FrenchRidgeLap.from_json", "FrenchRidgeLap.from_jsonstring", "FrenchRidgeLap.lap_volume_from_params_and_beam", "FrenchRidgeLap.sha256", "FrenchRidgeLap.to_json", "FrenchRidgeLap.to_jsonstring", "FrenchRidgeLap.validate_data", "JackRafterCut", "JackRafterCut.ToString", "JackRafterCut.add_subprocessing", "JackRafterCut.apply", "JackRafterCut.copy", "JackRafterCut.from_json", "JackRafterCut.from_jsonstring", "JackRafterCut.from_plane_and_beam", "JackRafterCut.from_shapes_and_element", "JackRafterCut.plane_from_params_and_beam", "JackRafterCut.sha256", "JackRafterCut.to_json", "JackRafterCut.to_jsonstring", "JackRafterCut.validate_data", "Lap", "Lap.ToString", "Lap.add_subprocessing", "Lap.apply", "Lap.copy", "Lap.from_json", "Lap.from_jsonstring", "Lap.from_plane_and_beam", "Lap.from_shapes_and_element", "Lap.from_volume_and_beam", "Lap.sha256", "Lap.to_json", "Lap.to_jsonstring", "Lap.validate_data", "Lap.volume_from_params_and_beam", "LimitationTopType", "MachiningLimits", "Mortise", "Mortise.ToString", "Mortise.add_subprocessing", "Mortise.apply", "Mortise.copy", "Mortise.frame_from_params_and_beam", "Mortise.from_frame_and_beam", "Mortise.from_json", "Mortise.from_jsonstring", "Mortise.sha256", "Mortise.to_json", "Mortise.to_jsonstring", "Mortise.validate_data", "Mortise.volume_from_params_and_beam", "OrientationType", "Pocket", "Pocket.ToString", "Pocket.add_subprocessing", "Pocket.apply", "Pocket.copy", "Pocket.from_json", "Pocket.from_jsonstring", "Pocket.from_shapes_and_element", "Pocket.from_volume_and_element", "Pocket.sha256", "Pocket.to_json", "Pocket.to_jsonstring", "Pocket.validate_data", "Pocket.volume_from_params_and_element", "Slot", "Slot.ToString", "Slot.add_subprocessing", "Slot.apply", "Slot.copy", "Slot.from_json", "Slot.from_jsonstring", "Slot.from_plane_and_beam", "Slot.sha256", "Slot.to_json", "Slot.to_jsonstring", "Slot.validate_data", "StepJoint", "StepJoint.ToString", "StepJoint.add_subprocessing", "StepJoint.add_tenon", "StepJoint.apply", "StepJoint.copy", "StepJoint.from_json", "StepJoint.from_jsonstring", "StepJoint.from_plane_and_beam", "StepJoint.planes_from_params_and_beam", "StepJoint.sha256", "StepJoint.tenon_volume_from_params_and_beam", "StepJoint.to_json", "StepJoint.to_jsonstring", "StepJoint.validate_data", "StepJointNotch", "StepJointNotch.ToString", "StepJointNotch.add_mortise", "StepJointNotch.add_subprocessing", "StepJointNotch.apply", "StepJointNotch.copy", "StepJointNotch.from_json", "StepJointNotch.from_jsonstring", "StepJointNotch.from_plane_and_beam", "StepJointNotch.mortise_volume_from_params_and_beam", "StepJointNotch.planes_from_params_and_beam", "StepJointNotch.sha256", "StepJointNotch.to_json", "StepJointNotch.to_jsonstring", "StepJointNotch.validate_data", "StepShapeType", "Tenon", "Tenon.ToString", "Tenon.add_subprocessing", "Tenon.apply", "Tenon.copy", "Tenon.frame_from_params_and_beam", "Tenon.from_json", "Tenon.from_jsonstring", "Tenon.from_plane_and_beam", "Tenon.sha256", "Tenon.to_json", "Tenon.to_jsonstring", "Tenon.validate_data", "Tenon.volume_from_params_and_beam", "TenonShapeType", "add_gh_param", "clear_gh_params", "get_leaf_subclasses", "item_input_valid", "list_input_valid", "manage_dynamic_params", "rename_gh_input", "TimberModel", "TimberModel.ToString", "TimberModel.add_element", "TimberModel.add_elements", "TimberModel.add_group", "TimberModel.add_group_element", "TimberModel.add_interaction", "TimberModel.add_joint", "TimberModel.add_material", "TimberModel.assign_material", "TimberModel.compute_aabb", "TimberModel.compute_obb", "TimberModel.connect_adjacent_walls", "TimberModel.copy", "TimberModel.element_by_guid", "TimberModel.elements", "TimberModel.elements_connected_by", "TimberModel.from_json", "TimberModel.from_jsonstring", "TimberModel.get_elements_in_group", "TimberModel.get_interactions_for_element", "TimberModel.has_element", "TimberModel.has_group", "TimberModel.has_interaction", "TimberModel.has_material", "TimberModel.interactions", "TimberModel.materials", "TimberModel.process_joinery", "TimberModel.remove_element", "TimberModel.remove_interaction", "TimberModel.remove_joint", "TimberModel.rotate", "TimberModel.rotated", "TimberModel.scale", "TimberModel.scaled", "TimberModel.set_topologies", "TimberModel.sha256", "TimberModel.to_json", "TimberModel.to_jsonstring", "TimberModel.transform", "TimberModel.transform_numpy", "TimberModel.transformed", "TimberModel.transformed_numpy", "TimberModel.translate", "TimberModel.translated", "TimberModel.validate_data", "Actor", "Actor.get_name", "BuildingPlan", "BuildingPlan.ToString", "BuildingPlan.add_step", "BuildingPlan.copy", "BuildingPlan.from_json", "BuildingPlan.from_jsonstring", "BuildingPlan.sha256", "BuildingPlan.to_json", "BuildingPlan.to_jsonstring", "BuildingPlan.validate_data", "BuildingPlanParser", "BuildingPlanParser.parse", "BuildingPlanParser.serialize", "Instruction", "Instruction.ToString", "Instruction.copy", "Instruction.from_json", "Instruction.from_jsonstring", "Instruction.sha256", "Instruction.to_json", "Instruction.to_jsonstring", "Instruction.transform", "Instruction.validate_data", "LinearDimension", "LinearDimension.ToString", "LinearDimension.copy", "LinearDimension.from_json", "LinearDimension.from_jsonstring", "LinearDimension.sha256", "LinearDimension.to_json", "LinearDimension.to_jsonstring", "LinearDimension.transform", "LinearDimension.validate_data", "Model3d", "Model3d.ToString", "Model3d.copy", "Model3d.from_json", "Model3d.from_jsonstring", "Model3d.sha256", "Model3d.to_json", "Model3d.to_jsonstring", "Model3d.transform", "Model3d.validate_data", "SimpleSequenceGenerator", "Step", "Step.ToString", "Step.copy", "Step.from_json", "Step.from_jsonstring", "Step.sha256", "Step.to_json", "Step.to_jsonstring", "Step.transform", "Step.validate_data", "Text3d", "Text3d.ToString", "Text3d.copy", "Text3d.from_json", "Text3d.from_jsonstring", "Text3d.sha256", "Text3d.to_json", "Text3d.to_jsonstring", "Text3d.transform", "Text3d.validate_data", "find_neighboring_elements", "Citing", "Examples", "Create Joint", "COMPAS Timber Documentation", "Installation", "License", "Grasshopper plugin", "BTLx Contribution Guide", "Attributes", "Beams", "Design", "Examples", "Fabrication", "Features", "Joint Rules", "Model", "Show", "Utils", "Workflow"], "titleterms": {"actor": [750, 751], "add_blank_extens": 360, "add_el": [706, 707], "add_extens": [12, 33, 52, 70, 87, 104, 123, 140, 157, 174, 191, 209, 226, 244, 262, 279], "add_fastener_error": 308, "add_featur": [13, 34, 53, 71, 88, 105, 124, 141, 158, 175, 192, 210, 227, 245, 263, 280, 361, 362, 391, 421, 422, 443, 463], "add_feature_error": 309, "add_gh_param": 697, "add_group": 708, "add_group_el": 709, "add_interact": 710, "add_joint": 711, "add_joint_error": 310, "add_materi": 712, "add_mortis": 668, "add_step": 754, "add_subprocess": [492, 506, 520, 536, 552, 567, 581, 595, 612, 627, 641, 653, 669, 684], "add_tenon": 654, "api": 0, "appli": [507, 521, 537, 553, 568, 582, 596, 613, 628, 642, 655, 670, 685], "assembli": 818, "assign_materi": 713, "attribut": 825, "back_sid": 363, "bake": 834, "ballnodejoint": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "beam": [358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 826, 827, 833], "beam_category_nam": 332, "beamjoiningerror": 484, "birdsmouth": 831, "boxmap": 834, "btlx": [824, 829], "btlxpart": [487, 488, 489], "btlxprocess": [490, 491, 492, 493, 494, 495, 496, 497, 498, 499], "btlxwriter": [500, 501, 502, 503], "buildingplan": [752, 753, 754, 755, 756, 757, 758, 759, 760, 761], "buildingplanpars": [762, 763, 764], "butt": 831, "categori": 831, "categoryrul": [298, 299, 300, 301, 302, 303, 304, 305], "check": 825, "check_elements_compat": [14, 35, 54, 72, 89, 106, 125, 142, 159, 176, 193, 211, 228, 246, 264, 281], "cite": 817, "class": [1, 2, 3, 4, 5, 7, 8], "clear_gh_param": 698, "compa": 820, "compas_timb": [1, 2, 3, 4, 5, 6, 7, 8, 9], "compli": [300, 313, 326, 351], "compon": 831, "compute_aabb": [364, 392, 423, 444, 464, 714], "compute_collision_mesh": [365, 393, 424, 445, 465], "compute_geometri": [366, 394, 425, 446, 466], "compute_obb": [367, 395, 426, 447, 467, 715], "compute_worldtransform": [368, 396, 427, 448, 468], "conda": 821, "connect": 1, "connect_adjacent_wal": 716, "connectionsolv": [27, 28, 29, 30], "contain": 314, "content": 820, "contribut": 824, "copi": [15, 36, 55, 73, 90, 107, 126, 143, 160, 177, 194, 212, 229, 247, 265, 282, 369, 397, 411, 428, 449, 469, 493, 508, 522, 538, 554, 569, 583, 597, 614, 629, 643, 656, 671, 686, 717, 755, 767, 777, 787, 798, 808], "creat": [16, 37, 56, 74, 91, 108, 127, 144, 161, 178, 195, 213, 230, 248, 266, 283, 819], "create_model": 333, "cross_beam_ref_side_index": 284, "cull_overlap": 334, "custom": [825, 827], "cut": 830, "cylinder_from_params_and_el": 555, "debuginfom": [306, 307, 308, 309, 310], "decomposebeam": 826, "default": 831, "define_dovetail_tool": [196, 523, 539], "delet": 825, "depend": 820, "design": [2, 827], "develop": 821, "dimens": 827, "direct": 831, "directrul": [311, 312, 313, 314, 315, 316, 317, 318], "distance_between_el": 335, "document": 820, "doubl": 830, "doublecut": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517], "dovetail": 831, "dovetail_cutting_frames_from_params_and_beam": [524, 540], "dovetail_volume_from_params_and_beam": [525, 541], "dovetailmortis": [518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533], "dovetailtenon": [534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549], "drill": [550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 830], "edgepositiontyp": 564, "element": [3, 719], "element_by_guid": 718, "element_count_compli": [17, 38, 57, 75, 92, 109, 128, 145, 162, 179, 197, 214, 231, 249, 267, 285], "elements_connected_bi": 720, "endpoint_closest_to_point": 370, "error": [4, 833], "et_point_v": 488, "exampl": [818, 828], "except": 1, "extension_to_plan": 371, "fabric": [5, 829], "face": 833, "fasten": [389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408], "fastenerapplicationerror": 485, "fastenertimberinterfac": [409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "featur": [830, 833], "featureapplicationerror": 486, "featuredefinit": [319, 320], "find_intersecting_pair": 28, "find_neighboring_el": [297, 816], "find_topologi": 29, "find_wall_wall_topologi": 30, "findbeambyrhinoguid": 826, "frame_from_params_and_beam": [526, 542, 570, 615, 687], "french": 831, "frenchridgelap": [565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578], "from_beam_beam_and_plan": 571, "from_boundari": 470, "from_brep": 471, "from_centerlin": 372, "from_endpoint": 373, "from_frame_and_beam": [527, 616], "from_json": [18, 39, 58, 76, 93, 110, 129, 146, 163, 180, 198, 215, 232, 250, 268, 286, 374, 398, 412, 429, 450, 472, 494, 509, 528, 543, 556, 572, 584, 598, 617, 630, 644, 657, 672, 688, 721, 756, 768, 778, 788, 799, 809], "from_jsonstr": [19, 40, 59, 77, 94, 111, 130, 147, 164, 181, 199, 216, 233, 251, 269, 287, 375, 399, 413, 430, 451, 473, 495, 510, 529, 544, 557, 573, 585, 599, 618, 631, 645, 658, 673, 689, 722, 757, 769, 779, 789, 800, 810], "from_line_and_el": 558, "from_plane_and_beam": [545, 586, 600, 646, 659, 674, 690], "from_planes_and_beam": 511, "from_shapes_and_el": [512, 559, 587, 601, 632], "from_volume_and_beam": 602, "from_volume_and_el": 633, "front_sid": 376, "function": [1, 2, 6], "generate_fram": 336, "generate_perimeter_beam": 337, "generate_pl": 338, "generate_stud": 340, "generate_stud_lin": 339, "generate_window": 341, "get_beam_intersect": 342, "get_category_rul": [301, 315, 327, 352], "get_cutoff_plan": 112, "get_cutting_plan": 113, "get_dimensions_relative_to_sid": 377, "get_direct_rul": [302, 316, 328, 353], "get_elements_in_group": 723, "get_face_most_ortho_to_beam": [20, 41, 60, 78, 95, 114, 131, 148, 165, 182, 200, 217, 234, 252, 270, 288], "get_face_most_towards_beam": [21, 42, 61, 79, 96, 115, 132, 149, 166, 183, 201, 218, 235, 253, 271, 289], "get_featur": 414, "get_interactions_for_el": 724, "get_interior_segment_indic": 343, "get_leaf_subclass": 699, "get_miter_plan": 290, "get_nam": [49, 751], "get_topology_rul": [303, 317, 329, 354], "ghpython": 6, "grasshopp": 823, "guess_joint_topology_2beam": 356, "guid": 824, "has_el": 725, "has_group": 726, "has_interact": 727, "has_materi": 728, "index": 833, "indic": 820, "instal": 821, "instruct": [765, 766, 767, 768, 769, 770, 771, 772, 773, 774], "interact": 729, "is_ident": 323, "item_input_valid": 700, "jack": 830, "jackraftercut": [579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592], "join": 833, "joint": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 819, 831, 833], "jointdefinit": [321, 322, 323, 324], "jointrul": [325, 326, 327, 328, 329, 330], "joints_from_beams_and_rul": [304, 318, 330, 355], "jointtopologi": [48, 49], "l": 831, "lap": [593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 831], "lap_volume_from_params_and_beam": 574, "lapjoint": [121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "lbuttjoint": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "lfrenchridgelapjoint": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "licens": 822, "limitationtoptyp": 608, "lineardimens": [775, 776, 777, 778, 779, 780, 781, 782, 783, 784], "list_input_valid": 701, "llapjoint": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101], "lmiterjoint": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120], "machininglimit": 609, "main_beam_ref_side_index": 291, "manage_dynamic_param": 702, "match": 324, "materi": 730, "miter": 831, "model": [7, 827, 831, 832, 833], "model3d": [785, 786, 787, 788, 789, 790, 791, 792, 793, 794], "model_to_xml": 501, "mortis": [610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 831], "mortise_volume_from_params_and_beam": 675, "nulljoint": [138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "offset_el": 344, "opp_sid": 378, "option": 827, "orientationtyp": 624, "overrid": 831, "packag": 0, "pars": 763, "parse_loop": 345, "plan": 8, "plane_from_params_and_beam": 588, "planes_from_params_and_beam": [513, 660, 676], "plate": [419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "plugin": [9, 823], "pocket": [625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638], "process_joineri": 731, "rafter": 830, "ref_side_from_fac": 489, "refer": 0, "register_type_seri": 502, "remove_blank_extens": [379, 400, 431, 452, 474], "remove_el": 732, "remove_featur": [380, 401, 432, 453, 475], "remove_interact": 733, "remove_joint": 734, "rename_gh_input": 703, "reorder": 305, "reset": [381, 402, 433, 454, 476], "restore_beams_from_kei": [22, 43, 62, 80, 97, 116, 133, 150, 167, 184, 202, 219, 236, 254, 272, 292], "rhino": 9, "ridg": 831, "rotat": [477, 735, 736], "rule": 831, "scale": [737, 738], "serial": 764, "set_default_joint": 357, "set_default_valu": 255, "set_step_depth": 237, "set_topologi": 739, "sha256": [23, 44, 63, 81, 98, 117, 134, 151, 168, 185, 203, 220, 238, 256, 273, 293, 382, 403, 415, 434, 455, 478, 496, 514, 530, 546, 560, 575, 589, 603, 619, 634, 647, 661, 677, 691, 740, 758, 770, 780, 790, 801, 811], "show": 833, "side_as_surfac": [383, 435], "simplesequencegener": 795, "slot": [639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650], "stabl": 821, "standard": 825, "step": [796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 831], "stepjoint": [651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665], "stepjointnotch": [666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680], "stepshapetyp": 681, "summari": 831, "surfac": [827, 831, 833], "surfacemodel": [331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348], "t": 831, "tabl": [820, 831], "tbirdsmouthjoint": [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171], "tbuttjoint": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], "tdovetailjoint": [189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "tenon": [682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 831], "tenon_volume_from_params_and_beam": 662, "tenonmortisejoint": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "tenonshapetyp": 696, "text3d": [806, 807, 808, 809, 810, 811, 812, 813, 814, 815], "timber": [818, 820], "timberel": [441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460], "timbermodel": [704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749], "tlapjoint": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "to_json": [24, 45, 64, 82, 99, 118, 135, 152, 169, 186, 204, 221, 239, 257, 274, 294, 384, 404, 416, 436, 456, 479, 497, 515, 531, 547, 561, 576, 590, 604, 620, 635, 648, 663, 678, 692, 741, 759, 771, 781, 791, 802, 812], "to_jsonstr": [25, 46, 65, 83, 100, 119, 136, 153, 170, 187, 205, 222, 240, 258, 275, 295, 385, 405, 417, 437, 457, 480, 498, 516, 532, 548, 562, 577, 591, 605, 621, 636, 649, 664, 679, 693, 742, 760, 772, 782, 792, 803, 813], "topolog": 831, "topologi": 833, "topologyrul": [349, 350, 351, 352, 353, 354, 355], "tostr": [11, 32, 51, 69, 86, 103, 122, 139, 156, 173, 190, 208, 225, 243, 261, 278, 299, 307, 312, 320, 322, 350, 359, 390, 410, 420, 442, 462, 491, 505, 519, 535, 551, 566, 580, 594, 611, 626, 640, 652, 667, 683, 705, 753, 766, 776, 786, 797, 807], "transform": [386, 387, 406, 407, 438, 439, 458, 459, 481, 482, 743, 745, 773, 783, 793, 804, 814], "transform_numpi": 744, "transformed_numpi": 746, "translat": [747, 748], "trim_jack_stud": 346, "trim_king_stud": 347, "trim_stud": 348, "tstepjoint": [224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241], "type": [831, 833], "update_beam_rol": 66, "util": 834, "validate_data": [26, 47, 67, 84, 101, 120, 137, 154, 171, 188, 206, 223, 241, 259, 276, 296, 388, 408, 418, 440, 460, 483, 499, 517, 533, 549, 563, 578, 592, 606, 622, 637, 650, 665, 680, 694, 749, 761, 774, 784, 794, 805, 815], "volume_from_params_and_beam": [607, 623, 695], "volume_from_params_and_el": 638, "wall": [461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483], "workflow": 835, "write": [503, 829], "x": 831, "xlapjoint": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276], "ybuttjoint": [277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296]}})