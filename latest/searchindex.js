Search.setIndex({"docnames": ["api", "api/compas_timber.assembly", "api/compas_timber.connections", "api/compas_timber.consumers", "api/compas_timber.fabrication", "api/compas_timber.ghpython", "api/compas_timber.parts", "api/compas_timber.planning", "api/compas_timber.rhino", "api/generated/compas_timber.assembly.TimberAssembly", "api/generated/compas_timber.assembly.TimberAssembly.ToString", "api/generated/compas_timber.assembly.TimberAssembly.add_beam", "api/generated/compas_timber.assembly.TimberAssembly.add_connection", "api/generated/compas_timber.assembly.TimberAssembly.add_joint", "api/generated/compas_timber.assembly.TimberAssembly.add_part", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined", "api/generated/compas_timber.assembly.TimberAssembly.connections", "api/generated/compas_timber.assembly.TimberAssembly.contains", "api/generated/compas_timber.assembly.TimberAssembly.copy", "api/generated/compas_timber.assembly.TimberAssembly.delete_connection", "api/generated/compas_timber.assembly.TimberAssembly.delete_part", "api/generated/compas_timber.assembly.TimberAssembly.find", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key", "api/generated/compas_timber.assembly.TimberAssembly.from_json", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.parts", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint", "api/generated/compas_timber.assembly.TimberAssembly.set_topologies", "api/generated/compas_timber.assembly.TimberAssembly.sha256", "api/generated/compas_timber.assembly.TimberAssembly.to_json", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.transform", "api/generated/compas_timber.assembly.TimberAssembly.transform_numpy", "api/generated/compas_timber.assembly.TimberAssembly.transformed", "api/generated/compas_timber.assembly.TimberAssembly.transformed_numpy", "api/generated/compas_timber.assembly.TimberAssembly.validate_data", "api/generated/compas_timber.connections.BeamJoinningError", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.FrenchRidgeLapJoint", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.ToString", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_features", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.check_geometry", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.copy", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.create", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_json", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.sha256", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_json", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.validate_data", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.from_jsonstring", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.to_jsonstring", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring", "api/generated/compas_timber.connections.LButtJoint.get_cross_cutting_plane", "api/generated/compas_timber.connections.LButtJoint.get_main_cutting_plane", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LHalfLapJoint", "api/generated/compas_timber.connections.LHalfLapJoint.ToString", "api/generated/compas_timber.connections.LHalfLapJoint.add_features", "api/generated/compas_timber.connections.LHalfLapJoint.copy", "api/generated/compas_timber.connections.LHalfLapJoint.create", "api/generated/compas_timber.connections.LHalfLapJoint.from_json", "api/generated/compas_timber.connections.LHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LHalfLapJoint.sha256", "api/generated/compas_timber.connections.LHalfLapJoint.to_json", "api/generated/compas_timber.connections.LHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.LapJoint", "api/generated/compas_timber.connections.LapJoint.ToString", "api/generated/compas_timber.connections.LapJoint.add_features", "api/generated/compas_timber.connections.LapJoint.copy", "api/generated/compas_timber.connections.LapJoint.create", "api/generated/compas_timber.connections.LapJoint.from_json", "api/generated/compas_timber.connections.LapJoint.from_jsonstring", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LapJoint.sha256", "api/generated/compas_timber.connections.LapJoint.to_json", "api/generated/compas_timber.connections.LapJoint.to_jsonstring", "api/generated/compas_timber.connections.LapJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring", "api/generated/compas_timber.connections.TButtJoint.get_cutting_plane", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.THalfLapJoint", "api/generated/compas_timber.connections.THalfLapJoint.ToString", "api/generated/compas_timber.connections.THalfLapJoint.add_features", "api/generated/compas_timber.connections.THalfLapJoint.copy", "api/generated/compas_timber.connections.THalfLapJoint.create", "api/generated/compas_timber.connections.THalfLapJoint.from_json", "api/generated/compas_timber.connections.THalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.THalfLapJoint.sha256", "api/generated/compas_timber.connections.THalfLapJoint.to_json", "api/generated/compas_timber.connections.THalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.validate_data", "api/generated/compas_timber.connections.XHalfLapJoint", "api/generated/compas_timber.connections.XHalfLapJoint.ToString", "api/generated/compas_timber.connections.XHalfLapJoint.add_features", "api/generated/compas_timber.connections.XHalfLapJoint.copy", "api/generated/compas_timber.connections.XHalfLapJoint.create", "api/generated/compas_timber.connections.XHalfLapJoint.from_json", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.XHalfLapJoint.sha256", "api/generated/compas_timber.connections.XHalfLapJoint.to_json", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data", "api/generated/compas_timber.connections.beam_side_incidence", "api/generated/compas_timber.connections.find_neighboring_beams", "api/generated/compas_timber.consumers.BeamGeometry", "api/generated/compas_timber.consumers.BrepGeometryConsumer", "api/generated/compas_timber.consumers.CutFeature", "api/generated/compas_timber.consumers.CutFeature.ToString", "api/generated/compas_timber.consumers.CutFeature.copy", "api/generated/compas_timber.consumers.CutFeature.from_json", "api/generated/compas_timber.consumers.CutFeature.from_jsonstring", "api/generated/compas_timber.consumers.CutFeature.sha256", "api/generated/compas_timber.consumers.CutFeature.to_json", "api/generated/compas_timber.consumers.CutFeature.to_jsonstring", "api/generated/compas_timber.consumers.CutFeature.validate_data", "api/generated/compas_timber.consumers.CutFeatureGeometry", "api/generated/compas_timber.consumers.CutFeatureGeometry.apply", "api/generated/compas_timber.consumers.DrillFeature", "api/generated/compas_timber.consumers.DrillFeature.ToString", "api/generated/compas_timber.consumers.DrillFeature.copy", "api/generated/compas_timber.consumers.DrillFeature.from_json", "api/generated/compas_timber.consumers.DrillFeature.from_jsonstring", "api/generated/compas_timber.consumers.DrillFeature.sha256", "api/generated/compas_timber.consumers.DrillFeature.to_json", "api/generated/compas_timber.consumers.DrillFeature.to_jsonstring", "api/generated/compas_timber.consumers.DrillFeature.validate_data", "api/generated/compas_timber.consumers.DrillFeatureGeometry", "api/generated/compas_timber.consumers.DrillFeatureGeometry.apply", "api/generated/compas_timber.consumers.FeatureApplicationError", "api/generated/compas_timber.consumers.FeatureApplicator", "api/generated/compas_timber.consumers.FeatureApplicator.apply", "api/generated/compas_timber.consumers.MillVolume", "api/generated/compas_timber.consumers.MillVolume.ToString", "api/generated/compas_timber.consumers.MillVolume.copy", "api/generated/compas_timber.consumers.MillVolume.from_json", "api/generated/compas_timber.consumers.MillVolume.from_jsonstring", "api/generated/compas_timber.consumers.MillVolume.sha256", "api/generated/compas_timber.consumers.MillVolume.to_json", "api/generated/compas_timber.consumers.MillVolume.to_jsonstring", "api/generated/compas_timber.consumers.MillVolume.validate_data", "api/generated/compas_timber.consumers.MillVolumeGeometry", "api/generated/compas_timber.consumers.MillVolumeGeometry.apply", "api/generated/compas_timber.fabrication.BTLx", "api/generated/compas_timber.fabrication.BTLx.btlx_string", "api/generated/compas_timber.fabrication.BTLx.process_assembly", "api/generated/compas_timber.fabrication.BTLx.register_joint", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints", "api/generated/compas_timber.fabrication.BTLxJackCut", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process", "api/generated/compas_timber.fabrication.BTLxProcess", "api/generated/compas_timber.fabrication.FrenchRidgeFactory", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings", "api/generated/compas_timber.fabrication.LButtFactory", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings", "api/generated/compas_timber.fabrication.LMiterFactory", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings", "api/generated/compas_timber.fabrication.TButtFactory", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings", "api/generated/compas_timber.ghpython.CategoryRule", "api/generated/compas_timber.ghpython.CategoryRule.ToString", "api/generated/compas_timber.ghpython.CategoryRule.comply", "api/generated/compas_timber.ghpython.CategoryRule.reorder", "api/generated/compas_timber.ghpython.DebugInfomation", "api/generated/compas_timber.ghpython.DebugInfomation.ToString", "api/generated/compas_timber.ghpython.DebugInfomation.add_feature_error", "api/generated/compas_timber.ghpython.DebugInfomation.add_joint_error", "api/generated/compas_timber.ghpython.DirectRule", "api/generated/compas_timber.ghpython.DirectRule.ToString", "api/generated/compas_timber.ghpython.DirectRule.comply", "api/generated/compas_timber.ghpython.FeatureDefinition", "api/generated/compas_timber.ghpython.FeatureDefinition.ToString", "api/generated/compas_timber.ghpython.JointDefinition", "api/generated/compas_timber.ghpython.JointDefinition.ToString", "api/generated/compas_timber.ghpython.JointDefinition.is_identical", "api/generated/compas_timber.ghpython.JointDefinition.match", "api/generated/compas_timber.ghpython.JointOptions", "api/generated/compas_timber.ghpython.JointOptions.ToString", "api/generated/compas_timber.ghpython.JointOptions.is_identical", "api/generated/compas_timber.ghpython.TopologyRule", "api/generated/compas_timber.ghpython.TopologyRule.ToString", "api/generated/compas_timber.ghpython.TopologyRule.comply", "api/generated/compas_timber.parts.Beam", "api/generated/compas_timber.parts.Beam.ToString", "api/generated/compas_timber.parts.Beam.add_blank_extension", "api/generated/compas_timber.parts.Beam.add_feature", "api/generated/compas_timber.parts.Beam.add_features", "api/generated/compas_timber.parts.Beam.align_z", "api/generated/compas_timber.parts.Beam.clear_features", "api/generated/compas_timber.parts.Beam.copy", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point", "api/generated/compas_timber.parts.Beam.extension_to_plane", "api/generated/compas_timber.parts.Beam.from_centerline", "api/generated/compas_timber.parts.Beam.from_endpoints", "api/generated/compas_timber.parts.Beam.from_json", "api/generated/compas_timber.parts.Beam.from_jsonstring", "api/generated/compas_timber.parts.Beam.get_geometry", "api/generated/compas_timber.parts.Beam.remove_blank_extension", "api/generated/compas_timber.parts.Beam.remove_features", "api/generated/compas_timber.parts.Beam.sha256", "api/generated/compas_timber.parts.Beam.to_json", "api/generated/compas_timber.parts.Beam.to_jsonstring", "api/generated/compas_timber.parts.Beam.transform", "api/generated/compas_timber.parts.Beam.transform_numpy", "api/generated/compas_timber.parts.Beam.transformed", "api/generated/compas_timber.parts.Beam.transformed_numpy", "api/generated/compas_timber.parts.Beam.validate_data", "api/generated/compas_timber.planning.Actor", "api/generated/compas_timber.planning.Actor.get_name", "api/generated/compas_timber.planning.BuildingPlan", "api/generated/compas_timber.planning.BuildingPlan.ToString", "api/generated/compas_timber.planning.BuildingPlan.add_step", "api/generated/compas_timber.planning.BuildingPlan.copy", "api/generated/compas_timber.planning.BuildingPlan.from_json", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.sha256", "api/generated/compas_timber.planning.BuildingPlan.to_json", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.validate_data", "api/generated/compas_timber.planning.SimpleSequenceGenerator", "api/generated/compas_timber.planning.Step", "api/generated/compas_timber.planning.Step.ToString", "api/generated/compas_timber.planning.Step.copy", "api/generated/compas_timber.planning.Step.from_json", "api/generated/compas_timber.planning.Step.from_jsonstring", "api/generated/compas_timber.planning.Step.sha256", "api/generated/compas_timber.planning.Step.to_json", "api/generated/compas_timber.planning.Step.to_jsonstring", "api/generated/compas_timber.planning.Step.transform", "api/generated/compas_timber.planning.Step.validate_data", "api/generated/compas_timber.rhino.find_neighboring_beams", "citing", "examples", "examples/create_joint", "index", "installation", "license", "tutorials", "tutorials/BTLx_contribution_guide", "tutorials/grasshopper/assembly", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beam", "tutorials/grasshopper/examples", "tutorials/grasshopper/features", "tutorials/grasshopper/joints", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "filenames": ["api.rst", "api/compas_timber.assembly.rst", "api/compas_timber.connections.rst", "api/compas_timber.consumers.rst", "api/compas_timber.fabrication.rst", "api/compas_timber.ghpython.rst", "api/compas_timber.parts.rst", "api/compas_timber.planning.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.assembly.TimberAssembly.rst", "api/generated/compas_timber.assembly.TimberAssembly.ToString.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_beam.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined.rst", "api/generated/compas_timber.assembly.TimberAssembly.connections.rst", "api/generated/compas_timber.assembly.TimberAssembly.contains.rst", "api/generated/compas_timber.assembly.TimberAssembly.copy.rst", "api/generated/compas_timber.assembly.TimberAssembly.delete_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.delete_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.find.rst", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.parts.rst", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.set_topologies.rst", "api/generated/compas_timber.assembly.TimberAssembly.sha256.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.transform.rst", "api/generated/compas_timber.assembly.TimberAssembly.transform_numpy.rst", "api/generated/compas_timber.assembly.TimberAssembly.transformed.rst", "api/generated/compas_timber.assembly.TimberAssembly.transformed_numpy.rst", "api/generated/compas_timber.assembly.TimberAssembly.validate_data.rst", "api/generated/compas_timber.connections.BeamJoinningError.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.ToString.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_features.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.check_geometry.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.copy.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.create.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_json.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.sha256.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_json.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.validate_data.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.from_json.rst", "api/generated/compas_timber.connections.Joint.from_jsonstring.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_json.rst", "api/generated/compas_timber.connections.Joint.to_jsonstring.rst", "api/generated/compas_timber.connections.Joint.validate_data.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.from_json.rst", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.get_cross_cutting_plane.rst", "api/generated/compas_timber.connections.LButtJoint.get_main_cutting_plane.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.to_json.rst", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.validate_data.rst", "api/generated/compas_timber.connections.LHalfLapJoint.rst", "api/generated/compas_timber.connections.LHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.LHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.LHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.LHalfLapJoint.create.rst", "api/generated/compas_timber.connections.LHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.LHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.LHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.LHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.from_json.rst", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_json.rst", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_data.rst", "api/generated/compas_timber.connections.LapJoint.rst", "api/generated/compas_timber.connections.LapJoint.ToString.rst", "api/generated/compas_timber.connections.LapJoint.add_features.rst", "api/generated/compas_timber.connections.LapJoint.copy.rst", "api/generated/compas_timber.connections.LapJoint.create.rst", "api/generated/compas_timber.connections.LapJoint.from_json.rst", "api/generated/compas_timber.connections.LapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LapJoint.sha256.rst", "api/generated/compas_timber.connections.LapJoint.to_json.rst", "api/generated/compas_timber.connections.LapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.validate_data.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.from_json.rst", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.get_cutting_plane.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.to_json.rst", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.validate_data.rst", "api/generated/compas_timber.connections.THalfLapJoint.rst", "api/generated/compas_timber.connections.THalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.THalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.THalfLapJoint.copy.rst", "api/generated/compas_timber.connections.THalfLapJoint.create.rst", "api/generated/compas_timber.connections.THalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.THalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.THalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.THalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.THalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.THalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.THalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.rst", "api/generated/compas_timber.connections.XHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.XHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.XHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.XHalfLapJoint.create.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.XHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.beam_side_incidence.rst", "api/generated/compas_timber.connections.find_neighboring_beams.rst", "api/generated/compas_timber.consumers.BeamGeometry.rst", "api/generated/compas_timber.consumers.BrepGeometryConsumer.rst", "api/generated/compas_timber.consumers.CutFeature.rst", "api/generated/compas_timber.consumers.CutFeature.ToString.rst", "api/generated/compas_timber.consumers.CutFeature.copy.rst", "api/generated/compas_timber.consumers.CutFeature.from_json.rst", "api/generated/compas_timber.consumers.CutFeature.from_jsonstring.rst", "api/generated/compas_timber.consumers.CutFeature.sha256.rst", "api/generated/compas_timber.consumers.CutFeature.to_json.rst", "api/generated/compas_timber.consumers.CutFeature.to_jsonstring.rst", "api/generated/compas_timber.consumers.CutFeature.validate_data.rst", "api/generated/compas_timber.consumers.CutFeatureGeometry.rst", "api/generated/compas_timber.consumers.CutFeatureGeometry.apply.rst", "api/generated/compas_timber.consumers.DrillFeature.rst", "api/generated/compas_timber.consumers.DrillFeature.ToString.rst", "api/generated/compas_timber.consumers.DrillFeature.copy.rst", "api/generated/compas_timber.consumers.DrillFeature.from_json.rst", "api/generated/compas_timber.consumers.DrillFeature.from_jsonstring.rst", "api/generated/compas_timber.consumers.DrillFeature.sha256.rst", "api/generated/compas_timber.consumers.DrillFeature.to_json.rst", "api/generated/compas_timber.consumers.DrillFeature.to_jsonstring.rst", "api/generated/compas_timber.consumers.DrillFeature.validate_data.rst", "api/generated/compas_timber.consumers.DrillFeatureGeometry.rst", "api/generated/compas_timber.consumers.DrillFeatureGeometry.apply.rst", "api/generated/compas_timber.consumers.FeatureApplicationError.rst", "api/generated/compas_timber.consumers.FeatureApplicator.rst", "api/generated/compas_timber.consumers.FeatureApplicator.apply.rst", "api/generated/compas_timber.consumers.MillVolume.rst", "api/generated/compas_timber.consumers.MillVolume.ToString.rst", "api/generated/compas_timber.consumers.MillVolume.copy.rst", "api/generated/compas_timber.consumers.MillVolume.from_json.rst", "api/generated/compas_timber.consumers.MillVolume.from_jsonstring.rst", "api/generated/compas_timber.consumers.MillVolume.sha256.rst", "api/generated/compas_timber.consumers.MillVolume.to_json.rst", "api/generated/compas_timber.consumers.MillVolume.to_jsonstring.rst", "api/generated/compas_timber.consumers.MillVolume.validate_data.rst", "api/generated/compas_timber.consumers.MillVolumeGeometry.rst", "api/generated/compas_timber.consumers.MillVolumeGeometry.apply.rst", "api/generated/compas_timber.fabrication.BTLx.rst", "api/generated/compas_timber.fabrication.BTLx.btlx_string.rst", "api/generated/compas_timber.fabrication.BTLx.process_assembly.rst", "api/generated/compas_timber.fabrication.BTLx.register_joint.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process.rst", "api/generated/compas_timber.fabrication.BTLxProcess.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LButtFactory.rst", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LMiterFactory.rst", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.TButtFactory.rst", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings.rst", "api/generated/compas_timber.ghpython.CategoryRule.rst", "api/generated/compas_timber.ghpython.CategoryRule.ToString.rst", "api/generated/compas_timber.ghpython.CategoryRule.comply.rst", "api/generated/compas_timber.ghpython.CategoryRule.reorder.rst", "api/generated/compas_timber.ghpython.DebugInfomation.rst", "api/generated/compas_timber.ghpython.DebugInfomation.ToString.rst", "api/generated/compas_timber.ghpython.DebugInfomation.add_feature_error.rst", "api/generated/compas_timber.ghpython.DebugInfomation.add_joint_error.rst", "api/generated/compas_timber.ghpython.DirectRule.rst", "api/generated/compas_timber.ghpython.DirectRule.ToString.rst", "api/generated/compas_timber.ghpython.DirectRule.comply.rst", "api/generated/compas_timber.ghpython.FeatureDefinition.rst", "api/generated/compas_timber.ghpython.FeatureDefinition.ToString.rst", "api/generated/compas_timber.ghpython.JointDefinition.rst", "api/generated/compas_timber.ghpython.JointDefinition.ToString.rst", "api/generated/compas_timber.ghpython.JointDefinition.is_identical.rst", "api/generated/compas_timber.ghpython.JointDefinition.match.rst", "api/generated/compas_timber.ghpython.JointOptions.rst", "api/generated/compas_timber.ghpython.JointOptions.ToString.rst", "api/generated/compas_timber.ghpython.JointOptions.is_identical.rst", "api/generated/compas_timber.ghpython.TopologyRule.rst", "api/generated/compas_timber.ghpython.TopologyRule.ToString.rst", "api/generated/compas_timber.ghpython.TopologyRule.comply.rst", "api/generated/compas_timber.parts.Beam.rst", "api/generated/compas_timber.parts.Beam.ToString.rst", "api/generated/compas_timber.parts.Beam.add_blank_extension.rst", "api/generated/compas_timber.parts.Beam.add_feature.rst", "api/generated/compas_timber.parts.Beam.add_features.rst", "api/generated/compas_timber.parts.Beam.align_z.rst", "api/generated/compas_timber.parts.Beam.clear_features.rst", "api/generated/compas_timber.parts.Beam.copy.rst", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.parts.Beam.extension_to_plane.rst", "api/generated/compas_timber.parts.Beam.from_centerline.rst", "api/generated/compas_timber.parts.Beam.from_endpoints.rst", "api/generated/compas_timber.parts.Beam.from_json.rst", "api/generated/compas_timber.parts.Beam.from_jsonstring.rst", "api/generated/compas_timber.parts.Beam.get_geometry.rst", "api/generated/compas_timber.parts.Beam.remove_blank_extension.rst", "api/generated/compas_timber.parts.Beam.remove_features.rst", "api/generated/compas_timber.parts.Beam.sha256.rst", "api/generated/compas_timber.parts.Beam.to_json.rst", "api/generated/compas_timber.parts.Beam.to_jsonstring.rst", "api/generated/compas_timber.parts.Beam.transform.rst", "api/generated/compas_timber.parts.Beam.transform_numpy.rst", "api/generated/compas_timber.parts.Beam.transformed.rst", "api/generated/compas_timber.parts.Beam.transformed_numpy.rst", "api/generated/compas_timber.parts.Beam.validate_data.rst", "api/generated/compas_timber.planning.Actor.rst", "api/generated/compas_timber.planning.Actor.get_name.rst", "api/generated/compas_timber.planning.BuildingPlan.rst", "api/generated/compas_timber.planning.BuildingPlan.ToString.rst", "api/generated/compas_timber.planning.BuildingPlan.add_step.rst", "api/generated/compas_timber.planning.BuildingPlan.copy.rst", "api/generated/compas_timber.planning.BuildingPlan.from_json.rst", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.sha256.rst", "api/generated/compas_timber.planning.BuildingPlan.to_json.rst", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.validate_data.rst", "api/generated/compas_timber.planning.SimpleSequenceGenerator.rst", "api/generated/compas_timber.planning.Step.rst", "api/generated/compas_timber.planning.Step.ToString.rst", "api/generated/compas_timber.planning.Step.copy.rst", "api/generated/compas_timber.planning.Step.from_json.rst", "api/generated/compas_timber.planning.Step.from_jsonstring.rst", "api/generated/compas_timber.planning.Step.sha256.rst", "api/generated/compas_timber.planning.Step.to_json.rst", "api/generated/compas_timber.planning.Step.to_jsonstring.rst", "api/generated/compas_timber.planning.Step.transform.rst", "api/generated/compas_timber.planning.Step.validate_data.rst", "api/generated/compas_timber.rhino.find_neighboring_beams.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "license.rst", "tutorials.rst", "tutorials/BTLx_contribution_guide.rst", "tutorials/grasshopper/assembly.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beam.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joints.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "titles": ["API Reference", "compas_timber.assembly", "compas_timber.connections", "compas_timber.consumers", "compas_timber.fabrication", "compas_timber.ghpython", "compas_timber.parts", "compas_timber.planning", "rhino", "TimberAssembly", "TimberAssembly.ToString", "TimberAssembly.add_beam", "TimberAssembly.add_connection", "TimberAssembly.add_joint", "TimberAssembly.add_part", "TimberAssembly.are_parts_joined", "TimberAssembly.connections", "TimberAssembly.contains", "TimberAssembly.copy", "TimberAssembly.delete_connection", "TimberAssembly.delete_part", "TimberAssembly.find", "TimberAssembly.find_by_key", "TimberAssembly.from_json", "TimberAssembly.from_jsonstring", "TimberAssembly.parts", "TimberAssembly.remove_joint", "TimberAssembly.set_topologies", "TimberAssembly.sha256", "TimberAssembly.to_json", "TimberAssembly.to_jsonstring", "TimberAssembly.transform", "TimberAssembly.transform_numpy", "TimberAssembly.transformed", "TimberAssembly.transformed_numpy", "TimberAssembly.validate_data", "BeamJoinningError", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "FrenchRidgeLapJoint", "FrenchRidgeLapJoint.ToString", "FrenchRidgeLapJoint.add_features", "FrenchRidgeLapJoint.check_geometry", "FrenchRidgeLapJoint.copy", "FrenchRidgeLapJoint.create", "FrenchRidgeLapJoint.from_json", "FrenchRidgeLapJoint.from_jsonstring", "FrenchRidgeLapJoint.restore_beams_from_keys", "FrenchRidgeLapJoint.sha256", "FrenchRidgeLapJoint.to_json", "FrenchRidgeLapJoint.to_jsonstring", "FrenchRidgeLapJoint.validate_data", "Joint", "Joint.ToString", "Joint.add_features", "Joint.copy", "Joint.create", "Joint.from_json", "Joint.from_jsonstring", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_json", "Joint.to_jsonstring", "Joint.validate_data", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_features", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.from_json", "LButtJoint.from_jsonstring", "LButtJoint.get_cross_cutting_plane", "LButtJoint.get_main_cutting_plane", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.to_json", "LButtJoint.to_jsonstring", "LButtJoint.validate_data", "LHalfLapJoint", "LHalfLapJoint.ToString", "LHalfLapJoint.add_features", "LHalfLapJoint.copy", "LHalfLapJoint.create", "LHalfLapJoint.from_json", "LHalfLapJoint.from_jsonstring", "LHalfLapJoint.get_cross_cutting_frame", "LHalfLapJoint.get_main_cutting_frame", "LHalfLapJoint.restore_beams_from_keys", "LHalfLapJoint.sha256", "LHalfLapJoint.to_json", "LHalfLapJoint.to_jsonstring", "LHalfLapJoint.validate_data", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_features", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.from_json", "LMiterJoint.from_jsonstring", "LMiterJoint.get_cutting_planes", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_json", "LMiterJoint.to_jsonstring", "LMiterJoint.validate_data", "LapJoint", "LapJoint.ToString", "LapJoint.add_features", "LapJoint.copy", "LapJoint.create", "LapJoint.from_json", "LapJoint.from_jsonstring", "LapJoint.get_cross_cutting_frame", "LapJoint.get_main_cutting_frame", "LapJoint.restore_beams_from_keys", "LapJoint.sha256", "LapJoint.to_json", "LapJoint.to_jsonstring", "LapJoint.validate_data", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_features", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.from_json", "TButtJoint.from_jsonstring", "TButtJoint.get_cutting_plane", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.to_json", "TButtJoint.to_jsonstring", "TButtJoint.validate_data", "THalfLapJoint", "THalfLapJoint.ToString", "THalfLapJoint.add_features", "THalfLapJoint.copy", "THalfLapJoint.create", "THalfLapJoint.from_json", "THalfLapJoint.from_jsonstring", "THalfLapJoint.get_cross_cutting_frame", "THalfLapJoint.get_main_cutting_frame", "THalfLapJoint.restore_beams_from_keys", "THalfLapJoint.sha256", "THalfLapJoint.to_json", "THalfLapJoint.to_jsonstring", "THalfLapJoint.validate_data", "XHalfLapJoint", "XHalfLapJoint.ToString", "XHalfLapJoint.add_features", "XHalfLapJoint.copy", "XHalfLapJoint.create", "XHalfLapJoint.from_json", "XHalfLapJoint.from_jsonstring", "XHalfLapJoint.get_cross_cutting_frame", "XHalfLapJoint.get_main_cutting_frame", "XHalfLapJoint.restore_beams_from_keys", "XHalfLapJoint.sha256", "XHalfLapJoint.to_json", "XHalfLapJoint.to_jsonstring", "XHalfLapJoint.validate_data", "beam_side_incidence", "find_neighboring_beams", "BeamGeometry", "BrepGeometryConsumer", "CutFeature", "CutFeature.ToString", "CutFeature.copy", "CutFeature.from_json", "CutFeature.from_jsonstring", "CutFeature.sha256", "CutFeature.to_json", "CutFeature.to_jsonstring", "CutFeature.validate_data", "CutFeatureGeometry", "CutFeatureGeometry.apply", "DrillFeature", "DrillFeature.ToString", "DrillFeature.copy", "DrillFeature.from_json", "DrillFeature.from_jsonstring", "DrillFeature.sha256", "DrillFeature.to_json", "DrillFeature.to_jsonstring", "DrillFeature.validate_data", "DrillFeatureGeometry", "DrillFeatureGeometry.apply", "FeatureApplicationError", "FeatureApplicator", "FeatureApplicator.apply", "MillVolume", "MillVolume.ToString", "MillVolume.copy", "MillVolume.from_json", "MillVolume.from_jsonstring", "MillVolume.sha256", "MillVolume.to_json", "MillVolume.to_jsonstring", "MillVolume.validate_data", "MillVolumeGeometry", "MillVolumeGeometry.apply", "BTLx", "BTLx.btlx_string", "BTLx.process_assembly", "BTLx.register_joint", "BTLxFrenchRidgeLap", "BTLxFrenchRidgeLap.create_process", "BTLxFrenchRidgeLap.get_params", "BTLxFrenchRidgeLap.process_joints", "BTLxJackCut", "BTLxJackCut.create_process", "BTLxJackCut.generate_process", "BTLxProcess", "FrenchRidgeFactory", "FrenchRidgeFactory.apply_processings", "LButtFactory", "LButtFactory.apply_processings", "LMiterFactory", "LMiterFactory.apply_processings", "TButtFactory", "TButtFactory.apply_processings", "CategoryRule", "CategoryRule.ToString", "CategoryRule.comply", "CategoryRule.reorder", "DebugInfomation", "DebugInfomation.ToString", "DebugInfomation.add_feature_error", "DebugInfomation.add_joint_error", "DirectRule", "DirectRule.ToString", "DirectRule.comply", "FeatureDefinition", "FeatureDefinition.ToString", "JointDefinition", "JointDefinition.ToString", "JointDefinition.is_identical", "JointDefinition.match", "JointOptions", "JointOptions.ToString", "JointOptions.is_identical", "TopologyRule", "TopologyRule.ToString", "TopologyRule.comply", "Beam", "Beam.ToString", "Beam.add_blank_extension", "Beam.add_feature", "Beam.add_features", "Beam.align_z", "Beam.clear_features", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_endpoints", "Beam.from_json", "Beam.from_jsonstring", "Beam.get_geometry", "Beam.remove_blank_extension", "Beam.remove_features", "Beam.sha256", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transform_numpy", "Beam.transformed", "Beam.transformed_numpy", "Beam.validate_data", "Actor", "Actor.get_name", "BuildingPlan", "BuildingPlan.ToString", "BuildingPlan.add_step", "BuildingPlan.copy", "BuildingPlan.from_json", "BuildingPlan.from_jsonstring", "BuildingPlan.sha256", "BuildingPlan.to_json", "BuildingPlan.to_jsonstring", "BuildingPlan.validate_data", "SimpleSequenceGenerator", "Step", "Step.ToString", "Step.copy", "Step.from_json", "Step.from_jsonstring", "Step.sha256", "Step.to_json", "Step.to_jsonstring", "Step.transform", "Step.validate_data", "find_neighboring_beams", "Citing", "Examples", "Create Joint", "COMPAS TIMBER", "Installation", "License", "Grasshopper plugin", "BTLx Contribution Guide", "Assembly", "Attributes", "Beam", "Examples", "Features", "Joints", "Show", "Utils", "Workflow"], "terms": {"compas_timb": [0, 9, 36, 37, 40, 45, 53, 57, 60, 65, 67, 71, 81, 85, 95, 99, 108, 112, 122, 126, 135, 139, 149, 153, 163, 164, 165, 166, 167, 176, 177, 178, 187, 188, 189, 190, 192, 201, 202, 203, 206, 207, 211, 214, 215, 217, 219, 221, 223, 227, 231, 234, 236, 240, 243, 246, 271, 273, 283, 284, 294, 295, 298, 299], "assembli": [0, 9, 11, 12, 13, 14, 17, 20, 21, 22, 25, 26, 40, 45, 48, 57, 60, 67, 71, 76, 81, 85, 90, 95, 99, 103, 108, 112, 117, 122, 126, 130, 135, 139, 144, 149, 153, 158, 166, 203, 205, 249, 271, 283, 297, 298, 301, 308, 309, 311], "part": [0, 9, 12, 13, 14, 15, 16, 19, 20, 21, 22, 43, 60, 176, 187, 201, 203, 205, 207, 208, 211, 212, 216, 218, 220, 222, 246, 249, 260, 294, 298, 302, 305, 307, 309], "connect": [0, 10, 12, 19, 36, 37, 40, 41, 45, 53, 54, 57, 60, 65, 67, 68, 71, 81, 82, 85, 95, 96, 99, 108, 109, 112, 122, 123, 126, 135, 136, 139, 149, 150, 153, 163, 164, 168, 179, 193, 216, 218, 220, 222, 231, 240, 243, 247, 274, 285, 298, 300, 303, 308], "consum": [0, 165, 166, 167, 176, 177, 178, 187, 188, 189, 190, 192, 201, 202, 298], "fabric": [0, 203, 206, 207, 210, 211, 214, 215, 217, 219, 221, 295, 298], "plan": [0, 271, 273, 283, 284, 298], "ghpython": [0, 223, 227, 231, 234, 236, 240, 243, 298, 301], "rhino": [0, 10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 164, 168, 179, 193, 247, 274, 285, 294, 296, 298, 299, 304, 305, 310], "The": [8, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 40, 44, 45, 46, 47, 50, 51, 52, 53, 56, 57, 58, 59, 62, 63, 64, 67, 70, 71, 72, 73, 78, 79, 80, 81, 84, 85, 86, 87, 92, 93, 94, 95, 98, 99, 100, 101, 105, 106, 107, 108, 111, 112, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 132, 133, 134, 135, 138, 139, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 206, 207, 211, 214, 216, 218, 220, 222, 226, 240, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 276, 277, 278, 280, 281, 282, 286, 287, 288, 290, 291, 293, 294, 300, 301, 304, 305, 307, 308, 310, 311], "modul": [8, 214, 298, 302], "contain": [8, 9, 23, 24, 38, 40, 45, 46, 47, 57, 58, 59, 71, 72, 73, 85, 86, 87, 99, 100, 101, 112, 113, 114, 126, 127, 128, 139, 140, 141, 153, 154, 155, 164, 165, 170, 171, 181, 182, 188, 195, 196, 226, 227, 234, 236, 240, 246, 258, 259, 273, 277, 278, 284, 287, 288, 294], "function": [8, 108, 164, 214, 301, 302], "type": [8, 10, 18, 23, 24, 35, 39, 40, 41, 44, 46, 47, 52, 54, 56, 58, 59, 64, 67, 68, 70, 72, 73, 80, 81, 82, 84, 86, 87, 94, 95, 96, 98, 100, 101, 107, 108, 109, 111, 113, 114, 121, 122, 123, 125, 127, 128, 134, 135, 136, 138, 140, 141, 148, 149, 150, 152, 154, 155, 162, 166, 168, 169, 170, 171, 175, 179, 180, 181, 182, 186, 193, 194, 195, 196, 200, 206, 207, 210, 214, 231, 236, 240, 243, 247, 253, 258, 259, 260, 270, 271, 274, 276, 277, 278, 282, 284, 285, 286, 287, 288, 293, 298, 302, 308, 309], "meant": 8, "us": [8, 10, 28, 31, 32, 33, 34, 35, 38, 39, 40, 41, 43, 49, 52, 53, 54, 61, 64, 66, 67, 68, 77, 80, 81, 82, 91, 94, 95, 96, 104, 107, 108, 109, 118, 121, 122, 123, 131, 134, 135, 136, 145, 148, 149, 150, 159, 162, 163, 164, 168, 172, 175, 179, 183, 186, 193, 197, 200, 203, 210, 226, 247, 251, 255, 263, 266, 267, 268, 269, 270, 272, 274, 279, 282, 284, 285, 289, 293, 294, 295, 298, 300, 301, 302, 303, 304, 305, 308, 310], "context": [8, 14], "class": [9, 10, 13, 17, 37, 40, 41, 53, 54, 65, 67, 68, 81, 82, 95, 96, 108, 109, 122, 123, 135, 136, 149, 150, 165, 166, 167, 168, 176, 178, 179, 187, 190, 192, 193, 201, 203, 206, 207, 211, 214, 215, 217, 219, 221, 223, 227, 231, 234, 236, 240, 243, 246, 247, 271, 273, 274, 283, 284, 285, 298, 302], "sourc": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 304, 305], "base": [9, 36, 37, 40, 53, 65, 67, 81, 95, 108, 122, 135, 149, 165, 166, 167, 176, 178, 187, 189, 190, 192, 201, 203, 207, 211, 214, 215, 217, 219, 221, 223, 227, 231, 234, 236, 240, 243, 246, 271, 273, 283, 284, 303, 308, 311], "repres": [9, 40, 67, 81, 95, 122, 135, 149, 203, 207, 211, 246, 271, 305], "timber": [9, 203, 211, 246, 295, 301, 305, 308, 311], "beam": [9, 11, 13, 36, 37, 38, 39, 40, 42, 45, 48, 53, 55, 57, 60, 67, 69, 71, 76, 81, 83, 85, 90, 95, 97, 99, 103, 108, 110, 112, 117, 122, 124, 126, 130, 135, 137, 139, 144, 149, 151, 153, 158, 163, 164, 165, 166, 167, 176, 177, 178, 187, 188, 189, 191, 192, 201, 202, 207, 211, 223, 225, 226, 227, 233, 234, 236, 239, 240, 245, 294, 297, 298, 301, 303, 304, 307, 308, 309, 310, 311], "joint": [9, 13, 15, 26, 36, 37, 40, 42, 45, 65, 67, 69, 71, 81, 83, 85, 95, 97, 99, 108, 110, 112, 122, 124, 126, 135, 137, 139, 149, 151, 153, 203, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 227, 231, 236, 240, 243, 248, 261, 296, 298, 301, 302, 303, 305, 309, 311], "etc": [9, 203, 204, 246, 296, 298, 305], "attribut": [9, 12, 16, 40, 53, 65, 67, 81, 95, 108, 122, 135, 149, 166, 189, 203, 207, 214, 223, 226, 227, 240, 246, 283, 284, 298, 301, 302, 305], "list": [9, 13, 15, 38, 40, 45, 53, 57, 67, 71, 81, 85, 95, 99, 108, 112, 122, 126, 135, 139, 149, 153, 163, 164, 203, 214, 225, 227, 233, 245, 246, 250, 254, 262, 284, 294, 302, 308, 311], "A": [9, 21, 38, 40, 45, 57, 67, 71, 81, 85, 95, 99, 108, 112, 122, 126, 135, 139, 149, 153, 164, 165, 166, 192, 203, 216, 218, 220, 222, 226, 246, 256, 257, 295, 300, 305], "assign": [9, 14, 21, 223, 231, 243, 308, 310], "thi": [9, 10, 11, 17, 18, 21, 23, 24, 26, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 67, 68, 69, 70, 71, 72, 73, 80, 81, 82, 83, 84, 85, 86, 87, 94, 95, 96, 97, 98, 99, 100, 101, 107, 108, 109, 110, 111, 112, 113, 114, 121, 122, 123, 124, 125, 126, 127, 128, 134, 135, 136, 137, 138, 139, 140, 141, 148, 149, 150, 151, 152, 153, 154, 155, 162, 163, 164, 168, 169, 170, 171, 175, 179, 180, 181, 182, 186, 193, 194, 195, 196, 200, 207, 209, 210, 213, 214, 216, 218, 220, 222, 223, 225, 226, 231, 233, 234, 236, 239, 240, 243, 245, 246, 247, 248, 249, 253, 255, 258, 259, 261, 268, 269, 270, 274, 276, 277, 278, 282, 284, 285, 286, 287, 288, 293, 294, 296, 300, 302, 304, 305, 309, 311], "part_kei": 9, "int": [9, 11, 12, 13, 14, 16, 22, 66, 207, 248, 261, 272, 284], "kei": [9, 11, 14, 22, 60, 81, 108, 135, 149, 216, 218, 220, 222, 248, 261, 304], "includ": [9, 260, 300, 302], "beam_kei": 9, "joint_kei": [9, 248, 261], "topologi": [9, 27, 37, 39, 40, 45, 57, 65, 66, 67, 71, 81, 85, 95, 99, 112, 122, 126, 135, 139, 149, 153, 231, 243], "dict": [9, 12, 14, 16, 40, 53, 166, 203, 207, 210, 214, 216, 218, 220, 222, 240, 243, 302], "jointtopologi": [9, 39, 243, 298], "i": [9, 14, 15, 16, 21, 23, 24, 35, 38, 39, 40, 43, 45, 46, 47, 52, 53, 57, 58, 59, 60, 64, 67, 69, 71, 72, 73, 80, 81, 85, 86, 87, 94, 95, 97, 99, 100, 101, 107, 108, 112, 113, 114, 121, 122, 124, 126, 127, 128, 134, 135, 139, 140, 141, 148, 149, 153, 154, 155, 162, 163, 164, 170, 171, 175, 178, 181, 182, 186, 188, 195, 196, 200, 203, 207, 209, 210, 213, 231, 243, 246, 248, 249, 254, 255, 258, 259, 270, 273, 277, 278, 282, 283, 287, 288, 293, 295, 298, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310], "detected_topo": 9, "beam_a_kei": 9, "beam_b_kei": 9, "see": [9, 60, 301, 305, 306, 310], "method": [9, 10, 37, 39, 40, 41, 43, 45, 53, 54, 57, 60, 65, 67, 68, 69, 71, 81, 82, 85, 95, 96, 97, 99, 108, 109, 112, 122, 123, 124, 126, 135, 136, 139, 149, 150, 153, 167, 168, 176, 178, 179, 187, 190, 192, 193, 201, 203, 207, 209, 211, 213, 215, 217, 219, 221, 223, 227, 231, 234, 236, 240, 243, 246, 247, 271, 273, 274, 284, 285, 298, 302], "inherit": [9, 40, 53, 67, 81, 95, 108, 122, 135, 149, 167, 178, 192, 243, 246, 273, 284, 298, 302], "convert": [10, 29, 30, 41, 50, 51, 54, 62, 63, 68, 78, 79, 82, 92, 93, 96, 105, 106, 109, 119, 120, 123, 132, 133, 136, 146, 147, 150, 160, 161, 168, 173, 174, 179, 184, 185, 193, 198, 199, 247, 264, 265, 274, 280, 281, 285, 290, 291], "instanc": [10, 13, 23, 24, 40, 41, 45, 46, 47, 54, 57, 58, 59, 67, 68, 71, 72, 73, 81, 82, 85, 86, 87, 95, 96, 99, 100, 101, 108, 109, 112, 113, 114, 122, 123, 126, 127, 128, 135, 136, 139, 140, 141, 149, 150, 153, 154, 155, 168, 170, 171, 179, 181, 182, 193, 195, 196, 214, 225, 233, 245, 247, 258, 259, 274, 277, 278, 285, 287, 288, 296, 302], "string": [10, 24, 30, 40, 41, 47, 51, 54, 59, 63, 66, 67, 68, 73, 79, 81, 82, 87, 93, 95, 96, 101, 106, 108, 109, 114, 120, 122, 123, 128, 133, 135, 136, 141, 147, 149, 150, 155, 161, 168, 171, 174, 179, 182, 185, 193, 196, 199, 203, 204, 247, 259, 265, 272, 274, 278, 281, 285, 288, 291, 304, 305], "exist": [10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 247, 274, 285, 302], "net": [10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 247, 274, 285], "compat": [10, 40, 41, 54, 67, 68, 81, 82, 95, 96, 109, 122, 123, 135, 136, 149, 150, 164, 168, 179, 193, 247, 274, 285], "when": [10, 21, 38, 41, 54, 68, 69, 82, 96, 97, 109, 123, 124, 136, 150, 163, 168, 179, 189, 193, 247, 248, 274, 285, 304, 308], "ironpython": [10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 247, 274, 285], "implicit": [10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 247, 274, 285], "convers": [10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 247, 274, 285], "usual": [10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 246, 247, 274, 285], "take": [10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 247, 274, 285, 302, 311], "place": [10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 247, 274, 285], "cpython": [10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 247, 274, 285], "kick": [10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 247, 274, 285], "its": [10, 16, 21, 22, 29, 30, 41, 50, 51, 54, 62, 63, 68, 78, 79, 82, 92, 93, 96, 105, 106, 109, 119, 120, 123, 132, 133, 136, 146, 147, 150, 160, 161, 163, 168, 173, 174, 179, 184, 185, 193, 198, 199, 206, 218, 222, 247, 256, 264, 265, 274, 280, 281, 285, 290, 291, 299, 304, 305, 308], "default": [10, 14, 18, 29, 30, 41, 44, 50, 51, 54, 56, 62, 63, 68, 70, 78, 79, 81, 82, 84, 92, 93, 96, 98, 105, 106, 108, 109, 111, 119, 120, 123, 125, 132, 133, 135, 136, 138, 146, 147, 149, 150, 152, 160, 161, 168, 169, 173, 174, 179, 180, 184, 185, 193, 194, 198, 199, 211, 247, 253, 256, 257, 264, 265, 274, 276, 280, 281, 285, 286, 290, 291, 298, 303, 305, 308, 310], "print": [10, 29, 30, 41, 50, 51, 54, 62, 63, 68, 78, 79, 82, 92, 93, 96, 105, 106, 109, 119, 120, 123, 132, 133, 136, 146, 147, 150, 160, 161, 168, 173, 174, 179, 184, 185, 193, 198, 199, 247, 264, 265, 274, 280, 281, 285, 290, 291], "self": [10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 214, 247, 274, 285, 302], "gettyp": [10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 247, 274, 285], "fullnam": [10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 247, 274, 285], "similar": [10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 247, 274, 285, 308], "overrid": [10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 247, 274, 285, 311], "object": [10, 13, 17, 18, 23, 24, 26, 29, 30, 35, 37, 38, 41, 44, 45, 46, 47, 50, 51, 52, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 68, 70, 71, 72, 73, 78, 79, 80, 82, 84, 85, 86, 87, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 107, 109, 111, 112, 113, 114, 119, 120, 121, 123, 125, 126, 127, 128, 132, 133, 134, 136, 138, 139, 140, 141, 146, 147, 148, 150, 152, 153, 154, 155, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 179, 180, 181, 182, 184, 185, 186, 190, 193, 194, 195, 196, 198, 199, 200, 203, 207, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 227, 234, 236, 240, 247, 253, 258, 259, 260, 264, 265, 270, 271, 274, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 293, 298, 303, 304, 305, 309, 310], "fix": [10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 247, 274, 285], "make": [10, 18, 41, 44, 54, 56, 68, 70, 82, 84, 96, 98, 109, 111, 123, 125, 136, 138, 150, 152, 168, 169, 179, 180, 193, 194, 247, 253, 274, 276, 285, 286], "grasshopp": [10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 247, 274, 285, 296, 298, 305], "displai": [10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 247, 274, 285, 304, 309], "proper": [10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 247, 274, 285], "represent": [10, 29, 30, 40, 41, 50, 51, 54, 62, 63, 66, 67, 68, 78, 79, 81, 82, 92, 93, 95, 96, 105, 106, 108, 109, 119, 120, 122, 123, 132, 133, 135, 136, 146, 147, 149, 150, 160, 161, 168, 173, 174, 179, 184, 185, 193, 198, 199, 247, 264, 265, 272, 274, 280, 281, 285, 290, 291, 302], "ar": [10, 12, 21, 38, 39, 41, 43, 45, 54, 57, 60, 68, 71, 82, 85, 96, 99, 109, 112, 123, 126, 136, 139, 150, 153, 164, 168, 179, 193, 214, 226, 239, 247, 274, 284, 285, 296, 302, 303, 304, 307, 308, 309, 310, 311], "panel": [10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 247, 274, 285], "other": [10, 13, 41, 54, 68, 81, 82, 96, 108, 109, 123, 135, 136, 149, 150, 163, 168, 179, 193, 207, 238, 242, 247, 274, 285, 295, 300, 308, 311], "output": [10, 39, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 247, 274, 285, 303], "add": [11, 12, 13, 14, 19, 20, 42, 55, 69, 83, 97, 110, 124, 137, 151, 248, 249, 250, 301, 302, 303, 310], "paramet": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 44, 45, 46, 47, 49, 50, 51, 52, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 70, 71, 72, 73, 77, 78, 79, 80, 81, 84, 85, 86, 87, 91, 92, 93, 94, 95, 98, 99, 100, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 148, 149, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 206, 207, 209, 210, 211, 213, 214, 216, 218, 220, 222, 225, 226, 233, 240, 243, 245, 246, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 293, 294, 302, 303, 304, 305, 310], "return": [11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 28, 30, 31, 32, 33, 34, 35, 38, 39, 44, 45, 46, 47, 49, 51, 52, 53, 56, 57, 58, 59, 61, 63, 64, 66, 70, 71, 72, 73, 77, 79, 80, 84, 85, 86, 87, 91, 93, 94, 98, 99, 100, 101, 104, 106, 107, 111, 112, 113, 114, 118, 120, 121, 125, 126, 127, 128, 131, 133, 134, 138, 139, 140, 141, 145, 147, 148, 152, 153, 154, 155, 159, 161, 162, 163, 164, 169, 170, 171, 172, 174, 175, 177, 180, 181, 182, 183, 185, 186, 188, 191, 194, 195, 196, 197, 199, 200, 202, 203, 204, 206, 210, 216, 218, 220, 222, 225, 226, 233, 239, 245, 249, 253, 254, 255, 256, 257, 258, 259, 260, 263, 265, 266, 267, 268, 269, 270, 272, 276, 277, 278, 279, 281, 282, 286, 287, 288, 289, 291, 293, 294, 303, 309], "graph": [11, 13, 14], "identifi": [11, 12, 13, 14, 16, 21, 22, 164], "ad": [11, 45, 57, 71, 85, 99, 112, 126, 139, 153, 249, 250, 294], "b": 12, "kwarg": [12, 14, 45, 57, 71, 85, 99, 112, 126, 139, 153, 240, 243], "between": [12, 16, 19, 81, 95, 108, 135, 149, 304, 308, 311], "two": [12, 19, 36, 39, 40, 45, 53, 57, 67, 71, 81, 85, 95, 99, 112, 126, 139, 153, 163, 226, 254, 305, 308, 311], "compa": [12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 44, 46, 47, 49, 56, 58, 59, 61, 70, 72, 73, 77, 84, 86, 87, 91, 98, 100, 101, 104, 111, 113, 114, 118, 125, 127, 128, 131, 138, 140, 141, 145, 152, 154, 155, 159, 167, 169, 170, 171, 172, 176, 177, 178, 180, 181, 182, 183, 187, 188, 191, 192, 194, 195, 196, 197, 201, 202, 246, 249, 253, 258, 259, 260, 263, 276, 277, 278, 279, 284, 286, 287, 288, 289, 295, 301, 308], "datastructur": [12, 14, 19, 20, 21, 22, 25, 28, 33, 34, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 192, 197, 263, 268, 269, 279, 289], "from": [12, 20, 23, 24, 26, 28, 39, 46, 47, 49, 58, 59, 61, 72, 73, 77, 86, 87, 91, 100, 101, 104, 113, 114, 118, 127, 128, 131, 140, 141, 145, 154, 155, 159, 170, 171, 172, 181, 182, 183, 195, 196, 197, 214, 256, 257, 258, 259, 261, 262, 263, 277, 278, 279, 287, 288, 289, 296, 298, 300, 301, 302, 304, 305, 307, 308], "str": [12, 14, 16, 21, 22, 23, 24, 28, 29, 30, 40, 46, 47, 49, 50, 51, 53, 58, 59, 61, 62, 63, 66, 67, 72, 73, 77, 78, 79, 81, 86, 87, 91, 92, 93, 95, 100, 101, 104, 105, 106, 108, 113, 114, 118, 119, 120, 122, 127, 128, 131, 132, 133, 135, 140, 141, 145, 146, 147, 149, 154, 155, 159, 160, 161, 170, 171, 172, 173, 174, 181, 182, 183, 184, 185, 189, 195, 196, 197, 198, 199, 203, 207, 211, 214, 254, 258, 259, 263, 264, 265, 272, 277, 278, 279, 280, 281, 284, 287, 288, 289, 290, 291], "ani": [12, 14, 16, 35, 52, 64, 80, 94, 107, 121, 134, 148, 162, 175, 186, 200, 270, 282, 293, 296, 300, 307, 309], "option": [12, 14, 16, 18, 22, 28, 29, 30, 38, 39, 44, 49, 50, 51, 56, 61, 62, 63, 70, 77, 78, 79, 84, 91, 92, 93, 98, 104, 105, 106, 111, 118, 119, 120, 125, 131, 132, 133, 138, 145, 146, 147, 152, 159, 160, 161, 164, 165, 169, 172, 173, 174, 180, 183, 184, 185, 194, 197, 198, 199, 211, 240, 253, 263, 264, 265, 276, 279, 280, 281, 286, 289, 290, 291, 305, 308, 311], "compil": 12, "name": [12, 14, 211, 214, 302, 304, 308, 309], "argument": [12, 240, 243], "tupl": [12, 16, 39, 95, 163, 226, 246, 255], "node": 12, "rais": [12, 23, 24, 42, 45, 46, 47, 55, 57, 58, 59, 71, 72, 73, 83, 85, 86, 87, 99, 100, 101, 110, 112, 113, 114, 126, 127, 128, 137, 139, 140, 141, 151, 153, 154, 155, 170, 171, 177, 181, 182, 188, 189, 195, 196, 202, 258, 259, 277, 278, 287, 288], "assemblyerror": 12, "If": [12, 16, 23, 24, 28, 29, 30, 39, 46, 47, 49, 50, 51, 58, 59, 61, 62, 63, 72, 73, 77, 78, 79, 81, 86, 87, 91, 92, 93, 100, 101, 104, 105, 106, 108, 113, 114, 118, 119, 120, 127, 128, 131, 132, 133, 135, 140, 141, 145, 146, 147, 149, 154, 155, 159, 160, 161, 170, 171, 172, 173, 174, 177, 181, 182, 183, 184, 185, 188, 195, 196, 197, 198, 199, 202, 249, 258, 259, 262, 263, 264, 265, 277, 278, 279, 280, 281, 287, 288, 289, 290, 291, 294, 295, 305, 308], "an": [13, 14, 18, 23, 24, 29, 30, 35, 36, 38, 40, 44, 45, 46, 47, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 67, 70, 71, 72, 73, 78, 79, 80, 81, 84, 85, 86, 87, 92, 93, 94, 95, 98, 99, 100, 101, 105, 106, 107, 108, 111, 112, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 132, 133, 134, 135, 138, 139, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 160, 161, 162, 165, 169, 170, 171, 173, 174, 175, 180, 181, 182, 184, 185, 186, 194, 195, 196, 198, 199, 200, 209, 213, 246, 253, 258, 259, 264, 265, 270, 271, 276, 277, 278, 280, 281, 282, 286, 287, 288, 290, 291, 293, 295, 296, 298, 299, 300, 301, 303, 304, 305, 308], "dowel": 13, "steel": 13, "plate": 13, "involv": [13, 220], "current": [13, 14, 18, 44, 56, 70, 84, 98, 111, 125, 138, 152, 169, 180, 194, 253, 276, 286, 298], "none": [14, 18, 19, 20, 21, 22, 31, 32, 38, 39, 44, 56, 70, 84, 98, 111, 125, 138, 152, 164, 169, 180, 194, 206, 211, 212, 216, 218, 220, 222, 248, 249, 252, 253, 256, 257, 262, 266, 267, 276, 286, 294, 305], "note": [14, 164, 295, 309], "uniqu": [14, 21], "onli": [14, 60, 249, 304], "nest": 14, "mai": [14, 303, 304], "have": [14, 45, 57, 71, 85, 99, 112, 126, 139, 153, 214, 305], "same": [14, 15, 39, 283, 284, 308, 311], "valu": [14, 66, 81, 108, 135, 149, 164, 246, 272, 304], "one": [14, 81, 108, 135, 149, 163, 226, 250, 283, 284, 302, 305, 308, 311], "which": [14, 36, 38, 39, 40, 43, 45, 57, 67, 71, 81, 85, 95, 99, 112, 122, 126, 135, 139, 149, 153, 164, 178, 207, 214, 234, 243, 248, 251, 254, 255, 261, 271, 273, 284, 302, 303, 305, 308], "case": 14, "automat": [14, 21, 69, 97, 124, 308, 310], "integ": 14, "addit": [14, 16, 38, 301, 304, 305, 307], "collect": [14, 273, 294], "check": [15, 43, 294, 298, 304], "alreadi": 15, "defin": [15, 42, 55, 83, 110, 137, 151, 207, 225, 233, 239, 245, 256, 304, 305, 308, 310, 311], "set": [15, 38, 164, 294, 303, 304, 305, 309], "bool": [15, 16, 17, 28, 29, 30, 38, 49, 50, 51, 61, 62, 63, 77, 78, 79, 81, 91, 92, 93, 104, 105, 106, 108, 118, 119, 120, 131, 132, 133, 135, 145, 146, 147, 149, 159, 160, 161, 172, 173, 174, 183, 184, 185, 197, 198, 199, 207, 225, 233, 245, 249, 260, 263, 264, 265, 279, 280, 281, 284, 289, 290, 291], "data": [16, 17, 18, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 44, 46, 47, 49, 50, 51, 52, 53, 56, 58, 59, 61, 62, 63, 64, 70, 72, 73, 77, 78, 79, 80, 84, 86, 87, 91, 92, 93, 94, 98, 100, 101, 104, 105, 106, 107, 111, 113, 114, 118, 119, 120, 121, 125, 127, 128, 131, 132, 133, 134, 138, 140, 141, 145, 146, 147, 148, 152, 154, 155, 159, 160, 161, 162, 165, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 203, 253, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 273, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 293], "fals": [16, 17, 28, 29, 30, 38, 49, 50, 51, 61, 62, 63, 77, 78, 79, 91, 92, 93, 104, 105, 106, 118, 119, 120, 131, 132, 133, 145, 146, 147, 159, 160, 161, 172, 173, 174, 183, 184, 185, 197, 198, 199, 225, 233, 245, 249, 260, 263, 264, 265, 279, 280, 281, 289, 290, 291], "iter": 16, "over": 16, "true": [16, 17, 28, 29, 30, 38, 49, 50, 51, 61, 62, 63, 77, 78, 79, 81, 91, 92, 93, 104, 105, 106, 108, 118, 119, 120, 131, 132, 133, 135, 145, 146, 147, 149, 159, 160, 161, 172, 173, 174, 183, 184, 185, 197, 198, 199, 225, 233, 239, 245, 249, 255, 260, 263, 264, 265, 279, 280, 281, 289, 290, 291, 303, 305], "yield": [16, 25, 166], "next": 16, "u": 16, "v": 16, "connector": 16, "attr": [16, 214], "obj": [17, 28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 263, 279, 284, 289], "given": [17, 38, 39, 45, 57, 66, 71, 85, 99, 112, 126, 139, 153, 164, 226, 231, 243, 251, 254, 255, 257, 272, 304], "otherwis": [17, 39, 225, 233, 245, 249, 300, 305], "look": 17, "cl": [18, 44, 56, 70, 84, 98, 111, 125, 138, 152, 169, 180, 194, 240, 243, 253, 276, 286], "independ": [18, 44, 56, 70, 84, 98, 111, 125, 138, 152, 169, 180, 194, 253, 276, 286], "edg": 19, "delet": 19, "remov": [20, 26, 248, 261, 262, 304, 307], "guid": [21, 298, 301, 305], "global": 21, "creat": [21, 40, 43, 53, 67, 69, 81, 95, 97, 108, 122, 124, 135, 149, 206, 207, 215, 217, 219, 221, 256, 257, 296, 298, 299, 301, 302, 303, 304, 305, 308, 311], "can": [21, 22, 35, 52, 64, 80, 94, 107, 121, 134, 148, 162, 175, 186, 200, 214, 260, 270, 273, 282, 284, 293, 296, 301, 302, 305, 308], "t": [21, 22, 108, 122, 135, 149, 221, 231, 243], "found": [21, 22, 302], "find": [22, 38, 163, 164, 294, 308], "classmethod": [23, 24, 35, 38, 45, 46, 47, 52, 57, 58, 59, 64, 66, 71, 72, 73, 80, 85, 86, 87, 94, 99, 100, 101, 107, 112, 113, 114, 121, 126, 127, 128, 134, 139, 140, 141, 148, 153, 154, 155, 162, 170, 171, 175, 181, 182, 186, 195, 196, 200, 206, 208, 212, 216, 218, 220, 222, 256, 257, 258, 259, 270, 272, 277, 278, 282, 287, 288, 293], "filepath": [23, 29, 46, 50, 58, 62, 72, 78, 86, 92, 100, 105, 113, 119, 127, 132, 140, 146, 154, 160, 170, 173, 181, 184, 195, 198, 258, 264, 277, 280, 287, 290], "construct": [23, 24, 35, 46, 47, 52, 58, 59, 64, 72, 73, 80, 86, 87, 94, 100, 101, 107, 113, 114, 121, 127, 128, 134, 140, 141, 148, 154, 155, 162, 170, 171, 175, 181, 182, 186, 195, 196, 200, 258, 259, 270, 277, 278, 282, 287, 288, 293, 298], "json": [23, 24, 29, 30, 46, 47, 50, 51, 58, 59, 62, 63, 72, 73, 78, 79, 86, 87, 92, 93, 100, 101, 105, 106, 113, 114, 119, 120, 127, 128, 132, 133, 140, 141, 146, 147, 154, 155, 160, 161, 170, 171, 173, 174, 181, 182, 184, 185, 195, 196, 198, 199, 258, 259, 264, 265, 277, 278, 280, 281, 287, 288, 290, 291], "file": [23, 29, 46, 50, 58, 62, 72, 78, 86, 92, 100, 105, 113, 119, 127, 132, 140, 146, 154, 160, 170, 173, 181, 184, 195, 198, 203, 258, 264, 277, 280, 287, 290, 300, 302, 306], "path": [23, 29, 46, 50, 58, 62, 72, 78, 86, 92, 100, 105, 113, 119, 127, 132, 140, 146, 154, 160, 170, 173, 181, 184, 195, 198, 258, 264, 277, 280, 287, 290], "ha": [23, 24, 36, 46, 47, 58, 59, 72, 73, 86, 87, 100, 101, 113, 114, 127, 128, 140, 141, 154, 155, 164, 170, 171, 181, 182, 195, 196, 258, 259, 277, 278, 284, 287, 288, 305, 308, 309, 310], "correct": [23, 24, 46, 47, 58, 59, 72, 73, 86, 87, 100, 101, 113, 114, 127, 128, 140, 141, 154, 155, 170, 171, 181, 182, 195, 196, 258, 259, 277, 278, 287, 288], "schema": [23, 24, 35, 46, 47, 52, 58, 59, 64, 72, 73, 80, 86, 87, 94, 100, 101, 107, 113, 114, 121, 127, 128, 134, 140, 141, 148, 154, 155, 162, 170, 171, 175, 181, 182, 186, 195, 196, 200, 258, 259, 270, 277, 278, 282, 287, 288, 293], "typeerror": [23, 24, 46, 47, 58, 59, 72, 73, 86, 87, 100, 101, 113, 114, 127, 128, 140, 141, 154, 155, 170, 171, 181, 182, 195, 196, 258, 259, 277, 278, 287, 288], "individu": [25, 214], "as_str": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 263, 279, 289], "comput": [28, 39, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 263, 279, 289], "hash": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 263, 279, 289], "comparison": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 263, 279, 289], "dure": [28, 49, 60, 61, 77, 91, 104, 118, 131, 145, 159, 165, 172, 183, 197, 227, 263, 279, 284, 289], "version": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 263, 279, 289, 299], "control": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 263, 279, 289], "algorithm": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 164, 172, 183, 197, 263, 279, 289], "digest": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 263, 279, 289], "hexadecim": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 263, 279, 289], "format": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 203, 263, 279, 289, 304], "rather": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 263, 279, 289], "than": [28, 45, 49, 57, 61, 71, 77, 85, 91, 99, 104, 112, 118, 126, 131, 139, 145, 153, 159, 172, 183, 197, 263, 279, 289, 308], "byte": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 263, 279, 289], "exampl": [28, 49, 60, 61, 77, 91, 104, 118, 131, 145, 159, 164, 172, 183, 197, 263, 279, 289, 298, 301, 304, 305, 308, 311], "import": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 263, 279, 289, 302, 311], "mesh": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 192, 197, 263, 279, 289, 297], "from_obj": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 263, 279, 289], "get": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 263, 279, 289, 299, 301], "face": [28, 40, 43, 49, 61, 77, 91, 104, 118, 131, 145, 159, 163, 172, 183, 197, 207, 246, 255, 263, 279, 289], "v1": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 263, 279, 289], "v2": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 263, 279, 289], "vertex_attribut": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 263, 279, 289], "vertex_sampl": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 263, 279, 289], "1": [28, 49, 61, 77, 81, 91, 104, 108, 118, 131, 135, 145, 149, 159, 172, 183, 197, 246, 263, 279, 289, 297, 302, 305], "0": [28, 49, 61, 77, 81, 91, 104, 108, 118, 131, 135, 145, 149, 159, 172, 183, 197, 246, 263, 279, 289, 297, 305, 308], "z": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 246, 256, 257, 263, 279, 289, 305, 307, 310], "v3": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 263, 279, 289], "pretti": [29, 30, 50, 51, 62, 63, 78, 79, 92, 93, 105, 106, 119, 120, 132, 133, 146, 147, 160, 161, 173, 174, 184, 185, 198, 199, 203, 204, 264, 265, 280, 281, 290, 291], "nativ": [29, 30, 50, 51, 62, 63, 78, 79, 92, 93, 105, 106, 119, 120, 132, 133, 146, 147, 160, 161, 173, 174, 184, 185, 198, 199, 264, 265, 280, 281, 290, 291], "save": [29, 30, 48, 50, 51, 62, 63, 76, 78, 79, 90, 92, 93, 103, 105, 106, 117, 119, 120, 130, 132, 133, 144, 146, 147, 158, 160, 161, 173, 174, 184, 185, 198, 199, 264, 265, 280, 281, 290, 291], "structur": [31, 32, 33, 34, 266, 267, 268, 269, 295, 298, 301, 303, 311], "transform": [32, 34, 260, 267, 269], "copi": [33, 34, 260, 268, 269, 300], "valid": [35, 52, 64, 80, 94, 107, 121, 134, 148, 162, 175, 186, 200, 270, 282, 293], "against": [35, 52, 64, 80, 94, 107, 121, 134, 148, 162, 175, 186, 200, 270, 282, 293], "": [35, 40, 42, 52, 55, 64, 67, 80, 81, 83, 94, 95, 107, 108, 110, 121, 122, 134, 135, 137, 148, 149, 151, 162, 163, 175, 186, 200, 246, 251, 254, 256, 257, 260, 270, 282, 293, 304, 310], "raw": [35, 52, 64, 80, 94, 107, 121, 134, 148, 162, 175, 186, 200, 270, 282, 293], "__from_data__": [35, 52, 64, 80, 94, 107, 121, 134, 148, 162, 175, 186, 200, 270, 282, 293], "except": [36, 189], "indic": [36, 40, 167, 207, 256, 257, 304, 305], "error": [36, 165, 189, 227, 229, 230, 303, 304], "occur": [36, 165, 227], "while": 36, "try": 36, "join": [36, 40, 45, 53, 57, 67, 71, 81, 85, 95, 99, 108, 112, 122, 126, 135, 139, 149, 153, 163, 207, 227, 236, 240, 303, 308], "more": [36, 250, 298, 301, 302], "should": [36, 42, 53, 55, 60, 81, 83, 108, 110, 135, 137, 149, 151, 164, 214, 234, 248, 260, 302, 308], "calcul": [36, 42, 55, 83, 110, 137, 151], "featur": [36, 42, 55, 69, 81, 83, 97, 108, 110, 124, 135, 137, 149, 151, 165, 166, 167, 176, 177, 178, 187, 188, 189, 190, 191, 192, 201, 202, 227, 234, 246, 249, 250, 260, 262, 298, 301, 303, 309, 311], "appli": [36, 42, 55, 83, 110, 137, 151, 165, 166, 176, 187, 189, 201, 207, 214, 216, 218, 220, 222, 234, 243, 249, 302, 303, 308, 309, 311], "provid": [37, 225, 233, 245, 300, 301, 303, 305], "tool": [37, 298, 301, 305, 309, 310], "detect": 37, "intersect": [37, 38, 39, 177, 202, 308], "rtree": [38, 294], "max_dist": [38, 39], "pair": [38, 39, 164, 294, 304, 308, 311], "r": [38, 164, 299], "tree": [38, 164], "search": [38, 164], "neighbor": [38, 164, 294], "float": [38, 39, 81, 108, 135, 149, 163, 164, 178, 207, 246, 248, 255, 256, 257, 294], "distanc": [38, 39, 308], "apart": 38, "non": 38, "touch": 38, "still": 38, "consid": [38, 39], "neightbor": [38, 294], "beam_a": [39, 40, 95], "beam_b": [39, 40, 95], "tol": 39, "1e": 39, "06": 39, "within": [39, 239, 284], "role": [39, 60, 226], "sensit": 39, "consist": 39, "specif": [39, 60, 214, 298, 302], "order": [39, 164, 210, 226, 283, 311], "e": [39, 60, 296, 304, 308, 309, 310], "g": [39, 60, 296, 304], "main": [39, 60, 67, 76, 81, 90, 103, 108, 117, 122, 124, 130, 135, 144, 149, 158, 308], "first": [39, 95, 226, 254, 308, 311], "cross": [39, 60, 67, 76, 81, 90, 103, 108, 117, 122, 124, 130, 135, 144, 149, 158, 246, 256, 257, 305, 308], "second": [39, 95, 226, 254, 308], "thei": 39, "were": [39, 304], "input": [39, 164, 214, 301, 302, 304, 305, 308], "gener": [39, 166, 205, 209, 213, 214, 283, 302, 311], "toler": [39, 308], "mathemat": 39, "maximum": 39, "desigen": 39, "unit": [39, 164, 255], "french": [40, 43, 207, 215], "ridg": [40, 43, 207, 215], "lap": [40, 43, 81, 108, 135, 149, 207], "end": [40, 53, 67, 81, 95, 122, 135, 149, 163, 207, 246, 248, 254, 255, 257, 308], "l": [40, 67, 81, 95, 108, 217, 219, 220, 231, 243], "pleas": [40, 67, 81, 95, 108, 122, 135, 149, 295], "lbuttjoint": [40, 298], "properli": [40, 67, 81, 95, 108, 122, 135, 149], "associ": [40, 60, 67, 81, 95, 108, 122, 135, 149, 207, 218, 222, 284, 300], "timberassembli": [40, 67, 95, 122, 283, 297, 298], "top": [40, 48, 207, 301], "bottom": [40, 48, 207], "joint_typ": [40, 67, 81, 95, 108, 122, 135, 149, 206, 243], "reference_face_indic": 40, "dictionari": [40, 203, 216, 218, 220, 222], "refer": [40, 43, 48, 60, 76, 90, 103, 117, 130, 144, 158, 207, 298, 301, 302, 304, 308], "both": [40, 69, 97], "affect": [42, 55, 83, 110, 137, 151], "beamjoinningerror": [42, 55, 83, 110, 137, 151, 298], "whenev": [42, 55, 83, 110, 137, 151], "wa": [42, 55, 83, 110, 137, 151], "abl": [42, 55, 83, 110, 137, 151], "whether": [43, 284, 300, 309], "align": [43, 164, 246, 251, 301, 310], "necessari": [43, 299, 302], "determin": [43, 226, 308], "machin": [43, 302], "new": [45, 57, 71, 85, 99, 112, 126, 139, 153, 299, 302, 305], "expect": [45, 57, 71, 85, 99, 112, 126, 139, 153], "been": [45, 57, 71, 85, 99, 112, 126, 139, 153, 284], "befor": [45, 57, 71, 85, 99, 112, 126, 139, 153, 309], "call": [45, 57, 60, 69, 71, 85, 97, 99, 112, 124, 126, 139, 153, 214, 249, 302, 305, 308], "code": [45, 57, 71, 85, 99, 112, 126, 139, 153, 296, 298], "doe": [45, 57, 71, 85, 99, 112, 126, 139, 153, 177, 202, 302, 305, 308], "verifi": [45, 57, 71, 85, 99, 112, 126, 139, 153, 255], "adjac": [45, 57, 71, 85, 99, 112, 126, 139, 153], "lie": [45, 57, 71, 85, 99, 112, 126, 139, 153], "allow": [45, 57, 71, 81, 85, 99, 108, 112, 126, 135, 139, 149, 153, 226, 227, 234, 236, 240, 255, 284], "them": [45, 57, 71, 85, 95, 99, 112, 126, 139, 153, 214, 296, 302, 304, 308], "respons": [45, 57, 71, 85, 99, 112, 126, 139, 153], "valueerror": [45, 57, 71, 85, 99, 112, 126, 139, 153], "less": [45, 57, 71, 85, 99, 112, 126, 139, 153, 246], "assemebli": [45, 57, 71, 85, 99, 112, 126, 139, 153], "jo": [45, 57, 71, 85, 99, 112, 126, 139, 153], "belong": [45, 57, 71, 85, 99, 112, 126, 139, 153], "whould": [45, 57, 71, 85, 99, 112, 126, 139, 153], "togeth": [45, 57, 71, 85, 99, 112, 126, 139, 153, 305], "assemli": [48, 76, 90, 103, 117, 144, 158], "after": [48, 76, 90, 103, 117, 130, 144, 158, 165, 166, 177, 188, 191, 202], "de": [48, 60, 76, 90, 103, 117, 130, 144, 158], "serial": [48, 60, 76, 90, 103, 117, 130, 144, 158], "restor": [48, 60], "instanti": [53, 108, 214, 302], "directli": [53, 108], "respect": [53, 60, 308], "implement": [53, 60, 294, 298], "instead": [53, 305], "map": [53, 163, 166, 301, 310], "ehich": 53, "each": [53, 95, 214, 255, 273, 302, 304, 308], "To": [60, 299, 301, 302, 303, 308, 311], "avoid": [60, 308], "circular": 60, "store": [60, 304, 305], "sinc": 60, "concret": 60, "tbuttjoint": [60, 297, 298], "enumer": 65, "possibl": [65, 304], "topo_unknown": [65, 66], "topo_i": 65, "topo_l": [65, 66], "topo_t": [65, 66], "topo_x": [65, 66], "For": [66, 164, 272, 298, 310, 311], "log": [66, 272, 303], "One": [66, 272, 284], "butt": [67, 122, 217, 221], "trim": [67, 69, 81, 95, 97, 122, 124, 135, 149, 303, 307, 308], "main_beam": [67, 81, 108, 122, 135, 149, 297], "cross_beam": [67, 81, 108, 122, 135, 149, 297], "cutting_plane_main": [67, 122], "frame": [67, 95, 122, 163, 167, 207, 211, 212, 246, 284, 297, 298, 301, 303, 311], "cutting_plane_cross": [67, 122], "requir": [69, 97, 210, 214, 248, 261, 299], "extens": [69, 97, 248, 255, 261], "resotr": [76, 90, 103, 117, 130, 144, 158], "lapjoint": [81, 135, 149, 298], "flip_lap_sid": [81, 108, 135, 149], "flip": [81, 108, 135, 149], "side": [81, 108, 135, 149, 163, 246, 307, 308], "cut_plane_bia": [81, 108, 135, 149], "shift": [81, 108, 135, 149], "deeper": [81, 108, 135, 149], "without": [81, 108, 135, 149, 300], "complet": [81, 108, 135, 149], "cut": [81, 108, 135, 149, 163, 167, 177, 211, 301, 303, 307, 308], "through": [81, 108, 135, 149, 255, 295], "either": [81, 108, 135, 149, 254], "5": [81, 108, 135, 149, 246], "main_beam_kei": [81, 108, 135, 149], "cross_beam_kei": [81, 108, 135, 149], "miter": [95, 219, 220], "plane": [95, 124, 163, 167, 177, 178, 211, 255, 305, 307, 310], "bisector": [95, 308], "angl": [95, 163, 207, 308], "centerlin": [95, 163, 246, 254, 256, 257, 301, 304, 305, 308, 310], "cutting_plan": [95, 167], "normal": [95, 163, 246], "point": [95, 246, 254, 257, 298, 310], "opposit": 95, "direct": [95, 246, 255, 256, 257, 294, 305], "abstract": [108, 303], "common": 108, "x": [108, 149, 231, 243, 246, 305, 308, 310], "do": [108, 300, 302], "sub": 108, "along": [122, 135, 149, 246, 308], "length": [122, 135, 149, 178, 246, 256, 308], "anoth": [122, 135, 149], "beam1": 163, "beam2": 163, "attach": [163, 223], "inflate_bi": [164, 294], "axi": [164, 246, 256, 257, 305, 310], "bound": [164, 246, 294], "box": [164, 246, 284, 294, 301, 309], "aabb": [164, 246], "enlarg": 164, "amount": [164, 248, 255, 294], "element": [164, 214, 254, 283, 284], "design": [164, 295, 298, 301, 304, 305], "regard": 164, "inflat": [164, 294], "pluggabl": 164, "In": [164, 298, 299, 308], "plugin": [164, 298, 305], "avail": [164, 260], "result": [165, 166, 177, 188, 191, 202, 254, 283, 308], "geometri": [165, 166, 167, 176, 177, 178, 187, 188, 189, 191, 192, 201, 202, 246, 260, 284, 294, 298, 301, 303, 305, 307, 309, 310, 311], "process": [165, 166, 177, 188, 191, 202, 205, 207, 209, 210, 211, 213, 214, 216, 218, 220, 222, 298, 301, 302, 311], "debug_info": 165, "featureapplicationerror": [165, 177, 188, 202, 227, 298], "debug": [165, 227], "inform": [165, 227, 298, 310], "feature_map": 166, "featureappl": [166, 176, 187, 201, 298], "applic": [166, 190, 227], "beamgeometri": [166, 298], "made": [167, 178, 303], "cutfeatur": [176, 298], "beam_geometri": [176, 187, 189, 201], "brep": [176, 177, 187, 188, 201, 202, 298, 303, 307, 309, 310], "parametr": [178, 246, 298], "drill": [178, 188, 207], "hole": [178, 207, 301], "diamet": [178, 207], "depth": [178, 297], "drillfeatur": [187, 298], "volum": [188, 192, 202], "cannot": [189, 305], "feature_geometri": 189, "could": [189, 271], "modifi": [189, 300], "messag": 189, "mill": 192, "out": [192, 300], "polyhedron": 192, "millvolum": [201, 298], "histori": 203, "btlx_string": 203, "xml": [203, 204], "visual": [203, 204, 227, 273, 284, 296, 303], "gh": [203, 204], "termin": [203, 204], "btlxpart": [203, 207, 211, 214, 216, 218, 220, 222, 302], "joint_factori": [206, 214, 302], "regist": 206, "correspond": [206, 246, 254, 304, 305, 310], "factori": [206, 214, 215, 217, 219, 221, 302], "jointfactori": 206, "is_top": [207, 208], "flag": 207, "process_typ": [207, 214, 302], "frenchridgelap": 207, "other_beam": 207, "orient": [207, 256, 257, 310], "drill_hole_diamet": 207, "ref_face_index": 207, "index": [207, 298, 309], "ref_fac": 207, "surfac": [207, 302], "header_attribut": [207, 214, 302], "header": 207, "process_paramet": [207, 214], "geometr": [207, 210, 214, 298, 302, 303, 307], "btlx": [207, 214, 298, 301], "degre": 207, "intern": [209, 213], "properti": 210, "all": [210, 255, 260, 262, 294, 300, 304], "It": [210, 298, 301, 303, 304, 305, 310], "ordereddict": 210, "maintain": [210, 298], "origin": [210, 246, 305, 309, 310], "jack": 211, "joint_nam": [211, 212], "append": [214, 302], "btlx_process": [214, 302], "eg": 214, "btlxjackcut": [214, 298], "match": [214, 302], "describ": [214, 302], "deriv": [214, 302], "relat": [214, 227, 302], "some": [214, 301, 310], "combin": 214, "multipl": [214, 296, 302], "cover": 214, "register_joint": [214, 302], "so": [214, 300, 302], "typic": [214, 284, 302], "need": [214, 251, 302, 304, 311], "param": 214, "et_el": 214, "et": 214, "jointrul": [223, 231, 243], "categori": [223, 226, 304, 305, 308], "rule": [223, 225, 231, 233, 243, 245, 305, 308], "sort": 226, "accord": [226, 304, 308], "catergory_a": 226, "category_b": 226, "inspect": [227, 309], "beamjoiningerror": 227, "feature_error": 227, "joint_error": 227, "k": [231, 243], "link": 234, "delai": [234, 236, 240], "actual": [234, 236, 240, 254], "downstream": [234, 236, 240], "compon": [234, 236, 240, 303, 304, 305, 309], "shall": [236, 300], "pass": [240, 243, 255], "keyword": [240, 243], "topology_typ": 243, "constant": 243, "stud": [246, 305], "slat": 246, "rectangular": [246, 305], "section": [246, 256, 257, 296, 301, 305], "local": [246, 305, 309], "coordin": [246, 305, 309], "system": [246, 305, 309], "locat": [246, 284, 305], "start": [246, 248, 254, 255, 257, 301, 305], "major": [246, 305], "also": [246, 249, 295, 298, 301, 304, 305], "fibr": [246, 301], "solid": [246, 303], "wood": 246, "y": [246, 305, 310], "width": [246, 256, 257, 297, 304, 305], "smaller": [246, 305], "dimens": [246, 305], "height": [246, 256, 257, 297, 304, 305], "larger": [246, 305], "shape": [246, 305], "blank": [246, 248, 261], "materi": [246, 310], "stock": 246, "produc": 246, "6": 246, "equal": 246, "posit": [246, 307, 308], "2": [246, 297, 302], "3": [246, 299, 302], "4": [246, 297, 302], "line": [246, 256, 298, 304, 305], "centerline_start": 246, "centerline_end": 246, "xmin": 246, "ymin": 246, "zmin": 246, "xmax": 246, "ymax": 246, "zmax": 246, "long_edg": 246, "long": [246, 255], "midpoint": 246, "middl": 246, "extend": [248, 255], "well": 248, "user": [249, 304], "must": 249, "apply_featur": 249, "vector": [251, 256, 257, 298, 305], "z_axi": 251, "definit": [251, 302, 303], "todo": [251, 255], "Not": 251, "anywher": 251, "features_to_clear": 252, "endpoint": [254, 257], "closer": 254, "interest": 254, "depend": [254, 256, 257, 299, 302, 309], "pln": 255, "metric": 255, "minimum": 255, "z_vector": [256, 257], "worldz": [256, 257], "worldx": [256, 257], "point_start": 257, "point_end": 257, "end_point": 257, "with_featur": 260, "drawn": [260, 305], "scene": 260, "enum": 271, "execut": [271, 284, 296], "instruct": [271, 273, 284], "human": [272, 284], "robot": [272, 284], "build": [273, 283, 284, 311], "step": [273, 275, 283, 298, 302], "simpl": [283, 298, 301], "sequenc": [283, 298], "per": 283, "buildingplan": [283, 298], "assembl": 284, "singl": [284, 302], "actor": [284, 298], "element_id": 284, "cad": [284, 296], "id": [284, 296], "elements_held": 284, "held": 284, "support": [284, 295, 296], "is_built": 284, "is_plan": 284, "increment": 284, "cylind": 284, "prioriti": 284, "parallel": [284, 305], "prior": 294, "research": [295, 298, 300], "project": [295, 298], "develop": [295, 298], "aleksandra": 295, "apolinarska": 295, "chen": 295, "kasir": 295, "gonzalo": 295, "casa": 295, "gramazio": [295, 298, 300], "kohler": [295, 298, 300], "eth": [295, 298], "zurich": [295, 298], "swiss": 295, "nation": 295, "scienc": 295, "foundat": 295, "center": 295, "compet": 295, "digit": 295, "nccr": 295, "dfab": 295, "programm": 295, "As": 295, "open": [295, 298], "mani": [295, 296, 298], "contributor": 295, "you": [295, 301, 305, 308, 311], "your": 295, "work": 295, "acknowledg": 295, "misc": 295, "titl": 295, "librari": [295, 296, 298, 301], "author": [295, 300], "anna": 295, "http": [295, 299, 302], "github": [295, 299], "com": [295, 299, 302], "gramaziokohl": 295, "year": 295, "2022": 295, "2023": 295, "doi": 295, "10": [295, 299], "5281": 295, "zenodo": 295, "7934267": 295, "url": 295, "present": 296, "differ": [296, 302, 308, 311], "concept": [296, 301], "There": [296, 304], "wai": 296, "run": [296, 298], "python": [296, 298, 299, 301], "environ": [296, 298, 299], "interact": 296, "session": 296, "text": 296, "editor": 296, "sublim": 296, "studio": 296, "eclips": 296, "insid": 296, "blender": 296, "worldxi": 297, "geometry_typ": 297, "add_beam": 297, "packag": [298, 299, 302], "model": 298, "written": 298, "ecosystem": 298, "rhinocero": 298, "3d": 298, "plug": 298, "activ": [298, 299, 303, 305, 310], "being": 298, "continu": 298, "At": 298, "stage": 298, "encompass": 298, "fast": 298, "intuit": 298, "custom": [298, 304], "entiti": 298, "semant": 298, "about": 298, "futur": 298, "expand": 298, "entail": [298, 304], "interfac": 298, "analysi": 298, "softwar": [298, 300], "specialist": 298, "built": [298, 301], "upon": 298, "framework": 298, "basic": 298, "like": [298, 301, 303], "complex": 298, "resolv": 298, "backend": 298, "rhinocommon": 298, "sdk": 298, "handl": 298, "opencascad": 298, "via": 298, "occ": 298, "introduct": 298, "instal": 298, "api": [298, 301], "connectionsolv": 298, "frenchridgelapjoint": 298, "lhalflapjoint": 298, "lmiterjoint": 298, "thalflapjoint": 298, "xhalflapjoint": 298, "find_neighboring_beam": 298, "beam_side_incid": 298, "brepgeometryconsum": 298, "cutfeaturegeometri": 298, "drillfeaturegeometri": 298, "millvolumegeometri": 298, "btlxprocess": [298, 302], "btlxfrenchridgelap": 298, "lbuttfactori": 298, "tbuttfactori": 298, "lmiterfactori": 298, "frenchridgefactori": 298, "simplesequencegener": 298, "jointdefinit": 298, "categoryrul": 298, "topologyrul": 298, "directrul": 298, "featuredefinit": 298, "jointopt": 298, "debuginfom": 298, "workflow": [298, 301, 304, 305], "show": [298, 301], "util": [298, 301], "contribut": [298, 301], "licens": 298, "cite": 298, "conda": 299, "n": 299, "myenvnam": 299, "ye": [299, 308], "m": 299, "compas_rhino": 299, "p": 299, "latest": 299, "fork": 299, "repositori": 299, "clone": 299, "git": 299, "yourgithub_usernam": 299, "cd": 299, "edit": 299, "mode": 299, "dev": 299, "txt": 299, "mit": 300, "copyright": 300, "c": 300, "2020": 300, "02": 300, "17": 300, "permiss": 300, "herebi": 300, "grant": 300, "free": 300, "charg": 300, "person": 300, "obtain": 300, "document": [300, 302, 304, 305, 310], "deal": 300, "restrict": 300, "limit": 300, "right": 300, "merg": 300, "publish": 300, "distribut": 300, "sublicens": 300, "sell": 300, "permit": 300, "whom": 300, "furnish": 300, "subject": 300, "follow": [300, 301, 302], "condit": 300, "abov": 300, "notic": 300, "substanti": 300, "portion": 300, "THE": 300, "AS": 300, "warranti": 300, "OF": 300, "kind": 300, "express": 300, "OR": 300, "impli": [300, 303], "BUT": 300, "NOT": 300, "TO": 300, "merchant": 300, "fit": 300, "FOR": 300, "particular": 300, "purpos": 300, "AND": 300, "noninfring": 300, "IN": 300, "NO": 300, "event": 300, "holder": 300, "BE": 300, "liabl": 300, "claim": 300, "damag": 300, "liabil": 300, "action": 300, "contract": 300, "tort": 300, "aris": 300, "WITH": 300, "easi": 301, "autom": [301, 308], "bake": 301, "textur": [301, 310], "render": [301, 310], "boolean": [301, 303, 307], "style": 301, "planar": [301, 308], "might": 301, "componen": 301, "detail": 301, "overal": 301, "idea": 301, "how": [301, 308], "Then": [301, 308], "explain": 301, "requr": 302, "here": [302, 306, 308, 310], "design2machin": 302, "btlx_2_1_0": 302, "pdf": 302, "process_param": 302, "where": [302, 305, 310], "btlxjoint": 302, "__init__": 302, "py": 302, "mind": 302, "oper": [303, 307], "subtract": [303, 307], "computation": 303, "expens": 303, "disabl": 303, "applyfeatur": 303, "unsuccess": 303, "showassembli": [303, 309], "group": 304, "intend": [304, 305], "hybrid": 304, "encod": 304, "concaten": 304, "colon": 304, "separ": 304, "entri": [304, 311], "underscor": 304, "_": 304, "attr1nam": 304, "attr1value_attr2nam": 304, "attr2valu": 304, "four": [304, 308], "standard": 304, "zvector": [304, 305], "setstandardattribut": 304, "write": [304, 305], "readstandardattribut": 304, "read": 304, "checkstandardattribut": 304, "correctli": 304, "miss": 304, "retriev": 304, "later": [304, 305, 308], "filter": 304, "criteria": 304, "These": 304, "deleteattribut": 304, "setcustomattribut": 304, "readallattribut": 304, "linear": [305, 308], "straight": 305, "rafter": 305, "joist": 305, "beamfromcurv": 305, "form": [305, 308], "linecurv": 305, "beamfromcurveguid": 305, "referenc": 305, "rotat": 305, "around": 305, "li": [305, 310], "sai": 305, "perpendicular": 305, "world": 305, "vertic": 305, "convent": 305, "jointcategoryrul": [305, 308], "automaticjoint": 305, "updaterefobj": 305, "onc": 305, "preview": [305, 309], "extract": [305, 309], "demo": 306, "ly": 307, "three": 308, "prefix": 308, "rel": 308, "we": 308, "distinguish": 308, "topolog": 308, "situat": 308, "splice": 308, "co": 308, "corner": 308, "meet": 308, "select": 308, "addition": 308, "clean": 308, "serv": [308, 310], "cata": 308, "catb": 308, "thing": 308, "everi": 308, "tri": 308, "unintend": 308, "maxdist": 308, "exactli": 308, "certain": 308, "000001": 308, "showbeam": 309, "showbeamfram": 309, "showbeamindex": 309, "showjointtyp": 309, "bakewithboxmap": 310, "layer": 310, "desir": 310, "random": 310, "deviat": 310, "mapsiz": 310, "scale": 310, "adjust": 310, "size": 310, "imag": 310, "ratio": 310, "bitmap": 310, "care": 311, "final": 311, "matter": 311, "last": 311, "earlier": 311}, "objects": {"compas_timber.assembly": [[9, 0, 1, "", "TimberAssembly"]], "compas_timber.assembly.TimberAssembly": [[10, 1, 1, "", "ToString"], [11, 1, 1, "", "add_beam"], [12, 1, 1, "", "add_connection"], [13, 1, 1, "", "add_joint"], [14, 1, 1, "", "add_part"], [15, 1, 1, "", "are_parts_joined"], [16, 1, 1, "", "connections"], [17, 1, 1, "", "contains"], [18, 1, 1, "", "copy"], [19, 1, 1, "", "delete_connection"], [20, 1, 1, "", "delete_part"], [21, 1, 1, "", "find"], [22, 1, 1, "", "find_by_key"], [23, 1, 1, "", "from_json"], [24, 1, 1, "", "from_jsonstring"], [25, 1, 1, "", "parts"], [26, 1, 1, "", "remove_joint"], [27, 1, 1, "", "set_topologies"], [28, 1, 1, "", "sha256"], [29, 1, 1, "", "to_json"], [30, 1, 1, "", "to_jsonstring"], [31, 1, 1, "", "transform"], [32, 1, 1, "", "transform_numpy"], [33, 1, 1, "", "transformed"], [34, 1, 1, "", "transformed_numpy"], [35, 1, 1, "", "validate_data"]], "compas_timber.connections": [[36, 2, 1, "", "BeamJoinningError"], [37, 0, 1, "", "ConnectionSolver"], [40, 0, 1, "", "FrenchRidgeLapJoint"], [53, 0, 1, "", "Joint"], [65, 0, 1, "", "JointTopology"], [67, 0, 1, "", "LButtJoint"], [81, 0, 1, "", "LHalfLapJoint"], [95, 0, 1, "", "LMiterJoint"], [108, 0, 1, "", "LapJoint"], [122, 0, 1, "", "TButtJoint"], [135, 0, 1, "", "THalfLapJoint"], [149, 0, 1, "", "XHalfLapJoint"], [163, 3, 1, "", "beam_side_incidence"], [164, 3, 1, "", "find_neighboring_beams"]], "compas_timber.connections.ConnectionSolver": [[38, 1, 1, "", "find_intersecting_pairs"], [39, 1, 1, "", "find_topology"]], "compas_timber.connections.FrenchRidgeLapJoint": [[41, 1, 1, "", "ToString"], [42, 1, 1, "", "add_features"], [43, 1, 1, "", "check_geometry"], [44, 1, 1, "", "copy"], [45, 1, 1, "", "create"], [46, 1, 1, "", "from_json"], [47, 1, 1, "", "from_jsonstring"], [48, 1, 1, "", "restore_beams_from_keys"], [49, 1, 1, "", "sha256"], [50, 1, 1, "", "to_json"], [51, 1, 1, "", "to_jsonstring"], [52, 1, 1, "", "validate_data"]], "compas_timber.connections.Joint": [[54, 1, 1, "", "ToString"], [55, 1, 1, "", "add_features"], [56, 1, 1, "", "copy"], [57, 1, 1, "", "create"], [58, 1, 1, "", "from_json"], [59, 1, 1, "", "from_jsonstring"], [60, 1, 1, "", "restore_beams_from_keys"], [61, 1, 1, "", "sha256"], [62, 1, 1, "", "to_json"], [63, 1, 1, "", "to_jsonstring"], [64, 1, 1, "", "validate_data"]], "compas_timber.connections.JointTopology": [[66, 1, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[68, 1, 1, "", "ToString"], [69, 1, 1, "", "add_features"], [70, 1, 1, "", "copy"], [71, 1, 1, "", "create"], [72, 1, 1, "", "from_json"], [73, 1, 1, "", "from_jsonstring"], [74, 1, 1, "", "get_cross_cutting_plane"], [75, 1, 1, "", "get_main_cutting_plane"], [76, 1, 1, "", "restore_beams_from_keys"], [77, 1, 1, "", "sha256"], [78, 1, 1, "", "to_json"], [79, 1, 1, "", "to_jsonstring"], [80, 1, 1, "", "validate_data"]], "compas_timber.connections.LHalfLapJoint": [[82, 1, 1, "", "ToString"], [83, 1, 1, "", "add_features"], [84, 1, 1, "", "copy"], [85, 1, 1, "", "create"], [86, 1, 1, "", "from_json"], [87, 1, 1, "", "from_jsonstring"], [88, 1, 1, "", "get_cross_cutting_frame"], [89, 1, 1, "", "get_main_cutting_frame"], [90, 1, 1, "", "restore_beams_from_keys"], [91, 1, 1, "", "sha256"], [92, 1, 1, "", "to_json"], [93, 1, 1, "", "to_jsonstring"], [94, 1, 1, "", "validate_data"]], "compas_timber.connections.LMiterJoint": [[96, 1, 1, "", "ToString"], [97, 1, 1, "", "add_features"], [98, 1, 1, "", "copy"], [99, 1, 1, "", "create"], [100, 1, 1, "", "from_json"], [101, 1, 1, "", "from_jsonstring"], [102, 1, 1, "", "get_cutting_planes"], [103, 1, 1, "", "restore_beams_from_keys"], [104, 1, 1, "", "sha256"], [105, 1, 1, "", "to_json"], [106, 1, 1, "", "to_jsonstring"], [107, 1, 1, "", "validate_data"]], "compas_timber.connections.LapJoint": [[109, 1, 1, "", "ToString"], [110, 1, 1, "", "add_features"], [111, 1, 1, "", "copy"], [112, 1, 1, "", "create"], [113, 1, 1, "", "from_json"], [114, 1, 1, "", "from_jsonstring"], [115, 1, 1, "", "get_cross_cutting_frame"], [116, 1, 1, "", "get_main_cutting_frame"], [117, 1, 1, "", "restore_beams_from_keys"], [118, 1, 1, "", "sha256"], [119, 1, 1, "", "to_json"], [120, 1, 1, "", "to_jsonstring"], [121, 1, 1, "", "validate_data"]], "compas_timber.connections.TButtJoint": [[123, 1, 1, "", "ToString"], [124, 1, 1, "", "add_features"], [125, 1, 1, "", "copy"], [126, 1, 1, "", "create"], [127, 1, 1, "", "from_json"], [128, 1, 1, "", "from_jsonstring"], [129, 1, 1, "", "get_cutting_plane"], [130, 1, 1, "", "restore_beams_from_keys"], [131, 1, 1, "", "sha256"], [132, 1, 1, "", "to_json"], [133, 1, 1, "", "to_jsonstring"], [134, 1, 1, "", "validate_data"]], "compas_timber.connections.THalfLapJoint": [[136, 1, 1, "", "ToString"], [137, 1, 1, "", "add_features"], [138, 1, 1, "", "copy"], [139, 1, 1, "", "create"], [140, 1, 1, "", "from_json"], [141, 1, 1, "", "from_jsonstring"], [142, 1, 1, "", "get_cross_cutting_frame"], [143, 1, 1, "", "get_main_cutting_frame"], [144, 1, 1, "", "restore_beams_from_keys"], [145, 1, 1, "", "sha256"], [146, 1, 1, "", "to_json"], [147, 1, 1, "", "to_jsonstring"], [148, 1, 1, "", "validate_data"]], "compas_timber.connections.XHalfLapJoint": [[150, 1, 1, "", "ToString"], [151, 1, 1, "", "add_features"], [152, 1, 1, "", "copy"], [153, 1, 1, "", "create"], [154, 1, 1, "", "from_json"], [155, 1, 1, "", "from_jsonstring"], [156, 1, 1, "", "get_cross_cutting_frame"], [157, 1, 1, "", "get_main_cutting_frame"], [158, 1, 1, "", "restore_beams_from_keys"], [159, 1, 1, "", "sha256"], [160, 1, 1, "", "to_json"], [161, 1, 1, "", "to_jsonstring"], [162, 1, 1, "", "validate_data"]], "compas_timber.consumers": [[165, 0, 1, "", "BeamGeometry"], [166, 0, 1, "", "BrepGeometryConsumer"], [167, 0, 1, "", "CutFeature"], [176, 0, 1, "", "CutFeatureGeometry"], [178, 0, 1, "", "DrillFeature"], [187, 0, 1, "", "DrillFeatureGeometry"], [189, 2, 1, "", "FeatureApplicationError"], [190, 0, 1, "", "FeatureApplicator"], [192, 0, 1, "", "MillVolume"], [201, 0, 1, "", "MillVolumeGeometry"]], "compas_timber.consumers.CutFeature": [[168, 1, 1, "", "ToString"], [169, 1, 1, "", "copy"], [170, 1, 1, "", "from_json"], [171, 1, 1, "", "from_jsonstring"], [172, 1, 1, "", "sha256"], [173, 1, 1, "", "to_json"], [174, 1, 1, "", "to_jsonstring"], [175, 1, 1, "", "validate_data"]], "compas_timber.consumers.CutFeatureGeometry": [[177, 1, 1, "", "apply"]], "compas_timber.consumers.DrillFeature": [[179, 1, 1, "", "ToString"], [180, 1, 1, "", "copy"], [181, 1, 1, "", "from_json"], [182, 1, 1, "", "from_jsonstring"], [183, 1, 1, "", "sha256"], [184, 1, 1, "", "to_json"], [185, 1, 1, "", "to_jsonstring"], [186, 1, 1, "", "validate_data"]], "compas_timber.consumers.DrillFeatureGeometry": [[188, 1, 1, "", "apply"]], "compas_timber.consumers.FeatureApplicator": [[191, 1, 1, "", "apply"]], "compas_timber.consumers.MillVolume": [[193, 1, 1, "", "ToString"], [194, 1, 1, "", "copy"], [195, 1, 1, "", "from_json"], [196, 1, 1, "", "from_jsonstring"], [197, 1, 1, "", "sha256"], [198, 1, 1, "", "to_json"], [199, 1, 1, "", "to_jsonstring"], [200, 1, 1, "", "validate_data"]], "compas_timber.consumers.MillVolumeGeometry": [[202, 1, 1, "", "apply"]], "compas_timber.fabrication": [[203, 0, 1, "", "BTLx"], [207, 0, 1, "", "BTLxFrenchRidgeLap"], [211, 0, 1, "", "BTLxJackCut"], [214, 0, 1, "", "BTLxProcess"], [215, 0, 1, "", "FrenchRidgeFactory"], [217, 0, 1, "", "LButtFactory"], [219, 0, 1, "", "LMiterFactory"], [221, 0, 1, "", "TButtFactory"]], "compas_timber.fabrication.BTLx": [[204, 1, 1, "", "btlx_string"], [205, 1, 1, "", "process_assembly"], [206, 1, 1, "", "register_joint"]], "compas_timber.fabrication.BTLxFrenchRidgeLap": [[208, 1, 1, "", "create_process"], [209, 1, 1, "", "get_params"], [210, 1, 1, "", "process_joints"]], "compas_timber.fabrication.BTLxJackCut": [[212, 1, 1, "", "create_process"], [213, 1, 1, "", "generate_process"]], "compas_timber.fabrication.FrenchRidgeFactory": [[216, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.LButtFactory": [[218, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.LMiterFactory": [[220, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.TButtFactory": [[222, 1, 1, "", "apply_processings"]], "compas_timber.ghpython": [[223, 0, 1, "", "CategoryRule"], [227, 0, 1, "", "DebugInfomation"], [231, 0, 1, "", "DirectRule"], [234, 0, 1, "", "FeatureDefinition"], [236, 0, 1, "", "JointDefinition"], [240, 0, 1, "", "JointOptions"], [243, 0, 1, "", "TopologyRule"]], "compas_timber.ghpython.CategoryRule": [[224, 1, 1, "", "ToString"], [225, 1, 1, "", "comply"], [226, 1, 1, "", "reorder"]], "compas_timber.ghpython.DebugInfomation": [[228, 1, 1, "", "ToString"], [229, 1, 1, "", "add_feature_error"], [230, 1, 1, "", "add_joint_error"]], "compas_timber.ghpython.DirectRule": [[232, 1, 1, "", "ToString"], [233, 1, 1, "", "comply"]], "compas_timber.ghpython.FeatureDefinition": [[235, 1, 1, "", "ToString"]], "compas_timber.ghpython.JointDefinition": [[237, 1, 1, "", "ToString"], [238, 1, 1, "", "is_identical"], [239, 1, 1, "", "match"]], "compas_timber.ghpython.JointOptions": [[241, 1, 1, "", "ToString"], [242, 1, 1, "", "is_identical"]], "compas_timber.ghpython.TopologyRule": [[244, 1, 1, "", "ToString"], [245, 1, 1, "", "comply"]], "compas_timber.parts": [[246, 0, 1, "", "Beam"]], "compas_timber.parts.Beam": [[247, 1, 1, "", "ToString"], [248, 1, 1, "", "add_blank_extension"], [249, 1, 1, "", "add_feature"], [250, 1, 1, "", "add_features"], [251, 1, 1, "", "align_z"], [252, 1, 1, "", "clear_features"], [253, 1, 1, "", "copy"], [254, 1, 1, "", "endpoint_closest_to_point"], [255, 1, 1, "", "extension_to_plane"], [256, 1, 1, "", "from_centerline"], [257, 1, 1, "", "from_endpoints"], [258, 1, 1, "", "from_json"], [259, 1, 1, "", "from_jsonstring"], [260, 1, 1, "", "get_geometry"], [261, 1, 1, "", "remove_blank_extension"], [262, 1, 1, "", "remove_features"], [263, 1, 1, "", "sha256"], [264, 1, 1, "", "to_json"], [265, 1, 1, "", "to_jsonstring"], [266, 1, 1, "", "transform"], [267, 1, 1, "", "transform_numpy"], [268, 1, 1, "", "transformed"], [269, 1, 1, "", "transformed_numpy"], [270, 1, 1, "", "validate_data"]], "compas_timber.planning": [[271, 0, 1, "", "Actor"], [273, 0, 1, "", "BuildingPlan"], [283, 0, 1, "", "SimpleSequenceGenerator"], [284, 0, 1, "", "Step"]], "compas_timber.planning.Actor": [[272, 1, 1, "", "get_name"]], "compas_timber.planning.BuildingPlan": [[274, 1, 1, "", "ToString"], [275, 1, 1, "", "add_step"], [276, 1, 1, "", "copy"], [277, 1, 1, "", "from_json"], [278, 1, 1, "", "from_jsonstring"], [279, 1, 1, "", "sha256"], [280, 1, 1, "", "to_json"], [281, 1, 1, "", "to_jsonstring"], [282, 1, 1, "", "validate_data"]], "compas_timber.planning.Step": [[285, 1, 1, "", "ToString"], [286, 1, 1, "", "copy"], [287, 1, 1, "", "from_json"], [288, 1, 1, "", "from_jsonstring"], [289, 1, 1, "", "sha256"], [290, 1, 1, "", "to_json"], [291, 1, 1, "", "to_jsonstring"], [292, 1, 1, "", "transform"], [293, 1, 1, "", "validate_data"]], "compas_timber.rhino": [[294, 3, 1, "", "find_neighboring_beams"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:exception", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "exception", "Python exception"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "packag": 0, "compas_timb": [1, 2, 3, 4, 5, 6, 7], "assembli": [1, 296, 303], "class": [1, 2, 3, 4, 5, 6, 7], "connect": [2, 16], "function": 2, "except": 2, "consum": 3, "fabric": 4, "ghpython": 5, "part": [6, 25], "plan": 7, "rhino": 8, "plugin": [8, 301], "timberassembli": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "tostr": [10, 41, 54, 68, 82, 96, 109, 123, 136, 150, 168, 179, 193, 224, 228, 232, 235, 237, 241, 244, 247, 274, 285], "add_beam": 11, "add_connect": 12, "add_joint": 13, "add_part": 14, "are_parts_join": 15, "contain": 17, "copi": [18, 44, 56, 70, 84, 98, 111, 125, 138, 152, 169, 180, 194, 253, 276, 286], "delete_connect": 19, "delete_part": 20, "find": 21, "find_by_kei": 22, "from_json": [23, 46, 58, 72, 86, 100, 113, 127, 140, 154, 170, 181, 195, 258, 277, 287], "from_jsonstr": [24, 47, 59, 73, 87, 101, 114, 128, 141, 155, 171, 182, 196, 259, 278, 288], "remove_joint": 26, "set_topologi": 27, "sha256": [28, 49, 61, 77, 91, 104, 118, 131, 145, 159, 172, 183, 197, 263, 279, 289], "to_json": [29, 50, 62, 78, 92, 105, 119, 132, 146, 160, 173, 184, 198, 264, 280, 290], "to_jsonstr": [30, 51, 63, 79, 93, 106, 120, 133, 147, 161, 174, 185, 199, 265, 281, 291], "transform": [31, 33, 266, 268, 292], "transform_numpi": [32, 267], "transformed_numpi": [34, 269], "validate_data": [35, 52, 64, 80, 94, 107, 121, 134, 148, 162, 175, 186, 200, 270, 282, 293], "beamjoinningerror": 36, "connectionsolv": [37, 38, 39], "find_intersecting_pair": 38, "find_topologi": 39, "frenchridgelapjoint": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "add_featur": [42, 55, 69, 83, 97, 110, 124, 137, 151, 249, 250], "check_geometri": 43, "creat": [45, 57, 71, 85, 99, 112, 126, 139, 153, 297], "restore_beams_from_kei": [48, 60, 76, 90, 103, 117, 130, 144, 158], "joint": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 297, 308], "jointtopologi": [65, 66], "get_nam": [66, 272], "lbuttjoint": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "get_cross_cutting_plan": 74, "get_main_cutting_plan": 75, "lhalflapjoint": [81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "get_cross_cutting_fram": [88, 115, 142, 156], "get_main_cutting_fram": [89, 116, 143, 157], "lmiterjoint": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "get_cutting_plan": [102, 129], "lapjoint": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121], "tbuttjoint": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "thalflapjoint": [135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "xhalflapjoint": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162], "beam_side_incid": 163, "find_neighboring_beam": [164, 294], "beamgeometri": 165, "brepgeometryconsum": 166, "cutfeatur": [167, 168, 169, 170, 171, 172, 173, 174, 175], "cutfeaturegeometri": [176, 177], "appli": [177, 188, 191, 202], "drillfeatur": [178, 179, 180, 181, 182, 183, 184, 185, 186], "drillfeaturegeometri": [187, 188], "featureapplicationerror": 189, "featureappl": [190, 191], "millvolum": [192, 193, 194, 195, 196, 197, 198, 199, 200], "millvolumegeometri": [201, 202], "btlx": [203, 204, 205, 206, 302], "btlx_string": 204, "process_assembli": 205, "register_joint": 206, "btlxfrenchridgelap": [207, 208, 209, 210], "create_process": [208, 212], "get_param": 209, "process_joint": 210, "btlxjackcut": [211, 212, 213], "generate_process": 213, "btlxprocess": 214, "frenchridgefactori": [215, 216], "apply_process": [216, 218, 220, 222], "lbuttfactori": [217, 218], "lmiterfactori": [219, 220], "tbuttfactori": [221, 222], "categoryrul": [223, 224, 225, 226], "compli": [225, 233, 245], "reorder": 226, "debuginfom": [227, 228, 229, 230], "add_feature_error": 229, "add_joint_error": 230, "directrul": [231, 232, 233], "featuredefinit": [234, 235], "jointdefinit": [236, 237, 238, 239], "is_ident": [238, 242], "match": 239, "jointopt": [240, 241, 242], "topologyrul": [243, 244, 245], "beam": [246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 305], "add_blank_extens": 248, "align_z": 251, "clear_featur": 252, "endpoint_closest_to_point": 254, "extension_to_plan": 255, "from_centerlin": 256, "from_endpoint": 257, "get_geometri": 260, "remove_blank_extens": 261, "remove_featur": 262, "actor": [271, 272], "buildingplan": [273, 274, 275, 276, 277, 278, 279, 280, 281, 282], "add_step": 275, "simplesequencegener": 283, "step": [284, 285, 286, 287, 288, 289, 290, 291, 292, 293], "cite": 295, "exampl": [296, 306], "timber": [296, 298], "compa": 298, "depend": 298, "tabl": 298, "content": 298, "indic": 298, "instal": 299, "stabl": 299, "pip": 299, "develop": 299, "licens": 300, "grasshopp": 301, "contribut": 302, "guid": 302, "attribut": 304, "featur": 307, "topologi": 308, "compon": 308, "t": 308, "butt": 308, "l": 308, "miter": 308, "automaticjoint": 308, "wizzard": 308, "show": 309, "util": 310, "bake": 310, "boxmap": 310, "workflow": 311}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"API Reference": [[0, "api-reference"]], "Packages": [[0, "packages"]], "compas_timber.assembly": [[1, "compas-timber-assembly"]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [7, "classes"]], "compas_timber.connections": [[2, "compas-timber-connections"]], "Functions": [[2, "functions"]], "Exceptions": [[2, "exceptions"]], "compas_timber.consumers": [[3, "compas-timber-consumers"]], "compas_timber.fabrication": [[4, "compas-timber-fabrication"]], "compas_timber.ghpython": [[5, "compas-timber-ghpython"]], "compas_timber.parts": [[6, "compas-timber-parts"]], "compas_timber.planning": [[7, "compas-timber-planning"]], "rhino": [[8, "rhino"]], "Plugins": [[8, "plugins"]], "TimberAssembly": [[9, "timberassembly"]], "TimberAssembly.ToString": [[10, "timberassembly-tostring"]], "TimberAssembly.add_beam": [[11, "timberassembly-add-beam"]], "TimberAssembly.add_connection": [[12, "timberassembly-add-connection"]], "TimberAssembly.add_joint": [[13, "timberassembly-add-joint"]], "TimberAssembly.add_part": [[14, "timberassembly-add-part"]], "TimberAssembly.are_parts_joined": [[15, "timberassembly-are-parts-joined"]], "TimberAssembly.connections": [[16, "timberassembly-connections"]], "TimberAssembly.contains": [[17, "timberassembly-contains"]], "TimberAssembly.copy": [[18, "timberassembly-copy"]], "TimberAssembly.delete_connection": [[19, "timberassembly-delete-connection"]], "TimberAssembly.delete_part": [[20, "timberassembly-delete-part"]], "TimberAssembly.find": [[21, "timberassembly-find"]], "TimberAssembly.find_by_key": [[22, "timberassembly-find-by-key"]], "TimberAssembly.from_json": [[23, "timberassembly-from-json"]], "TimberAssembly.from_jsonstring": [[24, "timberassembly-from-jsonstring"]], "TimberAssembly.parts": [[25, "timberassembly-parts"]], "TimberAssembly.remove_joint": [[26, "timberassembly-remove-joint"]], "TimberAssembly.set_topologies": [[27, "timberassembly-set-topologies"]], "TimberAssembly.sha256": [[28, "timberassembly-sha256"]], "TimberAssembly.to_json": [[29, "timberassembly-to-json"]], "TimberAssembly.to_jsonstring": [[30, "timberassembly-to-jsonstring"]], "TimberAssembly.transform": [[31, "timberassembly-transform"]], "TimberAssembly.transform_numpy": [[32, "timberassembly-transform-numpy"]], "TimberAssembly.transformed": [[33, "timberassembly-transformed"]], "TimberAssembly.transformed_numpy": [[34, "timberassembly-transformed-numpy"]], "TimberAssembly.validate_data": [[35, "timberassembly-validate-data"]], "BeamJoinningError": [[36, "beamjoinningerror"]], "ConnectionSolver": [[37, "connectionsolver"]], "ConnectionSolver.find_intersecting_pairs": [[38, "connectionsolver-find-intersecting-pairs"]], "ConnectionSolver.find_topology": [[39, "connectionsolver-find-topology"]], "FrenchRidgeLapJoint": [[40, "frenchridgelapjoint"]], "FrenchRidgeLapJoint.ToString": [[41, "frenchridgelapjoint-tostring"]], "FrenchRidgeLapJoint.add_features": [[42, "frenchridgelapjoint-add-features"]], "FrenchRidgeLapJoint.check_geometry": [[43, "frenchridgelapjoint-check-geometry"]], "FrenchRidgeLapJoint.copy": [[44, "frenchridgelapjoint-copy"]], "FrenchRidgeLapJoint.create": [[45, "frenchridgelapjoint-create"]], "FrenchRidgeLapJoint.from_json": [[46, "frenchridgelapjoint-from-json"]], "FrenchRidgeLapJoint.from_jsonstring": [[47, "frenchridgelapjoint-from-jsonstring"]], "FrenchRidgeLapJoint.restore_beams_from_keys": [[48, "frenchridgelapjoint-restore-beams-from-keys"]], "FrenchRidgeLapJoint.sha256": [[49, "frenchridgelapjoint-sha256"]], "FrenchRidgeLapJoint.to_json": [[50, "frenchridgelapjoint-to-json"]], "FrenchRidgeLapJoint.to_jsonstring": [[51, "frenchridgelapjoint-to-jsonstring"]], "FrenchRidgeLapJoint.validate_data": [[52, "frenchridgelapjoint-validate-data"]], "Joint": [[53, "joint"]], "Joint.ToString": [[54, "joint-tostring"]], "Joint.add_features": [[55, "joint-add-features"]], "Joint.copy": [[56, "joint-copy"]], "Joint.create": [[57, "joint-create"]], "Joint.from_json": [[58, "joint-from-json"]], "Joint.from_jsonstring": [[59, "joint-from-jsonstring"]], "Joint.restore_beams_from_keys": [[60, "joint-restore-beams-from-keys"]], "Joint.sha256": [[61, "joint-sha256"]], "Joint.to_json": [[62, "joint-to-json"]], "Joint.to_jsonstring": [[63, "joint-to-jsonstring"]], "Joint.validate_data": [[64, "joint-validate-data"]], "JointTopology": [[65, "jointtopology"]], "JointTopology.get_name": [[66, "jointtopology-get-name"]], "LButtJoint": [[67, "lbuttjoint"]], "LButtJoint.ToString": [[68, "lbuttjoint-tostring"]], "LButtJoint.add_features": [[69, "lbuttjoint-add-features"]], "LButtJoint.copy": [[70, "lbuttjoint-copy"]], "LButtJoint.create": [[71, "lbuttjoint-create"]], "LButtJoint.from_json": [[72, "lbuttjoint-from-json"]], "LButtJoint.from_jsonstring": [[73, "lbuttjoint-from-jsonstring"]], "LButtJoint.get_cross_cutting_plane": [[74, "lbuttjoint-get-cross-cutting-plane"]], "LButtJoint.get_main_cutting_plane": [[75, "lbuttjoint-get-main-cutting-plane"]], "LButtJoint.restore_beams_from_keys": [[76, "lbuttjoint-restore-beams-from-keys"]], "LButtJoint.sha256": [[77, "lbuttjoint-sha256"]], "LButtJoint.to_json": [[78, "lbuttjoint-to-json"]], "LButtJoint.to_jsonstring": [[79, "lbuttjoint-to-jsonstring"]], "LButtJoint.validate_data": [[80, "lbuttjoint-validate-data"]], "LHalfLapJoint": [[81, "lhalflapjoint"]], "LHalfLapJoint.ToString": [[82, "lhalflapjoint-tostring"]], "LHalfLapJoint.add_features": [[83, "lhalflapjoint-add-features"]], "LHalfLapJoint.copy": [[84, "lhalflapjoint-copy"]], "LHalfLapJoint.create": [[85, "lhalflapjoint-create"]], "LHalfLapJoint.from_json": [[86, "lhalflapjoint-from-json"]], "LHalfLapJoint.from_jsonstring": [[87, "lhalflapjoint-from-jsonstring"]], "LHalfLapJoint.get_cross_cutting_frame": [[88, "lhalflapjoint-get-cross-cutting-frame"]], "LHalfLapJoint.get_main_cutting_frame": [[89, "lhalflapjoint-get-main-cutting-frame"]], "LHalfLapJoint.restore_beams_from_keys": [[90, "lhalflapjoint-restore-beams-from-keys"]], "LHalfLapJoint.sha256": [[91, "lhalflapjoint-sha256"]], "LHalfLapJoint.to_json": [[92, "lhalflapjoint-to-json"]], "LHalfLapJoint.to_jsonstring": [[93, "lhalflapjoint-to-jsonstring"]], "LHalfLapJoint.validate_data": [[94, "lhalflapjoint-validate-data"]], "LMiterJoint": [[95, "lmiterjoint"]], "LMiterJoint.ToString": [[96, "lmiterjoint-tostring"]], "LMiterJoint.add_features": [[97, "lmiterjoint-add-features"]], "LMiterJoint.copy": [[98, "lmiterjoint-copy"]], "LMiterJoint.create": [[99, "lmiterjoint-create"]], "LMiterJoint.from_json": [[100, "lmiterjoint-from-json"]], "LMiterJoint.from_jsonstring": [[101, "lmiterjoint-from-jsonstring"]], "LMiterJoint.get_cutting_planes": [[102, "lmiterjoint-get-cutting-planes"]], "LMiterJoint.restore_beams_from_keys": [[103, "lmiterjoint-restore-beams-from-keys"]], "LMiterJoint.sha256": [[104, "lmiterjoint-sha256"]], "LMiterJoint.to_json": [[105, "lmiterjoint-to-json"]], "LMiterJoint.to_jsonstring": [[106, "lmiterjoint-to-jsonstring"]], "LMiterJoint.validate_data": [[107, "lmiterjoint-validate-data"]], "LapJoint": [[108, "lapjoint"]], "LapJoint.ToString": [[109, "lapjoint-tostring"]], "LapJoint.add_features": [[110, "lapjoint-add-features"]], "LapJoint.copy": [[111, "lapjoint-copy"]], "LapJoint.create": [[112, "lapjoint-create"]], "LapJoint.from_json": [[113, "lapjoint-from-json"]], "LapJoint.from_jsonstring": [[114, "lapjoint-from-jsonstring"]], "LapJoint.get_cross_cutting_frame": [[115, "lapjoint-get-cross-cutting-frame"]], "LapJoint.get_main_cutting_frame": [[116, "lapjoint-get-main-cutting-frame"]], "LapJoint.restore_beams_from_keys": [[117, "lapjoint-restore-beams-from-keys"]], "LapJoint.sha256": [[118, "lapjoint-sha256"]], "LapJoint.to_json": [[119, "lapjoint-to-json"]], "LapJoint.to_jsonstring": [[120, "lapjoint-to-jsonstring"]], "LapJoint.validate_data": [[121, "lapjoint-validate-data"]], "TButtJoint": [[122, "tbuttjoint"]], "TButtJoint.ToString": [[123, "tbuttjoint-tostring"]], "TButtJoint.add_features": [[124, "tbuttjoint-add-features"]], "TButtJoint.copy": [[125, "tbuttjoint-copy"]], "TButtJoint.create": [[126, "tbuttjoint-create"]], "TButtJoint.from_json": [[127, "tbuttjoint-from-json"]], "TButtJoint.from_jsonstring": [[128, "tbuttjoint-from-jsonstring"]], "TButtJoint.get_cutting_plane": [[129, "tbuttjoint-get-cutting-plane"]], "TButtJoint.restore_beams_from_keys": [[130, "tbuttjoint-restore-beams-from-keys"]], "TButtJoint.sha256": [[131, "tbuttjoint-sha256"]], "TButtJoint.to_json": [[132, "tbuttjoint-to-json"]], "TButtJoint.to_jsonstring": [[133, "tbuttjoint-to-jsonstring"]], "TButtJoint.validate_data": [[134, "tbuttjoint-validate-data"]], "THalfLapJoint": [[135, "thalflapjoint"]], "THalfLapJoint.ToString": [[136, "thalflapjoint-tostring"]], "THalfLapJoint.add_features": [[137, "thalflapjoint-add-features"]], "THalfLapJoint.copy": [[138, "thalflapjoint-copy"]], "THalfLapJoint.create": [[139, "thalflapjoint-create"]], "THalfLapJoint.from_json": [[140, "thalflapjoint-from-json"]], "THalfLapJoint.from_jsonstring": [[141, "thalflapjoint-from-jsonstring"]], "THalfLapJoint.get_cross_cutting_frame": [[142, "thalflapjoint-get-cross-cutting-frame"]], "THalfLapJoint.get_main_cutting_frame": [[143, "thalflapjoint-get-main-cutting-frame"]], "THalfLapJoint.restore_beams_from_keys": [[144, "thalflapjoint-restore-beams-from-keys"]], "THalfLapJoint.sha256": [[145, "thalflapjoint-sha256"]], "THalfLapJoint.to_json": [[146, "thalflapjoint-to-json"]], "THalfLapJoint.to_jsonstring": [[147, "thalflapjoint-to-jsonstring"]], "THalfLapJoint.validate_data": [[148, "thalflapjoint-validate-data"]], "XHalfLapJoint": [[149, "xhalflapjoint"]], "XHalfLapJoint.ToString": [[150, "xhalflapjoint-tostring"]], "XHalfLapJoint.add_features": [[151, "xhalflapjoint-add-features"]], "XHalfLapJoint.copy": [[152, "xhalflapjoint-copy"]], "XHalfLapJoint.create": [[153, "xhalflapjoint-create"]], "XHalfLapJoint.from_json": [[154, "xhalflapjoint-from-json"]], "XHalfLapJoint.from_jsonstring": [[155, "xhalflapjoint-from-jsonstring"]], "XHalfLapJoint.get_cross_cutting_frame": [[156, "xhalflapjoint-get-cross-cutting-frame"]], "XHalfLapJoint.get_main_cutting_frame": [[157, "xhalflapjoint-get-main-cutting-frame"]], "XHalfLapJoint.restore_beams_from_keys": [[158, "xhalflapjoint-restore-beams-from-keys"]], "XHalfLapJoint.sha256": [[159, "xhalflapjoint-sha256"]], "XHalfLapJoint.to_json": [[160, "xhalflapjoint-to-json"]], "XHalfLapJoint.to_jsonstring": [[161, "xhalflapjoint-to-jsonstring"]], "XHalfLapJoint.validate_data": [[162, "xhalflapjoint-validate-data"]], "beam_side_incidence": [[163, "beam-side-incidence"]], "find_neighboring_beams": [[164, "find-neighboring-beams"], [294, "find-neighboring-beams"]], "BeamGeometry": [[165, "beamgeometry"]], "BrepGeometryConsumer": [[166, "brepgeometryconsumer"]], "CutFeature": [[167, "cutfeature"]], "CutFeature.ToString": [[168, "cutfeature-tostring"]], "CutFeature.copy": [[169, "cutfeature-copy"]], "CutFeature.from_json": [[170, "cutfeature-from-json"]], "CutFeature.from_jsonstring": [[171, "cutfeature-from-jsonstring"]], "CutFeature.sha256": [[172, "cutfeature-sha256"]], "CutFeature.to_json": [[173, "cutfeature-to-json"]], "CutFeature.to_jsonstring": [[174, "cutfeature-to-jsonstring"]], "CutFeature.validate_data": [[175, "cutfeature-validate-data"]], "CutFeatureGeometry": [[176, "cutfeaturegeometry"]], "CutFeatureGeometry.apply": [[177, "cutfeaturegeometry-apply"]], "DrillFeature": [[178, "drillfeature"]], "DrillFeature.ToString": [[179, "drillfeature-tostring"]], "DrillFeature.copy": [[180, "drillfeature-copy"]], "DrillFeature.from_json": [[181, "drillfeature-from-json"]], "DrillFeature.from_jsonstring": [[182, "drillfeature-from-jsonstring"]], "DrillFeature.sha256": [[183, "drillfeature-sha256"]], "DrillFeature.to_json": [[184, "drillfeature-to-json"]], "DrillFeature.to_jsonstring": [[185, "drillfeature-to-jsonstring"]], "DrillFeature.validate_data": [[186, "drillfeature-validate-data"]], "DrillFeatureGeometry": [[187, "drillfeaturegeometry"]], "DrillFeatureGeometry.apply": [[188, "drillfeaturegeometry-apply"]], "FeatureApplicationError": [[189, "featureapplicationerror"]], "FeatureApplicator": [[190, "featureapplicator"]], "FeatureApplicator.apply": [[191, "featureapplicator-apply"]], "MillVolume": [[192, "millvolume"]], "MillVolume.ToString": [[193, "millvolume-tostring"]], "MillVolume.copy": [[194, "millvolume-copy"]], "MillVolume.from_json": [[195, "millvolume-from-json"]], "MillVolume.from_jsonstring": [[196, "millvolume-from-jsonstring"]], "MillVolume.sha256": [[197, "millvolume-sha256"]], "MillVolume.to_json": [[198, "millvolume-to-json"]], "MillVolume.to_jsonstring": [[199, "millvolume-to-jsonstring"]], "MillVolume.validate_data": [[200, "millvolume-validate-data"]], "MillVolumeGeometry": [[201, "millvolumegeometry"]], "MillVolumeGeometry.apply": [[202, "millvolumegeometry-apply"]], "BTLx": [[203, "btlx"]], "BTLx.btlx_string": [[204, "btlx-btlx-string"]], "BTLx.process_assembly": [[205, "btlx-process-assembly"]], "BTLx.register_joint": [[206, "btlx-register-joint"]], "BTLxFrenchRidgeLap": [[207, "btlxfrenchridgelap"]], "BTLxFrenchRidgeLap.create_process": [[208, "btlxfrenchridgelap-create-process"]], "BTLxFrenchRidgeLap.get_params": [[209, "btlxfrenchridgelap-get-params"]], "BTLxFrenchRidgeLap.process_joints": [[210, "btlxfrenchridgelap-process-joints"]], "BTLxJackCut": [[211, "btlxjackcut"]], "BTLxJackCut.create_process": [[212, "btlxjackcut-create-process"]], "BTLxJackCut.generate_process": [[213, "btlxjackcut-generate-process"]], "BTLxProcess": [[214, "btlxprocess"]], "FrenchRidgeFactory": [[215, "frenchridgefactory"]], "FrenchRidgeFactory.apply_processings": [[216, "frenchridgefactory-apply-processings"]], "LButtFactory": [[217, "lbuttfactory"]], "LButtFactory.apply_processings": [[218, "lbuttfactory-apply-processings"]], "LMiterFactory": [[219, "lmiterfactory"]], "LMiterFactory.apply_processings": [[220, "lmiterfactory-apply-processings"]], "TButtFactory": [[221, "tbuttfactory"]], "TButtFactory.apply_processings": [[222, "tbuttfactory-apply-processings"]], "CategoryRule": [[223, "categoryrule"]], "CategoryRule.ToString": [[224, "categoryrule-tostring"]], "CategoryRule.comply": [[225, "categoryrule-comply"]], "CategoryRule.reorder": [[226, "categoryrule-reorder"]], "DebugInfomation": [[227, "debuginfomation"]], "DebugInfomation.ToString": [[228, "debuginfomation-tostring"]], "DebugInfomation.add_feature_error": [[229, "debuginfomation-add-feature-error"]], "DebugInfomation.add_joint_error": [[230, "debuginfomation-add-joint-error"]], "DirectRule": [[231, "directrule"]], "DirectRule.ToString": [[232, "directrule-tostring"]], "DirectRule.comply": [[233, "directrule-comply"]], "FeatureDefinition": [[234, "featuredefinition"]], "FeatureDefinition.ToString": [[235, "featuredefinition-tostring"]], "JointDefinition": [[236, "jointdefinition"]], "JointDefinition.ToString": [[237, "jointdefinition-tostring"]], "JointDefinition.is_identical": [[238, "jointdefinition-is-identical"]], "JointDefinition.match": [[239, "jointdefinition-match"]], "JointOptions": [[240, "jointoptions"]], "JointOptions.ToString": [[241, "jointoptions-tostring"]], "JointOptions.is_identical": [[242, "jointoptions-is-identical"]], "TopologyRule": [[243, "topologyrule"]], "TopologyRule.ToString": [[244, "topologyrule-tostring"]], "TopologyRule.comply": [[245, "topologyrule-comply"]], "Beam": [[246, "beam"], [305, "beam"]], "Beam.ToString": [[247, "beam-tostring"]], "Beam.add_blank_extension": [[248, "beam-add-blank-extension"]], "Beam.add_feature": [[249, "beam-add-feature"]], "Beam.add_features": [[250, "beam-add-features"]], "Beam.align_z": [[251, "beam-align-z"]], "Beam.clear_features": [[252, "beam-clear-features"]], "Beam.copy": [[253, "beam-copy"]], "Beam.endpoint_closest_to_point": [[254, "beam-endpoint-closest-to-point"]], "Beam.extension_to_plane": [[255, "beam-extension-to-plane"]], "Beam.from_centerline": [[256, "beam-from-centerline"]], "Beam.from_endpoints": [[257, "beam-from-endpoints"]], "Beam.from_json": [[258, "beam-from-json"]], "Beam.from_jsonstring": [[259, "beam-from-jsonstring"]], "Beam.get_geometry": [[260, "beam-get-geometry"]], "Beam.remove_blank_extension": [[261, "beam-remove-blank-extension"]], "Beam.remove_features": [[262, "beam-remove-features"]], "Beam.sha256": [[263, "beam-sha256"]], "Beam.to_json": [[264, "beam-to-json"]], "Beam.to_jsonstring": [[265, "beam-to-jsonstring"]], "Beam.transform": [[266, "beam-transform"]], "Beam.transform_numpy": [[267, "beam-transform-numpy"]], "Beam.transformed": [[268, "beam-transformed"]], "Beam.transformed_numpy": [[269, "beam-transformed-numpy"]], "Beam.validate_data": [[270, "beam-validate-data"]], "Actor": [[271, "actor"]], "Actor.get_name": [[272, "actor-get-name"]], "BuildingPlan": [[273, "buildingplan"]], "BuildingPlan.ToString": [[274, "buildingplan-tostring"]], "BuildingPlan.add_step": [[275, "buildingplan-add-step"]], "BuildingPlan.copy": [[276, "buildingplan-copy"]], "BuildingPlan.from_json": [[277, "buildingplan-from-json"]], "BuildingPlan.from_jsonstring": [[278, "buildingplan-from-jsonstring"]], "BuildingPlan.sha256": [[279, "buildingplan-sha256"]], "BuildingPlan.to_json": [[280, "buildingplan-to-json"]], "BuildingPlan.to_jsonstring": [[281, "buildingplan-to-jsonstring"]], "BuildingPlan.validate_data": [[282, "buildingplan-validate-data"]], "SimpleSequenceGenerator": [[283, "simplesequencegenerator"]], "Step": [[284, "step"]], "Step.ToString": [[285, "step-tostring"]], "Step.copy": [[286, "step-copy"]], "Step.from_json": [[287, "step-from-json"]], "Step.from_jsonstring": [[288, "step-from-jsonstring"]], "Step.sha256": [[289, "step-sha256"]], "Step.to_json": [[290, "step-to-json"]], "Step.to_jsonstring": [[291, "step-to-jsonstring"]], "Step.transform": [[292, "step-transform"]], "Step.validate_data": [[293, "step-validate-data"]], "Citing": [[295, "citing"]], "Examples": [[296, "examples"], [306, "examples"]], "Timber Assembly Examples": [[296, "timber-assembly-examples"]], "Create Joint": [[297, "create-joint"]], "COMPAS TIMBER": [[298, "compas-timber"]], "Dependencies": [[298, "dependencies"]], "Table of Contents": [[298, "table-of-contents"]], "Indices and tables": [[298, "indices-and-tables"]], "Installation": [[299, "installation"]], "Stable": [[299, "stable"]], "Install with pip": [[299, "install-with-pip"]], "Development": [[299, "development"]], "License": [[300, "license"]], "Grasshopper plugin": [[301, "grasshopper-plugin"]], "BTLx Contribution Guide": [[302, "btlx-contribution-guide"]], "Assembly": [[303, "assembly"]], "Attributes": [[304, "attributes"]], "Features": [[307, "features"]], "Joints": [[308, "joints"]], "Joint Topologies": [[308, "joint-topologies"]], "Joint components": [[308, "joint-components"]], "T-Butt": [[308, "t-butt"]], "L-Butt": [[308, "l-butt"]], "L-Miter": [[308, "l-miter"]], "AutomaticJoint wizzard": [[308, "automaticjoint-wizzard"]], "Show": [[309, "show"]], "Utils": [[310, "utils"]], "Bake with BoxMap": [[310, "bake-with-boxmap"]], "Workflow": [[311, "workflow"]]}, "indexentries": {"timberassembly (class in compas_timber.assembly)": [[9, "compas_timber.assembly.TimberAssembly"]], "tostring() (compas_timber.assembly.timberassembly method)": [[10, "compas_timber.assembly.TimberAssembly.ToString"]], "add_beam() (compas_timber.assembly.timberassembly method)": [[11, "compas_timber.assembly.TimberAssembly.add_beam"]], "add_connection() (compas_timber.assembly.timberassembly method)": [[12, "compas_timber.assembly.TimberAssembly.add_connection"]], "add_joint() (compas_timber.assembly.timberassembly method)": [[13, "compas_timber.assembly.TimberAssembly.add_joint"]], "add_part() (compas_timber.assembly.timberassembly method)": [[14, "compas_timber.assembly.TimberAssembly.add_part"]], "are_parts_joined() (compas_timber.assembly.timberassembly method)": [[15, "compas_timber.assembly.TimberAssembly.are_parts_joined"]], "connections() (compas_timber.assembly.timberassembly method)": [[16, "compas_timber.assembly.TimberAssembly.connections"]], "contains() (compas_timber.assembly.timberassembly method)": [[17, "compas_timber.assembly.TimberAssembly.contains"]], "copy() (compas_timber.assembly.timberassembly method)": [[18, "compas_timber.assembly.TimberAssembly.copy"]], "delete_connection() (compas_timber.assembly.timberassembly method)": [[19, "compas_timber.assembly.TimberAssembly.delete_connection"]], "delete_part() (compas_timber.assembly.timberassembly method)": [[20, "compas_timber.assembly.TimberAssembly.delete_part"]], "find() (compas_timber.assembly.timberassembly method)": [[21, "compas_timber.assembly.TimberAssembly.find"]], "find_by_key() (compas_timber.assembly.timberassembly method)": [[22, "compas_timber.assembly.TimberAssembly.find_by_key"]], "from_json() (compas_timber.assembly.timberassembly class method)": [[23, "compas_timber.assembly.TimberAssembly.from_json"]], "from_jsonstring() (compas_timber.assembly.timberassembly class method)": [[24, "compas_timber.assembly.TimberAssembly.from_jsonstring"]], "parts() (compas_timber.assembly.timberassembly method)": [[25, "compas_timber.assembly.TimberAssembly.parts"]], "remove_joint() (compas_timber.assembly.timberassembly method)": [[26, "compas_timber.assembly.TimberAssembly.remove_joint"]], "set_topologies() (compas_timber.assembly.timberassembly method)": [[27, "compas_timber.assembly.TimberAssembly.set_topologies"]], "sha256() (compas_timber.assembly.timberassembly method)": [[28, "compas_timber.assembly.TimberAssembly.sha256"]], "to_json() (compas_timber.assembly.timberassembly method)": [[29, "compas_timber.assembly.TimberAssembly.to_json"]], "to_jsonstring() (compas_timber.assembly.timberassembly method)": [[30, "compas_timber.assembly.TimberAssembly.to_jsonstring"]], "transform() (compas_timber.assembly.timberassembly method)": [[31, "compas_timber.assembly.TimberAssembly.transform"]], "transform_numpy() (compas_timber.assembly.timberassembly method)": [[32, "compas_timber.assembly.TimberAssembly.transform_numpy"]], "transformed() (compas_timber.assembly.timberassembly method)": [[33, "compas_timber.assembly.TimberAssembly.transformed"]], "transformed_numpy() (compas_timber.assembly.timberassembly method)": [[34, "compas_timber.assembly.TimberAssembly.transformed_numpy"]], "validate_data() (compas_timber.assembly.timberassembly class method)": [[35, "compas_timber.assembly.TimberAssembly.validate_data"]], "beamjoinningerror": [[36, "compas_timber.connections.BeamJoinningError"]], "connectionsolver (class in compas_timber.connections)": [[37, "compas_timber.connections.ConnectionSolver"]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[38, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs"]], "find_topology() (compas_timber.connections.connectionsolver method)": [[39, "compas_timber.connections.ConnectionSolver.find_topology"]], "frenchridgelapjoint (class in compas_timber.connections)": [[40, "compas_timber.connections.FrenchRidgeLapJoint"]], "tostring() (compas_timber.connections.frenchridgelapjoint method)": [[41, "compas_timber.connections.FrenchRidgeLapJoint.ToString"]], "add_features() (compas_timber.connections.frenchridgelapjoint method)": [[42, "compas_timber.connections.FrenchRidgeLapJoint.add_features"]], "check_geometry() (compas_timber.connections.frenchridgelapjoint method)": [[43, "compas_timber.connections.FrenchRidgeLapJoint.check_geometry"]], "copy() (compas_timber.connections.frenchridgelapjoint method)": [[44, "compas_timber.connections.FrenchRidgeLapJoint.copy"]], "create() (compas_timber.connections.frenchridgelapjoint class method)": [[45, "compas_timber.connections.FrenchRidgeLapJoint.create"]], "from_json() (compas_timber.connections.frenchridgelapjoint class method)": [[46, "compas_timber.connections.FrenchRidgeLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.frenchridgelapjoint class method)": [[47, "compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.frenchridgelapjoint method)": [[48, "compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.frenchridgelapjoint method)": [[49, "compas_timber.connections.FrenchRidgeLapJoint.sha256"]], "to_json() (compas_timber.connections.frenchridgelapjoint method)": [[50, "compas_timber.connections.FrenchRidgeLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.frenchridgelapjoint method)": [[51, "compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.frenchridgelapjoint class method)": [[52, "compas_timber.connections.FrenchRidgeLapJoint.validate_data"]], "joint (class in compas_timber.connections)": [[53, "compas_timber.connections.Joint"]], "tostring() (compas_timber.connections.joint method)": [[54, "compas_timber.connections.Joint.ToString"]], "add_features() (compas_timber.connections.joint method)": [[55, "compas_timber.connections.Joint.add_features"]], "copy() (compas_timber.connections.joint method)": [[56, "compas_timber.connections.Joint.copy"]], "create() (compas_timber.connections.joint class method)": [[57, "compas_timber.connections.Joint.create"]], "from_json() (compas_timber.connections.joint class method)": [[58, "compas_timber.connections.Joint.from_json"]], "from_jsonstring() (compas_timber.connections.joint class method)": [[59, "compas_timber.connections.Joint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[60, "compas_timber.connections.Joint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.joint method)": [[61, "compas_timber.connections.Joint.sha256"]], "to_json() (compas_timber.connections.joint method)": [[62, "compas_timber.connections.Joint.to_json"]], "to_jsonstring() (compas_timber.connections.joint method)": [[63, "compas_timber.connections.Joint.to_jsonstring"]], "validate_data() (compas_timber.connections.joint class method)": [[64, "compas_timber.connections.Joint.validate_data"]], "jointtopology (class in compas_timber.connections)": [[65, "compas_timber.connections.JointTopology"]], "get_name() (compas_timber.connections.jointtopology class method)": [[66, "compas_timber.connections.JointTopology.get_name"]], "lbuttjoint (class in compas_timber.connections)": [[67, "compas_timber.connections.LButtJoint"]], "tostring() (compas_timber.connections.lbuttjoint method)": [[68, "compas_timber.connections.LButtJoint.ToString"]], "add_features() (compas_timber.connections.lbuttjoint method)": [[69, "compas_timber.connections.LButtJoint.add_features"]], "copy() (compas_timber.connections.lbuttjoint method)": [[70, "compas_timber.connections.LButtJoint.copy"]], "create() (compas_timber.connections.lbuttjoint class method)": [[71, "compas_timber.connections.LButtJoint.create"]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[72, "compas_timber.connections.LButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[73, "compas_timber.connections.LButtJoint.from_jsonstring"]], "get_cross_cutting_plane() (compas_timber.connections.lbuttjoint method)": [[74, "compas_timber.connections.LButtJoint.get_cross_cutting_plane"]], "get_main_cutting_plane() (compas_timber.connections.lbuttjoint method)": [[75, "compas_timber.connections.LButtJoint.get_main_cutting_plane"]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[76, "compas_timber.connections.LButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lbuttjoint method)": [[77, "compas_timber.connections.LButtJoint.sha256"]], "to_json() (compas_timber.connections.lbuttjoint method)": [[78, "compas_timber.connections.LButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lbuttjoint method)": [[79, "compas_timber.connections.LButtJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lbuttjoint class method)": [[80, "compas_timber.connections.LButtJoint.validate_data"]], "lhalflapjoint (class in compas_timber.connections)": [[81, "compas_timber.connections.LHalfLapJoint"]], "tostring() (compas_timber.connections.lhalflapjoint method)": [[82, "compas_timber.connections.LHalfLapJoint.ToString"]], "add_features() (compas_timber.connections.lhalflapjoint method)": [[83, "compas_timber.connections.LHalfLapJoint.add_features"]], "copy() (compas_timber.connections.lhalflapjoint method)": [[84, "compas_timber.connections.LHalfLapJoint.copy"]], "create() (compas_timber.connections.lhalflapjoint class method)": [[85, "compas_timber.connections.LHalfLapJoint.create"]], "from_json() (compas_timber.connections.lhalflapjoint class method)": [[86, "compas_timber.connections.LHalfLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lhalflapjoint class method)": [[87, "compas_timber.connections.LHalfLapJoint.from_jsonstring"]], "get_cross_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[88, "compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame"]], "get_main_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[89, "compas_timber.connections.LHalfLapJoint.get_main_cutting_frame"]], "restore_beams_from_keys() (compas_timber.connections.lhalflapjoint method)": [[90, "compas_timber.connections.LHalfLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lhalflapjoint method)": [[91, "compas_timber.connections.LHalfLapJoint.sha256"]], "to_json() (compas_timber.connections.lhalflapjoint method)": [[92, "compas_timber.connections.LHalfLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lhalflapjoint method)": [[93, "compas_timber.connections.LHalfLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lhalflapjoint class method)": [[94, "compas_timber.connections.LHalfLapJoint.validate_data"]], "lmiterjoint (class in compas_timber.connections)": [[95, "compas_timber.connections.LMiterJoint"]], "tostring() (compas_timber.connections.lmiterjoint method)": [[96, "compas_timber.connections.LMiterJoint.ToString"]], "add_features() (compas_timber.connections.lmiterjoint method)": [[97, "compas_timber.connections.LMiterJoint.add_features"]], "copy() (compas_timber.connections.lmiterjoint method)": [[98, "compas_timber.connections.LMiterJoint.copy"]], "create() (compas_timber.connections.lmiterjoint class method)": [[99, "compas_timber.connections.LMiterJoint.create"]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[100, "compas_timber.connections.LMiterJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[101, "compas_timber.connections.LMiterJoint.from_jsonstring"]], "get_cutting_planes() (compas_timber.connections.lmiterjoint method)": [[102, "compas_timber.connections.LMiterJoint.get_cutting_planes"]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[103, "compas_timber.connections.LMiterJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lmiterjoint method)": [[104, "compas_timber.connections.LMiterJoint.sha256"]], "to_json() (compas_timber.connections.lmiterjoint method)": [[105, "compas_timber.connections.LMiterJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lmiterjoint method)": [[106, "compas_timber.connections.LMiterJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lmiterjoint class method)": [[107, "compas_timber.connections.LMiterJoint.validate_data"]], "lapjoint (class in compas_timber.connections)": [[108, "compas_timber.connections.LapJoint"]], "tostring() (compas_timber.connections.lapjoint method)": [[109, "compas_timber.connections.LapJoint.ToString"]], "add_features() (compas_timber.connections.lapjoint method)": [[110, "compas_timber.connections.LapJoint.add_features"]], "copy() (compas_timber.connections.lapjoint method)": [[111, "compas_timber.connections.LapJoint.copy"]], "create() (compas_timber.connections.lapjoint class method)": [[112, "compas_timber.connections.LapJoint.create"]], "from_json() (compas_timber.connections.lapjoint class method)": [[113, "compas_timber.connections.LapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lapjoint class method)": [[114, "compas_timber.connections.LapJoint.from_jsonstring"]], "get_cross_cutting_frame() (compas_timber.connections.lapjoint method)": [[115, "compas_timber.connections.LapJoint.get_cross_cutting_frame"]], "get_main_cutting_frame() (compas_timber.connections.lapjoint method)": [[116, "compas_timber.connections.LapJoint.get_main_cutting_frame"]], "restore_beams_from_keys() (compas_timber.connections.lapjoint method)": [[117, "compas_timber.connections.LapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lapjoint method)": [[118, "compas_timber.connections.LapJoint.sha256"]], "to_json() (compas_timber.connections.lapjoint method)": [[119, "compas_timber.connections.LapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lapjoint method)": [[120, "compas_timber.connections.LapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lapjoint class method)": [[121, "compas_timber.connections.LapJoint.validate_data"]], "tbuttjoint (class in compas_timber.connections)": [[122, "compas_timber.connections.TButtJoint"]], "tostring() (compas_timber.connections.tbuttjoint method)": [[123, "compas_timber.connections.TButtJoint.ToString"]], "add_features() (compas_timber.connections.tbuttjoint method)": [[124, "compas_timber.connections.TButtJoint.add_features"]], "copy() (compas_timber.connections.tbuttjoint method)": [[125, "compas_timber.connections.TButtJoint.copy"]], "create() (compas_timber.connections.tbuttjoint class method)": [[126, "compas_timber.connections.TButtJoint.create"]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[127, "compas_timber.connections.TButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[128, "compas_timber.connections.TButtJoint.from_jsonstring"]], "get_cutting_plane() (compas_timber.connections.tbuttjoint method)": [[129, "compas_timber.connections.TButtJoint.get_cutting_plane"]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[130, "compas_timber.connections.TButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.tbuttjoint method)": [[131, "compas_timber.connections.TButtJoint.sha256"]], "to_json() (compas_timber.connections.tbuttjoint method)": [[132, "compas_timber.connections.TButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.tbuttjoint method)": [[133, "compas_timber.connections.TButtJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.tbuttjoint class method)": [[134, "compas_timber.connections.TButtJoint.validate_data"]], "thalflapjoint (class in compas_timber.connections)": [[135, "compas_timber.connections.THalfLapJoint"]], "tostring() (compas_timber.connections.thalflapjoint method)": [[136, "compas_timber.connections.THalfLapJoint.ToString"]], "add_features() (compas_timber.connections.thalflapjoint method)": [[137, "compas_timber.connections.THalfLapJoint.add_features"]], "copy() (compas_timber.connections.thalflapjoint method)": [[138, "compas_timber.connections.THalfLapJoint.copy"]], "create() (compas_timber.connections.thalflapjoint class method)": [[139, "compas_timber.connections.THalfLapJoint.create"]], "from_json() (compas_timber.connections.thalflapjoint class method)": [[140, "compas_timber.connections.THalfLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.thalflapjoint class method)": [[141, "compas_timber.connections.THalfLapJoint.from_jsonstring"]], "get_cross_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[142, "compas_timber.connections.THalfLapJoint.get_cross_cutting_frame"]], "get_main_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[143, "compas_timber.connections.THalfLapJoint.get_main_cutting_frame"]], "restore_beams_from_keys() (compas_timber.connections.thalflapjoint method)": [[144, "compas_timber.connections.THalfLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.thalflapjoint method)": [[145, "compas_timber.connections.THalfLapJoint.sha256"]], "to_json() (compas_timber.connections.thalflapjoint method)": [[146, "compas_timber.connections.THalfLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.thalflapjoint method)": [[147, "compas_timber.connections.THalfLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.thalflapjoint class method)": [[148, "compas_timber.connections.THalfLapJoint.validate_data"]], "xhalflapjoint (class in compas_timber.connections)": [[149, "compas_timber.connections.XHalfLapJoint"]], "tostring() (compas_timber.connections.xhalflapjoint method)": [[150, "compas_timber.connections.XHalfLapJoint.ToString"]], "add_features() (compas_timber.connections.xhalflapjoint method)": [[151, "compas_timber.connections.XHalfLapJoint.add_features"]], "copy() (compas_timber.connections.xhalflapjoint method)": [[152, "compas_timber.connections.XHalfLapJoint.copy"]], "create() (compas_timber.connections.xhalflapjoint class method)": [[153, "compas_timber.connections.XHalfLapJoint.create"]], "from_json() (compas_timber.connections.xhalflapjoint class method)": [[154, "compas_timber.connections.XHalfLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.xhalflapjoint class method)": [[155, "compas_timber.connections.XHalfLapJoint.from_jsonstring"]], "get_cross_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[156, "compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame"]], "get_main_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[157, "compas_timber.connections.XHalfLapJoint.get_main_cutting_frame"]], "restore_beams_from_keys() (compas_timber.connections.xhalflapjoint method)": [[158, "compas_timber.connections.XHalfLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.xhalflapjoint method)": [[159, "compas_timber.connections.XHalfLapJoint.sha256"]], "to_json() (compas_timber.connections.xhalflapjoint method)": [[160, "compas_timber.connections.XHalfLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.xhalflapjoint method)": [[161, "compas_timber.connections.XHalfLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.xhalflapjoint class method)": [[162, "compas_timber.connections.XHalfLapJoint.validate_data"]], "beam_side_incidence() (in module compas_timber.connections)": [[163, "compas_timber.connections.beam_side_incidence"]], "find_neighboring_beams() (in module compas_timber.connections)": [[164, "compas_timber.connections.find_neighboring_beams"]], "beamgeometry (class in compas_timber.consumers)": [[165, "compas_timber.consumers.BeamGeometry"]], "brepgeometryconsumer (class in compas_timber.consumers)": [[166, "compas_timber.consumers.BrepGeometryConsumer"]], "cutfeature (class in compas_timber.consumers)": [[167, "compas_timber.consumers.CutFeature"]], "tostring() (compas_timber.consumers.cutfeature method)": [[168, "compas_timber.consumers.CutFeature.ToString"]], "copy() (compas_timber.consumers.cutfeature method)": [[169, "compas_timber.consumers.CutFeature.copy"]], "from_json() (compas_timber.consumers.cutfeature class method)": [[170, "compas_timber.consumers.CutFeature.from_json"]], "from_jsonstring() (compas_timber.consumers.cutfeature class method)": [[171, "compas_timber.consumers.CutFeature.from_jsonstring"]], "sha256() (compas_timber.consumers.cutfeature method)": [[172, "compas_timber.consumers.CutFeature.sha256"]], "to_json() (compas_timber.consumers.cutfeature method)": [[173, "compas_timber.consumers.CutFeature.to_json"]], "to_jsonstring() (compas_timber.consumers.cutfeature method)": [[174, "compas_timber.consumers.CutFeature.to_jsonstring"]], "validate_data() (compas_timber.consumers.cutfeature class method)": [[175, "compas_timber.consumers.CutFeature.validate_data"]], "cutfeaturegeometry (class in compas_timber.consumers)": [[176, "compas_timber.consumers.CutFeatureGeometry"]], "apply() (compas_timber.consumers.cutfeaturegeometry method)": [[177, "compas_timber.consumers.CutFeatureGeometry.apply"]], "drillfeature (class in compas_timber.consumers)": [[178, "compas_timber.consumers.DrillFeature"]], "tostring() (compas_timber.consumers.drillfeature method)": [[179, "compas_timber.consumers.DrillFeature.ToString"]], "copy() (compas_timber.consumers.drillfeature method)": [[180, "compas_timber.consumers.DrillFeature.copy"]], "from_json() (compas_timber.consumers.drillfeature class method)": [[181, "compas_timber.consumers.DrillFeature.from_json"]], "from_jsonstring() (compas_timber.consumers.drillfeature class method)": [[182, "compas_timber.consumers.DrillFeature.from_jsonstring"]], "sha256() (compas_timber.consumers.drillfeature method)": [[183, "compas_timber.consumers.DrillFeature.sha256"]], "to_json() (compas_timber.consumers.drillfeature method)": [[184, "compas_timber.consumers.DrillFeature.to_json"]], "to_jsonstring() (compas_timber.consumers.drillfeature method)": [[185, "compas_timber.consumers.DrillFeature.to_jsonstring"]], "validate_data() (compas_timber.consumers.drillfeature class method)": [[186, "compas_timber.consumers.DrillFeature.validate_data"]], "drillfeaturegeometry (class in compas_timber.consumers)": [[187, "compas_timber.consumers.DrillFeatureGeometry"]], "apply() (compas_timber.consumers.drillfeaturegeometry method)": [[188, "compas_timber.consumers.DrillFeatureGeometry.apply"]], "featureapplicationerror": [[189, "compas_timber.consumers.FeatureApplicationError"]], "featureapplicator (class in compas_timber.consumers)": [[190, "compas_timber.consumers.FeatureApplicator"]], "apply() (compas_timber.consumers.featureapplicator method)": [[191, "compas_timber.consumers.FeatureApplicator.apply"]], "millvolume (class in compas_timber.consumers)": [[192, "compas_timber.consumers.MillVolume"]], "tostring() (compas_timber.consumers.millvolume method)": [[193, "compas_timber.consumers.MillVolume.ToString"]], "copy() (compas_timber.consumers.millvolume method)": [[194, "compas_timber.consumers.MillVolume.copy"]], "from_json() (compas_timber.consumers.millvolume class method)": [[195, "compas_timber.consumers.MillVolume.from_json"]], "from_jsonstring() (compas_timber.consumers.millvolume class method)": [[196, "compas_timber.consumers.MillVolume.from_jsonstring"]], "sha256() (compas_timber.consumers.millvolume method)": [[197, "compas_timber.consumers.MillVolume.sha256"]], "to_json() (compas_timber.consumers.millvolume method)": [[198, "compas_timber.consumers.MillVolume.to_json"]], "to_jsonstring() (compas_timber.consumers.millvolume method)": [[199, "compas_timber.consumers.MillVolume.to_jsonstring"]], "validate_data() (compas_timber.consumers.millvolume class method)": [[200, "compas_timber.consumers.MillVolume.validate_data"]], "millvolumegeometry (class in compas_timber.consumers)": [[201, "compas_timber.consumers.MillVolumeGeometry"]], "apply() (compas_timber.consumers.millvolumegeometry method)": [[202, "compas_timber.consumers.MillVolumeGeometry.apply"]], "btlx (class in compas_timber.fabrication)": [[203, "compas_timber.fabrication.BTLx"]], "btlx_string() (compas_timber.fabrication.btlx method)": [[204, "compas_timber.fabrication.BTLx.btlx_string"]], "process_assembly() (compas_timber.fabrication.btlx method)": [[205, "compas_timber.fabrication.BTLx.process_assembly"]], "register_joint() (compas_timber.fabrication.btlx class method)": [[206, "compas_timber.fabrication.BTLx.register_joint"]], "btlxfrenchridgelap (class in compas_timber.fabrication)": [[207, "compas_timber.fabrication.BTLxFrenchRidgeLap"]], "create_process() (compas_timber.fabrication.btlxfrenchridgelap class method)": [[208, "compas_timber.fabrication.BTLxFrenchRidgeLap.create_process"]], "get_params() (compas_timber.fabrication.btlxfrenchridgelap method)": [[209, "compas_timber.fabrication.BTLxFrenchRidgeLap.get_params"]], "process_joints() (compas_timber.fabrication.btlxfrenchridgelap method)": [[210, "compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints"]], "btlxjackcut (class in compas_timber.fabrication)": [[211, "compas_timber.fabrication.BTLxJackCut"]], "create_process() (compas_timber.fabrication.btlxjackcut class method)": [[212, "compas_timber.fabrication.BTLxJackCut.create_process"]], "generate_process() (compas_timber.fabrication.btlxjackcut method)": [[213, "compas_timber.fabrication.BTLxJackCut.generate_process"]], "btlxprocess (class in compas_timber.fabrication)": [[214, "compas_timber.fabrication.BTLxProcess"]], "frenchridgefactory (class in compas_timber.fabrication)": [[215, "compas_timber.fabrication.FrenchRidgeFactory"]], "apply_processings() (compas_timber.fabrication.frenchridgefactory class method)": [[216, "compas_timber.fabrication.FrenchRidgeFactory.apply_processings"]], "lbuttfactory (class in compas_timber.fabrication)": [[217, "compas_timber.fabrication.LButtFactory"]], "apply_processings() (compas_timber.fabrication.lbuttfactory class method)": [[218, "compas_timber.fabrication.LButtFactory.apply_processings"]], "lmiterfactory (class in compas_timber.fabrication)": [[219, "compas_timber.fabrication.LMiterFactory"]], "apply_processings() (compas_timber.fabrication.lmiterfactory class method)": [[220, "compas_timber.fabrication.LMiterFactory.apply_processings"]], "tbuttfactory (class in compas_timber.fabrication)": [[221, "compas_timber.fabrication.TButtFactory"]], "apply_processings() (compas_timber.fabrication.tbuttfactory class method)": [[222, "compas_timber.fabrication.TButtFactory.apply_processings"]], "categoryrule (class in compas_timber.ghpython)": [[223, "compas_timber.ghpython.CategoryRule"]], "tostring() (compas_timber.ghpython.categoryrule method)": [[224, "compas_timber.ghpython.CategoryRule.ToString"]], "comply() (compas_timber.ghpython.categoryrule method)": [[225, "compas_timber.ghpython.CategoryRule.comply"]], "reorder() (compas_timber.ghpython.categoryrule method)": [[226, "compas_timber.ghpython.CategoryRule.reorder"]], "debuginfomation (class in compas_timber.ghpython)": [[227, "compas_timber.ghpython.DebugInfomation"]], "tostring() (compas_timber.ghpython.debuginfomation method)": [[228, "compas_timber.ghpython.DebugInfomation.ToString"]], "add_feature_error() (compas_timber.ghpython.debuginfomation method)": [[229, "compas_timber.ghpython.DebugInfomation.add_feature_error"]], "add_joint_error() (compas_timber.ghpython.debuginfomation method)": [[230, "compas_timber.ghpython.DebugInfomation.add_joint_error"]], "directrule (class in compas_timber.ghpython)": [[231, "compas_timber.ghpython.DirectRule"]], "tostring() (compas_timber.ghpython.directrule method)": [[232, "compas_timber.ghpython.DirectRule.ToString"]], "comply() (compas_timber.ghpython.directrule method)": [[233, "compas_timber.ghpython.DirectRule.comply"]], "featuredefinition (class in compas_timber.ghpython)": [[234, "compas_timber.ghpython.FeatureDefinition"]], "tostring() (compas_timber.ghpython.featuredefinition method)": [[235, "compas_timber.ghpython.FeatureDefinition.ToString"]], "jointdefinition (class in compas_timber.ghpython)": [[236, "compas_timber.ghpython.JointDefinition"]], "tostring() (compas_timber.ghpython.jointdefinition method)": [[237, "compas_timber.ghpython.JointDefinition.ToString"]], "is_identical() (compas_timber.ghpython.jointdefinition method)": [[238, "compas_timber.ghpython.JointDefinition.is_identical"]], "match() (compas_timber.ghpython.jointdefinition method)": [[239, "compas_timber.ghpython.JointDefinition.match"]], "jointoptions (class in compas_timber.ghpython)": [[240, "compas_timber.ghpython.JointOptions"]], "tostring() (compas_timber.ghpython.jointoptions method)": [[241, "compas_timber.ghpython.JointOptions.ToString"]], "is_identical() (compas_timber.ghpython.jointoptions method)": [[242, "compas_timber.ghpython.JointOptions.is_identical"]], "topologyrule (class in compas_timber.ghpython)": [[243, "compas_timber.ghpython.TopologyRule"]], "tostring() (compas_timber.ghpython.topologyrule method)": [[244, "compas_timber.ghpython.TopologyRule.ToString"]], "comply() (compas_timber.ghpython.topologyrule method)": [[245, "compas_timber.ghpython.TopologyRule.comply"]], "beam (class in compas_timber.parts)": [[246, "compas_timber.parts.Beam"]], "tostring() (compas_timber.parts.beam method)": [[247, "compas_timber.parts.Beam.ToString"]], "add_blank_extension() (compas_timber.parts.beam method)": [[248, "compas_timber.parts.Beam.add_blank_extension"]], "add_feature() (compas_timber.parts.beam method)": [[249, "compas_timber.parts.Beam.add_feature"]], "add_features() (compas_timber.parts.beam method)": [[250, "compas_timber.parts.Beam.add_features"]], "align_z() (compas_timber.parts.beam method)": [[251, "compas_timber.parts.Beam.align_z"]], "clear_features() (compas_timber.parts.beam method)": [[252, "compas_timber.parts.Beam.clear_features"]], "copy() (compas_timber.parts.beam method)": [[253, "compas_timber.parts.Beam.copy"]], "endpoint_closest_to_point() (compas_timber.parts.beam method)": [[254, "compas_timber.parts.Beam.endpoint_closest_to_point"]], "extension_to_plane() (compas_timber.parts.beam method)": [[255, "compas_timber.parts.Beam.extension_to_plane"]], "from_centerline() (compas_timber.parts.beam class method)": [[256, "compas_timber.parts.Beam.from_centerline"]], "from_endpoints() (compas_timber.parts.beam class method)": [[257, "compas_timber.parts.Beam.from_endpoints"]], "from_json() (compas_timber.parts.beam class method)": [[258, "compas_timber.parts.Beam.from_json"]], "from_jsonstring() (compas_timber.parts.beam class method)": [[259, "compas_timber.parts.Beam.from_jsonstring"]], "get_geometry() (compas_timber.parts.beam method)": [[260, "compas_timber.parts.Beam.get_geometry"]], "remove_blank_extension() (compas_timber.parts.beam method)": [[261, "compas_timber.parts.Beam.remove_blank_extension"]], "remove_features() (compas_timber.parts.beam method)": [[262, "compas_timber.parts.Beam.remove_features"]], "sha256() (compas_timber.parts.beam method)": [[263, "compas_timber.parts.Beam.sha256"]], "to_json() (compas_timber.parts.beam method)": [[264, "compas_timber.parts.Beam.to_json"]], "to_jsonstring() (compas_timber.parts.beam method)": [[265, "compas_timber.parts.Beam.to_jsonstring"]], "transform() (compas_timber.parts.beam method)": [[266, "compas_timber.parts.Beam.transform"]], "transform_numpy() (compas_timber.parts.beam method)": [[267, "compas_timber.parts.Beam.transform_numpy"]], "transformed() (compas_timber.parts.beam method)": [[268, "compas_timber.parts.Beam.transformed"]], "transformed_numpy() (compas_timber.parts.beam method)": [[269, "compas_timber.parts.Beam.transformed_numpy"]], "validate_data() (compas_timber.parts.beam class method)": [[270, "compas_timber.parts.Beam.validate_data"]], "actor (class in compas_timber.planning)": [[271, "compas_timber.planning.Actor"]], "get_name() (compas_timber.planning.actor class method)": [[272, "compas_timber.planning.Actor.get_name"]], "buildingplan (class in compas_timber.planning)": [[273, "compas_timber.planning.BuildingPlan"]], "tostring() (compas_timber.planning.buildingplan method)": [[274, "compas_timber.planning.BuildingPlan.ToString"]], "add_step() (compas_timber.planning.buildingplan method)": [[275, "compas_timber.planning.BuildingPlan.add_step"]], "copy() (compas_timber.planning.buildingplan method)": [[276, "compas_timber.planning.BuildingPlan.copy"]], "from_json() (compas_timber.planning.buildingplan class method)": [[277, "compas_timber.planning.BuildingPlan.from_json"]], "from_jsonstring() (compas_timber.planning.buildingplan class method)": [[278, "compas_timber.planning.BuildingPlan.from_jsonstring"]], "sha256() (compas_timber.planning.buildingplan method)": [[279, "compas_timber.planning.BuildingPlan.sha256"]], "to_json() (compas_timber.planning.buildingplan method)": [[280, "compas_timber.planning.BuildingPlan.to_json"]], "to_jsonstring() (compas_timber.planning.buildingplan method)": [[281, "compas_timber.planning.BuildingPlan.to_jsonstring"]], "validate_data() (compas_timber.planning.buildingplan class method)": [[282, "compas_timber.planning.BuildingPlan.validate_data"]], "simplesequencegenerator (class in compas_timber.planning)": [[283, "compas_timber.planning.SimpleSequenceGenerator"]], "step (class in compas_timber.planning)": [[284, "compas_timber.planning.Step"]], "tostring() (compas_timber.planning.step method)": [[285, "compas_timber.planning.Step.ToString"]], "copy() (compas_timber.planning.step method)": [[286, "compas_timber.planning.Step.copy"]], "from_json() (compas_timber.planning.step class method)": [[287, "compas_timber.planning.Step.from_json"]], "from_jsonstring() (compas_timber.planning.step class method)": [[288, "compas_timber.planning.Step.from_jsonstring"]], "sha256() (compas_timber.planning.step method)": [[289, "compas_timber.planning.Step.sha256"]], "to_json() (compas_timber.planning.step method)": [[290, "compas_timber.planning.Step.to_json"]], "to_jsonstring() (compas_timber.planning.step method)": [[291, "compas_timber.planning.Step.to_jsonstring"]], "transform() (compas_timber.planning.step method)": [[292, "compas_timber.planning.Step.transform"]], "validate_data() (compas_timber.planning.step class method)": [[293, "compas_timber.planning.Step.validate_data"]], "find_neighboring_beams() (in module compas_timber.rhino)": [[294, "compas_timber.rhino.find_neighboring_beams"]]}})