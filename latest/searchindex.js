Search.setIndex({"docnames": ["api", "api/compas_timber.assembly", "api/compas_timber.connections", "api/compas_timber.consumers", "api/compas_timber.fabrication", "api/compas_timber.parts", "api/compas_timber.planning", "api/compas_timber.rhino", "api/generated/compas_timber.assembly.TimberAssembly", "api/generated/compas_timber.assembly.TimberAssembly.ToString", "api/generated/compas_timber.assembly.TimberAssembly.add_beam", "api/generated/compas_timber.assembly.TimberAssembly.add_connection", "api/generated/compas_timber.assembly.TimberAssembly.add_joint", "api/generated/compas_timber.assembly.TimberAssembly.add_part", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined", "api/generated/compas_timber.assembly.TimberAssembly.connections", "api/generated/compas_timber.assembly.TimberAssembly.contains", "api/generated/compas_timber.assembly.TimberAssembly.copy", "api/generated/compas_timber.assembly.TimberAssembly.delete_connection", "api/generated/compas_timber.assembly.TimberAssembly.delete_part", "api/generated/compas_timber.assembly.TimberAssembly.find", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key", "api/generated/compas_timber.assembly.TimberAssembly.from_data", "api/generated/compas_timber.assembly.TimberAssembly.from_json", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.parts", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint", "api/generated/compas_timber.assembly.TimberAssembly.sha256", "api/generated/compas_timber.assembly.TimberAssembly.to_data", "api/generated/compas_timber.assembly.TimberAssembly.to_json", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.transform", "api/generated/compas_timber.assembly.TimberAssembly.transform_numpy", "api/generated/compas_timber.assembly.TimberAssembly.transformed", "api/generated/compas_timber.assembly.TimberAssembly.transformed_numpy", "api/generated/compas_timber.assembly.TimberAssembly.validate_data", "api/generated/compas_timber.connections.BeamJoinningError", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.from_data", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.from_jsonstring", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_data", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.to_jsonstring", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.from_data", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring", "api/generated/compas_timber.connections.LButtJoint.get_cross_cutting_plane", "api/generated/compas_timber.connections.LButtJoint.get_main_cutting_plane", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.to_data", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.from_data", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_data", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.from_data", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring", "api/generated/compas_timber.connections.TButtJoint.get_cutting_plane", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.to_data", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.XHalfLapJoint", "api/generated/compas_timber.connections.XHalfLapJoint.ToString", "api/generated/compas_timber.connections.XHalfLapJoint.add_features", "api/generated/compas_timber.connections.XHalfLapJoint.copy", "api/generated/compas_timber.connections.XHalfLapJoint.create", "api/generated/compas_timber.connections.XHalfLapJoint.from_data", "api/generated/compas_timber.connections.XHalfLapJoint.from_json", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.XHalfLapJoint.sha256", "api/generated/compas_timber.connections.XHalfLapJoint.to_data", "api/generated/compas_timber.connections.XHalfLapJoint.to_json", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data", "api/generated/compas_timber.connections.find_neighboring_beams", "api/generated/compas_timber.consumers.BrepGeometryConsumer", "api/generated/compas_timber.fabrication.BTLx", "api/generated/compas_timber.fabrication.BTLx.btlx_string", "api/generated/compas_timber.fabrication.BTLx.process_assembly", "api/generated/compas_timber.fabrication.BTLx.register_joint", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints", "api/generated/compas_timber.fabrication.BTLxJackCut", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process", "api/generated/compas_timber.fabrication.BTLxProcess", "api/generated/compas_timber.fabrication.FrenchRidgeFactory", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings", "api/generated/compas_timber.fabrication.LButtFactory", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings", "api/generated/compas_timber.fabrication.LMiterFactory", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings", "api/generated/compas_timber.fabrication.TButtFactory", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings", "api/generated/compas_timber.parts.Beam", "api/generated/compas_timber.parts.Beam.ToString", "api/generated/compas_timber.parts.Beam.add_blank_extension", "api/generated/compas_timber.parts.Beam.add_feature", "api/generated/compas_timber.parts.Beam.add_features", "api/generated/compas_timber.parts.Beam.align_z", "api/generated/compas_timber.parts.Beam.clear_features", "api/generated/compas_timber.parts.Beam.copy", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point", "api/generated/compas_timber.parts.Beam.extension_to_plane", "api/generated/compas_timber.parts.Beam.from_centerline", "api/generated/compas_timber.parts.Beam.from_data", "api/generated/compas_timber.parts.Beam.from_endpoints", "api/generated/compas_timber.parts.Beam.from_json", "api/generated/compas_timber.parts.Beam.from_jsonstring", "api/generated/compas_timber.parts.Beam.get_geometry", "api/generated/compas_timber.parts.Beam.remove_blank_extension", "api/generated/compas_timber.parts.Beam.remove_features", "api/generated/compas_timber.parts.Beam.sha256", "api/generated/compas_timber.parts.Beam.to_data", "api/generated/compas_timber.parts.Beam.to_json", "api/generated/compas_timber.parts.Beam.to_jsonstring", "api/generated/compas_timber.parts.Beam.transform", "api/generated/compas_timber.parts.Beam.transform_numpy", "api/generated/compas_timber.parts.Beam.transformed", "api/generated/compas_timber.parts.Beam.transformed_numpy", "api/generated/compas_timber.parts.Beam.validate_data", "api/generated/compas_timber.planning.Actor", "api/generated/compas_timber.planning.Actor.get_name", "api/generated/compas_timber.planning.BuildingPlan", "api/generated/compas_timber.planning.BuildingPlan.ToString", "api/generated/compas_timber.planning.BuildingPlan.add_step", "api/generated/compas_timber.planning.BuildingPlan.copy", "api/generated/compas_timber.planning.BuildingPlan.from_data", "api/generated/compas_timber.planning.BuildingPlan.from_json", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.sha256", "api/generated/compas_timber.planning.BuildingPlan.to_data", "api/generated/compas_timber.planning.BuildingPlan.to_json", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.validate_data", "api/generated/compas_timber.planning.SimpleSequenceGenerator", "api/generated/compas_timber.planning.Step", "api/generated/compas_timber.planning.Step.ToString", "api/generated/compas_timber.planning.Step.copy", "api/generated/compas_timber.planning.Step.from_data", "api/generated/compas_timber.planning.Step.from_json", "api/generated/compas_timber.planning.Step.from_jsonstring", "api/generated/compas_timber.planning.Step.sha256", "api/generated/compas_timber.planning.Step.to_data", "api/generated/compas_timber.planning.Step.to_json", "api/generated/compas_timber.planning.Step.to_jsonstring", "api/generated/compas_timber.planning.Step.transform", "api/generated/compas_timber.planning.Step.validate_data", "api/generated/compas_timber.rhino.find_neighboring_beams", "citing", "examples", "examples/create_joint", "index", "installation", "license", "tutorials", "tutorials/BTLx_contribution_guide", "tutorials/grasshopper/assembly", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beam", "tutorials/grasshopper/examples", "tutorials/grasshopper/features", "tutorials/grasshopper/joints", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "filenames": ["api.rst", "api/compas_timber.assembly.rst", "api/compas_timber.connections.rst", "api/compas_timber.consumers.rst", "api/compas_timber.fabrication.rst", "api/compas_timber.parts.rst", "api/compas_timber.planning.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.assembly.TimberAssembly.rst", "api/generated/compas_timber.assembly.TimberAssembly.ToString.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_beam.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined.rst", "api/generated/compas_timber.assembly.TimberAssembly.connections.rst", "api/generated/compas_timber.assembly.TimberAssembly.contains.rst", "api/generated/compas_timber.assembly.TimberAssembly.copy.rst", "api/generated/compas_timber.assembly.TimberAssembly.delete_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.delete_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.find.rst", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_data.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.parts.rst", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.sha256.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_data.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.transform.rst", "api/generated/compas_timber.assembly.TimberAssembly.transform_numpy.rst", "api/generated/compas_timber.assembly.TimberAssembly.transformed.rst", "api/generated/compas_timber.assembly.TimberAssembly.transformed_numpy.rst", "api/generated/compas_timber.assembly.TimberAssembly.validate_data.rst", "api/generated/compas_timber.connections.BeamJoinningError.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.from_data.rst", "api/generated/compas_timber.connections.Joint.from_json.rst", "api/generated/compas_timber.connections.Joint.from_jsonstring.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_data.rst", "api/generated/compas_timber.connections.Joint.to_json.rst", "api/generated/compas_timber.connections.Joint.to_jsonstring.rst", "api/generated/compas_timber.connections.Joint.validate_data.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.from_data.rst", "api/generated/compas_timber.connections.LButtJoint.from_json.rst", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.get_cross_cutting_plane.rst", "api/generated/compas_timber.connections.LButtJoint.get_main_cutting_plane.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.to_data.rst", "api/generated/compas_timber.connections.LButtJoint.to_json.rst", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.validate_data.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.from_data.rst", "api/generated/compas_timber.connections.LMiterJoint.from_json.rst", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_data.rst", "api/generated/compas_timber.connections.LMiterJoint.to_json.rst", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_data.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.from_data.rst", "api/generated/compas_timber.connections.TButtJoint.from_json.rst", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.get_cutting_plane.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.to_data.rst", "api/generated/compas_timber.connections.TButtJoint.to_json.rst", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.validate_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.rst", "api/generated/compas_timber.connections.XHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.XHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.XHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.XHalfLapJoint.create.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.XHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.find_neighboring_beams.rst", "api/generated/compas_timber.consumers.BrepGeometryConsumer.rst", "api/generated/compas_timber.fabrication.BTLx.rst", "api/generated/compas_timber.fabrication.BTLx.btlx_string.rst", "api/generated/compas_timber.fabrication.BTLx.process_assembly.rst", "api/generated/compas_timber.fabrication.BTLx.register_joint.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process.rst", "api/generated/compas_timber.fabrication.BTLxProcess.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LButtFactory.rst", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LMiterFactory.rst", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.TButtFactory.rst", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings.rst", "api/generated/compas_timber.parts.Beam.rst", "api/generated/compas_timber.parts.Beam.ToString.rst", "api/generated/compas_timber.parts.Beam.add_blank_extension.rst", "api/generated/compas_timber.parts.Beam.add_feature.rst", "api/generated/compas_timber.parts.Beam.add_features.rst", "api/generated/compas_timber.parts.Beam.align_z.rst", "api/generated/compas_timber.parts.Beam.clear_features.rst", "api/generated/compas_timber.parts.Beam.copy.rst", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.parts.Beam.extension_to_plane.rst", "api/generated/compas_timber.parts.Beam.from_centerline.rst", "api/generated/compas_timber.parts.Beam.from_data.rst", "api/generated/compas_timber.parts.Beam.from_endpoints.rst", "api/generated/compas_timber.parts.Beam.from_json.rst", "api/generated/compas_timber.parts.Beam.from_jsonstring.rst", "api/generated/compas_timber.parts.Beam.get_geometry.rst", "api/generated/compas_timber.parts.Beam.remove_blank_extension.rst", "api/generated/compas_timber.parts.Beam.remove_features.rst", "api/generated/compas_timber.parts.Beam.sha256.rst", "api/generated/compas_timber.parts.Beam.to_data.rst", "api/generated/compas_timber.parts.Beam.to_json.rst", "api/generated/compas_timber.parts.Beam.to_jsonstring.rst", "api/generated/compas_timber.parts.Beam.transform.rst", "api/generated/compas_timber.parts.Beam.transform_numpy.rst", "api/generated/compas_timber.parts.Beam.transformed.rst", "api/generated/compas_timber.parts.Beam.transformed_numpy.rst", "api/generated/compas_timber.parts.Beam.validate_data.rst", "api/generated/compas_timber.planning.Actor.rst", "api/generated/compas_timber.planning.Actor.get_name.rst", "api/generated/compas_timber.planning.BuildingPlan.rst", "api/generated/compas_timber.planning.BuildingPlan.ToString.rst", "api/generated/compas_timber.planning.BuildingPlan.add_step.rst", "api/generated/compas_timber.planning.BuildingPlan.copy.rst", "api/generated/compas_timber.planning.BuildingPlan.from_data.rst", "api/generated/compas_timber.planning.BuildingPlan.from_json.rst", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.sha256.rst", "api/generated/compas_timber.planning.BuildingPlan.to_data.rst", "api/generated/compas_timber.planning.BuildingPlan.to_json.rst", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.validate_data.rst", "api/generated/compas_timber.planning.SimpleSequenceGenerator.rst", "api/generated/compas_timber.planning.Step.rst", "api/generated/compas_timber.planning.Step.ToString.rst", "api/generated/compas_timber.planning.Step.copy.rst", "api/generated/compas_timber.planning.Step.from_data.rst", "api/generated/compas_timber.planning.Step.from_json.rst", "api/generated/compas_timber.planning.Step.from_jsonstring.rst", "api/generated/compas_timber.planning.Step.sha256.rst", "api/generated/compas_timber.planning.Step.to_data.rst", "api/generated/compas_timber.planning.Step.to_json.rst", "api/generated/compas_timber.planning.Step.to_jsonstring.rst", "api/generated/compas_timber.planning.Step.transform.rst", "api/generated/compas_timber.planning.Step.validate_data.rst", "api/generated/compas_timber.rhino.find_neighboring_beams.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "license.rst", "tutorials.rst", "tutorials/BTLx_contribution_guide.rst", "tutorials/grasshopper/assembly.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beam.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joints.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "titles": ["API Reference", "compas_timber.assembly", "compas_timber.connections", "compas_timber.consumers", "compas_timber.fabrication", "compas_timber.parts", "compas_timber.planning", "rhino", "TimberAssembly", "TimberAssembly.ToString", "TimberAssembly.add_beam", "TimberAssembly.add_connection", "TimberAssembly.add_joint", "TimberAssembly.add_part", "TimberAssembly.are_parts_joined", "TimberAssembly.connections", "TimberAssembly.contains", "TimberAssembly.copy", "TimberAssembly.delete_connection", "TimberAssembly.delete_part", "TimberAssembly.find", "TimberAssembly.find_by_key", "TimberAssembly.from_data", "TimberAssembly.from_json", "TimberAssembly.from_jsonstring", "TimberAssembly.parts", "TimberAssembly.remove_joint", "TimberAssembly.sha256", "TimberAssembly.to_data", "TimberAssembly.to_json", "TimberAssembly.to_jsonstring", "TimberAssembly.transform", "TimberAssembly.transform_numpy", "TimberAssembly.transformed", "TimberAssembly.transformed_numpy", "TimberAssembly.validate_data", "BeamJoinningError", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "Joint", "Joint.ToString", "Joint.add_features", "Joint.copy", "Joint.create", "Joint.from_data", "Joint.from_json", "Joint.from_jsonstring", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_data", "Joint.to_json", "Joint.to_jsonstring", "Joint.validate_data", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_features", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.from_data", "LButtJoint.from_json", "LButtJoint.from_jsonstring", "LButtJoint.get_cross_cutting_plane", "LButtJoint.get_main_cutting_plane", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.to_data", "LButtJoint.to_json", "LButtJoint.to_jsonstring", "LButtJoint.validate_data", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_features", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.from_data", "LMiterJoint.from_json", "LMiterJoint.from_jsonstring", "LMiterJoint.get_cutting_planes", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_data", "LMiterJoint.to_json", "LMiterJoint.to_jsonstring", "LMiterJoint.validate_data", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_features", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.from_data", "TButtJoint.from_json", "TButtJoint.from_jsonstring", "TButtJoint.get_cutting_plane", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.to_data", "TButtJoint.to_json", "TButtJoint.to_jsonstring", "TButtJoint.validate_data", "XHalfLapJoint", "XHalfLapJoint.ToString", "XHalfLapJoint.add_features", "XHalfLapJoint.copy", "XHalfLapJoint.create", "XHalfLapJoint.from_data", "XHalfLapJoint.from_json", "XHalfLapJoint.from_jsonstring", "XHalfLapJoint.restore_beams_from_keys", "XHalfLapJoint.sha256", "XHalfLapJoint.to_data", "XHalfLapJoint.to_json", "XHalfLapJoint.to_jsonstring", "XHalfLapJoint.validate_data", "find_neighboring_beams", "BrepGeometryConsumer", "BTLx", "BTLx.btlx_string", "BTLx.process_assembly", "BTLx.register_joint", "BTLxFrenchRidgeLap", "BTLxFrenchRidgeLap.create_process", "BTLxFrenchRidgeLap.get_params", "BTLxFrenchRidgeLap.process_joints", "BTLxJackCut", "BTLxJackCut.create_process", "BTLxJackCut.generate_process", "BTLxProcess", "FrenchRidgeFactory", "FrenchRidgeFactory.apply_processings", "LButtFactory", "LButtFactory.apply_processings", "LMiterFactory", "LMiterFactory.apply_processings", "TButtFactory", "TButtFactory.apply_processings", "Beam", "Beam.ToString", "Beam.add_blank_extension", "Beam.add_feature", "Beam.add_features", "Beam.align_z", "Beam.clear_features", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_data", "Beam.from_endpoints", "Beam.from_json", "Beam.from_jsonstring", "Beam.get_geometry", "Beam.remove_blank_extension", "Beam.remove_features", "Beam.sha256", "Beam.to_data", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transform_numpy", "Beam.transformed", "Beam.transformed_numpy", "Beam.validate_data", "Actor", "Actor.get_name", "BuildingPlan", "BuildingPlan.ToString", "BuildingPlan.add_step", "BuildingPlan.copy", "BuildingPlan.from_data", "BuildingPlan.from_json", "BuildingPlan.from_jsonstring", "BuildingPlan.sha256", "BuildingPlan.to_data", "BuildingPlan.to_json", "BuildingPlan.to_jsonstring", "BuildingPlan.validate_data", "SimpleSequenceGenerator", "Step", "Step.ToString", "Step.copy", "Step.from_data", "Step.from_json", "Step.from_jsonstring", "Step.sha256", "Step.to_data", "Step.to_json", "Step.to_jsonstring", "Step.transform", "Step.validate_data", "find_neighboring_beams", "Citing", "Examples", "Create Joint", "COMPAS TIMBER", "Installation", "License", "Grasshopper plugin", "BTLx Contribution Guide", "Assembly", "Attributes", "Beam", "Examples", "Features", "Joints", "Show", "Utils", "Workflow"], "terms": {"compas_timb": [0, 8, 36, 37, 40, 44, 48, 54, 56, 60, 72, 76, 87, 91, 102, 106, 116, 117, 118, 121, 122, 126, 129, 130, 132, 134, 136, 138, 165, 167, 179, 180, 192, 193, 196, 197], "assembli": [0, 8, 10, 11, 12, 13, 16, 19, 20, 21, 25, 26, 44, 48, 56, 60, 66, 72, 76, 81, 87, 91, 96, 106, 110, 117, 118, 120, 141, 165, 179, 195, 196, 199, 206, 207, 209], "part": [0, 8, 11, 12, 13, 14, 15, 18, 19, 20, 21, 48, 118, 120, 122, 123, 126, 127, 131, 133, 135, 137, 138, 141, 153, 192, 196, 200, 203, 205, 207], "connect": [0, 9, 11, 18, 36, 37, 40, 41, 44, 48, 54, 56, 57, 60, 72, 73, 76, 87, 88, 91, 102, 103, 106, 116, 131, 133, 135, 137, 139, 168, 181, 196, 198, 201, 206], "consum": [0, 117, 196], "fabric": [0, 118, 121, 122, 125, 126, 129, 130, 132, 134, 136, 193, 196], "plan": [0, 165, 167, 179, 180, 196], "rhino": [0, 9, 41, 57, 73, 88, 103, 116, 139, 168, 181, 192, 194, 196, 197, 202, 203, 208], "The": [7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 40, 43, 44, 45, 46, 47, 50, 51, 52, 53, 56, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 98, 99, 100, 101, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 121, 122, 126, 129, 131, 133, 135, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 170, 171, 172, 173, 175, 176, 177, 178, 182, 183, 184, 185, 187, 188, 189, 191, 192, 198, 199, 202, 203, 205, 206, 208, 209], "modul": [7, 129, 196, 200], "contain": [7, 8, 22, 23, 24, 38, 44, 45, 46, 47, 60, 61, 62, 63, 76, 77, 78, 79, 91, 92, 93, 94, 106, 107, 108, 109, 116, 138, 149, 151, 152, 167, 171, 172, 173, 180, 183, 184, 185, 192], "function": [7, 116, 129, 199, 200], "type": [7, 9, 17, 22, 23, 24, 35, 39, 41, 43, 45, 46, 47, 53, 56, 57, 59, 61, 62, 63, 71, 72, 73, 75, 77, 78, 79, 86, 87, 88, 90, 92, 93, 94, 101, 103, 105, 107, 108, 109, 115, 117, 121, 122, 125, 129, 139, 145, 149, 151, 152, 153, 164, 165, 168, 170, 171, 172, 173, 178, 180, 181, 182, 183, 184, 185, 191, 196, 200, 206, 207], "meant": 7, "us": [7, 9, 27, 31, 32, 33, 34, 35, 38, 39, 40, 41, 49, 53, 55, 56, 57, 67, 71, 72, 73, 82, 86, 87, 88, 97, 101, 103, 111, 115, 116, 118, 125, 139, 143, 147, 156, 160, 161, 162, 163, 164, 166, 168, 174, 178, 180, 181, 186, 191, 192, 193, 196, 198, 199, 200, 201, 202, 203, 206, 208], "context": [7, 13], "class": [8, 9, 12, 16, 37, 40, 41, 54, 56, 57, 72, 73, 87, 88, 102, 103, 117, 118, 121, 122, 126, 129, 130, 132, 134, 136, 138, 139, 165, 167, 168, 179, 180, 181, 196, 200], "sourc": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 202, 203], "base": [8, 36, 37, 40, 54, 56, 72, 87, 102, 117, 118, 122, 126, 129, 130, 132, 134, 136, 138, 165, 167, 179, 180, 201, 206, 209], "repres": [8, 56, 72, 87, 118, 122, 126, 138, 165, 203], "timber": [8, 118, 126, 138, 193, 199, 203, 206, 209], "beam": [8, 10, 12, 36, 37, 38, 39, 40, 42, 44, 48, 56, 58, 60, 66, 72, 74, 76, 81, 87, 89, 91, 96, 104, 106, 110, 116, 117, 122, 126, 192, 195, 196, 199, 201, 202, 205, 206, 207, 208, 209], "joint": [8, 12, 14, 26, 36, 37, 54, 56, 58, 60, 72, 74, 76, 87, 89, 91, 102, 104, 106, 118, 121, 122, 123, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 154, 194, 196, 199, 200, 201, 203, 207, 209], "etc": [8, 118, 119, 138, 194, 196, 203], "attribut": [8, 11, 15, 40, 54, 56, 72, 87, 117, 118, 122, 129, 138, 179, 180, 196, 199, 200, 203], "list": [8, 12, 14, 38, 40, 44, 56, 60, 72, 76, 87, 91, 106, 116, 118, 129, 138, 142, 146, 155, 180, 192, 200, 206, 209], "A": [8, 20, 38, 44, 56, 60, 72, 76, 87, 91, 106, 116, 117, 118, 131, 133, 135, 137, 138, 148, 150, 193, 198, 203], "assign": [8, 13, 20, 206, 208], "thi": [8, 9, 10, 16, 17, 20, 22, 23, 24, 26, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 56, 57, 58, 59, 60, 61, 62, 63, 71, 72, 73, 74, 75, 76, 77, 78, 79, 86, 87, 88, 89, 90, 91, 92, 93, 94, 101, 103, 104, 105, 106, 107, 108, 109, 115, 116, 122, 124, 125, 128, 129, 131, 133, 135, 137, 138, 139, 140, 141, 145, 147, 149, 151, 152, 154, 162, 163, 164, 168, 170, 171, 172, 173, 178, 180, 181, 182, 183, 184, 185, 191, 192, 194, 198, 200, 202, 203, 207, 209], "part_kei": 8, "int": [8, 10, 11, 12, 13, 15, 21, 55, 122, 140, 154, 166, 180], "kei": [8, 10, 13, 21, 48, 131, 133, 135, 137, 140, 154, 202], "includ": [8, 153, 198, 200], "beam_kei": 8, "joint_kei": [8, 140, 154], "method": [8, 9, 37, 39, 40, 41, 44, 48, 54, 56, 57, 58, 60, 72, 73, 74, 76, 87, 88, 89, 91, 102, 103, 106, 118, 122, 124, 126, 128, 130, 132, 134, 136, 138, 139, 165, 167, 168, 180, 181, 196, 200], "inherit": [8, 40, 56, 72, 87, 102, 138, 167, 180, 196, 200], "convert": [9, 28, 29, 30, 41, 50, 51, 52, 57, 68, 69, 70, 73, 83, 84, 85, 88, 98, 99, 100, 103, 112, 113, 114, 139, 157, 158, 159, 168, 175, 176, 177, 181, 187, 188, 189], "instanc": [9, 12, 22, 23, 24, 41, 44, 45, 46, 47, 56, 57, 60, 61, 62, 63, 72, 73, 76, 77, 78, 79, 87, 88, 91, 92, 93, 94, 103, 106, 107, 108, 109, 129, 139, 149, 151, 152, 168, 171, 172, 173, 181, 183, 184, 185, 194, 200], "string": [9, 24, 30, 41, 47, 52, 55, 56, 57, 63, 70, 72, 73, 79, 85, 87, 88, 94, 100, 103, 109, 114, 118, 119, 139, 152, 159, 166, 168, 173, 177, 181, 185, 189, 202, 203], "exist": [9, 41, 57, 73, 88, 103, 139, 168, 181, 200], "net": [9, 41, 57, 73, 88, 103, 139, 168, 181], "compat": [9, 41, 56, 57, 72, 73, 87, 88, 103, 116, 139, 168, 181], "when": [9, 20, 38, 41, 57, 58, 73, 74, 88, 89, 103, 139, 140, 168, 181, 202, 206], "ironpython": [9, 41, 57, 73, 88, 103, 139, 168, 181], "implicit": [9, 41, 57, 73, 88, 103, 139, 168, 181], "convers": [9, 41, 57, 73, 88, 103, 139, 168, 181], "usual": [9, 41, 57, 73, 88, 103, 138, 139, 168, 181], "take": [9, 41, 57, 73, 88, 103, 139, 168, 181, 200, 209], "place": [9, 41, 57, 73, 88, 103, 139, 168, 181], "cpython": [9, 41, 57, 73, 88, 103, 139, 168, 181], "kick": [9, 41, 57, 73, 88, 103, 139, 168, 181], "its": [9, 15, 20, 21, 28, 29, 30, 41, 50, 51, 52, 57, 68, 69, 70, 73, 83, 84, 85, 88, 98, 99, 100, 103, 112, 113, 114, 121, 133, 137, 139, 148, 157, 158, 159, 168, 175, 176, 177, 181, 187, 188, 189, 197, 202, 203, 206], "default": [9, 13, 17, 29, 30, 41, 43, 51, 52, 57, 59, 69, 70, 73, 75, 84, 85, 88, 90, 99, 100, 103, 105, 113, 114, 126, 139, 145, 148, 150, 158, 159, 168, 170, 176, 177, 181, 182, 188, 189, 196, 201, 203, 206, 208], "print": [9, 29, 30, 41, 51, 52, 57, 69, 70, 73, 84, 85, 88, 99, 100, 103, 113, 114, 139, 158, 159, 168, 176, 177, 181, 188, 189], "self": [9, 41, 57, 73, 88, 103, 129, 139, 168, 181, 200], "gettyp": [9, 41, 57, 73, 88, 103, 139, 168, 181], "fullnam": [9, 41, 57, 73, 88, 103, 139, 168, 181], "similar": [9, 41, 57, 73, 88, 103, 139, 168, 181, 206], "overrid": [9, 41, 57, 73, 88, 103, 139, 168, 181, 209], "object": [9, 12, 16, 17, 22, 23, 24, 26, 28, 29, 30, 35, 37, 38, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 63, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 122, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 145, 149, 151, 152, 153, 157, 158, 159, 164, 165, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 191, 196, 201, 202, 203, 207, 208], "fix": [9, 41, 57, 73, 88, 103, 139, 168, 181], "make": [9, 17, 41, 43, 57, 59, 73, 75, 88, 90, 103, 105, 139, 145, 168, 170, 181, 182], "grasshopp": [9, 41, 57, 73, 88, 103, 139, 168, 181, 194, 196, 203], "displai": [9, 41, 57, 73, 88, 103, 139, 168, 181, 202, 207], "proper": [9, 41, 57, 73, 88, 103, 139, 168, 181], "represent": [9, 28, 29, 30, 41, 50, 51, 52, 55, 56, 57, 68, 69, 70, 72, 73, 83, 84, 85, 87, 88, 98, 99, 100, 103, 112, 113, 114, 139, 157, 158, 159, 166, 168, 175, 176, 177, 181, 187, 188, 189, 200], "ar": [9, 11, 20, 38, 39, 41, 44, 48, 57, 60, 73, 76, 88, 91, 103, 106, 116, 129, 139, 168, 180, 181, 194, 200, 201, 202, 205, 206, 207, 208, 209], "panel": [9, 41, 57, 73, 88, 103, 139, 168, 181], "other": [9, 12, 41, 57, 73, 88, 103, 122, 139, 168, 181, 193, 198, 206, 209], "output": [9, 39, 41, 57, 73, 88, 103, 139, 168, 181, 201], "add": [10, 11, 12, 13, 18, 19, 42, 58, 74, 89, 104, 140, 141, 142, 199, 200, 201, 208], "paramet": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 38, 39, 43, 44, 45, 46, 47, 49, 51, 52, 53, 55, 56, 59, 60, 61, 62, 63, 67, 69, 70, 71, 72, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 90, 91, 92, 93, 94, 97, 99, 100, 101, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 121, 122, 124, 125, 126, 128, 129, 131, 133, 135, 137, 138, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 188, 189, 191, 192, 200, 201, 202, 203, 208], "return": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 43, 44, 45, 46, 47, 49, 50, 52, 53, 55, 59, 60, 61, 62, 63, 67, 68, 70, 71, 75, 76, 77, 78, 79, 82, 83, 85, 86, 90, 91, 92, 93, 94, 97, 98, 100, 101, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 118, 119, 121, 125, 131, 133, 135, 137, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 160, 161, 162, 163, 164, 166, 170, 171, 172, 173, 174, 175, 177, 178, 182, 183, 184, 185, 186, 187, 189, 191, 192, 201, 207], "graph": [10, 12, 13], "identifi": [10, 11, 12, 13, 15, 20, 21, 116], "ad": [10, 44, 60, 76, 91, 106, 141, 142, 192], "b": 11, "kwarg": [11, 13, 44, 60, 76, 91, 106], "between": [11, 15, 18, 72, 202, 206, 209], "two": [11, 18, 36, 39, 40, 44, 56, 60, 72, 76, 91, 106, 146, 203, 206, 209], "compa": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 43, 45, 46, 47, 49, 59, 61, 62, 63, 67, 75, 77, 78, 79, 82, 90, 92, 93, 94, 97, 105, 107, 108, 109, 111, 138, 141, 145, 149, 151, 152, 153, 156, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 186, 193, 199, 206], "datastructur": [11, 13, 18, 19, 20, 21, 25, 27, 33, 34, 49, 67, 82, 97, 111, 156, 162, 163, 174, 186], "from": [11, 19, 22, 23, 24, 26, 27, 39, 45, 46, 47, 49, 61, 62, 63, 67, 77, 78, 79, 82, 92, 93, 94, 97, 107, 108, 109, 111, 129, 148, 149, 150, 151, 152, 154, 155, 156, 171, 172, 173, 174, 183, 184, 185, 186, 194, 196, 198, 199, 200, 202, 203, 205, 206], "dict": [11, 13, 15, 22, 28, 40, 45, 50, 61, 68, 77, 83, 92, 98, 107, 112, 117, 118, 122, 125, 129, 131, 133, 135, 137, 149, 157, 171, 175, 183, 187, 200], "str": [11, 13, 15, 20, 21, 23, 24, 27, 29, 30, 40, 46, 47, 49, 51, 52, 55, 56, 62, 63, 67, 69, 70, 72, 78, 79, 82, 84, 85, 87, 93, 94, 97, 99, 100, 108, 109, 111, 113, 114, 118, 122, 126, 129, 146, 151, 152, 156, 158, 159, 166, 172, 173, 174, 176, 177, 180, 184, 185, 186, 188, 189], "ani": [11, 13, 15, 35, 53, 71, 86, 101, 115, 164, 178, 191, 194, 198, 205, 207], "option": [11, 13, 15, 17, 21, 27, 29, 30, 38, 39, 43, 49, 51, 52, 59, 67, 69, 70, 75, 82, 84, 85, 90, 97, 99, 100, 105, 111, 113, 114, 116, 126, 145, 156, 158, 159, 170, 174, 176, 177, 182, 186, 188, 189, 203, 206, 209], "compil": 11, "name": [11, 13, 126, 129, 200, 202, 206, 207], "argument": 11, "tupl": [11, 15, 39, 72, 138, 147], "node": 11, "rais": [11, 23, 24, 42, 44, 46, 47, 60, 62, 63, 76, 78, 79, 91, 93, 94, 104, 106, 108, 109, 151, 152, 172, 173, 184, 185], "assemblyerror": 11, "If": [11, 15, 23, 24, 27, 29, 30, 39, 46, 47, 49, 51, 52, 62, 63, 67, 69, 70, 78, 79, 82, 84, 85, 93, 94, 97, 99, 100, 108, 109, 111, 113, 114, 141, 151, 152, 155, 156, 158, 159, 172, 173, 174, 176, 177, 184, 185, 186, 188, 189, 192, 193, 203, 206], "an": [12, 13, 17, 22, 23, 24, 28, 29, 30, 35, 36, 38, 43, 44, 45, 46, 47, 50, 51, 52, 53, 56, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 98, 99, 100, 101, 105, 106, 107, 108, 109, 112, 113, 114, 115, 124, 128, 138, 145, 149, 151, 152, 157, 158, 159, 164, 165, 170, 171, 172, 173, 175, 176, 177, 178, 182, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 197, 198, 199, 201, 202, 203, 206], "dowel": 12, "steel": 12, "plate": 12, "involv": [12, 135], "current": [12, 13, 17, 43, 59, 75, 90, 105, 145, 170, 182, 196], "none": [13, 17, 18, 19, 20, 21, 31, 32, 38, 39, 43, 59, 75, 90, 105, 116, 121, 126, 127, 131, 133, 135, 137, 140, 141, 144, 145, 148, 150, 155, 160, 161, 170, 182, 192, 203], "note": [13, 116, 193, 207], "i": [13, 14, 15, 20, 23, 24, 35, 38, 39, 40, 44, 46, 47, 48, 53, 56, 58, 60, 62, 63, 71, 72, 74, 76, 78, 79, 86, 87, 89, 91, 93, 94, 101, 106, 108, 109, 115, 116, 118, 122, 124, 125, 128, 138, 140, 141, 146, 147, 151, 152, 164, 167, 172, 173, 178, 179, 184, 185, 191, 193, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208], "uniqu": [13, 20], "onli": [13, 48, 141, 202], "nest": 13, "mai": [13, 201, 202], "have": [13, 44, 60, 76, 91, 106, 129, 203], "same": [13, 14, 39, 179, 180, 206, 209], "valu": [13, 55, 61, 77, 92, 107, 116, 138, 166, 202], "one": [13, 142, 179, 180, 200, 203, 206, 209], "which": [13, 36, 38, 39, 44, 56, 60, 72, 76, 87, 91, 106, 116, 122, 129, 140, 143, 146, 147, 154, 165, 167, 180, 200, 201, 203, 206], "case": 13, "automat": [13, 20, 58, 74, 89, 206, 208], "integ": 13, "addit": [13, 15, 38, 199, 202, 203, 205], "collect": [13, 167, 192], "check": [14, 192, 196, 202], "alreadi": 14, "defin": [14, 42, 104, 122, 148, 202, 203, 206, 208, 209], "set": [14, 38, 116, 192, 201, 202, 203, 207], "bool": [14, 15, 16, 27, 29, 30, 38, 49, 51, 52, 67, 69, 70, 82, 84, 85, 97, 99, 100, 111, 113, 114, 122, 141, 153, 156, 158, 159, 174, 176, 177, 180, 186, 188, 189], "data": [15, 16, 17, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 43, 45, 46, 47, 49, 50, 51, 52, 53, 59, 61, 62, 63, 67, 68, 69, 70, 71, 75, 77, 78, 79, 82, 83, 84, 85, 86, 90, 92, 93, 94, 97, 98, 99, 100, 101, 105, 107, 108, 109, 111, 112, 113, 114, 115, 118, 145, 149, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191], "fals": [15, 16, 27, 29, 30, 38, 49, 51, 52, 67, 69, 70, 82, 84, 85, 97, 99, 100, 111, 113, 114, 141, 153, 156, 158, 159, 174, 176, 177, 186, 188, 189], "iter": 15, "over": 15, "true": [15, 16, 27, 29, 30, 38, 49, 51, 52, 67, 69, 70, 82, 84, 85, 97, 99, 100, 111, 113, 114, 141, 147, 153, 156, 158, 159, 174, 176, 177, 186, 188, 189, 201, 203], "yield": [15, 25, 117], "next": 15, "u": 15, "v": 15, "connector": 15, "attr": [15, 129], "obj": [16, 27, 49, 67, 82, 97, 111, 156, 174, 180, 186], "given": [16, 38, 39, 44, 55, 60, 76, 91, 106, 116, 143, 146, 147, 150, 166, 202], "otherwis": [16, 39, 141, 198, 203], "look": 16, "cl": [17, 43, 59, 75, 90, 105, 145, 170, 182], "independ": [17, 43, 59, 75, 90, 105, 145, 170, 182], "edg": 18, "delet": 18, "remov": [19, 26, 140, 154, 155, 202, 205], "guid": [20, 196, 199, 203], "global": 20, "creat": [20, 40, 56, 58, 72, 74, 87, 89, 121, 122, 130, 132, 134, 136, 148, 150, 194, 196, 197, 199, 200, 201, 202, 203, 206, 209], "can": [20, 21, 35, 53, 71, 86, 101, 115, 129, 153, 164, 167, 178, 180, 191, 194, 199, 200, 203, 206], "t": [20, 21, 87, 136], "found": [20, 21, 200], "find": [21, 38, 116, 192, 206], "classmethod": [22, 23, 24, 35, 38, 44, 45, 46, 47, 53, 55, 60, 61, 62, 63, 71, 76, 77, 78, 79, 86, 91, 92, 93, 94, 101, 106, 107, 108, 109, 115, 121, 123, 127, 131, 133, 135, 137, 148, 149, 150, 151, 152, 164, 166, 171, 172, 173, 178, 183, 184, 185, 191], "construct": [22, 23, 24, 35, 45, 46, 47, 53, 61, 62, 63, 71, 77, 78, 79, 86, 92, 93, 94, 101, 107, 108, 109, 115, 149, 151, 152, 164, 171, 172, 173, 178, 183, 184, 185, 191, 196], "provid": [22, 37, 45, 61, 77, 92, 107, 149, 171, 183, 198, 199, 201, 203], "dictionari": [22, 45, 61, 77, 92, 107, 118, 131, 133, 135, 137, 149, 171, 183], "ha": [22, 23, 24, 36, 45, 46, 47, 61, 62, 63, 77, 78, 79, 92, 93, 94, 107, 108, 109, 116, 149, 151, 152, 171, 172, 173, 180, 183, 184, 185, 203, 206, 207, 208], "correct": [22, 23, 24, 45, 46, 47, 61, 62, 63, 77, 78, 79, 92, 93, 94, 107, 108, 109, 149, 151, 152, 171, 172, 173, 183, 184, 185], "schema": [22, 23, 24, 28, 35, 45, 46, 47, 50, 53, 61, 62, 63, 68, 71, 77, 78, 79, 83, 86, 92, 93, 94, 98, 101, 107, 108, 109, 112, 115, 149, 151, 152, 157, 164, 171, 172, 173, 175, 178, 183, 184, 185, 187, 191], "filepath": [23, 29, 46, 51, 62, 69, 78, 84, 93, 99, 108, 113, 151, 158, 172, 176, 184, 188], "json": [23, 24, 29, 30, 46, 47, 51, 52, 62, 63, 69, 70, 78, 79, 84, 85, 93, 94, 99, 100, 108, 109, 113, 114, 151, 152, 158, 159, 172, 173, 176, 177, 184, 185, 188, 189], "file": [23, 29, 46, 51, 62, 69, 78, 84, 93, 99, 108, 113, 118, 151, 158, 172, 176, 184, 188, 198, 200, 204], "path": [23, 29, 46, 51, 62, 69, 78, 84, 93, 99, 108, 113, 151, 158, 172, 176, 184, 188], "typeerror": [23, 24, 46, 47, 62, 63, 78, 79, 93, 94, 108, 109, 151, 152, 172, 173, 184, 185], "individu": [25, 129], "as_str": [27, 49, 67, 82, 97, 111, 156, 174, 186], "comput": [27, 39, 49, 67, 82, 97, 111, 156, 174, 186], "hash": [27, 49, 67, 82, 97, 111, 156, 174, 186], "comparison": [27, 49, 67, 82, 97, 111, 156, 174, 186], "dure": [27, 48, 49, 67, 82, 97, 111, 156, 174, 180, 186], "version": [27, 49, 67, 82, 97, 111, 156, 174, 186, 197], "control": [27, 49, 67, 82, 97, 111, 156, 174, 186], "algorithm": [27, 49, 67, 82, 97, 111, 116, 156, 174, 186], "digest": [27, 49, 67, 82, 97, 111, 156, 174, 186], "hexadecim": [27, 49, 67, 82, 97, 111, 156, 174, 186], "format": [27, 49, 67, 82, 97, 111, 118, 156, 174, 186, 202], "rather": [27, 49, 67, 82, 97, 111, 156, 174, 186], "than": [27, 44, 49, 60, 67, 76, 82, 91, 97, 106, 111, 156, 174, 186, 206], "byte": [27, 49, 67, 82, 97, 111, 156, 174, 186], "exampl": [27, 48, 49, 67, 82, 97, 111, 116, 156, 174, 186, 196, 199, 202, 203, 206, 209], "import": [27, 49, 67, 82, 97, 111, 156, 174, 186, 200, 209], "mesh": [27, 49, 67, 82, 97, 111, 156, 174, 186, 195], "from_obj": [27, 49, 67, 82, 97, 111, 156, 174, 186], "get": [27, 49, 67, 82, 97, 111, 156, 174, 186, 197, 199], "face": [27, 49, 67, 82, 97, 111, 122, 138, 147, 156, 174, 186], "v1": [27, 49, 67, 82, 97, 111, 156, 174, 186], "v2": [27, 49, 67, 82, 97, 111, 156, 174, 186], "vertex_attribut": [27, 49, 67, 82, 97, 111, 156, 174, 186], "vertex_sampl": [27, 49, 67, 82, 97, 111, 156, 174, 186], "1": [27, 49, 67, 82, 97, 111, 138, 156, 174, 186, 195, 200, 203], "0": [27, 49, 67, 82, 97, 111, 138, 156, 174, 186, 195, 203, 206], "z": [27, 49, 67, 82, 97, 111, 138, 148, 150, 156, 174, 186, 203, 205, 208], "v3": [27, 49, 67, 82, 97, 111, 156, 174, 186], "nativ": [28, 29, 30, 50, 51, 52, 68, 69, 70, 83, 84, 85, 98, 99, 100, 112, 113, 114, 157, 158, 159, 175, 176, 177, 187, 188, 189], "describ": [28, 50, 68, 83, 98, 112, 129, 157, 175, 187, 200], "pretti": [29, 30, 51, 52, 69, 70, 84, 85, 99, 100, 113, 114, 118, 119, 158, 159, 176, 177, 188, 189], "save": [29, 30, 51, 52, 66, 69, 70, 81, 84, 85, 96, 99, 100, 110, 113, 114, 158, 159, 176, 177, 188, 189], "structur": [31, 32, 33, 34, 160, 161, 162, 163, 193, 196, 199, 201, 209], "transform": [32, 34, 153, 161, 163], "copi": [33, 34, 153, 162, 163, 198], "valid": [35, 53, 71, 86, 101, 115, 164, 178, 191], "against": [35, 53, 71, 86, 101, 115, 164, 178, 191], "": [35, 42, 53, 56, 71, 72, 86, 87, 101, 104, 115, 138, 143, 146, 148, 150, 153, 164, 178, 191, 202, 208], "raw": [35, 53, 71, 86, 101, 115, 164, 178, 191], "from_data": [35, 53, 71, 86, 101, 115, 164, 178, 191], "except": 36, "indic": [36, 122, 148, 150, 202, 203], "error": [36, 201, 202], "occur": 36, "while": 36, "try": 36, "join": [36, 40, 44, 56, 60, 72, 76, 87, 91, 106, 122, 201, 206], "more": [36, 142, 196, 199, 200], "should": [36, 40, 42, 48, 104, 116, 129, 140, 153, 200, 206], "calcul": [36, 42, 104], "featur": [36, 42, 58, 74, 89, 104, 117, 138, 141, 142, 153, 155, 196, 199, 201, 207, 209], "appli": [36, 42, 104, 117, 122, 129, 131, 133, 135, 137, 141, 200, 201, 206, 207, 209], "tool": [37, 196, 199, 203, 207, 208], "detect": 37, "intersect": [37, 38, 39, 206], "topologi": [37, 39, 44, 54, 55, 56, 60, 72, 76, 87, 91, 106], "rtree": [38, 192], "max_dist": [38, 39], "pair": [38, 39, 116, 192, 202, 206, 209], "r": [38, 116, 197], "tree": [38, 116], "search": [38, 116], "neighbor": [38, 116, 192], "float": [38, 39, 116, 122, 138, 140, 147, 148, 150, 192], "distanc": [38, 39, 206], "apart": 38, "non": 38, "touch": 38, "still": 38, "consid": [38, 39], "neightbor": [38, 192], "beam_a": [39, 72], "beam_b": [39, 72], "tol": 39, "1e": 39, "06": 39, "within": [39, 180], "role": [39, 48], "sensit": 39, "consist": 39, "specif": [39, 48, 129, 196, 200], "order": [39, 116, 125, 179, 209], "e": [39, 48, 194, 202, 206, 207, 208], "g": [39, 48, 194, 202], "main": [39, 48, 56, 66, 81, 87, 89, 96, 110, 206], "first": [39, 72, 146, 206, 209], "cross": [39, 48, 56, 66, 81, 87, 89, 96, 110, 138, 148, 150, 203, 206], "second": [39, 72, 146, 206], "thei": 39, "were": [39, 202], "input": [39, 116, 129, 199, 200, 202, 203, 206], "gener": [39, 117, 120, 124, 128, 129, 179, 200, 209], "toler": [39, 206], "mathemat": 39, "maximum": 39, "desigen": 39, "unit": [39, 116, 147], "jointtopologi": [39, 196], "instanti": [40, 129, 200], "directli": 40, "respect": [40, 48, 206], "implement": [40, 48, 192, 196], "instead": [40, 203], "end": [40, 56, 72, 87, 122, 138, 140, 146, 147, 150, 206], "map": [40, 117, 199, 208], "ehich": 40, "each": [40, 72, 129, 147, 167, 200, 202, 206], "affect": [42, 104], "beamjoinningerror": [42, 104, 196], "whenev": [42, 104], "wa": [42, 104], "abl": [42, 104], "new": [44, 60, 76, 91, 106, 197, 200, 203], "expect": [44, 60, 76, 91, 106], "been": [44, 60, 76, 91, 106, 180], "befor": [44, 60, 76, 91, 106, 207], "call": [44, 48, 58, 60, 74, 76, 89, 91, 106, 129, 141, 200, 203, 206], "code": [44, 60, 76, 91, 106, 194, 196], "doe": [44, 60, 76, 91, 106, 200, 203, 206], "verifi": [44, 60, 76, 91, 106, 147], "adjac": [44, 60, 76, 91, 106], "lie": [44, 60, 76, 91, 106], "allow": [44, 60, 76, 91, 106, 147, 180], "them": [44, 60, 72, 76, 91, 106, 129, 194, 200, 202, 206], "respons": [44, 60, 76, 91, 106], "valueerror": [44, 60, 76, 91, 106], "less": [44, 60, 76, 91, 106, 138], "assemebli": [44, 60, 76, 91, 106], "jo": [44, 60, 76, 91, 106], "belong": [44, 60, 76, 91, 106], "whould": [44, 60, 76, 91, 106], "togeth": [44, 60, 76, 91, 106, 203], "restor": 48, "refer": [48, 66, 81, 96, 110, 122, 196, 199, 200, 202, 206], "associ": [48, 56, 72, 87, 122, 133, 137, 180, 198], "serial": [48, 66, 81, 96, 110], "To": [48, 197, 199, 200, 201, 206, 209], "avoid": [48, 206], "circular": 48, "store": [48, 202, 203], "de": [48, 66, 81, 96, 110], "sinc": 48, "concret": 48, "see": [48, 199, 203, 204, 208], "tbuttjoint": [48, 195, 196], "enumer": 54, "possibl": [54, 202], "topo_unknown": [54, 55], "topo_i": 54, "topo_l": [54, 55], "topo_t": [54, 55], "topo_x": [54, 55], "For": [55, 116, 166, 196, 208, 209], "log": [55, 166, 201], "One": [55, 166, 180], "l": [56, 72, 132, 134, 135], "butt": [56, 87, 132, 136], "trim": [56, 58, 72, 74, 87, 89, 201, 205, 206], "pleas": [56, 72, 87, 193], "properli": [56, 72, 87], "timberassembli": [56, 72, 87, 179, 195, 196], "main_beam": [56, 87, 195], "cross_beam": [56, 87, 195], "cutting_plane_main": [56, 87], "frame": [56, 72, 87, 122, 126, 127, 138, 180, 195, 196, 199, 201, 209], "cutting_plane_cross": [56, 87], "joint_typ": [56, 72, 87, 121], "requir": [58, 74, 125, 129, 140, 154, 197], "extens": [58, 74, 140, 147, 154], "both": [58, 74], "assemli": [66, 81, 110], "after": [66, 81, 96, 110, 117], "resotr": [66, 81, 96, 110], "miter": [72, 134, 135], "plane": [72, 89, 126, 147, 203, 205, 208], "bisector": [72, 206], "angl": [72, 122, 206], "centerlin": [72, 138, 146, 148, 150, 199, 202, 203, 206, 208], "cutting_plan": 72, "normal": [72, 138], "point": [72, 138, 146, 150, 196, 208], "opposit": 72, "direct": [72, 138, 147, 148, 150, 192, 203], "along": [87, 138, 206], "length": [87, 138, 148, 206], "anoth": 87, "inflate_bi": [116, 192], "axi": [116, 138, 148, 150, 203, 208], "align": [116, 138, 143, 199, 208], "bound": [116, 138, 192], "box": [116, 138, 180, 192, 199, 207], "aabb": [116, 138], "enlarg": 116, "amount": [116, 140, 147, 192], "element": [116, 129, 146, 179, 180], "design": [116, 193, 196, 199, 202, 203], "regard": 116, "inflat": [116, 192], "pluggabl": 116, "In": [116, 196, 197, 206], "plugin": [116, 196, 203], "avail": [116, 153], "result": [117, 146, 179, 206], "geometri": [117, 138, 153, 180, 192, 196, 199, 201, 203, 205, 207, 208, 209], "feature_map": 117, "featureappl": 117, "applic": 117, "beamgeometri": 117, "process": [117, 120, 122, 124, 125, 126, 128, 129, 131, 133, 135, 137, 196, 199, 200, 209], "histori": 118, "btlx_string": 118, "xml": [118, 119], "visual": [118, 119, 167, 180, 194, 201], "gh": [118, 119], "termin": [118, 119], "btlxpart": [118, 122, 126, 129, 131, 133, 135, 137, 200], "joint_factori": [121, 129, 200], "regist": 121, "correspond": [121, 138, 146, 202, 203, 208], "factori": [121, 129, 130, 132, 134, 136, 200], "jointfactori": 121, "french": [122, 130], "ridg": [122, 130], "lap": 122, "is_top": [122, 123], "flag": 122, "top": [122, 199], "bottom": 122, "process_typ": [122, 129, 200], "frenchridgelap": 122, "other_beam": 122, "orient": [122, 148, 150, 208], "drill_hole_diamet": 122, "diamet": 122, "drill": 122, "hole": [122, 199], "ref_face_index": 122, "index": [122, 196, 207], "ref_fac": 122, "surfac": [122, 200], "header_attribut": [122, 129, 200], "header": 122, "process_paramet": [122, 129], "geometr": [122, 125, 129, 196, 200, 201, 205], "btlx": [122, 129, 196, 199], "degre": 122, "intern": [124, 128], "properti": 125, "all": [125, 147, 153, 155, 192, 198, 202], "It": [125, 196, 199, 201, 202, 203, 208], "ordereddict": 125, "maintain": [125, 196], "origin": [125, 138, 203, 207, 208], "jack": 126, "cut": [126, 199, 201, 205, 206], "joint_nam": [126, 127], "append": [129, 200], "btlx_process": [129, 200], "eg": 129, "btlxjackcut": [129, 196], "match": [129, 200], "deriv": [129, 200], "relat": [129, 200], "some": [129, 199, 208], "combin": 129, "multipl": [129, 194, 200], "cover": 129, "register_joint": [129, 200], "so": [129, 198, 200], "typic": [129, 180, 200], "need": [129, 143, 200, 202, 209], "param": 129, "et_el": 129, "et": 129, "stud": [138, 203], "slat": 138, "rectangular": [138, 203], "section": [138, 148, 150, 194, 199, 203], "local": [138, 203, 207], "coordin": [138, 203, 207], "system": [138, 203, 207], "locat": [138, 180, 203], "start": [138, 140, 146, 147, 150, 199, 203], "x": [138, 203, 206, 208], "major": [138, 203], "also": [138, 141, 193, 196, 199, 202, 203], "fibr": [138, 199], "solid": [138, 201], "wood": 138, "y": [138, 203, 208], "width": [138, 148, 150, 195, 202, 203], "smaller": [138, 203], "dimens": [138, 203], "height": [138, 148, 150, 195, 202, 203], "larger": [138, 203], "blank": [138, 140, 154], "parametr": [138, 196], "6": 138, "side": [138, 205, 206], "equal": 138, "posit": [138, 205, 206], "2": [138, 195, 200], "3": [138, 197, 200], "4": [138, 195, 200], "5": 138, "line": [138, 148, 196, 202, 203], "centerline_start": 138, "centerline_end": 138, "xmin": 138, "ymin": 138, "zmin": 138, "xmax": 138, "ymax": 138, "zmax": 138, "long_edg": 138, "long": [138, 147], "midpoint": 138, "middl": 138, "extend": [140, 147], "well": 140, "user": [141, 202], "must": 141, "apply_featur": 141, "vector": [143, 148, 150, 196, 203], "z_axi": 143, "definit": [143, 200, 201], "todo": [143, 147], "Not": 143, "anywher": 143, "features_to_clear": 144, "endpoint": [146, 150], "closer": 146, "interest": 146, "either": 146, "depend": [146, 148, 150, 197, 200, 207], "actual": 146, "pln": 147, "metric": 147, "minimum": 147, "pass": 147, "through": [147, 193], "z_vector": [148, 150], "worldz": [148, 150], "worldx": [148, 150], "point_start": 150, "point_end": 150, "end_point": 150, "with_featur": 153, "drawn": [153, 203], "scene": 153, "enum": 165, "could": 165, "execut": [165, 180, 194], "instruct": [165, 167, 180], "human": [166, 180], "robot": [166, 180], "build": [167, 179, 180, 209], "step": [167, 169, 179, 196, 200], "simpl": [179, 196, 199], "sequenc": [179, 196], "per": 179, "buildingplan": [179, 196], "assembl": 180, "singl": [180, 200], "actor": [180, 196], "element_id": 180, "cad": [180, 194], "id": [180, 194], "elements_held": 180, "held": 180, "support": [180, 193, 194], "is_built": 180, "whether": [180, 198, 207], "is_plan": 180, "increment": 180, "cylind": 180, "prioriti": 180, "parallel": [180, 203], "prior": 192, "research": [193, 196, 198], "project": [193, 196], "develop": [193, 196], "aleksandra": 193, "apolinarska": 193, "chen": 193, "kasir": 193, "gonzalo": 193, "casa": 193, "gramazio": [193, 196, 198], "kohler": [193, 196, 198], "eth": [193, 196], "zurich": [193, 196], "swiss": 193, "nation": 193, "scienc": 193, "foundat": 193, "center": 193, "compet": 193, "digit": 193, "nccr": 193, "dfab": 193, "programm": 193, "As": 193, "open": [193, 196], "mani": [193, 194, 196], "contributor": 193, "you": [193, 199, 203, 206, 209], "your": 193, "work": 193, "acknowledg": 193, "misc": 193, "titl": 193, "librari": [193, 194, 196, 199], "author": [193, 198], "anna": 193, "http": [193, 197, 200], "github": [193, 197], "com": [193, 197, 200], "gramaziokohl": 193, "year": 193, "2022": 193, "2023": 193, "doi": 193, "10": [193, 197], "5281": 193, "zenodo": 193, "7934267": 193, "url": 193, "present": 194, "differ": [194, 200, 206, 209], "concept": [194, 199], "There": [194, 202], "wai": 194, "run": [194, 196], "python": [194, 196, 197, 199], "environ": [194, 196, 197], "interact": 194, "session": 194, "text": 194, "editor": 194, "sublim": 194, "studio": 194, "eclips": 194, "insid": 194, "blender": 194, "worldxi": 195, "depth": 195, "geometry_typ": 195, "add_beam": 195, "packag": [196, 197, 200], "model": 196, "written": 196, "ecosystem": 196, "rhinocero": 196, "3d": 196, "plug": 196, "activ": [196, 197, 201, 203, 208], "being": 196, "continu": 196, "At": 196, "stage": 196, "encompass": 196, "fast": 196, "intuit": 196, "custom": [196, 202], "entiti": 196, "semant": 196, "inform": [196, 208], "about": 196, "futur": 196, "expand": 196, "entail": [196, 202], "interfac": 196, "analysi": 196, "softwar": [196, 198], "specialist": 196, "built": [196, 199], "upon": 196, "framework": 196, "basic": 196, "like": [196, 199, 201], "complex": 196, "brep": [196, 201, 205, 207, 208], "resolv": 196, "backend": 196, "rhinocommon": 196, "sdk": 196, "handl": 196, "opencascad": 196, "via": 196, "occ": 196, "introduct": 196, "instal": 196, "api": [196, 199], "lbuttjoint": 196, "lmiterjoint": 196, "xhalflapjoint": 196, "connectionsolv": 196, "find_neighboring_beam": 196, "brepgeometryconsum": 196, "btlxprocess": [196, 200], "btlxfrenchridgelap": 196, "lbuttfactori": 196, "tbuttfactori": 196, "lmiterfactori": 196, "frenchridgefactori": 196, "simplesequencegener": 196, "workflow": [196, 199, 202, 203], "show": [196, 199], "util": [196, 199], "contribut": [196, 199], "licens": 196, "cite": 196, "conda": 197, "n": 197, "myenvnam": 197, "ye": [197, 206], "m": 197, "compas_rhino": 197, "p": 197, "latest": 197, "fork": 197, "repositori": 197, "clone": 197, "git": 197, "yourgithub_usernam": 197, "cd": 197, "necessari": [197, 200], "edit": 197, "mode": 197, "dev": 197, "txt": 197, "mit": 198, "copyright": 198, "c": 198, "2020": 198, "02": 198, "17": 198, "permiss": 198, "herebi": 198, "grant": 198, "free": 198, "charg": 198, "person": 198, "obtain": 198, "document": [198, 200, 202, 203, 208], "deal": 198, "without": 198, "restrict": 198, "limit": 198, "right": 198, "modifi": 198, "merg": 198, "publish": 198, "distribut": 198, "sublicens": 198, "sell": 198, "permit": 198, "whom": 198, "furnish": 198, "do": [198, 200], "subject": 198, "follow": [198, 199, 200], "condit": 198, "abov": 198, "notic": 198, "shall": 198, "substanti": 198, "portion": 198, "THE": 198, "AS": 198, "warranti": 198, "OF": 198, "kind": 198, "express": 198, "OR": 198, "impli": [198, 201], "BUT": 198, "NOT": 198, "TO": 198, "merchant": 198, "fit": 198, "FOR": 198, "particular": 198, "purpos": 198, "AND": 198, "noninfring": 198, "IN": 198, "NO": 198, "event": 198, "holder": 198, "BE": 198, "liabl": 198, "claim": 198, "damag": 198, "liabil": 198, "action": 198, "contract": 198, "tort": 198, "aris": 198, "out": 198, "WITH": 198, "easi": 199, "autom": [199, 206], "bake": 199, "textur": [199, 208], "render": [199, 208], "boolean": [199, 201, 205], "style": 199, "planar": [199, 206], "might": 199, "ghpython": 199, "componen": 199, "detail": 199, "overal": 199, "idea": 199, "how": [199, 206], "Then": [199, 206], "explain": 199, "machin": 200, "requr": 200, "here": [200, 204, 206, 208], "design2machin": 200, "btlx_2_1_0": 200, "pdf": 200, "process_param": 200, "where": [200, 203, 208], "btlxjoint": 200, "__init__": 200, "py": 200, "mind": 200, "compon": [201, 202, 203, 207], "made": 201, "oper": [201, 205], "subtract": [201, 205], "computation": 201, "expens": 201, "disabl": 201, "applyfeatur": 201, "unsuccess": 201, "abstract": 201, "showassembli": [201, 207], "group": 202, "intend": [202, 203], "hybrid": 202, "encod": 202, "concaten": 202, "colon": 202, "separ": 202, "entri": [202, 209], "underscor": 202, "_": 202, "attr1nam": 202, "attr1value_attr2nam": 202, "attr2valu": 202, "four": [202, 206], "standard": 202, "categori": [202, 203, 206], "zvector": [202, 203], "setstandardattribut": 202, "write": [202, 203], "readstandardattribut": 202, "read": 202, "checkstandardattribut": 202, "correctli": 202, "miss": 202, "retriev": 202, "later": [202, 203, 206], "filter": 202, "accord": [202, 206], "criteria": 202, "These": 202, "deleteattribut": 202, "setcustomattribut": 202, "readallattribut": 202, "linear": [203, 206], "straight": 203, "rafter": 203, "joist": 203, "beamfromcurv": 203, "form": [203, 206], "linecurv": 203, "beamfromcurveguid": 203, "referenc": 203, "rotat": 203, "around": 203, "li": [203, 208], "sai": 203, "perpendicular": 203, "cannot": 203, "world": 203, "vertic": 203, "convent": 203, "rule": [203, 206], "jointcategoryrul": [203, 206], "automaticjoint": 203, "updaterefobj": 203, "onc": 203, "preview": [203, 207], "shape": 203, "extract": [203, 207], "demo": 204, "ly": 205, "three": 206, "prefix": 206, "rel": 206, "we": 206, "distinguish": 206, "topolog": 206, "situat": 206, "splice": 206, "co": 206, "corner": 206, "meet": 206, "select": 206, "addition": 206, "clean": 206, "serv": [206, 208], "cata": 206, "catb": 206, "thing": 206, "determin": 206, "everi": 206, "tri": 206, "unintend": 206, "maxdist": 206, "exactli": 206, "certain": 206, "000001": 206, "inspect": 207, "showbeam": 207, "showbeamfram": 207, "showbeamindex": 207, "showjointtyp": 207, "bakewithboxmap": 208, "layer": 208, "materi": 208, "desir": 208, "random": 208, "deviat": 208, "mapsiz": 208, "scale": 208, "adjust": 208, "size": 208, "imag": 208, "ratio": 208, "bitmap": 208, "care": 209, "final": 209, "matter": 209, "last": 209, "earlier": 209}, "objects": {"compas_timber.assembly": [[8, 0, 1, "", "TimberAssembly"]], "compas_timber.assembly.TimberAssembly": [[9, 1, 1, "", "ToString"], [10, 1, 1, "", "add_beam"], [11, 1, 1, "", "add_connection"], [12, 1, 1, "", "add_joint"], [13, 1, 1, "", "add_part"], [14, 1, 1, "", "are_parts_joined"], [15, 1, 1, "", "connections"], [16, 1, 1, "", "contains"], [17, 1, 1, "", "copy"], [18, 1, 1, "", "delete_connection"], [19, 1, 1, "", "delete_part"], [20, 1, 1, "", "find"], [21, 1, 1, "", "find_by_key"], [22, 1, 1, "", "from_data"], [23, 1, 1, "", "from_json"], [24, 1, 1, "", "from_jsonstring"], [25, 1, 1, "", "parts"], [26, 1, 1, "", "remove_joint"], [27, 1, 1, "", "sha256"], [28, 1, 1, "", "to_data"], [29, 1, 1, "", "to_json"], [30, 1, 1, "", "to_jsonstring"], [31, 1, 1, "", "transform"], [32, 1, 1, "", "transform_numpy"], [33, 1, 1, "", "transformed"], [34, 1, 1, "", "transformed_numpy"], [35, 1, 1, "", "validate_data"]], "compas_timber.connections": [[36, 2, 1, "", "BeamJoinningError"], [37, 0, 1, "", "ConnectionSolver"], [40, 0, 1, "", "Joint"], [54, 0, 1, "", "JointTopology"], [56, 0, 1, "", "LButtJoint"], [72, 0, 1, "", "LMiterJoint"], [87, 0, 1, "", "TButtJoint"], [102, 0, 1, "", "XHalfLapJoint"], [116, 3, 1, "", "find_neighboring_beams"]], "compas_timber.connections.ConnectionSolver": [[38, 1, 1, "", "find_intersecting_pairs"], [39, 1, 1, "", "find_topology"]], "compas_timber.connections.Joint": [[41, 1, 1, "", "ToString"], [42, 1, 1, "", "add_features"], [43, 1, 1, "", "copy"], [44, 1, 1, "", "create"], [45, 1, 1, "", "from_data"], [46, 1, 1, "", "from_json"], [47, 1, 1, "", "from_jsonstring"], [48, 1, 1, "", "restore_beams_from_keys"], [49, 1, 1, "", "sha256"], [50, 1, 1, "", "to_data"], [51, 1, 1, "", "to_json"], [52, 1, 1, "", "to_jsonstring"], [53, 1, 1, "", "validate_data"]], "compas_timber.connections.JointTopology": [[55, 1, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[57, 1, 1, "", "ToString"], [58, 1, 1, "", "add_features"], [59, 1, 1, "", "copy"], [60, 1, 1, "", "create"], [61, 1, 1, "", "from_data"], [62, 1, 1, "", "from_json"], [63, 1, 1, "", "from_jsonstring"], [64, 1, 1, "", "get_cross_cutting_plane"], [65, 1, 1, "", "get_main_cutting_plane"], [66, 1, 1, "", "restore_beams_from_keys"], [67, 1, 1, "", "sha256"], [68, 1, 1, "", "to_data"], [69, 1, 1, "", "to_json"], [70, 1, 1, "", "to_jsonstring"], [71, 1, 1, "", "validate_data"]], "compas_timber.connections.LMiterJoint": [[73, 1, 1, "", "ToString"], [74, 1, 1, "", "add_features"], [75, 1, 1, "", "copy"], [76, 1, 1, "", "create"], [77, 1, 1, "", "from_data"], [78, 1, 1, "", "from_json"], [79, 1, 1, "", "from_jsonstring"], [80, 1, 1, "", "get_cutting_planes"], [81, 1, 1, "", "restore_beams_from_keys"], [82, 1, 1, "", "sha256"], [83, 1, 1, "", "to_data"], [84, 1, 1, "", "to_json"], [85, 1, 1, "", "to_jsonstring"], [86, 1, 1, "", "validate_data"]], "compas_timber.connections.TButtJoint": [[88, 1, 1, "", "ToString"], [89, 1, 1, "", "add_features"], [90, 1, 1, "", "copy"], [91, 1, 1, "", "create"], [92, 1, 1, "", "from_data"], [93, 1, 1, "", "from_json"], [94, 1, 1, "", "from_jsonstring"], [95, 1, 1, "", "get_cutting_plane"], [96, 1, 1, "", "restore_beams_from_keys"], [97, 1, 1, "", "sha256"], [98, 1, 1, "", "to_data"], [99, 1, 1, "", "to_json"], [100, 1, 1, "", "to_jsonstring"], [101, 1, 1, "", "validate_data"]], "compas_timber.connections.XHalfLapJoint": [[103, 1, 1, "", "ToString"], [104, 1, 1, "", "add_features"], [105, 1, 1, "", "copy"], [106, 1, 1, "", "create"], [107, 1, 1, "", "from_data"], [108, 1, 1, "", "from_json"], [109, 1, 1, "", "from_jsonstring"], [110, 1, 1, "", "restore_beams_from_keys"], [111, 1, 1, "", "sha256"], [112, 1, 1, "", "to_data"], [113, 1, 1, "", "to_json"], [114, 1, 1, "", "to_jsonstring"], [115, 1, 1, "", "validate_data"]], "compas_timber.consumers": [[117, 0, 1, "", "BrepGeometryConsumer"]], "compas_timber.fabrication": [[118, 0, 1, "", "BTLx"], [122, 0, 1, "", "BTLxFrenchRidgeLap"], [126, 0, 1, "", "BTLxJackCut"], [129, 0, 1, "", "BTLxProcess"], [130, 0, 1, "", "FrenchRidgeFactory"], [132, 0, 1, "", "LButtFactory"], [134, 0, 1, "", "LMiterFactory"], [136, 0, 1, "", "TButtFactory"]], "compas_timber.fabrication.BTLx": [[119, 1, 1, "", "btlx_string"], [120, 1, 1, "", "process_assembly"], [121, 1, 1, "", "register_joint"]], "compas_timber.fabrication.BTLxFrenchRidgeLap": [[123, 1, 1, "", "create_process"], [124, 1, 1, "", "get_params"], [125, 1, 1, "", "process_joints"]], "compas_timber.fabrication.BTLxJackCut": [[127, 1, 1, "", "create_process"], [128, 1, 1, "", "generate_process"]], "compas_timber.fabrication.FrenchRidgeFactory": [[131, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.LButtFactory": [[133, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.LMiterFactory": [[135, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.TButtFactory": [[137, 1, 1, "", "apply_processings"]], "compas_timber.parts": [[138, 0, 1, "", "Beam"]], "compas_timber.parts.Beam": [[139, 1, 1, "", "ToString"], [140, 1, 1, "", "add_blank_extension"], [141, 1, 1, "", "add_feature"], [142, 1, 1, "", "add_features"], [143, 1, 1, "", "align_z"], [144, 1, 1, "", "clear_features"], [145, 1, 1, "", "copy"], [146, 1, 1, "", "endpoint_closest_to_point"], [147, 1, 1, "", "extension_to_plane"], [148, 1, 1, "", "from_centerline"], [149, 1, 1, "", "from_data"], [150, 1, 1, "", "from_endpoints"], [151, 1, 1, "", "from_json"], [152, 1, 1, "", "from_jsonstring"], [153, 1, 1, "", "get_geometry"], [154, 1, 1, "", "remove_blank_extension"], [155, 1, 1, "", "remove_features"], [156, 1, 1, "", "sha256"], [157, 1, 1, "", "to_data"], [158, 1, 1, "", "to_json"], [159, 1, 1, "", "to_jsonstring"], [160, 1, 1, "", "transform"], [161, 1, 1, "", "transform_numpy"], [162, 1, 1, "", "transformed"], [163, 1, 1, "", "transformed_numpy"], [164, 1, 1, "", "validate_data"]], "compas_timber.planning": [[165, 0, 1, "", "Actor"], [167, 0, 1, "", "BuildingPlan"], [179, 0, 1, "", "SimpleSequenceGenerator"], [180, 0, 1, "", "Step"]], "compas_timber.planning.Actor": [[166, 1, 1, "", "get_name"]], "compas_timber.planning.BuildingPlan": [[168, 1, 1, "", "ToString"], [169, 1, 1, "", "add_step"], [170, 1, 1, "", "copy"], [171, 1, 1, "", "from_data"], [172, 1, 1, "", "from_json"], [173, 1, 1, "", "from_jsonstring"], [174, 1, 1, "", "sha256"], [175, 1, 1, "", "to_data"], [176, 1, 1, "", "to_json"], [177, 1, 1, "", "to_jsonstring"], [178, 1, 1, "", "validate_data"]], "compas_timber.planning.Step": [[181, 1, 1, "", "ToString"], [182, 1, 1, "", "copy"], [183, 1, 1, "", "from_data"], [184, 1, 1, "", "from_json"], [185, 1, 1, "", "from_jsonstring"], [186, 1, 1, "", "sha256"], [187, 1, 1, "", "to_data"], [188, 1, 1, "", "to_json"], [189, 1, 1, "", "to_jsonstring"], [190, 1, 1, "", "transform"], [191, 1, 1, "", "validate_data"]], "compas_timber.rhino": [[192, 3, 1, "", "find_neighboring_beams"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:exception", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "exception", "Python exception"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "packag": 0, "compas_timb": [1, 2, 3, 4, 5, 6], "assembli": [1, 194, 201], "class": [1, 2, 3, 4, 5, 6], "connect": [2, 15], "function": 2, "except": 2, "consum": 3, "fabric": 4, "part": [5, 25], "plan": 6, "rhino": 7, "plugin": [7, 199], "timberassembli": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "tostr": [9, 41, 57, 73, 88, 103, 139, 168, 181], "add_beam": 10, "add_connect": 11, "add_joint": 12, "add_part": 13, "are_parts_join": 14, "contain": 16, "copi": [17, 43, 59, 75, 90, 105, 145, 170, 182], "delete_connect": 18, "delete_part": 19, "find": 20, "find_by_kei": 21, "from_data": [22, 45, 61, 77, 92, 107, 149, 171, 183], "from_json": [23, 46, 62, 78, 93, 108, 151, 172, 184], "from_jsonstr": [24, 47, 63, 79, 94, 109, 152, 173, 185], "remove_joint": 26, "sha256": [27, 49, 67, 82, 97, 111, 156, 174, 186], "to_data": [28, 50, 68, 83, 98, 112, 157, 175, 187], "to_json": [29, 51, 69, 84, 99, 113, 158, 176, 188], "to_jsonstr": [30, 52, 70, 85, 100, 114, 159, 177, 189], "transform": [31, 33, 160, 162, 190], "transform_numpi": [32, 161], "transformed_numpi": [34, 163], "validate_data": [35, 53, 71, 86, 101, 115, 164, 178, 191], "beamjoinningerror": 36, "connectionsolv": [37, 38, 39], "find_intersecting_pair": 38, "find_topologi": 39, "joint": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 195, 206], "add_featur": [42, 58, 74, 89, 104, 141, 142], "creat": [44, 60, 76, 91, 106, 195], "restore_beams_from_kei": [48, 66, 81, 96, 110], "jointtopologi": [54, 55], "get_nam": [55, 166], "lbuttjoint": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "get_cross_cutting_plan": 64, "get_main_cutting_plan": 65, "lmiterjoint": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "get_cutting_plan": [80, 95], "tbuttjoint": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101], "xhalflapjoint": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "find_neighboring_beam": [116, 192], "brepgeometryconsum": 117, "btlx": [118, 119, 120, 121, 200], "btlx_string": 119, "process_assembli": 120, "register_joint": 121, "btlxfrenchridgelap": [122, 123, 124, 125], "create_process": [123, 127], "get_param": 124, "process_joint": 125, "btlxjackcut": [126, 127, 128], "generate_process": 128, "btlxprocess": 129, "frenchridgefactori": [130, 131], "apply_process": [131, 133, 135, 137], "lbuttfactori": [132, 133], "lmiterfactori": [134, 135], "tbuttfactori": [136, 137], "beam": [138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 203], "add_blank_extens": 140, "align_z": 143, "clear_featur": 144, "endpoint_closest_to_point": 146, "extension_to_plan": 147, "from_centerlin": 148, "from_endpoint": 150, "get_geometri": 153, "remove_blank_extens": 154, "remove_featur": 155, "actor": [165, 166], "buildingplan": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "add_step": 169, "simplesequencegener": 179, "step": [180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "cite": 193, "exampl": [194, 204], "timber": [194, 196], "compa": 196, "depend": 196, "tabl": 196, "content": 196, "indic": 196, "instal": 197, "stabl": 197, "pip": 197, "develop": 197, "licens": 198, "grasshopp": 199, "contribut": 200, "guid": 200, "attribut": 202, "featur": 205, "topologi": 206, "compon": 206, "t": 206, "butt": 206, "l": 206, "miter": 206, "automaticjoint": 206, "wizzard": 206, "show": 207, "util": 208, "bake": 208, "boxmap": 208, "workflow": 209}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"API Reference": [[0, "api-reference"]], "Packages": [[0, "packages"]], "compas_timber.assembly": [[1, "compas-timber-assembly"]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"]], "compas_timber.connections": [[2, "compas-timber-connections"]], "Functions": [[2, "functions"]], "Exceptions": [[2, "exceptions"]], "compas_timber.consumers": [[3, "compas-timber-consumers"]], "compas_timber.fabrication": [[4, "compas-timber-fabrication"]], "compas_timber.parts": [[5, "compas-timber-parts"]], "compas_timber.planning": [[6, "compas-timber-planning"]], "rhino": [[7, "rhino"]], "Plugins": [[7, "plugins"]], "TimberAssembly": [[8, "timberassembly"]], "TimberAssembly.ToString": [[9, "timberassembly-tostring"]], "TimberAssembly.add_beam": [[10, "timberassembly-add-beam"]], "TimberAssembly.add_connection": [[11, "timberassembly-add-connection"]], "TimberAssembly.add_joint": [[12, "timberassembly-add-joint"]], "TimberAssembly.add_part": [[13, "timberassembly-add-part"]], "TimberAssembly.are_parts_joined": [[14, "timberassembly-are-parts-joined"]], "TimberAssembly.connections": [[15, "timberassembly-connections"]], "TimberAssembly.contains": [[16, "timberassembly-contains"]], "TimberAssembly.copy": [[17, "timberassembly-copy"]], "TimberAssembly.delete_connection": [[18, "timberassembly-delete-connection"]], "TimberAssembly.delete_part": [[19, "timberassembly-delete-part"]], "TimberAssembly.find": [[20, "timberassembly-find"]], "TimberAssembly.find_by_key": [[21, "timberassembly-find-by-key"]], "TimberAssembly.from_data": [[22, "timberassembly-from-data"]], "TimberAssembly.from_json": [[23, "timberassembly-from-json"]], "TimberAssembly.from_jsonstring": [[24, "timberassembly-from-jsonstring"]], "TimberAssembly.parts": [[25, "timberassembly-parts"]], "TimberAssembly.remove_joint": [[26, "timberassembly-remove-joint"]], "TimberAssembly.sha256": [[27, "timberassembly-sha256"]], "TimberAssembly.to_data": [[28, "timberassembly-to-data"]], "TimberAssembly.to_json": [[29, "timberassembly-to-json"]], "TimberAssembly.to_jsonstring": [[30, "timberassembly-to-jsonstring"]], "TimberAssembly.transform": [[31, "timberassembly-transform"]], "TimberAssembly.transform_numpy": [[32, "timberassembly-transform-numpy"]], "TimberAssembly.transformed": [[33, "timberassembly-transformed"]], "TimberAssembly.transformed_numpy": [[34, "timberassembly-transformed-numpy"]], "TimberAssembly.validate_data": [[35, "timberassembly-validate-data"]], "BeamJoinningError": [[36, "beamjoinningerror"]], "ConnectionSolver": [[37, "connectionsolver"]], "ConnectionSolver.find_intersecting_pairs": [[38, "connectionsolver-find-intersecting-pairs"]], "ConnectionSolver.find_topology": [[39, "connectionsolver-find-topology"]], "Joint": [[40, "joint"]], "Joint.ToString": [[41, "joint-tostring"]], "Joint.add_features": [[42, "joint-add-features"]], "Joint.copy": [[43, "joint-copy"]], "Joint.create": [[44, "joint-create"]], "Joint.from_data": [[45, "joint-from-data"]], "Joint.from_json": [[46, "joint-from-json"]], "Joint.from_jsonstring": [[47, "joint-from-jsonstring"]], "Joint.restore_beams_from_keys": [[48, "joint-restore-beams-from-keys"]], "Joint.sha256": [[49, "joint-sha256"]], "Joint.to_data": [[50, "joint-to-data"]], "Joint.to_json": [[51, "joint-to-json"]], "Joint.to_jsonstring": [[52, "joint-to-jsonstring"]], "Joint.validate_data": [[53, "joint-validate-data"]], "JointTopology": [[54, "jointtopology"]], "JointTopology.get_name": [[55, "jointtopology-get-name"]], "LButtJoint": [[56, "lbuttjoint"]], "LButtJoint.ToString": [[57, "lbuttjoint-tostring"]], "LButtJoint.add_features": [[58, "lbuttjoint-add-features"]], "LButtJoint.copy": [[59, "lbuttjoint-copy"]], "LButtJoint.create": [[60, "lbuttjoint-create"]], "LButtJoint.from_data": [[61, "lbuttjoint-from-data"]], "LButtJoint.from_json": [[62, "lbuttjoint-from-json"]], "LButtJoint.from_jsonstring": [[63, "lbuttjoint-from-jsonstring"]], "LButtJoint.get_cross_cutting_plane": [[64, "lbuttjoint-get-cross-cutting-plane"]], "LButtJoint.get_main_cutting_plane": [[65, "lbuttjoint-get-main-cutting-plane"]], "LButtJoint.restore_beams_from_keys": [[66, "lbuttjoint-restore-beams-from-keys"]], "LButtJoint.sha256": [[67, "lbuttjoint-sha256"]], "LButtJoint.to_data": [[68, "lbuttjoint-to-data"]], "LButtJoint.to_json": [[69, "lbuttjoint-to-json"]], "LButtJoint.to_jsonstring": [[70, "lbuttjoint-to-jsonstring"]], "LButtJoint.validate_data": [[71, "lbuttjoint-validate-data"]], "LMiterJoint": [[72, "lmiterjoint"]], "LMiterJoint.ToString": [[73, "lmiterjoint-tostring"]], "LMiterJoint.add_features": [[74, "lmiterjoint-add-features"]], "LMiterJoint.copy": [[75, "lmiterjoint-copy"]], "LMiterJoint.create": [[76, "lmiterjoint-create"]], "LMiterJoint.from_data": [[77, "lmiterjoint-from-data"]], "LMiterJoint.from_json": [[78, "lmiterjoint-from-json"]], "LMiterJoint.from_jsonstring": [[79, "lmiterjoint-from-jsonstring"]], "LMiterJoint.get_cutting_planes": [[80, "lmiterjoint-get-cutting-planes"]], "LMiterJoint.restore_beams_from_keys": [[81, "lmiterjoint-restore-beams-from-keys"]], "LMiterJoint.sha256": [[82, "lmiterjoint-sha256"]], "LMiterJoint.to_data": [[83, "lmiterjoint-to-data"]], "LMiterJoint.to_json": [[84, "lmiterjoint-to-json"]], "LMiterJoint.to_jsonstring": [[85, "lmiterjoint-to-jsonstring"]], "LMiterJoint.validate_data": [[86, "lmiterjoint-validate-data"]], "TButtJoint": [[87, "tbuttjoint"]], "TButtJoint.ToString": [[88, "tbuttjoint-tostring"]], "TButtJoint.add_features": [[89, "tbuttjoint-add-features"]], "TButtJoint.copy": [[90, "tbuttjoint-copy"]], "TButtJoint.create": [[91, "tbuttjoint-create"]], "TButtJoint.from_data": [[92, "tbuttjoint-from-data"]], "TButtJoint.from_json": [[93, "tbuttjoint-from-json"]], "TButtJoint.from_jsonstring": [[94, "tbuttjoint-from-jsonstring"]], "TButtJoint.get_cutting_plane": [[95, "tbuttjoint-get-cutting-plane"]], "TButtJoint.restore_beams_from_keys": [[96, "tbuttjoint-restore-beams-from-keys"]], "TButtJoint.sha256": [[97, "tbuttjoint-sha256"]], "TButtJoint.to_data": [[98, "tbuttjoint-to-data"]], "TButtJoint.to_json": [[99, "tbuttjoint-to-json"]], "TButtJoint.to_jsonstring": [[100, "tbuttjoint-to-jsonstring"]], "TButtJoint.validate_data": [[101, "tbuttjoint-validate-data"]], "XHalfLapJoint": [[102, "xhalflapjoint"]], "XHalfLapJoint.ToString": [[103, "xhalflapjoint-tostring"]], "XHalfLapJoint.add_features": [[104, "xhalflapjoint-add-features"]], "XHalfLapJoint.copy": [[105, "xhalflapjoint-copy"]], "XHalfLapJoint.create": [[106, "xhalflapjoint-create"]], "XHalfLapJoint.from_data": [[107, "xhalflapjoint-from-data"]], "XHalfLapJoint.from_json": [[108, "xhalflapjoint-from-json"]], "XHalfLapJoint.from_jsonstring": [[109, "xhalflapjoint-from-jsonstring"]], "XHalfLapJoint.restore_beams_from_keys": [[110, "xhalflapjoint-restore-beams-from-keys"]], "XHalfLapJoint.sha256": [[111, "xhalflapjoint-sha256"]], "XHalfLapJoint.to_data": [[112, "xhalflapjoint-to-data"]], "XHalfLapJoint.to_json": [[113, "xhalflapjoint-to-json"]], "XHalfLapJoint.to_jsonstring": [[114, "xhalflapjoint-to-jsonstring"]], "XHalfLapJoint.validate_data": [[115, "xhalflapjoint-validate-data"]], "find_neighboring_beams": [[116, "find-neighboring-beams"], [192, "find-neighboring-beams"]], "BrepGeometryConsumer": [[117, "brepgeometryconsumer"]], "BTLx": [[118, "btlx"]], "BTLx.btlx_string": [[119, "btlx-btlx-string"]], "BTLx.process_assembly": [[120, "btlx-process-assembly"]], "BTLx.register_joint": [[121, "btlx-register-joint"]], "BTLxFrenchRidgeLap": [[122, "btlxfrenchridgelap"]], "BTLxFrenchRidgeLap.create_process": [[123, "btlxfrenchridgelap-create-process"]], "BTLxFrenchRidgeLap.get_params": [[124, "btlxfrenchridgelap-get-params"]], "BTLxFrenchRidgeLap.process_joints": [[125, "btlxfrenchridgelap-process-joints"]], "BTLxJackCut": [[126, "btlxjackcut"]], "BTLxJackCut.create_process": [[127, "btlxjackcut-create-process"]], "BTLxJackCut.generate_process": [[128, "btlxjackcut-generate-process"]], "BTLxProcess": [[129, "btlxprocess"]], "FrenchRidgeFactory": [[130, "frenchridgefactory"]], "FrenchRidgeFactory.apply_processings": [[131, "frenchridgefactory-apply-processings"]], "LButtFactory": [[132, "lbuttfactory"]], "LButtFactory.apply_processings": [[133, "lbuttfactory-apply-processings"]], "LMiterFactory": [[134, "lmiterfactory"]], "LMiterFactory.apply_processings": [[135, "lmiterfactory-apply-processings"]], "TButtFactory": [[136, "tbuttfactory"]], "TButtFactory.apply_processings": [[137, "tbuttfactory-apply-processings"]], "Beam": [[138, "beam"], [203, "beam"]], "Beam.ToString": [[139, "beam-tostring"]], "Beam.add_blank_extension": [[140, "beam-add-blank-extension"]], "Beam.add_feature": [[141, "beam-add-feature"]], "Beam.add_features": [[142, "beam-add-features"]], "Beam.align_z": [[143, "beam-align-z"]], "Beam.clear_features": [[144, "beam-clear-features"]], "Beam.copy": [[145, "beam-copy"]], "Beam.endpoint_closest_to_point": [[146, "beam-endpoint-closest-to-point"]], "Beam.extension_to_plane": [[147, "beam-extension-to-plane"]], "Beam.from_centerline": [[148, "beam-from-centerline"]], "Beam.from_data": [[149, "beam-from-data"]], "Beam.from_endpoints": [[150, "beam-from-endpoints"]], "Beam.from_json": [[151, "beam-from-json"]], "Beam.from_jsonstring": [[152, "beam-from-jsonstring"]], "Beam.get_geometry": [[153, "beam-get-geometry"]], "Beam.remove_blank_extension": [[154, "beam-remove-blank-extension"]], "Beam.remove_features": [[155, "beam-remove-features"]], "Beam.sha256": [[156, "beam-sha256"]], "Beam.to_data": [[157, "beam-to-data"]], "Beam.to_json": [[158, "beam-to-json"]], "Beam.to_jsonstring": [[159, "beam-to-jsonstring"]], "Beam.transform": [[160, "beam-transform"]], "Beam.transform_numpy": [[161, "beam-transform-numpy"]], "Beam.transformed": [[162, "beam-transformed"]], "Beam.transformed_numpy": [[163, "beam-transformed-numpy"]], "Beam.validate_data": [[164, "beam-validate-data"]], "Actor": [[165, "actor"]], "Actor.get_name": [[166, "actor-get-name"]], "BuildingPlan": [[167, "buildingplan"]], "BuildingPlan.ToString": [[168, "buildingplan-tostring"]], "BuildingPlan.add_step": [[169, "buildingplan-add-step"]], "BuildingPlan.copy": [[170, "buildingplan-copy"]], "BuildingPlan.from_data": [[171, "buildingplan-from-data"]], "BuildingPlan.from_json": [[172, "buildingplan-from-json"]], "BuildingPlan.from_jsonstring": [[173, "buildingplan-from-jsonstring"]], "BuildingPlan.sha256": [[174, "buildingplan-sha256"]], "BuildingPlan.to_data": [[175, "buildingplan-to-data"]], "BuildingPlan.to_json": [[176, "buildingplan-to-json"]], "BuildingPlan.to_jsonstring": [[177, "buildingplan-to-jsonstring"]], "BuildingPlan.validate_data": [[178, "buildingplan-validate-data"]], "SimpleSequenceGenerator": [[179, "simplesequencegenerator"]], "Step": [[180, "step"]], "Step.ToString": [[181, "step-tostring"]], "Step.copy": [[182, "step-copy"]], "Step.from_data": [[183, "step-from-data"]], "Step.from_json": [[184, "step-from-json"]], "Step.from_jsonstring": [[185, "step-from-jsonstring"]], "Step.sha256": [[186, "step-sha256"]], "Step.to_data": [[187, "step-to-data"]], "Step.to_json": [[188, "step-to-json"]], "Step.to_jsonstring": [[189, "step-to-jsonstring"]], "Step.transform": [[190, "step-transform"]], "Step.validate_data": [[191, "step-validate-data"]], "Citing": [[193, "citing"]], "Examples": [[194, "examples"], [204, "examples"]], "Timber Assembly Examples": [[194, "timber-assembly-examples"]], "Create Joint": [[195, "create-joint"]], "COMPAS TIMBER": [[196, "compas-timber"]], "Dependencies": [[196, "dependencies"]], "Table of Contents": [[196, "table-of-contents"]], "Indices and tables": [[196, "indices-and-tables"]], "Installation": [[197, "installation"]], "Stable": [[197, "stable"]], "Install with pip": [[197, "install-with-pip"]], "Development": [[197, "development"]], "License": [[198, "license"]], "Grasshopper plugin": [[199, "grasshopper-plugin"]], "BTLx Contribution Guide": [[200, "btlx-contribution-guide"]], "Assembly": [[201, "assembly"]], "Attributes": [[202, "attributes"]], "Features": [[205, "features"]], "Joints": [[206, "joints"]], "Joint Topologies": [[206, "joint-topologies"]], "Joint components": [[206, "joint-components"]], "T-Butt": [[206, "t-butt"]], "L-Butt": [[206, "l-butt"]], "L-Miter": [[206, "l-miter"]], "AutomaticJoint wizzard": [[206, "automaticjoint-wizzard"]], "Show": [[207, "show"]], "Utils": [[208, "utils"]], "Bake with BoxMap": [[208, "bake-with-boxmap"]], "Workflow": [[209, "workflow"]]}, "indexentries": {"timberassembly (class in compas_timber.assembly)": [[8, "compas_timber.assembly.TimberAssembly"]], "tostring() (compas_timber.assembly.timberassembly method)": [[9, "compas_timber.assembly.TimberAssembly.ToString"]], "add_beam() (compas_timber.assembly.timberassembly method)": [[10, "compas_timber.assembly.TimberAssembly.add_beam"]], "add_connection() (compas_timber.assembly.timberassembly method)": [[11, "compas_timber.assembly.TimberAssembly.add_connection"]], "add_joint() (compas_timber.assembly.timberassembly method)": [[12, "compas_timber.assembly.TimberAssembly.add_joint"]], "add_part() (compas_timber.assembly.timberassembly method)": [[13, "compas_timber.assembly.TimberAssembly.add_part"]], "are_parts_joined() (compas_timber.assembly.timberassembly method)": [[14, "compas_timber.assembly.TimberAssembly.are_parts_joined"]], "connections() (compas_timber.assembly.timberassembly method)": [[15, "compas_timber.assembly.TimberAssembly.connections"]], "contains() (compas_timber.assembly.timberassembly method)": [[16, "compas_timber.assembly.TimberAssembly.contains"]], "copy() (compas_timber.assembly.timberassembly method)": [[17, "compas_timber.assembly.TimberAssembly.copy"]], "delete_connection() (compas_timber.assembly.timberassembly method)": [[18, "compas_timber.assembly.TimberAssembly.delete_connection"]], "delete_part() (compas_timber.assembly.timberassembly method)": [[19, "compas_timber.assembly.TimberAssembly.delete_part"]], "find() (compas_timber.assembly.timberassembly method)": [[20, "compas_timber.assembly.TimberAssembly.find"]], "find_by_key() (compas_timber.assembly.timberassembly method)": [[21, "compas_timber.assembly.TimberAssembly.find_by_key"]], "from_data() (compas_timber.assembly.timberassembly class method)": [[22, "compas_timber.assembly.TimberAssembly.from_data"]], "from_json() (compas_timber.assembly.timberassembly class method)": [[23, "compas_timber.assembly.TimberAssembly.from_json"]], "from_jsonstring() (compas_timber.assembly.timberassembly class method)": [[24, "compas_timber.assembly.TimberAssembly.from_jsonstring"]], "parts() (compas_timber.assembly.timberassembly method)": [[25, "compas_timber.assembly.TimberAssembly.parts"]], "remove_joint() (compas_timber.assembly.timberassembly method)": [[26, "compas_timber.assembly.TimberAssembly.remove_joint"]], "sha256() (compas_timber.assembly.timberassembly method)": [[27, "compas_timber.assembly.TimberAssembly.sha256"]], "to_data() (compas_timber.assembly.timberassembly method)": [[28, "compas_timber.assembly.TimberAssembly.to_data"]], "to_json() (compas_timber.assembly.timberassembly method)": [[29, "compas_timber.assembly.TimberAssembly.to_json"]], "to_jsonstring() (compas_timber.assembly.timberassembly method)": [[30, "compas_timber.assembly.TimberAssembly.to_jsonstring"]], "transform() (compas_timber.assembly.timberassembly method)": [[31, "compas_timber.assembly.TimberAssembly.transform"]], "transform_numpy() (compas_timber.assembly.timberassembly method)": [[32, "compas_timber.assembly.TimberAssembly.transform_numpy"]], "transformed() (compas_timber.assembly.timberassembly method)": [[33, "compas_timber.assembly.TimberAssembly.transformed"]], "transformed_numpy() (compas_timber.assembly.timberassembly method)": [[34, "compas_timber.assembly.TimberAssembly.transformed_numpy"]], "validate_data() (compas_timber.assembly.timberassembly class method)": [[35, "compas_timber.assembly.TimberAssembly.validate_data"]], "beamjoinningerror": [[36, "compas_timber.connections.BeamJoinningError"]], "connectionsolver (class in compas_timber.connections)": [[37, "compas_timber.connections.ConnectionSolver"]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[38, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs"]], "find_topology() (compas_timber.connections.connectionsolver method)": [[39, "compas_timber.connections.ConnectionSolver.find_topology"]], "joint (class in compas_timber.connections)": [[40, "compas_timber.connections.Joint"]], "tostring() (compas_timber.connections.joint method)": [[41, "compas_timber.connections.Joint.ToString"]], "add_features() (compas_timber.connections.joint method)": [[42, "compas_timber.connections.Joint.add_features"]], "copy() (compas_timber.connections.joint method)": [[43, "compas_timber.connections.Joint.copy"]], "create() (compas_timber.connections.joint class method)": [[44, "compas_timber.connections.Joint.create"]], "from_data() (compas_timber.connections.joint class method)": [[45, "compas_timber.connections.Joint.from_data"]], "from_json() (compas_timber.connections.joint class method)": [[46, "compas_timber.connections.Joint.from_json"]], "from_jsonstring() (compas_timber.connections.joint class method)": [[47, "compas_timber.connections.Joint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[48, "compas_timber.connections.Joint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.joint method)": [[49, "compas_timber.connections.Joint.sha256"]], "to_data() (compas_timber.connections.joint method)": [[50, "compas_timber.connections.Joint.to_data"]], "to_json() (compas_timber.connections.joint method)": [[51, "compas_timber.connections.Joint.to_json"]], "to_jsonstring() (compas_timber.connections.joint method)": [[52, "compas_timber.connections.Joint.to_jsonstring"]], "validate_data() (compas_timber.connections.joint class method)": [[53, "compas_timber.connections.Joint.validate_data"]], "jointtopology (class in compas_timber.connections)": [[54, "compas_timber.connections.JointTopology"]], "get_name() (compas_timber.connections.jointtopology class method)": [[55, "compas_timber.connections.JointTopology.get_name"]], "lbuttjoint (class in compas_timber.connections)": [[56, "compas_timber.connections.LButtJoint"]], "tostring() (compas_timber.connections.lbuttjoint method)": [[57, "compas_timber.connections.LButtJoint.ToString"]], "add_features() (compas_timber.connections.lbuttjoint method)": [[58, "compas_timber.connections.LButtJoint.add_features"]], "copy() (compas_timber.connections.lbuttjoint method)": [[59, "compas_timber.connections.LButtJoint.copy"]], "create() (compas_timber.connections.lbuttjoint class method)": [[60, "compas_timber.connections.LButtJoint.create"]], "from_data() (compas_timber.connections.lbuttjoint class method)": [[61, "compas_timber.connections.LButtJoint.from_data"]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[62, "compas_timber.connections.LButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[63, "compas_timber.connections.LButtJoint.from_jsonstring"]], "get_cross_cutting_plane() (compas_timber.connections.lbuttjoint method)": [[64, "compas_timber.connections.LButtJoint.get_cross_cutting_plane"]], "get_main_cutting_plane() (compas_timber.connections.lbuttjoint method)": [[65, "compas_timber.connections.LButtJoint.get_main_cutting_plane"]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[66, "compas_timber.connections.LButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lbuttjoint method)": [[67, "compas_timber.connections.LButtJoint.sha256"]], "to_data() (compas_timber.connections.lbuttjoint method)": [[68, "compas_timber.connections.LButtJoint.to_data"]], "to_json() (compas_timber.connections.lbuttjoint method)": [[69, "compas_timber.connections.LButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lbuttjoint method)": [[70, "compas_timber.connections.LButtJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lbuttjoint class method)": [[71, "compas_timber.connections.LButtJoint.validate_data"]], "lmiterjoint (class in compas_timber.connections)": [[72, "compas_timber.connections.LMiterJoint"]], "tostring() (compas_timber.connections.lmiterjoint method)": [[73, "compas_timber.connections.LMiterJoint.ToString"]], "add_features() (compas_timber.connections.lmiterjoint method)": [[74, "compas_timber.connections.LMiterJoint.add_features"]], "copy() (compas_timber.connections.lmiterjoint method)": [[75, "compas_timber.connections.LMiterJoint.copy"]], "create() (compas_timber.connections.lmiterjoint class method)": [[76, "compas_timber.connections.LMiterJoint.create"]], "from_data() (compas_timber.connections.lmiterjoint class method)": [[77, "compas_timber.connections.LMiterJoint.from_data"]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[78, "compas_timber.connections.LMiterJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[79, "compas_timber.connections.LMiterJoint.from_jsonstring"]], "get_cutting_planes() (compas_timber.connections.lmiterjoint method)": [[80, "compas_timber.connections.LMiterJoint.get_cutting_planes"]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[81, "compas_timber.connections.LMiterJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lmiterjoint method)": [[82, "compas_timber.connections.LMiterJoint.sha256"]], "to_data() (compas_timber.connections.lmiterjoint method)": [[83, "compas_timber.connections.LMiterJoint.to_data"]], "to_json() (compas_timber.connections.lmiterjoint method)": [[84, "compas_timber.connections.LMiterJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lmiterjoint method)": [[85, "compas_timber.connections.LMiterJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lmiterjoint class method)": [[86, "compas_timber.connections.LMiterJoint.validate_data"]], "tbuttjoint (class in compas_timber.connections)": [[87, "compas_timber.connections.TButtJoint"]], "tostring() (compas_timber.connections.tbuttjoint method)": [[88, "compas_timber.connections.TButtJoint.ToString"]], "add_features() (compas_timber.connections.tbuttjoint method)": [[89, "compas_timber.connections.TButtJoint.add_features"]], "copy() (compas_timber.connections.tbuttjoint method)": [[90, "compas_timber.connections.TButtJoint.copy"]], "create() (compas_timber.connections.tbuttjoint class method)": [[91, "compas_timber.connections.TButtJoint.create"]], "from_data() (compas_timber.connections.tbuttjoint class method)": [[92, "compas_timber.connections.TButtJoint.from_data"]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[93, "compas_timber.connections.TButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[94, "compas_timber.connections.TButtJoint.from_jsonstring"]], "get_cutting_plane() (compas_timber.connections.tbuttjoint method)": [[95, "compas_timber.connections.TButtJoint.get_cutting_plane"]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[96, "compas_timber.connections.TButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.tbuttjoint method)": [[97, "compas_timber.connections.TButtJoint.sha256"]], "to_data() (compas_timber.connections.tbuttjoint method)": [[98, "compas_timber.connections.TButtJoint.to_data"]], "to_json() (compas_timber.connections.tbuttjoint method)": [[99, "compas_timber.connections.TButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.tbuttjoint method)": [[100, "compas_timber.connections.TButtJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.tbuttjoint class method)": [[101, "compas_timber.connections.TButtJoint.validate_data"]], "xhalflapjoint (class in compas_timber.connections)": [[102, "compas_timber.connections.XHalfLapJoint"]], "tostring() (compas_timber.connections.xhalflapjoint method)": [[103, "compas_timber.connections.XHalfLapJoint.ToString"]], "add_features() (compas_timber.connections.xhalflapjoint method)": [[104, "compas_timber.connections.XHalfLapJoint.add_features"]], "copy() (compas_timber.connections.xhalflapjoint method)": [[105, "compas_timber.connections.XHalfLapJoint.copy"]], "create() (compas_timber.connections.xhalflapjoint class method)": [[106, "compas_timber.connections.XHalfLapJoint.create"]], "from_data() (compas_timber.connections.xhalflapjoint class method)": [[107, "compas_timber.connections.XHalfLapJoint.from_data"]], "from_json() (compas_timber.connections.xhalflapjoint class method)": [[108, "compas_timber.connections.XHalfLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.xhalflapjoint class method)": [[109, "compas_timber.connections.XHalfLapJoint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.xhalflapjoint method)": [[110, "compas_timber.connections.XHalfLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.xhalflapjoint method)": [[111, "compas_timber.connections.XHalfLapJoint.sha256"]], "to_data() (compas_timber.connections.xhalflapjoint method)": [[112, "compas_timber.connections.XHalfLapJoint.to_data"]], "to_json() (compas_timber.connections.xhalflapjoint method)": [[113, "compas_timber.connections.XHalfLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.xhalflapjoint method)": [[114, "compas_timber.connections.XHalfLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.xhalflapjoint class method)": [[115, "compas_timber.connections.XHalfLapJoint.validate_data"]], "find_neighboring_beams() (in module compas_timber.connections)": [[116, "compas_timber.connections.find_neighboring_beams"]], "brepgeometryconsumer (class in compas_timber.consumers)": [[117, "compas_timber.consumers.BrepGeometryConsumer"]], "btlx (class in compas_timber.fabrication)": [[118, "compas_timber.fabrication.BTLx"]], "btlx_string() (compas_timber.fabrication.btlx method)": [[119, "compas_timber.fabrication.BTLx.btlx_string"]], "process_assembly() (compas_timber.fabrication.btlx method)": [[120, "compas_timber.fabrication.BTLx.process_assembly"]], "register_joint() (compas_timber.fabrication.btlx class method)": [[121, "compas_timber.fabrication.BTLx.register_joint"]], "btlxfrenchridgelap (class in compas_timber.fabrication)": [[122, "compas_timber.fabrication.BTLxFrenchRidgeLap"]], "create_process() (compas_timber.fabrication.btlxfrenchridgelap class method)": [[123, "compas_timber.fabrication.BTLxFrenchRidgeLap.create_process"]], "get_params() (compas_timber.fabrication.btlxfrenchridgelap method)": [[124, "compas_timber.fabrication.BTLxFrenchRidgeLap.get_params"]], "process_joints() (compas_timber.fabrication.btlxfrenchridgelap method)": [[125, "compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints"]], "btlxjackcut (class in compas_timber.fabrication)": [[126, "compas_timber.fabrication.BTLxJackCut"]], "create_process() (compas_timber.fabrication.btlxjackcut class method)": [[127, "compas_timber.fabrication.BTLxJackCut.create_process"]], "generate_process() (compas_timber.fabrication.btlxjackcut method)": [[128, "compas_timber.fabrication.BTLxJackCut.generate_process"]], "btlxprocess (class in compas_timber.fabrication)": [[129, "compas_timber.fabrication.BTLxProcess"]], "frenchridgefactory (class in compas_timber.fabrication)": [[130, "compas_timber.fabrication.FrenchRidgeFactory"]], "apply_processings() (compas_timber.fabrication.frenchridgefactory class method)": [[131, "compas_timber.fabrication.FrenchRidgeFactory.apply_processings"]], "lbuttfactory (class in compas_timber.fabrication)": [[132, "compas_timber.fabrication.LButtFactory"]], "apply_processings() (compas_timber.fabrication.lbuttfactory class method)": [[133, "compas_timber.fabrication.LButtFactory.apply_processings"]], "lmiterfactory (class in compas_timber.fabrication)": [[134, "compas_timber.fabrication.LMiterFactory"]], "apply_processings() (compas_timber.fabrication.lmiterfactory class method)": [[135, "compas_timber.fabrication.LMiterFactory.apply_processings"]], "tbuttfactory (class in compas_timber.fabrication)": [[136, "compas_timber.fabrication.TButtFactory"]], "apply_processings() (compas_timber.fabrication.tbuttfactory class method)": [[137, "compas_timber.fabrication.TButtFactory.apply_processings"]], "beam (class in compas_timber.parts)": [[138, "compas_timber.parts.Beam"]], "tostring() (compas_timber.parts.beam method)": [[139, "compas_timber.parts.Beam.ToString"]], "add_blank_extension() (compas_timber.parts.beam method)": [[140, "compas_timber.parts.Beam.add_blank_extension"]], "add_feature() (compas_timber.parts.beam method)": [[141, "compas_timber.parts.Beam.add_feature"]], "add_features() (compas_timber.parts.beam method)": [[142, "compas_timber.parts.Beam.add_features"]], "align_z() (compas_timber.parts.beam method)": [[143, "compas_timber.parts.Beam.align_z"]], "clear_features() (compas_timber.parts.beam method)": [[144, "compas_timber.parts.Beam.clear_features"]], "copy() (compas_timber.parts.beam method)": [[145, "compas_timber.parts.Beam.copy"]], "endpoint_closest_to_point() (compas_timber.parts.beam method)": [[146, "compas_timber.parts.Beam.endpoint_closest_to_point"]], "extension_to_plane() (compas_timber.parts.beam method)": [[147, "compas_timber.parts.Beam.extension_to_plane"]], "from_centerline() (compas_timber.parts.beam class method)": [[148, "compas_timber.parts.Beam.from_centerline"]], "from_data() (compas_timber.parts.beam class method)": [[149, "compas_timber.parts.Beam.from_data"]], "from_endpoints() (compas_timber.parts.beam class method)": [[150, "compas_timber.parts.Beam.from_endpoints"]], "from_json() (compas_timber.parts.beam class method)": [[151, "compas_timber.parts.Beam.from_json"]], "from_jsonstring() (compas_timber.parts.beam class method)": [[152, "compas_timber.parts.Beam.from_jsonstring"]], "get_geometry() (compas_timber.parts.beam method)": [[153, "compas_timber.parts.Beam.get_geometry"]], "remove_blank_extension() (compas_timber.parts.beam method)": [[154, "compas_timber.parts.Beam.remove_blank_extension"]], "remove_features() (compas_timber.parts.beam method)": [[155, "compas_timber.parts.Beam.remove_features"]], "sha256() (compas_timber.parts.beam method)": [[156, "compas_timber.parts.Beam.sha256"]], "to_data() (compas_timber.parts.beam method)": [[157, "compas_timber.parts.Beam.to_data"]], "to_json() (compas_timber.parts.beam method)": [[158, "compas_timber.parts.Beam.to_json"]], "to_jsonstring() (compas_timber.parts.beam method)": [[159, "compas_timber.parts.Beam.to_jsonstring"]], "transform() (compas_timber.parts.beam method)": [[160, "compas_timber.parts.Beam.transform"]], "transform_numpy() (compas_timber.parts.beam method)": [[161, "compas_timber.parts.Beam.transform_numpy"]], "transformed() (compas_timber.parts.beam method)": [[162, "compas_timber.parts.Beam.transformed"]], "transformed_numpy() (compas_timber.parts.beam method)": [[163, "compas_timber.parts.Beam.transformed_numpy"]], "validate_data() (compas_timber.parts.beam class method)": [[164, "compas_timber.parts.Beam.validate_data"]], "actor (class in compas_timber.planning)": [[165, "compas_timber.planning.Actor"]], "get_name() (compas_timber.planning.actor class method)": [[166, "compas_timber.planning.Actor.get_name"]], "buildingplan (class in compas_timber.planning)": [[167, "compas_timber.planning.BuildingPlan"]], "tostring() (compas_timber.planning.buildingplan method)": [[168, "compas_timber.planning.BuildingPlan.ToString"]], "add_step() (compas_timber.planning.buildingplan method)": [[169, "compas_timber.planning.BuildingPlan.add_step"]], "copy() (compas_timber.planning.buildingplan method)": [[170, "compas_timber.planning.BuildingPlan.copy"]], "from_data() (compas_timber.planning.buildingplan class method)": [[171, "compas_timber.planning.BuildingPlan.from_data"]], "from_json() (compas_timber.planning.buildingplan class method)": [[172, "compas_timber.planning.BuildingPlan.from_json"]], "from_jsonstring() (compas_timber.planning.buildingplan class method)": [[173, "compas_timber.planning.BuildingPlan.from_jsonstring"]], "sha256() (compas_timber.planning.buildingplan method)": [[174, "compas_timber.planning.BuildingPlan.sha256"]], "to_data() (compas_timber.planning.buildingplan method)": [[175, "compas_timber.planning.BuildingPlan.to_data"]], "to_json() (compas_timber.planning.buildingplan method)": [[176, "compas_timber.planning.BuildingPlan.to_json"]], "to_jsonstring() (compas_timber.planning.buildingplan method)": [[177, "compas_timber.planning.BuildingPlan.to_jsonstring"]], "validate_data() (compas_timber.planning.buildingplan class method)": [[178, "compas_timber.planning.BuildingPlan.validate_data"]], "simplesequencegenerator (class in compas_timber.planning)": [[179, "compas_timber.planning.SimpleSequenceGenerator"]], "step (class in compas_timber.planning)": [[180, "compas_timber.planning.Step"]], "tostring() (compas_timber.planning.step method)": [[181, "compas_timber.planning.Step.ToString"]], "copy() (compas_timber.planning.step method)": [[182, "compas_timber.planning.Step.copy"]], "from_data() (compas_timber.planning.step class method)": [[183, "compas_timber.planning.Step.from_data"]], "from_json() (compas_timber.planning.step class method)": [[184, "compas_timber.planning.Step.from_json"]], "from_jsonstring() (compas_timber.planning.step class method)": [[185, "compas_timber.planning.Step.from_jsonstring"]], "sha256() (compas_timber.planning.step method)": [[186, "compas_timber.planning.Step.sha256"]], "to_data() (compas_timber.planning.step method)": [[187, "compas_timber.planning.Step.to_data"]], "to_json() (compas_timber.planning.step method)": [[188, "compas_timber.planning.Step.to_json"]], "to_jsonstring() (compas_timber.planning.step method)": [[189, "compas_timber.planning.Step.to_jsonstring"]], "transform() (compas_timber.planning.step method)": [[190, "compas_timber.planning.Step.transform"]], "validate_data() (compas_timber.planning.step class method)": [[191, "compas_timber.planning.Step.validate_data"]], "find_neighboring_beams() (in module compas_timber.rhino)": [[192, "compas_timber.rhino.find_neighboring_beams"]]}})