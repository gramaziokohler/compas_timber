Search.setIndex({"docnames": ["api", "api/compas_timber.assembly", "api/compas_timber.connections", "api/compas_timber.consumers", "api/compas_timber.fabrication", "api/compas_timber.ghpython", "api/compas_timber.parts", "api/compas_timber.planning", "api/compas_timber.rhino", "api/generated/compas_timber.assembly.TimberAssembly", "api/generated/compas_timber.assembly.TimberAssembly.ToString", "api/generated/compas_timber.assembly.TimberAssembly.add_beam", "api/generated/compas_timber.assembly.TimberAssembly.add_connection", "api/generated/compas_timber.assembly.TimberAssembly.add_joint", "api/generated/compas_timber.assembly.TimberAssembly.add_part", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined", "api/generated/compas_timber.assembly.TimberAssembly.compute_aabb", "api/generated/compas_timber.assembly.TimberAssembly.compute_obb", "api/generated/compas_timber.assembly.TimberAssembly.connections", "api/generated/compas_timber.assembly.TimberAssembly.contains", "api/generated/compas_timber.assembly.TimberAssembly.copy", "api/generated/compas_timber.assembly.TimberAssembly.delete_connection", "api/generated/compas_timber.assembly.TimberAssembly.delete_part", "api/generated/compas_timber.assembly.TimberAssembly.find", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key", "api/generated/compas_timber.assembly.TimberAssembly.from_json", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.parts", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint", "api/generated/compas_timber.assembly.TimberAssembly.rotate", "api/generated/compas_timber.assembly.TimberAssembly.rotated", "api/generated/compas_timber.assembly.TimberAssembly.scale", "api/generated/compas_timber.assembly.TimberAssembly.scaled", "api/generated/compas_timber.assembly.TimberAssembly.set_topologies", "api/generated/compas_timber.assembly.TimberAssembly.sha256", "api/generated/compas_timber.assembly.TimberAssembly.to_json", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.transform", "api/generated/compas_timber.assembly.TimberAssembly.transform_numpy", "api/generated/compas_timber.assembly.TimberAssembly.transformed", "api/generated/compas_timber.assembly.TimberAssembly.transformed_numpy", "api/generated/compas_timber.assembly.TimberAssembly.translate", "api/generated/compas_timber.assembly.TimberAssembly.translated", "api/generated/compas_timber.assembly.TimberAssembly.validate_data", "api/generated/compas_timber.connections.BeamJoinningError", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.FrenchRidgeLapJoint", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.ToString", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_features", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.check_geometry", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.copy", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.create", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_json", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.sha256", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_json", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.validate_data", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.from_jsonstring", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.to_jsonstring", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.back_surface_main", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring", "api/generated/compas_timber.connections.LButtJoint.front_back_surface_main", "api/generated/compas_timber.connections.LButtJoint.get_cross_cutting_plane", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LButtJoint.get_main_cutting_plane", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.side_surfaces_cross", "api/generated/compas_timber.connections.LButtJoint.subtraction_volume", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LHalfLapJoint", "api/generated/compas_timber.connections.LHalfLapJoint.ToString", "api/generated/compas_timber.connections.LHalfLapJoint.add_features", "api/generated/compas_timber.connections.LHalfLapJoint.copy", "api/generated/compas_timber.connections.LHalfLapJoint.create", "api/generated/compas_timber.connections.LHalfLapJoint.from_json", "api/generated/compas_timber.connections.LHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LHalfLapJoint.sha256", "api/generated/compas_timber.connections.LHalfLapJoint.to_json", "api/generated/compas_timber.connections.LHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.LapJoint", "api/generated/compas_timber.connections.LapJoint.ToString", "api/generated/compas_timber.connections.LapJoint.add_features", "api/generated/compas_timber.connections.LapJoint.copy", "api/generated/compas_timber.connections.LapJoint.create", "api/generated/compas_timber.connections.LapJoint.from_json", "api/generated/compas_timber.connections.LapJoint.from_jsonstring", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LapJoint.sha256", "api/generated/compas_timber.connections.LapJoint.to_json", "api/generated/compas_timber.connections.LapJoint.to_jsonstring", "api/generated/compas_timber.connections.LapJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.back_surface_main", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring", "api/generated/compas_timber.connections.TButtJoint.front_back_surface_main", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TButtJoint.get_main_cutting_plane", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.side_surfaces_cross", "api/generated/compas_timber.connections.TButtJoint.subtraction_volume", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.THalfLapJoint", "api/generated/compas_timber.connections.THalfLapJoint.ToString", "api/generated/compas_timber.connections.THalfLapJoint.add_features", "api/generated/compas_timber.connections.THalfLapJoint.copy", "api/generated/compas_timber.connections.THalfLapJoint.create", "api/generated/compas_timber.connections.THalfLapJoint.from_json", "api/generated/compas_timber.connections.THalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.THalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.THalfLapJoint.sha256", "api/generated/compas_timber.connections.THalfLapJoint.to_json", "api/generated/compas_timber.connections.THalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.validate_data", "api/generated/compas_timber.connections.XHalfLapJoint", "api/generated/compas_timber.connections.XHalfLapJoint.ToString", "api/generated/compas_timber.connections.XHalfLapJoint.add_features", "api/generated/compas_timber.connections.XHalfLapJoint.copy", "api/generated/compas_timber.connections.XHalfLapJoint.create", "api/generated/compas_timber.connections.XHalfLapJoint.from_json", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.XHalfLapJoint.sha256", "api/generated/compas_timber.connections.XHalfLapJoint.to_json", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data", "api/generated/compas_timber.connections.find_neighboring_beams", "api/generated/compas_timber.consumers.BeamGeometry", "api/generated/compas_timber.consumers.BrepGeometryConsumer", "api/generated/compas_timber.consumers.CutFeature", "api/generated/compas_timber.consumers.CutFeature.ToString", "api/generated/compas_timber.consumers.CutFeature.copy", "api/generated/compas_timber.consumers.CutFeature.from_json", "api/generated/compas_timber.consumers.CutFeature.from_jsonstring", "api/generated/compas_timber.consumers.CutFeature.sha256", "api/generated/compas_timber.consumers.CutFeature.to_json", "api/generated/compas_timber.consumers.CutFeature.to_jsonstring", "api/generated/compas_timber.consumers.CutFeature.validate_data", "api/generated/compas_timber.consumers.CutFeatureGeometry", "api/generated/compas_timber.consumers.CutFeatureGeometry.apply", "api/generated/compas_timber.consumers.DrillFeature", "api/generated/compas_timber.consumers.DrillFeature.ToString", "api/generated/compas_timber.consumers.DrillFeature.copy", "api/generated/compas_timber.consumers.DrillFeature.from_json", "api/generated/compas_timber.consumers.DrillFeature.from_jsonstring", "api/generated/compas_timber.consumers.DrillFeature.sha256", "api/generated/compas_timber.consumers.DrillFeature.to_json", "api/generated/compas_timber.consumers.DrillFeature.to_jsonstring", "api/generated/compas_timber.consumers.DrillFeature.validate_data", "api/generated/compas_timber.consumers.DrillFeatureGeometry", "api/generated/compas_timber.consumers.DrillFeatureGeometry.apply", "api/generated/compas_timber.consumers.FeatureApplicationError", "api/generated/compas_timber.consumers.FeatureApplicator", "api/generated/compas_timber.consumers.FeatureApplicator.apply", "api/generated/compas_timber.consumers.MillVolume", "api/generated/compas_timber.consumers.MillVolume.ToString", "api/generated/compas_timber.consumers.MillVolume.copy", "api/generated/compas_timber.consumers.MillVolume.from_json", "api/generated/compas_timber.consumers.MillVolume.from_jsonstring", "api/generated/compas_timber.consumers.MillVolume.sha256", "api/generated/compas_timber.consumers.MillVolume.to_json", "api/generated/compas_timber.consumers.MillVolume.to_jsonstring", "api/generated/compas_timber.consumers.MillVolume.validate_data", "api/generated/compas_timber.consumers.MillVolumeGeometry", "api/generated/compas_timber.consumers.MillVolumeGeometry.apply", "api/generated/compas_timber.fabrication.BTLx", "api/generated/compas_timber.fabrication.BTLx.btlx_string", "api/generated/compas_timber.fabrication.BTLx.process_assembly", "api/generated/compas_timber.fabrication.BTLx.register_joint", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints", "api/generated/compas_timber.fabrication.BTLxJackCut", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process", "api/generated/compas_timber.fabrication.BTLxProcess", "api/generated/compas_timber.fabrication.FrenchRidgeFactory", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings", "api/generated/compas_timber.fabrication.LButtFactory", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings", "api/generated/compas_timber.fabrication.LMiterFactory", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings", "api/generated/compas_timber.fabrication.TButtFactory", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings", "api/generated/compas_timber.ghpython.CategoryRule", "api/generated/compas_timber.ghpython.CategoryRule.ToString", "api/generated/compas_timber.ghpython.CategoryRule.comply", "api/generated/compas_timber.ghpython.CategoryRule.reorder", "api/generated/compas_timber.ghpython.DebugInfomation", "api/generated/compas_timber.ghpython.DebugInfomation.ToString", "api/generated/compas_timber.ghpython.DebugInfomation.add_feature_error", "api/generated/compas_timber.ghpython.DebugInfomation.add_joint_error", "api/generated/compas_timber.ghpython.DirectRule", "api/generated/compas_timber.ghpython.DirectRule.ToString", "api/generated/compas_timber.ghpython.DirectRule.comply", "api/generated/compas_timber.ghpython.FeatureDefinition", "api/generated/compas_timber.ghpython.FeatureDefinition.ToString", "api/generated/compas_timber.ghpython.JointDefinition", "api/generated/compas_timber.ghpython.JointDefinition.ToString", "api/generated/compas_timber.ghpython.JointDefinition.is_identical", "api/generated/compas_timber.ghpython.JointDefinition.match", "api/generated/compas_timber.ghpython.TopologyRule", "api/generated/compas_timber.ghpython.TopologyRule.ToString", "api/generated/compas_timber.ghpython.TopologyRule.comply", "api/generated/compas_timber.parts.Beam", "api/generated/compas_timber.parts.Beam.ToString", "api/generated/compas_timber.parts.Beam.add_blank_extension", "api/generated/compas_timber.parts.Beam.add_feature", "api/generated/compas_timber.parts.Beam.add_features", "api/generated/compas_timber.parts.Beam.align_z", "api/generated/compas_timber.parts.Beam.clear_features", "api/generated/compas_timber.parts.Beam.compute_aabb", "api/generated/compas_timber.parts.Beam.compute_obb", "api/generated/compas_timber.parts.Beam.copy", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point", "api/generated/compas_timber.parts.Beam.extension_to_plane", "api/generated/compas_timber.parts.Beam.from_centerline", "api/generated/compas_timber.parts.Beam.from_endpoints", "api/generated/compas_timber.parts.Beam.from_json", "api/generated/compas_timber.parts.Beam.from_jsonstring", "api/generated/compas_timber.parts.Beam.get_geometry", "api/generated/compas_timber.parts.Beam.remove_blank_extension", "api/generated/compas_timber.parts.Beam.remove_features", "api/generated/compas_timber.parts.Beam.rotate", "api/generated/compas_timber.parts.Beam.rotated", "api/generated/compas_timber.parts.Beam.scale", "api/generated/compas_timber.parts.Beam.scaled", "api/generated/compas_timber.parts.Beam.sha256", "api/generated/compas_timber.parts.Beam.to_json", "api/generated/compas_timber.parts.Beam.to_jsonstring", "api/generated/compas_timber.parts.Beam.transform", "api/generated/compas_timber.parts.Beam.transform_numpy", "api/generated/compas_timber.parts.Beam.transformed", "api/generated/compas_timber.parts.Beam.transformed_numpy", "api/generated/compas_timber.parts.Beam.translate", "api/generated/compas_timber.parts.Beam.translated", "api/generated/compas_timber.parts.Beam.validate_data", "api/generated/compas_timber.planning.Actor", "api/generated/compas_timber.planning.Actor.get_name", "api/generated/compas_timber.planning.BuildingPlan", "api/generated/compas_timber.planning.BuildingPlan.ToString", "api/generated/compas_timber.planning.BuildingPlan.add_step", "api/generated/compas_timber.planning.BuildingPlan.copy", "api/generated/compas_timber.planning.BuildingPlan.from_json", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.sha256", "api/generated/compas_timber.planning.BuildingPlan.to_json", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.validate_data", "api/generated/compas_timber.planning.SimpleSequenceGenerator", "api/generated/compas_timber.planning.Step", "api/generated/compas_timber.planning.Step.ToString", "api/generated/compas_timber.planning.Step.copy", "api/generated/compas_timber.planning.Step.from_json", "api/generated/compas_timber.planning.Step.from_jsonstring", "api/generated/compas_timber.planning.Step.sha256", "api/generated/compas_timber.planning.Step.to_json", "api/generated/compas_timber.planning.Step.to_jsonstring", "api/generated/compas_timber.planning.Step.transform", "api/generated/compas_timber.planning.Step.validate_data", "api/generated/compas_timber.rhino.find_neighboring_beams", "citing", "examples", "examples/create_joint", "index", "installation", "license", "tutorials", "tutorials/BTLx_contribution_guide", "tutorials/grasshopper/assembly", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beam", "tutorials/grasshopper/examples", "tutorials/grasshopper/features", "tutorials/grasshopper/joints", "tutorials/grasshopper/rules", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "filenames": ["api.rst", "api/compas_timber.assembly.rst", "api/compas_timber.connections.rst", "api/compas_timber.consumers.rst", "api/compas_timber.fabrication.rst", "api/compas_timber.ghpython.rst", "api/compas_timber.parts.rst", "api/compas_timber.planning.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.assembly.TimberAssembly.rst", "api/generated/compas_timber.assembly.TimberAssembly.ToString.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_beam.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined.rst", "api/generated/compas_timber.assembly.TimberAssembly.compute_aabb.rst", "api/generated/compas_timber.assembly.TimberAssembly.compute_obb.rst", "api/generated/compas_timber.assembly.TimberAssembly.connections.rst", "api/generated/compas_timber.assembly.TimberAssembly.contains.rst", "api/generated/compas_timber.assembly.TimberAssembly.copy.rst", "api/generated/compas_timber.assembly.TimberAssembly.delete_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.delete_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.find.rst", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.parts.rst", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.rotate.rst", "api/generated/compas_timber.assembly.TimberAssembly.rotated.rst", "api/generated/compas_timber.assembly.TimberAssembly.scale.rst", "api/generated/compas_timber.assembly.TimberAssembly.scaled.rst", "api/generated/compas_timber.assembly.TimberAssembly.set_topologies.rst", "api/generated/compas_timber.assembly.TimberAssembly.sha256.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.transform.rst", "api/generated/compas_timber.assembly.TimberAssembly.transform_numpy.rst", "api/generated/compas_timber.assembly.TimberAssembly.transformed.rst", "api/generated/compas_timber.assembly.TimberAssembly.transformed_numpy.rst", "api/generated/compas_timber.assembly.TimberAssembly.translate.rst", "api/generated/compas_timber.assembly.TimberAssembly.translated.rst", "api/generated/compas_timber.assembly.TimberAssembly.validate_data.rst", "api/generated/compas_timber.connections.BeamJoinningError.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.ToString.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_features.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.check_geometry.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.copy.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.create.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_json.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.sha256.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_json.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.validate_data.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.from_json.rst", "api/generated/compas_timber.connections.Joint.from_jsonstring.rst", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_json.rst", "api/generated/compas_timber.connections.Joint.to_jsonstring.rst", "api/generated/compas_timber.connections.Joint.validate_data.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.back_surface_main.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.from_json.rst", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.front_back_surface_main.rst", "api/generated/compas_timber.connections.LButtJoint.get_cross_cutting_plane.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LButtJoint.get_main_cutting_plane.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.side_surfaces_cross.rst", "api/generated/compas_timber.connections.LButtJoint.subtraction_volume.rst", "api/generated/compas_timber.connections.LButtJoint.to_json.rst", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.validate_data.rst", "api/generated/compas_timber.connections.LHalfLapJoint.rst", "api/generated/compas_timber.connections.LHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.LHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.LHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.LHalfLapJoint.create.rst", "api/generated/compas_timber.connections.LHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.LHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.LHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.LHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.from_json.rst", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_json.rst", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_data.rst", "api/generated/compas_timber.connections.LapJoint.rst", "api/generated/compas_timber.connections.LapJoint.ToString.rst", "api/generated/compas_timber.connections.LapJoint.add_features.rst", "api/generated/compas_timber.connections.LapJoint.copy.rst", "api/generated/compas_timber.connections.LapJoint.create.rst", "api/generated/compas_timber.connections.LapJoint.from_json.rst", "api/generated/compas_timber.connections.LapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LapJoint.sha256.rst", "api/generated/compas_timber.connections.LapJoint.to_json.rst", "api/generated/compas_timber.connections.LapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.validate_data.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.back_surface_main.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.from_json.rst", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.front_back_surface_main.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TButtJoint.get_main_cutting_plane.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.side_surfaces_cross.rst", "api/generated/compas_timber.connections.TButtJoint.subtraction_volume.rst", "api/generated/compas_timber.connections.TButtJoint.to_json.rst", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.validate_data.rst", "api/generated/compas_timber.connections.THalfLapJoint.rst", "api/generated/compas_timber.connections.THalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.THalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.THalfLapJoint.copy.rst", "api/generated/compas_timber.connections.THalfLapJoint.create.rst", "api/generated/compas_timber.connections.THalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.THalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.THalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.THalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.THalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.THalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.THalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.rst", "api/generated/compas_timber.connections.XHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.XHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.XHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.XHalfLapJoint.create.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.XHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.find_neighboring_beams.rst", "api/generated/compas_timber.consumers.BeamGeometry.rst", "api/generated/compas_timber.consumers.BrepGeometryConsumer.rst", "api/generated/compas_timber.consumers.CutFeature.rst", "api/generated/compas_timber.consumers.CutFeature.ToString.rst", "api/generated/compas_timber.consumers.CutFeature.copy.rst", "api/generated/compas_timber.consumers.CutFeature.from_json.rst", "api/generated/compas_timber.consumers.CutFeature.from_jsonstring.rst", "api/generated/compas_timber.consumers.CutFeature.sha256.rst", "api/generated/compas_timber.consumers.CutFeature.to_json.rst", "api/generated/compas_timber.consumers.CutFeature.to_jsonstring.rst", "api/generated/compas_timber.consumers.CutFeature.validate_data.rst", "api/generated/compas_timber.consumers.CutFeatureGeometry.rst", "api/generated/compas_timber.consumers.CutFeatureGeometry.apply.rst", "api/generated/compas_timber.consumers.DrillFeature.rst", "api/generated/compas_timber.consumers.DrillFeature.ToString.rst", "api/generated/compas_timber.consumers.DrillFeature.copy.rst", "api/generated/compas_timber.consumers.DrillFeature.from_json.rst", "api/generated/compas_timber.consumers.DrillFeature.from_jsonstring.rst", "api/generated/compas_timber.consumers.DrillFeature.sha256.rst", "api/generated/compas_timber.consumers.DrillFeature.to_json.rst", "api/generated/compas_timber.consumers.DrillFeature.to_jsonstring.rst", "api/generated/compas_timber.consumers.DrillFeature.validate_data.rst", "api/generated/compas_timber.consumers.DrillFeatureGeometry.rst", "api/generated/compas_timber.consumers.DrillFeatureGeometry.apply.rst", "api/generated/compas_timber.consumers.FeatureApplicationError.rst", "api/generated/compas_timber.consumers.FeatureApplicator.rst", "api/generated/compas_timber.consumers.FeatureApplicator.apply.rst", "api/generated/compas_timber.consumers.MillVolume.rst", "api/generated/compas_timber.consumers.MillVolume.ToString.rst", "api/generated/compas_timber.consumers.MillVolume.copy.rst", "api/generated/compas_timber.consumers.MillVolume.from_json.rst", "api/generated/compas_timber.consumers.MillVolume.from_jsonstring.rst", "api/generated/compas_timber.consumers.MillVolume.sha256.rst", "api/generated/compas_timber.consumers.MillVolume.to_json.rst", "api/generated/compas_timber.consumers.MillVolume.to_jsonstring.rst", "api/generated/compas_timber.consumers.MillVolume.validate_data.rst", "api/generated/compas_timber.consumers.MillVolumeGeometry.rst", "api/generated/compas_timber.consumers.MillVolumeGeometry.apply.rst", "api/generated/compas_timber.fabrication.BTLx.rst", "api/generated/compas_timber.fabrication.BTLx.btlx_string.rst", "api/generated/compas_timber.fabrication.BTLx.process_assembly.rst", "api/generated/compas_timber.fabrication.BTLx.register_joint.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process.rst", "api/generated/compas_timber.fabrication.BTLxProcess.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LButtFactory.rst", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LMiterFactory.rst", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.TButtFactory.rst", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings.rst", "api/generated/compas_timber.ghpython.CategoryRule.rst", "api/generated/compas_timber.ghpython.CategoryRule.ToString.rst", "api/generated/compas_timber.ghpython.CategoryRule.comply.rst", "api/generated/compas_timber.ghpython.CategoryRule.reorder.rst", "api/generated/compas_timber.ghpython.DebugInfomation.rst", "api/generated/compas_timber.ghpython.DebugInfomation.ToString.rst", "api/generated/compas_timber.ghpython.DebugInfomation.add_feature_error.rst", "api/generated/compas_timber.ghpython.DebugInfomation.add_joint_error.rst", "api/generated/compas_timber.ghpython.DirectRule.rst", "api/generated/compas_timber.ghpython.DirectRule.ToString.rst", "api/generated/compas_timber.ghpython.DirectRule.comply.rst", "api/generated/compas_timber.ghpython.FeatureDefinition.rst", "api/generated/compas_timber.ghpython.FeatureDefinition.ToString.rst", "api/generated/compas_timber.ghpython.JointDefinition.rst", "api/generated/compas_timber.ghpython.JointDefinition.ToString.rst", "api/generated/compas_timber.ghpython.JointDefinition.is_identical.rst", "api/generated/compas_timber.ghpython.JointDefinition.match.rst", "api/generated/compas_timber.ghpython.TopologyRule.rst", "api/generated/compas_timber.ghpython.TopologyRule.ToString.rst", "api/generated/compas_timber.ghpython.TopologyRule.comply.rst", "api/generated/compas_timber.parts.Beam.rst", "api/generated/compas_timber.parts.Beam.ToString.rst", "api/generated/compas_timber.parts.Beam.add_blank_extension.rst", "api/generated/compas_timber.parts.Beam.add_feature.rst", "api/generated/compas_timber.parts.Beam.add_features.rst", "api/generated/compas_timber.parts.Beam.align_z.rst", "api/generated/compas_timber.parts.Beam.clear_features.rst", "api/generated/compas_timber.parts.Beam.compute_aabb.rst", "api/generated/compas_timber.parts.Beam.compute_obb.rst", "api/generated/compas_timber.parts.Beam.copy.rst", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.parts.Beam.extension_to_plane.rst", "api/generated/compas_timber.parts.Beam.from_centerline.rst", "api/generated/compas_timber.parts.Beam.from_endpoints.rst", "api/generated/compas_timber.parts.Beam.from_json.rst", "api/generated/compas_timber.parts.Beam.from_jsonstring.rst", "api/generated/compas_timber.parts.Beam.get_geometry.rst", "api/generated/compas_timber.parts.Beam.remove_blank_extension.rst", "api/generated/compas_timber.parts.Beam.remove_features.rst", "api/generated/compas_timber.parts.Beam.rotate.rst", "api/generated/compas_timber.parts.Beam.rotated.rst", "api/generated/compas_timber.parts.Beam.scale.rst", "api/generated/compas_timber.parts.Beam.scaled.rst", "api/generated/compas_timber.parts.Beam.sha256.rst", "api/generated/compas_timber.parts.Beam.to_json.rst", "api/generated/compas_timber.parts.Beam.to_jsonstring.rst", "api/generated/compas_timber.parts.Beam.transform.rst", "api/generated/compas_timber.parts.Beam.transform_numpy.rst", "api/generated/compas_timber.parts.Beam.transformed.rst", "api/generated/compas_timber.parts.Beam.transformed_numpy.rst", "api/generated/compas_timber.parts.Beam.translate.rst", "api/generated/compas_timber.parts.Beam.translated.rst", "api/generated/compas_timber.parts.Beam.validate_data.rst", "api/generated/compas_timber.planning.Actor.rst", "api/generated/compas_timber.planning.Actor.get_name.rst", "api/generated/compas_timber.planning.BuildingPlan.rst", "api/generated/compas_timber.planning.BuildingPlan.ToString.rst", "api/generated/compas_timber.planning.BuildingPlan.add_step.rst", "api/generated/compas_timber.planning.BuildingPlan.copy.rst", "api/generated/compas_timber.planning.BuildingPlan.from_json.rst", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.sha256.rst", "api/generated/compas_timber.planning.BuildingPlan.to_json.rst", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.validate_data.rst", "api/generated/compas_timber.planning.SimpleSequenceGenerator.rst", "api/generated/compas_timber.planning.Step.rst", "api/generated/compas_timber.planning.Step.ToString.rst", "api/generated/compas_timber.planning.Step.copy.rst", "api/generated/compas_timber.planning.Step.from_json.rst", "api/generated/compas_timber.planning.Step.from_jsonstring.rst", "api/generated/compas_timber.planning.Step.sha256.rst", "api/generated/compas_timber.planning.Step.to_json.rst", "api/generated/compas_timber.planning.Step.to_jsonstring.rst", "api/generated/compas_timber.planning.Step.transform.rst", "api/generated/compas_timber.planning.Step.validate_data.rst", "api/generated/compas_timber.rhino.find_neighboring_beams.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "license.rst", "tutorials.rst", "tutorials/BTLx_contribution_guide.rst", "tutorials/grasshopper/assembly.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beam.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joints.rst", "tutorials/grasshopper/rules.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "titles": ["API Reference", "compas_timber.assembly", "compas_timber.connections", "compas_timber.consumers", "compas_timber.fabrication", "compas_timber.ghpython", "compas_timber.parts", "compas_timber.planning", "rhino", "TimberAssembly", "TimberAssembly.ToString", "TimberAssembly.add_beam", "TimberAssembly.add_connection", "TimberAssembly.add_joint", "TimberAssembly.add_part", "TimberAssembly.are_parts_joined", "TimberAssembly.compute_aabb", "TimberAssembly.compute_obb", "TimberAssembly.connections", "TimberAssembly.contains", "TimberAssembly.copy", "TimberAssembly.delete_connection", "TimberAssembly.delete_part", "TimberAssembly.find", "TimberAssembly.find_by_key", "TimberAssembly.from_json", "TimberAssembly.from_jsonstring", "TimberAssembly.parts", "TimberAssembly.remove_joint", "TimberAssembly.rotate", "TimberAssembly.rotated", "TimberAssembly.scale", "TimberAssembly.scaled", "TimberAssembly.set_topologies", "TimberAssembly.sha256", "TimberAssembly.to_json", "TimberAssembly.to_jsonstring", "TimberAssembly.transform", "TimberAssembly.transform_numpy", "TimberAssembly.transformed", "TimberAssembly.transformed_numpy", "TimberAssembly.translate", "TimberAssembly.translated", "TimberAssembly.validate_data", "BeamJoinningError", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "FrenchRidgeLapJoint", "FrenchRidgeLapJoint.ToString", "FrenchRidgeLapJoint.add_features", "FrenchRidgeLapJoint.check_geometry", "FrenchRidgeLapJoint.copy", "FrenchRidgeLapJoint.create", "FrenchRidgeLapJoint.from_json", "FrenchRidgeLapJoint.from_jsonstring", "FrenchRidgeLapJoint.get_face_most_ortho_to_beam", "FrenchRidgeLapJoint.get_face_most_towards_beam", "FrenchRidgeLapJoint.restore_beams_from_keys", "FrenchRidgeLapJoint.sha256", "FrenchRidgeLapJoint.to_json", "FrenchRidgeLapJoint.to_jsonstring", "FrenchRidgeLapJoint.validate_data", "Joint", "Joint.ToString", "Joint.add_features", "Joint.copy", "Joint.create", "Joint.from_json", "Joint.from_jsonstring", "Joint.get_face_most_ortho_to_beam", "Joint.get_face_most_towards_beam", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_json", "Joint.to_jsonstring", "Joint.validate_data", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_features", "LButtJoint.back_surface_main", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.from_json", "LButtJoint.from_jsonstring", "LButtJoint.front_back_surface_main", "LButtJoint.get_cross_cutting_plane", "LButtJoint.get_face_most_ortho_to_beam", "LButtJoint.get_face_most_towards_beam", "LButtJoint.get_main_cutting_plane", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.side_surfaces_cross", "LButtJoint.subtraction_volume", "LButtJoint.to_json", "LButtJoint.to_jsonstring", "LButtJoint.validate_data", "LHalfLapJoint", "LHalfLapJoint.ToString", "LHalfLapJoint.add_features", "LHalfLapJoint.copy", "LHalfLapJoint.create", "LHalfLapJoint.from_json", "LHalfLapJoint.from_jsonstring", "LHalfLapJoint.get_cross_cutting_frame", "LHalfLapJoint.get_face_most_ortho_to_beam", "LHalfLapJoint.get_face_most_towards_beam", "LHalfLapJoint.get_main_cutting_frame", "LHalfLapJoint.restore_beams_from_keys", "LHalfLapJoint.sha256", "LHalfLapJoint.to_json", "LHalfLapJoint.to_jsonstring", "LHalfLapJoint.validate_data", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_features", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.from_json", "LMiterJoint.from_jsonstring", "LMiterJoint.get_cutting_planes", "LMiterJoint.get_face_most_ortho_to_beam", "LMiterJoint.get_face_most_towards_beam", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_json", "LMiterJoint.to_jsonstring", "LMiterJoint.validate_data", "LapJoint", "LapJoint.ToString", "LapJoint.add_features", "LapJoint.copy", "LapJoint.create", "LapJoint.from_json", "LapJoint.from_jsonstring", "LapJoint.get_cross_cutting_frame", "LapJoint.get_face_most_ortho_to_beam", "LapJoint.get_face_most_towards_beam", "LapJoint.get_main_cutting_frame", "LapJoint.restore_beams_from_keys", "LapJoint.sha256", "LapJoint.to_json", "LapJoint.to_jsonstring", "LapJoint.validate_data", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_features", "TButtJoint.back_surface_main", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.from_json", "TButtJoint.from_jsonstring", "TButtJoint.front_back_surface_main", "TButtJoint.get_face_most_ortho_to_beam", "TButtJoint.get_face_most_towards_beam", "TButtJoint.get_main_cutting_plane", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.side_surfaces_cross", "TButtJoint.subtraction_volume", "TButtJoint.to_json", "TButtJoint.to_jsonstring", "TButtJoint.validate_data", "THalfLapJoint", "THalfLapJoint.ToString", "THalfLapJoint.add_features", "THalfLapJoint.copy", "THalfLapJoint.create", "THalfLapJoint.from_json", "THalfLapJoint.from_jsonstring", "THalfLapJoint.get_cross_cutting_frame", "THalfLapJoint.get_face_most_ortho_to_beam", "THalfLapJoint.get_face_most_towards_beam", "THalfLapJoint.get_main_cutting_frame", "THalfLapJoint.restore_beams_from_keys", "THalfLapJoint.sha256", "THalfLapJoint.to_json", "THalfLapJoint.to_jsonstring", "THalfLapJoint.validate_data", "XHalfLapJoint", "XHalfLapJoint.ToString", "XHalfLapJoint.add_features", "XHalfLapJoint.copy", "XHalfLapJoint.create", "XHalfLapJoint.from_json", "XHalfLapJoint.from_jsonstring", "XHalfLapJoint.get_cross_cutting_frame", "XHalfLapJoint.get_face_most_ortho_to_beam", "XHalfLapJoint.get_face_most_towards_beam", "XHalfLapJoint.get_main_cutting_frame", "XHalfLapJoint.restore_beams_from_keys", "XHalfLapJoint.sha256", "XHalfLapJoint.to_json", "XHalfLapJoint.to_jsonstring", "XHalfLapJoint.validate_data", "find_neighboring_beams", "BeamGeometry", "BrepGeometryConsumer", "CutFeature", "CutFeature.ToString", "CutFeature.copy", "CutFeature.from_json", "CutFeature.from_jsonstring", "CutFeature.sha256", "CutFeature.to_json", "CutFeature.to_jsonstring", "CutFeature.validate_data", "CutFeatureGeometry", "CutFeatureGeometry.apply", "DrillFeature", "DrillFeature.ToString", "DrillFeature.copy", "DrillFeature.from_json", "DrillFeature.from_jsonstring", "DrillFeature.sha256", "DrillFeature.to_json", "DrillFeature.to_jsonstring", "DrillFeature.validate_data", "DrillFeatureGeometry", "DrillFeatureGeometry.apply", "FeatureApplicationError", "FeatureApplicator", "FeatureApplicator.apply", "MillVolume", "MillVolume.ToString", "MillVolume.copy", "MillVolume.from_json", "MillVolume.from_jsonstring", "MillVolume.sha256", "MillVolume.to_json", "MillVolume.to_jsonstring", "MillVolume.validate_data", "MillVolumeGeometry", "MillVolumeGeometry.apply", "BTLx", "BTLx.btlx_string", "BTLx.process_assembly", "BTLx.register_joint", "BTLxFrenchRidgeLap", "BTLxFrenchRidgeLap.create_process", "BTLxFrenchRidgeLap.get_params", "BTLxFrenchRidgeLap.process_joints", "BTLxJackCut", "BTLxJackCut.create_process", "BTLxJackCut.generate_process", "BTLxProcess", "FrenchRidgeFactory", "FrenchRidgeFactory.apply_processings", "LButtFactory", "LButtFactory.apply_processings", "LMiterFactory", "LMiterFactory.apply_processings", "TButtFactory", "TButtFactory.apply_processings", "CategoryRule", "CategoryRule.ToString", "CategoryRule.comply", "CategoryRule.reorder", "DebugInfomation", "DebugInfomation.ToString", "DebugInfomation.add_feature_error", "DebugInfomation.add_joint_error", "DirectRule", "DirectRule.ToString", "DirectRule.comply", "FeatureDefinition", "FeatureDefinition.ToString", "JointDefinition", "JointDefinition.ToString", "JointDefinition.is_identical", "JointDefinition.match", "TopologyRule", "TopologyRule.ToString", "TopologyRule.comply", "Beam", "Beam.ToString", "Beam.add_blank_extension", "Beam.add_feature", "Beam.add_features", "Beam.align_z", "Beam.clear_features", "Beam.compute_aabb", "Beam.compute_obb", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_endpoints", "Beam.from_json", "Beam.from_jsonstring", "Beam.get_geometry", "Beam.remove_blank_extension", "Beam.remove_features", "Beam.rotate", "Beam.rotated", "Beam.scale", "Beam.scaled", "Beam.sha256", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transform_numpy", "Beam.transformed", "Beam.transformed_numpy", "Beam.translate", "Beam.translated", "Beam.validate_data", "Actor", "Actor.get_name", "BuildingPlan", "BuildingPlan.ToString", "BuildingPlan.add_step", "BuildingPlan.copy", "BuildingPlan.from_json", "BuildingPlan.from_jsonstring", "BuildingPlan.sha256", "BuildingPlan.to_json", "BuildingPlan.to_jsonstring", "BuildingPlan.validate_data", "SimpleSequenceGenerator", "Step", "Step.ToString", "Step.copy", "Step.from_json", "Step.from_jsonstring", "Step.sha256", "Step.to_json", "Step.to_jsonstring", "Step.transform", "Step.validate_data", "find_neighboring_beams", "Citing", "Examples", "Create Joint", "COMPAS Timber Documentation", "Installation", "License", "Grasshopper plugin", "BTLx Contribution Guide", "Assembly", "Attributes", "Beam", "Examples", "Features", "Joints", "Joint Rules", "Show", "Utils", "Workflow"], "terms": {"compas_timb": [0, 9, 44, 45, 48, 53, 63, 67, 72, 77, 79, 84, 99, 103, 115, 119, 130, 134, 146, 151, 165, 169, 181, 185, 197, 198, 199, 200, 209, 210, 211, 220, 221, 222, 223, 225, 234, 235, 236, 239, 240, 244, 247, 248, 250, 252, 254, 256, 260, 264, 267, 269, 273, 276, 309, 311, 321, 322, 332, 333, 336, 337], "assembli": [0, 9, 11, 12, 13, 14, 19, 22, 23, 24, 27, 28, 48, 53, 58, 67, 72, 79, 84, 92, 99, 103, 110, 115, 119, 125, 130, 134, 141, 146, 151, 158, 165, 169, 176, 181, 185, 192, 199, 236, 238, 279, 309, 321, 335, 336, 339, 343, 345, 346, 347, 348, 350], "part": [0, 9, 12, 13, 14, 15, 18, 21, 22, 23, 24, 51, 72, 209, 220, 234, 236, 238, 240, 241, 244, 245, 249, 251, 253, 255, 276, 279, 292, 332, 336, 340, 343, 345], "connect": [0, 10, 12, 21, 44, 45, 48, 49, 53, 63, 64, 67, 72, 77, 79, 80, 84, 99, 100, 103, 115, 116, 119, 130, 131, 134, 146, 147, 151, 165, 166, 169, 181, 182, 185, 197, 201, 212, 226, 249, 251, 253, 255, 273, 277, 312, 323, 336, 338, 341, 346], "consum": [0, 198, 199, 200, 209, 210, 211, 220, 221, 222, 223, 225, 234, 235, 336], "fabric": [0, 236, 239, 240, 243, 244, 247, 248, 250, 252, 254, 333, 336], "plan": [0, 309, 311, 321, 322, 336], "ghpython": [0, 256, 260, 264, 267, 269, 273, 336, 339], "rhino": [0, 10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 197, 201, 212, 226, 277, 312, 323, 332, 334, 336, 337, 342, 343, 347, 349], "The": [8, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 74, 75, 76, 79, 83, 84, 85, 86, 89, 90, 96, 97, 98, 99, 102, 103, 104, 105, 107, 108, 112, 113, 114, 118, 119, 120, 121, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 138, 139, 143, 144, 145, 146, 150, 151, 152, 153, 155, 156, 162, 163, 164, 165, 168, 169, 170, 171, 173, 174, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236, 239, 240, 244, 247, 249, 251, 253, 255, 259, 273, 276, 278, 279, 280, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 314, 315, 316, 318, 319, 320, 324, 325, 326, 328, 329, 331, 332, 338, 339, 342, 343, 345, 346, 347, 349, 350], "modul": [8, 247, 336, 340], "contain": [8, 9, 25, 26, 44, 46, 48, 53, 54, 55, 56, 57, 67, 68, 69, 70, 71, 84, 85, 86, 89, 90, 103, 104, 105, 107, 108, 119, 120, 121, 123, 124, 134, 135, 136, 138, 139, 151, 152, 153, 155, 156, 169, 170, 171, 173, 174, 185, 186, 187, 189, 190, 197, 198, 203, 204, 214, 215, 221, 228, 229, 259, 260, 267, 269, 276, 290, 291, 311, 315, 316, 322, 325, 326, 332], "function": [8, 130, 197, 247, 339, 340, 346], "type": [8, 10, 20, 25, 26, 43, 47, 48, 49, 52, 54, 55, 62, 64, 66, 68, 69, 76, 79, 80, 83, 85, 86, 98, 99, 100, 102, 104, 105, 114, 115, 116, 118, 120, 121, 129, 130, 131, 133, 135, 136, 145, 146, 147, 150, 152, 153, 164, 165, 166, 168, 170, 171, 180, 181, 182, 184, 186, 187, 196, 199, 201, 202, 203, 204, 208, 212, 213, 214, 215, 219, 226, 227, 228, 229, 233, 239, 240, 243, 247, 269, 273, 277, 285, 290, 291, 292, 308, 309, 312, 314, 315, 316, 320, 322, 323, 324, 325, 326, 331, 336, 340, 341, 347, 350], "meant": 8, "us": [8, 10, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 59, 62, 63, 64, 73, 76, 78, 79, 80, 93, 98, 99, 100, 111, 114, 115, 116, 126, 129, 130, 131, 142, 145, 146, 147, 159, 164, 165, 166, 177, 180, 181, 182, 193, 196, 197, 201, 205, 208, 212, 216, 219, 226, 230, 233, 236, 243, 259, 277, 281, 287, 299, 302, 303, 304, 305, 306, 307, 308, 310, 312, 317, 320, 322, 323, 327, 331, 332, 333, 336, 338, 339, 340, 342, 343, 345, 346, 347, 349], "context": [8, 14], "class": [9, 10, 13, 19, 45, 48, 49, 63, 64, 77, 79, 80, 99, 100, 115, 116, 130, 131, 146, 147, 165, 166, 181, 182, 198, 199, 200, 201, 209, 211, 212, 220, 223, 225, 226, 234, 236, 239, 240, 244, 247, 248, 250, 252, 254, 256, 260, 264, 267, 269, 273, 276, 277, 309, 311, 312, 321, 322, 323, 336, 340], "sourc": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 342, 343], "base": [9, 29, 30, 44, 45, 48, 63, 77, 79, 99, 115, 130, 146, 165, 181, 198, 199, 200, 209, 211, 220, 222, 223, 225, 234, 236, 240, 244, 247, 248, 250, 252, 254, 256, 260, 264, 267, 269, 273, 276, 295, 296, 309, 311, 321, 322, 341, 348, 350], "repres": [9, 48, 79, 99, 115, 146, 165, 181, 236, 240, 244, 276, 309, 343], "timber": [9, 236, 244, 276, 333, 339, 343, 346, 350], "beam": [9, 11, 13, 44, 45, 46, 47, 48, 50, 53, 56, 57, 58, 63, 65, 67, 70, 71, 72, 79, 81, 84, 89, 90, 92, 99, 101, 103, 107, 108, 110, 115, 117, 119, 123, 124, 125, 130, 132, 134, 138, 139, 141, 146, 148, 151, 155, 156, 158, 165, 167, 169, 173, 174, 176, 181, 183, 185, 189, 190, 192, 197, 198, 199, 200, 209, 210, 211, 220, 221, 222, 224, 225, 234, 235, 240, 244, 256, 258, 259, 260, 264, 266, 267, 269, 272, 275, 332, 335, 336, 339, 341, 342, 345, 346, 347, 348, 349, 350], "joint": [9, 13, 15, 28, 44, 45, 48, 50, 53, 77, 79, 81, 84, 99, 101, 103, 115, 117, 119, 130, 132, 134, 146, 148, 151, 165, 167, 169, 181, 183, 185, 236, 239, 240, 241, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 264, 269, 273, 278, 293, 334, 336, 339, 340, 341, 343, 348, 350], "etc": [9, 236, 237, 276, 334, 336, 343], "attribut": [9, 12, 18, 44, 48, 63, 77, 79, 99, 115, 130, 146, 199, 222, 236, 240, 247, 256, 259, 260, 276, 321, 322, 336, 339, 340, 343], "list": [9, 13, 15, 44, 46, 48, 53, 63, 67, 84, 99, 103, 119, 134, 151, 169, 185, 197, 236, 247, 258, 260, 266, 275, 276, 280, 286, 294, 322, 332, 340, 347, 348], "A": [9, 23, 44, 46, 48, 53, 63, 67, 84, 99, 103, 119, 134, 151, 169, 185, 197, 198, 199, 225, 236, 249, 251, 253, 255, 259, 276, 288, 289, 333, 338, 343, 346], "assign": [9, 14, 23, 256, 273, 347, 349], "thi": [9, 10, 11, 19, 20, 23, 25, 26, 28, 30, 32, 39, 40, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 79, 80, 81, 83, 84, 85, 86, 89, 90, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 129, 131, 132, 133, 134, 135, 136, 138, 139, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 196, 197, 201, 202, 203, 204, 208, 212, 213, 214, 215, 219, 226, 227, 228, 229, 233, 240, 242, 243, 246, 247, 249, 251, 253, 255, 256, 258, 259, 266, 267, 269, 272, 273, 275, 276, 277, 278, 279, 285, 287, 290, 291, 293, 296, 298, 304, 305, 307, 308, 312, 314, 315, 316, 320, 322, 323, 324, 325, 326, 331, 332, 334, 338, 340, 342, 346, 350], "part_kei": 9, "int": [9, 11, 12, 13, 14, 18, 24, 78, 240, 278, 293, 310, 322], "kei": [9, 11, 14, 24, 63, 72, 99, 249, 251, 253, 255, 278, 293, 342], "includ": [9, 292, 338, 340], "beam_kei": 9, "joint_kei": [9, 278, 293], "topologi": [9, 33, 45, 47, 48, 53, 67, 77, 78, 79, 84, 99, 103, 115, 119, 134, 146, 151, 165, 169, 181, 185, 273, 341, 347, 350], "dict": [9, 12, 14, 18, 48, 63, 199, 236, 240, 243, 247, 249, 251, 253, 255, 273, 340], "jointtopologi": [9, 47, 273, 336], "i": [9, 14, 15, 18, 23, 25, 26, 43, 46, 47, 48, 51, 53, 54, 55, 56, 57, 62, 63, 67, 68, 69, 70, 71, 72, 76, 79, 81, 84, 85, 86, 89, 90, 98, 99, 103, 104, 105, 107, 108, 114, 115, 117, 119, 120, 121, 123, 124, 129, 130, 134, 135, 136, 138, 139, 145, 146, 148, 151, 152, 153, 155, 156, 164, 165, 169, 170, 171, 173, 174, 180, 181, 185, 186, 187, 189, 190, 196, 197, 203, 204, 208, 211, 214, 215, 219, 221, 228, 229, 233, 236, 240, 242, 243, 246, 273, 276, 278, 279, 286, 287, 290, 291, 308, 311, 315, 316, 320, 321, 325, 326, 331, 333, 336, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349], "detected_topo": 9, "beam_a_kei": 9, "beam_b_kei": 9, "see": [9, 72, 339, 341, 343, 344, 345, 347, 349, 350], "method": [9, 10, 45, 47, 48, 49, 51, 53, 63, 64, 67, 72, 77, 79, 80, 81, 84, 99, 100, 103, 115, 116, 117, 119, 130, 131, 134, 146, 147, 148, 151, 165, 166, 169, 181, 182, 185, 200, 201, 209, 211, 212, 220, 223, 225, 226, 234, 236, 240, 242, 244, 246, 248, 250, 252, 254, 256, 260, 264, 267, 269, 273, 276, 277, 309, 311, 312, 322, 323, 336, 340], "inherit": [9, 48, 63, 79, 99, 115, 130, 146, 165, 181, 200, 211, 225, 273, 276, 311, 322, 336, 340], "convert": [10, 35, 36, 49, 60, 61, 64, 74, 75, 80, 96, 97, 100, 112, 113, 116, 127, 128, 131, 143, 144, 147, 162, 163, 166, 178, 179, 182, 194, 195, 201, 206, 207, 212, 217, 218, 226, 231, 232, 277, 300, 301, 312, 318, 319, 323, 328, 329], "instanc": [10, 13, 25, 26, 48, 49, 53, 54, 55, 64, 67, 68, 69, 79, 80, 84, 85, 86, 99, 100, 103, 104, 105, 115, 116, 119, 120, 121, 130, 131, 134, 135, 136, 146, 147, 151, 152, 153, 165, 166, 169, 170, 171, 181, 182, 185, 186, 187, 201, 203, 204, 212, 214, 215, 226, 228, 229, 247, 258, 266, 275, 277, 290, 291, 312, 315, 316, 323, 325, 326, 334, 340], "string": [10, 26, 36, 44, 48, 49, 55, 61, 64, 69, 75, 78, 80, 86, 97, 99, 100, 105, 113, 116, 121, 128, 131, 136, 144, 147, 153, 163, 166, 171, 179, 182, 187, 195, 201, 204, 207, 212, 215, 218, 226, 229, 232, 236, 237, 277, 291, 301, 310, 312, 316, 319, 323, 326, 329, 342, 343, 347], "exist": [10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 277, 312, 323, 340], "net": [10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 277, 312, 323], "compat": [10, 48, 49, 64, 79, 80, 99, 100, 115, 116, 131, 146, 147, 165, 166, 181, 182, 197, 201, 212, 226, 277, 312, 323], "when": [10, 23, 46, 49, 64, 80, 81, 100, 116, 117, 131, 147, 148, 166, 182, 201, 212, 222, 226, 277, 278, 312, 323, 342, 346], "ironpython": [10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 277, 312, 323], "implicit": [10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 277, 312, 323], "convers": [10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 277, 312, 323], "usual": [10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 276, 277, 312, 323], "take": [10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 277, 312, 323, 340, 350], "place": [10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 277, 312, 323, 346], "cpython": [10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 277, 312, 323], "kick": [10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 277, 312, 323], "its": [10, 18, 23, 24, 35, 36, 49, 56, 57, 60, 61, 64, 70, 71, 74, 75, 80, 89, 90, 96, 97, 100, 107, 108, 112, 113, 116, 123, 124, 127, 128, 131, 138, 139, 143, 144, 147, 155, 156, 162, 163, 166, 173, 174, 178, 179, 182, 189, 190, 194, 195, 201, 206, 207, 212, 217, 218, 226, 231, 232, 239, 251, 255, 277, 288, 300, 301, 312, 318, 319, 323, 328, 329, 337, 342, 346], "default": [10, 14, 20, 29, 30, 31, 32, 35, 36, 49, 52, 60, 61, 64, 66, 74, 75, 79, 80, 83, 96, 97, 99, 100, 102, 112, 113, 116, 118, 127, 128, 130, 131, 133, 143, 144, 147, 150, 162, 163, 165, 166, 168, 178, 179, 181, 182, 184, 194, 195, 201, 202, 206, 207, 212, 213, 217, 218, 226, 227, 231, 232, 244, 277, 285, 288, 289, 295, 296, 297, 298, 300, 301, 312, 314, 318, 319, 323, 324, 328, 329, 336, 341, 343, 347, 349], "print": [10, 35, 36, 49, 60, 61, 64, 74, 75, 80, 96, 97, 100, 112, 113, 116, 127, 128, 131, 143, 144, 147, 162, 163, 166, 178, 179, 182, 194, 195, 201, 206, 207, 212, 217, 218, 226, 231, 232, 277, 300, 301, 312, 318, 319, 323, 328, 329], "self": [10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 247, 277, 312, 323, 340], "gettyp": [10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 277, 312, 323], "fullnam": [10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 277, 312, 323], "similar": [10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 277, 312, 323, 346], "overrid": [10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 277, 312, 323, 347], "object": [10, 13, 19, 20, 25, 26, 28, 35, 36, 43, 45, 46, 49, 52, 53, 54, 55, 60, 61, 62, 64, 66, 67, 68, 69, 72, 74, 75, 76, 77, 80, 83, 84, 85, 86, 96, 97, 98, 100, 102, 103, 104, 105, 112, 113, 114, 116, 118, 119, 120, 121, 127, 128, 129, 131, 133, 134, 135, 136, 143, 144, 145, 147, 150, 151, 152, 153, 162, 163, 164, 166, 168, 169, 170, 171, 178, 179, 180, 182, 184, 185, 186, 187, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 212, 213, 214, 215, 217, 218, 219, 223, 226, 227, 228, 229, 231, 232, 233, 236, 240, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 267, 269, 277, 285, 290, 291, 292, 300, 301, 308, 309, 312, 314, 315, 316, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 331, 336, 341, 342, 343, 349], "fix": [10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 277, 312, 323], "make": [10, 20, 49, 52, 64, 66, 80, 83, 100, 102, 116, 118, 131, 133, 147, 150, 166, 168, 182, 184, 201, 202, 212, 213, 226, 227, 277, 285, 312, 314, 323, 324], "grasshopp": [10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 277, 312, 323, 334, 336, 337, 343], "displai": [10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 277, 312, 323, 342, 348], "proper": [10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 277, 312, 323], "represent": [10, 35, 36, 48, 49, 60, 61, 64, 74, 75, 78, 80, 96, 97, 99, 100, 112, 113, 116, 127, 128, 131, 143, 144, 147, 162, 163, 166, 178, 179, 182, 194, 195, 201, 206, 207, 212, 217, 218, 226, 231, 232, 277, 300, 301, 310, 312, 318, 319, 323, 328, 329, 340], "ar": [10, 12, 23, 46, 47, 49, 51, 53, 56, 57, 64, 67, 70, 71, 72, 79, 80, 84, 89, 90, 100, 103, 107, 108, 116, 119, 123, 124, 131, 134, 138, 139, 147, 151, 155, 156, 166, 169, 173, 174, 182, 185, 189, 190, 197, 201, 212, 226, 247, 259, 272, 277, 312, 322, 323, 334, 340, 341, 342, 343, 345, 346, 347, 349, 350], "panel": [10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 277, 312, 323], "other": [10, 13, 49, 56, 57, 64, 70, 71, 80, 89, 90, 99, 100, 107, 108, 116, 123, 124, 130, 131, 138, 139, 147, 155, 156, 165, 166, 173, 174, 181, 182, 189, 190, 201, 212, 226, 240, 271, 277, 312, 323, 333, 338, 341, 346, 350], "output": [10, 47, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 277, 312, 323, 341, 343, 345, 346], "add": [11, 12, 13, 14, 21, 22, 50, 65, 81, 101, 117, 132, 148, 167, 183, 278, 279, 280, 339, 340, 341, 349], "paramet": [11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 83, 84, 85, 86, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 107, 108, 111, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 133, 134, 135, 136, 138, 139, 142, 143, 144, 145, 146, 150, 151, 152, 153, 155, 156, 159, 162, 163, 164, 165, 168, 169, 170, 171, 173, 174, 177, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 225, 227, 228, 229, 230, 231, 232, 233, 234, 236, 239, 240, 242, 243, 244, 246, 247, 249, 251, 253, 255, 258, 259, 266, 273, 275, 276, 279, 280, 281, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 331, 332, 340, 342, 349], "return": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 66, 67, 68, 69, 70, 71, 73, 75, 76, 78, 83, 84, 85, 86, 89, 90, 93, 97, 98, 102, 103, 104, 105, 107, 108, 111, 113, 114, 118, 119, 120, 121, 123, 124, 126, 128, 129, 133, 134, 135, 136, 138, 139, 142, 144, 145, 150, 151, 152, 153, 155, 156, 159, 163, 164, 168, 169, 170, 171, 173, 174, 177, 179, 180, 184, 185, 186, 187, 189, 190, 193, 195, 196, 197, 202, 203, 204, 205, 207, 208, 210, 213, 214, 215, 216, 218, 219, 221, 224, 227, 228, 229, 230, 232, 233, 235, 236, 237, 239, 243, 249, 251, 253, 255, 258, 259, 266, 272, 275, 279, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 310, 314, 315, 316, 317, 319, 320, 324, 325, 326, 327, 329, 331, 332, 341], "graph": [11, 13, 14], "identifi": [11, 12, 13, 14, 18, 23, 24, 63, 197], "ad": [11, 53, 63, 67, 84, 103, 119, 134, 151, 169, 185, 279, 280, 332, 347], "b": 12, "kwarg": [12, 14, 53, 67, 84, 103, 119, 134, 151, 169, 185, 273], "between": [12, 18, 21, 99, 115, 130, 165, 181, 342, 346, 347, 350], "two": [12, 21, 44, 47, 48, 53, 63, 67, 79, 84, 99, 103, 115, 119, 134, 151, 169, 185, 259, 264, 286, 346, 347], "compa": [12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 34, 41, 42, 52, 54, 55, 59, 66, 68, 69, 73, 83, 85, 86, 93, 102, 104, 105, 111, 118, 120, 121, 126, 133, 135, 136, 142, 150, 152, 153, 159, 168, 170, 171, 177, 184, 186, 187, 193, 200, 202, 203, 204, 205, 209, 210, 211, 213, 214, 215, 216, 220, 221, 224, 225, 227, 228, 229, 230, 234, 235, 276, 279, 283, 284, 285, 290, 291, 292, 295, 296, 299, 306, 307, 314, 315, 316, 317, 321, 322, 324, 325, 326, 327, 333, 339, 346], "datastructur": [12, 14, 16, 17, 21, 22, 23, 24, 27, 29, 31, 34, 39, 40, 41, 42, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 225, 230, 283, 284, 295, 297, 299, 304, 305, 306, 307, 317, 321, 327], "from": [12, 22, 25, 26, 28, 34, 47, 54, 55, 59, 68, 69, 73, 85, 86, 93, 104, 105, 111, 120, 121, 126, 135, 136, 142, 152, 153, 159, 170, 171, 177, 186, 187, 193, 203, 204, 205, 214, 215, 216, 228, 229, 230, 247, 288, 289, 290, 291, 293, 294, 299, 315, 316, 317, 325, 326, 327, 334, 336, 338, 339, 340, 342, 343, 345, 346, 347, 348], "str": [12, 14, 18, 23, 24, 25, 26, 34, 35, 36, 44, 48, 54, 55, 59, 60, 61, 63, 68, 69, 73, 74, 75, 78, 85, 86, 93, 96, 97, 99, 104, 105, 111, 112, 113, 120, 121, 126, 127, 128, 135, 136, 142, 143, 144, 152, 153, 159, 162, 163, 170, 171, 177, 178, 179, 186, 187, 193, 194, 195, 203, 204, 205, 206, 207, 214, 215, 216, 217, 218, 222, 228, 229, 230, 231, 232, 236, 240, 244, 247, 286, 290, 291, 299, 300, 301, 310, 315, 316, 317, 318, 319, 322, 325, 326, 327, 328, 329], "ani": [12, 14, 18, 43, 62, 76, 98, 114, 129, 145, 164, 180, 196, 208, 219, 233, 308, 320, 331, 334, 338, 345, 347], "option": [12, 14, 18, 20, 24, 29, 30, 31, 32, 34, 35, 36, 46, 47, 52, 56, 57, 59, 60, 61, 66, 70, 71, 73, 74, 75, 83, 89, 90, 93, 96, 97, 102, 107, 108, 111, 112, 113, 118, 123, 124, 126, 127, 128, 133, 138, 139, 142, 143, 144, 150, 155, 156, 159, 162, 163, 168, 173, 174, 177, 178, 179, 184, 189, 190, 193, 194, 195, 197, 198, 202, 205, 206, 207, 213, 216, 217, 218, 227, 230, 231, 232, 244, 285, 295, 296, 297, 298, 299, 300, 301, 314, 317, 318, 319, 324, 327, 328, 329, 343, 346, 350], "compil": [12, 337], "name": [12, 14, 244, 247, 340, 342, 348], "argument": [12, 273], "tupl": [12, 18, 47, 56, 57, 63, 70, 71, 89, 90, 107, 108, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190, 259, 276, 287], "node": 12, "rais": [12, 25, 26, 50, 53, 54, 55, 65, 67, 68, 69, 84, 85, 86, 101, 103, 104, 105, 119, 120, 121, 132, 134, 135, 136, 151, 152, 153, 167, 169, 170, 171, 183, 185, 186, 187, 203, 204, 210, 214, 215, 221, 222, 228, 229, 235, 290, 291, 315, 316, 325, 326], "assemblyerror": 12, "If": [12, 18, 25, 26, 34, 35, 36, 47, 54, 55, 56, 57, 59, 60, 61, 68, 69, 70, 71, 73, 74, 75, 79, 85, 86, 89, 90, 93, 96, 97, 99, 104, 105, 107, 108, 111, 112, 113, 120, 121, 123, 124, 126, 127, 128, 130, 135, 136, 138, 139, 142, 143, 144, 152, 153, 155, 156, 159, 162, 163, 165, 170, 171, 173, 174, 177, 178, 179, 181, 186, 187, 189, 190, 193, 194, 195, 203, 204, 205, 206, 207, 210, 214, 215, 216, 217, 218, 221, 228, 229, 230, 231, 232, 235, 279, 290, 291, 294, 299, 300, 301, 315, 316, 317, 318, 319, 325, 326, 327, 328, 329, 332, 333, 341, 343, 346], "an": [13, 14, 20, 25, 26, 35, 36, 43, 44, 46, 48, 52, 53, 54, 55, 60, 61, 62, 66, 67, 68, 69, 74, 75, 76, 79, 83, 84, 85, 86, 96, 97, 98, 99, 102, 103, 104, 105, 112, 113, 114, 115, 118, 119, 120, 121, 127, 128, 129, 130, 133, 134, 135, 136, 143, 144, 145, 146, 150, 151, 152, 153, 162, 163, 164, 165, 168, 169, 170, 171, 178, 179, 180, 181, 184, 185, 186, 187, 194, 195, 196, 198, 202, 203, 204, 206, 207, 208, 213, 214, 215, 217, 218, 219, 227, 228, 229, 231, 232, 233, 242, 246, 276, 285, 290, 291, 300, 301, 308, 309, 314, 315, 316, 318, 319, 320, 324, 325, 326, 328, 329, 331, 333, 334, 336, 337, 338, 339, 341, 342, 343, 346], "dowel": 13, "steel": 13, "plate": 13, "involv": [13, 253], "current": [13, 14, 20, 52, 66, 83, 102, 118, 133, 150, 168, 184, 202, 213, 227, 285, 314, 324, 336, 346], "none": [14, 20, 21, 22, 23, 24, 29, 30, 31, 32, 37, 38, 41, 46, 47, 52, 66, 83, 102, 118, 133, 150, 168, 184, 197, 202, 213, 227, 239, 244, 245, 249, 251, 253, 255, 278, 279, 282, 285, 288, 289, 294, 295, 296, 297, 298, 302, 303, 306, 314, 324, 332, 343], "note": [14, 197, 333], "uniqu": [14, 23, 63], "onli": [14, 72, 279, 342], "nest": 14, "mai": [14, 341, 342], "have": [14, 53, 67, 84, 103, 119, 134, 151, 169, 185, 247, 343], "same": [14, 15, 47, 79, 321, 322], "valu": [14, 78, 99, 130, 165, 181, 197, 276, 310, 342], "one": [14, 56, 57, 70, 71, 89, 90, 99, 107, 108, 123, 124, 130, 138, 139, 155, 156, 165, 173, 174, 181, 189, 190, 259, 280, 321, 322, 340, 343, 346], "which": [14, 44, 46, 47, 48, 51, 53, 56, 57, 67, 70, 71, 79, 84, 89, 90, 99, 103, 107, 108, 115, 119, 123, 124, 134, 138, 139, 146, 151, 155, 156, 165, 169, 173, 174, 181, 185, 189, 190, 197, 211, 240, 247, 267, 273, 278, 281, 286, 287, 293, 309, 311, 322, 340, 341, 343], "case": [14, 341], "automat": [14, 23, 81, 117, 148, 347, 349], "integ": 14, "addit": [14, 18, 46, 63, 339, 342, 343, 345], "collect": [14, 311, 332, 341], "check": [15, 51, 332, 336, 342], "alreadi": 15, "defin": [15, 50, 65, 101, 132, 167, 183, 240, 258, 266, 272, 275, 288, 342, 343, 346, 347, 349, 350], "set": [15, 46, 197, 332, 341, 342, 343], "bool": [15, 18, 19, 34, 35, 36, 46, 56, 57, 59, 60, 61, 70, 71, 73, 74, 75, 79, 89, 90, 93, 96, 97, 99, 107, 108, 111, 112, 113, 123, 124, 126, 127, 128, 130, 138, 139, 142, 143, 144, 155, 156, 159, 162, 163, 165, 173, 174, 177, 178, 179, 181, 189, 190, 193, 194, 195, 205, 206, 207, 216, 217, 218, 230, 231, 232, 240, 258, 266, 275, 279, 292, 299, 300, 301, 317, 318, 319, 322, 327, 328, 329], "comput": [16, 17, 34, 47, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 283, 284, 299, 317, 327], "axi": [16, 29, 30, 197, 276, 283, 288, 289, 295, 296, 343, 345, 349], "align": [16, 51, 197, 276, 281, 283, 339, 349], "bound": [16, 17, 197, 276, 283, 284, 332], "box": [16, 17, 197, 276, 283, 284, 322, 332, 339, 343], "geometri": [16, 17, 29, 30, 32, 41, 42, 44, 198, 199, 200, 209, 210, 211, 220, 221, 222, 224, 225, 234, 235, 276, 283, 284, 292, 295, 296, 298, 306, 307, 322, 332, 336, 339, 341, 343, 345, 346, 349, 350], "orient": [17, 240, 284, 288, 289, 349], "data": [18, 19, 20, 25, 26, 34, 35, 36, 37, 38, 39, 40, 43, 52, 54, 55, 59, 60, 61, 62, 63, 66, 68, 69, 73, 74, 75, 76, 83, 85, 86, 93, 96, 97, 98, 102, 104, 105, 111, 112, 113, 114, 118, 120, 121, 126, 127, 128, 129, 133, 135, 136, 142, 143, 144, 145, 150, 152, 153, 159, 162, 163, 164, 168, 170, 171, 177, 178, 179, 180, 184, 186, 187, 193, 194, 195, 196, 198, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 217, 218, 219, 227, 228, 229, 230, 231, 232, 233, 236, 285, 290, 291, 299, 300, 301, 302, 303, 304, 305, 308, 311, 314, 315, 316, 317, 318, 319, 320, 322, 324, 325, 326, 327, 328, 329, 331, 348], "fals": [18, 19, 34, 35, 36, 46, 59, 60, 61, 73, 74, 75, 79, 93, 96, 97, 111, 112, 113, 126, 127, 128, 142, 143, 144, 159, 162, 163, 177, 178, 179, 193, 194, 195, 205, 206, 207, 216, 217, 218, 230, 231, 232, 258, 266, 275, 279, 292, 299, 300, 301, 317, 318, 319, 327, 328, 329, 341], "iter": 18, "over": 18, "true": [18, 19, 34, 35, 36, 46, 56, 57, 59, 60, 61, 70, 71, 73, 74, 75, 79, 89, 90, 93, 96, 97, 99, 107, 108, 111, 112, 113, 123, 124, 126, 127, 128, 130, 138, 139, 142, 143, 144, 155, 156, 159, 162, 163, 165, 173, 174, 177, 178, 179, 181, 189, 190, 193, 194, 195, 205, 206, 207, 216, 217, 218, 230, 231, 232, 258, 266, 272, 275, 279, 287, 292, 299, 300, 301, 317, 318, 319, 327, 328, 329, 341, 343, 346], "yield": [18, 27, 199], "next": 18, "u": 18, "v": 18, "connector": 18, "attr": [18, 247], "obj": [19, 34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 299, 317, 322, 327], "given": [19, 46, 47, 53, 67, 78, 84, 103, 119, 134, 151, 169, 185, 197, 259, 273, 281, 286, 287, 289, 310, 342], "otherwis": [19, 47, 79, 258, 266, 275, 279, 338, 343], "look": 19, "cl": [20, 52, 66, 83, 102, 118, 133, 150, 168, 184, 202, 213, 227, 273, 285, 314, 324], "independ": [20, 52, 66, 83, 102, 118, 133, 150, 168, 184, 202, 213, 227, 285, 314, 324], "edg": [21, 346], "delet": 21, "remov": [22, 28, 278, 293, 294, 342, 345, 346], "guid": [23, 336, 339, 343, 347], "global": [23, 348], "creat": [23, 48, 51, 63, 79, 81, 99, 115, 117, 130, 146, 148, 165, 181, 239, 240, 248, 250, 252, 254, 264, 288, 289, 334, 336, 337, 339, 340, 341, 342, 343, 346, 350], "can": [23, 24, 43, 44, 62, 76, 98, 114, 129, 145, 164, 180, 196, 208, 219, 233, 247, 292, 308, 311, 320, 322, 331, 334, 339, 340, 343, 346, 347], "t": [23, 24, 130, 146, 165, 181, 254, 273, 347], "found": [23, 24, 340], "find": [24, 46, 197, 332, 343, 347], "classmethod": [25, 26, 43, 46, 53, 54, 55, 62, 67, 68, 69, 76, 78, 84, 85, 86, 98, 103, 104, 105, 114, 119, 120, 121, 129, 134, 135, 136, 145, 151, 152, 153, 164, 169, 170, 171, 180, 185, 186, 187, 196, 203, 204, 208, 214, 215, 219, 228, 229, 233, 239, 241, 245, 249, 251, 253, 255, 288, 289, 290, 291, 308, 310, 315, 316, 320, 325, 326, 331], "filepath": [25, 35, 54, 60, 68, 74, 85, 96, 104, 112, 120, 127, 135, 143, 152, 162, 170, 178, 186, 194, 203, 206, 214, 217, 228, 231, 290, 300, 315, 318, 325, 328], "construct": [25, 26, 43, 54, 55, 62, 68, 69, 76, 85, 86, 98, 104, 105, 114, 120, 121, 129, 135, 136, 145, 152, 153, 164, 170, 171, 180, 186, 187, 196, 203, 204, 208, 214, 215, 219, 228, 229, 233, 290, 291, 308, 315, 316, 320, 325, 326, 331, 336], "json": [25, 26, 35, 36, 54, 55, 60, 61, 68, 69, 74, 75, 85, 86, 96, 97, 104, 105, 112, 113, 120, 121, 127, 128, 135, 136, 143, 144, 152, 153, 162, 163, 170, 171, 178, 179, 186, 187, 194, 195, 203, 204, 206, 207, 214, 215, 217, 218, 228, 229, 231, 232, 290, 291, 300, 301, 315, 316, 318, 319, 325, 326, 328, 329], "file": [25, 35, 54, 60, 68, 74, 85, 96, 104, 112, 120, 127, 135, 143, 152, 162, 170, 178, 186, 194, 203, 206, 214, 217, 228, 231, 236, 290, 300, 315, 318, 325, 328, 338, 340, 344], "path": [25, 35, 54, 60, 68, 74, 85, 96, 104, 112, 120, 127, 135, 143, 152, 162, 170, 178, 186, 194, 203, 206, 214, 217, 228, 231, 290, 300, 315, 318, 325, 328], "ha": [25, 26, 44, 54, 55, 68, 69, 85, 86, 104, 105, 120, 121, 135, 136, 152, 153, 170, 171, 186, 187, 197, 203, 204, 214, 215, 228, 229, 290, 291, 315, 316, 322, 325, 326, 343, 349], "correct": [25, 26, 54, 55, 68, 69, 85, 86, 104, 105, 120, 121, 135, 136, 152, 153, 170, 171, 186, 187, 203, 204, 214, 215, 228, 229, 290, 291, 315, 316, 325, 326], "schema": [25, 26, 43, 54, 55, 62, 68, 69, 76, 85, 86, 98, 104, 105, 114, 120, 121, 129, 135, 136, 145, 152, 153, 164, 170, 171, 180, 186, 187, 196, 203, 204, 208, 214, 215, 219, 228, 229, 233, 290, 291, 308, 315, 316, 320, 325, 326, 331], "typeerror": [25, 26, 54, 55, 68, 69, 85, 86, 104, 105, 120, 121, 135, 136, 152, 153, 170, 171, 186, 187, 203, 204, 214, 215, 228, 229, 290, 291, 315, 316, 325, 326], "individu": [27, 247], "angl": [29, 30, 115, 240, 295, 296, 346], "point": [29, 30, 276, 286, 289, 295, 296, 336, 346, 349], "float": [29, 30, 31, 32, 46, 47, 99, 130, 165, 181, 197, 211, 240, 276, 278, 287, 288, 289, 295, 296, 297, 298, 332], "radian": [29, 30, 295, 296], "vector": [29, 30, 41, 42, 281, 288, 289, 295, 296, 306, 307, 336, 343], "z": [29, 30, 31, 32, 34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 276, 288, 289, 295, 296, 297, 298, 299, 317, 327, 343, 345, 349], "origin": [29, 30, 243, 276, 295, 296, 343, 349], "translat": [29, 30, 31, 32, 295, 296, 297, 298], "scale": [29, 30, 41, 42, 295, 296, 306, 307, 349], "transform": [29, 30, 31, 32, 38, 40, 41, 42, 292, 295, 296, 297, 298, 303, 305, 306, 307], "copi": [30, 32, 39, 40, 42, 292, 296, 298, 304, 305, 307, 338], "x": [31, 32, 130, 181, 273, 276, 297, 298, 343, 347, 349], "y": [31, 32, 276, 297, 298, 343, 349], "factor": [31, 32, 297, 298], "direct": [31, 32, 276, 287, 288, 289, 297, 298, 332, 343, 347, 350], "rotat": [31, 32, 41, 42, 297, 298, 306, 307, 343], "as_str": [34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 299, 317, 327], "hash": [34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 299, 317, 327], "comparison": [34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 299, 317, 327], "dure": [34, 59, 72, 73, 93, 111, 126, 142, 159, 177, 193, 198, 205, 216, 230, 260, 299, 317, 322, 327, 341], "version": [34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 299, 317, 327, 337, 346], "control": [34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 299, 317, 327, 346], "algorithm": [34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 197, 205, 216, 230, 299, 317, 327], "digest": [34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 299, 317, 327], "hexadecim": [34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 299, 317, 327], "format": [34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 236, 299, 317, 327, 342], "rather": [34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 299, 317, 327], "than": [34, 53, 59, 67, 73, 84, 93, 103, 111, 119, 126, 134, 142, 151, 159, 169, 177, 185, 193, 205, 216, 230, 299, 317, 327, 346], "byte": [34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 299, 317, 327], "exampl": [34, 59, 72, 73, 93, 111, 126, 142, 159, 177, 193, 197, 205, 216, 230, 299, 317, 327, 336, 339, 342, 343, 350], "import": [34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 299, 317, 327, 340, 350], "mesh": [34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 225, 230, 299, 317, 327, 335], "from_obj": [34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 299, 317, 327], "get": [34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 299, 317, 327, 337, 339], "face": [34, 48, 51, 56, 57, 59, 70, 71, 73, 79, 89, 90, 93, 107, 108, 111, 123, 124, 126, 138, 139, 142, 155, 156, 159, 173, 174, 177, 189, 190, 193, 205, 216, 230, 240, 276, 287, 299, 317, 327, 346, 348], "v1": [34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 299, 317, 327], "v2": [34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 299, 317, 327], "vertex_attribut": [34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 299, 317, 327], "vertex_sampl": [34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 299, 317, 327], "1": [34, 57, 59, 71, 73, 90, 93, 99, 108, 111, 124, 126, 130, 139, 142, 156, 159, 165, 174, 177, 181, 190, 193, 205, 216, 230, 276, 299, 317, 327, 335, 340, 343, 350], "0": [34, 56, 59, 70, 73, 89, 93, 99, 107, 111, 123, 126, 130, 138, 142, 155, 159, 165, 173, 177, 181, 189, 193, 205, 216, 230, 276, 299, 317, 327, 335, 337, 343], "v3": [34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 299, 317, 327], "pretti": [35, 36, 60, 61, 74, 75, 96, 97, 112, 113, 127, 128, 143, 144, 162, 163, 178, 179, 194, 195, 206, 207, 217, 218, 231, 232, 236, 237, 300, 301, 318, 319, 328, 329], "nativ": [35, 36, 60, 61, 74, 75, 96, 97, 112, 113, 127, 128, 143, 144, 162, 163, 178, 179, 194, 195, 206, 207, 217, 218, 231, 232, 300, 301, 318, 319, 328, 329], "save": [35, 36, 58, 60, 61, 74, 75, 92, 96, 97, 110, 112, 113, 125, 127, 128, 141, 143, 144, 158, 162, 163, 176, 178, 179, 192, 194, 195, 206, 207, 217, 218, 231, 232, 300, 301, 318, 319, 328, 329], "structur": [37, 38, 39, 40, 302, 303, 304, 305, 333, 336, 339, 341, 350], "valid": [43, 62, 76, 98, 114, 129, 145, 164, 180, 196, 208, 219, 233, 308, 320, 331], "against": [43, 62, 76, 98, 114, 129, 145, 164, 180, 196, 208, 219, 233, 308, 320, 331], "": [43, 48, 50, 56, 57, 62, 65, 70, 71, 76, 89, 90, 98, 99, 101, 107, 108, 114, 123, 124, 129, 132, 138, 139, 145, 155, 156, 164, 167, 173, 174, 180, 183, 189, 190, 196, 208, 219, 233, 276, 281, 286, 288, 289, 292, 308, 320, 331, 342, 343, 349], "raw": [43, 62, 76, 98, 114, 129, 145, 164, 180, 196, 208, 219, 233, 308, 320, 331, 343], "__from_data__": [43, 62, 76, 98, 114, 129, 145, 164, 180, 196, 208, 219, 233, 308, 320, 331], "except": [44, 222], "indic": [44, 48, 200, 240, 288, 289, 342, 343], "error": [44, 198, 222, 260, 262, 263, 341, 342], "occur": [44, 198, 260, 341], "while": [44, 346], "try": 44, "join": [44, 48, 53, 63, 67, 79, 84, 99, 103, 115, 119, 130, 134, 146, 151, 165, 169, 181, 185, 240, 260, 264, 269, 341], "more": [44, 280, 336, 339, 340, 343, 346], "should": [44, 50, 63, 65, 72, 99, 101, 130, 132, 165, 167, 181, 183, 197, 247, 267, 278, 292, 340], "calcul": [44, 50, 56, 57, 65, 70, 71, 89, 90, 101, 107, 108, 123, 124, 132, 138, 139, 155, 156, 167, 173, 174, 183, 189, 190], "featur": [44, 50, 63, 65, 81, 99, 101, 117, 132, 148, 167, 183, 198, 199, 200, 209, 210, 211, 220, 221, 222, 223, 224, 225, 234, 235, 260, 267, 276, 279, 280, 292, 294, 336, 339, 341, 343, 350], "appli": [44, 50, 65, 101, 132, 167, 183, 198, 199, 209, 220, 222, 234, 240, 247, 249, 251, 253, 255, 267, 273, 279, 340, 346, 347, 350], "were": [44, 47, 63, 342], "suppos": 44, "debug_geometri": 44, "visual": [44, 236, 237, 260, 311, 322, 334], "debug_info": [44, 198], "debug": [44, 198, 260, 341], "inform": [44, 198, 260, 336, 341, 349], "about": [44, 336], "wa": [44, 50, 65, 101, 132, 167, 183], "provid": [45, 258, 266, 275, 338, 339, 341, 343], "tool": [45, 336, 339, 348, 349], "detect": [45, 341], "intersect": [45, 46, 47, 210, 235], "rtree": [46, 332], "max_dist": [46, 47], "pair": [46, 47, 197, 332, 342], "r": [46, 197, 337], "tree": [46, 197], "search": [46, 197], "neighbor": [46, 197, 332], "distanc": [46, 47, 341, 346], "apart": 46, "non": 46, "touch": 46, "still": 46, "consid": [46, 47, 346], "neightbor": [46, 332], "beam_a": [47, 48, 56, 57, 70, 71, 89, 90, 107, 108, 115, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190], "beam_b": [47, 48, 56, 57, 70, 71, 89, 90, 107, 108, 115, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190], "tol": 47, "1e": 47, "06": 47, "within": [47, 272, 322, 343], "role": [47, 72, 259], "sensit": 47, "consist": 47, "specif": [47, 72, 247, 336, 340, 346, 347], "order": [47, 197, 243, 259, 321, 350], "e": [47, 72, 79, 334, 342, 346, 347, 349], "g": [47, 72, 334, 342], "main": [47, 72, 79, 92, 99, 110, 125, 130, 141, 146, 148, 158, 165, 176, 181, 192, 346], "first": [47, 115, 259, 286, 347, 350], "cross": [47, 72, 79, 92, 99, 110, 125, 130, 141, 146, 148, 158, 165, 176, 181, 192, 276, 288, 289, 343, 346], "second": [47, 115, 259, 286, 347], "thei": [47, 350], "input": [47, 197, 247, 339, 340, 341, 342, 343, 345, 346, 347], "gener": [47, 199, 238, 242, 246, 247, 321, 340, 343, 346, 350], "toler": [47, 341, 346], "mathemat": 47, "maximum": 47, "desigen": 47, "unit": [47, 197, 287], "french": [48, 51, 240, 248, 346], "ridg": [48, 51, 240, 248, 346], "lap": [48, 51, 99, 130, 165, 181, 240, 346], "end": [48, 56, 57, 63, 70, 71, 79, 89, 90, 99, 107, 108, 115, 123, 124, 138, 139, 146, 155, 156, 165, 173, 174, 181, 189, 190, 240, 276, 278, 286, 287, 289, 346], "l": [48, 79, 99, 115, 130, 250, 252, 253, 273, 347], "pleas": [48, 79, 99, 115, 130, 146, 165, 181, 333], "lbuttjoint": [48, 336], "properli": [48, 79, 99, 115, 130, 146, 165, 181], "associ": [48, 72, 79, 99, 115, 130, 146, 165, 181, 240, 251, 255, 322, 338], "timberassembli": [48, 335, 336], "top": [48, 58, 240, 339, 346], "bottom": [48, 58, 240, 346], "joint_typ": [48, 99, 239, 273], "reference_face_indic": 48, "dictionari": [48, 63, 236, 249, 251, 253, 255], "refer": [48, 51, 58, 72, 92, 110, 125, 141, 158, 176, 192, 240, 336, 339, 340, 342], "both": [48, 81, 117], "affect": [50, 65, 101, 132, 167, 183], "beamjoinningerror": [50, 65, 101, 132, 167, 183, 336], "whenev": [50, 65, 101, 132, 167, 183], "abl": [50, 65, 101, 132, 167, 183], "whether": [51, 322, 338], "necessari": [51, 337, 340], "determin": [51, 259, 346], "machin": [51, 340], "new": [53, 67, 84, 103, 119, 134, 151, 169, 185, 337, 340, 343], "expect": [53, 67, 84, 103, 119, 134, 151, 169, 185], "been": [53, 67, 84, 103, 119, 134, 151, 169, 185, 322], "befor": [53, 67, 84, 103, 119, 134, 151, 169, 185], "call": [53, 67, 72, 81, 84, 103, 117, 119, 134, 148, 151, 169, 185, 247, 279, 340, 343], "code": [53, 67, 84, 103, 119, 134, 151, 169, 185, 334, 336], "doe": [53, 67, 84, 103, 119, 134, 151, 169, 185, 210, 235, 340, 343], "verifi": [53, 67, 84, 103, 119, 134, 151, 169, 185, 287], "adjac": [53, 67, 84, 103, 119, 134, 151, 169, 185], "lie": [53, 67, 84, 103, 119, 134, 151, 169, 185], "allow": [53, 67, 84, 99, 103, 119, 130, 134, 151, 165, 169, 181, 185, 259, 260, 267, 269, 287, 322], "them": [53, 67, 84, 103, 115, 119, 134, 151, 169, 185, 247, 334, 340, 342, 346, 347], "respons": [53, 67, 84, 103, 119, 134, 151, 169, 185], "valueerror": [53, 67, 84, 103, 119, 134, 151, 169, 185], "less": [53, 67, 84, 103, 119, 134, 151, 169, 185, 276, 346], "assemebli": [53, 67, 84, 103, 119, 134, 151, 169, 185], "jo": [53, 67, 84, 103, 119, 134, 151, 169, 185], "belong": [53, 67, 84, 103, 119, 134, 151, 169, 185], "whould": [53, 67, 84, 103, 119, 134, 151, 169, 185], "togeth": [53, 67, 84, 103, 119, 134, 151, 169, 185, 343], "static": [56, 57, 70, 71, 89, 90, 107, 108, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190], "ignore_end": [56, 57, 70, 71, 89, 90, 107, 108, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190], "Of": [56, 57, 70, 71, 89, 90, 107, 108, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190], "all": [56, 57, 70, 71, 89, 90, 107, 108, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190, 243, 287, 292, 294, 332, 338, 342], "whose": [56, 57, 70, 71, 89, 90, 107, 108, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190], "normal": [56, 57, 70, 71, 89, 90, 107, 108, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190, 276], "most": [56, 57, 70, 71, 89, 90, 107, 108, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190], "orthogon": [56, 70, 89, 107, 123, 138, 155, 173, 189], "done": [56, 57, 70, 71, 89, 90, 107, 108, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190], "inner": [56, 57, 70, 71, 89, 90, 107, 108, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190, 346], "product": [56, 57, 70, 71, 89, 90, 107, 108, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190], "centerlin": [56, 57, 70, 71, 89, 90, 107, 108, 115, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190, 276, 286, 288, 289, 339, 342, 343, 349], "each": [56, 57, 63, 70, 71, 89, 90, 107, 108, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190, 247, 287, 311, 340, 342, 346, 347, 348], "result": [56, 57, 70, 71, 89, 90, 107, 108, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190, 198, 199, 210, 221, 224, 235, 286, 321, 343], "closest": [56, 57, 70, 71, 89, 90, 107, 108, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190], "chosen": [56, 57, 70, 71, 89, 90, 107, 108, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190], "attach": [56, 57, 70, 71, 89, 90, 107, 108, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190, 256], "ignor": [56, 57, 70, 71, 89, 90, 107, 108, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190], "face_index": [56, 57, 70, 71, 89, 90, 107, 108, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190], "frame": [56, 57, 63, 70, 71, 89, 90, 107, 108, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190, 200, 240, 244, 245, 276, 322, 335, 336, 339, 343, 350], "index": [56, 57, 70, 71, 89, 90, 107, 108, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190, 240, 336, 341, 348], "center": [56, 57, 70, 71, 89, 90, 107, 108, 123, 124, 138, 139, 155, 156, 173, 174, 189, 190, 333], "assemli": [58, 92, 110, 141, 158, 176, 192], "after": [58, 92, 110, 125, 141, 158, 176, 192, 198, 199, 210, 221, 224, 235], "de": [58, 72, 92, 110, 125, 141, 158, 176, 192], "serial": [58, 72, 92, 110, 125, 141, 158, 176, 192], "restor": [58, 72], "instanti": [63, 130, 247, 340], "directli": [63, 130, 264, 347], "respect": [63, 72], "implement": [63, 72, 332, 336, 346], "instead": [63, 343], "map": [63, 199, 339, 349], "ehich": 63, "To": [72, 337, 339, 340, 341, 350], "avoid": 72, "circular": 72, "store": [72, 342, 343], "sinc": 72, "concret": 72, "tbuttjoint": [72, 335, 336], "enumer": 77, "possibl": [77, 342], "topo_unknown": [77, 78], "topo_i": 77, "topo_l": [77, 78], "topo_t": [77, 78], "topo_x": [77, 78], "For": [78, 197, 310, 336, 341, 346, 349], "log": [78, 310], "One": [78, 310, 322, 346], "buttjoint": [79, 146], "butt": [79, 146, 250, 254, 346, 347], "trim": [79, 81, 99, 115, 117, 146, 148, 165, 181, 341, 345], "main_beam": [79, 99, 130, 146, 165, 181, 335], "cross_beam": [79, 99, 130, 146, 165, 181, 335], "small_beam_butt": 79, "smaller": [79, 276, 343], "section": [79, 276, 288, 289, 334, 339, 343, 346], "modify_cross": 79, "extend": [79, 278, 287, 346], "opposit": [79, 346], "cut": [79, 99, 130, 165, 181, 200, 210, 244, 339, 341, 343, 345, 346], "plane": [79, 115, 148, 200, 210, 211, 244, 287, 343, 345, 346, 349], "reject_i": 79, "reject": 79, "requir": [81, 117, 243, 247, 278, 293, 337], "extens": [81, 117, 278, 287, 293, 346], "resotr": [92, 110, 125, 141, 158, 176, 192], "lapjoint": [99, 165, 181, 336], "flip_lap_sid": [99, 130, 165, 181], "flip": [99, 130, 165, 181, 346], "side": [99, 130, 165, 181, 276, 345, 346], "cut_plane_bia": [99, 130, 165, 181], "shift": [99, 130, 165, 181, 346], "deeper": [99, 130, 165, 181], "without": [99, 130, 165, 181, 338, 343], "complet": [99, 130, 165, 181], "through": [99, 130, 165, 181, 287, 333, 347], "either": [99, 130, 165, 181, 286], "5": [99, 130, 165, 181, 276], "main_beam_kei": 99, "cross_beam_kei": 99, "miter": [115, 252, 253, 346, 347], "bisector": [115, 346], "abstract": [130, 341], "common": 130, "do": [130, 338, 340], "sub": 130, "along": [146, 165, 181, 276, 346], "length": [146, 165, 181, 211, 276, 288, 346], "anoth": [146, 165, 181], "inflate_bi": [197, 332], "aabb": [197, 276], "enlarg": 197, "amount": [197, 278, 287, 332], "element": [197, 247, 286, 321, 322], "design": [197, 333, 336, 339, 342, 343], "regard": 197, "inflat": [197, 332], "pluggabl": 197, "In": [197, 336, 337, 346, 350], "plugin": [197, 336], "avail": [197, 292], "process": [198, 199, 210, 221, 224, 235, 238, 240, 242, 243, 244, 246, 247, 249, 251, 253, 255, 336, 339, 340, 341, 350], "featureapplicationerror": [198, 210, 221, 235, 260, 336], "feature_map": 199, "featureappl": [199, 209, 220, 234, 336], "applic": [199, 223, 260], "beamgeometri": [199, 336], "made": [200, 211, 346], "cutting_plan": 200, "cutfeatur": [209, 336], "beam_geometri": [209, 220, 222, 234], "brep": [209, 210, 220, 221, 234, 235, 336, 341, 345, 349], "parametr": [211, 276, 336], "drill": [211, 221, 240, 345], "hole": [211, 240, 339, 345], "diamet": [211, 240, 345], "depth": [211, 335, 346], "drillfeatur": [220, 336], "volum": [221, 225, 235], "cannot": [222, 343], "feature_geometri": 222, "could": [222, 309], "modifi": [222, 338], "messag": 222, "mill": 225, "out": [225, 338], "polyhedron": 225, "millvolum": [234, 336], "histori": 236, "btlx_string": 236, "xml": [236, 237], "gh": [236, 237], "termin": [236, 237], "btlxpart": [236, 240, 244, 247, 249, 251, 253, 255, 340], "joint_factori": [239, 247, 340], "regist": 239, "correspond": [239, 276, 286, 342, 343, 347, 349], "factori": [239, 247, 248, 250, 252, 254, 340], "jointfactori": 239, "is_top": [240, 241], "flag": 240, "process_typ": [240, 247, 340], "frenchridgelap": 240, "other_beam": 240, "drill_hole_diamet": 240, "ref_face_index": 240, "ref_fac": 240, "surfac": [240, 340, 345, 346], "header_attribut": [240, 247, 340], "header": 240, "process_paramet": [240, 247], "geometr": [240, 243, 247, 336, 340, 341, 345], "btlx": [240, 247, 336, 339], "degre": 240, "intern": [242, 246], "properti": 243, "It": [243, 336, 339, 341, 342, 343, 346, 347, 349], "ordereddict": 243, "maintain": [243, 336], "jack": 244, "joint_nam": [244, 245], "append": [247, 340], "btlx_process": [247, 340], "eg": 247, "btlxjackcut": [247, 336], "match": [247, 340, 346], "describ": [247, 340], "deriv": [247, 340], "relat": [247, 260, 340], "some": [247, 339, 349], "combin": [247, 346, 347], "multipl": [247, 334, 340], "cover": 247, "register_joint": [247, 340], "so": [247, 338, 340], "typic": [247, 322, 340], "need": [247, 281, 340, 342, 350], "param": 247, "et_el": 247, "et": 247, "jointrul": [256, 264, 273], "categori": [256, 259, 342, 343, 346, 347, 350], "rule": [256, 258, 264, 266, 273, 275, 336, 339, 341, 343, 346, 350], "sort": 259, "accord": [259, 342, 346], "catergory_a": 259, "category_b": 259, "inspect": [260, 348], "beamjoiningerror": 260, "feature_error": 260, "joint_error": 260, "link": 267, "delai": [267, 269], "actual": [267, 269, 286], "downstream": [267, 269], "compon": [267, 269, 337, 341, 342, 343, 345, 346, 347], "shall": [269, 338], "k": 273, "topology_typ": 273, "constant": 273, "keyword": 273, "pass": [273, 287], "stud": [276, 343], "slat": 276, "rectangular": [276, 343], "local": [276, 343], "coordin": [276, 343], "system": [276, 343], "locat": [276, 322, 341, 343], "start": [276, 278, 286, 287, 289, 339, 343], "major": [276, 343], "also": [276, 279, 333, 336, 339, 342, 343, 346, 347], "fibr": [276, 339], "solid": [276, 341], "wood": 276, "width": [276, 288, 289, 335, 342, 343], "dimens": [276, 343], "height": [276, 288, 289, 335, 342, 343], "larger": [276, 343, 346], "shape": 276, "blank": [276, 278, 293, 343], "materi": [276, 343, 349], "stock": [276, 343], "produc": 276, "6": 276, "equal": 276, "posit": [276, 345], "2": [276, 335, 340, 350], "3": [276, 337, 340, 346, 350], "4": [276, 335, 340], "line": [276, 288, 336, 342, 343, 345, 347], "centerline_start": 276, "centerline_end": 276, "xmin": 276, "ymin": 276, "zmin": 276, "xmax": 276, "ymax": 276, "zmax": 276, "long_edg": 276, "long": [276, 287], "midpoint": 276, "middl": [276, 346], "well": [278, 347], "user": [279, 342], "must": 279, "apply_featur": 279, "z_axi": 281, "definit": [281, 340, 341], "todo": [281, 287], "Not": 281, "anywher": 281, "features_to_clear": 282, "endpoint": [286, 289], "closer": 286, "interest": 286, "depend": [286, 288, 289, 337, 340], "pln": 287, "metric": 287, "minimum": 287, "z_vector": [288, 289], "worldz": [288, 289], "worldx": [288, 289], "point_start": 289, "point_end": 289, "end_point": 289, "with_featur": 292, "drawn": [292, 343], "scene": 292, "enum": 309, "execut": [309, 322, 334], "instruct": [309, 311, 322], "human": [310, 322], "robot": [310, 322], "build": [311, 321, 322, 337, 350], "step": [311, 313, 321, 336, 340], "simpl": [321, 336, 339], "sequenc": [321, 336], "per": 321, "buildingplan": [321, 336], "assembl": 322, "singl": [322, 340, 347], "actor": [322, 336], "element_id": 322, "cad": [322, 334], "id": [322, 334], "elements_held": 322, "held": 322, "support": [322, 333, 334], "is_built": 322, "is_plan": 322, "increment": 322, "cylind": 322, "prioriti": [322, 347], "parallel": [322, 343, 346], "prior": 332, "research": [333, 336, 338], "project": [333, 336], "develop": [333, 336], "aleksandra": 333, "apolinarska": 333, "chen": 333, "kasir": 333, "gonzalo": 333, "casa": 333, "gramazio": [333, 336, 338], "kohler": [333, 336, 338], "eth": [333, 336], "zurich": [333, 336], "swiss": 333, "nation": 333, "scienc": 333, "foundat": 333, "compet": 333, "digit": 333, "nccr": 333, "dfab": 333, "programm": 333, "As": 333, "open": [333, 336], "mani": [333, 334, 336], "contributor": 333, "you": [333, 339, 350], "your": 333, "work": 333, "acknowledg": 333, "misc": 333, "titl": 333, "librari": [333, 334, 336, 339], "author": [333, 338], "anna": 333, "http": [333, 337, 340], "github": [333, 337], "com": [333, 337, 340], "gramaziokohl": 333, "year": 333, "2022": 333, "2023": 333, "doi": 333, "10": [333, 337], "5281": 333, "zenodo": 333, "7934267": 333, "url": 333, "present": [334, 346], "differ": [334, 340, 346, 347], "concept": [334, 339], "There": [334, 342, 346, 347, 350], "wai": 334, "run": [334, 336], "python": [334, 336, 337, 339], "environ": [334, 336, 337, 343], "interact": 334, "session": 334, "text": 334, "editor": 334, "sublim": 334, "studio": 334, "eclips": 334, "insid": 334, "blender": 334, "worldxi": 335, "geometry_typ": 335, "add_beam": 335, "packag": [336, 337, 340], "model": 336, "written": 336, "ecosystem": 336, "rhinocero": 336, "3d": 336, "plug": 336, "activ": [336, 337, 341, 343, 349], "being": 336, "continu": 336, "At": 336, "stage": 336, "encompass": 336, "fast": 336, "intuit": 336, "custom": [336, 342], "entiti": 336, "semant": 336, "futur": 336, "expand": 336, "entail": [336, 342], "interfac": 336, "analysi": 336, "softwar": [336, 338], "specialist": 336, "built": [336, 339], "upon": 336, "framework": 336, "basic": 336, "like": [336, 339, 341], "complex": [336, 346], "resolv": 336, "backend": 336, "rhinocommon": 336, "sdk": 336, "handl": 336, "opencascad": 336, "via": 336, "occ": 336, "introduct": 336, "instal": 336, "api": [336, 339], "connectionsolv": 336, "frenchridgelapjoint": 336, "lhalflapjoint": 336, "lmiterjoint": 336, "thalflapjoint": 336, "xhalflapjoint": 336, "find_neighboring_beam": 336, "brepgeometryconsum": 336, "cutfeaturegeometri": 336, "drillfeaturegeometri": 336, "millvolumegeometri": 336, "btlxprocess": [336, 340], "btlxfrenchridgelap": 336, "lbuttfactori": 336, "tbuttfactori": 336, "lmiterfactori": 336, "frenchridgefactori": 336, "simplesequencegener": 336, "jointdefinit": 336, "categoryrul": 336, "topologyrul": 336, "directrul": 336, "featuredefinit": 336, "debuginfom": 336, "workflow": [336, 339, 342, 343], "show": [336, 339, 341], "util": [336, 339], "contribut": [336, 339], "licens": 336, "cite": 336, "n": 337, "myenvnam": 337, "ye": 337, "7": 337, "m": 337, "compas_rhino": 337, "v7": 337, "latest": 337, "fork": 337, "repositori": 337, "clone": 337, "git": 337, "yourgithub_usernam": 337, "cd": 337, "edit": 337, "mode": 337, "pip": 337, "dev": 337, "txt": 337, "invok": 337, "ghuser": 337, "mit": 338, "copyright": 338, "c": 338, "2020": 338, "02": 338, "17": 338, "permiss": 338, "herebi": 338, "grant": 338, "free": 338, "charg": 338, "person": 338, "obtain": 338, "document": [338, 340, 342, 343, 349], "deal": 338, "restrict": 338, "limit": [338, 346], "right": 338, "merg": 338, "publish": 338, "distribut": 338, "sublicens": 338, "sell": 338, "permit": 338, "whom": 338, "furnish": 338, "subject": 338, "follow": [338, 339, 340, 343, 346], "condit": 338, "abov": [338, 346], "notic": 338, "substanti": 338, "portion": 338, "THE": 338, "AS": 338, "warranti": 338, "OF": 338, "kind": 338, "express": 338, "OR": 338, "impli": [338, 341], "BUT": 338, "NOT": 338, "TO": 338, "merchant": 338, "fit": 338, "FOR": 338, "particular": 338, "purpos": 338, "AND": 338, "noninfring": 338, "IN": 338, "NO": 338, "event": 338, "holder": 338, "BE": 338, "liabl": 338, "claim": 338, "damag": 338, "liabil": 338, "action": 338, "contract": 338, "tort": 338, "aris": 338, "WITH": 338, "easi": 339, "autom": 339, "bake": 339, "textur": [339, 349], "render": [339, 349], "boolean": [339, 341, 345], "style": 339, "planar": [339, 346], "might": 339, "componen": 339, "detail": 339, "overal": 339, "idea": 339, "how": [339, 346, 350], "Then": 339, "explain": 339, "requr": 340, "here": [340, 344, 349], "design2machin": 340, "btlx_2_1_0": 340, "pdf": 340, "process_param": 340, "where": [340, 343, 346, 347, 349], "btlxjoint": 340, "__init__": 340, "py": 340, "mind": 340, "compos": 341, "oper": [341, 345], "subtract": [341, 345], "computation": 341, "expens": 341, "disabl": 341, "creategeometri": 341, "jointsrul": 341, "maxdist": 341, "max": 341, "visualis": [341, 346], "debuginfo": 341, "showassembli": 341, "help": [341, 346], "spatial": 341, "showfeatureerror": [341, 348], "showjoiningerror": [341, 348], "group": 342, "intend": [342, 343], "hybrid": 342, "encod": 342, "concaten": 342, "colon": 342, "separ": 342, "entri": 342, "underscor": 342, "_": 342, "attr1nam": 342, "attr1value_attr2nam": 342, "attr2valu": 342, "four": [342, 346], "standard": 342, "zvector": [342, 343], "setstandardattribut": 342, "write": [342, 343], "readstandardattribut": 342, "read": 342, "checkstandardattribut": 342, "correctli": 342, "miss": 342, "retriev": 342, "later": [342, 343], "filter": 342, "criteria": 342, "These": 342, "deleteattribut": 342, "setcustomattribut": 342, "readallattribut": 342, "linear": 343, "straight": 343, "rafter": 343, "joist": 343, "linecurv": 343, "referenc": 343, "latter": 343, "around": 343, "li": [343, 349], "sai": 343, "perpendicular": 343, "world": 343, "vertic": [343, 346], "convent": 343, "updaterefobj": 343, "size": [343, 349], "onc": 343, "decomposebeam": 343, "extract": [343, 348], "centrelin": 343, "findbeambyrhinogeometri": 343, "curv": 343, "demo": 344, "brepsubtractionfeatur": 345, "brepdrillholefeatur": 345, "trimfeatur": 345, "ly": 345, "three": [346, 347, 350], "corner": 346, "meet": 346, "sever": 346, "half": 346, "shorten": 346, "clean": 346, "smallbeambutt": 346, "modifycross": 346, "flush": 346, "rejecti": 346, "upper": 346, "overlap": 346, "lower": [346, 347], "fliplapsid": 346, "cutplanebia": 346, "fulli": 346, "unlik": 346, "centr": 346, "keep": 346, "secur": 346, "prevent": 346, "tilt": 346, "sequenti": 346, "third": 346, "outer": 346, "cutoff": 346, "veri": 346, "acut": 346, "tip": 346, "beak": 346, "remain": 346, "unchang": 346, "gap": 346, "crate": 346, "halflap": [346, 347], "null": 346, "nulljoint": 346, "situat": 346, "summaris": 346, "final": [346, 350], "level": 347, "hereaft": 347, "lowest": 347, "highest": 347, "topolog": 347, "entir": 347, "recognis": 347, "jointopt": 347, "cata": 347, "catb": 347, "select": 347, "By": [347, 350], "mainbeam": 347, "secondarybeam": 347, "preview": 348, "showbeamfac": 348, "showbeamindex": 348, "showjointtyp": 348, "showtopologytyp": 348, "bakewithboxmap": 349, "layer": 349, "desir": 349, "random": 349, "deviat": 349, "mapsiz": 349, "serv": 349, "adjust": 349, "imag": 349, "ratio": 349, "bitmap": 349, "care": 350, "overwrit": 350}, "objects": {"compas_timber.assembly": [[9, 0, 1, "", "TimberAssembly"]], "compas_timber.assembly.TimberAssembly": [[10, 1, 1, "", "ToString"], [11, 1, 1, "", "add_beam"], [12, 1, 1, "", "add_connection"], [13, 1, 1, "", "add_joint"], [14, 1, 1, "", "add_part"], [15, 1, 1, "", "are_parts_joined"], [16, 1, 1, "", "compute_aabb"], [17, 1, 1, "", "compute_obb"], [18, 1, 1, "", "connections"], [19, 1, 1, "", "contains"], [20, 1, 1, "", "copy"], [21, 1, 1, "", "delete_connection"], [22, 1, 1, "", "delete_part"], [23, 1, 1, "", "find"], [24, 1, 1, "", "find_by_key"], [25, 1, 1, "", "from_json"], [26, 1, 1, "", "from_jsonstring"], [27, 1, 1, "", "parts"], [28, 1, 1, "", "remove_joint"], [29, 1, 1, "", "rotate"], [30, 1, 1, "", "rotated"], [31, 1, 1, "", "scale"], [32, 1, 1, "", "scaled"], [33, 1, 1, "", "set_topologies"], [34, 1, 1, "", "sha256"], [35, 1, 1, "", "to_json"], [36, 1, 1, "", "to_jsonstring"], [37, 1, 1, "", "transform"], [38, 1, 1, "", "transform_numpy"], [39, 1, 1, "", "transformed"], [40, 1, 1, "", "transformed_numpy"], [41, 1, 1, "", "translate"], [42, 1, 1, "", "translated"], [43, 1, 1, "", "validate_data"]], "compas_timber.connections": [[44, 2, 1, "", "BeamJoinningError"], [45, 0, 1, "", "ConnectionSolver"], [48, 0, 1, "", "FrenchRidgeLapJoint"], [63, 0, 1, "", "Joint"], [77, 0, 1, "", "JointTopology"], [79, 0, 1, "", "LButtJoint"], [99, 0, 1, "", "LHalfLapJoint"], [115, 0, 1, "", "LMiterJoint"], [130, 0, 1, "", "LapJoint"], [146, 0, 1, "", "TButtJoint"], [165, 0, 1, "", "THalfLapJoint"], [181, 0, 1, "", "XHalfLapJoint"], [197, 3, 1, "", "find_neighboring_beams"]], "compas_timber.connections.ConnectionSolver": [[46, 1, 1, "", "find_intersecting_pairs"], [47, 1, 1, "", "find_topology"]], "compas_timber.connections.FrenchRidgeLapJoint": [[49, 1, 1, "", "ToString"], [50, 1, 1, "", "add_features"], [51, 1, 1, "", "check_geometry"], [52, 1, 1, "", "copy"], [53, 1, 1, "", "create"], [54, 1, 1, "", "from_json"], [55, 1, 1, "", "from_jsonstring"], [56, 1, 1, "", "get_face_most_ortho_to_beam"], [57, 1, 1, "", "get_face_most_towards_beam"], [58, 1, 1, "", "restore_beams_from_keys"], [59, 1, 1, "", "sha256"], [60, 1, 1, "", "to_json"], [61, 1, 1, "", "to_jsonstring"], [62, 1, 1, "", "validate_data"]], "compas_timber.connections.Joint": [[64, 1, 1, "", "ToString"], [65, 1, 1, "", "add_features"], [66, 1, 1, "", "copy"], [67, 1, 1, "", "create"], [68, 1, 1, "", "from_json"], [69, 1, 1, "", "from_jsonstring"], [70, 1, 1, "", "get_face_most_ortho_to_beam"], [71, 1, 1, "", "get_face_most_towards_beam"], [72, 1, 1, "", "restore_beams_from_keys"], [73, 1, 1, "", "sha256"], [74, 1, 1, "", "to_json"], [75, 1, 1, "", "to_jsonstring"], [76, 1, 1, "", "validate_data"]], "compas_timber.connections.JointTopology": [[78, 1, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[80, 1, 1, "", "ToString"], [81, 1, 1, "", "add_features"], [82, 1, 1, "", "back_surface_main"], [83, 1, 1, "", "copy"], [84, 1, 1, "", "create"], [85, 1, 1, "", "from_json"], [86, 1, 1, "", "from_jsonstring"], [87, 1, 1, "", "front_back_surface_main"], [88, 1, 1, "", "get_cross_cutting_plane"], [89, 1, 1, "", "get_face_most_ortho_to_beam"], [90, 1, 1, "", "get_face_most_towards_beam"], [91, 1, 1, "", "get_main_cutting_plane"], [92, 1, 1, "", "restore_beams_from_keys"], [93, 1, 1, "", "sha256"], [94, 1, 1, "", "side_surfaces_cross"], [95, 1, 1, "", "subtraction_volume"], [96, 1, 1, "", "to_json"], [97, 1, 1, "", "to_jsonstring"], [98, 1, 1, "", "validate_data"]], "compas_timber.connections.LHalfLapJoint": [[100, 1, 1, "", "ToString"], [101, 1, 1, "", "add_features"], [102, 1, 1, "", "copy"], [103, 1, 1, "", "create"], [104, 1, 1, "", "from_json"], [105, 1, 1, "", "from_jsonstring"], [106, 1, 1, "", "get_cross_cutting_frame"], [107, 1, 1, "", "get_face_most_ortho_to_beam"], [108, 1, 1, "", "get_face_most_towards_beam"], [109, 1, 1, "", "get_main_cutting_frame"], [110, 1, 1, "", "restore_beams_from_keys"], [111, 1, 1, "", "sha256"], [112, 1, 1, "", "to_json"], [113, 1, 1, "", "to_jsonstring"], [114, 1, 1, "", "validate_data"]], "compas_timber.connections.LMiterJoint": [[116, 1, 1, "", "ToString"], [117, 1, 1, "", "add_features"], [118, 1, 1, "", "copy"], [119, 1, 1, "", "create"], [120, 1, 1, "", "from_json"], [121, 1, 1, "", "from_jsonstring"], [122, 1, 1, "", "get_cutting_planes"], [123, 1, 1, "", "get_face_most_ortho_to_beam"], [124, 1, 1, "", "get_face_most_towards_beam"], [125, 1, 1, "", "restore_beams_from_keys"], [126, 1, 1, "", "sha256"], [127, 1, 1, "", "to_json"], [128, 1, 1, "", "to_jsonstring"], [129, 1, 1, "", "validate_data"]], "compas_timber.connections.LapJoint": [[131, 1, 1, "", "ToString"], [132, 1, 1, "", "add_features"], [133, 1, 1, "", "copy"], [134, 1, 1, "", "create"], [135, 1, 1, "", "from_json"], [136, 1, 1, "", "from_jsonstring"], [137, 1, 1, "", "get_cross_cutting_frame"], [138, 1, 1, "", "get_face_most_ortho_to_beam"], [139, 1, 1, "", "get_face_most_towards_beam"], [140, 1, 1, "", "get_main_cutting_frame"], [141, 1, 1, "", "restore_beams_from_keys"], [142, 1, 1, "", "sha256"], [143, 1, 1, "", "to_json"], [144, 1, 1, "", "to_jsonstring"], [145, 1, 1, "", "validate_data"]], "compas_timber.connections.TButtJoint": [[147, 1, 1, "", "ToString"], [148, 1, 1, "", "add_features"], [149, 1, 1, "", "back_surface_main"], [150, 1, 1, "", "copy"], [151, 1, 1, "", "create"], [152, 1, 1, "", "from_json"], [153, 1, 1, "", "from_jsonstring"], [154, 1, 1, "", "front_back_surface_main"], [155, 1, 1, "", "get_face_most_ortho_to_beam"], [156, 1, 1, "", "get_face_most_towards_beam"], [157, 1, 1, "", "get_main_cutting_plane"], [158, 1, 1, "", "restore_beams_from_keys"], [159, 1, 1, "", "sha256"], [160, 1, 1, "", "side_surfaces_cross"], [161, 1, 1, "", "subtraction_volume"], [162, 1, 1, "", "to_json"], [163, 1, 1, "", "to_jsonstring"], [164, 1, 1, "", "validate_data"]], "compas_timber.connections.THalfLapJoint": [[166, 1, 1, "", "ToString"], [167, 1, 1, "", "add_features"], [168, 1, 1, "", "copy"], [169, 1, 1, "", "create"], [170, 1, 1, "", "from_json"], [171, 1, 1, "", "from_jsonstring"], [172, 1, 1, "", "get_cross_cutting_frame"], [173, 1, 1, "", "get_face_most_ortho_to_beam"], [174, 1, 1, "", "get_face_most_towards_beam"], [175, 1, 1, "", "get_main_cutting_frame"], [176, 1, 1, "", "restore_beams_from_keys"], [177, 1, 1, "", "sha256"], [178, 1, 1, "", "to_json"], [179, 1, 1, "", "to_jsonstring"], [180, 1, 1, "", "validate_data"]], "compas_timber.connections.XHalfLapJoint": [[182, 1, 1, "", "ToString"], [183, 1, 1, "", "add_features"], [184, 1, 1, "", "copy"], [185, 1, 1, "", "create"], [186, 1, 1, "", "from_json"], [187, 1, 1, "", "from_jsonstring"], [188, 1, 1, "", "get_cross_cutting_frame"], [189, 1, 1, "", "get_face_most_ortho_to_beam"], [190, 1, 1, "", "get_face_most_towards_beam"], [191, 1, 1, "", "get_main_cutting_frame"], [192, 1, 1, "", "restore_beams_from_keys"], [193, 1, 1, "", "sha256"], [194, 1, 1, "", "to_json"], [195, 1, 1, "", "to_jsonstring"], [196, 1, 1, "", "validate_data"]], "compas_timber.consumers": [[198, 0, 1, "", "BeamGeometry"], [199, 0, 1, "", "BrepGeometryConsumer"], [200, 0, 1, "", "CutFeature"], [209, 0, 1, "", "CutFeatureGeometry"], [211, 0, 1, "", "DrillFeature"], [220, 0, 1, "", "DrillFeatureGeometry"], [222, 2, 1, "", "FeatureApplicationError"], [223, 0, 1, "", "FeatureApplicator"], [225, 0, 1, "", "MillVolume"], [234, 0, 1, "", "MillVolumeGeometry"]], "compas_timber.consumers.CutFeature": [[201, 1, 1, "", "ToString"], [202, 1, 1, "", "copy"], [203, 1, 1, "", "from_json"], [204, 1, 1, "", "from_jsonstring"], [205, 1, 1, "", "sha256"], [206, 1, 1, "", "to_json"], [207, 1, 1, "", "to_jsonstring"], [208, 1, 1, "", "validate_data"]], "compas_timber.consumers.CutFeatureGeometry": [[210, 1, 1, "", "apply"]], "compas_timber.consumers.DrillFeature": [[212, 1, 1, "", "ToString"], [213, 1, 1, "", "copy"], [214, 1, 1, "", "from_json"], [215, 1, 1, "", "from_jsonstring"], [216, 1, 1, "", "sha256"], [217, 1, 1, "", "to_json"], [218, 1, 1, "", "to_jsonstring"], [219, 1, 1, "", "validate_data"]], "compas_timber.consumers.DrillFeatureGeometry": [[221, 1, 1, "", "apply"]], "compas_timber.consumers.FeatureApplicator": [[224, 1, 1, "", "apply"]], "compas_timber.consumers.MillVolume": [[226, 1, 1, "", "ToString"], [227, 1, 1, "", "copy"], [228, 1, 1, "", "from_json"], [229, 1, 1, "", "from_jsonstring"], [230, 1, 1, "", "sha256"], [231, 1, 1, "", "to_json"], [232, 1, 1, "", "to_jsonstring"], [233, 1, 1, "", "validate_data"]], "compas_timber.consumers.MillVolumeGeometry": [[235, 1, 1, "", "apply"]], "compas_timber.fabrication": [[236, 0, 1, "", "BTLx"], [240, 0, 1, "", "BTLxFrenchRidgeLap"], [244, 0, 1, "", "BTLxJackCut"], [247, 0, 1, "", "BTLxProcess"], [248, 0, 1, "", "FrenchRidgeFactory"], [250, 0, 1, "", "LButtFactory"], [252, 0, 1, "", "LMiterFactory"], [254, 0, 1, "", "TButtFactory"]], "compas_timber.fabrication.BTLx": [[237, 1, 1, "", "btlx_string"], [238, 1, 1, "", "process_assembly"], [239, 1, 1, "", "register_joint"]], "compas_timber.fabrication.BTLxFrenchRidgeLap": [[241, 1, 1, "", "create_process"], [242, 1, 1, "", "get_params"], [243, 1, 1, "", "process_joints"]], "compas_timber.fabrication.BTLxJackCut": [[245, 1, 1, "", "create_process"], [246, 1, 1, "", "generate_process"]], "compas_timber.fabrication.FrenchRidgeFactory": [[249, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.LButtFactory": [[251, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.LMiterFactory": [[253, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.TButtFactory": [[255, 1, 1, "", "apply_processings"]], "compas_timber.ghpython": [[256, 0, 1, "", "CategoryRule"], [260, 0, 1, "", "DebugInfomation"], [264, 0, 1, "", "DirectRule"], [267, 0, 1, "", "FeatureDefinition"], [269, 0, 1, "", "JointDefinition"], [273, 0, 1, "", "TopologyRule"]], "compas_timber.ghpython.CategoryRule": [[257, 1, 1, "", "ToString"], [258, 1, 1, "", "comply"], [259, 1, 1, "", "reorder"]], "compas_timber.ghpython.DebugInfomation": [[261, 1, 1, "", "ToString"], [262, 1, 1, "", "add_feature_error"], [263, 1, 1, "", "add_joint_error"]], "compas_timber.ghpython.DirectRule": [[265, 1, 1, "", "ToString"], [266, 1, 1, "", "comply"]], "compas_timber.ghpython.FeatureDefinition": [[268, 1, 1, "", "ToString"]], "compas_timber.ghpython.JointDefinition": [[270, 1, 1, "", "ToString"], [271, 1, 1, "", "is_identical"], [272, 1, 1, "", "match"]], "compas_timber.ghpython.TopologyRule": [[274, 1, 1, "", "ToString"], [275, 1, 1, "", "comply"]], "compas_timber.parts": [[276, 0, 1, "", "Beam"]], "compas_timber.parts.Beam": [[277, 1, 1, "", "ToString"], [278, 1, 1, "", "add_blank_extension"], [279, 1, 1, "", "add_feature"], [280, 1, 1, "", "add_features"], [281, 1, 1, "", "align_z"], [282, 1, 1, "", "clear_features"], [283, 1, 1, "", "compute_aabb"], [284, 1, 1, "", "compute_obb"], [285, 1, 1, "", "copy"], [286, 1, 1, "", "endpoint_closest_to_point"], [287, 1, 1, "", "extension_to_plane"], [288, 1, 1, "", "from_centerline"], [289, 1, 1, "", "from_endpoints"], [290, 1, 1, "", "from_json"], [291, 1, 1, "", "from_jsonstring"], [292, 1, 1, "", "get_geometry"], [293, 1, 1, "", "remove_blank_extension"], [294, 1, 1, "", "remove_features"], [295, 1, 1, "", "rotate"], [296, 1, 1, "", "rotated"], [297, 1, 1, "", "scale"], [298, 1, 1, "", "scaled"], [299, 1, 1, "", "sha256"], [300, 1, 1, "", "to_json"], [301, 1, 1, "", "to_jsonstring"], [302, 1, 1, "", "transform"], [303, 1, 1, "", "transform_numpy"], [304, 1, 1, "", "transformed"], [305, 1, 1, "", "transformed_numpy"], [306, 1, 1, "", "translate"], [307, 1, 1, "", "translated"], [308, 1, 1, "", "validate_data"]], "compas_timber.planning": [[309, 0, 1, "", "Actor"], [311, 0, 1, "", "BuildingPlan"], [321, 0, 1, "", "SimpleSequenceGenerator"], [322, 0, 1, "", "Step"]], "compas_timber.planning.Actor": [[310, 1, 1, "", "get_name"]], "compas_timber.planning.BuildingPlan": [[312, 1, 1, "", "ToString"], [313, 1, 1, "", "add_step"], [314, 1, 1, "", "copy"], [315, 1, 1, "", "from_json"], [316, 1, 1, "", "from_jsonstring"], [317, 1, 1, "", "sha256"], [318, 1, 1, "", "to_json"], [319, 1, 1, "", "to_jsonstring"], [320, 1, 1, "", "validate_data"]], "compas_timber.planning.Step": [[323, 1, 1, "", "ToString"], [324, 1, 1, "", "copy"], [325, 1, 1, "", "from_json"], [326, 1, 1, "", "from_jsonstring"], [327, 1, 1, "", "sha256"], [328, 1, 1, "", "to_json"], [329, 1, 1, "", "to_jsonstring"], [330, 1, 1, "", "transform"], [331, 1, 1, "", "validate_data"]], "compas_timber.rhino": [[332, 3, 1, "", "find_neighboring_beams"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:exception", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "exception", "Python exception"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "packag": 0, "compas_timb": [1, 2, 3, 4, 5, 6, 7], "assembli": [1, 334, 341], "class": [1, 2, 3, 4, 5, 6, 7], "connect": [2, 18], "function": 2, "except": 2, "consum": 3, "fabric": 4, "ghpython": 5, "part": [6, 27], "plan": 7, "rhino": 8, "plugin": [8, 339], "timberassembli": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "tostr": [10, 49, 64, 80, 100, 116, 131, 147, 166, 182, 201, 212, 226, 257, 261, 265, 268, 270, 274, 277, 312, 323], "add_beam": 11, "add_connect": 12, "add_joint": 13, "add_part": 14, "are_parts_join": 15, "compute_aabb": [16, 283], "compute_obb": [17, 284], "contain": 19, "copi": [20, 52, 66, 83, 102, 118, 133, 150, 168, 184, 202, 213, 227, 285, 314, 324], "delete_connect": 21, "delete_part": 22, "find": 23, "find_by_kei": 24, "from_json": [25, 54, 68, 85, 104, 120, 135, 152, 170, 186, 203, 214, 228, 290, 315, 325], "from_jsonstr": [26, 55, 69, 86, 105, 121, 136, 153, 171, 187, 204, 215, 229, 291, 316, 326], "remove_joint": 28, "rotat": [29, 30, 295, 296], "scale": [31, 32, 297, 298], "set_topologi": 33, "sha256": [34, 59, 73, 93, 111, 126, 142, 159, 177, 193, 205, 216, 230, 299, 317, 327], "to_json": [35, 60, 74, 96, 112, 127, 143, 162, 178, 194, 206, 217, 231, 300, 318, 328], "to_jsonstr": [36, 61, 75, 97, 113, 128, 144, 163, 179, 195, 207, 218, 232, 301, 319, 329], "transform": [37, 39, 302, 304, 330], "transform_numpi": [38, 303], "transformed_numpi": [40, 305], "translat": [41, 42, 306, 307], "validate_data": [43, 62, 76, 98, 114, 129, 145, 164, 180, 196, 208, 219, 233, 308, 320, 331], "beamjoinningerror": 44, "connectionsolv": [45, 46, 47], "find_intersecting_pair": 46, "find_topologi": 47, "frenchridgelapjoint": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "add_featur": [50, 65, 81, 101, 117, 132, 148, 167, 183, 279, 280], "check_geometri": 51, "creat": [53, 67, 84, 103, 119, 134, 151, 169, 185, 335], "get_face_most_ortho_to_beam": [56, 70, 89, 107, 123, 138, 155, 173, 189], "get_face_most_towards_beam": [57, 71, 90, 108, 124, 139, 156, 174, 190], "restore_beams_from_kei": [58, 72, 92, 110, 125, 141, 158, 176, 192], "joint": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 335, 346, 347], "jointtopologi": [77, 78], "get_nam": [78, 310], "lbuttjoint": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "back_surface_main": [82, 149], "front_back_surface_main": [87, 154], "get_cross_cutting_plan": 88, "get_main_cutting_plan": [91, 157], "side_surfaces_cross": [94, 160], "subtraction_volum": [95, 161], "lhalflapjoint": [99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "get_cross_cutting_fram": [106, 137, 172, 188], "get_main_cutting_fram": [109, 140, 175, 191], "lmiterjoint": [115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "get_cutting_plan": 122, "lapjoint": [130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "tbuttjoint": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "thalflapjoint": [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "xhalflapjoint": [181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "find_neighboring_beam": [197, 332], "beamgeometri": 198, "brepgeometryconsum": 199, "cutfeatur": [200, 201, 202, 203, 204, 205, 206, 207, 208], "cutfeaturegeometri": [209, 210], "appli": [210, 221, 224, 235], "drillfeatur": [211, 212, 213, 214, 215, 216, 217, 218, 219], "drillfeaturegeometri": [220, 221], "featureapplicationerror": 222, "featureappl": [223, 224], "millvolum": [225, 226, 227, 228, 229, 230, 231, 232, 233], "millvolumegeometri": [234, 235], "btlx": [236, 237, 238, 239, 340], "btlx_string": 237, "process_assembli": 238, "register_joint": 239, "btlxfrenchridgelap": [240, 241, 242, 243], "create_process": [241, 245], "get_param": 242, "process_joint": 243, "btlxjackcut": [244, 245, 246], "generate_process": 246, "btlxprocess": 247, "frenchridgefactori": [248, 249], "apply_process": [249, 251, 253, 255], "lbuttfactori": [250, 251], "lmiterfactori": [252, 253], "tbuttfactori": [254, 255], "categoryrul": [256, 257, 258, 259], "compli": [258, 266, 275], "reorder": 259, "debuginfom": [260, 261, 262, 263], "add_feature_error": 262, "add_joint_error": 263, "directrul": [264, 265, 266], "featuredefinit": [267, 268], "jointdefinit": [269, 270, 271, 272], "is_ident": 271, "match": 272, "topologyrul": [273, 274, 275], "beam": [276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 343], "add_blank_extens": 278, "align_z": 281, "clear_featur": 282, "endpoint_closest_to_point": 286, "extension_to_plan": 287, "from_centerlin": 288, "from_endpoint": 289, "get_geometri": 292, "remove_blank_extens": 293, "remove_featur": 294, "actor": [309, 310], "buildingplan": [311, 312, 313, 314, 315, 316, 317, 318, 319, 320], "add_step": 313, "simplesequencegener": 321, "step": [322, 323, 324, 325, 326, 327, 328, 329, 330, 331], "cite": 333, "exampl": [334, 344], "timber": [334, 336], "compa": 336, "document": 336, "depend": 336, "tabl": [336, 346], "content": 336, "indic": 336, "instal": 337, "stabl": 337, "conda": 337, "develop": 337, "licens": 338, "grasshopp": 339, "contribut": 340, "guid": 340, "attribut": 342, "featur": 345, "topologi": 346, "type": [346, 348], "l": 346, "t": 346, "x": 346, "summari": 346, "rule": 347, "show": 348, "visualis": 348, "geometri": 348, "error": 348, "util": 349, "bake": 349, "boxmap": 349, "workflow": 350}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Packages": [[0, "packages"]], "compas_timber.assembly": [[1, "compas-timber-assembly"]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [7, "classes"]], "compas_timber.connections": [[2, "compas-timber-connections"]], "Functions": [[2, "functions"]], "Exceptions": [[2, "exceptions"]], "compas_timber.consumers": [[3, "compas-timber-consumers"]], "compas_timber.fabrication": [[4, "compas-timber-fabrication"]], "compas_timber.ghpython": [[5, "compas-timber-ghpython"]], "compas_timber.parts": [[6, "compas-timber-parts"]], "compas_timber.planning": [[7, "compas-timber-planning"]], "rhino": [[8, "rhino"]], "Plugins": [[8, "plugins"]], "TimberAssembly": [[9, "timberassembly"]], "TimberAssembly.ToString": [[10, "timberassembly-tostring"]], "TimberAssembly.add_beam": [[11, "timberassembly-add-beam"]], "TimberAssembly.add_connection": [[12, "timberassembly-add-connection"]], "TimberAssembly.add_joint": [[13, "timberassembly-add-joint"]], "TimberAssembly.add_part": [[14, "timberassembly-add-part"]], "TimberAssembly.are_parts_joined": [[15, "timberassembly-are-parts-joined"]], "TimberAssembly.compute_aabb": [[16, "timberassembly-compute-aabb"]], "TimberAssembly.compute_obb": [[17, "timberassembly-compute-obb"]], "TimberAssembly.connections": [[18, "timberassembly-connections"]], "TimberAssembly.contains": [[19, "timberassembly-contains"]], "TimberAssembly.copy": [[20, "timberassembly-copy"]], "TimberAssembly.delete_connection": [[21, "timberassembly-delete-connection"]], "TimberAssembly.delete_part": [[22, "timberassembly-delete-part"]], "TimberAssembly.find": [[23, "timberassembly-find"]], "TimberAssembly.find_by_key": [[24, "timberassembly-find-by-key"]], "TimberAssembly.from_json": [[25, "timberassembly-from-json"]], "TimberAssembly.from_jsonstring": [[26, "timberassembly-from-jsonstring"]], "TimberAssembly.parts": [[27, "timberassembly-parts"]], "TimberAssembly.remove_joint": [[28, "timberassembly-remove-joint"]], "TimberAssembly.rotate": [[29, "timberassembly-rotate"]], "TimberAssembly.rotated": [[30, "timberassembly-rotated"]], "TimberAssembly.scale": [[31, "timberassembly-scale"]], "TimberAssembly.scaled": [[32, "timberassembly-scaled"]], "TimberAssembly.set_topologies": [[33, "timberassembly-set-topologies"]], "TimberAssembly.sha256": [[34, "timberassembly-sha256"]], "TimberAssembly.to_json": [[35, "timberassembly-to-json"]], "TimberAssembly.to_jsonstring": [[36, "timberassembly-to-jsonstring"]], "TimberAssembly.transform": [[37, "timberassembly-transform"]], "TimberAssembly.transform_numpy": [[38, "timberassembly-transform-numpy"]], "TimberAssembly.transformed": [[39, "timberassembly-transformed"]], "TimberAssembly.transformed_numpy": [[40, "timberassembly-transformed-numpy"]], "TimberAssembly.translate": [[41, "timberassembly-translate"]], "TimberAssembly.translated": [[42, "timberassembly-translated"]], "TimberAssembly.validate_data": [[43, "timberassembly-validate-data"]], "BeamJoinningError": [[44, "beamjoinningerror"]], "ConnectionSolver": [[45, "connectionsolver"]], "ConnectionSolver.find_intersecting_pairs": [[46, "connectionsolver-find-intersecting-pairs"]], "ConnectionSolver.find_topology": [[47, "connectionsolver-find-topology"]], "FrenchRidgeLapJoint": [[48, "frenchridgelapjoint"]], "FrenchRidgeLapJoint.ToString": [[49, "frenchridgelapjoint-tostring"]], "FrenchRidgeLapJoint.add_features": [[50, "frenchridgelapjoint-add-features"]], "FrenchRidgeLapJoint.check_geometry": [[51, "frenchridgelapjoint-check-geometry"]], "FrenchRidgeLapJoint.copy": [[52, "frenchridgelapjoint-copy"]], "FrenchRidgeLapJoint.create": [[53, "frenchridgelapjoint-create"]], "FrenchRidgeLapJoint.from_json": [[54, "frenchridgelapjoint-from-json"]], "FrenchRidgeLapJoint.from_jsonstring": [[55, "frenchridgelapjoint-from-jsonstring"]], "FrenchRidgeLapJoint.get_face_most_ortho_to_beam": [[56, "frenchridgelapjoint-get-face-most-ortho-to-beam"]], "FrenchRidgeLapJoint.get_face_most_towards_beam": [[57, "frenchridgelapjoint-get-face-most-towards-beam"]], "FrenchRidgeLapJoint.restore_beams_from_keys": [[58, "frenchridgelapjoint-restore-beams-from-keys"]], "FrenchRidgeLapJoint.sha256": [[59, "frenchridgelapjoint-sha256"]], "FrenchRidgeLapJoint.to_json": [[60, "frenchridgelapjoint-to-json"]], "FrenchRidgeLapJoint.to_jsonstring": [[61, "frenchridgelapjoint-to-jsonstring"]], "FrenchRidgeLapJoint.validate_data": [[62, "frenchridgelapjoint-validate-data"]], "Joint": [[63, "joint"]], "Joint.ToString": [[64, "joint-tostring"]], "Joint.add_features": [[65, "joint-add-features"]], "Joint.copy": [[66, "joint-copy"]], "Joint.create": [[67, "joint-create"]], "Joint.from_json": [[68, "joint-from-json"]], "Joint.from_jsonstring": [[69, "joint-from-jsonstring"]], "Joint.get_face_most_ortho_to_beam": [[70, "joint-get-face-most-ortho-to-beam"]], "Joint.get_face_most_towards_beam": [[71, "joint-get-face-most-towards-beam"]], "Joint.restore_beams_from_keys": [[72, "joint-restore-beams-from-keys"]], "Joint.sha256": [[73, "joint-sha256"]], "Joint.to_json": [[74, "joint-to-json"]], "Joint.to_jsonstring": [[75, "joint-to-jsonstring"]], "Joint.validate_data": [[76, "joint-validate-data"]], "JointTopology": [[77, "jointtopology"]], "JointTopology.get_name": [[78, "jointtopology-get-name"]], "LButtJoint": [[79, "lbuttjoint"]], "LButtJoint.ToString": [[80, "lbuttjoint-tostring"]], "LButtJoint.add_features": [[81, "lbuttjoint-add-features"]], "LButtJoint.back_surface_main": [[82, "lbuttjoint-back-surface-main"]], "LButtJoint.copy": [[83, "lbuttjoint-copy"]], "LButtJoint.create": [[84, "lbuttjoint-create"]], "LButtJoint.from_json": [[85, "lbuttjoint-from-json"]], "LButtJoint.from_jsonstring": [[86, "lbuttjoint-from-jsonstring"]], "LButtJoint.front_back_surface_main": [[87, "lbuttjoint-front-back-surface-main"]], "LButtJoint.get_cross_cutting_plane": [[88, "lbuttjoint-get-cross-cutting-plane"]], "LButtJoint.get_face_most_ortho_to_beam": [[89, "lbuttjoint-get-face-most-ortho-to-beam"]], "LButtJoint.get_face_most_towards_beam": [[90, "lbuttjoint-get-face-most-towards-beam"]], "LButtJoint.get_main_cutting_plane": [[91, "lbuttjoint-get-main-cutting-plane"]], "LButtJoint.restore_beams_from_keys": [[92, "lbuttjoint-restore-beams-from-keys"]], "LButtJoint.sha256": [[93, "lbuttjoint-sha256"]], "LButtJoint.side_surfaces_cross": [[94, "lbuttjoint-side-surfaces-cross"]], "LButtJoint.subtraction_volume": [[95, "lbuttjoint-subtraction-volume"]], "LButtJoint.to_json": [[96, "lbuttjoint-to-json"]], "LButtJoint.to_jsonstring": [[97, "lbuttjoint-to-jsonstring"]], "LButtJoint.validate_data": [[98, "lbuttjoint-validate-data"]], "LHalfLapJoint": [[99, "lhalflapjoint"]], "LHalfLapJoint.ToString": [[100, "lhalflapjoint-tostring"]], "LHalfLapJoint.add_features": [[101, "lhalflapjoint-add-features"]], "LHalfLapJoint.copy": [[102, "lhalflapjoint-copy"]], "LHalfLapJoint.create": [[103, "lhalflapjoint-create"]], "LHalfLapJoint.from_json": [[104, "lhalflapjoint-from-json"]], "LHalfLapJoint.from_jsonstring": [[105, "lhalflapjoint-from-jsonstring"]], "LHalfLapJoint.get_cross_cutting_frame": [[106, "lhalflapjoint-get-cross-cutting-frame"]], "LHalfLapJoint.get_face_most_ortho_to_beam": [[107, "lhalflapjoint-get-face-most-ortho-to-beam"]], "LHalfLapJoint.get_face_most_towards_beam": [[108, "lhalflapjoint-get-face-most-towards-beam"]], "LHalfLapJoint.get_main_cutting_frame": [[109, "lhalflapjoint-get-main-cutting-frame"]], "LHalfLapJoint.restore_beams_from_keys": [[110, "lhalflapjoint-restore-beams-from-keys"]], "LHalfLapJoint.sha256": [[111, "lhalflapjoint-sha256"]], "LHalfLapJoint.to_json": [[112, "lhalflapjoint-to-json"]], "LHalfLapJoint.to_jsonstring": [[113, "lhalflapjoint-to-jsonstring"]], "LHalfLapJoint.validate_data": [[114, "lhalflapjoint-validate-data"]], "LMiterJoint": [[115, "lmiterjoint"]], "LMiterJoint.ToString": [[116, "lmiterjoint-tostring"]], "LMiterJoint.add_features": [[117, "lmiterjoint-add-features"]], "LMiterJoint.copy": [[118, "lmiterjoint-copy"]], "LMiterJoint.create": [[119, "lmiterjoint-create"]], "LMiterJoint.from_json": [[120, "lmiterjoint-from-json"]], "LMiterJoint.from_jsonstring": [[121, "lmiterjoint-from-jsonstring"]], "LMiterJoint.get_cutting_planes": [[122, "lmiterjoint-get-cutting-planes"]], "LMiterJoint.get_face_most_ortho_to_beam": [[123, "lmiterjoint-get-face-most-ortho-to-beam"]], "LMiterJoint.get_face_most_towards_beam": [[124, "lmiterjoint-get-face-most-towards-beam"]], "LMiterJoint.restore_beams_from_keys": [[125, "lmiterjoint-restore-beams-from-keys"]], "LMiterJoint.sha256": [[126, "lmiterjoint-sha256"]], "LMiterJoint.to_json": [[127, "lmiterjoint-to-json"]], "LMiterJoint.to_jsonstring": [[128, "lmiterjoint-to-jsonstring"]], "LMiterJoint.validate_data": [[129, "lmiterjoint-validate-data"]], "LapJoint": [[130, "lapjoint"]], "LapJoint.ToString": [[131, "lapjoint-tostring"]], "LapJoint.add_features": [[132, "lapjoint-add-features"]], "LapJoint.copy": [[133, "lapjoint-copy"]], "LapJoint.create": [[134, "lapjoint-create"]], "LapJoint.from_json": [[135, "lapjoint-from-json"]], "LapJoint.from_jsonstring": [[136, "lapjoint-from-jsonstring"]], "LapJoint.get_cross_cutting_frame": [[137, "lapjoint-get-cross-cutting-frame"]], "LapJoint.get_face_most_ortho_to_beam": [[138, "lapjoint-get-face-most-ortho-to-beam"]], "LapJoint.get_face_most_towards_beam": [[139, "lapjoint-get-face-most-towards-beam"]], "LapJoint.get_main_cutting_frame": [[140, "lapjoint-get-main-cutting-frame"]], "LapJoint.restore_beams_from_keys": [[141, "lapjoint-restore-beams-from-keys"]], "LapJoint.sha256": [[142, "lapjoint-sha256"]], "LapJoint.to_json": [[143, "lapjoint-to-json"]], "LapJoint.to_jsonstring": [[144, "lapjoint-to-jsonstring"]], "LapJoint.validate_data": [[145, "lapjoint-validate-data"]], "TButtJoint": [[146, "tbuttjoint"]], "TButtJoint.ToString": [[147, "tbuttjoint-tostring"]], "TButtJoint.add_features": [[148, "tbuttjoint-add-features"]], "TButtJoint.back_surface_main": [[149, "tbuttjoint-back-surface-main"]], "TButtJoint.copy": [[150, "tbuttjoint-copy"]], "TButtJoint.create": [[151, "tbuttjoint-create"]], "TButtJoint.from_json": [[152, "tbuttjoint-from-json"]], "TButtJoint.from_jsonstring": [[153, "tbuttjoint-from-jsonstring"]], "TButtJoint.front_back_surface_main": [[154, "tbuttjoint-front-back-surface-main"]], "TButtJoint.get_face_most_ortho_to_beam": [[155, "tbuttjoint-get-face-most-ortho-to-beam"]], "TButtJoint.get_face_most_towards_beam": [[156, "tbuttjoint-get-face-most-towards-beam"]], "TButtJoint.get_main_cutting_plane": [[157, "tbuttjoint-get-main-cutting-plane"]], "TButtJoint.restore_beams_from_keys": [[158, "tbuttjoint-restore-beams-from-keys"]], "TButtJoint.sha256": [[159, "tbuttjoint-sha256"]], "TButtJoint.side_surfaces_cross": [[160, "tbuttjoint-side-surfaces-cross"]], "TButtJoint.subtraction_volume": [[161, "tbuttjoint-subtraction-volume"]], "TButtJoint.to_json": [[162, "tbuttjoint-to-json"]], "TButtJoint.to_jsonstring": [[163, "tbuttjoint-to-jsonstring"]], "TButtJoint.validate_data": [[164, "tbuttjoint-validate-data"]], "THalfLapJoint": [[165, "thalflapjoint"]], "THalfLapJoint.ToString": [[166, "thalflapjoint-tostring"]], "THalfLapJoint.add_features": [[167, "thalflapjoint-add-features"]], "THalfLapJoint.copy": [[168, "thalflapjoint-copy"]], "THalfLapJoint.create": [[169, "thalflapjoint-create"]], "THalfLapJoint.from_json": [[170, "thalflapjoint-from-json"]], "THalfLapJoint.from_jsonstring": [[171, "thalflapjoint-from-jsonstring"]], "THalfLapJoint.get_cross_cutting_frame": [[172, "thalflapjoint-get-cross-cutting-frame"]], "THalfLapJoint.get_face_most_ortho_to_beam": [[173, "thalflapjoint-get-face-most-ortho-to-beam"]], "THalfLapJoint.get_face_most_towards_beam": [[174, "thalflapjoint-get-face-most-towards-beam"]], "THalfLapJoint.get_main_cutting_frame": [[175, "thalflapjoint-get-main-cutting-frame"]], "THalfLapJoint.restore_beams_from_keys": [[176, "thalflapjoint-restore-beams-from-keys"]], "THalfLapJoint.sha256": [[177, "thalflapjoint-sha256"]], "THalfLapJoint.to_json": [[178, "thalflapjoint-to-json"]], "THalfLapJoint.to_jsonstring": [[179, "thalflapjoint-to-jsonstring"]], "THalfLapJoint.validate_data": [[180, "thalflapjoint-validate-data"]], "XHalfLapJoint": [[181, "xhalflapjoint"]], "XHalfLapJoint.ToString": [[182, "xhalflapjoint-tostring"]], "XHalfLapJoint.add_features": [[183, "xhalflapjoint-add-features"]], "XHalfLapJoint.copy": [[184, "xhalflapjoint-copy"]], "XHalfLapJoint.create": [[185, "xhalflapjoint-create"]], "XHalfLapJoint.from_json": [[186, "xhalflapjoint-from-json"]], "XHalfLapJoint.from_jsonstring": [[187, "xhalflapjoint-from-jsonstring"]], "XHalfLapJoint.get_cross_cutting_frame": [[188, "xhalflapjoint-get-cross-cutting-frame"]], "XHalfLapJoint.get_face_most_ortho_to_beam": [[189, "xhalflapjoint-get-face-most-ortho-to-beam"]], "XHalfLapJoint.get_face_most_towards_beam": [[190, "xhalflapjoint-get-face-most-towards-beam"]], "XHalfLapJoint.get_main_cutting_frame": [[191, "xhalflapjoint-get-main-cutting-frame"]], "XHalfLapJoint.restore_beams_from_keys": [[192, "xhalflapjoint-restore-beams-from-keys"]], "XHalfLapJoint.sha256": [[193, "xhalflapjoint-sha256"]], "XHalfLapJoint.to_json": [[194, "xhalflapjoint-to-json"]], "XHalfLapJoint.to_jsonstring": [[195, "xhalflapjoint-to-jsonstring"]], "XHalfLapJoint.validate_data": [[196, "xhalflapjoint-validate-data"]], "find_neighboring_beams": [[197, "find-neighboring-beams"], [332, "find-neighboring-beams"]], "BeamGeometry": [[198, "beamgeometry"]], "BrepGeometryConsumer": [[199, "brepgeometryconsumer"]], "CutFeature": [[200, "cutfeature"]], "CutFeature.ToString": [[201, "cutfeature-tostring"]], "CutFeature.copy": [[202, "cutfeature-copy"]], "CutFeature.from_json": [[203, "cutfeature-from-json"]], "CutFeature.from_jsonstring": [[204, "cutfeature-from-jsonstring"]], "CutFeature.sha256": [[205, "cutfeature-sha256"]], "CutFeature.to_json": [[206, "cutfeature-to-json"]], "CutFeature.to_jsonstring": [[207, "cutfeature-to-jsonstring"]], "CutFeature.validate_data": [[208, "cutfeature-validate-data"]], "CutFeatureGeometry": [[209, "cutfeaturegeometry"]], "CutFeatureGeometry.apply": [[210, "cutfeaturegeometry-apply"]], "DrillFeature": [[211, "drillfeature"]], "DrillFeature.ToString": [[212, "drillfeature-tostring"]], "DrillFeature.copy": [[213, "drillfeature-copy"]], "DrillFeature.from_json": [[214, "drillfeature-from-json"]], "DrillFeature.from_jsonstring": [[215, "drillfeature-from-jsonstring"]], "DrillFeature.sha256": [[216, "drillfeature-sha256"]], "DrillFeature.to_json": [[217, "drillfeature-to-json"]], "DrillFeature.to_jsonstring": [[218, "drillfeature-to-jsonstring"]], "DrillFeature.validate_data": [[219, "drillfeature-validate-data"]], "DrillFeatureGeometry": [[220, "drillfeaturegeometry"]], "DrillFeatureGeometry.apply": [[221, "drillfeaturegeometry-apply"]], "FeatureApplicationError": [[222, "featureapplicationerror"]], "FeatureApplicator": [[223, "featureapplicator"]], "FeatureApplicator.apply": [[224, "featureapplicator-apply"]], "MillVolume": [[225, "millvolume"]], "MillVolume.ToString": [[226, "millvolume-tostring"]], "MillVolume.copy": [[227, "millvolume-copy"]], "MillVolume.from_json": [[228, "millvolume-from-json"]], "MillVolume.from_jsonstring": [[229, "millvolume-from-jsonstring"]], "MillVolume.sha256": [[230, "millvolume-sha256"]], "MillVolume.to_json": [[231, "millvolume-to-json"]], "MillVolume.to_jsonstring": [[232, "millvolume-to-jsonstring"]], "MillVolume.validate_data": [[233, "millvolume-validate-data"]], "MillVolumeGeometry": [[234, "millvolumegeometry"]], "MillVolumeGeometry.apply": [[235, "millvolumegeometry-apply"]], "BTLx": [[236, "btlx"]], "BTLx.btlx_string": [[237, "btlx-btlx-string"]], "BTLx.process_assembly": [[238, "btlx-process-assembly"]], "BTLx.register_joint": [[239, "btlx-register-joint"]], "BTLxFrenchRidgeLap": [[240, "btlxfrenchridgelap"]], "BTLxFrenchRidgeLap.create_process": [[241, "btlxfrenchridgelap-create-process"]], "BTLxFrenchRidgeLap.get_params": [[242, "btlxfrenchridgelap-get-params"]], "BTLxFrenchRidgeLap.process_joints": [[243, "btlxfrenchridgelap-process-joints"]], "BTLxJackCut": [[244, "btlxjackcut"]], "BTLxJackCut.create_process": [[245, "btlxjackcut-create-process"]], "BTLxJackCut.generate_process": [[246, "btlxjackcut-generate-process"]], "BTLxProcess": [[247, "btlxprocess"]], "FrenchRidgeFactory": [[248, "frenchridgefactory"]], "FrenchRidgeFactory.apply_processings": [[249, "frenchridgefactory-apply-processings"]], "LButtFactory": [[250, "lbuttfactory"]], "LButtFactory.apply_processings": [[251, "lbuttfactory-apply-processings"]], "LMiterFactory": [[252, "lmiterfactory"]], "LMiterFactory.apply_processings": [[253, "lmiterfactory-apply-processings"]], "TButtFactory": [[254, "tbuttfactory"]], "TButtFactory.apply_processings": [[255, "tbuttfactory-apply-processings"]], "CategoryRule": [[256, "categoryrule"]], "CategoryRule.ToString": [[257, "categoryrule-tostring"]], "CategoryRule.comply": [[258, "categoryrule-comply"]], "CategoryRule.reorder": [[259, "categoryrule-reorder"]], "DebugInfomation": [[260, "debuginfomation"]], "DebugInfomation.ToString": [[261, "debuginfomation-tostring"]], "DebugInfomation.add_feature_error": [[262, "debuginfomation-add-feature-error"]], "DebugInfomation.add_joint_error": [[263, "debuginfomation-add-joint-error"]], "DirectRule": [[264, "directrule"]], "DirectRule.ToString": [[265, "directrule-tostring"]], "DirectRule.comply": [[266, "directrule-comply"]], "FeatureDefinition": [[267, "featuredefinition"]], "FeatureDefinition.ToString": [[268, "featuredefinition-tostring"]], "JointDefinition": [[269, "jointdefinition"]], "JointDefinition.ToString": [[270, "jointdefinition-tostring"]], "JointDefinition.is_identical": [[271, "jointdefinition-is-identical"]], "JointDefinition.match": [[272, "jointdefinition-match"]], "TopologyRule": [[273, "topologyrule"]], "TopologyRule.ToString": [[274, "topologyrule-tostring"]], "TopologyRule.comply": [[275, "topologyrule-comply"]], "Beam": [[276, "beam"], [343, "beam"]], "Beam.ToString": [[277, "beam-tostring"]], "Beam.add_blank_extension": [[278, "beam-add-blank-extension"]], "Beam.add_feature": [[279, "beam-add-feature"]], "Beam.add_features": [[280, "beam-add-features"]], "Beam.align_z": [[281, "beam-align-z"]], "Beam.clear_features": [[282, "beam-clear-features"]], "Beam.compute_aabb": [[283, "beam-compute-aabb"]], "Beam.compute_obb": [[284, "beam-compute-obb"]], "Beam.copy": [[285, "beam-copy"]], "Beam.endpoint_closest_to_point": [[286, "beam-endpoint-closest-to-point"]], "Beam.extension_to_plane": [[287, "beam-extension-to-plane"]], "Beam.from_centerline": [[288, "beam-from-centerline"]], "Beam.from_endpoints": [[289, "beam-from-endpoints"]], "Beam.from_json": [[290, "beam-from-json"]], "Beam.from_jsonstring": [[291, "beam-from-jsonstring"]], "Beam.get_geometry": [[292, "beam-get-geometry"]], "Beam.remove_blank_extension": [[293, "beam-remove-blank-extension"]], "Beam.remove_features": [[294, "beam-remove-features"]], "Beam.rotate": [[295, "beam-rotate"]], "Beam.rotated": [[296, "beam-rotated"]], "Beam.scale": [[297, "beam-scale"]], "Beam.scaled": [[298, "beam-scaled"]], "Beam.sha256": [[299, "beam-sha256"]], "Beam.to_json": [[300, "beam-to-json"]], "Beam.to_jsonstring": [[301, "beam-to-jsonstring"]], "Beam.transform": [[302, "beam-transform"]], "Beam.transform_numpy": [[303, "beam-transform-numpy"]], "Beam.transformed": [[304, "beam-transformed"]], "Beam.transformed_numpy": [[305, "beam-transformed-numpy"]], "Beam.translate": [[306, "beam-translate"]], "Beam.translated": [[307, "beam-translated"]], "Beam.validate_data": [[308, "beam-validate-data"]], "Actor": [[309, "actor"]], "Actor.get_name": [[310, "actor-get-name"]], "BuildingPlan": [[311, "buildingplan"]], "BuildingPlan.ToString": [[312, "buildingplan-tostring"]], "BuildingPlan.add_step": [[313, "buildingplan-add-step"]], "BuildingPlan.copy": [[314, "buildingplan-copy"]], "BuildingPlan.from_json": [[315, "buildingplan-from-json"]], "BuildingPlan.from_jsonstring": [[316, "buildingplan-from-jsonstring"]], "BuildingPlan.sha256": [[317, "buildingplan-sha256"]], "BuildingPlan.to_json": [[318, "buildingplan-to-json"]], "BuildingPlan.to_jsonstring": [[319, "buildingplan-to-jsonstring"]], "BuildingPlan.validate_data": [[320, "buildingplan-validate-data"]], "SimpleSequenceGenerator": [[321, "simplesequencegenerator"]], "Step": [[322, "step"]], "Step.ToString": [[323, "step-tostring"]], "Step.copy": [[324, "step-copy"]], "Step.from_json": [[325, "step-from-json"]], "Step.from_jsonstring": [[326, "step-from-jsonstring"]], "Step.sha256": [[327, "step-sha256"]], "Step.to_json": [[328, "step-to-json"]], "Step.to_jsonstring": [[329, "step-to-jsonstring"]], "Step.transform": [[330, "step-transform"]], "Step.validate_data": [[331, "step-validate-data"]], "Citing": [[333, "citing"]], "Examples": [[334, "examples"], [344, "examples"]], "Timber Assembly Examples": [[334, "timber-assembly-examples"]], "Create Joint": [[335, "create-joint"]], "COMPAS Timber Documentation": [[336, "compas-timber-documentation"]], "Dependencies": [[336, "dependencies"]], "Table of Contents": [[336, "table-of-contents"]], "Indices and tables": [[336, "indices-and-tables"]], "Installation": [[337, "installation"]], "Stable": [[337, "stable"]], "Install with conda": [[337, "install-with-conda"]], "Development": [[337, "development"]], "License": [[338, "license"]], "Grasshopper plugin": [[339, "grasshopper-plugin"]], "BTLx Contribution Guide": [[340, "btlx-contribution-guide"]], "Assembly": [[341, "assembly"]], "Attributes": [[342, "attributes"]], "Features": [[345, "features"]], "Joints": [[346, "joints"]], "Joint Topologies": [[346, "joint-topologies"]], "Joint Types": [[346, "joint-types"]], "Joints for L Topologies": [[346, "joints-for-l-topologies"]], "Joints for T Topologies": [[346, "joints-for-t-topologies"]], "Joints for X Topologies": [[346, "joints-for-x-topologies"]], "Summary Table": [[346, "summary-table"]], "Joint Topologies and Joint Types": [[346, "id1"]], "Joint Rules": [[347, "joint-rules"]], "Show": [[348, "show"]], "Visualisation": [[348, "visualisation"]], "Geometries": [[348, "geometries"]], "Errors": [[348, "errors"]], "Types": [[348, "types"]], "Utils": [[349, "utils"]], "Bake with BoxMap": [[349, "bake-with-boxmap"]], "Workflow": [[350, "workflow"]]}, "indexentries": {"timberassembly (class in compas_timber.assembly)": [[9, "compas_timber.assembly.TimberAssembly"]], "tostring() (compas_timber.assembly.timberassembly method)": [[10, "compas_timber.assembly.TimberAssembly.ToString"]], "add_beam() (compas_timber.assembly.timberassembly method)": [[11, "compas_timber.assembly.TimberAssembly.add_beam"]], "add_connection() (compas_timber.assembly.timberassembly method)": [[12, "compas_timber.assembly.TimberAssembly.add_connection"]], "add_joint() (compas_timber.assembly.timberassembly method)": [[13, "compas_timber.assembly.TimberAssembly.add_joint"]], "add_part() (compas_timber.assembly.timberassembly method)": [[14, "compas_timber.assembly.TimberAssembly.add_part"]], "are_parts_joined() (compas_timber.assembly.timberassembly method)": [[15, "compas_timber.assembly.TimberAssembly.are_parts_joined"]], "compute_aabb() (compas_timber.assembly.timberassembly method)": [[16, "compas_timber.assembly.TimberAssembly.compute_aabb"]], "compute_obb() (compas_timber.assembly.timberassembly method)": [[17, "compas_timber.assembly.TimberAssembly.compute_obb"]], "connections() (compas_timber.assembly.timberassembly method)": [[18, "compas_timber.assembly.TimberAssembly.connections"]], "contains() (compas_timber.assembly.timberassembly method)": [[19, "compas_timber.assembly.TimberAssembly.contains"]], "copy() (compas_timber.assembly.timberassembly method)": [[20, "compas_timber.assembly.TimberAssembly.copy"]], "delete_connection() (compas_timber.assembly.timberassembly method)": [[21, "compas_timber.assembly.TimberAssembly.delete_connection"]], "delete_part() (compas_timber.assembly.timberassembly method)": [[22, "compas_timber.assembly.TimberAssembly.delete_part"]], "find() (compas_timber.assembly.timberassembly method)": [[23, "compas_timber.assembly.TimberAssembly.find"]], "find_by_key() (compas_timber.assembly.timberassembly method)": [[24, "compas_timber.assembly.TimberAssembly.find_by_key"]], "from_json() (compas_timber.assembly.timberassembly class method)": [[25, "compas_timber.assembly.TimberAssembly.from_json"]], "from_jsonstring() (compas_timber.assembly.timberassembly class method)": [[26, "compas_timber.assembly.TimberAssembly.from_jsonstring"]], "parts() (compas_timber.assembly.timberassembly method)": [[27, "compas_timber.assembly.TimberAssembly.parts"]], "remove_joint() (compas_timber.assembly.timberassembly method)": [[28, "compas_timber.assembly.TimberAssembly.remove_joint"]], "rotate() (compas_timber.assembly.timberassembly method)": [[29, "compas_timber.assembly.TimberAssembly.rotate"]], "rotated() (compas_timber.assembly.timberassembly method)": [[30, "compas_timber.assembly.TimberAssembly.rotated"]], "scale() (compas_timber.assembly.timberassembly method)": [[31, "compas_timber.assembly.TimberAssembly.scale"]], "scaled() (compas_timber.assembly.timberassembly method)": [[32, "compas_timber.assembly.TimberAssembly.scaled"]], "set_topologies() (compas_timber.assembly.timberassembly method)": [[33, "compas_timber.assembly.TimberAssembly.set_topologies"]], "sha256() (compas_timber.assembly.timberassembly method)": [[34, "compas_timber.assembly.TimberAssembly.sha256"]], "to_json() (compas_timber.assembly.timberassembly method)": [[35, "compas_timber.assembly.TimberAssembly.to_json"]], "to_jsonstring() (compas_timber.assembly.timberassembly method)": [[36, "compas_timber.assembly.TimberAssembly.to_jsonstring"]], "transform() (compas_timber.assembly.timberassembly method)": [[37, "compas_timber.assembly.TimberAssembly.transform"]], "transform_numpy() (compas_timber.assembly.timberassembly method)": [[38, "compas_timber.assembly.TimberAssembly.transform_numpy"]], "transformed() (compas_timber.assembly.timberassembly method)": [[39, "compas_timber.assembly.TimberAssembly.transformed"]], "transformed_numpy() (compas_timber.assembly.timberassembly method)": [[40, "compas_timber.assembly.TimberAssembly.transformed_numpy"]], "translate() (compas_timber.assembly.timberassembly method)": [[41, "compas_timber.assembly.TimberAssembly.translate"]], "translated() (compas_timber.assembly.timberassembly method)": [[42, "compas_timber.assembly.TimberAssembly.translated"]], "validate_data() (compas_timber.assembly.timberassembly class method)": [[43, "compas_timber.assembly.TimberAssembly.validate_data"]], "beamjoinningerror": [[44, "compas_timber.connections.BeamJoinningError"]], "connectionsolver (class in compas_timber.connections)": [[45, "compas_timber.connections.ConnectionSolver"]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[46, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs"]], "find_topology() (compas_timber.connections.connectionsolver method)": [[47, "compas_timber.connections.ConnectionSolver.find_topology"]], "frenchridgelapjoint (class in compas_timber.connections)": [[48, "compas_timber.connections.FrenchRidgeLapJoint"]], "tostring() (compas_timber.connections.frenchridgelapjoint method)": [[49, "compas_timber.connections.FrenchRidgeLapJoint.ToString"]], "add_features() (compas_timber.connections.frenchridgelapjoint method)": [[50, "compas_timber.connections.FrenchRidgeLapJoint.add_features"]], "check_geometry() (compas_timber.connections.frenchridgelapjoint method)": [[51, "compas_timber.connections.FrenchRidgeLapJoint.check_geometry"]], "copy() (compas_timber.connections.frenchridgelapjoint method)": [[52, "compas_timber.connections.FrenchRidgeLapJoint.copy"]], "create() (compas_timber.connections.frenchridgelapjoint class method)": [[53, "compas_timber.connections.FrenchRidgeLapJoint.create"]], "from_json() (compas_timber.connections.frenchridgelapjoint class method)": [[54, "compas_timber.connections.FrenchRidgeLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.frenchridgelapjoint class method)": [[55, "compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring"]], "get_face_most_ortho_to_beam() (compas_timber.connections.frenchridgelapjoint static method)": [[56, "compas_timber.connections.FrenchRidgeLapJoint.get_face_most_ortho_to_beam"]], "get_face_most_towards_beam() (compas_timber.connections.frenchridgelapjoint static method)": [[57, "compas_timber.connections.FrenchRidgeLapJoint.get_face_most_towards_beam"]], "restore_beams_from_keys() (compas_timber.connections.frenchridgelapjoint method)": [[58, "compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.frenchridgelapjoint method)": [[59, "compas_timber.connections.FrenchRidgeLapJoint.sha256"]], "to_json() (compas_timber.connections.frenchridgelapjoint method)": [[60, "compas_timber.connections.FrenchRidgeLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.frenchridgelapjoint method)": [[61, "compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.frenchridgelapjoint class method)": [[62, "compas_timber.connections.FrenchRidgeLapJoint.validate_data"]], "joint (class in compas_timber.connections)": [[63, "compas_timber.connections.Joint"]], "tostring() (compas_timber.connections.joint method)": [[64, "compas_timber.connections.Joint.ToString"]], "add_features() (compas_timber.connections.joint method)": [[65, "compas_timber.connections.Joint.add_features"]], "copy() (compas_timber.connections.joint method)": [[66, "compas_timber.connections.Joint.copy"]], "create() (compas_timber.connections.joint class method)": [[67, "compas_timber.connections.Joint.create"]], "from_json() (compas_timber.connections.joint class method)": [[68, "compas_timber.connections.Joint.from_json"]], "from_jsonstring() (compas_timber.connections.joint class method)": [[69, "compas_timber.connections.Joint.from_jsonstring"]], "get_face_most_ortho_to_beam() (compas_timber.connections.joint static method)": [[70, "compas_timber.connections.Joint.get_face_most_ortho_to_beam"]], "get_face_most_towards_beam() (compas_timber.connections.joint static method)": [[71, "compas_timber.connections.Joint.get_face_most_towards_beam"]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[72, "compas_timber.connections.Joint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.joint method)": [[73, "compas_timber.connections.Joint.sha256"]], "to_json() (compas_timber.connections.joint method)": [[74, "compas_timber.connections.Joint.to_json"]], "to_jsonstring() (compas_timber.connections.joint method)": [[75, "compas_timber.connections.Joint.to_jsonstring"]], "validate_data() (compas_timber.connections.joint class method)": [[76, "compas_timber.connections.Joint.validate_data"]], "jointtopology (class in compas_timber.connections)": [[77, "compas_timber.connections.JointTopology"]], "get_name() (compas_timber.connections.jointtopology class method)": [[78, "compas_timber.connections.JointTopology.get_name"]], "lbuttjoint (class in compas_timber.connections)": [[79, "compas_timber.connections.LButtJoint"]], "tostring() (compas_timber.connections.lbuttjoint method)": [[80, "compas_timber.connections.LButtJoint.ToString"]], "add_features() (compas_timber.connections.lbuttjoint method)": [[81, "compas_timber.connections.LButtJoint.add_features"]], "back_surface_main() (compas_timber.connections.lbuttjoint method)": [[82, "compas_timber.connections.LButtJoint.back_surface_main"]], "copy() (compas_timber.connections.lbuttjoint method)": [[83, "compas_timber.connections.LButtJoint.copy"]], "create() (compas_timber.connections.lbuttjoint class method)": [[84, "compas_timber.connections.LButtJoint.create"]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[85, "compas_timber.connections.LButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[86, "compas_timber.connections.LButtJoint.from_jsonstring"]], "front_back_surface_main() (compas_timber.connections.lbuttjoint method)": [[87, "compas_timber.connections.LButtJoint.front_back_surface_main"]], "get_cross_cutting_plane() (compas_timber.connections.lbuttjoint method)": [[88, "compas_timber.connections.LButtJoint.get_cross_cutting_plane"]], "get_face_most_ortho_to_beam() (compas_timber.connections.lbuttjoint static method)": [[89, "compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam"]], "get_face_most_towards_beam() (compas_timber.connections.lbuttjoint static method)": [[90, "compas_timber.connections.LButtJoint.get_face_most_towards_beam"]], "get_main_cutting_plane() (compas_timber.connections.lbuttjoint method)": [[91, "compas_timber.connections.LButtJoint.get_main_cutting_plane"]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[92, "compas_timber.connections.LButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lbuttjoint method)": [[93, "compas_timber.connections.LButtJoint.sha256"]], "side_surfaces_cross() (compas_timber.connections.lbuttjoint method)": [[94, "compas_timber.connections.LButtJoint.side_surfaces_cross"]], "subtraction_volume() (compas_timber.connections.lbuttjoint method)": [[95, "compas_timber.connections.LButtJoint.subtraction_volume"]], "to_json() (compas_timber.connections.lbuttjoint method)": [[96, "compas_timber.connections.LButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lbuttjoint method)": [[97, "compas_timber.connections.LButtJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lbuttjoint class method)": [[98, "compas_timber.connections.LButtJoint.validate_data"]], "lhalflapjoint (class in compas_timber.connections)": [[99, "compas_timber.connections.LHalfLapJoint"]], "tostring() (compas_timber.connections.lhalflapjoint method)": [[100, "compas_timber.connections.LHalfLapJoint.ToString"]], "add_features() (compas_timber.connections.lhalflapjoint method)": [[101, "compas_timber.connections.LHalfLapJoint.add_features"]], "copy() (compas_timber.connections.lhalflapjoint method)": [[102, "compas_timber.connections.LHalfLapJoint.copy"]], "create() (compas_timber.connections.lhalflapjoint class method)": [[103, "compas_timber.connections.LHalfLapJoint.create"]], "from_json() (compas_timber.connections.lhalflapjoint class method)": [[104, "compas_timber.connections.LHalfLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lhalflapjoint class method)": [[105, "compas_timber.connections.LHalfLapJoint.from_jsonstring"]], "get_cross_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[106, "compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame"]], "get_face_most_ortho_to_beam() (compas_timber.connections.lhalflapjoint static method)": [[107, "compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam"]], "get_face_most_towards_beam() (compas_timber.connections.lhalflapjoint static method)": [[108, "compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam"]], "get_main_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[109, "compas_timber.connections.LHalfLapJoint.get_main_cutting_frame"]], "restore_beams_from_keys() (compas_timber.connections.lhalflapjoint method)": [[110, "compas_timber.connections.LHalfLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lhalflapjoint method)": [[111, "compas_timber.connections.LHalfLapJoint.sha256"]], "to_json() (compas_timber.connections.lhalflapjoint method)": [[112, "compas_timber.connections.LHalfLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lhalflapjoint method)": [[113, "compas_timber.connections.LHalfLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lhalflapjoint class method)": [[114, "compas_timber.connections.LHalfLapJoint.validate_data"]], "lmiterjoint (class in compas_timber.connections)": [[115, "compas_timber.connections.LMiterJoint"]], "tostring() (compas_timber.connections.lmiterjoint method)": [[116, "compas_timber.connections.LMiterJoint.ToString"]], "add_features() (compas_timber.connections.lmiterjoint method)": [[117, "compas_timber.connections.LMiterJoint.add_features"]], "copy() (compas_timber.connections.lmiterjoint method)": [[118, "compas_timber.connections.LMiterJoint.copy"]], "create() (compas_timber.connections.lmiterjoint class method)": [[119, "compas_timber.connections.LMiterJoint.create"]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[120, "compas_timber.connections.LMiterJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[121, "compas_timber.connections.LMiterJoint.from_jsonstring"]], "get_cutting_planes() (compas_timber.connections.lmiterjoint method)": [[122, "compas_timber.connections.LMiterJoint.get_cutting_planes"]], "get_face_most_ortho_to_beam() (compas_timber.connections.lmiterjoint static method)": [[123, "compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam"]], "get_face_most_towards_beam() (compas_timber.connections.lmiterjoint static method)": [[124, "compas_timber.connections.LMiterJoint.get_face_most_towards_beam"]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[125, "compas_timber.connections.LMiterJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lmiterjoint method)": [[126, "compas_timber.connections.LMiterJoint.sha256"]], "to_json() (compas_timber.connections.lmiterjoint method)": [[127, "compas_timber.connections.LMiterJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lmiterjoint method)": [[128, "compas_timber.connections.LMiterJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lmiterjoint class method)": [[129, "compas_timber.connections.LMiterJoint.validate_data"]], "lapjoint (class in compas_timber.connections)": [[130, "compas_timber.connections.LapJoint"]], "tostring() (compas_timber.connections.lapjoint method)": [[131, "compas_timber.connections.LapJoint.ToString"]], "add_features() (compas_timber.connections.lapjoint method)": [[132, "compas_timber.connections.LapJoint.add_features"]], "copy() (compas_timber.connections.lapjoint method)": [[133, "compas_timber.connections.LapJoint.copy"]], "create() (compas_timber.connections.lapjoint class method)": [[134, "compas_timber.connections.LapJoint.create"]], "from_json() (compas_timber.connections.lapjoint class method)": [[135, "compas_timber.connections.LapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lapjoint class method)": [[136, "compas_timber.connections.LapJoint.from_jsonstring"]], "get_cross_cutting_frame() (compas_timber.connections.lapjoint method)": [[137, "compas_timber.connections.LapJoint.get_cross_cutting_frame"]], "get_face_most_ortho_to_beam() (compas_timber.connections.lapjoint static method)": [[138, "compas_timber.connections.LapJoint.get_face_most_ortho_to_beam"]], "get_face_most_towards_beam() (compas_timber.connections.lapjoint static method)": [[139, "compas_timber.connections.LapJoint.get_face_most_towards_beam"]], "get_main_cutting_frame() (compas_timber.connections.lapjoint method)": [[140, "compas_timber.connections.LapJoint.get_main_cutting_frame"]], "restore_beams_from_keys() (compas_timber.connections.lapjoint method)": [[141, "compas_timber.connections.LapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lapjoint method)": [[142, "compas_timber.connections.LapJoint.sha256"]], "to_json() (compas_timber.connections.lapjoint method)": [[143, "compas_timber.connections.LapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lapjoint method)": [[144, "compas_timber.connections.LapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lapjoint class method)": [[145, "compas_timber.connections.LapJoint.validate_data"]], "tbuttjoint (class in compas_timber.connections)": [[146, "compas_timber.connections.TButtJoint"]], "tostring() (compas_timber.connections.tbuttjoint method)": [[147, "compas_timber.connections.TButtJoint.ToString"]], "add_features() (compas_timber.connections.tbuttjoint method)": [[148, "compas_timber.connections.TButtJoint.add_features"]], "back_surface_main() (compas_timber.connections.tbuttjoint method)": [[149, "compas_timber.connections.TButtJoint.back_surface_main"]], "copy() (compas_timber.connections.tbuttjoint method)": [[150, "compas_timber.connections.TButtJoint.copy"]], "create() (compas_timber.connections.tbuttjoint class method)": [[151, "compas_timber.connections.TButtJoint.create"]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[152, "compas_timber.connections.TButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[153, "compas_timber.connections.TButtJoint.from_jsonstring"]], "front_back_surface_main() (compas_timber.connections.tbuttjoint method)": [[154, "compas_timber.connections.TButtJoint.front_back_surface_main"]], "get_face_most_ortho_to_beam() (compas_timber.connections.tbuttjoint static method)": [[155, "compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam"]], "get_face_most_towards_beam() (compas_timber.connections.tbuttjoint static method)": [[156, "compas_timber.connections.TButtJoint.get_face_most_towards_beam"]], "get_main_cutting_plane() (compas_timber.connections.tbuttjoint method)": [[157, "compas_timber.connections.TButtJoint.get_main_cutting_plane"]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[158, "compas_timber.connections.TButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.tbuttjoint method)": [[159, "compas_timber.connections.TButtJoint.sha256"]], "side_surfaces_cross() (compas_timber.connections.tbuttjoint method)": [[160, "compas_timber.connections.TButtJoint.side_surfaces_cross"]], "subtraction_volume() (compas_timber.connections.tbuttjoint method)": [[161, "compas_timber.connections.TButtJoint.subtraction_volume"]], "to_json() (compas_timber.connections.tbuttjoint method)": [[162, "compas_timber.connections.TButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.tbuttjoint method)": [[163, "compas_timber.connections.TButtJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.tbuttjoint class method)": [[164, "compas_timber.connections.TButtJoint.validate_data"]], "thalflapjoint (class in compas_timber.connections)": [[165, "compas_timber.connections.THalfLapJoint"]], "tostring() (compas_timber.connections.thalflapjoint method)": [[166, "compas_timber.connections.THalfLapJoint.ToString"]], "add_features() (compas_timber.connections.thalflapjoint method)": [[167, "compas_timber.connections.THalfLapJoint.add_features"]], "copy() (compas_timber.connections.thalflapjoint method)": [[168, "compas_timber.connections.THalfLapJoint.copy"]], "create() (compas_timber.connections.thalflapjoint class method)": [[169, "compas_timber.connections.THalfLapJoint.create"]], "from_json() (compas_timber.connections.thalflapjoint class method)": [[170, "compas_timber.connections.THalfLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.thalflapjoint class method)": [[171, "compas_timber.connections.THalfLapJoint.from_jsonstring"]], "get_cross_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[172, "compas_timber.connections.THalfLapJoint.get_cross_cutting_frame"]], "get_face_most_ortho_to_beam() (compas_timber.connections.thalflapjoint static method)": [[173, "compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam"]], "get_face_most_towards_beam() (compas_timber.connections.thalflapjoint static method)": [[174, "compas_timber.connections.THalfLapJoint.get_face_most_towards_beam"]], "get_main_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[175, "compas_timber.connections.THalfLapJoint.get_main_cutting_frame"]], "restore_beams_from_keys() (compas_timber.connections.thalflapjoint method)": [[176, "compas_timber.connections.THalfLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.thalflapjoint method)": [[177, "compas_timber.connections.THalfLapJoint.sha256"]], "to_json() (compas_timber.connections.thalflapjoint method)": [[178, "compas_timber.connections.THalfLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.thalflapjoint method)": [[179, "compas_timber.connections.THalfLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.thalflapjoint class method)": [[180, "compas_timber.connections.THalfLapJoint.validate_data"]], "xhalflapjoint (class in compas_timber.connections)": [[181, "compas_timber.connections.XHalfLapJoint"]], "tostring() (compas_timber.connections.xhalflapjoint method)": [[182, "compas_timber.connections.XHalfLapJoint.ToString"]], "add_features() (compas_timber.connections.xhalflapjoint method)": [[183, "compas_timber.connections.XHalfLapJoint.add_features"]], "copy() (compas_timber.connections.xhalflapjoint method)": [[184, "compas_timber.connections.XHalfLapJoint.copy"]], "create() (compas_timber.connections.xhalflapjoint class method)": [[185, "compas_timber.connections.XHalfLapJoint.create"]], "from_json() (compas_timber.connections.xhalflapjoint class method)": [[186, "compas_timber.connections.XHalfLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.xhalflapjoint class method)": [[187, "compas_timber.connections.XHalfLapJoint.from_jsonstring"]], "get_cross_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[188, "compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame"]], "get_face_most_ortho_to_beam() (compas_timber.connections.xhalflapjoint static method)": [[189, "compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam"]], "get_face_most_towards_beam() (compas_timber.connections.xhalflapjoint static method)": [[190, "compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam"]], "get_main_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[191, "compas_timber.connections.XHalfLapJoint.get_main_cutting_frame"]], "restore_beams_from_keys() (compas_timber.connections.xhalflapjoint method)": [[192, "compas_timber.connections.XHalfLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.xhalflapjoint method)": [[193, "compas_timber.connections.XHalfLapJoint.sha256"]], "to_json() (compas_timber.connections.xhalflapjoint method)": [[194, "compas_timber.connections.XHalfLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.xhalflapjoint method)": [[195, "compas_timber.connections.XHalfLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.xhalflapjoint class method)": [[196, "compas_timber.connections.XHalfLapJoint.validate_data"]], "find_neighboring_beams() (in module compas_timber.connections)": [[197, "compas_timber.connections.find_neighboring_beams"]], "beamgeometry (class in compas_timber.consumers)": [[198, "compas_timber.consumers.BeamGeometry"]], "brepgeometryconsumer (class in compas_timber.consumers)": [[199, "compas_timber.consumers.BrepGeometryConsumer"]], "cutfeature (class in compas_timber.consumers)": [[200, "compas_timber.consumers.CutFeature"]], "tostring() (compas_timber.consumers.cutfeature method)": [[201, "compas_timber.consumers.CutFeature.ToString"]], "copy() (compas_timber.consumers.cutfeature method)": [[202, "compas_timber.consumers.CutFeature.copy"]], "from_json() (compas_timber.consumers.cutfeature class method)": [[203, "compas_timber.consumers.CutFeature.from_json"]], "from_jsonstring() (compas_timber.consumers.cutfeature class method)": [[204, "compas_timber.consumers.CutFeature.from_jsonstring"]], "sha256() (compas_timber.consumers.cutfeature method)": [[205, "compas_timber.consumers.CutFeature.sha256"]], "to_json() (compas_timber.consumers.cutfeature method)": [[206, "compas_timber.consumers.CutFeature.to_json"]], "to_jsonstring() (compas_timber.consumers.cutfeature method)": [[207, "compas_timber.consumers.CutFeature.to_jsonstring"]], "validate_data() (compas_timber.consumers.cutfeature class method)": [[208, "compas_timber.consumers.CutFeature.validate_data"]], "cutfeaturegeometry (class in compas_timber.consumers)": [[209, "compas_timber.consumers.CutFeatureGeometry"]], "apply() (compas_timber.consumers.cutfeaturegeometry method)": [[210, "compas_timber.consumers.CutFeatureGeometry.apply"]], "drillfeature (class in compas_timber.consumers)": [[211, "compas_timber.consumers.DrillFeature"]], "tostring() (compas_timber.consumers.drillfeature method)": [[212, "compas_timber.consumers.DrillFeature.ToString"]], "copy() (compas_timber.consumers.drillfeature method)": [[213, "compas_timber.consumers.DrillFeature.copy"]], "from_json() (compas_timber.consumers.drillfeature class method)": [[214, "compas_timber.consumers.DrillFeature.from_json"]], "from_jsonstring() (compas_timber.consumers.drillfeature class method)": [[215, "compas_timber.consumers.DrillFeature.from_jsonstring"]], "sha256() (compas_timber.consumers.drillfeature method)": [[216, "compas_timber.consumers.DrillFeature.sha256"]], "to_json() (compas_timber.consumers.drillfeature method)": [[217, "compas_timber.consumers.DrillFeature.to_json"]], "to_jsonstring() (compas_timber.consumers.drillfeature method)": [[218, "compas_timber.consumers.DrillFeature.to_jsonstring"]], "validate_data() (compas_timber.consumers.drillfeature class method)": [[219, "compas_timber.consumers.DrillFeature.validate_data"]], "drillfeaturegeometry (class in compas_timber.consumers)": [[220, "compas_timber.consumers.DrillFeatureGeometry"]], "apply() (compas_timber.consumers.drillfeaturegeometry method)": [[221, "compas_timber.consumers.DrillFeatureGeometry.apply"]], "featureapplicationerror": [[222, "compas_timber.consumers.FeatureApplicationError"]], "featureapplicator (class in compas_timber.consumers)": [[223, "compas_timber.consumers.FeatureApplicator"]], "apply() (compas_timber.consumers.featureapplicator method)": [[224, "compas_timber.consumers.FeatureApplicator.apply"]], "millvolume (class in compas_timber.consumers)": [[225, "compas_timber.consumers.MillVolume"]], "tostring() (compas_timber.consumers.millvolume method)": [[226, "compas_timber.consumers.MillVolume.ToString"]], "copy() (compas_timber.consumers.millvolume method)": [[227, "compas_timber.consumers.MillVolume.copy"]], "from_json() (compas_timber.consumers.millvolume class method)": [[228, "compas_timber.consumers.MillVolume.from_json"]], "from_jsonstring() (compas_timber.consumers.millvolume class method)": [[229, "compas_timber.consumers.MillVolume.from_jsonstring"]], "sha256() (compas_timber.consumers.millvolume method)": [[230, "compas_timber.consumers.MillVolume.sha256"]], "to_json() (compas_timber.consumers.millvolume method)": [[231, "compas_timber.consumers.MillVolume.to_json"]], "to_jsonstring() (compas_timber.consumers.millvolume method)": [[232, "compas_timber.consumers.MillVolume.to_jsonstring"]], "validate_data() (compas_timber.consumers.millvolume class method)": [[233, "compas_timber.consumers.MillVolume.validate_data"]], "millvolumegeometry (class in compas_timber.consumers)": [[234, "compas_timber.consumers.MillVolumeGeometry"]], "apply() (compas_timber.consumers.millvolumegeometry method)": [[235, "compas_timber.consumers.MillVolumeGeometry.apply"]], "btlx (class in compas_timber.fabrication)": [[236, "compas_timber.fabrication.BTLx"]], "btlx_string() (compas_timber.fabrication.btlx method)": [[237, "compas_timber.fabrication.BTLx.btlx_string"]], "process_assembly() (compas_timber.fabrication.btlx method)": [[238, "compas_timber.fabrication.BTLx.process_assembly"]], "register_joint() (compas_timber.fabrication.btlx class method)": [[239, "compas_timber.fabrication.BTLx.register_joint"]], "btlxfrenchridgelap (class in compas_timber.fabrication)": [[240, "compas_timber.fabrication.BTLxFrenchRidgeLap"]], "create_process() (compas_timber.fabrication.btlxfrenchridgelap class method)": [[241, "compas_timber.fabrication.BTLxFrenchRidgeLap.create_process"]], "get_params() (compas_timber.fabrication.btlxfrenchridgelap method)": [[242, "compas_timber.fabrication.BTLxFrenchRidgeLap.get_params"]], "process_joints() (compas_timber.fabrication.btlxfrenchridgelap method)": [[243, "compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints"]], "btlxjackcut (class in compas_timber.fabrication)": [[244, "compas_timber.fabrication.BTLxJackCut"]], "create_process() (compas_timber.fabrication.btlxjackcut class method)": [[245, "compas_timber.fabrication.BTLxJackCut.create_process"]], "generate_process() (compas_timber.fabrication.btlxjackcut method)": [[246, "compas_timber.fabrication.BTLxJackCut.generate_process"]], "btlxprocess (class in compas_timber.fabrication)": [[247, "compas_timber.fabrication.BTLxProcess"]], "frenchridgefactory (class in compas_timber.fabrication)": [[248, "compas_timber.fabrication.FrenchRidgeFactory"]], "apply_processings() (compas_timber.fabrication.frenchridgefactory class method)": [[249, "compas_timber.fabrication.FrenchRidgeFactory.apply_processings"]], "lbuttfactory (class in compas_timber.fabrication)": [[250, "compas_timber.fabrication.LButtFactory"]], "apply_processings() (compas_timber.fabrication.lbuttfactory class method)": [[251, "compas_timber.fabrication.LButtFactory.apply_processings"]], "lmiterfactory (class in compas_timber.fabrication)": [[252, "compas_timber.fabrication.LMiterFactory"]], "apply_processings() (compas_timber.fabrication.lmiterfactory class method)": [[253, "compas_timber.fabrication.LMiterFactory.apply_processings"]], "tbuttfactory (class in compas_timber.fabrication)": [[254, "compas_timber.fabrication.TButtFactory"]], "apply_processings() (compas_timber.fabrication.tbuttfactory class method)": [[255, "compas_timber.fabrication.TButtFactory.apply_processings"]], "categoryrule (class in compas_timber.ghpython)": [[256, "compas_timber.ghpython.CategoryRule"]], "tostring() (compas_timber.ghpython.categoryrule method)": [[257, "compas_timber.ghpython.CategoryRule.ToString"]], "comply() (compas_timber.ghpython.categoryrule method)": [[258, "compas_timber.ghpython.CategoryRule.comply"]], "reorder() (compas_timber.ghpython.categoryrule method)": [[259, "compas_timber.ghpython.CategoryRule.reorder"]], "debuginfomation (class in compas_timber.ghpython)": [[260, "compas_timber.ghpython.DebugInfomation"]], "tostring() (compas_timber.ghpython.debuginfomation method)": [[261, "compas_timber.ghpython.DebugInfomation.ToString"]], "add_feature_error() (compas_timber.ghpython.debuginfomation method)": [[262, "compas_timber.ghpython.DebugInfomation.add_feature_error"]], "add_joint_error() (compas_timber.ghpython.debuginfomation method)": [[263, "compas_timber.ghpython.DebugInfomation.add_joint_error"]], "directrule (class in compas_timber.ghpython)": [[264, "compas_timber.ghpython.DirectRule"]], "tostring() (compas_timber.ghpython.directrule method)": [[265, "compas_timber.ghpython.DirectRule.ToString"]], "comply() (compas_timber.ghpython.directrule method)": [[266, "compas_timber.ghpython.DirectRule.comply"]], "featuredefinition (class in compas_timber.ghpython)": [[267, "compas_timber.ghpython.FeatureDefinition"]], "tostring() (compas_timber.ghpython.featuredefinition method)": [[268, "compas_timber.ghpython.FeatureDefinition.ToString"]], "jointdefinition (class in compas_timber.ghpython)": [[269, "compas_timber.ghpython.JointDefinition"]], "tostring() (compas_timber.ghpython.jointdefinition method)": [[270, "compas_timber.ghpython.JointDefinition.ToString"]], "is_identical() (compas_timber.ghpython.jointdefinition method)": [[271, "compas_timber.ghpython.JointDefinition.is_identical"]], "match() (compas_timber.ghpython.jointdefinition method)": [[272, "compas_timber.ghpython.JointDefinition.match"]], "topologyrule (class in compas_timber.ghpython)": [[273, "compas_timber.ghpython.TopologyRule"]], "tostring() (compas_timber.ghpython.topologyrule method)": [[274, "compas_timber.ghpython.TopologyRule.ToString"]], "comply() (compas_timber.ghpython.topologyrule method)": [[275, "compas_timber.ghpython.TopologyRule.comply"]], "beam (class in compas_timber.parts)": [[276, "compas_timber.parts.Beam"]], "tostring() (compas_timber.parts.beam method)": [[277, "compas_timber.parts.Beam.ToString"]], "add_blank_extension() (compas_timber.parts.beam method)": [[278, "compas_timber.parts.Beam.add_blank_extension"]], "add_feature() (compas_timber.parts.beam method)": [[279, "compas_timber.parts.Beam.add_feature"]], "add_features() (compas_timber.parts.beam method)": [[280, "compas_timber.parts.Beam.add_features"]], "align_z() (compas_timber.parts.beam method)": [[281, "compas_timber.parts.Beam.align_z"]], "clear_features() (compas_timber.parts.beam method)": [[282, "compas_timber.parts.Beam.clear_features"]], "compute_aabb() (compas_timber.parts.beam method)": [[283, "compas_timber.parts.Beam.compute_aabb"]], "compute_obb() (compas_timber.parts.beam method)": [[284, "compas_timber.parts.Beam.compute_obb"]], "copy() (compas_timber.parts.beam method)": [[285, "compas_timber.parts.Beam.copy"]], "endpoint_closest_to_point() (compas_timber.parts.beam method)": [[286, "compas_timber.parts.Beam.endpoint_closest_to_point"]], "extension_to_plane() (compas_timber.parts.beam method)": [[287, "compas_timber.parts.Beam.extension_to_plane"]], "from_centerline() (compas_timber.parts.beam class method)": [[288, "compas_timber.parts.Beam.from_centerline"]], "from_endpoints() (compas_timber.parts.beam class method)": [[289, "compas_timber.parts.Beam.from_endpoints"]], "from_json() (compas_timber.parts.beam class method)": [[290, "compas_timber.parts.Beam.from_json"]], "from_jsonstring() (compas_timber.parts.beam class method)": [[291, "compas_timber.parts.Beam.from_jsonstring"]], "get_geometry() (compas_timber.parts.beam method)": [[292, "compas_timber.parts.Beam.get_geometry"]], "remove_blank_extension() (compas_timber.parts.beam method)": [[293, "compas_timber.parts.Beam.remove_blank_extension"]], "remove_features() (compas_timber.parts.beam method)": [[294, "compas_timber.parts.Beam.remove_features"]], "rotate() (compas_timber.parts.beam method)": [[295, "compas_timber.parts.Beam.rotate"]], "rotated() (compas_timber.parts.beam method)": [[296, "compas_timber.parts.Beam.rotated"]], "scale() (compas_timber.parts.beam method)": [[297, "compas_timber.parts.Beam.scale"]], "scaled() (compas_timber.parts.beam method)": [[298, "compas_timber.parts.Beam.scaled"]], "sha256() (compas_timber.parts.beam method)": [[299, "compas_timber.parts.Beam.sha256"]], "to_json() (compas_timber.parts.beam method)": [[300, "compas_timber.parts.Beam.to_json"]], "to_jsonstring() (compas_timber.parts.beam method)": [[301, "compas_timber.parts.Beam.to_jsonstring"]], "transform() (compas_timber.parts.beam method)": [[302, "compas_timber.parts.Beam.transform"]], "transform_numpy() (compas_timber.parts.beam method)": [[303, "compas_timber.parts.Beam.transform_numpy"]], "transformed() (compas_timber.parts.beam method)": [[304, "compas_timber.parts.Beam.transformed"]], "transformed_numpy() (compas_timber.parts.beam method)": [[305, "compas_timber.parts.Beam.transformed_numpy"]], "translate() (compas_timber.parts.beam method)": [[306, "compas_timber.parts.Beam.translate"]], "translated() (compas_timber.parts.beam method)": [[307, "compas_timber.parts.Beam.translated"]], "validate_data() (compas_timber.parts.beam class method)": [[308, "compas_timber.parts.Beam.validate_data"]], "actor (class in compas_timber.planning)": [[309, "compas_timber.planning.Actor"]], "get_name() (compas_timber.planning.actor class method)": [[310, "compas_timber.planning.Actor.get_name"]], "buildingplan (class in compas_timber.planning)": [[311, "compas_timber.planning.BuildingPlan"]], "tostring() (compas_timber.planning.buildingplan method)": [[312, "compas_timber.planning.BuildingPlan.ToString"]], "add_step() (compas_timber.planning.buildingplan method)": [[313, "compas_timber.planning.BuildingPlan.add_step"]], "copy() (compas_timber.planning.buildingplan method)": [[314, "compas_timber.planning.BuildingPlan.copy"]], "from_json() (compas_timber.planning.buildingplan class method)": [[315, "compas_timber.planning.BuildingPlan.from_json"]], "from_jsonstring() (compas_timber.planning.buildingplan class method)": [[316, "compas_timber.planning.BuildingPlan.from_jsonstring"]], "sha256() (compas_timber.planning.buildingplan method)": [[317, "compas_timber.planning.BuildingPlan.sha256"]], "to_json() (compas_timber.planning.buildingplan method)": [[318, "compas_timber.planning.BuildingPlan.to_json"]], "to_jsonstring() (compas_timber.planning.buildingplan method)": [[319, "compas_timber.planning.BuildingPlan.to_jsonstring"]], "validate_data() (compas_timber.planning.buildingplan class method)": [[320, "compas_timber.planning.BuildingPlan.validate_data"]], "simplesequencegenerator (class in compas_timber.planning)": [[321, "compas_timber.planning.SimpleSequenceGenerator"]], "step (class in compas_timber.planning)": [[322, "compas_timber.planning.Step"]], "tostring() (compas_timber.planning.step method)": [[323, "compas_timber.planning.Step.ToString"]], "copy() (compas_timber.planning.step method)": [[324, "compas_timber.planning.Step.copy"]], "from_json() (compas_timber.planning.step class method)": [[325, "compas_timber.planning.Step.from_json"]], "from_jsonstring() (compas_timber.planning.step class method)": [[326, "compas_timber.planning.Step.from_jsonstring"]], "sha256() (compas_timber.planning.step method)": [[327, "compas_timber.planning.Step.sha256"]], "to_json() (compas_timber.planning.step method)": [[328, "compas_timber.planning.Step.to_json"]], "to_jsonstring() (compas_timber.planning.step method)": [[329, "compas_timber.planning.Step.to_jsonstring"]], "transform() (compas_timber.planning.step method)": [[330, "compas_timber.planning.Step.transform"]], "validate_data() (compas_timber.planning.step class method)": [[331, "compas_timber.planning.Step.validate_data"]], "find_neighboring_beams() (in module compas_timber.rhino)": [[332, "compas_timber.rhino.find_neighboring_beams"]]}})