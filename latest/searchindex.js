Search.setIndex({"docnames": ["api", "api/compas_timber.assembly", "api/compas_timber.connections", "api/compas_timber.consumers", "api/compas_timber.fabrication", "api/compas_timber.parts", "api/compas_timber.planning", "api/compas_timber.rhino", "api/generated/compas_timber.assembly.TimberAssembly", "api/generated/compas_timber.assembly.TimberAssembly.ToString", "api/generated/compas_timber.assembly.TimberAssembly.add_beam", "api/generated/compas_timber.assembly.TimberAssembly.add_connection", "api/generated/compas_timber.assembly.TimberAssembly.add_joint", "api/generated/compas_timber.assembly.TimberAssembly.add_part", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined", "api/generated/compas_timber.assembly.TimberAssembly.connections", "api/generated/compas_timber.assembly.TimberAssembly.contains", "api/generated/compas_timber.assembly.TimberAssembly.copy", "api/generated/compas_timber.assembly.TimberAssembly.delete_connection", "api/generated/compas_timber.assembly.TimberAssembly.delete_part", "api/generated/compas_timber.assembly.TimberAssembly.find", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key", "api/generated/compas_timber.assembly.TimberAssembly.from_json", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.parts", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint", "api/generated/compas_timber.assembly.TimberAssembly.set_topologies", "api/generated/compas_timber.assembly.TimberAssembly.sha256", "api/generated/compas_timber.assembly.TimberAssembly.to_json", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.transform", "api/generated/compas_timber.assembly.TimberAssembly.transform_numpy", "api/generated/compas_timber.assembly.TimberAssembly.transformed", "api/generated/compas_timber.assembly.TimberAssembly.transformed_numpy", "api/generated/compas_timber.assembly.TimberAssembly.validate_data", "api/generated/compas_timber.connections.BeamJoinningError", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.from_jsonstring", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.to_jsonstring", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring", "api/generated/compas_timber.connections.LButtJoint.get_cross_cutting_plane", "api/generated/compas_timber.connections.LButtJoint.get_main_cutting_plane", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring", "api/generated/compas_timber.connections.TButtJoint.get_cutting_plane", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.XHalfLapJoint", "api/generated/compas_timber.connections.XHalfLapJoint.ToString", "api/generated/compas_timber.connections.XHalfLapJoint.add_features", "api/generated/compas_timber.connections.XHalfLapJoint.copy", "api/generated/compas_timber.connections.XHalfLapJoint.create", "api/generated/compas_timber.connections.XHalfLapJoint.from_json", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.XHalfLapJoint.sha256", "api/generated/compas_timber.connections.XHalfLapJoint.to_json", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data", "api/generated/compas_timber.connections.find_neighboring_beams", "api/generated/compas_timber.consumers.BrepGeometryConsumer", "api/generated/compas_timber.fabrication.BTLx", "api/generated/compas_timber.fabrication.BTLx.btlx_string", "api/generated/compas_timber.fabrication.BTLx.process_assembly", "api/generated/compas_timber.fabrication.BTLx.register_joint", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints", "api/generated/compas_timber.fabrication.BTLxJackCut", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process", "api/generated/compas_timber.fabrication.BTLxProcess", "api/generated/compas_timber.fabrication.FrenchRidgeFactory", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings", "api/generated/compas_timber.fabrication.LButtFactory", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings", "api/generated/compas_timber.fabrication.LMiterFactory", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings", "api/generated/compas_timber.fabrication.TButtFactory", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings", "api/generated/compas_timber.parts.Beam", "api/generated/compas_timber.parts.Beam.ToString", "api/generated/compas_timber.parts.Beam.add_blank_extension", "api/generated/compas_timber.parts.Beam.add_feature", "api/generated/compas_timber.parts.Beam.add_features", "api/generated/compas_timber.parts.Beam.align_z", "api/generated/compas_timber.parts.Beam.clear_features", "api/generated/compas_timber.parts.Beam.copy", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point", "api/generated/compas_timber.parts.Beam.extension_to_plane", "api/generated/compas_timber.parts.Beam.from_centerline", "api/generated/compas_timber.parts.Beam.from_endpoints", "api/generated/compas_timber.parts.Beam.from_json", "api/generated/compas_timber.parts.Beam.from_jsonstring", "api/generated/compas_timber.parts.Beam.get_geometry", "api/generated/compas_timber.parts.Beam.remove_blank_extension", "api/generated/compas_timber.parts.Beam.remove_features", "api/generated/compas_timber.parts.Beam.sha256", "api/generated/compas_timber.parts.Beam.to_json", "api/generated/compas_timber.parts.Beam.to_jsonstring", "api/generated/compas_timber.parts.Beam.transform", "api/generated/compas_timber.parts.Beam.transform_numpy", "api/generated/compas_timber.parts.Beam.transformed", "api/generated/compas_timber.parts.Beam.transformed_numpy", "api/generated/compas_timber.parts.Beam.validate_data", "api/generated/compas_timber.planning.Actor", "api/generated/compas_timber.planning.Actor.get_name", "api/generated/compas_timber.planning.BuildingPlan", "api/generated/compas_timber.planning.BuildingPlan.ToString", "api/generated/compas_timber.planning.BuildingPlan.add_step", "api/generated/compas_timber.planning.BuildingPlan.copy", "api/generated/compas_timber.planning.BuildingPlan.from_json", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.sha256", "api/generated/compas_timber.planning.BuildingPlan.to_json", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.validate_data", "api/generated/compas_timber.planning.SimpleSequenceGenerator", "api/generated/compas_timber.planning.Step", "api/generated/compas_timber.planning.Step.ToString", "api/generated/compas_timber.planning.Step.copy", "api/generated/compas_timber.planning.Step.from_json", "api/generated/compas_timber.planning.Step.from_jsonstring", "api/generated/compas_timber.planning.Step.sha256", "api/generated/compas_timber.planning.Step.to_json", "api/generated/compas_timber.planning.Step.to_jsonstring", "api/generated/compas_timber.planning.Step.transform", "api/generated/compas_timber.planning.Step.validate_data", "api/generated/compas_timber.rhino.find_neighboring_beams", "citing", "examples", "examples/create_joint", "index", "installation", "license", "tutorials", "tutorials/BTLx_contribution_guide", "tutorials/grasshopper/assembly", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beam", "tutorials/grasshopper/examples", "tutorials/grasshopper/features", "tutorials/grasshopper/joints", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "filenames": ["api.rst", "api/compas_timber.assembly.rst", "api/compas_timber.connections.rst", "api/compas_timber.consumers.rst", "api/compas_timber.fabrication.rst", "api/compas_timber.parts.rst", "api/compas_timber.planning.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.assembly.TimberAssembly.rst", "api/generated/compas_timber.assembly.TimberAssembly.ToString.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_beam.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined.rst", "api/generated/compas_timber.assembly.TimberAssembly.connections.rst", "api/generated/compas_timber.assembly.TimberAssembly.contains.rst", "api/generated/compas_timber.assembly.TimberAssembly.copy.rst", "api/generated/compas_timber.assembly.TimberAssembly.delete_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.delete_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.find.rst", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.parts.rst", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.set_topologies.rst", "api/generated/compas_timber.assembly.TimberAssembly.sha256.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.transform.rst", "api/generated/compas_timber.assembly.TimberAssembly.transform_numpy.rst", "api/generated/compas_timber.assembly.TimberAssembly.transformed.rst", "api/generated/compas_timber.assembly.TimberAssembly.transformed_numpy.rst", "api/generated/compas_timber.assembly.TimberAssembly.validate_data.rst", "api/generated/compas_timber.connections.BeamJoinningError.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.from_json.rst", "api/generated/compas_timber.connections.Joint.from_jsonstring.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_json.rst", "api/generated/compas_timber.connections.Joint.to_jsonstring.rst", "api/generated/compas_timber.connections.Joint.validate_data.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.from_json.rst", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.get_cross_cutting_plane.rst", "api/generated/compas_timber.connections.LButtJoint.get_main_cutting_plane.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.to_json.rst", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.validate_data.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.from_json.rst", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_json.rst", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_data.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.from_json.rst", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.get_cutting_plane.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.to_json.rst", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.validate_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.rst", "api/generated/compas_timber.connections.XHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.XHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.XHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.XHalfLapJoint.create.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.XHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.find_neighboring_beams.rst", "api/generated/compas_timber.consumers.BrepGeometryConsumer.rst", "api/generated/compas_timber.fabrication.BTLx.rst", "api/generated/compas_timber.fabrication.BTLx.btlx_string.rst", "api/generated/compas_timber.fabrication.BTLx.process_assembly.rst", "api/generated/compas_timber.fabrication.BTLx.register_joint.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process.rst", "api/generated/compas_timber.fabrication.BTLxProcess.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LButtFactory.rst", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LMiterFactory.rst", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.TButtFactory.rst", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings.rst", "api/generated/compas_timber.parts.Beam.rst", "api/generated/compas_timber.parts.Beam.ToString.rst", "api/generated/compas_timber.parts.Beam.add_blank_extension.rst", "api/generated/compas_timber.parts.Beam.add_feature.rst", "api/generated/compas_timber.parts.Beam.add_features.rst", "api/generated/compas_timber.parts.Beam.align_z.rst", "api/generated/compas_timber.parts.Beam.clear_features.rst", "api/generated/compas_timber.parts.Beam.copy.rst", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.parts.Beam.extension_to_plane.rst", "api/generated/compas_timber.parts.Beam.from_centerline.rst", "api/generated/compas_timber.parts.Beam.from_endpoints.rst", "api/generated/compas_timber.parts.Beam.from_json.rst", "api/generated/compas_timber.parts.Beam.from_jsonstring.rst", "api/generated/compas_timber.parts.Beam.get_geometry.rst", "api/generated/compas_timber.parts.Beam.remove_blank_extension.rst", "api/generated/compas_timber.parts.Beam.remove_features.rst", "api/generated/compas_timber.parts.Beam.sha256.rst", "api/generated/compas_timber.parts.Beam.to_json.rst", "api/generated/compas_timber.parts.Beam.to_jsonstring.rst", "api/generated/compas_timber.parts.Beam.transform.rst", "api/generated/compas_timber.parts.Beam.transform_numpy.rst", "api/generated/compas_timber.parts.Beam.transformed.rst", "api/generated/compas_timber.parts.Beam.transformed_numpy.rst", "api/generated/compas_timber.parts.Beam.validate_data.rst", "api/generated/compas_timber.planning.Actor.rst", "api/generated/compas_timber.planning.Actor.get_name.rst", "api/generated/compas_timber.planning.BuildingPlan.rst", "api/generated/compas_timber.planning.BuildingPlan.ToString.rst", "api/generated/compas_timber.planning.BuildingPlan.add_step.rst", "api/generated/compas_timber.planning.BuildingPlan.copy.rst", "api/generated/compas_timber.planning.BuildingPlan.from_json.rst", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.sha256.rst", "api/generated/compas_timber.planning.BuildingPlan.to_json.rst", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.validate_data.rst", "api/generated/compas_timber.planning.SimpleSequenceGenerator.rst", "api/generated/compas_timber.planning.Step.rst", "api/generated/compas_timber.planning.Step.ToString.rst", "api/generated/compas_timber.planning.Step.copy.rst", "api/generated/compas_timber.planning.Step.from_json.rst", "api/generated/compas_timber.planning.Step.from_jsonstring.rst", "api/generated/compas_timber.planning.Step.sha256.rst", "api/generated/compas_timber.planning.Step.to_json.rst", "api/generated/compas_timber.planning.Step.to_jsonstring.rst", "api/generated/compas_timber.planning.Step.transform.rst", "api/generated/compas_timber.planning.Step.validate_data.rst", "api/generated/compas_timber.rhino.find_neighboring_beams.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "license.rst", "tutorials.rst", "tutorials/BTLx_contribution_guide.rst", "tutorials/grasshopper/assembly.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beam.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joints.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "titles": ["API Reference", "compas_timber.assembly", "compas_timber.connections", "compas_timber.consumers", "compas_timber.fabrication", "compas_timber.parts", "compas_timber.planning", "rhino", "TimberAssembly", "TimberAssembly.ToString", "TimberAssembly.add_beam", "TimberAssembly.add_connection", "TimberAssembly.add_joint", "TimberAssembly.add_part", "TimberAssembly.are_parts_joined", "TimberAssembly.connections", "TimberAssembly.contains", "TimberAssembly.copy", "TimberAssembly.delete_connection", "TimberAssembly.delete_part", "TimberAssembly.find", "TimberAssembly.find_by_key", "TimberAssembly.from_json", "TimberAssembly.from_jsonstring", "TimberAssembly.parts", "TimberAssembly.remove_joint", "TimberAssembly.set_topologies", "TimberAssembly.sha256", "TimberAssembly.to_json", "TimberAssembly.to_jsonstring", "TimberAssembly.transform", "TimberAssembly.transform_numpy", "TimberAssembly.transformed", "TimberAssembly.transformed_numpy", "TimberAssembly.validate_data", "BeamJoinningError", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "Joint", "Joint.ToString", "Joint.add_features", "Joint.copy", "Joint.create", "Joint.from_json", "Joint.from_jsonstring", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_json", "Joint.to_jsonstring", "Joint.validate_data", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_features", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.from_json", "LButtJoint.from_jsonstring", "LButtJoint.get_cross_cutting_plane", "LButtJoint.get_main_cutting_plane", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.to_json", "LButtJoint.to_jsonstring", "LButtJoint.validate_data", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_features", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.from_json", "LMiterJoint.from_jsonstring", "LMiterJoint.get_cutting_planes", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_json", "LMiterJoint.to_jsonstring", "LMiterJoint.validate_data", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_features", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.from_json", "TButtJoint.from_jsonstring", "TButtJoint.get_cutting_plane", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.to_json", "TButtJoint.to_jsonstring", "TButtJoint.validate_data", "XHalfLapJoint", "XHalfLapJoint.ToString", "XHalfLapJoint.add_features", "XHalfLapJoint.copy", "XHalfLapJoint.create", "XHalfLapJoint.from_json", "XHalfLapJoint.from_jsonstring", "XHalfLapJoint.get_cross_cutting_frame", "XHalfLapJoint.get_main_cutting_frame", "XHalfLapJoint.restore_beams_from_keys", "XHalfLapJoint.sha256", "XHalfLapJoint.to_json", "XHalfLapJoint.to_jsonstring", "XHalfLapJoint.validate_data", "find_neighboring_beams", "BrepGeometryConsumer", "BTLx", "BTLx.btlx_string", "BTLx.process_assembly", "BTLx.register_joint", "BTLxFrenchRidgeLap", "BTLxFrenchRidgeLap.create_process", "BTLxFrenchRidgeLap.get_params", "BTLxFrenchRidgeLap.process_joints", "BTLxJackCut", "BTLxJackCut.create_process", "BTLxJackCut.generate_process", "BTLxProcess", "FrenchRidgeFactory", "FrenchRidgeFactory.apply_processings", "LButtFactory", "LButtFactory.apply_processings", "LMiterFactory", "LMiterFactory.apply_processings", "TButtFactory", "TButtFactory.apply_processings", "Beam", "Beam.ToString", "Beam.add_blank_extension", "Beam.add_feature", "Beam.add_features", "Beam.align_z", "Beam.clear_features", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_endpoints", "Beam.from_json", "Beam.from_jsonstring", "Beam.get_geometry", "Beam.remove_blank_extension", "Beam.remove_features", "Beam.sha256", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transform_numpy", "Beam.transformed", "Beam.transformed_numpy", "Beam.validate_data", "Actor", "Actor.get_name", "BuildingPlan", "BuildingPlan.ToString", "BuildingPlan.add_step", "BuildingPlan.copy", "BuildingPlan.from_json", "BuildingPlan.from_jsonstring", "BuildingPlan.sha256", "BuildingPlan.to_json", "BuildingPlan.to_jsonstring", "BuildingPlan.validate_data", "SimpleSequenceGenerator", "Step", "Step.ToString", "Step.copy", "Step.from_json", "Step.from_jsonstring", "Step.sha256", "Step.to_json", "Step.to_jsonstring", "Step.transform", "Step.validate_data", "find_neighboring_beams", "Citing", "Examples", "Create Joint", "COMPAS TIMBER", "Installation", "License", "Grasshopper plugin", "BTLx Contribution Guide", "Assembly", "Attributes", "Beam", "Examples", "Features", "Joints", "Show", "Utils", "Workflow"], "terms": {"compas_timb": [0, 8, 35, 36, 39, 43, 46, 51, 53, 57, 67, 71, 80, 84, 93, 97, 107, 108, 109, 112, 113, 117, 120, 121, 123, 125, 127, 129, 154, 156, 166, 167, 177, 178, 181, 182], "assembli": [0, 8, 10, 11, 12, 13, 16, 19, 20, 21, 24, 25, 43, 46, 53, 57, 62, 67, 71, 75, 80, 84, 88, 93, 97, 102, 108, 109, 111, 132, 154, 166, 180, 181, 184, 191, 192, 194], "part": [0, 8, 11, 12, 13, 14, 15, 18, 19, 20, 21, 46, 109, 111, 113, 114, 117, 118, 122, 124, 126, 128, 129, 132, 143, 177, 181, 185, 188, 190, 192], "connect": [0, 9, 11, 18, 35, 36, 39, 40, 43, 46, 51, 53, 54, 57, 67, 68, 71, 80, 81, 84, 93, 94, 97, 107, 122, 124, 126, 128, 130, 157, 168, 181, 183, 186, 191], "consum": [0, 108, 181], "fabric": [0, 109, 112, 113, 116, 117, 120, 121, 123, 125, 127, 178, 181], "plan": [0, 154, 156, 166, 167, 181], "rhino": [0, 9, 40, 54, 68, 81, 94, 107, 130, 157, 168, 177, 179, 181, 182, 187, 188, 193], "The": [7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 39, 42, 43, 44, 45, 48, 49, 50, 53, 56, 57, 58, 59, 64, 65, 66, 67, 70, 71, 72, 73, 77, 78, 79, 80, 83, 84, 85, 86, 90, 91, 92, 93, 96, 97, 98, 99, 104, 105, 106, 107, 108, 109, 112, 113, 117, 120, 122, 124, 126, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 159, 160, 161, 163, 164, 165, 169, 170, 171, 173, 174, 176, 177, 183, 184, 187, 188, 190, 191, 193, 194], "modul": [7, 120, 181, 185], "contain": [7, 8, 22, 23, 37, 43, 44, 45, 57, 58, 59, 71, 72, 73, 84, 85, 86, 97, 98, 99, 107, 129, 141, 142, 156, 160, 161, 167, 170, 171, 177], "function": [7, 107, 120, 184, 185], "type": [7, 9, 17, 22, 23, 34, 38, 40, 42, 44, 45, 50, 53, 54, 56, 58, 59, 66, 67, 68, 70, 72, 73, 79, 80, 81, 83, 85, 86, 92, 93, 94, 96, 98, 99, 106, 108, 112, 113, 116, 120, 130, 136, 141, 142, 143, 153, 154, 157, 159, 160, 161, 165, 167, 168, 169, 170, 171, 176, 181, 185, 191, 192], "meant": 7, "us": [7, 9, 27, 30, 31, 32, 33, 34, 37, 38, 39, 40, 47, 50, 52, 53, 54, 63, 66, 67, 68, 76, 79, 80, 81, 89, 92, 93, 94, 103, 106, 107, 109, 116, 130, 134, 138, 146, 149, 150, 151, 152, 153, 155, 157, 162, 165, 167, 168, 172, 176, 177, 178, 181, 183, 184, 185, 186, 187, 188, 191, 193], "context": [7, 13], "class": [8, 9, 12, 16, 36, 39, 40, 51, 53, 54, 67, 68, 80, 81, 93, 94, 108, 109, 112, 113, 117, 120, 121, 123, 125, 127, 129, 130, 154, 156, 157, 166, 167, 168, 181, 185], "sourc": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 187, 188], "base": [8, 35, 36, 39, 51, 53, 67, 80, 93, 108, 109, 113, 117, 120, 121, 123, 125, 127, 129, 154, 156, 166, 167, 186, 191, 194], "repres": [8, 53, 67, 80, 93, 109, 113, 117, 129, 154, 188], "timber": [8, 109, 117, 129, 178, 184, 188, 191, 194], "beam": [8, 10, 12, 35, 36, 37, 38, 39, 41, 43, 46, 53, 55, 57, 62, 67, 69, 71, 75, 80, 82, 84, 88, 93, 95, 97, 102, 107, 108, 113, 117, 177, 180, 181, 184, 186, 187, 190, 191, 192, 193, 194], "joint": [8, 12, 14, 25, 35, 36, 51, 53, 55, 57, 67, 69, 71, 80, 82, 84, 93, 95, 97, 109, 112, 113, 114, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 144, 179, 181, 184, 185, 186, 188, 192, 194], "etc": [8, 109, 110, 129, 179, 181, 188], "attribut": [8, 11, 15, 39, 51, 53, 67, 80, 93, 108, 109, 113, 120, 129, 166, 167, 181, 184, 185, 188], "list": [8, 12, 14, 37, 39, 43, 53, 57, 67, 71, 80, 84, 93, 97, 107, 109, 120, 129, 133, 137, 145, 167, 177, 185, 191, 194], "A": [8, 20, 37, 43, 53, 57, 67, 71, 80, 84, 93, 97, 107, 108, 109, 122, 124, 126, 128, 129, 139, 140, 178, 183, 188], "assign": [8, 13, 20, 191, 193], "thi": [8, 9, 10, 16, 17, 20, 22, 23, 25, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 50, 53, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 70, 71, 72, 73, 79, 80, 81, 82, 83, 84, 85, 86, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 113, 115, 116, 119, 120, 122, 124, 126, 128, 129, 130, 131, 132, 136, 138, 141, 142, 144, 151, 152, 153, 157, 159, 160, 161, 165, 167, 168, 169, 170, 171, 176, 177, 179, 183, 185, 187, 188, 192, 194], "part_kei": 8, "int": [8, 10, 11, 12, 13, 15, 21, 52, 113, 131, 144, 155, 167], "kei": [8, 10, 13, 21, 46, 93, 122, 124, 126, 128, 131, 144, 187], "includ": [8, 143, 183, 185], "beam_kei": 8, "joint_kei": [8, 131, 144], "topologi": [8, 26, 36, 38, 43, 51, 52, 53, 57, 67, 71, 80, 84, 93, 97], "dict": [8, 11, 13, 15, 39, 108, 109, 113, 116, 120, 122, 124, 126, 128, 185], "jointtopologi": [8, 38, 181], "i": [8, 13, 14, 15, 20, 22, 23, 34, 37, 38, 39, 43, 44, 45, 46, 50, 53, 55, 57, 58, 59, 66, 67, 69, 71, 72, 73, 79, 80, 82, 84, 85, 86, 92, 93, 97, 98, 99, 106, 107, 109, 113, 115, 116, 119, 129, 131, 132, 137, 138, 141, 142, 153, 156, 160, 161, 165, 166, 170, 171, 176, 178, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193], "detected_topo": 8, "beam_a_kei": 8, "beam_b_kei": 8, "see": [8, 46, 184, 188, 189, 193], "method": [8, 9, 36, 38, 39, 40, 43, 46, 51, 53, 54, 55, 57, 67, 68, 69, 71, 80, 81, 82, 84, 93, 94, 97, 109, 113, 115, 117, 119, 121, 123, 125, 127, 129, 130, 154, 156, 157, 167, 168, 181, 185], "inherit": [8, 39, 53, 67, 80, 93, 129, 156, 167, 181, 185], "convert": [9, 28, 29, 40, 48, 49, 54, 64, 65, 68, 77, 78, 81, 90, 91, 94, 104, 105, 130, 147, 148, 157, 163, 164, 168, 173, 174], "instanc": [9, 12, 22, 23, 40, 43, 44, 45, 53, 54, 57, 58, 59, 67, 68, 71, 72, 73, 80, 81, 84, 85, 86, 93, 94, 97, 98, 99, 120, 130, 141, 142, 157, 160, 161, 168, 170, 171, 179, 185], "string": [9, 23, 29, 40, 45, 49, 52, 53, 54, 59, 65, 67, 68, 73, 78, 80, 81, 86, 91, 93, 94, 99, 105, 109, 110, 130, 142, 148, 155, 157, 161, 164, 168, 171, 174, 187, 188], "exist": [9, 40, 54, 68, 81, 94, 130, 157, 168, 185], "net": [9, 40, 54, 68, 81, 94, 130, 157, 168], "compat": [9, 40, 53, 54, 67, 68, 80, 81, 93, 94, 107, 130, 157, 168], "when": [9, 20, 37, 40, 54, 55, 68, 69, 81, 82, 94, 130, 131, 157, 168, 187, 191], "ironpython": [9, 40, 54, 68, 81, 94, 130, 157, 168], "implicit": [9, 40, 54, 68, 81, 94, 130, 157, 168], "convers": [9, 40, 54, 68, 81, 94, 130, 157, 168], "usual": [9, 40, 54, 68, 81, 94, 129, 130, 157, 168], "take": [9, 40, 54, 68, 81, 94, 130, 157, 168, 185, 194], "place": [9, 40, 54, 68, 81, 94, 130, 157, 168], "cpython": [9, 40, 54, 68, 81, 94, 130, 157, 168], "kick": [9, 40, 54, 68, 81, 94, 130, 157, 168], "its": [9, 15, 20, 21, 28, 29, 40, 48, 49, 54, 64, 65, 68, 77, 78, 81, 90, 91, 94, 104, 105, 112, 124, 128, 130, 139, 147, 148, 157, 163, 164, 168, 173, 174, 182, 187, 188, 191], "default": [9, 13, 17, 28, 29, 40, 42, 48, 49, 54, 56, 64, 65, 68, 70, 77, 78, 81, 83, 90, 91, 93, 94, 96, 104, 105, 117, 130, 136, 139, 140, 147, 148, 157, 159, 163, 164, 168, 169, 173, 174, 181, 186, 188, 191, 193], "print": [9, 28, 29, 40, 48, 49, 54, 64, 65, 68, 77, 78, 81, 90, 91, 94, 104, 105, 130, 147, 148, 157, 163, 164, 168, 173, 174], "self": [9, 40, 54, 68, 81, 94, 120, 130, 157, 168, 185], "gettyp": [9, 40, 54, 68, 81, 94, 130, 157, 168], "fullnam": [9, 40, 54, 68, 81, 94, 130, 157, 168], "similar": [9, 40, 54, 68, 81, 94, 130, 157, 168, 191], "overrid": [9, 40, 54, 68, 81, 94, 130, 157, 168, 194], "object": [9, 12, 16, 17, 22, 23, 25, 28, 29, 34, 36, 37, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 54, 56, 57, 58, 59, 64, 65, 66, 68, 70, 71, 72, 73, 77, 78, 79, 81, 83, 84, 85, 86, 90, 91, 92, 94, 96, 97, 98, 99, 104, 105, 106, 107, 108, 109, 113, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 136, 141, 142, 143, 147, 148, 153, 154, 157, 159, 160, 161, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 176, 181, 186, 187, 188, 192, 193], "fix": [9, 40, 54, 68, 81, 94, 130, 157, 168], "make": [9, 17, 40, 42, 54, 56, 68, 70, 81, 83, 94, 96, 130, 136, 157, 159, 168, 169], "grasshopp": [9, 40, 54, 68, 81, 94, 130, 157, 168, 179, 181, 188], "displai": [9, 40, 54, 68, 81, 94, 130, 157, 168, 187, 192], "proper": [9, 40, 54, 68, 81, 94, 130, 157, 168], "represent": [9, 28, 29, 40, 48, 49, 52, 53, 54, 64, 65, 67, 68, 77, 78, 80, 81, 90, 91, 93, 94, 104, 105, 130, 147, 148, 155, 157, 163, 164, 168, 173, 174, 185], "ar": [9, 11, 20, 37, 38, 40, 43, 46, 54, 57, 68, 71, 81, 84, 94, 97, 107, 120, 130, 157, 167, 168, 179, 185, 186, 187, 190, 191, 192, 193, 194], "panel": [9, 40, 54, 68, 81, 94, 130, 157, 168], "other": [9, 12, 40, 54, 68, 81, 93, 94, 113, 130, 157, 168, 178, 183, 191, 194], "output": [9, 38, 40, 54, 68, 81, 94, 130, 157, 168, 186], "add": [10, 11, 12, 13, 18, 19, 41, 55, 69, 82, 95, 131, 132, 133, 184, 185, 186, 193], "paramet": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 56, 57, 58, 59, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 78, 79, 80, 83, 84, 85, 86, 89, 90, 91, 92, 93, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 128, 129, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 176, 177, 185, 186, 187, 188, 193], "return": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 42, 43, 44, 45, 47, 49, 50, 52, 56, 57, 58, 59, 63, 65, 66, 70, 71, 72, 73, 76, 78, 79, 83, 84, 85, 86, 89, 91, 92, 96, 97, 98, 99, 103, 105, 106, 107, 109, 110, 112, 116, 122, 124, 126, 128, 132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 148, 149, 150, 151, 152, 153, 155, 159, 160, 161, 162, 164, 165, 169, 170, 171, 172, 174, 176, 177, 186, 192], "graph": [10, 12, 13], "identifi": [10, 11, 12, 13, 15, 20, 21, 107], "ad": [10, 43, 57, 71, 84, 97, 132, 133, 177], "b": 11, "kwarg": [11, 13, 43, 57, 71, 84, 97], "between": [11, 15, 18, 67, 93, 187, 191, 194], "two": [11, 18, 35, 38, 39, 43, 53, 57, 67, 71, 84, 97, 137, 188, 191, 194], "compa": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 42, 44, 45, 47, 56, 58, 59, 63, 70, 72, 73, 76, 83, 85, 86, 89, 96, 98, 99, 103, 129, 132, 136, 141, 142, 143, 146, 159, 160, 161, 162, 167, 169, 170, 171, 172, 178, 184, 191], "datastructur": [11, 13, 18, 19, 20, 21, 24, 27, 32, 33, 47, 63, 76, 89, 103, 146, 151, 152, 162, 172], "from": [11, 19, 22, 23, 25, 27, 38, 44, 45, 47, 58, 59, 63, 72, 73, 76, 85, 86, 89, 98, 99, 103, 120, 139, 140, 141, 142, 144, 145, 146, 160, 161, 162, 170, 171, 172, 179, 181, 183, 184, 185, 187, 188, 190, 191], "str": [11, 13, 15, 20, 21, 22, 23, 27, 28, 29, 39, 44, 45, 47, 48, 49, 52, 53, 58, 59, 63, 64, 65, 67, 72, 73, 76, 77, 78, 80, 85, 86, 89, 90, 91, 93, 98, 99, 103, 104, 105, 109, 113, 117, 120, 137, 141, 142, 146, 147, 148, 155, 160, 161, 162, 163, 164, 167, 170, 171, 172, 173, 174], "ani": [11, 13, 15, 34, 50, 66, 79, 92, 106, 153, 165, 176, 179, 183, 190, 192], "option": [11, 13, 15, 17, 21, 27, 28, 29, 37, 38, 42, 47, 48, 49, 56, 63, 64, 65, 70, 76, 77, 78, 83, 89, 90, 91, 96, 103, 104, 105, 107, 117, 136, 146, 147, 148, 159, 162, 163, 164, 169, 172, 173, 174, 188, 191, 194], "compil": 11, "name": [11, 13, 117, 120, 185, 187, 191, 192], "argument": 11, "tupl": [11, 15, 38, 67, 129, 138], "node": 11, "rais": [11, 22, 23, 41, 43, 44, 45, 57, 58, 59, 71, 72, 73, 84, 85, 86, 95, 97, 98, 99, 141, 142, 160, 161, 170, 171], "assemblyerror": 11, "If": [11, 15, 22, 23, 27, 28, 29, 38, 44, 45, 47, 48, 49, 58, 59, 63, 64, 65, 72, 73, 76, 77, 78, 85, 86, 89, 90, 91, 93, 98, 99, 103, 104, 105, 132, 141, 142, 145, 146, 147, 148, 160, 161, 162, 163, 164, 170, 171, 172, 173, 174, 177, 178, 188, 191], "an": [12, 13, 17, 22, 23, 28, 29, 34, 35, 37, 42, 43, 44, 45, 48, 49, 50, 53, 56, 57, 58, 59, 64, 65, 66, 67, 70, 71, 72, 73, 77, 78, 79, 80, 83, 84, 85, 86, 90, 91, 92, 93, 96, 97, 98, 99, 104, 105, 106, 115, 119, 129, 136, 141, 142, 147, 148, 153, 154, 159, 160, 161, 163, 164, 165, 169, 170, 171, 173, 174, 176, 178, 179, 181, 182, 183, 184, 186, 187, 188, 191], "dowel": 12, "steel": 12, "plate": 12, "involv": [12, 126], "current": [12, 13, 17, 42, 56, 70, 83, 96, 136, 159, 169, 181], "none": [13, 17, 18, 19, 20, 21, 30, 31, 37, 38, 42, 56, 70, 83, 96, 107, 112, 117, 118, 122, 124, 126, 128, 131, 132, 135, 136, 139, 140, 145, 149, 150, 159, 169, 177, 188], "note": [13, 107, 178, 192], "uniqu": [13, 20], "onli": [13, 46, 132, 187], "nest": 13, "mai": [13, 186, 187], "have": [13, 43, 57, 71, 84, 97, 120, 188], "same": [13, 14, 38, 166, 167, 191, 194], "valu": [13, 52, 93, 107, 129, 155, 187], "one": [13, 93, 133, 166, 167, 185, 188, 191, 194], "which": [13, 35, 37, 38, 43, 53, 57, 67, 71, 80, 84, 93, 97, 107, 113, 120, 131, 134, 137, 138, 144, 154, 156, 167, 185, 186, 188, 191], "case": 13, "automat": [13, 20, 55, 69, 82, 191, 193], "integ": 13, "addit": [13, 15, 37, 184, 187, 188, 190], "collect": [13, 156, 177], "check": [14, 177, 181, 187], "alreadi": 14, "defin": [14, 41, 95, 113, 139, 187, 188, 191, 193, 194], "set": [14, 37, 107, 177, 186, 187, 188, 192], "bool": [14, 15, 16, 27, 28, 29, 37, 47, 48, 49, 63, 64, 65, 76, 77, 78, 89, 90, 91, 93, 103, 104, 105, 113, 132, 143, 146, 147, 148, 162, 163, 164, 167, 172, 173, 174], "data": [15, 16, 17, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 39, 42, 44, 45, 47, 48, 49, 50, 56, 58, 59, 63, 64, 65, 66, 70, 72, 73, 76, 77, 78, 79, 83, 85, 86, 89, 90, 91, 92, 96, 98, 99, 103, 104, 105, 106, 109, 136, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 156, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 176], "fals": [15, 16, 27, 28, 29, 37, 47, 48, 49, 63, 64, 65, 76, 77, 78, 89, 90, 91, 103, 104, 105, 132, 143, 146, 147, 148, 162, 163, 164, 172, 173, 174], "iter": 15, "over": 15, "true": [15, 16, 27, 28, 29, 37, 47, 48, 49, 63, 64, 65, 76, 77, 78, 89, 90, 91, 93, 103, 104, 105, 132, 138, 143, 146, 147, 148, 162, 163, 164, 172, 173, 174, 186, 188], "yield": [15, 24, 108], "next": 15, "u": 15, "v": 15, "connector": 15, "attr": [15, 120], "obj": [16, 27, 47, 63, 76, 89, 103, 146, 162, 167, 172], "given": [16, 37, 38, 43, 52, 57, 71, 84, 97, 107, 134, 137, 138, 140, 155, 187], "otherwis": [16, 38, 132, 183, 188], "look": 16, "cl": [17, 42, 56, 70, 83, 96, 136, 159, 169], "independ": [17, 42, 56, 70, 83, 96, 136, 159, 169], "edg": 18, "delet": 18, "remov": [19, 25, 131, 144, 145, 187, 190], "guid": [20, 181, 184, 188], "global": 20, "creat": [20, 39, 53, 55, 67, 69, 80, 82, 93, 112, 113, 121, 123, 125, 127, 139, 140, 179, 181, 182, 184, 185, 186, 187, 188, 191, 194], "can": [20, 21, 34, 50, 66, 79, 92, 106, 120, 143, 153, 156, 165, 167, 176, 179, 184, 185, 188, 191], "t": [20, 21, 80, 93, 127], "found": [20, 21, 185], "find": [21, 37, 107, 177, 191], "classmethod": [22, 23, 34, 37, 43, 44, 45, 50, 52, 57, 58, 59, 66, 71, 72, 73, 79, 84, 85, 86, 92, 97, 98, 99, 106, 112, 114, 118, 122, 124, 126, 128, 139, 140, 141, 142, 153, 155, 160, 161, 165, 170, 171, 176], "filepath": [22, 28, 44, 48, 58, 64, 72, 77, 85, 90, 98, 104, 141, 147, 160, 163, 170, 173], "construct": [22, 23, 34, 44, 45, 50, 58, 59, 66, 72, 73, 79, 85, 86, 92, 98, 99, 106, 141, 142, 153, 160, 161, 165, 170, 171, 176, 181], "json": [22, 23, 28, 29, 44, 45, 48, 49, 58, 59, 64, 65, 72, 73, 77, 78, 85, 86, 90, 91, 98, 99, 104, 105, 141, 142, 147, 148, 160, 161, 163, 164, 170, 171, 173, 174], "file": [22, 28, 44, 48, 58, 64, 72, 77, 85, 90, 98, 104, 109, 141, 147, 160, 163, 170, 173, 183, 185, 189], "path": [22, 28, 44, 48, 58, 64, 72, 77, 85, 90, 98, 104, 141, 147, 160, 163, 170, 173], "ha": [22, 23, 35, 44, 45, 58, 59, 72, 73, 85, 86, 98, 99, 107, 141, 142, 160, 161, 167, 170, 171, 188, 191, 192, 193], "correct": [22, 23, 44, 45, 58, 59, 72, 73, 85, 86, 98, 99, 141, 142, 160, 161, 170, 171], "schema": [22, 23, 34, 44, 45, 50, 58, 59, 66, 72, 73, 79, 85, 86, 92, 98, 99, 106, 141, 142, 153, 160, 161, 165, 170, 171, 176], "typeerror": [22, 23, 44, 45, 58, 59, 72, 73, 85, 86, 98, 99, 141, 142, 160, 161, 170, 171], "individu": [24, 120], "as_str": [27, 47, 63, 76, 89, 103, 146, 162, 172], "comput": [27, 38, 47, 63, 76, 89, 103, 146, 162, 172], "hash": [27, 47, 63, 76, 89, 103, 146, 162, 172], "comparison": [27, 47, 63, 76, 89, 103, 146, 162, 172], "dure": [27, 46, 47, 63, 76, 89, 103, 146, 162, 167, 172], "version": [27, 47, 63, 76, 89, 103, 146, 162, 172, 182], "control": [27, 47, 63, 76, 89, 103, 146, 162, 172], "algorithm": [27, 47, 63, 76, 89, 103, 107, 146, 162, 172], "digest": [27, 47, 63, 76, 89, 103, 146, 162, 172], "hexadecim": [27, 47, 63, 76, 89, 103, 146, 162, 172], "format": [27, 47, 63, 76, 89, 103, 109, 146, 162, 172, 187], "rather": [27, 47, 63, 76, 89, 103, 146, 162, 172], "than": [27, 43, 47, 57, 63, 71, 76, 84, 89, 97, 103, 146, 162, 172, 191], "byte": [27, 47, 63, 76, 89, 103, 146, 162, 172], "exampl": [27, 46, 47, 63, 76, 89, 103, 107, 146, 162, 172, 181, 184, 187, 188, 191, 194], "import": [27, 47, 63, 76, 89, 103, 146, 162, 172, 185, 194], "mesh": [27, 47, 63, 76, 89, 103, 146, 162, 172, 180], "from_obj": [27, 47, 63, 76, 89, 103, 146, 162, 172], "get": [27, 47, 63, 76, 89, 103, 146, 162, 172, 182, 184], "face": [27, 47, 63, 76, 89, 103, 113, 129, 138, 146, 162, 172], "v1": [27, 47, 63, 76, 89, 103, 146, 162, 172], "v2": [27, 47, 63, 76, 89, 103, 146, 162, 172], "vertex_attribut": [27, 47, 63, 76, 89, 103, 146, 162, 172], "vertex_sampl": [27, 47, 63, 76, 89, 103, 146, 162, 172], "1": [27, 47, 63, 76, 89, 93, 103, 129, 146, 162, 172, 180, 185, 188], "0": [27, 47, 63, 76, 89, 93, 103, 129, 146, 162, 172, 180, 188, 191], "z": [27, 47, 63, 76, 89, 103, 129, 139, 140, 146, 162, 172, 188, 190, 193], "v3": [27, 47, 63, 76, 89, 103, 146, 162, 172], "pretti": [28, 29, 48, 49, 64, 65, 77, 78, 90, 91, 104, 105, 109, 110, 147, 148, 163, 164, 173, 174], "nativ": [28, 29, 48, 49, 64, 65, 77, 78, 90, 91, 104, 105, 147, 148, 163, 164, 173, 174], "save": [28, 29, 48, 49, 62, 64, 65, 75, 77, 78, 88, 90, 91, 102, 104, 105, 147, 148, 163, 164, 173, 174], "structur": [30, 31, 32, 33, 149, 150, 151, 152, 178, 181, 184, 186, 194], "transform": [31, 33, 143, 150, 152], "copi": [32, 33, 143, 151, 152, 183], "valid": [34, 50, 66, 79, 92, 106, 153, 165, 176], "against": [34, 50, 66, 79, 92, 106, 153, 165, 176], "": [34, 41, 50, 53, 66, 67, 79, 80, 92, 93, 95, 106, 129, 134, 137, 139, 140, 143, 153, 165, 176, 187, 193], "raw": [34, 50, 66, 79, 92, 106, 153, 165, 176], "__from_data__": [34, 50, 66, 79, 92, 106, 153, 165, 176], "except": 35, "indic": [35, 113, 139, 140, 187, 188], "error": [35, 186, 187], "occur": 35, "while": 35, "try": 35, "join": [35, 39, 43, 53, 57, 67, 71, 80, 84, 93, 97, 113, 186, 191], "more": [35, 133, 181, 184, 185], "should": [35, 39, 41, 46, 93, 95, 107, 120, 131, 143, 185, 191], "calcul": [35, 41, 95], "featur": [35, 41, 55, 69, 82, 93, 95, 108, 129, 132, 133, 143, 145, 181, 184, 186, 192, 194], "appli": [35, 41, 95, 108, 113, 120, 122, 124, 126, 128, 132, 185, 186, 191, 192, 194], "provid": [36, 183, 184, 186, 188], "tool": [36, 181, 184, 188, 192, 193], "detect": 36, "intersect": [36, 37, 38, 191], "rtree": [37, 177], "max_dist": [37, 38], "pair": [37, 38, 107, 177, 187, 191, 194], "r": [37, 107, 182], "tree": [37, 107], "search": [37, 107], "neighbor": [37, 107, 177], "float": [37, 38, 93, 107, 113, 129, 131, 138, 139, 140, 177], "distanc": [37, 38, 191], "apart": 37, "non": 37, "touch": 37, "still": 37, "consid": [37, 38], "neightbor": [37, 177], "beam_a": [38, 67], "beam_b": [38, 67], "tol": 38, "1e": 38, "06": 38, "within": [38, 167], "role": [38, 46], "sensit": 38, "consist": 38, "specif": [38, 46, 120, 181, 185], "order": [38, 107, 116, 166, 194], "e": [38, 46, 179, 187, 191, 192, 193], "g": [38, 46, 179, 187], "main": [38, 46, 53, 62, 75, 80, 82, 88, 93, 102, 191], "first": [38, 67, 137, 191, 194], "cross": [38, 46, 53, 62, 75, 80, 82, 88, 93, 102, 129, 139, 140, 188, 191], "second": [38, 67, 137, 191], "thei": 38, "were": [38, 187], "input": [38, 107, 120, 184, 185, 187, 188, 191], "gener": [38, 108, 111, 115, 119, 120, 166, 185, 194], "toler": [38, 191], "mathemat": 38, "maximum": 38, "desigen": 38, "unit": [38, 107, 138], "instanti": [39, 120, 185], "directli": 39, "respect": [39, 46, 191], "implement": [39, 46, 177, 181], "instead": [39, 188], "end": [39, 53, 67, 80, 93, 113, 129, 131, 137, 138, 140, 191], "map": [39, 108, 184, 193], "ehich": 39, "each": [39, 67, 120, 138, 156, 185, 187, 191], "affect": [41, 95], "beamjoinningerror": [41, 95, 181], "whenev": [41, 95], "wa": [41, 95], "abl": [41, 95], "new": [43, 57, 71, 84, 97, 182, 185, 188], "expect": [43, 57, 71, 84, 97], "been": [43, 57, 71, 84, 97, 167], "befor": [43, 57, 71, 84, 97, 192], "call": [43, 46, 55, 57, 69, 71, 82, 84, 97, 120, 132, 185, 188, 191], "code": [43, 57, 71, 84, 97, 179, 181], "doe": [43, 57, 71, 84, 97, 185, 188, 191], "verifi": [43, 57, 71, 84, 97, 138], "adjac": [43, 57, 71, 84, 97], "lie": [43, 57, 71, 84, 97], "allow": [43, 57, 71, 84, 93, 97, 138, 167], "them": [43, 57, 67, 71, 84, 97, 120, 179, 185, 187, 191], "respons": [43, 57, 71, 84, 97], "valueerror": [43, 57, 71, 84, 97], "less": [43, 57, 71, 84, 97, 129], "assemebli": [43, 57, 71, 84, 97], "jo": [43, 57, 71, 84, 97], "belong": [43, 57, 71, 84, 97], "whould": [43, 57, 71, 84, 97], "togeth": [43, 57, 71, 84, 97, 188], "restor": 46, "refer": [46, 62, 75, 88, 102, 113, 181, 184, 185, 187, 191], "associ": [46, 53, 67, 80, 93, 113, 124, 128, 167, 183], "serial": [46, 62, 75, 88, 102], "To": [46, 182, 184, 185, 186, 191, 194], "avoid": [46, 191], "circular": 46, "store": [46, 187, 188], "de": [46, 62, 75, 88, 102], "sinc": 46, "concret": 46, "tbuttjoint": [46, 180, 181], "enumer": 51, "possibl": [51, 187], "topo_unknown": [51, 52], "topo_i": 51, "topo_l": [51, 52], "topo_t": [51, 52], "topo_x": [51, 52], "For": [52, 107, 155, 181, 193, 194], "log": [52, 155, 186], "One": [52, 155, 167], "l": [53, 67, 123, 125, 126], "butt": [53, 80, 123, 127], "trim": [53, 55, 67, 69, 80, 82, 93, 186, 190, 191], "pleas": [53, 67, 80, 93, 178], "properli": [53, 67, 80, 93], "timberassembli": [53, 67, 80, 166, 180, 181], "main_beam": [53, 80, 93, 180], "cross_beam": [53, 80, 93, 180], "cutting_plane_main": [53, 80], "frame": [53, 67, 80, 113, 117, 118, 129, 167, 180, 181, 184, 186, 194], "cutting_plane_cross": [53, 80], "joint_typ": [53, 67, 80, 93, 112], "requir": [55, 69, 116, 120, 131, 144, 182], "extens": [55, 69, 131, 138, 144], "both": [55, 69], "assemli": [62, 75, 102], "after": [62, 75, 88, 102, 108], "resotr": [62, 75, 88, 102], "miter": [67, 125, 126], "plane": [67, 82, 117, 138, 188, 190, 193], "bisector": [67, 191], "angl": [67, 113, 191], "centerlin": [67, 129, 137, 139, 140, 184, 187, 188, 191, 193], "cutting_plan": 67, "normal": [67, 129], "point": [67, 129, 137, 140, 181, 193], "opposit": 67, "direct": [67, 129, 138, 139, 140, 177, 188], "along": [80, 93, 129, 191], "length": [80, 93, 129, 139, 191], "anoth": [80, 93], "lapjoint": 93, "x": [93, 129, 188, 191, 193], "lap": [93, 113], "flip_lap_sid": 93, "flip": 93, "side": [93, 129, 190, 191], "cut_plane_bia": 93, "shift": 93, "deeper": 93, "without": [93, 183], "complet": 93, "cut": [93, 117, 184, 186, 190, 191], "through": [93, 138, 178], "either": [93, 137], "5": [93, 129], "main_beam_kei": 93, "cross_beam_kei": 93, "inflate_bi": [107, 177], "axi": [107, 129, 139, 140, 188, 193], "align": [107, 129, 134, 184, 193], "bound": [107, 129, 177], "box": [107, 129, 167, 177, 184, 192], "aabb": [107, 129], "enlarg": 107, "amount": [107, 131, 138, 177], "element": [107, 120, 137, 166, 167], "design": [107, 178, 181, 184, 187, 188], "regard": 107, "inflat": [107, 177], "pluggabl": 107, "In": [107, 181, 182, 191], "plugin": [107, 181, 188], "avail": [107, 143], "result": [108, 137, 166, 191], "geometri": [108, 129, 143, 167, 177, 181, 184, 186, 188, 190, 192, 193, 194], "feature_map": 108, "featureappl": 108, "applic": 108, "beamgeometri": 108, "process": [108, 111, 113, 115, 116, 117, 119, 120, 122, 124, 126, 128, 181, 184, 185, 194], "histori": 109, "btlx_string": 109, "xml": [109, 110], "visual": [109, 110, 156, 167, 179, 186], "gh": [109, 110], "termin": [109, 110], "dictionari": [109, 122, 124, 126, 128], "btlxpart": [109, 113, 117, 120, 122, 124, 126, 128, 185], "joint_factori": [112, 120, 185], "regist": 112, "correspond": [112, 129, 137, 187, 188, 193], "factori": [112, 120, 121, 123, 125, 127, 185], "jointfactori": 112, "french": [113, 121], "ridg": [113, 121], "is_top": [113, 114], "flag": 113, "top": [113, 184], "bottom": 113, "process_typ": [113, 120, 185], "frenchridgelap": 113, "other_beam": 113, "orient": [113, 139, 140, 193], "drill_hole_diamet": 113, "diamet": 113, "drill": 113, "hole": [113, 184], "ref_face_index": 113, "index": [113, 181, 192], "ref_fac": 113, "surfac": [113, 185], "header_attribut": [113, 120, 185], "header": 113, "process_paramet": [113, 120], "geometr": [113, 116, 120, 181, 185, 186, 190], "btlx": [113, 120, 181, 184], "degre": 113, "intern": [115, 119], "properti": 116, "all": [116, 138, 143, 145, 177, 183, 187], "It": [116, 181, 184, 186, 187, 188, 193], "ordereddict": 116, "maintain": [116, 181], "origin": [116, 129, 188, 192, 193], "jack": 117, "joint_nam": [117, 118], "append": [120, 185], "btlx_process": [120, 185], "eg": 120, "btlxjackcut": [120, 181], "match": [120, 185], "describ": [120, 185], "deriv": [120, 185], "relat": [120, 185], "some": [120, 184, 193], "combin": 120, "multipl": [120, 179, 185], "cover": 120, "register_joint": [120, 185], "so": [120, 183, 185], "typic": [120, 167, 185], "need": [120, 134, 185, 187, 194], "param": 120, "et_el": 120, "et": 120, "stud": [129, 188], "slat": 129, "rectangular": [129, 188], "section": [129, 139, 140, 179, 184, 188], "local": [129, 188, 192], "coordin": [129, 188, 192], "system": [129, 188, 192], "locat": [129, 167, 188], "start": [129, 131, 137, 138, 140, 184, 188], "major": [129, 188], "also": [129, 132, 178, 181, 184, 187, 188], "fibr": [129, 184], "solid": [129, 186], "wood": 129, "y": [129, 188, 193], "width": [129, 139, 140, 180, 187, 188], "smaller": [129, 188], "dimens": [129, 188], "height": [129, 139, 140, 180, 187, 188], "larger": [129, 188], "shape": [129, 188], "parametr": [129, 181], "blank": [129, 131, 144], "materi": [129, 193], "stock": 129, "produc": 129, "6": 129, "equal": 129, "posit": [129, 190, 191], "2": [129, 180, 185], "3": [129, 182, 185], "4": [129, 180, 185], "line": [129, 139, 181, 187, 188], "centerline_start": 129, "centerline_end": 129, "xmin": 129, "ymin": 129, "zmin": 129, "xmax": 129, "ymax": 129, "zmax": 129, "long_edg": 129, "long": [129, 138], "midpoint": 129, "middl": 129, "extend": [131, 138], "well": 131, "user": [132, 187], "must": 132, "apply_featur": 132, "vector": [134, 139, 140, 181, 188], "z_axi": 134, "definit": [134, 185, 186], "todo": [134, 138], "Not": 134, "anywher": 134, "features_to_clear": 135, "endpoint": [137, 140], "closer": 137, "interest": 137, "depend": [137, 139, 140, 182, 185, 192], "actual": 137, "pln": 138, "metric": 138, "minimum": 138, "pass": 138, "z_vector": [139, 140], "worldz": [139, 140], "worldx": [139, 140], "point_start": 140, "point_end": 140, "end_point": 140, "with_featur": 143, "drawn": [143, 188], "scene": 143, "enum": 154, "could": 154, "execut": [154, 167, 179], "instruct": [154, 156, 167], "human": [155, 167], "robot": [155, 167], "build": [156, 166, 167, 194], "step": [156, 158, 166, 181, 185], "simpl": [166, 181, 184], "sequenc": [166, 181], "per": 166, "buildingplan": [166, 181], "assembl": 167, "singl": [167, 185], "actor": [167, 181], "element_id": 167, "cad": [167, 179], "id": [167, 179], "elements_held": 167, "held": 167, "support": [167, 178, 179], "is_built": 167, "whether": [167, 183, 192], "is_plan": 167, "increment": 167, "cylind": 167, "prioriti": 167, "parallel": [167, 188], "prior": 177, "research": [178, 181, 183], "project": [178, 181], "develop": [178, 181], "aleksandra": 178, "apolinarska": 178, "chen": 178, "kasir": 178, "gonzalo": 178, "casa": 178, "gramazio": [178, 181, 183], "kohler": [178, 181, 183], "eth": [178, 181], "zurich": [178, 181], "swiss": 178, "nation": 178, "scienc": 178, "foundat": 178, "center": 178, "compet": 178, "digit": 178, "nccr": 178, "dfab": 178, "programm": 178, "As": 178, "open": [178, 181], "mani": [178, 179, 181], "contributor": 178, "you": [178, 184, 188, 191, 194], "your": 178, "work": 178, "acknowledg": 178, "misc": 178, "titl": 178, "librari": [178, 179, 181, 184], "author": [178, 183], "anna": 178, "http": [178, 182, 185], "github": [178, 182], "com": [178, 182, 185], "gramaziokohl": 178, "year": 178, "2022": 178, "2023": 178, "doi": 178, "10": [178, 182], "5281": 178, "zenodo": 178, "7934267": 178, "url": 178, "present": 179, "differ": [179, 185, 191, 194], "concept": [179, 184], "There": [179, 187], "wai": 179, "run": [179, 181], "python": [179, 181, 182, 184], "environ": [179, 181, 182], "interact": 179, "session": 179, "text": 179, "editor": 179, "sublim": 179, "studio": 179, "eclips": 179, "insid": 179, "blender": 179, "worldxi": 180, "depth": 180, "geometry_typ": 180, "add_beam": 180, "packag": [181, 182, 185], "model": 181, "written": 181, "ecosystem": 181, "rhinocero": 181, "3d": 181, "plug": 181, "activ": [181, 182, 186, 188, 193], "being": 181, "continu": 181, "At": 181, "stage": 181, "encompass": 181, "fast": 181, "intuit": 181, "custom": [181, 187], "entiti": 181, "semant": 181, "inform": [181, 193], "about": 181, "futur": 181, "expand": 181, "entail": [181, 187], "interfac": 181, "analysi": 181, "softwar": [181, 183], "specialist": 181, "built": [181, 184], "upon": 181, "framework": 181, "basic": 181, "like": [181, 184, 186], "complex": 181, "brep": [181, 186, 190, 192, 193], "resolv": 181, "backend": 181, "rhinocommon": 181, "sdk": 181, "handl": 181, "opencascad": 181, "via": 181, "occ": 181, "introduct": 181, "instal": 181, "api": [181, 184], "lbuttjoint": 181, "lmiterjoint": 181, "xhalflapjoint": 181, "connectionsolv": 181, "find_neighboring_beam": 181, "brepgeometryconsum": 181, "btlxprocess": [181, 185], "btlxfrenchridgelap": 181, "lbuttfactori": 181, "tbuttfactori": 181, "lmiterfactori": 181, "frenchridgefactori": 181, "simplesequencegener": 181, "workflow": [181, 184, 187, 188], "show": [181, 184], "util": [181, 184], "contribut": [181, 184], "licens": 181, "cite": 181, "conda": 182, "n": 182, "myenvnam": 182, "ye": [182, 191], "m": 182, "compas_rhino": 182, "p": 182, "latest": 182, "fork": 182, "repositori": 182, "clone": 182, "git": 182, "yourgithub_usernam": 182, "cd": 182, "necessari": [182, 185], "edit": 182, "mode": 182, "dev": 182, "txt": 182, "mit": 183, "copyright": 183, "c": 183, "2020": 183, "02": 183, "17": 183, "permiss": 183, "herebi": 183, "grant": 183, "free": 183, "charg": 183, "person": 183, "obtain": 183, "document": [183, 185, 187, 188, 193], "deal": 183, "restrict": 183, "limit": 183, "right": 183, "modifi": 183, "merg": 183, "publish": 183, "distribut": 183, "sublicens": 183, "sell": 183, "permit": 183, "whom": 183, "furnish": 183, "do": [183, 185], "subject": 183, "follow": [183, 184, 185], "condit": 183, "abov": 183, "notic": 183, "shall": 183, "substanti": 183, "portion": 183, "THE": 183, "AS": 183, "warranti": 183, "OF": 183, "kind": 183, "express": 183, "OR": 183, "impli": [183, 186], "BUT": 183, "NOT": 183, "TO": 183, "merchant": 183, "fit": 183, "FOR": 183, "particular": 183, "purpos": 183, "AND": 183, "noninfring": 183, "IN": 183, "NO": 183, "event": 183, "holder": 183, "BE": 183, "liabl": 183, "claim": 183, "damag": 183, "liabil": 183, "action": 183, "contract": 183, "tort": 183, "aris": 183, "out": 183, "WITH": 183, "easi": 184, "autom": [184, 191], "bake": 184, "textur": [184, 193], "render": [184, 193], "boolean": [184, 186, 190], "style": 184, "planar": [184, 191], "might": 184, "ghpython": 184, "componen": 184, "detail": 184, "overal": 184, "idea": 184, "how": [184, 191], "Then": [184, 191], "explain": 184, "machin": 185, "requr": 185, "here": [185, 189, 191, 193], "design2machin": 185, "btlx_2_1_0": 185, "pdf": 185, "process_param": 185, "where": [185, 188, 193], "btlxjoint": 185, "__init__": 185, "py": 185, "mind": 185, "compon": [186, 187, 188, 192], "made": 186, "oper": [186, 190], "subtract": [186, 190], "computation": 186, "expens": 186, "disabl": 186, "applyfeatur": 186, "unsuccess": 186, "abstract": 186, "showassembli": [186, 192], "group": 187, "intend": [187, 188], "hybrid": 187, "encod": 187, "concaten": 187, "colon": 187, "separ": 187, "entri": [187, 194], "underscor": 187, "_": 187, "attr1nam": 187, "attr1value_attr2nam": 187, "attr2valu": 187, "four": [187, 191], "standard": 187, "categori": [187, 188, 191], "zvector": [187, 188], "setstandardattribut": 187, "write": [187, 188], "readstandardattribut": 187, "read": 187, "checkstandardattribut": 187, "correctli": 187, "miss": 187, "retriev": 187, "later": [187, 188, 191], "filter": 187, "accord": [187, 191], "criteria": 187, "These": 187, "deleteattribut": 187, "setcustomattribut": 187, "readallattribut": 187, "linear": [188, 191], "straight": 188, "rafter": 188, "joist": 188, "beamfromcurv": 188, "form": [188, 191], "linecurv": 188, "beamfromcurveguid": 188, "referenc": 188, "rotat": 188, "around": 188, "li": [188, 193], "sai": 188, "perpendicular": 188, "cannot": 188, "world": 188, "vertic": 188, "convent": 188, "rule": [188, 191], "jointcategoryrul": [188, 191], "automaticjoint": 188, "updaterefobj": 188, "onc": 188, "preview": [188, 192], "extract": [188, 192], "demo": 189, "ly": 190, "three": 191, "prefix": 191, "rel": 191, "we": 191, "distinguish": 191, "topolog": 191, "situat": 191, "splice": 191, "co": 191, "corner": 191, "meet": 191, "select": 191, "addition": 191, "clean": 191, "serv": [191, 193], "cata": 191, "catb": 191, "thing": 191, "determin": 191, "everi": 191, "tri": 191, "unintend": 191, "maxdist": 191, "exactli": 191, "certain": 191, "000001": 191, "inspect": 192, "showbeam": 192, "showbeamfram": 192, "showbeamindex": 192, "showjointtyp": 192, "bakewithboxmap": 193, "layer": 193, "desir": 193, "random": 193, "deviat": 193, "mapsiz": 193, "scale": 193, "adjust": 193, "size": 193, "imag": 193, "ratio": 193, "bitmap": 193, "care": 194, "final": 194, "matter": 194, "last": 194, "earlier": 194}, "objects": {"compas_timber.assembly": [[8, 0, 1, "", "TimberAssembly"]], "compas_timber.assembly.TimberAssembly": [[9, 1, 1, "", "ToString"], [10, 1, 1, "", "add_beam"], [11, 1, 1, "", "add_connection"], [12, 1, 1, "", "add_joint"], [13, 1, 1, "", "add_part"], [14, 1, 1, "", "are_parts_joined"], [15, 1, 1, "", "connections"], [16, 1, 1, "", "contains"], [17, 1, 1, "", "copy"], [18, 1, 1, "", "delete_connection"], [19, 1, 1, "", "delete_part"], [20, 1, 1, "", "find"], [21, 1, 1, "", "find_by_key"], [22, 1, 1, "", "from_json"], [23, 1, 1, "", "from_jsonstring"], [24, 1, 1, "", "parts"], [25, 1, 1, "", "remove_joint"], [26, 1, 1, "", "set_topologies"], [27, 1, 1, "", "sha256"], [28, 1, 1, "", "to_json"], [29, 1, 1, "", "to_jsonstring"], [30, 1, 1, "", "transform"], [31, 1, 1, "", "transform_numpy"], [32, 1, 1, "", "transformed"], [33, 1, 1, "", "transformed_numpy"], [34, 1, 1, "", "validate_data"]], "compas_timber.connections": [[35, 2, 1, "", "BeamJoinningError"], [36, 0, 1, "", "ConnectionSolver"], [39, 0, 1, "", "Joint"], [51, 0, 1, "", "JointTopology"], [53, 0, 1, "", "LButtJoint"], [67, 0, 1, "", "LMiterJoint"], [80, 0, 1, "", "TButtJoint"], [93, 0, 1, "", "XHalfLapJoint"], [107, 3, 1, "", "find_neighboring_beams"]], "compas_timber.connections.ConnectionSolver": [[37, 1, 1, "", "find_intersecting_pairs"], [38, 1, 1, "", "find_topology"]], "compas_timber.connections.Joint": [[40, 1, 1, "", "ToString"], [41, 1, 1, "", "add_features"], [42, 1, 1, "", "copy"], [43, 1, 1, "", "create"], [44, 1, 1, "", "from_json"], [45, 1, 1, "", "from_jsonstring"], [46, 1, 1, "", "restore_beams_from_keys"], [47, 1, 1, "", "sha256"], [48, 1, 1, "", "to_json"], [49, 1, 1, "", "to_jsonstring"], [50, 1, 1, "", "validate_data"]], "compas_timber.connections.JointTopology": [[52, 1, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[54, 1, 1, "", "ToString"], [55, 1, 1, "", "add_features"], [56, 1, 1, "", "copy"], [57, 1, 1, "", "create"], [58, 1, 1, "", "from_json"], [59, 1, 1, "", "from_jsonstring"], [60, 1, 1, "", "get_cross_cutting_plane"], [61, 1, 1, "", "get_main_cutting_plane"], [62, 1, 1, "", "restore_beams_from_keys"], [63, 1, 1, "", "sha256"], [64, 1, 1, "", "to_json"], [65, 1, 1, "", "to_jsonstring"], [66, 1, 1, "", "validate_data"]], "compas_timber.connections.LMiterJoint": [[68, 1, 1, "", "ToString"], [69, 1, 1, "", "add_features"], [70, 1, 1, "", "copy"], [71, 1, 1, "", "create"], [72, 1, 1, "", "from_json"], [73, 1, 1, "", "from_jsonstring"], [74, 1, 1, "", "get_cutting_planes"], [75, 1, 1, "", "restore_beams_from_keys"], [76, 1, 1, "", "sha256"], [77, 1, 1, "", "to_json"], [78, 1, 1, "", "to_jsonstring"], [79, 1, 1, "", "validate_data"]], "compas_timber.connections.TButtJoint": [[81, 1, 1, "", "ToString"], [82, 1, 1, "", "add_features"], [83, 1, 1, "", "copy"], [84, 1, 1, "", "create"], [85, 1, 1, "", "from_json"], [86, 1, 1, "", "from_jsonstring"], [87, 1, 1, "", "get_cutting_plane"], [88, 1, 1, "", "restore_beams_from_keys"], [89, 1, 1, "", "sha256"], [90, 1, 1, "", "to_json"], [91, 1, 1, "", "to_jsonstring"], [92, 1, 1, "", "validate_data"]], "compas_timber.connections.XHalfLapJoint": [[94, 1, 1, "", "ToString"], [95, 1, 1, "", "add_features"], [96, 1, 1, "", "copy"], [97, 1, 1, "", "create"], [98, 1, 1, "", "from_json"], [99, 1, 1, "", "from_jsonstring"], [100, 1, 1, "", "get_cross_cutting_frame"], [101, 1, 1, "", "get_main_cutting_frame"], [102, 1, 1, "", "restore_beams_from_keys"], [103, 1, 1, "", "sha256"], [104, 1, 1, "", "to_json"], [105, 1, 1, "", "to_jsonstring"], [106, 1, 1, "", "validate_data"]], "compas_timber.consumers": [[108, 0, 1, "", "BrepGeometryConsumer"]], "compas_timber.fabrication": [[109, 0, 1, "", "BTLx"], [113, 0, 1, "", "BTLxFrenchRidgeLap"], [117, 0, 1, "", "BTLxJackCut"], [120, 0, 1, "", "BTLxProcess"], [121, 0, 1, "", "FrenchRidgeFactory"], [123, 0, 1, "", "LButtFactory"], [125, 0, 1, "", "LMiterFactory"], [127, 0, 1, "", "TButtFactory"]], "compas_timber.fabrication.BTLx": [[110, 1, 1, "", "btlx_string"], [111, 1, 1, "", "process_assembly"], [112, 1, 1, "", "register_joint"]], "compas_timber.fabrication.BTLxFrenchRidgeLap": [[114, 1, 1, "", "create_process"], [115, 1, 1, "", "get_params"], [116, 1, 1, "", "process_joints"]], "compas_timber.fabrication.BTLxJackCut": [[118, 1, 1, "", "create_process"], [119, 1, 1, "", "generate_process"]], "compas_timber.fabrication.FrenchRidgeFactory": [[122, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.LButtFactory": [[124, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.LMiterFactory": [[126, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.TButtFactory": [[128, 1, 1, "", "apply_processings"]], "compas_timber.parts": [[129, 0, 1, "", "Beam"]], "compas_timber.parts.Beam": [[130, 1, 1, "", "ToString"], [131, 1, 1, "", "add_blank_extension"], [132, 1, 1, "", "add_feature"], [133, 1, 1, "", "add_features"], [134, 1, 1, "", "align_z"], [135, 1, 1, "", "clear_features"], [136, 1, 1, "", "copy"], [137, 1, 1, "", "endpoint_closest_to_point"], [138, 1, 1, "", "extension_to_plane"], [139, 1, 1, "", "from_centerline"], [140, 1, 1, "", "from_endpoints"], [141, 1, 1, "", "from_json"], [142, 1, 1, "", "from_jsonstring"], [143, 1, 1, "", "get_geometry"], [144, 1, 1, "", "remove_blank_extension"], [145, 1, 1, "", "remove_features"], [146, 1, 1, "", "sha256"], [147, 1, 1, "", "to_json"], [148, 1, 1, "", "to_jsonstring"], [149, 1, 1, "", "transform"], [150, 1, 1, "", "transform_numpy"], [151, 1, 1, "", "transformed"], [152, 1, 1, "", "transformed_numpy"], [153, 1, 1, "", "validate_data"]], "compas_timber.planning": [[154, 0, 1, "", "Actor"], [156, 0, 1, "", "BuildingPlan"], [166, 0, 1, "", "SimpleSequenceGenerator"], [167, 0, 1, "", "Step"]], "compas_timber.planning.Actor": [[155, 1, 1, "", "get_name"]], "compas_timber.planning.BuildingPlan": [[157, 1, 1, "", "ToString"], [158, 1, 1, "", "add_step"], [159, 1, 1, "", "copy"], [160, 1, 1, "", "from_json"], [161, 1, 1, "", "from_jsonstring"], [162, 1, 1, "", "sha256"], [163, 1, 1, "", "to_json"], [164, 1, 1, "", "to_jsonstring"], [165, 1, 1, "", "validate_data"]], "compas_timber.planning.Step": [[168, 1, 1, "", "ToString"], [169, 1, 1, "", "copy"], [170, 1, 1, "", "from_json"], [171, 1, 1, "", "from_jsonstring"], [172, 1, 1, "", "sha256"], [173, 1, 1, "", "to_json"], [174, 1, 1, "", "to_jsonstring"], [175, 1, 1, "", "transform"], [176, 1, 1, "", "validate_data"]], "compas_timber.rhino": [[177, 3, 1, "", "find_neighboring_beams"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:exception", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "exception", "Python exception"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "packag": 0, "compas_timb": [1, 2, 3, 4, 5, 6], "assembli": [1, 179, 186], "class": [1, 2, 3, 4, 5, 6], "connect": [2, 15], "function": 2, "except": 2, "consum": 3, "fabric": 4, "part": [5, 24], "plan": 6, "rhino": 7, "plugin": [7, 184], "timberassembli": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "tostr": [9, 40, 54, 68, 81, 94, 130, 157, 168], "add_beam": 10, "add_connect": 11, "add_joint": 12, "add_part": 13, "are_parts_join": 14, "contain": 16, "copi": [17, 42, 56, 70, 83, 96, 136, 159, 169], "delete_connect": 18, "delete_part": 19, "find": 20, "find_by_kei": 21, "from_json": [22, 44, 58, 72, 85, 98, 141, 160, 170], "from_jsonstr": [23, 45, 59, 73, 86, 99, 142, 161, 171], "remove_joint": 25, "set_topologi": 26, "sha256": [27, 47, 63, 76, 89, 103, 146, 162, 172], "to_json": [28, 48, 64, 77, 90, 104, 147, 163, 173], "to_jsonstr": [29, 49, 65, 78, 91, 105, 148, 164, 174], "transform": [30, 32, 149, 151, 175], "transform_numpi": [31, 150], "transformed_numpi": [33, 152], "validate_data": [34, 50, 66, 79, 92, 106, 153, 165, 176], "beamjoinningerror": 35, "connectionsolv": [36, 37, 38], "find_intersecting_pair": 37, "find_topologi": 38, "joint": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 180, 191], "add_featur": [41, 55, 69, 82, 95, 132, 133], "creat": [43, 57, 71, 84, 97, 180], "restore_beams_from_kei": [46, 62, 75, 88, 102], "jointtopologi": [51, 52], "get_nam": [52, 155], "lbuttjoint": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "get_cross_cutting_plan": 60, "get_main_cutting_plan": 61, "lmiterjoint": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "get_cutting_plan": [74, 87], "tbuttjoint": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], "xhalflapjoint": [93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "get_cross_cutting_fram": 100, "get_main_cutting_fram": 101, "find_neighboring_beam": [107, 177], "brepgeometryconsum": 108, "btlx": [109, 110, 111, 112, 185], "btlx_string": 110, "process_assembli": 111, "register_joint": 112, "btlxfrenchridgelap": [113, 114, 115, 116], "create_process": [114, 118], "get_param": 115, "process_joint": 116, "btlxjackcut": [117, 118, 119], "generate_process": 119, "btlxprocess": 120, "frenchridgefactori": [121, 122], "apply_process": [122, 124, 126, 128], "lbuttfactori": [123, 124], "lmiterfactori": [125, 126], "tbuttfactori": [127, 128], "beam": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 188], "add_blank_extens": 131, "align_z": 134, "clear_featur": 135, "endpoint_closest_to_point": 137, "extension_to_plan": 138, "from_centerlin": 139, "from_endpoint": 140, "get_geometri": 143, "remove_blank_extens": 144, "remove_featur": 145, "actor": [154, 155], "buildingplan": [156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "add_step": 158, "simplesequencegener": 166, "step": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "cite": 178, "exampl": [179, 189], "timber": [179, 181], "compa": 181, "depend": 181, "tabl": 181, "content": 181, "indic": 181, "instal": 182, "stabl": 182, "pip": 182, "develop": 182, "licens": 183, "grasshopp": 184, "contribut": 185, "guid": 185, "attribut": 187, "featur": 190, "topologi": 191, "compon": 191, "t": 191, "butt": 191, "l": 191, "miter": 191, "automaticjoint": 191, "wizzard": 191, "show": 192, "util": 193, "bake": 193, "boxmap": 193, "workflow": 194}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"API Reference": [[0, "api-reference"]], "Packages": [[0, "packages"]], "compas_timber.assembly": [[1, "compas-timber-assembly"]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"]], "compas_timber.connections": [[2, "compas-timber-connections"]], "Functions": [[2, "functions"]], "Exceptions": [[2, "exceptions"]], "compas_timber.consumers": [[3, "compas-timber-consumers"]], "compas_timber.fabrication": [[4, "compas-timber-fabrication"]], "compas_timber.parts": [[5, "compas-timber-parts"]], "compas_timber.planning": [[6, "compas-timber-planning"]], "rhino": [[7, "rhino"]], "Plugins": [[7, "plugins"]], "TimberAssembly": [[8, "timberassembly"]], "TimberAssembly.ToString": [[9, "timberassembly-tostring"]], "TimberAssembly.add_beam": [[10, "timberassembly-add-beam"]], "TimberAssembly.add_connection": [[11, "timberassembly-add-connection"]], "TimberAssembly.add_joint": [[12, "timberassembly-add-joint"]], "TimberAssembly.add_part": [[13, "timberassembly-add-part"]], "TimberAssembly.are_parts_joined": [[14, "timberassembly-are-parts-joined"]], "TimberAssembly.connections": [[15, "timberassembly-connections"]], "TimberAssembly.contains": [[16, "timberassembly-contains"]], "TimberAssembly.copy": [[17, "timberassembly-copy"]], "TimberAssembly.delete_connection": [[18, "timberassembly-delete-connection"]], "TimberAssembly.delete_part": [[19, "timberassembly-delete-part"]], "TimberAssembly.find": [[20, "timberassembly-find"]], "TimberAssembly.find_by_key": [[21, "timberassembly-find-by-key"]], "TimberAssembly.from_json": [[22, "timberassembly-from-json"]], "TimberAssembly.from_jsonstring": [[23, "timberassembly-from-jsonstring"]], "TimberAssembly.parts": [[24, "timberassembly-parts"]], "TimberAssembly.remove_joint": [[25, "timberassembly-remove-joint"]], "TimberAssembly.set_topologies": [[26, "timberassembly-set-topologies"]], "TimberAssembly.sha256": [[27, "timberassembly-sha256"]], "TimberAssembly.to_json": [[28, "timberassembly-to-json"]], "TimberAssembly.to_jsonstring": [[29, "timberassembly-to-jsonstring"]], "TimberAssembly.transform": [[30, "timberassembly-transform"]], "TimberAssembly.transform_numpy": [[31, "timberassembly-transform-numpy"]], "TimberAssembly.transformed": [[32, "timberassembly-transformed"]], "TimberAssembly.transformed_numpy": [[33, "timberassembly-transformed-numpy"]], "TimberAssembly.validate_data": [[34, "timberassembly-validate-data"]], "BeamJoinningError": [[35, "beamjoinningerror"]], "ConnectionSolver": [[36, "connectionsolver"]], "ConnectionSolver.find_intersecting_pairs": [[37, "connectionsolver-find-intersecting-pairs"]], "ConnectionSolver.find_topology": [[38, "connectionsolver-find-topology"]], "Joint": [[39, "joint"]], "Joint.ToString": [[40, "joint-tostring"]], "Joint.add_features": [[41, "joint-add-features"]], "Joint.copy": [[42, "joint-copy"]], "Joint.create": [[43, "joint-create"]], "Joint.from_json": [[44, "joint-from-json"]], "Joint.from_jsonstring": [[45, "joint-from-jsonstring"]], "Joint.restore_beams_from_keys": [[46, "joint-restore-beams-from-keys"]], "Joint.sha256": [[47, "joint-sha256"]], "Joint.to_json": [[48, "joint-to-json"]], "Joint.to_jsonstring": [[49, "joint-to-jsonstring"]], "Joint.validate_data": [[50, "joint-validate-data"]], "JointTopology": [[51, "jointtopology"]], "JointTopology.get_name": [[52, "jointtopology-get-name"]], "LButtJoint": [[53, "lbuttjoint"]], "LButtJoint.ToString": [[54, "lbuttjoint-tostring"]], "LButtJoint.add_features": [[55, "lbuttjoint-add-features"]], "LButtJoint.copy": [[56, "lbuttjoint-copy"]], "LButtJoint.create": [[57, "lbuttjoint-create"]], "LButtJoint.from_json": [[58, "lbuttjoint-from-json"]], "LButtJoint.from_jsonstring": [[59, "lbuttjoint-from-jsonstring"]], "LButtJoint.get_cross_cutting_plane": [[60, "lbuttjoint-get-cross-cutting-plane"]], "LButtJoint.get_main_cutting_plane": [[61, "lbuttjoint-get-main-cutting-plane"]], "LButtJoint.restore_beams_from_keys": [[62, "lbuttjoint-restore-beams-from-keys"]], "LButtJoint.sha256": [[63, "lbuttjoint-sha256"]], "LButtJoint.to_json": [[64, "lbuttjoint-to-json"]], "LButtJoint.to_jsonstring": [[65, "lbuttjoint-to-jsonstring"]], "LButtJoint.validate_data": [[66, "lbuttjoint-validate-data"]], "LMiterJoint": [[67, "lmiterjoint"]], "LMiterJoint.ToString": [[68, "lmiterjoint-tostring"]], "LMiterJoint.add_features": [[69, "lmiterjoint-add-features"]], "LMiterJoint.copy": [[70, "lmiterjoint-copy"]], "LMiterJoint.create": [[71, "lmiterjoint-create"]], "LMiterJoint.from_json": [[72, "lmiterjoint-from-json"]], "LMiterJoint.from_jsonstring": [[73, "lmiterjoint-from-jsonstring"]], "LMiterJoint.get_cutting_planes": [[74, "lmiterjoint-get-cutting-planes"]], "LMiterJoint.restore_beams_from_keys": [[75, "lmiterjoint-restore-beams-from-keys"]], "LMiterJoint.sha256": [[76, "lmiterjoint-sha256"]], "LMiterJoint.to_json": [[77, "lmiterjoint-to-json"]], "LMiterJoint.to_jsonstring": [[78, "lmiterjoint-to-jsonstring"]], "LMiterJoint.validate_data": [[79, "lmiterjoint-validate-data"]], "TButtJoint": [[80, "tbuttjoint"]], "TButtJoint.ToString": [[81, "tbuttjoint-tostring"]], "TButtJoint.add_features": [[82, "tbuttjoint-add-features"]], "TButtJoint.copy": [[83, "tbuttjoint-copy"]], "TButtJoint.create": [[84, "tbuttjoint-create"]], "TButtJoint.from_json": [[85, "tbuttjoint-from-json"]], "TButtJoint.from_jsonstring": [[86, "tbuttjoint-from-jsonstring"]], "TButtJoint.get_cutting_plane": [[87, "tbuttjoint-get-cutting-plane"]], "TButtJoint.restore_beams_from_keys": [[88, "tbuttjoint-restore-beams-from-keys"]], "TButtJoint.sha256": [[89, "tbuttjoint-sha256"]], "TButtJoint.to_json": [[90, "tbuttjoint-to-json"]], "TButtJoint.to_jsonstring": [[91, "tbuttjoint-to-jsonstring"]], "TButtJoint.validate_data": [[92, "tbuttjoint-validate-data"]], "XHalfLapJoint": [[93, "xhalflapjoint"]], "XHalfLapJoint.ToString": [[94, "xhalflapjoint-tostring"]], "XHalfLapJoint.add_features": [[95, "xhalflapjoint-add-features"]], "XHalfLapJoint.copy": [[96, "xhalflapjoint-copy"]], "XHalfLapJoint.create": [[97, "xhalflapjoint-create"]], "XHalfLapJoint.from_json": [[98, "xhalflapjoint-from-json"]], "XHalfLapJoint.from_jsonstring": [[99, "xhalflapjoint-from-jsonstring"]], "XHalfLapJoint.get_cross_cutting_frame": [[100, "xhalflapjoint-get-cross-cutting-frame"]], "XHalfLapJoint.get_main_cutting_frame": [[101, "xhalflapjoint-get-main-cutting-frame"]], "XHalfLapJoint.restore_beams_from_keys": [[102, "xhalflapjoint-restore-beams-from-keys"]], "XHalfLapJoint.sha256": [[103, "xhalflapjoint-sha256"]], "XHalfLapJoint.to_json": [[104, "xhalflapjoint-to-json"]], "XHalfLapJoint.to_jsonstring": [[105, "xhalflapjoint-to-jsonstring"]], "XHalfLapJoint.validate_data": [[106, "xhalflapjoint-validate-data"]], "find_neighboring_beams": [[107, "find-neighboring-beams"], [177, "find-neighboring-beams"]], "BrepGeometryConsumer": [[108, "brepgeometryconsumer"]], "BTLx": [[109, "btlx"]], "BTLx.btlx_string": [[110, "btlx-btlx-string"]], "BTLx.process_assembly": [[111, "btlx-process-assembly"]], "BTLx.register_joint": [[112, "btlx-register-joint"]], "BTLxFrenchRidgeLap": [[113, "btlxfrenchridgelap"]], "BTLxFrenchRidgeLap.create_process": [[114, "btlxfrenchridgelap-create-process"]], "BTLxFrenchRidgeLap.get_params": [[115, "btlxfrenchridgelap-get-params"]], "BTLxFrenchRidgeLap.process_joints": [[116, "btlxfrenchridgelap-process-joints"]], "BTLxJackCut": [[117, "btlxjackcut"]], "BTLxJackCut.create_process": [[118, "btlxjackcut-create-process"]], "BTLxJackCut.generate_process": [[119, "btlxjackcut-generate-process"]], "BTLxProcess": [[120, "btlxprocess"]], "FrenchRidgeFactory": [[121, "frenchridgefactory"]], "FrenchRidgeFactory.apply_processings": [[122, "frenchridgefactory-apply-processings"]], "LButtFactory": [[123, "lbuttfactory"]], "LButtFactory.apply_processings": [[124, "lbuttfactory-apply-processings"]], "LMiterFactory": [[125, "lmiterfactory"]], "LMiterFactory.apply_processings": [[126, "lmiterfactory-apply-processings"]], "TButtFactory": [[127, "tbuttfactory"]], "TButtFactory.apply_processings": [[128, "tbuttfactory-apply-processings"]], "Beam": [[129, "beam"], [188, "beam"]], "Beam.ToString": [[130, "beam-tostring"]], "Beam.add_blank_extension": [[131, "beam-add-blank-extension"]], "Beam.add_feature": [[132, "beam-add-feature"]], "Beam.add_features": [[133, "beam-add-features"]], "Beam.align_z": [[134, "beam-align-z"]], "Beam.clear_features": [[135, "beam-clear-features"]], "Beam.copy": [[136, "beam-copy"]], "Beam.endpoint_closest_to_point": [[137, "beam-endpoint-closest-to-point"]], "Beam.extension_to_plane": [[138, "beam-extension-to-plane"]], "Beam.from_centerline": [[139, "beam-from-centerline"]], "Beam.from_endpoints": [[140, "beam-from-endpoints"]], "Beam.from_json": [[141, "beam-from-json"]], "Beam.from_jsonstring": [[142, "beam-from-jsonstring"]], "Beam.get_geometry": [[143, "beam-get-geometry"]], "Beam.remove_blank_extension": [[144, "beam-remove-blank-extension"]], "Beam.remove_features": [[145, "beam-remove-features"]], "Beam.sha256": [[146, "beam-sha256"]], "Beam.to_json": [[147, "beam-to-json"]], "Beam.to_jsonstring": [[148, "beam-to-jsonstring"]], "Beam.transform": [[149, "beam-transform"]], "Beam.transform_numpy": [[150, "beam-transform-numpy"]], "Beam.transformed": [[151, "beam-transformed"]], "Beam.transformed_numpy": [[152, "beam-transformed-numpy"]], "Beam.validate_data": [[153, "beam-validate-data"]], "Actor": [[154, "actor"]], "Actor.get_name": [[155, "actor-get-name"]], "BuildingPlan": [[156, "buildingplan"]], "BuildingPlan.ToString": [[157, "buildingplan-tostring"]], "BuildingPlan.add_step": [[158, "buildingplan-add-step"]], "BuildingPlan.copy": [[159, "buildingplan-copy"]], "BuildingPlan.from_json": [[160, "buildingplan-from-json"]], "BuildingPlan.from_jsonstring": [[161, "buildingplan-from-jsonstring"]], "BuildingPlan.sha256": [[162, "buildingplan-sha256"]], "BuildingPlan.to_json": [[163, "buildingplan-to-json"]], "BuildingPlan.to_jsonstring": [[164, "buildingplan-to-jsonstring"]], "BuildingPlan.validate_data": [[165, "buildingplan-validate-data"]], "SimpleSequenceGenerator": [[166, "simplesequencegenerator"]], "Step": [[167, "step"]], "Step.ToString": [[168, "step-tostring"]], "Step.copy": [[169, "step-copy"]], "Step.from_json": [[170, "step-from-json"]], "Step.from_jsonstring": [[171, "step-from-jsonstring"]], "Step.sha256": [[172, "step-sha256"]], "Step.to_json": [[173, "step-to-json"]], "Step.to_jsonstring": [[174, "step-to-jsonstring"]], "Step.transform": [[175, "step-transform"]], "Step.validate_data": [[176, "step-validate-data"]], "Citing": [[178, "citing"]], "Examples": [[179, "examples"], [189, "examples"]], "Timber Assembly Examples": [[179, "timber-assembly-examples"]], "Create Joint": [[180, "create-joint"]], "COMPAS TIMBER": [[181, "compas-timber"]], "Dependencies": [[181, "dependencies"]], "Table of Contents": [[181, "table-of-contents"]], "Indices and tables": [[181, "indices-and-tables"]], "Installation": [[182, "installation"]], "Stable": [[182, "stable"]], "Install with pip": [[182, "install-with-pip"]], "Development": [[182, "development"]], "License": [[183, "license"]], "Grasshopper plugin": [[184, "grasshopper-plugin"]], "BTLx Contribution Guide": [[185, "btlx-contribution-guide"]], "Assembly": [[186, "assembly"]], "Attributes": [[187, "attributes"]], "Features": [[190, "features"]], "Joints": [[191, "joints"]], "Joint Topologies": [[191, "joint-topologies"]], "Joint components": [[191, "joint-components"]], "T-Butt": [[191, "t-butt"]], "L-Butt": [[191, "l-butt"]], "L-Miter": [[191, "l-miter"]], "AutomaticJoint wizzard": [[191, "automaticjoint-wizzard"]], "Show": [[192, "show"]], "Utils": [[193, "utils"]], "Bake with BoxMap": [[193, "bake-with-boxmap"]], "Workflow": [[194, "workflow"]]}, "indexentries": {"timberassembly (class in compas_timber.assembly)": [[8, "compas_timber.assembly.TimberAssembly"]], "tostring() (compas_timber.assembly.timberassembly method)": [[9, "compas_timber.assembly.TimberAssembly.ToString"]], "add_beam() (compas_timber.assembly.timberassembly method)": [[10, "compas_timber.assembly.TimberAssembly.add_beam"]], "add_connection() (compas_timber.assembly.timberassembly method)": [[11, "compas_timber.assembly.TimberAssembly.add_connection"]], "add_joint() (compas_timber.assembly.timberassembly method)": [[12, "compas_timber.assembly.TimberAssembly.add_joint"]], "add_part() (compas_timber.assembly.timberassembly method)": [[13, "compas_timber.assembly.TimberAssembly.add_part"]], "are_parts_joined() (compas_timber.assembly.timberassembly method)": [[14, "compas_timber.assembly.TimberAssembly.are_parts_joined"]], "connections() (compas_timber.assembly.timberassembly method)": [[15, "compas_timber.assembly.TimberAssembly.connections"]], "contains() (compas_timber.assembly.timberassembly method)": [[16, "compas_timber.assembly.TimberAssembly.contains"]], "copy() (compas_timber.assembly.timberassembly method)": [[17, "compas_timber.assembly.TimberAssembly.copy"]], "delete_connection() (compas_timber.assembly.timberassembly method)": [[18, "compas_timber.assembly.TimberAssembly.delete_connection"]], "delete_part() (compas_timber.assembly.timberassembly method)": [[19, "compas_timber.assembly.TimberAssembly.delete_part"]], "find() (compas_timber.assembly.timberassembly method)": [[20, "compas_timber.assembly.TimberAssembly.find"]], "find_by_key() (compas_timber.assembly.timberassembly method)": [[21, "compas_timber.assembly.TimberAssembly.find_by_key"]], "from_json() (compas_timber.assembly.timberassembly class method)": [[22, "compas_timber.assembly.TimberAssembly.from_json"]], "from_jsonstring() (compas_timber.assembly.timberassembly class method)": [[23, "compas_timber.assembly.TimberAssembly.from_jsonstring"]], "parts() (compas_timber.assembly.timberassembly method)": [[24, "compas_timber.assembly.TimberAssembly.parts"]], "remove_joint() (compas_timber.assembly.timberassembly method)": [[25, "compas_timber.assembly.TimberAssembly.remove_joint"]], "set_topologies() (compas_timber.assembly.timberassembly method)": [[26, "compas_timber.assembly.TimberAssembly.set_topologies"]], "sha256() (compas_timber.assembly.timberassembly method)": [[27, "compas_timber.assembly.TimberAssembly.sha256"]], "to_json() (compas_timber.assembly.timberassembly method)": [[28, "compas_timber.assembly.TimberAssembly.to_json"]], "to_jsonstring() (compas_timber.assembly.timberassembly method)": [[29, "compas_timber.assembly.TimberAssembly.to_jsonstring"]], "transform() (compas_timber.assembly.timberassembly method)": [[30, "compas_timber.assembly.TimberAssembly.transform"]], "transform_numpy() (compas_timber.assembly.timberassembly method)": [[31, "compas_timber.assembly.TimberAssembly.transform_numpy"]], "transformed() (compas_timber.assembly.timberassembly method)": [[32, "compas_timber.assembly.TimberAssembly.transformed"]], "transformed_numpy() (compas_timber.assembly.timberassembly method)": [[33, "compas_timber.assembly.TimberAssembly.transformed_numpy"]], "validate_data() (compas_timber.assembly.timberassembly class method)": [[34, "compas_timber.assembly.TimberAssembly.validate_data"]], "beamjoinningerror": [[35, "compas_timber.connections.BeamJoinningError"]], "connectionsolver (class in compas_timber.connections)": [[36, "compas_timber.connections.ConnectionSolver"]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[37, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs"]], "find_topology() (compas_timber.connections.connectionsolver method)": [[38, "compas_timber.connections.ConnectionSolver.find_topology"]], "joint (class in compas_timber.connections)": [[39, "compas_timber.connections.Joint"]], "tostring() (compas_timber.connections.joint method)": [[40, "compas_timber.connections.Joint.ToString"]], "add_features() (compas_timber.connections.joint method)": [[41, "compas_timber.connections.Joint.add_features"]], "copy() (compas_timber.connections.joint method)": [[42, "compas_timber.connections.Joint.copy"]], "create() (compas_timber.connections.joint class method)": [[43, "compas_timber.connections.Joint.create"]], "from_json() (compas_timber.connections.joint class method)": [[44, "compas_timber.connections.Joint.from_json"]], "from_jsonstring() (compas_timber.connections.joint class method)": [[45, "compas_timber.connections.Joint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[46, "compas_timber.connections.Joint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.joint method)": [[47, "compas_timber.connections.Joint.sha256"]], "to_json() (compas_timber.connections.joint method)": [[48, "compas_timber.connections.Joint.to_json"]], "to_jsonstring() (compas_timber.connections.joint method)": [[49, "compas_timber.connections.Joint.to_jsonstring"]], "validate_data() (compas_timber.connections.joint class method)": [[50, "compas_timber.connections.Joint.validate_data"]], "jointtopology (class in compas_timber.connections)": [[51, "compas_timber.connections.JointTopology"]], "get_name() (compas_timber.connections.jointtopology class method)": [[52, "compas_timber.connections.JointTopology.get_name"]], "lbuttjoint (class in compas_timber.connections)": [[53, "compas_timber.connections.LButtJoint"]], "tostring() (compas_timber.connections.lbuttjoint method)": [[54, "compas_timber.connections.LButtJoint.ToString"]], "add_features() (compas_timber.connections.lbuttjoint method)": [[55, "compas_timber.connections.LButtJoint.add_features"]], "copy() (compas_timber.connections.lbuttjoint method)": [[56, "compas_timber.connections.LButtJoint.copy"]], "create() (compas_timber.connections.lbuttjoint class method)": [[57, "compas_timber.connections.LButtJoint.create"]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[58, "compas_timber.connections.LButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[59, "compas_timber.connections.LButtJoint.from_jsonstring"]], "get_cross_cutting_plane() (compas_timber.connections.lbuttjoint method)": [[60, "compas_timber.connections.LButtJoint.get_cross_cutting_plane"]], "get_main_cutting_plane() (compas_timber.connections.lbuttjoint method)": [[61, "compas_timber.connections.LButtJoint.get_main_cutting_plane"]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[62, "compas_timber.connections.LButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lbuttjoint method)": [[63, "compas_timber.connections.LButtJoint.sha256"]], "to_json() (compas_timber.connections.lbuttjoint method)": [[64, "compas_timber.connections.LButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lbuttjoint method)": [[65, "compas_timber.connections.LButtJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lbuttjoint class method)": [[66, "compas_timber.connections.LButtJoint.validate_data"]], "lmiterjoint (class in compas_timber.connections)": [[67, "compas_timber.connections.LMiterJoint"]], "tostring() (compas_timber.connections.lmiterjoint method)": [[68, "compas_timber.connections.LMiterJoint.ToString"]], "add_features() (compas_timber.connections.lmiterjoint method)": [[69, "compas_timber.connections.LMiterJoint.add_features"]], "copy() (compas_timber.connections.lmiterjoint method)": [[70, "compas_timber.connections.LMiterJoint.copy"]], "create() (compas_timber.connections.lmiterjoint class method)": [[71, "compas_timber.connections.LMiterJoint.create"]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[72, "compas_timber.connections.LMiterJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[73, "compas_timber.connections.LMiterJoint.from_jsonstring"]], "get_cutting_planes() (compas_timber.connections.lmiterjoint method)": [[74, "compas_timber.connections.LMiterJoint.get_cutting_planes"]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[75, "compas_timber.connections.LMiterJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lmiterjoint method)": [[76, "compas_timber.connections.LMiterJoint.sha256"]], "to_json() (compas_timber.connections.lmiterjoint method)": [[77, "compas_timber.connections.LMiterJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lmiterjoint method)": [[78, "compas_timber.connections.LMiterJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lmiterjoint class method)": [[79, "compas_timber.connections.LMiterJoint.validate_data"]], "tbuttjoint (class in compas_timber.connections)": [[80, "compas_timber.connections.TButtJoint"]], "tostring() (compas_timber.connections.tbuttjoint method)": [[81, "compas_timber.connections.TButtJoint.ToString"]], "add_features() (compas_timber.connections.tbuttjoint method)": [[82, "compas_timber.connections.TButtJoint.add_features"]], "copy() (compas_timber.connections.tbuttjoint method)": [[83, "compas_timber.connections.TButtJoint.copy"]], "create() (compas_timber.connections.tbuttjoint class method)": [[84, "compas_timber.connections.TButtJoint.create"]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[85, "compas_timber.connections.TButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[86, "compas_timber.connections.TButtJoint.from_jsonstring"]], "get_cutting_plane() (compas_timber.connections.tbuttjoint method)": [[87, "compas_timber.connections.TButtJoint.get_cutting_plane"]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[88, "compas_timber.connections.TButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.tbuttjoint method)": [[89, "compas_timber.connections.TButtJoint.sha256"]], "to_json() (compas_timber.connections.tbuttjoint method)": [[90, "compas_timber.connections.TButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.tbuttjoint method)": [[91, "compas_timber.connections.TButtJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.tbuttjoint class method)": [[92, "compas_timber.connections.TButtJoint.validate_data"]], "xhalflapjoint (class in compas_timber.connections)": [[93, "compas_timber.connections.XHalfLapJoint"]], "tostring() (compas_timber.connections.xhalflapjoint method)": [[94, "compas_timber.connections.XHalfLapJoint.ToString"]], "add_features() (compas_timber.connections.xhalflapjoint method)": [[95, "compas_timber.connections.XHalfLapJoint.add_features"]], "copy() (compas_timber.connections.xhalflapjoint method)": [[96, "compas_timber.connections.XHalfLapJoint.copy"]], "create() (compas_timber.connections.xhalflapjoint class method)": [[97, "compas_timber.connections.XHalfLapJoint.create"]], "from_json() (compas_timber.connections.xhalflapjoint class method)": [[98, "compas_timber.connections.XHalfLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.xhalflapjoint class method)": [[99, "compas_timber.connections.XHalfLapJoint.from_jsonstring"]], "get_cross_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[100, "compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame"]], "get_main_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[101, "compas_timber.connections.XHalfLapJoint.get_main_cutting_frame"]], "restore_beams_from_keys() (compas_timber.connections.xhalflapjoint method)": [[102, "compas_timber.connections.XHalfLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.xhalflapjoint method)": [[103, "compas_timber.connections.XHalfLapJoint.sha256"]], "to_json() (compas_timber.connections.xhalflapjoint method)": [[104, "compas_timber.connections.XHalfLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.xhalflapjoint method)": [[105, "compas_timber.connections.XHalfLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.xhalflapjoint class method)": [[106, "compas_timber.connections.XHalfLapJoint.validate_data"]], "find_neighboring_beams() (in module compas_timber.connections)": [[107, "compas_timber.connections.find_neighboring_beams"]], "brepgeometryconsumer (class in compas_timber.consumers)": [[108, "compas_timber.consumers.BrepGeometryConsumer"]], "btlx (class in compas_timber.fabrication)": [[109, "compas_timber.fabrication.BTLx"]], "btlx_string() (compas_timber.fabrication.btlx method)": [[110, "compas_timber.fabrication.BTLx.btlx_string"]], "process_assembly() (compas_timber.fabrication.btlx method)": [[111, "compas_timber.fabrication.BTLx.process_assembly"]], "register_joint() (compas_timber.fabrication.btlx class method)": [[112, "compas_timber.fabrication.BTLx.register_joint"]], "btlxfrenchridgelap (class in compas_timber.fabrication)": [[113, "compas_timber.fabrication.BTLxFrenchRidgeLap"]], "create_process() (compas_timber.fabrication.btlxfrenchridgelap class method)": [[114, "compas_timber.fabrication.BTLxFrenchRidgeLap.create_process"]], "get_params() (compas_timber.fabrication.btlxfrenchridgelap method)": [[115, "compas_timber.fabrication.BTLxFrenchRidgeLap.get_params"]], "process_joints() (compas_timber.fabrication.btlxfrenchridgelap method)": [[116, "compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints"]], "btlxjackcut (class in compas_timber.fabrication)": [[117, "compas_timber.fabrication.BTLxJackCut"]], "create_process() (compas_timber.fabrication.btlxjackcut class method)": [[118, "compas_timber.fabrication.BTLxJackCut.create_process"]], "generate_process() (compas_timber.fabrication.btlxjackcut method)": [[119, "compas_timber.fabrication.BTLxJackCut.generate_process"]], "btlxprocess (class in compas_timber.fabrication)": [[120, "compas_timber.fabrication.BTLxProcess"]], "frenchridgefactory (class in compas_timber.fabrication)": [[121, "compas_timber.fabrication.FrenchRidgeFactory"]], "apply_processings() (compas_timber.fabrication.frenchridgefactory class method)": [[122, "compas_timber.fabrication.FrenchRidgeFactory.apply_processings"]], "lbuttfactory (class in compas_timber.fabrication)": [[123, "compas_timber.fabrication.LButtFactory"]], "apply_processings() (compas_timber.fabrication.lbuttfactory class method)": [[124, "compas_timber.fabrication.LButtFactory.apply_processings"]], "lmiterfactory (class in compas_timber.fabrication)": [[125, "compas_timber.fabrication.LMiterFactory"]], "apply_processings() (compas_timber.fabrication.lmiterfactory class method)": [[126, "compas_timber.fabrication.LMiterFactory.apply_processings"]], "tbuttfactory (class in compas_timber.fabrication)": [[127, "compas_timber.fabrication.TButtFactory"]], "apply_processings() (compas_timber.fabrication.tbuttfactory class method)": [[128, "compas_timber.fabrication.TButtFactory.apply_processings"]], "beam (class in compas_timber.parts)": [[129, "compas_timber.parts.Beam"]], "tostring() (compas_timber.parts.beam method)": [[130, "compas_timber.parts.Beam.ToString"]], "add_blank_extension() (compas_timber.parts.beam method)": [[131, "compas_timber.parts.Beam.add_blank_extension"]], "add_feature() (compas_timber.parts.beam method)": [[132, "compas_timber.parts.Beam.add_feature"]], "add_features() (compas_timber.parts.beam method)": [[133, "compas_timber.parts.Beam.add_features"]], "align_z() (compas_timber.parts.beam method)": [[134, "compas_timber.parts.Beam.align_z"]], "clear_features() (compas_timber.parts.beam method)": [[135, "compas_timber.parts.Beam.clear_features"]], "copy() (compas_timber.parts.beam method)": [[136, "compas_timber.parts.Beam.copy"]], "endpoint_closest_to_point() (compas_timber.parts.beam method)": [[137, "compas_timber.parts.Beam.endpoint_closest_to_point"]], "extension_to_plane() (compas_timber.parts.beam method)": [[138, "compas_timber.parts.Beam.extension_to_plane"]], "from_centerline() (compas_timber.parts.beam class method)": [[139, "compas_timber.parts.Beam.from_centerline"]], "from_endpoints() (compas_timber.parts.beam class method)": [[140, "compas_timber.parts.Beam.from_endpoints"]], "from_json() (compas_timber.parts.beam class method)": [[141, "compas_timber.parts.Beam.from_json"]], "from_jsonstring() (compas_timber.parts.beam class method)": [[142, "compas_timber.parts.Beam.from_jsonstring"]], "get_geometry() (compas_timber.parts.beam method)": [[143, "compas_timber.parts.Beam.get_geometry"]], "remove_blank_extension() (compas_timber.parts.beam method)": [[144, "compas_timber.parts.Beam.remove_blank_extension"]], "remove_features() (compas_timber.parts.beam method)": [[145, "compas_timber.parts.Beam.remove_features"]], "sha256() (compas_timber.parts.beam method)": [[146, "compas_timber.parts.Beam.sha256"]], "to_json() (compas_timber.parts.beam method)": [[147, "compas_timber.parts.Beam.to_json"]], "to_jsonstring() (compas_timber.parts.beam method)": [[148, "compas_timber.parts.Beam.to_jsonstring"]], "transform() (compas_timber.parts.beam method)": [[149, "compas_timber.parts.Beam.transform"]], "transform_numpy() (compas_timber.parts.beam method)": [[150, "compas_timber.parts.Beam.transform_numpy"]], "transformed() (compas_timber.parts.beam method)": [[151, "compas_timber.parts.Beam.transformed"]], "transformed_numpy() (compas_timber.parts.beam method)": [[152, "compas_timber.parts.Beam.transformed_numpy"]], "validate_data() (compas_timber.parts.beam class method)": [[153, "compas_timber.parts.Beam.validate_data"]], "actor (class in compas_timber.planning)": [[154, "compas_timber.planning.Actor"]], "get_name() (compas_timber.planning.actor class method)": [[155, "compas_timber.planning.Actor.get_name"]], "buildingplan (class in compas_timber.planning)": [[156, "compas_timber.planning.BuildingPlan"]], "tostring() (compas_timber.planning.buildingplan method)": [[157, "compas_timber.planning.BuildingPlan.ToString"]], "add_step() (compas_timber.planning.buildingplan method)": [[158, "compas_timber.planning.BuildingPlan.add_step"]], "copy() (compas_timber.planning.buildingplan method)": [[159, "compas_timber.planning.BuildingPlan.copy"]], "from_json() (compas_timber.planning.buildingplan class method)": [[160, "compas_timber.planning.BuildingPlan.from_json"]], "from_jsonstring() (compas_timber.planning.buildingplan class method)": [[161, "compas_timber.planning.BuildingPlan.from_jsonstring"]], "sha256() (compas_timber.planning.buildingplan method)": [[162, "compas_timber.planning.BuildingPlan.sha256"]], "to_json() (compas_timber.planning.buildingplan method)": [[163, "compas_timber.planning.BuildingPlan.to_json"]], "to_jsonstring() (compas_timber.planning.buildingplan method)": [[164, "compas_timber.planning.BuildingPlan.to_jsonstring"]], "validate_data() (compas_timber.planning.buildingplan class method)": [[165, "compas_timber.planning.BuildingPlan.validate_data"]], "simplesequencegenerator (class in compas_timber.planning)": [[166, "compas_timber.planning.SimpleSequenceGenerator"]], "step (class in compas_timber.planning)": [[167, "compas_timber.planning.Step"]], "tostring() (compas_timber.planning.step method)": [[168, "compas_timber.planning.Step.ToString"]], "copy() (compas_timber.planning.step method)": [[169, "compas_timber.planning.Step.copy"]], "from_json() (compas_timber.planning.step class method)": [[170, "compas_timber.planning.Step.from_json"]], "from_jsonstring() (compas_timber.planning.step class method)": [[171, "compas_timber.planning.Step.from_jsonstring"]], "sha256() (compas_timber.planning.step method)": [[172, "compas_timber.planning.Step.sha256"]], "to_json() (compas_timber.planning.step method)": [[173, "compas_timber.planning.Step.to_json"]], "to_jsonstring() (compas_timber.planning.step method)": [[174, "compas_timber.planning.Step.to_jsonstring"]], "transform() (compas_timber.planning.step method)": [[175, "compas_timber.planning.Step.transform"]], "validate_data() (compas_timber.planning.step class method)": [[176, "compas_timber.planning.Step.validate_data"]], "find_neighboring_beams() (in module compas_timber.rhino)": [[177, "compas_timber.rhino.find_neighboring_beams"]]}})