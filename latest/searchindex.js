Search.setIndex({"alltitles": {"API Reference": [[0, null]], "Actor": [[709, null]], "Actor.get_name": [[710, null]], "Attributes": [[784, null]], "BTLx Contribution Guide": [[783, null]], "BTLxPart": [[464, null]], "BTLxPart.et_point_vals": [[465, null]], "BTLxPart.ref_side_from_face": [[466, null]], "BTLxProcessing": [[467, null]], "BTLxProcessing.ToString": [[468, null]], "BTLxProcessing.add_subprocessing": [[469, null]], "BTLxProcessing.copy": [[470, null]], "BTLxProcessing.from_json": [[471, null]], "BTLxProcessing.from_jsonstring": [[472, null]], "BTLxProcessing.sha256": [[473, null]], "BTLxProcessing.to_json": [[474, null]], "BTLxProcessing.to_jsonstring": [[475, null]], "BTLxProcessing.validate_data": [[476, null]], "BTLxWriter": [[477, null]], "BTLxWriter.model_to_xml": [[478, null]], "BTLxWriter.write": [[479, null]], "Bake with BoxMap": [[793, "bake-with-boxmap"]], "BallNodeJoint": [[10, null]], "BallNodeJoint.ToString": [[11, null]], "BallNodeJoint.add_extensions": [[12, null]], "BallNodeJoint.add_features": [[13, null]], "BallNodeJoint.check_elements_compatibility": [[14, null]], "BallNodeJoint.copy": [[15, null]], "BallNodeJoint.create": [[16, null]], "BallNodeJoint.element_count_complies": [[17, null]], "BallNodeJoint.from_json": [[18, null]], "BallNodeJoint.from_jsonstring": [[19, null]], "BallNodeJoint.get_face_most_ortho_to_beam": [[20, null]], "BallNodeJoint.get_face_most_towards_beam": [[21, null]], "BallNodeJoint.restore_beams_from_keys": [[22, null]], "BallNodeJoint.sha256": [[23, null]], "BallNodeJoint.to_json": [[24, null]], "BallNodeJoint.to_jsonstring": [[25, null]], "BallNodeJoint.validate_data": [[26, null]], "Beam": [[346, null]], "Beam.ToString": [[347, null]], "Beam.add_blank_extension": [[348, null]], "Beam.add_feature": [[349, null]], "Beam.add_features": [[350, null]], "Beam.compute_aabb": [[351, null]], "Beam.compute_collision_mesh": [[352, null]], "Beam.compute_geometry": [[353, null]], "Beam.compute_obb": [[354, null]], "Beam.compute_worldtransformation": [[355, null]], "Beam.copy": [[356, null]], "Beam.endpoint_closest_to_point": [[357, null]], "Beam.extension_to_plane": [[358, null]], "Beam.from_centerline": [[359, null]], "Beam.from_endpoints": [[360, null]], "Beam.from_json": [[361, null]], "Beam.from_jsonstring": [[362, null]], "Beam.get_dimensions_relative_to_side": [[363, null]], "Beam.opposing_side_index": [[364, null]], "Beam.remove_blank_extension": [[365, null]], "Beam.remove_features": [[366, null]], "Beam.reset": [[367, null]], "Beam.sha256": [[368, null]], "Beam.side_as_surface": [[369, null]], "Beam.to_json": [[370, null]], "Beam.to_jsonstring": [[371, null]], "Beam.transform": [[372, null]], "Beam.transformed": [[373, null]], "Beam.validate_data": [[374, null]], "BeamJoiningError": [[461, null]], "Beams": [[785, null]], "Brep Drill Hole Feature": [[789, "brep-drill-hole-feature"]], "Brep Subtraction Feature": [[789, "brep-subtraction-feature"]], "BuildingPlan": [[711, null]], "BuildingPlan.ToString": [[712, null]], "BuildingPlan.add_step": [[713, null]], "BuildingPlan.copy": [[714, null]], "BuildingPlan.from_json": [[715, null]], "BuildingPlan.from_jsonstring": [[716, null]], "BuildingPlan.sha256": [[717, null]], "BuildingPlan.to_json": [[718, null]], "BuildingPlan.to_jsonstring": [[719, null]], "BuildingPlan.validate_data": [[720, null]], "BuildingPlanParser": [[721, null]], "BuildingPlanParser.parse": [[722, null]], "BuildingPlanParser.serialize": [[723, null]], "COMPAS Timber Documentation": [[779, null]], "Category Joint Rules": [[790, "category-joint-rules"]], "CategoryRule": [[286, null]], "CategoryRule.ToString": [[287, null]], "CategoryRule.comply": [[288, null]], "CategoryRule.get_category_rules": [[289, null]], "CategoryRule.get_direct_rules": [[290, null]], "CategoryRule.get_topology_rules": [[291, null]], "CategoryRule.joints_from_beams_and_rules": [[292, null]], "CategoryRule.reorder": [[293, null]], "Check Attributes": [[784, "check-attributes"]], "Citing": [[776, null]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"]], "ConnectionSolver": [[27, null]], "ConnectionSolver.find_intersecting_pairs": [[28, null]], "ConnectionSolver.find_topology": [[29, null]], "Create Joint": [[778, null]], "Custom Attributes": [[784, "custom-attributes"]], "Custom Beam Dimensions": [[786, "custom-beam-dimensions"]], "DebugInfomation": [[294, null]], "DebugInfomation.ToString": [[295, null]], "DebugInfomation.add_fastener_error": [[296, null]], "DebugInfomation.add_feature_error": [[297, null]], "DebugInfomation.add_joint_error": [[298, null]], "DecomposeBeam": [[785, "decomposebeam"]], "Default Joint Rules": [[790, "default-joint-rules"]], "Delete Attributes": [[784, "delete-attributes"]], "Dependencies": [[779, "dependencies"]], "Design": [[786, null]], "Development": [[780, "development"]], "Direct Joint Rules": [[790, "direct-joint-rules"]], "DirectRule": [[299, null]], "DirectRule.ToString": [[300, null]], "DirectRule.comply": [[301, null]], "DirectRule.contains": [[302, null]], "DirectRule.get_category_rules": [[303, null]], "DirectRule.get_direct_rules": [[304, null]], "DirectRule.get_topology_rules": [[305, null]], "DirectRule.joints_from_beams_and_rules": [[306, null]], "DoubleCut": [[480, null]], "DoubleCut.ToString": [[481, null]], "DoubleCut.add_subprocessing": [[482, null]], "DoubleCut.apply": [[483, null]], "DoubleCut.copy": [[484, null]], "DoubleCut.from_json": [[485, null]], "DoubleCut.from_jsonstring": [[486, null]], "DoubleCut.from_planes_and_beam": [[487, null]], "DoubleCut.from_shapes_and_element": [[488, null]], "DoubleCut.planes_from_params_and_beam": [[489, null]], "DoubleCut.sha256": [[490, null]], "DoubleCut.to_json": [[491, null]], "DoubleCut.to_jsonstring": [[492, null]], "DoubleCut.validate_data": [[493, null]], "DovetailMortise": [[494, null]], "DovetailMortise.ToString": [[495, null]], "DovetailMortise.add_subprocessing": [[496, null]], "DovetailMortise.apply": [[497, null]], "DovetailMortise.copy": [[498, null]], "DovetailMortise.define_dovetail_tool": [[499, null]], "DovetailMortise.dovetail_cutting_frames_from_params_and_beam": [[500, null]], "DovetailMortise.dovetail_volume_from_params_and_beam": [[501, null]], "DovetailMortise.frame_from_params_and_beam": [[502, null]], "DovetailMortise.from_frame_and_beam": [[503, null]], "DovetailMortise.from_json": [[504, null]], "DovetailMortise.from_jsonstring": [[505, null]], "DovetailMortise.sha256": [[506, null]], "DovetailMortise.to_json": [[507, null]], "DovetailMortise.to_jsonstring": [[508, null]], "DovetailMortise.validate_data": [[509, null]], "DovetailTenon": [[510, null]], "DovetailTenon.ToString": [[511, null]], "DovetailTenon.add_subprocessing": [[512, null]], "DovetailTenon.apply": [[513, null]], "DovetailTenon.copy": [[514, null]], "DovetailTenon.define_dovetail_tool": [[515, null]], "DovetailTenon.dovetail_cutting_frames_from_params_and_beam": [[516, null]], "DovetailTenon.dovetail_volume_from_params_and_beam": [[517, null]], "DovetailTenon.frame_from_params_and_beam": [[518, null]], "DovetailTenon.from_json": [[519, null]], "DovetailTenon.from_jsonstring": [[520, null]], "DovetailTenon.from_plane_and_beam": [[521, null]], "DovetailTenon.sha256": [[522, null]], "DovetailTenon.to_json": [[523, null]], "DovetailTenon.to_jsonstring": [[524, null]], "DovetailTenon.validate_data": [[525, null]], "Drilling": [[526, null]], "Drilling.ToString": [[527, null]], "Drilling.add_subprocessing": [[528, null]], "Drilling.apply": [[529, null]], "Drilling.copy": [[530, null]], "Drilling.cylinder_from_params_and_element": [[531, null]], "Drilling.from_json": [[532, null]], "Drilling.from_jsonstring": [[533, null]], "Drilling.from_line_and_element": [[534, null]], "Drilling.from_shapes_and_element": [[535, null]], "Drilling.sha256": [[536, null]], "Drilling.to_json": [[537, null]], "Drilling.to_jsonstring": [[538, null]], "Drilling.validate_data": [[539, null]], "EdgePositionType": [[540, null]], "Examples": [[777, null], [787, null]], "Exceptions": [[1, "exceptions"]], "Fabrication": [[788, null]], "Fastener": [[375, null]], "Fastener.ToString": [[376, null]], "Fastener.add_feature": [[377, null]], "Fastener.compute_aabb": [[378, null]], "Fastener.compute_collision_mesh": [[379, null]], "Fastener.compute_geometry": [[380, null]], "Fastener.compute_obb": [[381, null]], "Fastener.compute_worldtransformation": [[382, null]], "Fastener.copy": [[383, null]], "Fastener.from_json": [[384, null]], "Fastener.from_jsonstring": [[385, null]], "Fastener.reset": [[386, null]], "Fastener.sha256": [[387, null]], "Fastener.to_json": [[388, null]], "Fastener.to_jsonstring": [[389, null]], "Fastener.transform": [[390, null]], "Fastener.transformed": [[391, null]], "Fastener.validate_data": [[392, null]], "FastenerApplicationError": [[462, null]], "FastenerTimberInterface": [[393, null]], "FastenerTimberInterface.ToString": [[394, null]], "FastenerTimberInterface.copy": [[395, null]], "FastenerTimberInterface.from_json": [[396, null]], "FastenerTimberInterface.from_jsonstring": [[397, null]], "FastenerTimberInterface.get_features": [[398, null]], "FastenerTimberInterface.sha256": [[399, null]], "FastenerTimberInterface.to_json": [[400, null]], "FastenerTimberInterface.to_jsonstring": [[401, null]], "FastenerTimberInterface.validate_data": [[402, null]], "FeatureApplicationError": [[463, null]], "FeatureDefinition": [[307, null]], "FeatureDefinition.ToString": [[308, null]], "Features": [[789, null]], "FindBeamByRhinoGuid": [[785, "findbeambyrhinoguid"]], "French Ridge Lap": [[790, "french-ridge-lap"]], "FrenchRidgeLap": [[541, null]], "FrenchRidgeLap.ToString": [[542, null]], "FrenchRidgeLap.add_subprocessing": [[543, null]], "FrenchRidgeLap.apply": [[544, null]], "FrenchRidgeLap.copy": [[545, null]], "FrenchRidgeLap.frame_from_params_and_beam": [[546, null]], "FrenchRidgeLap.from_beam_beam_and_plane": [[547, null]], "FrenchRidgeLap.from_json": [[548, null]], "FrenchRidgeLap.from_jsonstring": [[549, null]], "FrenchRidgeLap.lap_volume_from_params_and_beam": [[550, null]], "FrenchRidgeLap.sha256": [[551, null]], "FrenchRidgeLap.to_json": [[552, null]], "FrenchRidgeLap.to_jsonstring": [[553, null]], "FrenchRidgeLap.validate_data": [[554, null]], "Functions": [[1, "functions"], [2, "functions"], [6, "functions"]], "Grasshopper plugin": [[782, null]], "Indices and tables": [[779, "indices-and-tables"]], "Install with conda": [[780, "install-with-conda"]], "Installation": [[780, null]], "Instruction": [[724, null]], "Instruction.ToString": [[725, null]], "Instruction.copy": [[726, null]], "Instruction.from_json": [[727, null]], "Instruction.from_jsonstring": [[728, null]], "Instruction.sha256": [[729, null]], "Instruction.to_json": [[730, null]], "Instruction.to_jsonstring": [[731, null]], "Instruction.transform": [[732, null]], "Instruction.validate_data": [[733, null]], "JackRafterCut": [[555, null]], "JackRafterCut.ToString": [[556, null]], "JackRafterCut.add_subprocessing": [[557, null]], "JackRafterCut.apply": [[558, null]], "JackRafterCut.copy": [[559, null]], "JackRafterCut.from_json": [[560, null]], "JackRafterCut.from_jsonstring": [[561, null]], "JackRafterCut.from_plane_and_beam": [[562, null]], "JackRafterCut.from_shapes_and_element": [[563, null]], "JackRafterCut.plane_from_params_and_beam": [[564, null]], "JackRafterCut.sha256": [[565, null]], "JackRafterCut.to_json": [[566, null]], "JackRafterCut.to_jsonstring": [[567, null]], "JackRafterCut.validate_data": [[568, null]], "Joint": [[30, null]], "Joint Rules": [[790, null]], "Joint Rules Components": [[790, "joint-rules-components"]], "Joint Types": [[790, "joint-types"]], "Joint.ToString": [[31, null]], "Joint.add_extensions": [[32, null]], "Joint.add_features": [[33, null]], "Joint.check_elements_compatibility": [[34, null]], "Joint.copy": [[35, null]], "Joint.create": [[36, null]], "Joint.element_count_complies": [[37, null]], "Joint.from_json": [[38, null]], "Joint.from_jsonstring": [[39, null]], "Joint.get_face_most_ortho_to_beam": [[40, null]], "Joint.get_face_most_towards_beam": [[41, null]], "Joint.restore_beams_from_keys": [[42, null]], "Joint.sha256": [[43, null]], "Joint.to_json": [[44, null]], "Joint.to_jsonstring": [[45, null]], "Joint.validate_data": [[46, null]], "JointDefinition": [[309, null]], "JointDefinition.ToString": [[310, null]], "JointDefinition.is_identical": [[311, null]], "JointDefinition.match": [[312, null]], "JointRule": [[313, null]], "JointRule.comply": [[314, null]], "JointRule.get_category_rules": [[315, null]], "JointRule.get_direct_rules": [[316, null]], "JointRule.get_topology_rules": [[317, null]], "JointRule.joints_from_beams_and_rules": [[318, null]], "JointTopology": [[47, null]], "JointTopology.get_name": [[48, null]], "L-Butt": [[790, "l-butt"]], "L-Lap": [[790, "l-lap"]], "L-Miter": [[790, "l-miter"]], "LButtJoint": [[49, null]], "LButtJoint.ToString": [[50, null]], "LButtJoint.add_extensions": [[51, null]], "LButtJoint.add_features": [[52, null]], "LButtJoint.check_elements_compatibility": [[53, null]], "LButtJoint.copy": [[54, null]], "LButtJoint.create": [[55, null]], "LButtJoint.element_count_complies": [[56, null]], "LButtJoint.from_json": [[57, null]], "LButtJoint.from_jsonstring": [[58, null]], "LButtJoint.get_face_most_ortho_to_beam": [[59, null]], "LButtJoint.get_face_most_towards_beam": [[60, null]], "LButtJoint.restore_beams_from_keys": [[61, null]], "LButtJoint.sha256": [[62, null]], "LButtJoint.to_json": [[63, null]], "LButtJoint.to_jsonstring": [[64, null]], "LButtJoint.update_beam_roles": [[65, null]], "LButtJoint.validate_data": [[66, null]], "LFrenchRidgeLapJoint": [[67, null]], "LFrenchRidgeLapJoint.ToString": [[68, null]], "LFrenchRidgeLapJoint.add_extensions": [[69, null]], "LFrenchRidgeLapJoint.add_features": [[70, null]], "LFrenchRidgeLapJoint.check_elements_compatibility": [[71, null]], "LFrenchRidgeLapJoint.copy": [[72, null]], "LFrenchRidgeLapJoint.create": [[73, null]], "LFrenchRidgeLapJoint.element_count_complies": [[74, null]], "LFrenchRidgeLapJoint.from_json": [[75, null]], "LFrenchRidgeLapJoint.from_jsonstring": [[76, null]], "LFrenchRidgeLapJoint.get_cross_cutting_frame": [[77, null]], "LFrenchRidgeLapJoint.get_face_most_ortho_to_beam": [[78, null]], "LFrenchRidgeLapJoint.get_face_most_towards_beam": [[79, null]], "LFrenchRidgeLapJoint.get_main_cutting_frame": [[80, null]], "LFrenchRidgeLapJoint.restore_beams_from_keys": [[81, null]], "LFrenchRidgeLapJoint.sha256": [[82, null]], "LFrenchRidgeLapJoint.to_json": [[83, null]], "LFrenchRidgeLapJoint.to_jsonstring": [[84, null]], "LFrenchRidgeLapJoint.validate_data": [[85, null]], "LLapJoint": [[86, null]], "LLapJoint.ToString": [[87, null]], "LLapJoint.add_extensions": [[88, null]], "LLapJoint.add_features": [[89, null]], "LLapJoint.check_elements_compatibility": [[90, null]], "LLapJoint.copy": [[91, null]], "LLapJoint.create": [[92, null]], "LLapJoint.element_count_complies": [[93, null]], "LLapJoint.from_json": [[94, null]], "LLapJoint.from_jsonstring": [[95, null]], "LLapJoint.get_cross_cutting_frame": [[96, null]], "LLapJoint.get_face_most_ortho_to_beam": [[97, null]], "LLapJoint.get_face_most_towards_beam": [[98, null]], "LLapJoint.get_main_cutting_frame": [[99, null]], "LLapJoint.restore_beams_from_keys": [[100, null]], "LLapJoint.sha256": [[101, null]], "LLapJoint.to_json": [[102, null]], "LLapJoint.to_jsonstring": [[103, null]], "LLapJoint.validate_data": [[104, null]], "LMiterJoint": [[105, null]], "LMiterJoint.ToString": [[106, null]], "LMiterJoint.add_extensions": [[107, null]], "LMiterJoint.add_features": [[108, null]], "LMiterJoint.check_elements_compatibility": [[109, null]], "LMiterJoint.copy": [[110, null]], "LMiterJoint.create": [[111, null]], "LMiterJoint.element_count_complies": [[112, null]], "LMiterJoint.from_json": [[113, null]], "LMiterJoint.from_jsonstring": [[114, null]], "LMiterJoint.get_cutting_planes": [[115, null]], "LMiterJoint.get_face_most_ortho_to_beam": [[116, null]], "LMiterJoint.get_face_most_towards_beam": [[117, null]], "LMiterJoint.restore_beams_from_keys": [[118, null]], "LMiterJoint.sha256": [[119, null]], "LMiterJoint.to_json": [[120, null]], "LMiterJoint.to_jsonstring": [[121, null]], "LMiterJoint.validate_data": [[122, null]], "Lap": [[569, null]], "Lap.ToString": [[570, null]], "Lap.add_subprocessing": [[571, null]], "Lap.apply": [[572, null]], "Lap.copy": [[573, null]], "Lap.from_json": [[574, null]], "Lap.from_jsonstring": [[575, null]], "Lap.from_plane_and_beam": [[576, null]], "Lap.planes_from_params_and_beam": [[577, null]], "Lap.sha256": [[578, null]], "Lap.to_json": [[579, null]], "Lap.to_jsonstring": [[580, null]], "Lap.validate_data": [[581, null]], "Lap.volume_from_params_and_beam": [[582, null]], "LapJoint": [[123, null]], "LapJoint.ToString": [[124, null]], "LapJoint.add_extensions": [[125, null]], "LapJoint.add_features": [[126, null]], "LapJoint.check_elements_compatibility": [[127, null]], "LapJoint.copy": [[128, null]], "LapJoint.create": [[129, null]], "LapJoint.element_count_complies": [[130, null]], "LapJoint.from_json": [[131, null]], "LapJoint.from_jsonstring": [[132, null]], "LapJoint.get_cross_cutting_frame": [[133, null]], "LapJoint.get_face_most_ortho_to_beam": [[134, null]], "LapJoint.get_face_most_towards_beam": [[135, null]], "LapJoint.get_main_cutting_frame": [[136, null]], "LapJoint.restore_beams_from_keys": [[137, null]], "LapJoint.sha256": [[138, null]], "LapJoint.to_json": [[139, null]], "LapJoint.to_jsonstring": [[140, null]], "LapJoint.validate_data": [[141, null]], "License": [[781, null]], "LimitationTopType": [[583, null]], "LinearDimension": [[734, null]], "LinearDimension.ToString": [[735, null]], "LinearDimension.copy": [[736, null]], "LinearDimension.from_json": [[737, null]], "LinearDimension.from_jsonstring": [[738, null]], "LinearDimension.sha256": [[739, null]], "LinearDimension.to_json": [[740, null]], "LinearDimension.to_jsonstring": [[741, null]], "LinearDimension.transform": [[742, null]], "LinearDimension.validate_data": [[743, null]], "MachiningLimits": [[584, null]], "Model": [[791, null]], "Model3d": [[744, null]], "Model3d.ToString": [[745, null]], "Model3d.copy": [[746, null]], "Model3d.from_json": [[747, null]], "Model3d.from_jsonstring": [[748, null]], "Model3d.sha256": [[749, null]], "Model3d.to_json": [[750, null]], "Model3d.to_jsonstring": [[751, null]], "Model3d.transform": [[752, null]], "Model3d.validate_data": [[753, null]], "Mortise": [[585, null]], "Mortise.ToString": [[586, null]], "Mortise.add_subprocessing": [[587, null]], "Mortise.apply": [[588, null]], "Mortise.copy": [[589, null]], "Mortise.frame_from_params_and_beam": [[590, null]], "Mortise.from_frame_and_beam": [[591, null]], "Mortise.from_json": [[592, null]], "Mortise.from_jsonstring": [[593, null]], "Mortise.sha256": [[594, null]], "Mortise.to_json": [[595, null]], "Mortise.to_jsonstring": [[596, null]], "Mortise.validate_data": [[597, null]], "Mortise.volume_from_params_and_beam": [[598, null]], "NullJoint": [[142, null]], "NullJoint.ToString": [[143, null]], "NullJoint.add_extensions": [[144, null]], "NullJoint.add_features": [[145, null]], "NullJoint.check_elements_compatibility": [[146, null]], "NullJoint.copy": [[147, null]], "NullJoint.create": [[148, null]], "NullJoint.element_count_complies": [[149, null]], "NullJoint.from_json": [[150, null]], "NullJoint.from_jsonstring": [[151, null]], "NullJoint.get_face_most_ortho_to_beam": [[152, null]], "NullJoint.get_face_most_towards_beam": [[153, null]], "NullJoint.restore_beams_from_keys": [[154, null]], "NullJoint.sha256": [[155, null]], "NullJoint.to_json": [[156, null]], "NullJoint.to_jsonstring": [[157, null]], "NullJoint.validate_data": [[158, null]], "OrientationType": [[599, null]], "Packages": [[0, "packages"]], "Plate": [[403, null]], "Plate.ToString": [[404, null]], "Plate.add_feature": [[405, null]], "Plate.add_features": [[406, null]], "Plate.compute_aabb": [[407, null]], "Plate.compute_collision_mesh": [[408, null]], "Plate.compute_geometry": [[409, null]], "Plate.compute_obb": [[410, null]], "Plate.compute_worldtransformation": [[411, null]], "Plate.copy": [[412, null]], "Plate.from_json": [[413, null]], "Plate.from_jsonstring": [[414, null]], "Plate.remove_features": [[415, null]], "Plate.reset": [[416, null]], "Plate.set_frame_and_outline": [[417, null]], "Plate.sha256": [[418, null]], "Plate.to_json": [[419, null]], "Plate.to_jsonstring": [[420, null]], "Plate.transform": [[421, null]], "Plate.transformed": [[422, null]], "Plate.validate_data": [[423, null]], "Plugins": [[9, "plugins"]], "Show": [[792, null]], "Show Beam Face Index": [[792, "show-beam-face-index"]], "Show Beam Index": [[792, "show-beam-index"]], "Show Feature Errors": [[792, "show-feature-errors"]], "Show Joining Errors": [[792, "show-joining-errors"]], "Show Joint Types": [[792, "show-joint-types"]], "Show Surface Model Beam Types": [[792, "show-surface-model-beam-types"]], "Show Topology Types": [[792, "show-topology-types"]], "SimpleSequenceGenerator": [[754, null]], "Slot": [[600, null]], "Slot.ToString": [[601, null]], "Slot.add_subprocessing": [[602, null]], "Slot.apply": [[603, null]], "Slot.copy": [[604, null]], "Slot.from_json": [[605, null]], "Slot.from_jsonstring": [[606, null]], "Slot.from_plane_and_beam": [[607, null]], "Slot.sha256": [[608, null]], "Slot.to_json": [[609, null]], "Slot.to_jsonstring": [[610, null]], "Slot.validate_data": [[611, null]], "Stable": [[780, "stable"]], "Standard Attributes": [[784, "standard-attributes"]], "Step": [[755, null]], "Step.ToString": [[756, null]], "Step.copy": [[757, null]], "Step.from_json": [[758, null]], "Step.from_jsonstring": [[759, null]], "Step.sha256": [[760, null]], "Step.to_json": [[761, null]], "Step.to_jsonstring": [[762, null]], "Step.transform": [[763, null]], "Step.validate_data": [[764, null]], "StepJoint": [[612, null]], "StepJoint.ToString": [[613, null]], "StepJoint.add_subprocessing": [[614, null]], "StepJoint.add_tenon": [[615, null]], "StepJoint.apply": [[616, null]], "StepJoint.copy": [[617, null]], "StepJoint.from_json": [[618, null]], "StepJoint.from_jsonstring": [[619, null]], "StepJoint.from_plane_and_beam": [[620, null]], "StepJoint.planes_from_params_and_beam": [[621, null]], "StepJoint.sha256": [[622, null]], "StepJoint.tenon_volume_from_params_and_beam": [[623, null]], "StepJoint.to_json": [[624, null]], "StepJoint.to_jsonstring": [[625, null]], "StepJoint.validate_data": [[626, null]], "StepJointNotch": [[627, null]], "StepJointNotch.ToString": [[628, null]], "StepJointNotch.add_mortise": [[629, null]], "StepJointNotch.add_subprocessing": [[630, null]], "StepJointNotch.apply": [[631, null]], "StepJointNotch.copy": [[632, null]], "StepJointNotch.from_json": [[633, null]], "StepJointNotch.from_jsonstring": [[634, null]], "StepJointNotch.from_plane_and_beam": [[635, null]], "StepJointNotch.mortise_volume_from_params_and_beam": [[636, null]], "StepJointNotch.planes_from_params_and_beam": [[637, null]], "StepJointNotch.sha256": [[638, null]], "StepJointNotch.to_json": [[639, null]], "StepJointNotch.to_jsonstring": [[640, null]], "StepJointNotch.validate_data": [[641, null]], "StepShapeType": [[642, null]], "Summary Table": [[790, "summary-table"]], "Surface Model": [[786, "surface-model"]], "Surface Model Joint Override": [[790, "surface-model-joint-override"]], "Surface Model Options": [[786, "surface-model-options"]], "SurfaceModel": [[319, null]], "SurfaceModel.beam_category_names": [[320, null]], "SurfaceModel.create_model": [[321, null]], "SurfaceModel.cull_overlaps": [[322, null]], "SurfaceModel.distance_between_elements": [[323, null]], "SurfaceModel.generate_frame": [[324, null]], "SurfaceModel.generate_perimeter_beams": [[325, null]], "SurfaceModel.generate_plates": [[326, null]], "SurfaceModel.generate_stud_lines": [[327, null]], "SurfaceModel.generate_studs": [[328, null]], "SurfaceModel.generate_windows": [[329, null]], "SurfaceModel.get_beam_intersections": [[330, null]], "SurfaceModel.get_interior_segment_indices": [[331, null]], "SurfaceModel.offset_elements": [[332, null]], "SurfaceModel.parse_loops": [[333, null]], "SurfaceModel.trim_jack_studs": [[334, null]], "SurfaceModel.trim_king_studs": [[335, null]], "SurfaceModel.trim_studs": [[336, null]], "T-Butt": [[790, "t-butt"]], "T-Lap": [[790, "t-lap"]], "TBirdsmouthJoint": [[159, null]], "TBirdsmouthJoint.ToString": [[160, null]], "TBirdsmouthJoint.add_extensions": [[161, null]], "TBirdsmouthJoint.add_features": [[162, null]], "TBirdsmouthJoint.check_elements_compatibility": [[163, null]], "TBirdsmouthJoint.copy": [[164, null]], "TBirdsmouthJoint.create": [[165, null]], "TBirdsmouthJoint.element_count_complies": [[166, null]], "TBirdsmouthJoint.from_json": [[167, null]], "TBirdsmouthJoint.from_jsonstring": [[168, null]], "TBirdsmouthJoint.get_face_most_ortho_to_beam": [[169, null]], "TBirdsmouthJoint.get_face_most_towards_beam": [[170, null]], "TBirdsmouthJoint.restore_beams_from_keys": [[171, null]], "TBirdsmouthJoint.sha256": [[172, null]], "TBirdsmouthJoint.to_json": [[173, null]], "TBirdsmouthJoint.to_jsonstring": [[174, null]], "TBirdsmouthJoint.validate_data": [[175, null]], "TButtJoint": [[176, null]], "TButtJoint.ToString": [[177, null]], "TButtJoint.add_extensions": [[178, null]], "TButtJoint.add_features": [[179, null]], "TButtJoint.check_elements_compatibility": [[180, null]], "TButtJoint.copy": [[181, null]], "TButtJoint.create": [[182, null]], "TButtJoint.element_count_complies": [[183, null]], "TButtJoint.from_json": [[184, null]], "TButtJoint.from_jsonstring": [[185, null]], "TButtJoint.get_face_most_ortho_to_beam": [[186, null]], "TButtJoint.get_face_most_towards_beam": [[187, null]], "TButtJoint.restore_beams_from_keys": [[188, null]], "TButtJoint.sha256": [[189, null]], "TButtJoint.to_json": [[190, null]], "TButtJoint.to_jsonstring": [[191, null]], "TButtJoint.validate_data": [[192, null]], "TDovetailJoint": [[193, null]], "TDovetailJoint.ToString": [[194, null]], "TDovetailJoint.add_extensions": [[195, null]], "TDovetailJoint.add_features": [[196, null]], "TDovetailJoint.check_elements_compatibility": [[197, null]], "TDovetailJoint.copy": [[198, null]], "TDovetailJoint.create": [[199, null]], "TDovetailJoint.define_dovetail_tool": [[200, null]], "TDovetailJoint.element_count_complies": [[201, null]], "TDovetailJoint.from_json": [[202, null]], "TDovetailJoint.from_jsonstring": [[203, null]], "TDovetailJoint.get_face_most_ortho_to_beam": [[204, null]], "TDovetailJoint.get_face_most_towards_beam": [[205, null]], "TDovetailJoint.restore_beams_from_keys": [[206, null]], "TDovetailJoint.sha256": [[207, null]], "TDovetailJoint.to_json": [[208, null]], "TDovetailJoint.to_jsonstring": [[209, null]], "TDovetailJoint.validate_data": [[210, null]], "TLapJoint": [[211, null]], "TLapJoint.ToString": [[212, null]], "TLapJoint.add_extensions": [[213, null]], "TLapJoint.add_features": [[214, null]], "TLapJoint.check_elements_compatibility": [[215, null]], "TLapJoint.copy": [[216, null]], "TLapJoint.create": [[217, null]], "TLapJoint.element_count_complies": [[218, null]], "TLapJoint.from_json": [[219, null]], "TLapJoint.from_jsonstring": [[220, null]], "TLapJoint.get_cross_cutting_frame": [[221, null]], "TLapJoint.get_face_most_ortho_to_beam": [[222, null]], "TLapJoint.get_face_most_towards_beam": [[223, null]], "TLapJoint.get_main_cutting_frame": [[224, null]], "TLapJoint.restore_beams_from_keys": [[225, null]], "TLapJoint.sha256": [[226, null]], "TLapJoint.to_json": [[227, null]], "TLapJoint.to_jsonstring": [[228, null]], "TLapJoint.validate_data": [[229, null]], "TStepJoint": [[230, null]], "TStepJoint.ToString": [[231, null]], "TStepJoint.add_extensions": [[232, null]], "TStepJoint.add_features": [[233, null]], "TStepJoint.check_elements_compatibility": [[234, null]], "TStepJoint.copy": [[235, null]], "TStepJoint.create": [[236, null]], "TStepJoint.element_count_complies": [[237, null]], "TStepJoint.from_json": [[238, null]], "TStepJoint.from_jsonstring": [[239, null]], "TStepJoint.get_face_most_ortho_to_beam": [[240, null]], "TStepJoint.get_face_most_towards_beam": [[241, null]], "TStepJoint.restore_beams_from_keys": [[242, null]], "TStepJoint.set_step_depths": [[243, null]], "TStepJoint.sha256": [[244, null]], "TStepJoint.to_json": [[245, null]], "TStepJoint.to_jsonstring": [[246, null]], "TStepJoint.validate_data": [[247, null]], "Table of Contents": [[779, "table-of-contents"]], "Tenon": [[643, null]], "Tenon.ToString": [[644, null]], "Tenon.add_subprocessing": [[645, null]], "Tenon.apply": [[646, null]], "Tenon.copy": [[647, null]], "Tenon.frame_from_params_and_beam": [[648, null]], "Tenon.from_json": [[649, null]], "Tenon.from_jsonstring": [[650, null]], "Tenon.from_plane_and_beam": [[651, null]], "Tenon.sha256": [[652, null]], "Tenon.to_json": [[653, null]], "Tenon.to_jsonstring": [[654, null]], "Tenon.validate_data": [[655, null]], "Tenon.volume_from_params_and_beam": [[656, null]], "TenonMortiseJoint": [[248, null]], "TenonMortiseJoint.ToString": [[249, null]], "TenonMortiseJoint.add_extensions": [[250, null]], "TenonMortiseJoint.add_features": [[251, null]], "TenonMortiseJoint.check_elements_compatibility": [[252, null]], "TenonMortiseJoint.copy": [[253, null]], "TenonMortiseJoint.create": [[254, null]], "TenonMortiseJoint.element_count_complies": [[255, null]], "TenonMortiseJoint.from_json": [[256, null]], "TenonMortiseJoint.from_jsonstring": [[257, null]], "TenonMortiseJoint.get_face_most_ortho_to_beam": [[258, null]], "TenonMortiseJoint.get_face_most_towards_beam": [[259, null]], "TenonMortiseJoint.restore_beams_from_keys": [[260, null]], "TenonMortiseJoint.set_default_values": [[261, null]], "TenonMortiseJoint.sha256": [[262, null]], "TenonMortiseJoint.to_json": [[263, null]], "TenonMortiseJoint.to_jsonstring": [[264, null]], "TenonMortiseJoint.validate_data": [[265, null]], "TenonShapeType": [[657, null]], "Text3d": [[765, null]], "Text3d.ToString": [[766, null]], "Text3d.copy": [[767, null]], "Text3d.from_json": [[768, null]], "Text3d.from_jsonstring": [[769, null]], "Text3d.sha256": [[770, null]], "Text3d.to_json": [[771, null]], "Text3d.to_jsonstring": [[772, null]], "Text3d.transform": [[773, null]], "Text3d.validate_data": [[774, null]], "Timber Assembly Examples": [[777, "timber-assembly-examples"]], "TimberElement": [[424, null]], "TimberElement.ToString": [[425, null]], "TimberElement.add_feature": [[426, null]], "TimberElement.compute_aabb": [[427, null]], "TimberElement.compute_collision_mesh": [[428, null]], "TimberElement.compute_geometry": [[429, null]], "TimberElement.compute_obb": [[430, null]], "TimberElement.compute_worldtransformation": [[431, null]], "TimberElement.copy": [[432, null]], "TimberElement.from_json": [[433, null]], "TimberElement.from_jsonstring": [[434, null]], "TimberElement.reset": [[435, null]], "TimberElement.sha256": [[436, null]], "TimberElement.to_json": [[437, null]], "TimberElement.to_jsonstring": [[438, null]], "TimberElement.transform": [[439, null]], "TimberElement.transformed": [[440, null]], "TimberElement.validate_data": [[441, null]], "TimberModel": [[665, null]], "TimberModel.ToString": [[666, null]], "TimberModel.add_element": [[667, null]], "TimberModel.add_elements": [[668, null]], "TimberModel.add_group": [[669, null]], "TimberModel.add_group_element": [[670, null]], "TimberModel.add_interaction": [[671, null]], "TimberModel.add_joint": [[672, null]], "TimberModel.add_material": [[673, null]], "TimberModel.assign_material": [[674, null]], "TimberModel.compute_aabb": [[675, null]], "TimberModel.compute_obb": [[676, null]], "TimberModel.copy": [[677, null]], "TimberModel.element_by_guid": [[678, null]], "TimberModel.elements": [[679, null]], "TimberModel.elements_connected_by": [[680, null]], "TimberModel.from_json": [[681, null]], "TimberModel.from_jsonstring": [[682, null]], "TimberModel.get_elements_in_group": [[683, null]], "TimberModel.has_element": [[684, null]], "TimberModel.has_group": [[685, null]], "TimberModel.has_interaction": [[686, null]], "TimberModel.has_material": [[687, null]], "TimberModel.interactions": [[688, null]], "TimberModel.materials": [[689, null]], "TimberModel.process_joinery": [[690, null]], "TimberModel.remove_element": [[691, null]], "TimberModel.remove_interaction": [[692, null]], "TimberModel.remove_joint": [[693, null]], "TimberModel.rotate": [[694, null]], "TimberModel.rotated": [[695, null]], "TimberModel.scale": [[696, null]], "TimberModel.scaled": [[697, null]], "TimberModel.set_topologies": [[698, null]], "TimberModel.sha256": [[699, null]], "TimberModel.to_json": [[700, null]], "TimberModel.to_jsonstring": [[701, null]], "TimberModel.transform": [[702, null]], "TimberModel.transform_numpy": [[703, null]], "TimberModel.transformed": [[704, null]], "TimberModel.transformed_numpy": [[705, null]], "TimberModel.translate": [[706, null]], "TimberModel.translated": [[707, null]], "TimberModel.validate_data": [[708, null]], "Topological Joint Rules": [[790, "topological-joint-rules"]], "TopologyRule": [[337, null]], "TopologyRule.ToString": [[338, null]], "TopologyRule.comply": [[339, null]], "TopologyRule.get_category_rules": [[340, null]], "TopologyRule.get_direct_rules": [[341, null]], "TopologyRule.get_topology_rules": [[342, null]], "TopologyRule.joints_from_beams_and_rules": [[343, null]], "Trim Feature": [[789, "trim-feature"]], "Utils": [[793, null]], "Wall": [[442, null]], "Wall.ToString": [[443, null]], "Wall.add_feature": [[444, null]], "Wall.compute_aabb": [[445, null]], "Wall.compute_collision_mesh": [[446, null]], "Wall.compute_geometry": [[447, null]], "Wall.compute_obb": [[448, null]], "Wall.compute_worldtransformation": [[449, null]], "Wall.copy": [[450, null]], "Wall.from_box": [[451, null]], "Wall.from_json": [[452, null]], "Wall.from_jsonstring": [[453, null]], "Wall.reset": [[454, null]], "Wall.sha256": [[455, null]], "Wall.to_json": [[456, null]], "Wall.to_jsonstring": [[457, null]], "Wall.transform": [[458, null]], "Wall.transformed": [[459, null]], "Wall.validate_data": [[460, null]], "Workflow": [[794, null]], "Write BTLx": [[788, "write-btlx"]], "X-Lap": [[790, "x-lap"]], "XLapJoint": [[266, null]], "XLapJoint.ToString": [[267, null]], "XLapJoint.add_extensions": [[268, null]], "XLapJoint.add_features": [[269, null]], "XLapJoint.check_elements_compatibility": [[270, null]], "XLapJoint.copy": [[271, null]], "XLapJoint.create": [[272, null]], "XLapJoint.element_count_complies": [[273, null]], "XLapJoint.from_json": [[274, null]], "XLapJoint.from_jsonstring": [[275, null]], "XLapJoint.get_cross_cutting_frame": [[276, null]], "XLapJoint.get_face_most_ortho_to_beam": [[277, null]], "XLapJoint.get_face_most_towards_beam": [[278, null]], "XLapJoint.get_main_cutting_frame": [[279, null]], "XLapJoint.restore_beams_from_keys": [[280, null]], "XLapJoint.sha256": [[281, null]], "XLapJoint.to_json": [[282, null]], "XLapJoint.to_jsonstring": [[283, null]], "XLapJoint.validate_data": [[284, null]], "add_gh_param": [[658, null]], "clear_gh_params": [[659, null]], "compas_timber.connections": [[1, null]], "compas_timber.design": [[2, null]], "compas_timber.elements": [[3, null]], "compas_timber.errors": [[4, null]], "compas_timber.fabrication": [[5, null]], "compas_timber.ghpython": [[6, null]], "compas_timber.model": [[7, null]], "compas_timber.planning": [[8, null]], "compas_timber.rhino": [[9, null]], "find_neighboring_beams": [[285, null], [775, null]], "get_leaf_subclasses": [[660, null]], "guess_joint_topology_2beams": [[344, null]], "item_input_valid": [[661, null]], "list_input_valid": [[662, null]], "manage_dynamic_params": [[663, null]], "rename_gh_input": [[664, null]], "set_default_joints": [[345, null]]}, "docnames": ["api", "api/compas_timber.connections", "api/compas_timber.design", "api/compas_timber.elements", "api/compas_timber.errors", "api/compas_timber.fabrication", "api/compas_timber.ghpython", "api/compas_timber.model", "api/compas_timber.planning", "api/compas_timber.rhino", "api/generated/compas_timber.connections.BallNodeJoint", "api/generated/compas_timber.connections.BallNodeJoint.ToString", "api/generated/compas_timber.connections.BallNodeJoint.add_extensions", "api/generated/compas_timber.connections.BallNodeJoint.add_features", "api/generated/compas_timber.connections.BallNodeJoint.check_elements_compatibility", "api/generated/compas_timber.connections.BallNodeJoint.copy", "api/generated/compas_timber.connections.BallNodeJoint.create", "api/generated/compas_timber.connections.BallNodeJoint.element_count_complies", "api/generated/compas_timber.connections.BallNodeJoint.from_json", "api/generated/compas_timber.connections.BallNodeJoint.from_jsonstring", "api/generated/compas_timber.connections.BallNodeJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.BallNodeJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.BallNodeJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.BallNodeJoint.sha256", "api/generated/compas_timber.connections.BallNodeJoint.to_json", "api/generated/compas_timber.connections.BallNodeJoint.to_jsonstring", "api/generated/compas_timber.connections.BallNodeJoint.validate_data", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_extensions", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.check_elements_compatibility", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.element_count_complies", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.from_jsonstring", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.to_jsonstring", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_extensions", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.element_count_complies", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring", "api/generated/compas_timber.connections.LButtJoint.update_beam_roles", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.ToString", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.add_extensions", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.add_features", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.copy", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.create", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.element_count_complies", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.from_json", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.from_jsonstring", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.sha256", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.to_json", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.to_jsonstring", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.validate_data", "api/generated/compas_timber.connections.LLapJoint", "api/generated/compas_timber.connections.LLapJoint.ToString", "api/generated/compas_timber.connections.LLapJoint.add_extensions", "api/generated/compas_timber.connections.LLapJoint.add_features", "api/generated/compas_timber.connections.LLapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LLapJoint.copy", "api/generated/compas_timber.connections.LLapJoint.create", "api/generated/compas_timber.connections.LLapJoint.element_count_complies", "api/generated/compas_timber.connections.LLapJoint.from_json", "api/generated/compas_timber.connections.LLapJoint.from_jsonstring", "api/generated/compas_timber.connections.LLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LLapJoint.sha256", "api/generated/compas_timber.connections.LLapJoint.to_json", "api/generated/compas_timber.connections.LLapJoint.to_jsonstring", "api/generated/compas_timber.connections.LLapJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_extensions", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.element_count_complies", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.LapJoint", "api/generated/compas_timber.connections.LapJoint.ToString", "api/generated/compas_timber.connections.LapJoint.add_extensions", "api/generated/compas_timber.connections.LapJoint.add_features", "api/generated/compas_timber.connections.LapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LapJoint.copy", "api/generated/compas_timber.connections.LapJoint.create", "api/generated/compas_timber.connections.LapJoint.element_count_complies", "api/generated/compas_timber.connections.LapJoint.from_json", "api/generated/compas_timber.connections.LapJoint.from_jsonstring", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LapJoint.sha256", "api/generated/compas_timber.connections.LapJoint.to_json", "api/generated/compas_timber.connections.LapJoint.to_jsonstring", "api/generated/compas_timber.connections.LapJoint.validate_data", "api/generated/compas_timber.connections.NullJoint", "api/generated/compas_timber.connections.NullJoint.ToString", "api/generated/compas_timber.connections.NullJoint.add_extensions", "api/generated/compas_timber.connections.NullJoint.add_features", "api/generated/compas_timber.connections.NullJoint.check_elements_compatibility", "api/generated/compas_timber.connections.NullJoint.copy", "api/generated/compas_timber.connections.NullJoint.create", "api/generated/compas_timber.connections.NullJoint.element_count_complies", "api/generated/compas_timber.connections.NullJoint.from_json", "api/generated/compas_timber.connections.NullJoint.from_jsonstring", "api/generated/compas_timber.connections.NullJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.NullJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.NullJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.NullJoint.sha256", "api/generated/compas_timber.connections.NullJoint.to_json", "api/generated/compas_timber.connections.NullJoint.to_jsonstring", "api/generated/compas_timber.connections.NullJoint.validate_data", "api/generated/compas_timber.connections.TBirdsmouthJoint", "api/generated/compas_timber.connections.TBirdsmouthJoint.ToString", "api/generated/compas_timber.connections.TBirdsmouthJoint.add_extensions", "api/generated/compas_timber.connections.TBirdsmouthJoint.add_features", "api/generated/compas_timber.connections.TBirdsmouthJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TBirdsmouthJoint.copy", "api/generated/compas_timber.connections.TBirdsmouthJoint.create", "api/generated/compas_timber.connections.TBirdsmouthJoint.element_count_complies", "api/generated/compas_timber.connections.TBirdsmouthJoint.from_json", "api/generated/compas_timber.connections.TBirdsmouthJoint.from_jsonstring", "api/generated/compas_timber.connections.TBirdsmouthJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TBirdsmouthJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TBirdsmouthJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TBirdsmouthJoint.sha256", "api/generated/compas_timber.connections.TBirdsmouthJoint.to_json", "api/generated/compas_timber.connections.TBirdsmouthJoint.to_jsonstring", "api/generated/compas_timber.connections.TBirdsmouthJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_extensions", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.element_count_complies", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.TDovetailJoint", "api/generated/compas_timber.connections.TDovetailJoint.ToString", "api/generated/compas_timber.connections.TDovetailJoint.add_extensions", "api/generated/compas_timber.connections.TDovetailJoint.add_features", "api/generated/compas_timber.connections.TDovetailJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TDovetailJoint.copy", "api/generated/compas_timber.connections.TDovetailJoint.create", "api/generated/compas_timber.connections.TDovetailJoint.define_dovetail_tool", "api/generated/compas_timber.connections.TDovetailJoint.element_count_complies", "api/generated/compas_timber.connections.TDovetailJoint.from_json", "api/generated/compas_timber.connections.TDovetailJoint.from_jsonstring", "api/generated/compas_timber.connections.TDovetailJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TDovetailJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TDovetailJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TDovetailJoint.sha256", "api/generated/compas_timber.connections.TDovetailJoint.to_json", "api/generated/compas_timber.connections.TDovetailJoint.to_jsonstring", "api/generated/compas_timber.connections.TDovetailJoint.validate_data", "api/generated/compas_timber.connections.TLapJoint", "api/generated/compas_timber.connections.TLapJoint.ToString", "api/generated/compas_timber.connections.TLapJoint.add_extensions", "api/generated/compas_timber.connections.TLapJoint.add_features", "api/generated/compas_timber.connections.TLapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TLapJoint.copy", "api/generated/compas_timber.connections.TLapJoint.create", "api/generated/compas_timber.connections.TLapJoint.element_count_complies", "api/generated/compas_timber.connections.TLapJoint.from_json", "api/generated/compas_timber.connections.TLapJoint.from_jsonstring", "api/generated/compas_timber.connections.TLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.TLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.TLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TLapJoint.sha256", "api/generated/compas_timber.connections.TLapJoint.to_json", "api/generated/compas_timber.connections.TLapJoint.to_jsonstring", "api/generated/compas_timber.connections.TLapJoint.validate_data", "api/generated/compas_timber.connections.TStepJoint", "api/generated/compas_timber.connections.TStepJoint.ToString", "api/generated/compas_timber.connections.TStepJoint.add_extensions", "api/generated/compas_timber.connections.TStepJoint.add_features", "api/generated/compas_timber.connections.TStepJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TStepJoint.copy", "api/generated/compas_timber.connections.TStepJoint.create", "api/generated/compas_timber.connections.TStepJoint.element_count_complies", "api/generated/compas_timber.connections.TStepJoint.from_json", "api/generated/compas_timber.connections.TStepJoint.from_jsonstring", "api/generated/compas_timber.connections.TStepJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TStepJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TStepJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TStepJoint.set_step_depths", "api/generated/compas_timber.connections.TStepJoint.sha256", "api/generated/compas_timber.connections.TStepJoint.to_json", "api/generated/compas_timber.connections.TStepJoint.to_jsonstring", "api/generated/compas_timber.connections.TStepJoint.validate_data", "api/generated/compas_timber.connections.TenonMortiseJoint", "api/generated/compas_timber.connections.TenonMortiseJoint.ToString", "api/generated/compas_timber.connections.TenonMortiseJoint.add_extensions", "api/generated/compas_timber.connections.TenonMortiseJoint.add_features", "api/generated/compas_timber.connections.TenonMortiseJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TenonMortiseJoint.copy", "api/generated/compas_timber.connections.TenonMortiseJoint.create", "api/generated/compas_timber.connections.TenonMortiseJoint.element_count_complies", "api/generated/compas_timber.connections.TenonMortiseJoint.from_json", "api/generated/compas_timber.connections.TenonMortiseJoint.from_jsonstring", "api/generated/compas_timber.connections.TenonMortiseJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TenonMortiseJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TenonMortiseJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TenonMortiseJoint.set_default_values", "api/generated/compas_timber.connections.TenonMortiseJoint.sha256", "api/generated/compas_timber.connections.TenonMortiseJoint.to_json", "api/generated/compas_timber.connections.TenonMortiseJoint.to_jsonstring", "api/generated/compas_timber.connections.TenonMortiseJoint.validate_data", "api/generated/compas_timber.connections.XLapJoint", "api/generated/compas_timber.connections.XLapJoint.ToString", "api/generated/compas_timber.connections.XLapJoint.add_extensions", "api/generated/compas_timber.connections.XLapJoint.add_features", "api/generated/compas_timber.connections.XLapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.XLapJoint.copy", "api/generated/compas_timber.connections.XLapJoint.create", "api/generated/compas_timber.connections.XLapJoint.element_count_complies", "api/generated/compas_timber.connections.XLapJoint.from_json", "api/generated/compas_timber.connections.XLapJoint.from_jsonstring", "api/generated/compas_timber.connections.XLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.XLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.XLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.XLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.XLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.XLapJoint.sha256", "api/generated/compas_timber.connections.XLapJoint.to_json", "api/generated/compas_timber.connections.XLapJoint.to_jsonstring", "api/generated/compas_timber.connections.XLapJoint.validate_data", "api/generated/compas_timber.connections.find_neighboring_beams", "api/generated/compas_timber.design.CategoryRule", "api/generated/compas_timber.design.CategoryRule.ToString", "api/generated/compas_timber.design.CategoryRule.comply", "api/generated/compas_timber.design.CategoryRule.get_category_rules", "api/generated/compas_timber.design.CategoryRule.get_direct_rules", "api/generated/compas_timber.design.CategoryRule.get_topology_rules", "api/generated/compas_timber.design.CategoryRule.joints_from_beams_and_rules", "api/generated/compas_timber.design.CategoryRule.reorder", "api/generated/compas_timber.design.DebugInfomation", "api/generated/compas_timber.design.DebugInfomation.ToString", "api/generated/compas_timber.design.DebugInfomation.add_fastener_error", "api/generated/compas_timber.design.DebugInfomation.add_feature_error", "api/generated/compas_timber.design.DebugInfomation.add_joint_error", "api/generated/compas_timber.design.DirectRule", "api/generated/compas_timber.design.DirectRule.ToString", "api/generated/compas_timber.design.DirectRule.comply", "api/generated/compas_timber.design.DirectRule.contains", "api/generated/compas_timber.design.DirectRule.get_category_rules", "api/generated/compas_timber.design.DirectRule.get_direct_rules", "api/generated/compas_timber.design.DirectRule.get_topology_rules", "api/generated/compas_timber.design.DirectRule.joints_from_beams_and_rules", "api/generated/compas_timber.design.FeatureDefinition", "api/generated/compas_timber.design.FeatureDefinition.ToString", "api/generated/compas_timber.design.JointDefinition", "api/generated/compas_timber.design.JointDefinition.ToString", "api/generated/compas_timber.design.JointDefinition.is_identical", "api/generated/compas_timber.design.JointDefinition.match", "api/generated/compas_timber.design.JointRule", "api/generated/compas_timber.design.JointRule.comply", "api/generated/compas_timber.design.JointRule.get_category_rules", "api/generated/compas_timber.design.JointRule.get_direct_rules", "api/generated/compas_timber.design.JointRule.get_topology_rules", "api/generated/compas_timber.design.JointRule.joints_from_beams_and_rules", "api/generated/compas_timber.design.SurfaceModel", "api/generated/compas_timber.design.SurfaceModel.beam_category_names", "api/generated/compas_timber.design.SurfaceModel.create_model", "api/generated/compas_timber.design.SurfaceModel.cull_overlaps", "api/generated/compas_timber.design.SurfaceModel.distance_between_elements", "api/generated/compas_timber.design.SurfaceModel.generate_frame", "api/generated/compas_timber.design.SurfaceModel.generate_perimeter_beams", "api/generated/compas_timber.design.SurfaceModel.generate_plates", "api/generated/compas_timber.design.SurfaceModel.generate_stud_lines", "api/generated/compas_timber.design.SurfaceModel.generate_studs", "api/generated/compas_timber.design.SurfaceModel.generate_windows", "api/generated/compas_timber.design.SurfaceModel.get_beam_intersections", "api/generated/compas_timber.design.SurfaceModel.get_interior_segment_indices", "api/generated/compas_timber.design.SurfaceModel.offset_elements", "api/generated/compas_timber.design.SurfaceModel.parse_loops", "api/generated/compas_timber.design.SurfaceModel.trim_jack_studs", "api/generated/compas_timber.design.SurfaceModel.trim_king_studs", "api/generated/compas_timber.design.SurfaceModel.trim_studs", "api/generated/compas_timber.design.TopologyRule", "api/generated/compas_timber.design.TopologyRule.ToString", "api/generated/compas_timber.design.TopologyRule.comply", "api/generated/compas_timber.design.TopologyRule.get_category_rules", "api/generated/compas_timber.design.TopologyRule.get_direct_rules", "api/generated/compas_timber.design.TopologyRule.get_topology_rules", "api/generated/compas_timber.design.TopologyRule.joints_from_beams_and_rules", "api/generated/compas_timber.design.guess_joint_topology_2beams", "api/generated/compas_timber.design.set_default_joints", "api/generated/compas_timber.elements.Beam", "api/generated/compas_timber.elements.Beam.ToString", "api/generated/compas_timber.elements.Beam.add_blank_extension", "api/generated/compas_timber.elements.Beam.add_feature", "api/generated/compas_timber.elements.Beam.add_features", "api/generated/compas_timber.elements.Beam.compute_aabb", "api/generated/compas_timber.elements.Beam.compute_collision_mesh", "api/generated/compas_timber.elements.Beam.compute_geometry", "api/generated/compas_timber.elements.Beam.compute_obb", "api/generated/compas_timber.elements.Beam.compute_worldtransformation", "api/generated/compas_timber.elements.Beam.copy", "api/generated/compas_timber.elements.Beam.endpoint_closest_to_point", "api/generated/compas_timber.elements.Beam.extension_to_plane", "api/generated/compas_timber.elements.Beam.from_centerline", "api/generated/compas_timber.elements.Beam.from_endpoints", "api/generated/compas_timber.elements.Beam.from_json", "api/generated/compas_timber.elements.Beam.from_jsonstring", "api/generated/compas_timber.elements.Beam.get_dimensions_relative_to_side", "api/generated/compas_timber.elements.Beam.opposing_side_index", "api/generated/compas_timber.elements.Beam.remove_blank_extension", "api/generated/compas_timber.elements.Beam.remove_features", "api/generated/compas_timber.elements.Beam.reset", "api/generated/compas_timber.elements.Beam.sha256", "api/generated/compas_timber.elements.Beam.side_as_surface", "api/generated/compas_timber.elements.Beam.to_json", "api/generated/compas_timber.elements.Beam.to_jsonstring", "api/generated/compas_timber.elements.Beam.transform", "api/generated/compas_timber.elements.Beam.transformed", "api/generated/compas_timber.elements.Beam.validate_data", "api/generated/compas_timber.elements.Fastener", "api/generated/compas_timber.elements.Fastener.ToString", "api/generated/compas_timber.elements.Fastener.add_feature", "api/generated/compas_timber.elements.Fastener.compute_aabb", "api/generated/compas_timber.elements.Fastener.compute_collision_mesh", "api/generated/compas_timber.elements.Fastener.compute_geometry", "api/generated/compas_timber.elements.Fastener.compute_obb", "api/generated/compas_timber.elements.Fastener.compute_worldtransformation", "api/generated/compas_timber.elements.Fastener.copy", "api/generated/compas_timber.elements.Fastener.from_json", "api/generated/compas_timber.elements.Fastener.from_jsonstring", "api/generated/compas_timber.elements.Fastener.reset", "api/generated/compas_timber.elements.Fastener.sha256", "api/generated/compas_timber.elements.Fastener.to_json", "api/generated/compas_timber.elements.Fastener.to_jsonstring", "api/generated/compas_timber.elements.Fastener.transform", "api/generated/compas_timber.elements.Fastener.transformed", "api/generated/compas_timber.elements.Fastener.validate_data", "api/generated/compas_timber.elements.FastenerTimberInterface", "api/generated/compas_timber.elements.FastenerTimberInterface.ToString", "api/generated/compas_timber.elements.FastenerTimberInterface.copy", "api/generated/compas_timber.elements.FastenerTimberInterface.from_json", "api/generated/compas_timber.elements.FastenerTimberInterface.from_jsonstring", "api/generated/compas_timber.elements.FastenerTimberInterface.get_features", "api/generated/compas_timber.elements.FastenerTimberInterface.sha256", "api/generated/compas_timber.elements.FastenerTimberInterface.to_json", "api/generated/compas_timber.elements.FastenerTimberInterface.to_jsonstring", "api/generated/compas_timber.elements.FastenerTimberInterface.validate_data", "api/generated/compas_timber.elements.Plate", "api/generated/compas_timber.elements.Plate.ToString", "api/generated/compas_timber.elements.Plate.add_feature", "api/generated/compas_timber.elements.Plate.add_features", "api/generated/compas_timber.elements.Plate.compute_aabb", "api/generated/compas_timber.elements.Plate.compute_collision_mesh", "api/generated/compas_timber.elements.Plate.compute_geometry", "api/generated/compas_timber.elements.Plate.compute_obb", "api/generated/compas_timber.elements.Plate.compute_worldtransformation", "api/generated/compas_timber.elements.Plate.copy", "api/generated/compas_timber.elements.Plate.from_json", "api/generated/compas_timber.elements.Plate.from_jsonstring", "api/generated/compas_timber.elements.Plate.remove_features", "api/generated/compas_timber.elements.Plate.reset", "api/generated/compas_timber.elements.Plate.set_frame_and_outline", "api/generated/compas_timber.elements.Plate.sha256", "api/generated/compas_timber.elements.Plate.to_json", "api/generated/compas_timber.elements.Plate.to_jsonstring", "api/generated/compas_timber.elements.Plate.transform", "api/generated/compas_timber.elements.Plate.transformed", "api/generated/compas_timber.elements.Plate.validate_data", "api/generated/compas_timber.elements.TimberElement", "api/generated/compas_timber.elements.TimberElement.ToString", "api/generated/compas_timber.elements.TimberElement.add_feature", "api/generated/compas_timber.elements.TimberElement.compute_aabb", "api/generated/compas_timber.elements.TimberElement.compute_collision_mesh", "api/generated/compas_timber.elements.TimberElement.compute_geometry", "api/generated/compas_timber.elements.TimberElement.compute_obb", "api/generated/compas_timber.elements.TimberElement.compute_worldtransformation", "api/generated/compas_timber.elements.TimberElement.copy", "api/generated/compas_timber.elements.TimberElement.from_json", "api/generated/compas_timber.elements.TimberElement.from_jsonstring", "api/generated/compas_timber.elements.TimberElement.reset", "api/generated/compas_timber.elements.TimberElement.sha256", "api/generated/compas_timber.elements.TimberElement.to_json", "api/generated/compas_timber.elements.TimberElement.to_jsonstring", "api/generated/compas_timber.elements.TimberElement.transform", "api/generated/compas_timber.elements.TimberElement.transformed", "api/generated/compas_timber.elements.TimberElement.validate_data", "api/generated/compas_timber.elements.Wall", "api/generated/compas_timber.elements.Wall.ToString", "api/generated/compas_timber.elements.Wall.add_feature", "api/generated/compas_timber.elements.Wall.compute_aabb", "api/generated/compas_timber.elements.Wall.compute_collision_mesh", "api/generated/compas_timber.elements.Wall.compute_geometry", "api/generated/compas_timber.elements.Wall.compute_obb", "api/generated/compas_timber.elements.Wall.compute_worldtransformation", "api/generated/compas_timber.elements.Wall.copy", "api/generated/compas_timber.elements.Wall.from_box", "api/generated/compas_timber.elements.Wall.from_json", "api/generated/compas_timber.elements.Wall.from_jsonstring", "api/generated/compas_timber.elements.Wall.reset", "api/generated/compas_timber.elements.Wall.sha256", "api/generated/compas_timber.elements.Wall.to_json", "api/generated/compas_timber.elements.Wall.to_jsonstring", "api/generated/compas_timber.elements.Wall.transform", "api/generated/compas_timber.elements.Wall.transformed", "api/generated/compas_timber.elements.Wall.validate_data", "api/generated/compas_timber.errors.BeamJoiningError", "api/generated/compas_timber.errors.FastenerApplicationError", "api/generated/compas_timber.errors.FeatureApplicationError", "api/generated/compas_timber.fabrication.BTLxPart", "api/generated/compas_timber.fabrication.BTLxPart.et_point_vals", "api/generated/compas_timber.fabrication.BTLxPart.ref_side_from_face", "api/generated/compas_timber.fabrication.BTLxProcessing", "api/generated/compas_timber.fabrication.BTLxProcessing.ToString", "api/generated/compas_timber.fabrication.BTLxProcessing.add_subprocessing", "api/generated/compas_timber.fabrication.BTLxProcessing.copy", "api/generated/compas_timber.fabrication.BTLxProcessing.from_json", "api/generated/compas_timber.fabrication.BTLxProcessing.from_jsonstring", "api/generated/compas_timber.fabrication.BTLxProcessing.sha256", "api/generated/compas_timber.fabrication.BTLxProcessing.to_json", "api/generated/compas_timber.fabrication.BTLxProcessing.to_jsonstring", "api/generated/compas_timber.fabrication.BTLxProcessing.validate_data", "api/generated/compas_timber.fabrication.BTLxWriter", "api/generated/compas_timber.fabrication.BTLxWriter.model_to_xml", "api/generated/compas_timber.fabrication.BTLxWriter.write", "api/generated/compas_timber.fabrication.DoubleCut", "api/generated/compas_timber.fabrication.DoubleCut.ToString", "api/generated/compas_timber.fabrication.DoubleCut.add_subprocessing", "api/generated/compas_timber.fabrication.DoubleCut.apply", "api/generated/compas_timber.fabrication.DoubleCut.copy", "api/generated/compas_timber.fabrication.DoubleCut.from_json", "api/generated/compas_timber.fabrication.DoubleCut.from_jsonstring", "api/generated/compas_timber.fabrication.DoubleCut.from_planes_and_beam", "api/generated/compas_timber.fabrication.DoubleCut.from_shapes_and_element", "api/generated/compas_timber.fabrication.DoubleCut.planes_from_params_and_beam", "api/generated/compas_timber.fabrication.DoubleCut.sha256", "api/generated/compas_timber.fabrication.DoubleCut.to_json", "api/generated/compas_timber.fabrication.DoubleCut.to_jsonstring", "api/generated/compas_timber.fabrication.DoubleCut.validate_data", "api/generated/compas_timber.fabrication.DovetailMortise", "api/generated/compas_timber.fabrication.DovetailMortise.ToString", "api/generated/compas_timber.fabrication.DovetailMortise.add_subprocessing", "api/generated/compas_timber.fabrication.DovetailMortise.apply", "api/generated/compas_timber.fabrication.DovetailMortise.copy", "api/generated/compas_timber.fabrication.DovetailMortise.define_dovetail_tool", "api/generated/compas_timber.fabrication.DovetailMortise.dovetail_cutting_frames_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailMortise.dovetail_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailMortise.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailMortise.from_frame_and_beam", "api/generated/compas_timber.fabrication.DovetailMortise.from_json", "api/generated/compas_timber.fabrication.DovetailMortise.from_jsonstring", "api/generated/compas_timber.fabrication.DovetailMortise.sha256", "api/generated/compas_timber.fabrication.DovetailMortise.to_json", "api/generated/compas_timber.fabrication.DovetailMortise.to_jsonstring", "api/generated/compas_timber.fabrication.DovetailMortise.validate_data", "api/generated/compas_timber.fabrication.DovetailTenon", "api/generated/compas_timber.fabrication.DovetailTenon.ToString", "api/generated/compas_timber.fabrication.DovetailTenon.add_subprocessing", "api/generated/compas_timber.fabrication.DovetailTenon.apply", "api/generated/compas_timber.fabrication.DovetailTenon.copy", "api/generated/compas_timber.fabrication.DovetailTenon.define_dovetail_tool", "api/generated/compas_timber.fabrication.DovetailTenon.dovetail_cutting_frames_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailTenon.dovetail_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailTenon.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailTenon.from_json", "api/generated/compas_timber.fabrication.DovetailTenon.from_jsonstring", "api/generated/compas_timber.fabrication.DovetailTenon.from_plane_and_beam", "api/generated/compas_timber.fabrication.DovetailTenon.sha256", "api/generated/compas_timber.fabrication.DovetailTenon.to_json", "api/generated/compas_timber.fabrication.DovetailTenon.to_jsonstring", "api/generated/compas_timber.fabrication.DovetailTenon.validate_data", "api/generated/compas_timber.fabrication.Drilling", "api/generated/compas_timber.fabrication.Drilling.ToString", "api/generated/compas_timber.fabrication.Drilling.add_subprocessing", "api/generated/compas_timber.fabrication.Drilling.apply", "api/generated/compas_timber.fabrication.Drilling.copy", "api/generated/compas_timber.fabrication.Drilling.cylinder_from_params_and_element", "api/generated/compas_timber.fabrication.Drilling.from_json", "api/generated/compas_timber.fabrication.Drilling.from_jsonstring", "api/generated/compas_timber.fabrication.Drilling.from_line_and_element", "api/generated/compas_timber.fabrication.Drilling.from_shapes_and_element", "api/generated/compas_timber.fabrication.Drilling.sha256", "api/generated/compas_timber.fabrication.Drilling.to_json", "api/generated/compas_timber.fabrication.Drilling.to_jsonstring", "api/generated/compas_timber.fabrication.Drilling.validate_data", "api/generated/compas_timber.fabrication.EdgePositionType", "api/generated/compas_timber.fabrication.FrenchRidgeLap", "api/generated/compas_timber.fabrication.FrenchRidgeLap.ToString", "api/generated/compas_timber.fabrication.FrenchRidgeLap.add_subprocessing", "api/generated/compas_timber.fabrication.FrenchRidgeLap.apply", "api/generated/compas_timber.fabrication.FrenchRidgeLap.copy", "api/generated/compas_timber.fabrication.FrenchRidgeLap.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_beam_beam_and_plane", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_json", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_jsonstring", "api/generated/compas_timber.fabrication.FrenchRidgeLap.lap_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.FrenchRidgeLap.sha256", "api/generated/compas_timber.fabrication.FrenchRidgeLap.to_json", "api/generated/compas_timber.fabrication.FrenchRidgeLap.to_jsonstring", "api/generated/compas_timber.fabrication.FrenchRidgeLap.validate_data", "api/generated/compas_timber.fabrication.JackRafterCut", "api/generated/compas_timber.fabrication.JackRafterCut.ToString", "api/generated/compas_timber.fabrication.JackRafterCut.add_subprocessing", "api/generated/compas_timber.fabrication.JackRafterCut.apply", "api/generated/compas_timber.fabrication.JackRafterCut.copy", "api/generated/compas_timber.fabrication.JackRafterCut.from_json", "api/generated/compas_timber.fabrication.JackRafterCut.from_jsonstring", "api/generated/compas_timber.fabrication.JackRafterCut.from_plane_and_beam", "api/generated/compas_timber.fabrication.JackRafterCut.from_shapes_and_element", "api/generated/compas_timber.fabrication.JackRafterCut.plane_from_params_and_beam", "api/generated/compas_timber.fabrication.JackRafterCut.sha256", "api/generated/compas_timber.fabrication.JackRafterCut.to_json", "api/generated/compas_timber.fabrication.JackRafterCut.to_jsonstring", "api/generated/compas_timber.fabrication.JackRafterCut.validate_data", "api/generated/compas_timber.fabrication.Lap", "api/generated/compas_timber.fabrication.Lap.ToString", "api/generated/compas_timber.fabrication.Lap.add_subprocessing", "api/generated/compas_timber.fabrication.Lap.apply", "api/generated/compas_timber.fabrication.Lap.copy", "api/generated/compas_timber.fabrication.Lap.from_json", "api/generated/compas_timber.fabrication.Lap.from_jsonstring", "api/generated/compas_timber.fabrication.Lap.from_plane_and_beam", "api/generated/compas_timber.fabrication.Lap.planes_from_params_and_beam", "api/generated/compas_timber.fabrication.Lap.sha256", "api/generated/compas_timber.fabrication.Lap.to_json", "api/generated/compas_timber.fabrication.Lap.to_jsonstring", "api/generated/compas_timber.fabrication.Lap.validate_data", "api/generated/compas_timber.fabrication.Lap.volume_from_params_and_beam", "api/generated/compas_timber.fabrication.LimitationTopType", "api/generated/compas_timber.fabrication.MachiningLimits", "api/generated/compas_timber.fabrication.Mortise", "api/generated/compas_timber.fabrication.Mortise.ToString", "api/generated/compas_timber.fabrication.Mortise.add_subprocessing", "api/generated/compas_timber.fabrication.Mortise.apply", "api/generated/compas_timber.fabrication.Mortise.copy", "api/generated/compas_timber.fabrication.Mortise.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.Mortise.from_frame_and_beam", "api/generated/compas_timber.fabrication.Mortise.from_json", "api/generated/compas_timber.fabrication.Mortise.from_jsonstring", "api/generated/compas_timber.fabrication.Mortise.sha256", "api/generated/compas_timber.fabrication.Mortise.to_json", "api/generated/compas_timber.fabrication.Mortise.to_jsonstring", "api/generated/compas_timber.fabrication.Mortise.validate_data", "api/generated/compas_timber.fabrication.Mortise.volume_from_params_and_beam", "api/generated/compas_timber.fabrication.OrientationType", "api/generated/compas_timber.fabrication.Slot", "api/generated/compas_timber.fabrication.Slot.ToString", "api/generated/compas_timber.fabrication.Slot.add_subprocessing", "api/generated/compas_timber.fabrication.Slot.apply", "api/generated/compas_timber.fabrication.Slot.copy", "api/generated/compas_timber.fabrication.Slot.from_json", "api/generated/compas_timber.fabrication.Slot.from_jsonstring", "api/generated/compas_timber.fabrication.Slot.from_plane_and_beam", "api/generated/compas_timber.fabrication.Slot.sha256", "api/generated/compas_timber.fabrication.Slot.to_json", "api/generated/compas_timber.fabrication.Slot.to_jsonstring", "api/generated/compas_timber.fabrication.Slot.validate_data", "api/generated/compas_timber.fabrication.StepJoint", "api/generated/compas_timber.fabrication.StepJoint.ToString", "api/generated/compas_timber.fabrication.StepJoint.add_subprocessing", "api/generated/compas_timber.fabrication.StepJoint.add_tenon", "api/generated/compas_timber.fabrication.StepJoint.apply", "api/generated/compas_timber.fabrication.StepJoint.copy", "api/generated/compas_timber.fabrication.StepJoint.from_json", "api/generated/compas_timber.fabrication.StepJoint.from_jsonstring", "api/generated/compas_timber.fabrication.StepJoint.from_plane_and_beam", "api/generated/compas_timber.fabrication.StepJoint.planes_from_params_and_beam", "api/generated/compas_timber.fabrication.StepJoint.sha256", "api/generated/compas_timber.fabrication.StepJoint.tenon_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.StepJoint.to_json", "api/generated/compas_timber.fabrication.StepJoint.to_jsonstring", "api/generated/compas_timber.fabrication.StepJoint.validate_data", "api/generated/compas_timber.fabrication.StepJointNotch", "api/generated/compas_timber.fabrication.StepJointNotch.ToString", "api/generated/compas_timber.fabrication.StepJointNotch.add_mortise", "api/generated/compas_timber.fabrication.StepJointNotch.add_subprocessing", "api/generated/compas_timber.fabrication.StepJointNotch.apply", "api/generated/compas_timber.fabrication.StepJointNotch.copy", "api/generated/compas_timber.fabrication.StepJointNotch.from_json", "api/generated/compas_timber.fabrication.StepJointNotch.from_jsonstring", "api/generated/compas_timber.fabrication.StepJointNotch.from_plane_and_beam", "api/generated/compas_timber.fabrication.StepJointNotch.mortise_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.StepJointNotch.planes_from_params_and_beam", "api/generated/compas_timber.fabrication.StepJointNotch.sha256", "api/generated/compas_timber.fabrication.StepJointNotch.to_json", "api/generated/compas_timber.fabrication.StepJointNotch.to_jsonstring", "api/generated/compas_timber.fabrication.StepJointNotch.validate_data", "api/generated/compas_timber.fabrication.StepShapeType", "api/generated/compas_timber.fabrication.Tenon", "api/generated/compas_timber.fabrication.Tenon.ToString", "api/generated/compas_timber.fabrication.Tenon.add_subprocessing", "api/generated/compas_timber.fabrication.Tenon.apply", "api/generated/compas_timber.fabrication.Tenon.copy", "api/generated/compas_timber.fabrication.Tenon.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.Tenon.from_json", "api/generated/compas_timber.fabrication.Tenon.from_jsonstring", "api/generated/compas_timber.fabrication.Tenon.from_plane_and_beam", "api/generated/compas_timber.fabrication.Tenon.sha256", "api/generated/compas_timber.fabrication.Tenon.to_json", "api/generated/compas_timber.fabrication.Tenon.to_jsonstring", "api/generated/compas_timber.fabrication.Tenon.validate_data", "api/generated/compas_timber.fabrication.Tenon.volume_from_params_and_beam", "api/generated/compas_timber.fabrication.TenonShapeType", "api/generated/compas_timber.ghpython.add_gh_param", "api/generated/compas_timber.ghpython.clear_gh_params", "api/generated/compas_timber.ghpython.get_leaf_subclasses", "api/generated/compas_timber.ghpython.item_input_valid", "api/generated/compas_timber.ghpython.list_input_valid", "api/generated/compas_timber.ghpython.manage_dynamic_params", "api/generated/compas_timber.ghpython.rename_gh_input", "api/generated/compas_timber.model.TimberModel", "api/generated/compas_timber.model.TimberModel.ToString", "api/generated/compas_timber.model.TimberModel.add_element", "api/generated/compas_timber.model.TimberModel.add_elements", "api/generated/compas_timber.model.TimberModel.add_group", "api/generated/compas_timber.model.TimberModel.add_group_element", "api/generated/compas_timber.model.TimberModel.add_interaction", "api/generated/compas_timber.model.TimberModel.add_joint", "api/generated/compas_timber.model.TimberModel.add_material", "api/generated/compas_timber.model.TimberModel.assign_material", "api/generated/compas_timber.model.TimberModel.compute_aabb", "api/generated/compas_timber.model.TimberModel.compute_obb", "api/generated/compas_timber.model.TimberModel.copy", "api/generated/compas_timber.model.TimberModel.element_by_guid", "api/generated/compas_timber.model.TimberModel.elements", "api/generated/compas_timber.model.TimberModel.elements_connected_by", "api/generated/compas_timber.model.TimberModel.from_json", "api/generated/compas_timber.model.TimberModel.from_jsonstring", "api/generated/compas_timber.model.TimberModel.get_elements_in_group", "api/generated/compas_timber.model.TimberModel.has_element", "api/generated/compas_timber.model.TimberModel.has_group", "api/generated/compas_timber.model.TimberModel.has_interaction", "api/generated/compas_timber.model.TimberModel.has_material", "api/generated/compas_timber.model.TimberModel.interactions", "api/generated/compas_timber.model.TimberModel.materials", "api/generated/compas_timber.model.TimberModel.process_joinery", "api/generated/compas_timber.model.TimberModel.remove_element", "api/generated/compas_timber.model.TimberModel.remove_interaction", "api/generated/compas_timber.model.TimberModel.remove_joint", "api/generated/compas_timber.model.TimberModel.rotate", "api/generated/compas_timber.model.TimberModel.rotated", "api/generated/compas_timber.model.TimberModel.scale", "api/generated/compas_timber.model.TimberModel.scaled", "api/generated/compas_timber.model.TimberModel.set_topologies", "api/generated/compas_timber.model.TimberModel.sha256", "api/generated/compas_timber.model.TimberModel.to_json", "api/generated/compas_timber.model.TimberModel.to_jsonstring", "api/generated/compas_timber.model.TimberModel.transform", "api/generated/compas_timber.model.TimberModel.transform_numpy", "api/generated/compas_timber.model.TimberModel.transformed", "api/generated/compas_timber.model.TimberModel.transformed_numpy", "api/generated/compas_timber.model.TimberModel.translate", "api/generated/compas_timber.model.TimberModel.translated", "api/generated/compas_timber.model.TimberModel.validate_data", "api/generated/compas_timber.planning.Actor", "api/generated/compas_timber.planning.Actor.get_name", "api/generated/compas_timber.planning.BuildingPlan", "api/generated/compas_timber.planning.BuildingPlan.ToString", "api/generated/compas_timber.planning.BuildingPlan.add_step", "api/generated/compas_timber.planning.BuildingPlan.copy", "api/generated/compas_timber.planning.BuildingPlan.from_json", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.sha256", "api/generated/compas_timber.planning.BuildingPlan.to_json", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.validate_data", "api/generated/compas_timber.planning.BuildingPlanParser", "api/generated/compas_timber.planning.BuildingPlanParser.parse", "api/generated/compas_timber.planning.BuildingPlanParser.serialize", "api/generated/compas_timber.planning.Instruction", "api/generated/compas_timber.planning.Instruction.ToString", "api/generated/compas_timber.planning.Instruction.copy", "api/generated/compas_timber.planning.Instruction.from_json", "api/generated/compas_timber.planning.Instruction.from_jsonstring", "api/generated/compas_timber.planning.Instruction.sha256", "api/generated/compas_timber.planning.Instruction.to_json", "api/generated/compas_timber.planning.Instruction.to_jsonstring", "api/generated/compas_timber.planning.Instruction.transform", "api/generated/compas_timber.planning.Instruction.validate_data", "api/generated/compas_timber.planning.LinearDimension", "api/generated/compas_timber.planning.LinearDimension.ToString", "api/generated/compas_timber.planning.LinearDimension.copy", "api/generated/compas_timber.planning.LinearDimension.from_json", "api/generated/compas_timber.planning.LinearDimension.from_jsonstring", "api/generated/compas_timber.planning.LinearDimension.sha256", "api/generated/compas_timber.planning.LinearDimension.to_json", "api/generated/compas_timber.planning.LinearDimension.to_jsonstring", "api/generated/compas_timber.planning.LinearDimension.transform", "api/generated/compas_timber.planning.LinearDimension.validate_data", "api/generated/compas_timber.planning.Model3d", "api/generated/compas_timber.planning.Model3d.ToString", "api/generated/compas_timber.planning.Model3d.copy", "api/generated/compas_timber.planning.Model3d.from_json", "api/generated/compas_timber.planning.Model3d.from_jsonstring", "api/generated/compas_timber.planning.Model3d.sha256", "api/generated/compas_timber.planning.Model3d.to_json", "api/generated/compas_timber.planning.Model3d.to_jsonstring", "api/generated/compas_timber.planning.Model3d.transform", "api/generated/compas_timber.planning.Model3d.validate_data", "api/generated/compas_timber.planning.SimpleSequenceGenerator", "api/generated/compas_timber.planning.Step", "api/generated/compas_timber.planning.Step.ToString", "api/generated/compas_timber.planning.Step.copy", "api/generated/compas_timber.planning.Step.from_json", "api/generated/compas_timber.planning.Step.from_jsonstring", "api/generated/compas_timber.planning.Step.sha256", "api/generated/compas_timber.planning.Step.to_json", "api/generated/compas_timber.planning.Step.to_jsonstring", "api/generated/compas_timber.planning.Step.transform", "api/generated/compas_timber.planning.Step.validate_data", "api/generated/compas_timber.planning.Text3d", "api/generated/compas_timber.planning.Text3d.ToString", "api/generated/compas_timber.planning.Text3d.copy", "api/generated/compas_timber.planning.Text3d.from_json", "api/generated/compas_timber.planning.Text3d.from_jsonstring", "api/generated/compas_timber.planning.Text3d.sha256", "api/generated/compas_timber.planning.Text3d.to_json", "api/generated/compas_timber.planning.Text3d.to_jsonstring", "api/generated/compas_timber.planning.Text3d.transform", "api/generated/compas_timber.planning.Text3d.validate_data", "api/generated/compas_timber.rhino.find_neighboring_beams", "citing", "examples", "examples/create_joint", "index", "installation", "license", "tutorials", "tutorials/BTLx_contribution_guide", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beams", "tutorials/grasshopper/design", "tutorials/grasshopper/examples", "tutorials/grasshopper/fabrication", "tutorials/grasshopper/features", "tutorials/grasshopper/joint_rules", "tutorials/grasshopper/model", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api.rst", "api/compas_timber.connections.rst", "api/compas_timber.design.rst", "api/compas_timber.elements.rst", "api/compas_timber.errors.rst", "api/compas_timber.fabrication.rst", "api/compas_timber.ghpython.rst", "api/compas_timber.model.rst", "api/compas_timber.planning.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.connections.BallNodeJoint.rst", "api/generated/compas_timber.connections.BallNodeJoint.ToString.rst", "api/generated/compas_timber.connections.BallNodeJoint.add_extensions.rst", "api/generated/compas_timber.connections.BallNodeJoint.add_features.rst", "api/generated/compas_timber.connections.BallNodeJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.BallNodeJoint.copy.rst", "api/generated/compas_timber.connections.BallNodeJoint.create.rst", "api/generated/compas_timber.connections.BallNodeJoint.element_count_complies.rst", "api/generated/compas_timber.connections.BallNodeJoint.from_json.rst", "api/generated/compas_timber.connections.BallNodeJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.BallNodeJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.BallNodeJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.BallNodeJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.BallNodeJoint.sha256.rst", "api/generated/compas_timber.connections.BallNodeJoint.to_json.rst", "api/generated/compas_timber.connections.BallNodeJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.BallNodeJoint.validate_data.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_extensions.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.element_count_complies.rst", "api/generated/compas_timber.connections.Joint.from_json.rst", "api/generated/compas_timber.connections.Joint.from_jsonstring.rst", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_json.rst", "api/generated/compas_timber.connections.Joint.to_jsonstring.rst", "api/generated/compas_timber.connections.Joint.validate_data.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_extensions.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LButtJoint.from_json.rst", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.to_json.rst", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.update_beam_roles.rst", "api/generated/compas_timber.connections.LButtJoint.validate_data.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.ToString.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.add_features.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.copy.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.create.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.from_json.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.sha256.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.to_json.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.validate_data.rst", "api/generated/compas_timber.connections.LLapJoint.rst", "api/generated/compas_timber.connections.LLapJoint.ToString.rst", "api/generated/compas_timber.connections.LLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.LLapJoint.add_features.rst", "api/generated/compas_timber.connections.LLapJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.LLapJoint.copy.rst", "api/generated/compas_timber.connections.LLapJoint.create.rst", "api/generated/compas_timber.connections.LLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LLapJoint.from_json.rst", "api/generated/compas_timber.connections.LLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LLapJoint.sha256.rst", "api/generated/compas_timber.connections.LLapJoint.to_json.rst", "api/generated/compas_timber.connections.LLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LLapJoint.validate_data.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_extensions.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LMiterJoint.from_json.rst", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_json.rst", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_data.rst", "api/generated/compas_timber.connections.LapJoint.rst", "api/generated/compas_timber.connections.LapJoint.ToString.rst", "api/generated/compas_timber.connections.LapJoint.add_extensions.rst", "api/generated/compas_timber.connections.LapJoint.add_features.rst", "api/generated/compas_timber.connections.LapJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.LapJoint.copy.rst", "api/generated/compas_timber.connections.LapJoint.create.rst", "api/generated/compas_timber.connections.LapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.LapJoint.from_json.rst", "api/generated/compas_timber.connections.LapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LapJoint.sha256.rst", "api/generated/compas_timber.connections.LapJoint.to_json.rst", "api/generated/compas_timber.connections.LapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.validate_data.rst", "api/generated/compas_timber.connections.NullJoint.rst", "api/generated/compas_timber.connections.NullJoint.ToString.rst", "api/generated/compas_timber.connections.NullJoint.add_extensions.rst", "api/generated/compas_timber.connections.NullJoint.add_features.rst", "api/generated/compas_timber.connections.NullJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.NullJoint.copy.rst", "api/generated/compas_timber.connections.NullJoint.create.rst", "api/generated/compas_timber.connections.NullJoint.element_count_complies.rst", "api/generated/compas_timber.connections.NullJoint.from_json.rst", "api/generated/compas_timber.connections.NullJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.NullJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.NullJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.NullJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.NullJoint.sha256.rst", "api/generated/compas_timber.connections.NullJoint.to_json.rst", "api/generated/compas_timber.connections.NullJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.NullJoint.validate_data.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.ToString.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.add_extensions.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.add_features.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.copy.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.create.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.from_json.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.sha256.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.to_json.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TBirdsmouthJoint.validate_data.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_extensions.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TButtJoint.from_json.rst", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.to_json.rst", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.validate_data.rst", "api/generated/compas_timber.connections.TDovetailJoint.rst", "api/generated/compas_timber.connections.TDovetailJoint.ToString.rst", "api/generated/compas_timber.connections.TDovetailJoint.add_extensions.rst", "api/generated/compas_timber.connections.TDovetailJoint.add_features.rst", "api/generated/compas_timber.connections.TDovetailJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TDovetailJoint.copy.rst", "api/generated/compas_timber.connections.TDovetailJoint.create.rst", "api/generated/compas_timber.connections.TDovetailJoint.define_dovetail_tool.rst", "api/generated/compas_timber.connections.TDovetailJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TDovetailJoint.from_json.rst", "api/generated/compas_timber.connections.TDovetailJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TDovetailJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TDovetailJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TDovetailJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TDovetailJoint.sha256.rst", "api/generated/compas_timber.connections.TDovetailJoint.to_json.rst", "api/generated/compas_timber.connections.TDovetailJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TDovetailJoint.validate_data.rst", "api/generated/compas_timber.connections.TLapJoint.rst", "api/generated/compas_timber.connections.TLapJoint.ToString.rst", "api/generated/compas_timber.connections.TLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.TLapJoint.add_features.rst", "api/generated/compas_timber.connections.TLapJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TLapJoint.copy.rst", "api/generated/compas_timber.connections.TLapJoint.create.rst", "api/generated/compas_timber.connections.TLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TLapJoint.from_json.rst", "api/generated/compas_timber.connections.TLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.TLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.TLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TLapJoint.sha256.rst", "api/generated/compas_timber.connections.TLapJoint.to_json.rst", "api/generated/compas_timber.connections.TLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TLapJoint.validate_data.rst", "api/generated/compas_timber.connections.TStepJoint.rst", "api/generated/compas_timber.connections.TStepJoint.ToString.rst", "api/generated/compas_timber.connections.TStepJoint.add_extensions.rst", "api/generated/compas_timber.connections.TStepJoint.add_features.rst", "api/generated/compas_timber.connections.TStepJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TStepJoint.copy.rst", "api/generated/compas_timber.connections.TStepJoint.create.rst", "api/generated/compas_timber.connections.TStepJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TStepJoint.from_json.rst", "api/generated/compas_timber.connections.TStepJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TStepJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TStepJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TStepJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TStepJoint.set_step_depths.rst", "api/generated/compas_timber.connections.TStepJoint.sha256.rst", "api/generated/compas_timber.connections.TStepJoint.to_json.rst", "api/generated/compas_timber.connections.TStepJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TStepJoint.validate_data.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.ToString.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.add_extensions.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.add_features.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.copy.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.create.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.element_count_complies.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.from_json.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.set_default_values.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.sha256.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.to_json.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TenonMortiseJoint.validate_data.rst", "api/generated/compas_timber.connections.XLapJoint.rst", "api/generated/compas_timber.connections.XLapJoint.ToString.rst", "api/generated/compas_timber.connections.XLapJoint.add_extensions.rst", "api/generated/compas_timber.connections.XLapJoint.add_features.rst", "api/generated/compas_timber.connections.XLapJoint.check_elements_compatibility.rst", "api/generated/compas_timber.connections.XLapJoint.copy.rst", "api/generated/compas_timber.connections.XLapJoint.create.rst", "api/generated/compas_timber.connections.XLapJoint.element_count_complies.rst", "api/generated/compas_timber.connections.XLapJoint.from_json.rst", "api/generated/compas_timber.connections.XLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.XLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.XLapJoint.get_face_most_ortho_to_beam.rst", "api/generated/compas_timber.connections.XLapJoint.get_face_most_towards_beam.rst", "api/generated/compas_timber.connections.XLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.XLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.XLapJoint.sha256.rst", "api/generated/compas_timber.connections.XLapJoint.to_json.rst", "api/generated/compas_timber.connections.XLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.XLapJoint.validate_data.rst", "api/generated/compas_timber.connections.find_neighboring_beams.rst", "api/generated/compas_timber.design.CategoryRule.rst", "api/generated/compas_timber.design.CategoryRule.ToString.rst", "api/generated/compas_timber.design.CategoryRule.comply.rst", "api/generated/compas_timber.design.CategoryRule.get_category_rules.rst", "api/generated/compas_timber.design.CategoryRule.get_direct_rules.rst", "api/generated/compas_timber.design.CategoryRule.get_topology_rules.rst", "api/generated/compas_timber.design.CategoryRule.joints_from_beams_and_rules.rst", "api/generated/compas_timber.design.CategoryRule.reorder.rst", "api/generated/compas_timber.design.DebugInfomation.rst", "api/generated/compas_timber.design.DebugInfomation.ToString.rst", "api/generated/compas_timber.design.DebugInfomation.add_fastener_error.rst", "api/generated/compas_timber.design.DebugInfomation.add_feature_error.rst", "api/generated/compas_timber.design.DebugInfomation.add_joint_error.rst", "api/generated/compas_timber.design.DirectRule.rst", "api/generated/compas_timber.design.DirectRule.ToString.rst", "api/generated/compas_timber.design.DirectRule.comply.rst", "api/generated/compas_timber.design.DirectRule.contains.rst", "api/generated/compas_timber.design.DirectRule.get_category_rules.rst", "api/generated/compas_timber.design.DirectRule.get_direct_rules.rst", "api/generated/compas_timber.design.DirectRule.get_topology_rules.rst", "api/generated/compas_timber.design.DirectRule.joints_from_beams_and_rules.rst", "api/generated/compas_timber.design.FeatureDefinition.rst", "api/generated/compas_timber.design.FeatureDefinition.ToString.rst", "api/generated/compas_timber.design.JointDefinition.rst", "api/generated/compas_timber.design.JointDefinition.ToString.rst", "api/generated/compas_timber.design.JointDefinition.is_identical.rst", "api/generated/compas_timber.design.JointDefinition.match.rst", "api/generated/compas_timber.design.JointRule.rst", "api/generated/compas_timber.design.JointRule.comply.rst", "api/generated/compas_timber.design.JointRule.get_category_rules.rst", "api/generated/compas_timber.design.JointRule.get_direct_rules.rst", "api/generated/compas_timber.design.JointRule.get_topology_rules.rst", "api/generated/compas_timber.design.JointRule.joints_from_beams_and_rules.rst", "api/generated/compas_timber.design.SurfaceModel.rst", "api/generated/compas_timber.design.SurfaceModel.beam_category_names.rst", "api/generated/compas_timber.design.SurfaceModel.create_model.rst", "api/generated/compas_timber.design.SurfaceModel.cull_overlaps.rst", "api/generated/compas_timber.design.SurfaceModel.distance_between_elements.rst", "api/generated/compas_timber.design.SurfaceModel.generate_frame.rst", "api/generated/compas_timber.design.SurfaceModel.generate_perimeter_beams.rst", "api/generated/compas_timber.design.SurfaceModel.generate_plates.rst", "api/generated/compas_timber.design.SurfaceModel.generate_stud_lines.rst", "api/generated/compas_timber.design.SurfaceModel.generate_studs.rst", "api/generated/compas_timber.design.SurfaceModel.generate_windows.rst", "api/generated/compas_timber.design.SurfaceModel.get_beam_intersections.rst", "api/generated/compas_timber.design.SurfaceModel.get_interior_segment_indices.rst", "api/generated/compas_timber.design.SurfaceModel.offset_elements.rst", "api/generated/compas_timber.design.SurfaceModel.parse_loops.rst", "api/generated/compas_timber.design.SurfaceModel.trim_jack_studs.rst", "api/generated/compas_timber.design.SurfaceModel.trim_king_studs.rst", "api/generated/compas_timber.design.SurfaceModel.trim_studs.rst", "api/generated/compas_timber.design.TopologyRule.rst", "api/generated/compas_timber.design.TopologyRule.ToString.rst", "api/generated/compas_timber.design.TopologyRule.comply.rst", "api/generated/compas_timber.design.TopologyRule.get_category_rules.rst", "api/generated/compas_timber.design.TopologyRule.get_direct_rules.rst", "api/generated/compas_timber.design.TopologyRule.get_topology_rules.rst", "api/generated/compas_timber.design.TopologyRule.joints_from_beams_and_rules.rst", "api/generated/compas_timber.design.guess_joint_topology_2beams.rst", "api/generated/compas_timber.design.set_default_joints.rst", "api/generated/compas_timber.elements.Beam.rst", "api/generated/compas_timber.elements.Beam.ToString.rst", "api/generated/compas_timber.elements.Beam.add_blank_extension.rst", "api/generated/compas_timber.elements.Beam.add_feature.rst", "api/generated/compas_timber.elements.Beam.add_features.rst", "api/generated/compas_timber.elements.Beam.compute_aabb.rst", "api/generated/compas_timber.elements.Beam.compute_collision_mesh.rst", "api/generated/compas_timber.elements.Beam.compute_geometry.rst", "api/generated/compas_timber.elements.Beam.compute_obb.rst", "api/generated/compas_timber.elements.Beam.compute_worldtransformation.rst", "api/generated/compas_timber.elements.Beam.copy.rst", "api/generated/compas_timber.elements.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.elements.Beam.extension_to_plane.rst", "api/generated/compas_timber.elements.Beam.from_centerline.rst", "api/generated/compas_timber.elements.Beam.from_endpoints.rst", "api/generated/compas_timber.elements.Beam.from_json.rst", "api/generated/compas_timber.elements.Beam.from_jsonstring.rst", "api/generated/compas_timber.elements.Beam.get_dimensions_relative_to_side.rst", "api/generated/compas_timber.elements.Beam.opposing_side_index.rst", "api/generated/compas_timber.elements.Beam.remove_blank_extension.rst", "api/generated/compas_timber.elements.Beam.remove_features.rst", "api/generated/compas_timber.elements.Beam.reset.rst", "api/generated/compas_timber.elements.Beam.sha256.rst", "api/generated/compas_timber.elements.Beam.side_as_surface.rst", "api/generated/compas_timber.elements.Beam.to_json.rst", "api/generated/compas_timber.elements.Beam.to_jsonstring.rst", "api/generated/compas_timber.elements.Beam.transform.rst", "api/generated/compas_timber.elements.Beam.transformed.rst", "api/generated/compas_timber.elements.Beam.validate_data.rst", "api/generated/compas_timber.elements.Fastener.rst", "api/generated/compas_timber.elements.Fastener.ToString.rst", "api/generated/compas_timber.elements.Fastener.add_feature.rst", "api/generated/compas_timber.elements.Fastener.compute_aabb.rst", "api/generated/compas_timber.elements.Fastener.compute_collision_mesh.rst", "api/generated/compas_timber.elements.Fastener.compute_geometry.rst", "api/generated/compas_timber.elements.Fastener.compute_obb.rst", "api/generated/compas_timber.elements.Fastener.compute_worldtransformation.rst", "api/generated/compas_timber.elements.Fastener.copy.rst", "api/generated/compas_timber.elements.Fastener.from_json.rst", "api/generated/compas_timber.elements.Fastener.from_jsonstring.rst", "api/generated/compas_timber.elements.Fastener.reset.rst", "api/generated/compas_timber.elements.Fastener.sha256.rst", "api/generated/compas_timber.elements.Fastener.to_json.rst", "api/generated/compas_timber.elements.Fastener.to_jsonstring.rst", "api/generated/compas_timber.elements.Fastener.transform.rst", "api/generated/compas_timber.elements.Fastener.transformed.rst", "api/generated/compas_timber.elements.Fastener.validate_data.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.ToString.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.copy.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.from_json.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.from_jsonstring.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.get_features.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.sha256.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.to_json.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.to_jsonstring.rst", "api/generated/compas_timber.elements.FastenerTimberInterface.validate_data.rst", "api/generated/compas_timber.elements.Plate.rst", "api/generated/compas_timber.elements.Plate.ToString.rst", "api/generated/compas_timber.elements.Plate.add_feature.rst", "api/generated/compas_timber.elements.Plate.add_features.rst", "api/generated/compas_timber.elements.Plate.compute_aabb.rst", "api/generated/compas_timber.elements.Plate.compute_collision_mesh.rst", "api/generated/compas_timber.elements.Plate.compute_geometry.rst", "api/generated/compas_timber.elements.Plate.compute_obb.rst", "api/generated/compas_timber.elements.Plate.compute_worldtransformation.rst", "api/generated/compas_timber.elements.Plate.copy.rst", "api/generated/compas_timber.elements.Plate.from_json.rst", "api/generated/compas_timber.elements.Plate.from_jsonstring.rst", "api/generated/compas_timber.elements.Plate.remove_features.rst", "api/generated/compas_timber.elements.Plate.reset.rst", "api/generated/compas_timber.elements.Plate.set_frame_and_outline.rst", "api/generated/compas_timber.elements.Plate.sha256.rst", "api/generated/compas_timber.elements.Plate.to_json.rst", "api/generated/compas_timber.elements.Plate.to_jsonstring.rst", "api/generated/compas_timber.elements.Plate.transform.rst", "api/generated/compas_timber.elements.Plate.transformed.rst", "api/generated/compas_timber.elements.Plate.validate_data.rst", "api/generated/compas_timber.elements.TimberElement.rst", "api/generated/compas_timber.elements.TimberElement.ToString.rst", "api/generated/compas_timber.elements.TimberElement.add_feature.rst", "api/generated/compas_timber.elements.TimberElement.compute_aabb.rst", "api/generated/compas_timber.elements.TimberElement.compute_collision_mesh.rst", "api/generated/compas_timber.elements.TimberElement.compute_geometry.rst", "api/generated/compas_timber.elements.TimberElement.compute_obb.rst", "api/generated/compas_timber.elements.TimberElement.compute_worldtransformation.rst", "api/generated/compas_timber.elements.TimberElement.copy.rst", "api/generated/compas_timber.elements.TimberElement.from_json.rst", "api/generated/compas_timber.elements.TimberElement.from_jsonstring.rst", "api/generated/compas_timber.elements.TimberElement.reset.rst", "api/generated/compas_timber.elements.TimberElement.sha256.rst", "api/generated/compas_timber.elements.TimberElement.to_json.rst", "api/generated/compas_timber.elements.TimberElement.to_jsonstring.rst", "api/generated/compas_timber.elements.TimberElement.transform.rst", "api/generated/compas_timber.elements.TimberElement.transformed.rst", "api/generated/compas_timber.elements.TimberElement.validate_data.rst", "api/generated/compas_timber.elements.Wall.rst", "api/generated/compas_timber.elements.Wall.ToString.rst", "api/generated/compas_timber.elements.Wall.add_feature.rst", "api/generated/compas_timber.elements.Wall.compute_aabb.rst", "api/generated/compas_timber.elements.Wall.compute_collision_mesh.rst", "api/generated/compas_timber.elements.Wall.compute_geometry.rst", "api/generated/compas_timber.elements.Wall.compute_obb.rst", "api/generated/compas_timber.elements.Wall.compute_worldtransformation.rst", "api/generated/compas_timber.elements.Wall.copy.rst", "api/generated/compas_timber.elements.Wall.from_box.rst", "api/generated/compas_timber.elements.Wall.from_json.rst", "api/generated/compas_timber.elements.Wall.from_jsonstring.rst", "api/generated/compas_timber.elements.Wall.reset.rst", "api/generated/compas_timber.elements.Wall.sha256.rst", "api/generated/compas_timber.elements.Wall.to_json.rst", "api/generated/compas_timber.elements.Wall.to_jsonstring.rst", "api/generated/compas_timber.elements.Wall.transform.rst", "api/generated/compas_timber.elements.Wall.transformed.rst", "api/generated/compas_timber.elements.Wall.validate_data.rst", "api/generated/compas_timber.errors.BeamJoiningError.rst", "api/generated/compas_timber.errors.FastenerApplicationError.rst", "api/generated/compas_timber.errors.FeatureApplicationError.rst", "api/generated/compas_timber.fabrication.BTLxPart.rst", "api/generated/compas_timber.fabrication.BTLxPart.et_point_vals.rst", "api/generated/compas_timber.fabrication.BTLxPart.ref_side_from_face.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.ToString.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.add_subprocessing.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.copy.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.from_json.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.from_jsonstring.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.sha256.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.to_json.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.to_jsonstring.rst", "api/generated/compas_timber.fabrication.BTLxProcessing.validate_data.rst", "api/generated/compas_timber.fabrication.BTLxWriter.rst", "api/generated/compas_timber.fabrication.BTLxWriter.model_to_xml.rst", "api/generated/compas_timber.fabrication.BTLxWriter.write.rst", "api/generated/compas_timber.fabrication.DoubleCut.rst", "api/generated/compas_timber.fabrication.DoubleCut.ToString.rst", "api/generated/compas_timber.fabrication.DoubleCut.add_subprocessing.rst", "api/generated/compas_timber.fabrication.DoubleCut.apply.rst", "api/generated/compas_timber.fabrication.DoubleCut.copy.rst", "api/generated/compas_timber.fabrication.DoubleCut.from_json.rst", "api/generated/compas_timber.fabrication.DoubleCut.from_jsonstring.rst", "api/generated/compas_timber.fabrication.DoubleCut.from_planes_and_beam.rst", "api/generated/compas_timber.fabrication.DoubleCut.from_shapes_and_element.rst", "api/generated/compas_timber.fabrication.DoubleCut.planes_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DoubleCut.sha256.rst", "api/generated/compas_timber.fabrication.DoubleCut.to_json.rst", "api/generated/compas_timber.fabrication.DoubleCut.to_jsonstring.rst", "api/generated/compas_timber.fabrication.DoubleCut.validate_data.rst", "api/generated/compas_timber.fabrication.DovetailMortise.rst", "api/generated/compas_timber.fabrication.DovetailMortise.ToString.rst", "api/generated/compas_timber.fabrication.DovetailMortise.add_subprocessing.rst", "api/generated/compas_timber.fabrication.DovetailMortise.apply.rst", "api/generated/compas_timber.fabrication.DovetailMortise.copy.rst", "api/generated/compas_timber.fabrication.DovetailMortise.define_dovetail_tool.rst", "api/generated/compas_timber.fabrication.DovetailMortise.dovetail_cutting_frames_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailMortise.dovetail_volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailMortise.frame_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailMortise.from_frame_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailMortise.from_json.rst", "api/generated/compas_timber.fabrication.DovetailMortise.from_jsonstring.rst", "api/generated/compas_timber.fabrication.DovetailMortise.sha256.rst", "api/generated/compas_timber.fabrication.DovetailMortise.to_json.rst", "api/generated/compas_timber.fabrication.DovetailMortise.to_jsonstring.rst", "api/generated/compas_timber.fabrication.DovetailMortise.validate_data.rst", "api/generated/compas_timber.fabrication.DovetailTenon.rst", "api/generated/compas_timber.fabrication.DovetailTenon.ToString.rst", "api/generated/compas_timber.fabrication.DovetailTenon.add_subprocessing.rst", "api/generated/compas_timber.fabrication.DovetailTenon.apply.rst", "api/generated/compas_timber.fabrication.DovetailTenon.copy.rst", "api/generated/compas_timber.fabrication.DovetailTenon.define_dovetail_tool.rst", "api/generated/compas_timber.fabrication.DovetailTenon.dovetail_cutting_frames_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailTenon.dovetail_volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailTenon.frame_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailTenon.from_json.rst", "api/generated/compas_timber.fabrication.DovetailTenon.from_jsonstring.rst", "api/generated/compas_timber.fabrication.DovetailTenon.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.DovetailTenon.sha256.rst", "api/generated/compas_timber.fabrication.DovetailTenon.to_json.rst", "api/generated/compas_timber.fabrication.DovetailTenon.to_jsonstring.rst", "api/generated/compas_timber.fabrication.DovetailTenon.validate_data.rst", "api/generated/compas_timber.fabrication.Drilling.rst", "api/generated/compas_timber.fabrication.Drilling.ToString.rst", "api/generated/compas_timber.fabrication.Drilling.add_subprocessing.rst", "api/generated/compas_timber.fabrication.Drilling.apply.rst", "api/generated/compas_timber.fabrication.Drilling.copy.rst", "api/generated/compas_timber.fabrication.Drilling.cylinder_from_params_and_element.rst", "api/generated/compas_timber.fabrication.Drilling.from_json.rst", "api/generated/compas_timber.fabrication.Drilling.from_jsonstring.rst", "api/generated/compas_timber.fabrication.Drilling.from_line_and_element.rst", "api/generated/compas_timber.fabrication.Drilling.from_shapes_and_element.rst", "api/generated/compas_timber.fabrication.Drilling.sha256.rst", "api/generated/compas_timber.fabrication.Drilling.to_json.rst", "api/generated/compas_timber.fabrication.Drilling.to_jsonstring.rst", "api/generated/compas_timber.fabrication.Drilling.validate_data.rst", "api/generated/compas_timber.fabrication.EdgePositionType.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.ToString.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.add_subprocessing.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.apply.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.copy.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.frame_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_beam_beam_and_plane.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_json.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_jsonstring.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.lap_volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.sha256.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.to_json.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.to_jsonstring.rst", "api/generated/compas_timber.fabrication.FrenchRidgeLap.validate_data.rst", "api/generated/compas_timber.fabrication.JackRafterCut.rst", "api/generated/compas_timber.fabrication.JackRafterCut.ToString.rst", "api/generated/compas_timber.fabrication.JackRafterCut.add_subprocessing.rst", "api/generated/compas_timber.fabrication.JackRafterCut.apply.rst", "api/generated/compas_timber.fabrication.JackRafterCut.copy.rst", "api/generated/compas_timber.fabrication.JackRafterCut.from_json.rst", "api/generated/compas_timber.fabrication.JackRafterCut.from_jsonstring.rst", "api/generated/compas_timber.fabrication.JackRafterCut.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.JackRafterCut.from_shapes_and_element.rst", "api/generated/compas_timber.fabrication.JackRafterCut.plane_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.JackRafterCut.sha256.rst", "api/generated/compas_timber.fabrication.JackRafterCut.to_json.rst", "api/generated/compas_timber.fabrication.JackRafterCut.to_jsonstring.rst", "api/generated/compas_timber.fabrication.JackRafterCut.validate_data.rst", "api/generated/compas_timber.fabrication.Lap.rst", "api/generated/compas_timber.fabrication.Lap.ToString.rst", "api/generated/compas_timber.fabrication.Lap.add_subprocessing.rst", "api/generated/compas_timber.fabrication.Lap.apply.rst", "api/generated/compas_timber.fabrication.Lap.copy.rst", "api/generated/compas_timber.fabrication.Lap.from_json.rst", "api/generated/compas_timber.fabrication.Lap.from_jsonstring.rst", "api/generated/compas_timber.fabrication.Lap.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.Lap.planes_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.Lap.sha256.rst", "api/generated/compas_timber.fabrication.Lap.to_json.rst", "api/generated/compas_timber.fabrication.Lap.to_jsonstring.rst", "api/generated/compas_timber.fabrication.Lap.validate_data.rst", "api/generated/compas_timber.fabrication.Lap.volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.LimitationTopType.rst", "api/generated/compas_timber.fabrication.MachiningLimits.rst", "api/generated/compas_timber.fabrication.Mortise.rst", "api/generated/compas_timber.fabrication.Mortise.ToString.rst", "api/generated/compas_timber.fabrication.Mortise.add_subprocessing.rst", "api/generated/compas_timber.fabrication.Mortise.apply.rst", "api/generated/compas_timber.fabrication.Mortise.copy.rst", "api/generated/compas_timber.fabrication.Mortise.frame_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.Mortise.from_frame_and_beam.rst", "api/generated/compas_timber.fabrication.Mortise.from_json.rst", "api/generated/compas_timber.fabrication.Mortise.from_jsonstring.rst", "api/generated/compas_timber.fabrication.Mortise.sha256.rst", "api/generated/compas_timber.fabrication.Mortise.to_json.rst", "api/generated/compas_timber.fabrication.Mortise.to_jsonstring.rst", "api/generated/compas_timber.fabrication.Mortise.validate_data.rst", "api/generated/compas_timber.fabrication.Mortise.volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.OrientationType.rst", "api/generated/compas_timber.fabrication.Slot.rst", "api/generated/compas_timber.fabrication.Slot.ToString.rst", "api/generated/compas_timber.fabrication.Slot.add_subprocessing.rst", "api/generated/compas_timber.fabrication.Slot.apply.rst", "api/generated/compas_timber.fabrication.Slot.copy.rst", "api/generated/compas_timber.fabrication.Slot.from_json.rst", "api/generated/compas_timber.fabrication.Slot.from_jsonstring.rst", "api/generated/compas_timber.fabrication.Slot.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.Slot.sha256.rst", "api/generated/compas_timber.fabrication.Slot.to_json.rst", "api/generated/compas_timber.fabrication.Slot.to_jsonstring.rst", "api/generated/compas_timber.fabrication.Slot.validate_data.rst", "api/generated/compas_timber.fabrication.StepJoint.rst", "api/generated/compas_timber.fabrication.StepJoint.ToString.rst", "api/generated/compas_timber.fabrication.StepJoint.add_subprocessing.rst", "api/generated/compas_timber.fabrication.StepJoint.add_tenon.rst", "api/generated/compas_timber.fabrication.StepJoint.apply.rst", "api/generated/compas_timber.fabrication.StepJoint.copy.rst", "api/generated/compas_timber.fabrication.StepJoint.from_json.rst", "api/generated/compas_timber.fabrication.StepJoint.from_jsonstring.rst", "api/generated/compas_timber.fabrication.StepJoint.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.StepJoint.planes_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.StepJoint.sha256.rst", "api/generated/compas_timber.fabrication.StepJoint.tenon_volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.StepJoint.to_json.rst", "api/generated/compas_timber.fabrication.StepJoint.to_jsonstring.rst", "api/generated/compas_timber.fabrication.StepJoint.validate_data.rst", "api/generated/compas_timber.fabrication.StepJointNotch.rst", "api/generated/compas_timber.fabrication.StepJointNotch.ToString.rst", "api/generated/compas_timber.fabrication.StepJointNotch.add_mortise.rst", "api/generated/compas_timber.fabrication.StepJointNotch.add_subprocessing.rst", "api/generated/compas_timber.fabrication.StepJointNotch.apply.rst", "api/generated/compas_timber.fabrication.StepJointNotch.copy.rst", "api/generated/compas_timber.fabrication.StepJointNotch.from_json.rst", "api/generated/compas_timber.fabrication.StepJointNotch.from_jsonstring.rst", "api/generated/compas_timber.fabrication.StepJointNotch.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.StepJointNotch.mortise_volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.StepJointNotch.planes_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.StepJointNotch.sha256.rst", "api/generated/compas_timber.fabrication.StepJointNotch.to_json.rst", "api/generated/compas_timber.fabrication.StepJointNotch.to_jsonstring.rst", "api/generated/compas_timber.fabrication.StepJointNotch.validate_data.rst", "api/generated/compas_timber.fabrication.StepShapeType.rst", "api/generated/compas_timber.fabrication.Tenon.rst", "api/generated/compas_timber.fabrication.Tenon.ToString.rst", "api/generated/compas_timber.fabrication.Tenon.add_subprocessing.rst", "api/generated/compas_timber.fabrication.Tenon.apply.rst", "api/generated/compas_timber.fabrication.Tenon.copy.rst", "api/generated/compas_timber.fabrication.Tenon.frame_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.Tenon.from_json.rst", "api/generated/compas_timber.fabrication.Tenon.from_jsonstring.rst", "api/generated/compas_timber.fabrication.Tenon.from_plane_and_beam.rst", "api/generated/compas_timber.fabrication.Tenon.sha256.rst", "api/generated/compas_timber.fabrication.Tenon.to_json.rst", "api/generated/compas_timber.fabrication.Tenon.to_jsonstring.rst", "api/generated/compas_timber.fabrication.Tenon.validate_data.rst", "api/generated/compas_timber.fabrication.Tenon.volume_from_params_and_beam.rst", "api/generated/compas_timber.fabrication.TenonShapeType.rst", "api/generated/compas_timber.ghpython.add_gh_param.rst", "api/generated/compas_timber.ghpython.clear_gh_params.rst", "api/generated/compas_timber.ghpython.get_leaf_subclasses.rst", "api/generated/compas_timber.ghpython.item_input_valid.rst", "api/generated/compas_timber.ghpython.list_input_valid.rst", "api/generated/compas_timber.ghpython.manage_dynamic_params.rst", "api/generated/compas_timber.ghpython.rename_gh_input.rst", "api/generated/compas_timber.model.TimberModel.rst", "api/generated/compas_timber.model.TimberModel.ToString.rst", "api/generated/compas_timber.model.TimberModel.add_element.rst", "api/generated/compas_timber.model.TimberModel.add_elements.rst", "api/generated/compas_timber.model.TimberModel.add_group.rst", "api/generated/compas_timber.model.TimberModel.add_group_element.rst", "api/generated/compas_timber.model.TimberModel.add_interaction.rst", "api/generated/compas_timber.model.TimberModel.add_joint.rst", "api/generated/compas_timber.model.TimberModel.add_material.rst", "api/generated/compas_timber.model.TimberModel.assign_material.rst", "api/generated/compas_timber.model.TimberModel.compute_aabb.rst", "api/generated/compas_timber.model.TimberModel.compute_obb.rst", "api/generated/compas_timber.model.TimberModel.copy.rst", "api/generated/compas_timber.model.TimberModel.element_by_guid.rst", "api/generated/compas_timber.model.TimberModel.elements.rst", "api/generated/compas_timber.model.TimberModel.elements_connected_by.rst", "api/generated/compas_timber.model.TimberModel.from_json.rst", "api/generated/compas_timber.model.TimberModel.from_jsonstring.rst", "api/generated/compas_timber.model.TimberModel.get_elements_in_group.rst", "api/generated/compas_timber.model.TimberModel.has_element.rst", "api/generated/compas_timber.model.TimberModel.has_group.rst", "api/generated/compas_timber.model.TimberModel.has_interaction.rst", "api/generated/compas_timber.model.TimberModel.has_material.rst", "api/generated/compas_timber.model.TimberModel.interactions.rst", "api/generated/compas_timber.model.TimberModel.materials.rst", "api/generated/compas_timber.model.TimberModel.process_joinery.rst", "api/generated/compas_timber.model.TimberModel.remove_element.rst", "api/generated/compas_timber.model.TimberModel.remove_interaction.rst", "api/generated/compas_timber.model.TimberModel.remove_joint.rst", "api/generated/compas_timber.model.TimberModel.rotate.rst", "api/generated/compas_timber.model.TimberModel.rotated.rst", "api/generated/compas_timber.model.TimberModel.scale.rst", "api/generated/compas_timber.model.TimberModel.scaled.rst", "api/generated/compas_timber.model.TimberModel.set_topologies.rst", "api/generated/compas_timber.model.TimberModel.sha256.rst", "api/generated/compas_timber.model.TimberModel.to_json.rst", "api/generated/compas_timber.model.TimberModel.to_jsonstring.rst", "api/generated/compas_timber.model.TimberModel.transform.rst", "api/generated/compas_timber.model.TimberModel.transform_numpy.rst", "api/generated/compas_timber.model.TimberModel.transformed.rst", "api/generated/compas_timber.model.TimberModel.transformed_numpy.rst", "api/generated/compas_timber.model.TimberModel.translate.rst", "api/generated/compas_timber.model.TimberModel.translated.rst", "api/generated/compas_timber.model.TimberModel.validate_data.rst", "api/generated/compas_timber.planning.Actor.rst", "api/generated/compas_timber.planning.Actor.get_name.rst", "api/generated/compas_timber.planning.BuildingPlan.rst", "api/generated/compas_timber.planning.BuildingPlan.ToString.rst", "api/generated/compas_timber.planning.BuildingPlan.add_step.rst", "api/generated/compas_timber.planning.BuildingPlan.copy.rst", "api/generated/compas_timber.planning.BuildingPlan.from_json.rst", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.sha256.rst", "api/generated/compas_timber.planning.BuildingPlan.to_json.rst", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.validate_data.rst", "api/generated/compas_timber.planning.BuildingPlanParser.rst", "api/generated/compas_timber.planning.BuildingPlanParser.parse.rst", "api/generated/compas_timber.planning.BuildingPlanParser.serialize.rst", "api/generated/compas_timber.planning.Instruction.rst", "api/generated/compas_timber.planning.Instruction.ToString.rst", "api/generated/compas_timber.planning.Instruction.copy.rst", "api/generated/compas_timber.planning.Instruction.from_json.rst", "api/generated/compas_timber.planning.Instruction.from_jsonstring.rst", "api/generated/compas_timber.planning.Instruction.sha256.rst", "api/generated/compas_timber.planning.Instruction.to_json.rst", "api/generated/compas_timber.planning.Instruction.to_jsonstring.rst", "api/generated/compas_timber.planning.Instruction.transform.rst", "api/generated/compas_timber.planning.Instruction.validate_data.rst", "api/generated/compas_timber.planning.LinearDimension.rst", "api/generated/compas_timber.planning.LinearDimension.ToString.rst", "api/generated/compas_timber.planning.LinearDimension.copy.rst", "api/generated/compas_timber.planning.LinearDimension.from_json.rst", "api/generated/compas_timber.planning.LinearDimension.from_jsonstring.rst", "api/generated/compas_timber.planning.LinearDimension.sha256.rst", "api/generated/compas_timber.planning.LinearDimension.to_json.rst", "api/generated/compas_timber.planning.LinearDimension.to_jsonstring.rst", "api/generated/compas_timber.planning.LinearDimension.transform.rst", "api/generated/compas_timber.planning.LinearDimension.validate_data.rst", "api/generated/compas_timber.planning.Model3d.rst", "api/generated/compas_timber.planning.Model3d.ToString.rst", "api/generated/compas_timber.planning.Model3d.copy.rst", "api/generated/compas_timber.planning.Model3d.from_json.rst", "api/generated/compas_timber.planning.Model3d.from_jsonstring.rst", "api/generated/compas_timber.planning.Model3d.sha256.rst", "api/generated/compas_timber.planning.Model3d.to_json.rst", "api/generated/compas_timber.planning.Model3d.to_jsonstring.rst", "api/generated/compas_timber.planning.Model3d.transform.rst", "api/generated/compas_timber.planning.Model3d.validate_data.rst", "api/generated/compas_timber.planning.SimpleSequenceGenerator.rst", "api/generated/compas_timber.planning.Step.rst", "api/generated/compas_timber.planning.Step.ToString.rst", "api/generated/compas_timber.planning.Step.copy.rst", "api/generated/compas_timber.planning.Step.from_json.rst", "api/generated/compas_timber.planning.Step.from_jsonstring.rst", "api/generated/compas_timber.planning.Step.sha256.rst", "api/generated/compas_timber.planning.Step.to_json.rst", "api/generated/compas_timber.planning.Step.to_jsonstring.rst", "api/generated/compas_timber.planning.Step.transform.rst", "api/generated/compas_timber.planning.Step.validate_data.rst", "api/generated/compas_timber.planning.Text3d.rst", "api/generated/compas_timber.planning.Text3d.ToString.rst", "api/generated/compas_timber.planning.Text3d.copy.rst", "api/generated/compas_timber.planning.Text3d.from_json.rst", "api/generated/compas_timber.planning.Text3d.from_jsonstring.rst", "api/generated/compas_timber.planning.Text3d.sha256.rst", "api/generated/compas_timber.planning.Text3d.to_json.rst", "api/generated/compas_timber.planning.Text3d.to_jsonstring.rst", "api/generated/compas_timber.planning.Text3d.transform.rst", "api/generated/compas_timber.planning.Text3d.validate_data.rst", "api/generated/compas_timber.rhino.find_neighboring_beams.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "license.rst", "tutorials.rst", "tutorials/BTLx_contribution_guide.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beams.rst", "tutorials/grasshopper/design.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/fabrication.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joint_rules.rst", "tutorials/grasshopper/model.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "indexentries": {"actor (class in compas_timber.planning)": [[709, "compas_timber.planning.Actor", false]], "add_blank_extension() (compas_timber.elements.beam method)": [[348, "compas_timber.elements.Beam.add_blank_extension", false]], "add_element() (compas_timber.model.timbermodel method)": [[667, "compas_timber.model.TimberModel.add_element", false]], "add_elements() (compas_timber.model.timbermodel method)": [[668, "compas_timber.model.TimberModel.add_elements", false]], "add_extensions() (compas_timber.connections.ballnodejoint method)": [[12, "compas_timber.connections.BallNodeJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.joint method)": [[32, "compas_timber.connections.Joint.add_extensions", false]], "add_extensions() (compas_timber.connections.lapjoint method)": [[125, "compas_timber.connections.LapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lbuttjoint method)": [[51, "compas_timber.connections.LButtJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lfrenchridgelapjoint method)": [[69, "compas_timber.connections.LFrenchRidgeLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.llapjoint method)": [[88, "compas_timber.connections.LLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lmiterjoint method)": [[107, "compas_timber.connections.LMiterJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.nulljoint method)": [[144, "compas_timber.connections.NullJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tbirdsmouthjoint method)": [[161, "compas_timber.connections.TBirdsmouthJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tbuttjoint method)": [[178, "compas_timber.connections.TButtJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tdovetailjoint method)": [[195, "compas_timber.connections.TDovetailJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tenonmortisejoint method)": [[250, "compas_timber.connections.TenonMortiseJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tlapjoint method)": [[213, "compas_timber.connections.TLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tstepjoint method)": [[232, "compas_timber.connections.TStepJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.xlapjoint method)": [[268, "compas_timber.connections.XLapJoint.add_extensions", false]], "add_fastener_error() (compas_timber.design.debuginfomation method)": [[296, "compas_timber.design.DebugInfomation.add_fastener_error", false]], "add_feature() (compas_timber.elements.beam method)": [[349, "compas_timber.elements.Beam.add_feature", false]], "add_feature() (compas_timber.elements.fastener method)": [[377, "compas_timber.elements.Fastener.add_feature", false]], "add_feature() (compas_timber.elements.plate method)": [[405, "compas_timber.elements.Plate.add_feature", false]], "add_feature() (compas_timber.elements.timberelement method)": [[426, "compas_timber.elements.TimberElement.add_feature", false]], "add_feature() (compas_timber.elements.wall method)": [[444, "compas_timber.elements.Wall.add_feature", false]], "add_feature_error() (compas_timber.design.debuginfomation method)": [[297, "compas_timber.design.DebugInfomation.add_feature_error", false]], "add_features() (compas_timber.connections.ballnodejoint method)": [[13, "compas_timber.connections.BallNodeJoint.add_features", false]], "add_features() (compas_timber.connections.joint method)": [[33, "compas_timber.connections.Joint.add_features", false]], "add_features() (compas_timber.connections.lapjoint method)": [[126, "compas_timber.connections.LapJoint.add_features", false]], "add_features() (compas_timber.connections.lbuttjoint method)": [[52, "compas_timber.connections.LButtJoint.add_features", false]], "add_features() (compas_timber.connections.lfrenchridgelapjoint method)": [[70, "compas_timber.connections.LFrenchRidgeLapJoint.add_features", false]], "add_features() (compas_timber.connections.llapjoint method)": [[89, "compas_timber.connections.LLapJoint.add_features", false]], "add_features() (compas_timber.connections.lmiterjoint method)": [[108, "compas_timber.connections.LMiterJoint.add_features", false]], "add_features() (compas_timber.connections.nulljoint method)": [[145, "compas_timber.connections.NullJoint.add_features", false]], "add_features() (compas_timber.connections.tbirdsmouthjoint method)": [[162, "compas_timber.connections.TBirdsmouthJoint.add_features", false]], "add_features() (compas_timber.connections.tbuttjoint method)": [[179, "compas_timber.connections.TButtJoint.add_features", false]], "add_features() (compas_timber.connections.tdovetailjoint method)": [[196, "compas_timber.connections.TDovetailJoint.add_features", false]], "add_features() (compas_timber.connections.tenonmortisejoint method)": [[251, "compas_timber.connections.TenonMortiseJoint.add_features", false]], "add_features() (compas_timber.connections.tlapjoint method)": [[214, "compas_timber.connections.TLapJoint.add_features", false]], "add_features() (compas_timber.connections.tstepjoint method)": [[233, "compas_timber.connections.TStepJoint.add_features", false]], "add_features() (compas_timber.connections.xlapjoint method)": [[269, "compas_timber.connections.XLapJoint.add_features", false]], "add_features() (compas_timber.elements.beam method)": [[350, "compas_timber.elements.Beam.add_features", false]], "add_features() (compas_timber.elements.plate method)": [[406, "compas_timber.elements.Plate.add_features", false]], "add_gh_param() (in module compas_timber.ghpython)": [[658, "compas_timber.ghpython.add_gh_param", false]], "add_group() (compas_timber.model.timbermodel method)": [[669, "compas_timber.model.TimberModel.add_group", false]], "add_group_element() (compas_timber.model.timbermodel method)": [[670, "compas_timber.model.TimberModel.add_group_element", false]], "add_interaction() (compas_timber.model.timbermodel method)": [[671, "compas_timber.model.TimberModel.add_interaction", false]], "add_joint() (compas_timber.model.timbermodel method)": [[672, "compas_timber.model.TimberModel.add_joint", false]], "add_joint_error() (compas_timber.design.debuginfomation method)": [[298, "compas_timber.design.DebugInfomation.add_joint_error", false]], "add_material() (compas_timber.model.timbermodel method)": [[673, "compas_timber.model.TimberModel.add_material", false]], "add_mortise() (compas_timber.fabrication.stepjointnotch method)": [[629, "compas_timber.fabrication.StepJointNotch.add_mortise", false]], "add_step() (compas_timber.planning.buildingplan method)": [[713, "compas_timber.planning.BuildingPlan.add_step", false]], "add_subprocessing() (compas_timber.fabrication.btlxprocessing method)": [[469, "compas_timber.fabrication.BTLxProcessing.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.doublecut method)": [[482, "compas_timber.fabrication.DoubleCut.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.dovetailmortise method)": [[496, "compas_timber.fabrication.DovetailMortise.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.dovetailtenon method)": [[512, "compas_timber.fabrication.DovetailTenon.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.drilling method)": [[528, "compas_timber.fabrication.Drilling.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.frenchridgelap method)": [[543, "compas_timber.fabrication.FrenchRidgeLap.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.jackraftercut method)": [[557, "compas_timber.fabrication.JackRafterCut.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.lap method)": [[571, "compas_timber.fabrication.Lap.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.mortise method)": [[587, "compas_timber.fabrication.Mortise.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.slot method)": [[602, "compas_timber.fabrication.Slot.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.stepjoint method)": [[614, "compas_timber.fabrication.StepJoint.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.stepjointnotch method)": [[630, "compas_timber.fabrication.StepJointNotch.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.tenon method)": [[645, "compas_timber.fabrication.Tenon.add_subprocessing", false]], "add_tenon() (compas_timber.fabrication.stepjoint method)": [[615, "compas_timber.fabrication.StepJoint.add_tenon", false]], "apply() (compas_timber.fabrication.doublecut method)": [[483, "compas_timber.fabrication.DoubleCut.apply", false]], "apply() (compas_timber.fabrication.dovetailmortise method)": [[497, "compas_timber.fabrication.DovetailMortise.apply", false]], "apply() (compas_timber.fabrication.dovetailtenon method)": [[513, "compas_timber.fabrication.DovetailTenon.apply", false]], "apply() (compas_timber.fabrication.drilling method)": [[529, "compas_timber.fabrication.Drilling.apply", false]], "apply() (compas_timber.fabrication.frenchridgelap method)": [[544, "compas_timber.fabrication.FrenchRidgeLap.apply", false]], "apply() (compas_timber.fabrication.jackraftercut method)": [[558, "compas_timber.fabrication.JackRafterCut.apply", false]], "apply() (compas_timber.fabrication.lap method)": [[572, "compas_timber.fabrication.Lap.apply", false]], "apply() (compas_timber.fabrication.mortise method)": [[588, "compas_timber.fabrication.Mortise.apply", false]], "apply() (compas_timber.fabrication.slot method)": [[603, "compas_timber.fabrication.Slot.apply", false]], "apply() (compas_timber.fabrication.stepjoint method)": [[616, "compas_timber.fabrication.StepJoint.apply", false]], "apply() (compas_timber.fabrication.stepjointnotch method)": [[631, "compas_timber.fabrication.StepJointNotch.apply", false]], "apply() (compas_timber.fabrication.tenon method)": [[646, "compas_timber.fabrication.Tenon.apply", false]], "assign_material() (compas_timber.model.timbermodel method)": [[674, "compas_timber.model.TimberModel.assign_material", false]], "ballnodejoint (class in compas_timber.connections)": [[10, "compas_timber.connections.BallNodeJoint", false]], "beam (class in compas_timber.elements)": [[346, "compas_timber.elements.Beam", false]], "beam_category_names() (compas_timber.design.surfacemodel class method)": [[320, "compas_timber.design.SurfaceModel.beam_category_names", false]], "beamjoiningerror": [[461, "compas_timber.errors.BeamJoiningError", false]], "btlxpart (class in compas_timber.fabrication)": [[464, "compas_timber.fabrication.BTLxPart", false]], "btlxprocessing (class in compas_timber.fabrication)": [[467, "compas_timber.fabrication.BTLxProcessing", false]], "btlxwriter (class in compas_timber.fabrication)": [[477, "compas_timber.fabrication.BTLxWriter", false]], "buildingplan (class in compas_timber.planning)": [[711, "compas_timber.planning.BuildingPlan", false]], "buildingplanparser (class in compas_timber.planning)": [[721, "compas_timber.planning.BuildingPlanParser", false]], "categoryrule (class in compas_timber.design)": [[286, "compas_timber.design.CategoryRule", false]], "check_elements_compatibility() (compas_timber.connections.ballnodejoint method)": [[14, "compas_timber.connections.BallNodeJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.joint method)": [[34, "compas_timber.connections.Joint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.lapjoint method)": [[127, "compas_timber.connections.LapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.lbuttjoint method)": [[53, "compas_timber.connections.LButtJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.lfrenchridgelapjoint method)": [[71, "compas_timber.connections.LFrenchRidgeLapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.llapjoint method)": [[90, "compas_timber.connections.LLapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.lmiterjoint method)": [[109, "compas_timber.connections.LMiterJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.nulljoint method)": [[146, "compas_timber.connections.NullJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tbirdsmouthjoint method)": [[163, "compas_timber.connections.TBirdsmouthJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tbuttjoint method)": [[180, "compas_timber.connections.TButtJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tdovetailjoint method)": [[197, "compas_timber.connections.TDovetailJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tenonmortisejoint method)": [[252, "compas_timber.connections.TenonMortiseJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tlapjoint method)": [[215, "compas_timber.connections.TLapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tstepjoint method)": [[234, "compas_timber.connections.TStepJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.xlapjoint method)": [[270, "compas_timber.connections.XLapJoint.check_elements_compatibility", false]], "clear_gh_params() (in module compas_timber.ghpython)": [[659, "compas_timber.ghpython.clear_gh_params", false]], "comply() (compas_timber.design.categoryrule method)": [[288, "compas_timber.design.CategoryRule.comply", false]], "comply() (compas_timber.design.directrule method)": [[301, "compas_timber.design.DirectRule.comply", false]], "comply() (compas_timber.design.jointrule method)": [[314, "compas_timber.design.JointRule.comply", false]], "comply() (compas_timber.design.topologyrule method)": [[339, "compas_timber.design.TopologyRule.comply", false]], "compute_aabb() (compas_timber.elements.beam method)": [[351, "compas_timber.elements.Beam.compute_aabb", false]], "compute_aabb() (compas_timber.elements.fastener method)": [[378, "compas_timber.elements.Fastener.compute_aabb", false]], "compute_aabb() (compas_timber.elements.plate method)": [[407, "compas_timber.elements.Plate.compute_aabb", false]], "compute_aabb() (compas_timber.elements.timberelement method)": [[427, "compas_timber.elements.TimberElement.compute_aabb", false]], "compute_aabb() (compas_timber.elements.wall method)": [[445, "compas_timber.elements.Wall.compute_aabb", false]], "compute_aabb() (compas_timber.model.timbermodel method)": [[675, "compas_timber.model.TimberModel.compute_aabb", false]], "compute_collision_mesh() (compas_timber.elements.beam method)": [[352, "compas_timber.elements.Beam.compute_collision_mesh", false]], "compute_collision_mesh() (compas_timber.elements.fastener method)": [[379, "compas_timber.elements.Fastener.compute_collision_mesh", false]], "compute_collision_mesh() (compas_timber.elements.plate method)": [[408, "compas_timber.elements.Plate.compute_collision_mesh", false]], "compute_collision_mesh() (compas_timber.elements.timberelement method)": [[428, "compas_timber.elements.TimberElement.compute_collision_mesh", false]], "compute_collision_mesh() (compas_timber.elements.wall method)": [[446, "compas_timber.elements.Wall.compute_collision_mesh", false]], "compute_geometry() (compas_timber.elements.beam method)": [[353, "compas_timber.elements.Beam.compute_geometry", false]], "compute_geometry() (compas_timber.elements.fastener method)": [[380, "compas_timber.elements.Fastener.compute_geometry", false]], "compute_geometry() (compas_timber.elements.plate method)": [[409, "compas_timber.elements.Plate.compute_geometry", false]], "compute_geometry() (compas_timber.elements.timberelement method)": [[429, "compas_timber.elements.TimberElement.compute_geometry", false]], "compute_geometry() (compas_timber.elements.wall method)": [[447, "compas_timber.elements.Wall.compute_geometry", false]], "compute_obb() (compas_timber.elements.beam method)": [[354, "compas_timber.elements.Beam.compute_obb", false]], "compute_obb() (compas_timber.elements.fastener method)": [[381, "compas_timber.elements.Fastener.compute_obb", false]], "compute_obb() (compas_timber.elements.plate method)": [[410, "compas_timber.elements.Plate.compute_obb", false]], "compute_obb() (compas_timber.elements.timberelement method)": [[430, "compas_timber.elements.TimberElement.compute_obb", false]], "compute_obb() (compas_timber.elements.wall method)": [[448, "compas_timber.elements.Wall.compute_obb", false]], "compute_obb() (compas_timber.model.timbermodel method)": [[676, "compas_timber.model.TimberModel.compute_obb", false]], "compute_worldtransformation() (compas_timber.elements.beam method)": [[355, "compas_timber.elements.Beam.compute_worldtransformation", false]], "compute_worldtransformation() (compas_timber.elements.fastener method)": [[382, "compas_timber.elements.Fastener.compute_worldtransformation", false]], "compute_worldtransformation() (compas_timber.elements.plate method)": [[411, "compas_timber.elements.Plate.compute_worldtransformation", false]], "compute_worldtransformation() (compas_timber.elements.timberelement method)": [[431, "compas_timber.elements.TimberElement.compute_worldtransformation", false]], "compute_worldtransformation() (compas_timber.elements.wall method)": [[449, "compas_timber.elements.Wall.compute_worldtransformation", false]], "connectionsolver (class in compas_timber.connections)": [[27, "compas_timber.connections.ConnectionSolver", false]], "contains() (compas_timber.design.directrule method)": [[302, "compas_timber.design.DirectRule.contains", false]], "copy() (compas_timber.connections.ballnodejoint method)": [[15, "compas_timber.connections.BallNodeJoint.copy", false]], "copy() (compas_timber.connections.joint method)": [[35, "compas_timber.connections.Joint.copy", false]], "copy() (compas_timber.connections.lapjoint method)": [[128, "compas_timber.connections.LapJoint.copy", false]], "copy() (compas_timber.connections.lbuttjoint method)": [[54, "compas_timber.connections.LButtJoint.copy", false]], "copy() (compas_timber.connections.lfrenchridgelapjoint method)": [[72, "compas_timber.connections.LFrenchRidgeLapJoint.copy", false]], "copy() (compas_timber.connections.llapjoint method)": [[91, "compas_timber.connections.LLapJoint.copy", false]], "copy() (compas_timber.connections.lmiterjoint method)": [[110, "compas_timber.connections.LMiterJoint.copy", false]], "copy() (compas_timber.connections.nulljoint method)": [[147, "compas_timber.connections.NullJoint.copy", false]], "copy() (compas_timber.connections.tbirdsmouthjoint method)": [[164, "compas_timber.connections.TBirdsmouthJoint.copy", false]], "copy() (compas_timber.connections.tbuttjoint method)": [[181, "compas_timber.connections.TButtJoint.copy", false]], "copy() (compas_timber.connections.tdovetailjoint method)": [[198, "compas_timber.connections.TDovetailJoint.copy", false]], "copy() (compas_timber.connections.tenonmortisejoint method)": [[253, "compas_timber.connections.TenonMortiseJoint.copy", false]], "copy() (compas_timber.connections.tlapjoint method)": [[216, "compas_timber.connections.TLapJoint.copy", false]], "copy() (compas_timber.connections.tstepjoint method)": [[235, "compas_timber.connections.TStepJoint.copy", false]], "copy() (compas_timber.connections.xlapjoint method)": [[271, "compas_timber.connections.XLapJoint.copy", false]], "copy() (compas_timber.elements.beam method)": [[356, "compas_timber.elements.Beam.copy", false]], "copy() (compas_timber.elements.fastener method)": [[383, "compas_timber.elements.Fastener.copy", false]], "copy() (compas_timber.elements.fastenertimberinterface method)": [[395, "compas_timber.elements.FastenerTimberInterface.copy", false]], "copy() (compas_timber.elements.plate method)": [[412, "compas_timber.elements.Plate.copy", false]], "copy() (compas_timber.elements.timberelement method)": [[432, "compas_timber.elements.TimberElement.copy", false]], "copy() (compas_timber.elements.wall method)": [[450, "compas_timber.elements.Wall.copy", false]], "copy() (compas_timber.fabrication.btlxprocessing method)": [[470, "compas_timber.fabrication.BTLxProcessing.copy", false]], "copy() (compas_timber.fabrication.doublecut method)": [[484, "compas_timber.fabrication.DoubleCut.copy", false]], "copy() (compas_timber.fabrication.dovetailmortise method)": [[498, "compas_timber.fabrication.DovetailMortise.copy", false]], "copy() (compas_timber.fabrication.dovetailtenon method)": [[514, "compas_timber.fabrication.DovetailTenon.copy", false]], "copy() (compas_timber.fabrication.drilling method)": [[530, "compas_timber.fabrication.Drilling.copy", false]], "copy() (compas_timber.fabrication.frenchridgelap method)": [[545, "compas_timber.fabrication.FrenchRidgeLap.copy", false]], "copy() (compas_timber.fabrication.jackraftercut method)": [[559, "compas_timber.fabrication.JackRafterCut.copy", false]], "copy() (compas_timber.fabrication.lap method)": [[573, "compas_timber.fabrication.Lap.copy", false]], "copy() (compas_timber.fabrication.mortise method)": [[589, "compas_timber.fabrication.Mortise.copy", false]], "copy() (compas_timber.fabrication.slot method)": [[604, "compas_timber.fabrication.Slot.copy", false]], "copy() (compas_timber.fabrication.stepjoint method)": [[617, "compas_timber.fabrication.StepJoint.copy", false]], "copy() (compas_timber.fabrication.stepjointnotch method)": [[632, "compas_timber.fabrication.StepJointNotch.copy", false]], "copy() (compas_timber.fabrication.tenon method)": [[647, "compas_timber.fabrication.Tenon.copy", false]], "copy() (compas_timber.model.timbermodel method)": [[677, "compas_timber.model.TimberModel.copy", false]], "copy() (compas_timber.planning.buildingplan method)": [[714, "compas_timber.planning.BuildingPlan.copy", false]], "copy() (compas_timber.planning.instruction method)": [[726, "compas_timber.planning.Instruction.copy", false]], "copy() (compas_timber.planning.lineardimension method)": [[736, "compas_timber.planning.LinearDimension.copy", false]], "copy() (compas_timber.planning.model3d method)": [[746, "compas_timber.planning.Model3d.copy", false]], "copy() (compas_timber.planning.step method)": [[757, "compas_timber.planning.Step.copy", false]], "copy() (compas_timber.planning.text3d method)": [[767, "compas_timber.planning.Text3d.copy", false]], "create() (compas_timber.connections.ballnodejoint class method)": [[16, "compas_timber.connections.BallNodeJoint.create", false]], "create() (compas_timber.connections.joint class method)": [[36, "compas_timber.connections.Joint.create", false]], "create() (compas_timber.connections.lapjoint class method)": [[129, "compas_timber.connections.LapJoint.create", false]], "create() (compas_timber.connections.lbuttjoint class method)": [[55, "compas_timber.connections.LButtJoint.create", false]], "create() (compas_timber.connections.lfrenchridgelapjoint class method)": [[73, "compas_timber.connections.LFrenchRidgeLapJoint.create", false]], "create() (compas_timber.connections.llapjoint class method)": [[92, "compas_timber.connections.LLapJoint.create", false]], "create() (compas_timber.connections.lmiterjoint class method)": [[111, "compas_timber.connections.LMiterJoint.create", false]], "create() (compas_timber.connections.nulljoint class method)": [[148, "compas_timber.connections.NullJoint.create", false]], "create() (compas_timber.connections.tbirdsmouthjoint class method)": [[165, "compas_timber.connections.TBirdsmouthJoint.create", false]], "create() (compas_timber.connections.tbuttjoint class method)": [[182, "compas_timber.connections.TButtJoint.create", false]], "create() (compas_timber.connections.tdovetailjoint class method)": [[199, "compas_timber.connections.TDovetailJoint.create", false]], "create() (compas_timber.connections.tenonmortisejoint class method)": [[254, "compas_timber.connections.TenonMortiseJoint.create", false]], "create() (compas_timber.connections.tlapjoint class method)": [[217, "compas_timber.connections.TLapJoint.create", false]], "create() (compas_timber.connections.tstepjoint class method)": [[236, "compas_timber.connections.TStepJoint.create", false]], "create() (compas_timber.connections.xlapjoint class method)": [[272, "compas_timber.connections.XLapJoint.create", false]], "create_model() (compas_timber.design.surfacemodel method)": [[321, "compas_timber.design.SurfaceModel.create_model", false]], "cull_overlaps() (compas_timber.design.surfacemodel method)": [[322, "compas_timber.design.SurfaceModel.cull_overlaps", false]], "cylinder_from_params_and_element() (compas_timber.fabrication.drilling method)": [[531, "compas_timber.fabrication.Drilling.cylinder_from_params_and_element", false]], "debuginfomation (class in compas_timber.design)": [[294, "compas_timber.design.DebugInfomation", false]], "define_dovetail_tool() (compas_timber.connections.tdovetailjoint method)": [[200, "compas_timber.connections.TDovetailJoint.define_dovetail_tool", false]], "define_dovetail_tool() (compas_timber.fabrication.dovetailmortise class method)": [[499, "compas_timber.fabrication.DovetailMortise.define_dovetail_tool", false]], "define_dovetail_tool() (compas_timber.fabrication.dovetailtenon class method)": [[515, "compas_timber.fabrication.DovetailTenon.define_dovetail_tool", false]], "directrule (class in compas_timber.design)": [[299, "compas_timber.design.DirectRule", false]], "distance_between_elements() (compas_timber.design.surfacemodel method)": [[323, "compas_timber.design.SurfaceModel.distance_between_elements", false]], "doublecut (class in compas_timber.fabrication)": [[480, "compas_timber.fabrication.DoubleCut", false]], "dovetail_cutting_frames_from_params_and_beam() (compas_timber.fabrication.dovetailmortise method)": [[500, "compas_timber.fabrication.DovetailMortise.dovetail_cutting_frames_from_params_and_beam", false]], "dovetail_cutting_frames_from_params_and_beam() (compas_timber.fabrication.dovetailtenon method)": [[516, "compas_timber.fabrication.DovetailTenon.dovetail_cutting_frames_from_params_and_beam", false]], "dovetail_volume_from_params_and_beam() (compas_timber.fabrication.dovetailmortise method)": [[501, "compas_timber.fabrication.DovetailMortise.dovetail_volume_from_params_and_beam", false]], "dovetail_volume_from_params_and_beam() (compas_timber.fabrication.dovetailtenon method)": [[517, "compas_timber.fabrication.DovetailTenon.dovetail_volume_from_params_and_beam", false]], "dovetailmortise (class in compas_timber.fabrication)": [[494, "compas_timber.fabrication.DovetailMortise", false]], "dovetailtenon (class in compas_timber.fabrication)": [[510, "compas_timber.fabrication.DovetailTenon", false]], "drilling (class in compas_timber.fabrication)": [[526, "compas_timber.fabrication.Drilling", false]], "edgepositiontype (class in compas_timber.fabrication)": [[540, "compas_timber.fabrication.EdgePositionType", false]], "element_by_guid() (compas_timber.model.timbermodel method)": [[678, "compas_timber.model.TimberModel.element_by_guid", false]], "element_count_complies() (compas_timber.connections.ballnodejoint class method)": [[17, "compas_timber.connections.BallNodeJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.joint class method)": [[37, "compas_timber.connections.Joint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lapjoint class method)": [[130, "compas_timber.connections.LapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lbuttjoint class method)": [[56, "compas_timber.connections.LButtJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lfrenchridgelapjoint class method)": [[74, "compas_timber.connections.LFrenchRidgeLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.llapjoint class method)": [[93, "compas_timber.connections.LLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lmiterjoint class method)": [[112, "compas_timber.connections.LMiterJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.nulljoint class method)": [[149, "compas_timber.connections.NullJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tbirdsmouthjoint class method)": [[166, "compas_timber.connections.TBirdsmouthJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tbuttjoint class method)": [[183, "compas_timber.connections.TButtJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tdovetailjoint class method)": [[201, "compas_timber.connections.TDovetailJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tenonmortisejoint class method)": [[255, "compas_timber.connections.TenonMortiseJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tlapjoint class method)": [[218, "compas_timber.connections.TLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tstepjoint class method)": [[237, "compas_timber.connections.TStepJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.xlapjoint class method)": [[273, "compas_timber.connections.XLapJoint.element_count_complies", false]], "elements() (compas_timber.model.timbermodel method)": [[679, "compas_timber.model.TimberModel.elements", false]], "elements_connected_by() (compas_timber.model.timbermodel method)": [[680, "compas_timber.model.TimberModel.elements_connected_by", false]], "endpoint_closest_to_point() (compas_timber.elements.beam method)": [[357, "compas_timber.elements.Beam.endpoint_closest_to_point", false]], "et_point_vals() (compas_timber.fabrication.btlxpart method)": [[465, "compas_timber.fabrication.BTLxPart.et_point_vals", false]], "extension_to_plane() (compas_timber.elements.beam method)": [[358, "compas_timber.elements.Beam.extension_to_plane", false]], "fastener (class in compas_timber.elements)": [[375, "compas_timber.elements.Fastener", false]], "fastenerapplicationerror": [[462, "compas_timber.errors.FastenerApplicationError", false]], "fastenertimberinterface (class in compas_timber.elements)": [[393, "compas_timber.elements.FastenerTimberInterface", false]], "featureapplicationerror": [[463, "compas_timber.errors.FeatureApplicationError", false]], "featuredefinition (class in compas_timber.design)": [[307, "compas_timber.design.FeatureDefinition", false]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[28, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs", false]], "find_neighboring_beams() (in module compas_timber.connections)": [[285, "compas_timber.connections.find_neighboring_beams", false]], "find_neighboring_beams() (in module compas_timber.rhino)": [[775, "compas_timber.rhino.find_neighboring_beams", false]], "find_topology() (compas_timber.connections.connectionsolver method)": [[29, "compas_timber.connections.ConnectionSolver.find_topology", false]], "frame_from_params_and_beam() (compas_timber.fabrication.dovetailmortise method)": [[502, "compas_timber.fabrication.DovetailMortise.frame_from_params_and_beam", false]], "frame_from_params_and_beam() (compas_timber.fabrication.dovetailtenon method)": [[518, "compas_timber.fabrication.DovetailTenon.frame_from_params_and_beam", false]], "frame_from_params_and_beam() (compas_timber.fabrication.frenchridgelap method)": [[546, "compas_timber.fabrication.FrenchRidgeLap.frame_from_params_and_beam", false]], "frame_from_params_and_beam() (compas_timber.fabrication.mortise method)": [[590, "compas_timber.fabrication.Mortise.frame_from_params_and_beam", false]], "frame_from_params_and_beam() (compas_timber.fabrication.tenon method)": [[648, "compas_timber.fabrication.Tenon.frame_from_params_and_beam", false]], "frenchridgelap (class in compas_timber.fabrication)": [[541, "compas_timber.fabrication.FrenchRidgeLap", false]], "from_beam_beam_and_plane() (compas_timber.fabrication.frenchridgelap class method)": [[547, "compas_timber.fabrication.FrenchRidgeLap.from_beam_beam_and_plane", false]], "from_box() (compas_timber.elements.wall class method)": [[451, "compas_timber.elements.Wall.from_box", false]], "from_centerline() (compas_timber.elements.beam class method)": [[359, "compas_timber.elements.Beam.from_centerline", false]], "from_endpoints() (compas_timber.elements.beam class method)": [[360, "compas_timber.elements.Beam.from_endpoints", false]], "from_frame_and_beam() (compas_timber.fabrication.dovetailmortise class method)": [[503, "compas_timber.fabrication.DovetailMortise.from_frame_and_beam", false]], "from_frame_and_beam() (compas_timber.fabrication.mortise class method)": [[591, "compas_timber.fabrication.Mortise.from_frame_and_beam", false]], "from_json() (compas_timber.connections.ballnodejoint class method)": [[18, "compas_timber.connections.BallNodeJoint.from_json", false]], "from_json() (compas_timber.connections.joint class method)": [[38, "compas_timber.connections.Joint.from_json", false]], "from_json() (compas_timber.connections.lapjoint class method)": [[131, "compas_timber.connections.LapJoint.from_json", false]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[57, "compas_timber.connections.LButtJoint.from_json", false]], "from_json() (compas_timber.connections.lfrenchridgelapjoint class method)": [[75, "compas_timber.connections.LFrenchRidgeLapJoint.from_json", false]], "from_json() (compas_timber.connections.llapjoint class method)": [[94, "compas_timber.connections.LLapJoint.from_json", false]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[113, "compas_timber.connections.LMiterJoint.from_json", false]], "from_json() (compas_timber.connections.nulljoint class method)": [[150, "compas_timber.connections.NullJoint.from_json", false]], "from_json() (compas_timber.connections.tbirdsmouthjoint class method)": [[167, "compas_timber.connections.TBirdsmouthJoint.from_json", false]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[184, "compas_timber.connections.TButtJoint.from_json", false]], "from_json() (compas_timber.connections.tdovetailjoint class method)": [[202, "compas_timber.connections.TDovetailJoint.from_json", false]], "from_json() (compas_timber.connections.tenonmortisejoint class method)": [[256, "compas_timber.connections.TenonMortiseJoint.from_json", false]], "from_json() (compas_timber.connections.tlapjoint class method)": [[219, "compas_timber.connections.TLapJoint.from_json", false]], "from_json() (compas_timber.connections.tstepjoint class method)": [[238, "compas_timber.connections.TStepJoint.from_json", false]], "from_json() (compas_timber.connections.xlapjoint class method)": [[274, "compas_timber.connections.XLapJoint.from_json", false]], "from_json() (compas_timber.elements.beam class method)": [[361, "compas_timber.elements.Beam.from_json", false]], "from_json() (compas_timber.elements.fastener class method)": [[384, "compas_timber.elements.Fastener.from_json", false]], "from_json() (compas_timber.elements.fastenertimberinterface class method)": [[396, "compas_timber.elements.FastenerTimberInterface.from_json", false]], "from_json() (compas_timber.elements.plate class method)": [[413, "compas_timber.elements.Plate.from_json", false]], "from_json() (compas_timber.elements.timberelement class method)": [[433, "compas_timber.elements.TimberElement.from_json", false]], "from_json() (compas_timber.elements.wall class method)": [[452, "compas_timber.elements.Wall.from_json", false]], "from_json() (compas_timber.fabrication.btlxprocessing class method)": [[471, "compas_timber.fabrication.BTLxProcessing.from_json", false]], "from_json() (compas_timber.fabrication.doublecut class method)": [[485, "compas_timber.fabrication.DoubleCut.from_json", false]], "from_json() (compas_timber.fabrication.dovetailmortise class method)": [[504, "compas_timber.fabrication.DovetailMortise.from_json", false]], "from_json() (compas_timber.fabrication.dovetailtenon class method)": [[519, "compas_timber.fabrication.DovetailTenon.from_json", false]], "from_json() (compas_timber.fabrication.drilling class method)": [[532, "compas_timber.fabrication.Drilling.from_json", false]], "from_json() (compas_timber.fabrication.frenchridgelap class method)": [[548, "compas_timber.fabrication.FrenchRidgeLap.from_json", false]], "from_json() (compas_timber.fabrication.jackraftercut class method)": [[560, "compas_timber.fabrication.JackRafterCut.from_json", false]], "from_json() (compas_timber.fabrication.lap class method)": [[574, "compas_timber.fabrication.Lap.from_json", false]], "from_json() (compas_timber.fabrication.mortise class method)": [[592, "compas_timber.fabrication.Mortise.from_json", false]], "from_json() (compas_timber.fabrication.slot class method)": [[605, "compas_timber.fabrication.Slot.from_json", false]], "from_json() (compas_timber.fabrication.stepjoint class method)": [[618, "compas_timber.fabrication.StepJoint.from_json", false]], "from_json() (compas_timber.fabrication.stepjointnotch class method)": [[633, "compas_timber.fabrication.StepJointNotch.from_json", false]], "from_json() (compas_timber.fabrication.tenon class method)": [[649, "compas_timber.fabrication.Tenon.from_json", false]], "from_json() (compas_timber.model.timbermodel class method)": [[681, "compas_timber.model.TimberModel.from_json", false]], "from_json() (compas_timber.planning.buildingplan class method)": [[715, "compas_timber.planning.BuildingPlan.from_json", false]], "from_json() (compas_timber.planning.instruction class method)": [[727, "compas_timber.planning.Instruction.from_json", false]], "from_json() (compas_timber.planning.lineardimension class method)": [[737, "compas_timber.planning.LinearDimension.from_json", false]], "from_json() (compas_timber.planning.model3d class method)": [[747, "compas_timber.planning.Model3d.from_json", false]], "from_json() (compas_timber.planning.step class method)": [[758, "compas_timber.planning.Step.from_json", false]], "from_json() (compas_timber.planning.text3d class method)": [[768, "compas_timber.planning.Text3d.from_json", false]], "from_jsonstring() (compas_timber.connections.ballnodejoint class method)": [[19, "compas_timber.connections.BallNodeJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.joint class method)": [[39, "compas_timber.connections.Joint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lapjoint class method)": [[132, "compas_timber.connections.LapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[58, "compas_timber.connections.LButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lfrenchridgelapjoint class method)": [[76, "compas_timber.connections.LFrenchRidgeLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.llapjoint class method)": [[95, "compas_timber.connections.LLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[114, "compas_timber.connections.LMiterJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.nulljoint class method)": [[151, "compas_timber.connections.NullJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tbirdsmouthjoint class method)": [[168, "compas_timber.connections.TBirdsmouthJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[185, "compas_timber.connections.TButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tdovetailjoint class method)": [[203, "compas_timber.connections.TDovetailJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tenonmortisejoint class method)": [[257, "compas_timber.connections.TenonMortiseJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tlapjoint class method)": [[220, "compas_timber.connections.TLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tstepjoint class method)": [[239, "compas_timber.connections.TStepJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.xlapjoint class method)": [[275, "compas_timber.connections.XLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.beam class method)": [[362, "compas_timber.elements.Beam.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.fastener class method)": [[385, "compas_timber.elements.Fastener.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.fastenertimberinterface class method)": [[397, "compas_timber.elements.FastenerTimberInterface.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.plate class method)": [[414, "compas_timber.elements.Plate.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.timberelement class method)": [[434, "compas_timber.elements.TimberElement.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.wall class method)": [[453, "compas_timber.elements.Wall.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.btlxprocessing class method)": [[472, "compas_timber.fabrication.BTLxProcessing.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.doublecut class method)": [[486, "compas_timber.fabrication.DoubleCut.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.dovetailmortise class method)": [[505, "compas_timber.fabrication.DovetailMortise.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.dovetailtenon class method)": [[520, "compas_timber.fabrication.DovetailTenon.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.drilling class method)": [[533, "compas_timber.fabrication.Drilling.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.frenchridgelap class method)": [[549, "compas_timber.fabrication.FrenchRidgeLap.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.jackraftercut class method)": [[561, "compas_timber.fabrication.JackRafterCut.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.lap class method)": [[575, "compas_timber.fabrication.Lap.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.mortise class method)": [[593, "compas_timber.fabrication.Mortise.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.slot class method)": [[606, "compas_timber.fabrication.Slot.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.stepjoint class method)": [[619, "compas_timber.fabrication.StepJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.stepjointnotch class method)": [[634, "compas_timber.fabrication.StepJointNotch.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.tenon class method)": [[650, "compas_timber.fabrication.Tenon.from_jsonstring", false]], "from_jsonstring() (compas_timber.model.timbermodel class method)": [[682, "compas_timber.model.TimberModel.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.buildingplan class method)": [[716, "compas_timber.planning.BuildingPlan.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.instruction class method)": [[728, "compas_timber.planning.Instruction.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.lineardimension class method)": [[738, "compas_timber.planning.LinearDimension.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.model3d class method)": [[748, "compas_timber.planning.Model3d.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.step class method)": [[759, "compas_timber.planning.Step.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.text3d class method)": [[769, "compas_timber.planning.Text3d.from_jsonstring", false]], "from_line_and_element() (compas_timber.fabrication.drilling class method)": [[534, "compas_timber.fabrication.Drilling.from_line_and_element", false]], "from_plane_and_beam() (compas_timber.fabrication.dovetailtenon class method)": [[521, "compas_timber.fabrication.DovetailTenon.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.jackraftercut class method)": [[562, "compas_timber.fabrication.JackRafterCut.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.lap class method)": [[576, "compas_timber.fabrication.Lap.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.slot class method)": [[607, "compas_timber.fabrication.Slot.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.stepjoint class method)": [[620, "compas_timber.fabrication.StepJoint.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.stepjointnotch class method)": [[635, "compas_timber.fabrication.StepJointNotch.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.tenon class method)": [[651, "compas_timber.fabrication.Tenon.from_plane_and_beam", false]], "from_planes_and_beam() (compas_timber.fabrication.doublecut class method)": [[487, "compas_timber.fabrication.DoubleCut.from_planes_and_beam", false]], "from_shapes_and_element() (compas_timber.fabrication.doublecut class method)": [[488, "compas_timber.fabrication.DoubleCut.from_shapes_and_element", false]], "from_shapes_and_element() (compas_timber.fabrication.drilling class method)": [[535, "compas_timber.fabrication.Drilling.from_shapes_and_element", false]], "from_shapes_and_element() (compas_timber.fabrication.jackraftercut class method)": [[563, "compas_timber.fabrication.JackRafterCut.from_shapes_and_element", false]], "generate_frame() (compas_timber.design.surfacemodel method)": [[324, "compas_timber.design.SurfaceModel.generate_frame", false]], "generate_perimeter_beams() (compas_timber.design.surfacemodel method)": [[325, "compas_timber.design.SurfaceModel.generate_perimeter_beams", false]], "generate_plates() (compas_timber.design.surfacemodel method)": [[326, "compas_timber.design.SurfaceModel.generate_plates", false]], "generate_stud_lines() (compas_timber.design.surfacemodel method)": [[327, "compas_timber.design.SurfaceModel.generate_stud_lines", false]], "generate_studs() (compas_timber.design.surfacemodel method)": [[328, "compas_timber.design.SurfaceModel.generate_studs", false]], "generate_windows() (compas_timber.design.surfacemodel method)": [[329, "compas_timber.design.SurfaceModel.generate_windows", false]], "get_beam_intersections() (compas_timber.design.surfacemodel method)": [[330, "compas_timber.design.SurfaceModel.get_beam_intersections", false]], "get_category_rules() (compas_timber.design.categoryrule static method)": [[289, "compas_timber.design.CategoryRule.get_category_rules", false]], "get_category_rules() (compas_timber.design.directrule static method)": [[303, "compas_timber.design.DirectRule.get_category_rules", false]], "get_category_rules() (compas_timber.design.jointrule static method)": [[315, "compas_timber.design.JointRule.get_category_rules", false]], "get_category_rules() (compas_timber.design.topologyrule static method)": [[340, "compas_timber.design.TopologyRule.get_category_rules", false]], "get_cross_cutting_frame() (compas_timber.connections.lapjoint method)": [[133, "compas_timber.connections.LapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.lfrenchridgelapjoint method)": [[77, "compas_timber.connections.LFrenchRidgeLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.llapjoint method)": [[96, "compas_timber.connections.LLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.tlapjoint method)": [[221, "compas_timber.connections.TLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.xlapjoint method)": [[276, "compas_timber.connections.XLapJoint.get_cross_cutting_frame", false]], "get_cutting_planes() (compas_timber.connections.lmiterjoint method)": [[115, "compas_timber.connections.LMiterJoint.get_cutting_planes", false]], "get_dimensions_relative_to_side() (compas_timber.elements.beam method)": [[363, "compas_timber.elements.Beam.get_dimensions_relative_to_side", false]], "get_direct_rules() (compas_timber.design.categoryrule static method)": [[290, "compas_timber.design.CategoryRule.get_direct_rules", false]], "get_direct_rules() (compas_timber.design.directrule static method)": [[304, "compas_timber.design.DirectRule.get_direct_rules", false]], "get_direct_rules() (compas_timber.design.jointrule static method)": [[316, "compas_timber.design.JointRule.get_direct_rules", false]], "get_direct_rules() (compas_timber.design.topologyrule static method)": [[341, "compas_timber.design.TopologyRule.get_direct_rules", false]], "get_elements_in_group() (compas_timber.model.timbermodel method)": [[683, "compas_timber.model.TimberModel.get_elements_in_group", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.ballnodejoint static method)": [[20, "compas_timber.connections.BallNodeJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.joint static method)": [[40, "compas_timber.connections.Joint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lapjoint static method)": [[134, "compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lbuttjoint static method)": [[59, "compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lfrenchridgelapjoint static method)": [[78, "compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.llapjoint static method)": [[97, "compas_timber.connections.LLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lmiterjoint static method)": [[116, "compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.nulljoint static method)": [[152, "compas_timber.connections.NullJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tbirdsmouthjoint static method)": [[169, "compas_timber.connections.TBirdsmouthJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tbuttjoint static method)": [[186, "compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tdovetailjoint static method)": [[204, "compas_timber.connections.TDovetailJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tenonmortisejoint static method)": [[258, "compas_timber.connections.TenonMortiseJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tlapjoint static method)": [[222, "compas_timber.connections.TLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tstepjoint static method)": [[240, "compas_timber.connections.TStepJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.xlapjoint static method)": [[277, "compas_timber.connections.XLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.ballnodejoint static method)": [[21, "compas_timber.connections.BallNodeJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.joint static method)": [[41, "compas_timber.connections.Joint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lapjoint static method)": [[135, "compas_timber.connections.LapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lbuttjoint static method)": [[60, "compas_timber.connections.LButtJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lfrenchridgelapjoint static method)": [[79, "compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.llapjoint static method)": [[98, "compas_timber.connections.LLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lmiterjoint static method)": [[117, "compas_timber.connections.LMiterJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.nulljoint static method)": [[153, "compas_timber.connections.NullJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tbirdsmouthjoint static method)": [[170, "compas_timber.connections.TBirdsmouthJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tbuttjoint static method)": [[187, "compas_timber.connections.TButtJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tdovetailjoint static method)": [[205, "compas_timber.connections.TDovetailJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tenonmortisejoint static method)": [[259, "compas_timber.connections.TenonMortiseJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tlapjoint static method)": [[223, "compas_timber.connections.TLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tstepjoint static method)": [[241, "compas_timber.connections.TStepJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.xlapjoint static method)": [[278, "compas_timber.connections.XLapJoint.get_face_most_towards_beam", false]], "get_features() (compas_timber.elements.fastenertimberinterface method)": [[398, "compas_timber.elements.FastenerTimberInterface.get_features", false]], "get_interior_segment_indices() (compas_timber.design.surfacemodel method)": [[331, "compas_timber.design.SurfaceModel.get_interior_segment_indices", false]], "get_leaf_subclasses() (in module compas_timber.ghpython)": [[660, "compas_timber.ghpython.get_leaf_subclasses", false]], "get_main_cutting_frame() (compas_timber.connections.lapjoint method)": [[136, "compas_timber.connections.LapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.lfrenchridgelapjoint method)": [[80, "compas_timber.connections.LFrenchRidgeLapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.llapjoint method)": [[99, "compas_timber.connections.LLapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.tlapjoint method)": [[224, "compas_timber.connections.TLapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.xlapjoint method)": [[279, "compas_timber.connections.XLapJoint.get_main_cutting_frame", false]], "get_name() (compas_timber.connections.jointtopology class method)": [[48, "compas_timber.connections.JointTopology.get_name", false]], "get_name() (compas_timber.planning.actor class method)": [[710, "compas_timber.planning.Actor.get_name", false]], "get_topology_rules() (compas_timber.design.categoryrule static method)": [[291, "compas_timber.design.CategoryRule.get_topology_rules", false]], "get_topology_rules() (compas_timber.design.directrule static method)": [[305, "compas_timber.design.DirectRule.get_topology_rules", false]], "get_topology_rules() (compas_timber.design.jointrule static method)": [[317, "compas_timber.design.JointRule.get_topology_rules", false]], "get_topology_rules() (compas_timber.design.topologyrule static method)": [[342, "compas_timber.design.TopologyRule.get_topology_rules", false]], "guess_joint_topology_2beams() (in module compas_timber.design)": [[344, "compas_timber.design.guess_joint_topology_2beams", false]], "has_element() (compas_timber.model.timbermodel method)": [[684, "compas_timber.model.TimberModel.has_element", false]], "has_group() (compas_timber.model.timbermodel method)": [[685, "compas_timber.model.TimberModel.has_group", false]], "has_interaction() (compas_timber.model.timbermodel method)": [[686, "compas_timber.model.TimberModel.has_interaction", false]], "has_material() (compas_timber.model.timbermodel method)": [[687, "compas_timber.model.TimberModel.has_material", false]], "instruction (class in compas_timber.planning)": [[724, "compas_timber.planning.Instruction", false]], "interactions() (compas_timber.model.timbermodel method)": [[688, "compas_timber.model.TimberModel.interactions", false]], "is_identical() (compas_timber.design.jointdefinition method)": [[311, "compas_timber.design.JointDefinition.is_identical", false]], "item_input_valid() (in module compas_timber.ghpython)": [[661, "compas_timber.ghpython.item_input_valid", false]], "jackraftercut (class in compas_timber.fabrication)": [[555, "compas_timber.fabrication.JackRafterCut", false]], "joint (class in compas_timber.connections)": [[30, "compas_timber.connections.Joint", false]], "jointdefinition (class in compas_timber.design)": [[309, "compas_timber.design.JointDefinition", false]], "jointrule (class in compas_timber.design)": [[313, "compas_timber.design.JointRule", false]], "joints_from_beams_and_rules() (compas_timber.design.categoryrule static method)": [[292, "compas_timber.design.CategoryRule.joints_from_beams_and_rules", false]], "joints_from_beams_and_rules() (compas_timber.design.directrule static method)": [[306, "compas_timber.design.DirectRule.joints_from_beams_and_rules", false]], "joints_from_beams_and_rules() (compas_timber.design.jointrule static method)": [[318, "compas_timber.design.JointRule.joints_from_beams_and_rules", false]], "joints_from_beams_and_rules() (compas_timber.design.topologyrule static method)": [[343, "compas_timber.design.TopologyRule.joints_from_beams_and_rules", false]], "jointtopology (class in compas_timber.connections)": [[47, "compas_timber.connections.JointTopology", false]], "lap (class in compas_timber.fabrication)": [[569, "compas_timber.fabrication.Lap", false]], "lap_volume_from_params_and_beam() (compas_timber.fabrication.frenchridgelap method)": [[550, "compas_timber.fabrication.FrenchRidgeLap.lap_volume_from_params_and_beam", false]], "lapjoint (class in compas_timber.connections)": [[123, "compas_timber.connections.LapJoint", false]], "lbuttjoint (class in compas_timber.connections)": [[49, "compas_timber.connections.LButtJoint", false]], "lfrenchridgelapjoint (class in compas_timber.connections)": [[67, "compas_timber.connections.LFrenchRidgeLapJoint", false]], "limitationtoptype (class in compas_timber.fabrication)": [[583, "compas_timber.fabrication.LimitationTopType", false]], "lineardimension (class in compas_timber.planning)": [[734, "compas_timber.planning.LinearDimension", false]], "list_input_valid() (in module compas_timber.ghpython)": [[662, "compas_timber.ghpython.list_input_valid", false]], "llapjoint (class in compas_timber.connections)": [[86, "compas_timber.connections.LLapJoint", false]], "lmiterjoint (class in compas_timber.connections)": [[105, "compas_timber.connections.LMiterJoint", false]], "machininglimits (class in compas_timber.fabrication)": [[584, "compas_timber.fabrication.MachiningLimits", false]], "manage_dynamic_params() (in module compas_timber.ghpython)": [[663, "compas_timber.ghpython.manage_dynamic_params", false]], "match() (compas_timber.design.jointdefinition method)": [[312, "compas_timber.design.JointDefinition.match", false]], "materials() (compas_timber.model.timbermodel method)": [[689, "compas_timber.model.TimberModel.materials", false]], "model3d (class in compas_timber.planning)": [[744, "compas_timber.planning.Model3d", false]], "model_to_xml() (compas_timber.fabrication.btlxwriter method)": [[478, "compas_timber.fabrication.BTLxWriter.model_to_xml", false]], "mortise (class in compas_timber.fabrication)": [[585, "compas_timber.fabrication.Mortise", false]], "mortise_volume_from_params_and_beam() (compas_timber.fabrication.stepjointnotch method)": [[636, "compas_timber.fabrication.StepJointNotch.mortise_volume_from_params_and_beam", false]], "nulljoint (class in compas_timber.connections)": [[142, "compas_timber.connections.NullJoint", false]], "offset_elements() (compas_timber.design.surfacemodel method)": [[332, "compas_timber.design.SurfaceModel.offset_elements", false]], "opposing_side_index() (compas_timber.elements.beam method)": [[364, "compas_timber.elements.Beam.opposing_side_index", false]], "orientationtype (class in compas_timber.fabrication)": [[599, "compas_timber.fabrication.OrientationType", false]], "parse() (compas_timber.planning.buildingplanparser class method)": [[722, "compas_timber.planning.BuildingPlanParser.parse", false]], "parse_loops() (compas_timber.design.surfacemodel method)": [[333, "compas_timber.design.SurfaceModel.parse_loops", false]], "plane_from_params_and_beam() (compas_timber.fabrication.jackraftercut method)": [[564, "compas_timber.fabrication.JackRafterCut.plane_from_params_and_beam", false]], "planes_from_params_and_beam() (compas_timber.fabrication.doublecut method)": [[489, "compas_timber.fabrication.DoubleCut.planes_from_params_and_beam", false]], "planes_from_params_and_beam() (compas_timber.fabrication.lap method)": [[577, "compas_timber.fabrication.Lap.planes_from_params_and_beam", false]], "planes_from_params_and_beam() (compas_timber.fabrication.stepjoint method)": [[621, "compas_timber.fabrication.StepJoint.planes_from_params_and_beam", false]], "planes_from_params_and_beam() (compas_timber.fabrication.stepjointnotch method)": [[637, "compas_timber.fabrication.StepJointNotch.planes_from_params_and_beam", false]], "plate (class in compas_timber.elements)": [[403, "compas_timber.elements.Plate", false]], "process_joinery() (compas_timber.model.timbermodel method)": [[690, "compas_timber.model.TimberModel.process_joinery", false]], "ref_side_from_face() (compas_timber.fabrication.btlxpart method)": [[466, "compas_timber.fabrication.BTLxPart.ref_side_from_face", false]], "remove_blank_extension() (compas_timber.elements.beam method)": [[365, "compas_timber.elements.Beam.remove_blank_extension", false]], "remove_element() (compas_timber.model.timbermodel method)": [[691, "compas_timber.model.TimberModel.remove_element", false]], "remove_features() (compas_timber.elements.beam method)": [[366, "compas_timber.elements.Beam.remove_features", false]], "remove_features() (compas_timber.elements.plate method)": [[415, "compas_timber.elements.Plate.remove_features", false]], "remove_interaction() (compas_timber.model.timbermodel method)": [[692, "compas_timber.model.TimberModel.remove_interaction", false]], "remove_joint() (compas_timber.model.timbermodel method)": [[693, "compas_timber.model.TimberModel.remove_joint", false]], "rename_gh_input() (in module compas_timber.ghpython)": [[664, "compas_timber.ghpython.rename_gh_input", false]], "reorder() (compas_timber.design.categoryrule method)": [[293, "compas_timber.design.CategoryRule.reorder", false]], "reset() (compas_timber.elements.beam method)": [[367, "compas_timber.elements.Beam.reset", false]], "reset() (compas_timber.elements.fastener method)": [[386, "compas_timber.elements.Fastener.reset", false]], "reset() (compas_timber.elements.plate method)": [[416, "compas_timber.elements.Plate.reset", false]], "reset() (compas_timber.elements.timberelement method)": [[435, "compas_timber.elements.TimberElement.reset", false]], "reset() (compas_timber.elements.wall method)": [[454, "compas_timber.elements.Wall.reset", false]], "restore_beams_from_keys() (compas_timber.connections.ballnodejoint method)": [[22, "compas_timber.connections.BallNodeJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[42, "compas_timber.connections.Joint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lapjoint method)": [[137, "compas_timber.connections.LapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[61, "compas_timber.connections.LButtJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lfrenchridgelapjoint method)": [[81, "compas_timber.connections.LFrenchRidgeLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.llapjoint method)": [[100, "compas_timber.connections.LLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[118, "compas_timber.connections.LMiterJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.nulljoint method)": [[154, "compas_timber.connections.NullJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tbirdsmouthjoint method)": [[171, "compas_timber.connections.TBirdsmouthJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[188, "compas_timber.connections.TButtJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tdovetailjoint method)": [[206, "compas_timber.connections.TDovetailJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tenonmortisejoint method)": [[260, "compas_timber.connections.TenonMortiseJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tlapjoint method)": [[225, "compas_timber.connections.TLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tstepjoint method)": [[242, "compas_timber.connections.TStepJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.xlapjoint method)": [[280, "compas_timber.connections.XLapJoint.restore_beams_from_keys", false]], "rotate() (compas_timber.model.timbermodel method)": [[694, "compas_timber.model.TimberModel.rotate", false]], "rotated() (compas_timber.model.timbermodel method)": [[695, "compas_timber.model.TimberModel.rotated", false]], "scale() (compas_timber.model.timbermodel method)": [[696, "compas_timber.model.TimberModel.scale", false]], "scaled() (compas_timber.model.timbermodel method)": [[697, "compas_timber.model.TimberModel.scaled", false]], "serialize() (compas_timber.planning.buildingplanparser class method)": [[723, "compas_timber.planning.BuildingPlanParser.serialize", false]], "set_default_joints() (in module compas_timber.design)": [[345, "compas_timber.design.set_default_joints", false]], "set_default_values() (compas_timber.connections.tenonmortisejoint method)": [[261, "compas_timber.connections.TenonMortiseJoint.set_default_values", false]], "set_frame_and_outline() (compas_timber.elements.plate method)": [[417, "compas_timber.elements.Plate.set_frame_and_outline", false]], "set_step_depths() (compas_timber.connections.tstepjoint method)": [[243, "compas_timber.connections.TStepJoint.set_step_depths", false]], "set_topologies() (compas_timber.model.timbermodel method)": [[698, "compas_timber.model.TimberModel.set_topologies", false]], "sha256() (compas_timber.connections.ballnodejoint method)": [[23, "compas_timber.connections.BallNodeJoint.sha256", false]], "sha256() (compas_timber.connections.joint method)": [[43, "compas_timber.connections.Joint.sha256", false]], "sha256() (compas_timber.connections.lapjoint method)": [[138, "compas_timber.connections.LapJoint.sha256", false]], "sha256() (compas_timber.connections.lbuttjoint method)": [[62, "compas_timber.connections.LButtJoint.sha256", false]], "sha256() (compas_timber.connections.lfrenchridgelapjoint method)": [[82, "compas_timber.connections.LFrenchRidgeLapJoint.sha256", false]], "sha256() (compas_timber.connections.llapjoint method)": [[101, "compas_timber.connections.LLapJoint.sha256", false]], "sha256() (compas_timber.connections.lmiterjoint method)": [[119, "compas_timber.connections.LMiterJoint.sha256", false]], "sha256() (compas_timber.connections.nulljoint method)": [[155, "compas_timber.connections.NullJoint.sha256", false]], "sha256() (compas_timber.connections.tbirdsmouthjoint method)": [[172, "compas_timber.connections.TBirdsmouthJoint.sha256", false]], "sha256() (compas_timber.connections.tbuttjoint method)": [[189, "compas_timber.connections.TButtJoint.sha256", false]], "sha256() (compas_timber.connections.tdovetailjoint method)": [[207, "compas_timber.connections.TDovetailJoint.sha256", false]], "sha256() (compas_timber.connections.tenonmortisejoint method)": [[262, "compas_timber.connections.TenonMortiseJoint.sha256", false]], "sha256() (compas_timber.connections.tlapjoint method)": [[226, "compas_timber.connections.TLapJoint.sha256", false]], "sha256() (compas_timber.connections.tstepjoint method)": [[244, "compas_timber.connections.TStepJoint.sha256", false]], "sha256() (compas_timber.connections.xlapjoint method)": [[281, "compas_timber.connections.XLapJoint.sha256", false]], "sha256() (compas_timber.elements.beam method)": [[368, "compas_timber.elements.Beam.sha256", false]], "sha256() (compas_timber.elements.fastener method)": [[387, "compas_timber.elements.Fastener.sha256", false]], "sha256() (compas_timber.elements.fastenertimberinterface method)": [[399, "compas_timber.elements.FastenerTimberInterface.sha256", false]], "sha256() (compas_timber.elements.plate method)": [[418, "compas_timber.elements.Plate.sha256", false]], "sha256() (compas_timber.elements.timberelement method)": [[436, "compas_timber.elements.TimberElement.sha256", false]], "sha256() (compas_timber.elements.wall method)": [[455, "compas_timber.elements.Wall.sha256", false]], "sha256() (compas_timber.fabrication.btlxprocessing method)": [[473, "compas_timber.fabrication.BTLxProcessing.sha256", false]], "sha256() (compas_timber.fabrication.doublecut method)": [[490, "compas_timber.fabrication.DoubleCut.sha256", false]], "sha256() (compas_timber.fabrication.dovetailmortise method)": [[506, "compas_timber.fabrication.DovetailMortise.sha256", false]], "sha256() (compas_timber.fabrication.dovetailtenon method)": [[522, "compas_timber.fabrication.DovetailTenon.sha256", false]], "sha256() (compas_timber.fabrication.drilling method)": [[536, "compas_timber.fabrication.Drilling.sha256", false]], "sha256() (compas_timber.fabrication.frenchridgelap method)": [[551, "compas_timber.fabrication.FrenchRidgeLap.sha256", false]], "sha256() (compas_timber.fabrication.jackraftercut method)": [[565, "compas_timber.fabrication.JackRafterCut.sha256", false]], "sha256() (compas_timber.fabrication.lap method)": [[578, "compas_timber.fabrication.Lap.sha256", false]], "sha256() (compas_timber.fabrication.mortise method)": [[594, "compas_timber.fabrication.Mortise.sha256", false]], "sha256() (compas_timber.fabrication.slot method)": [[608, "compas_timber.fabrication.Slot.sha256", false]], "sha256() (compas_timber.fabrication.stepjoint method)": [[622, "compas_timber.fabrication.StepJoint.sha256", false]], "sha256() (compas_timber.fabrication.stepjointnotch method)": [[638, "compas_timber.fabrication.StepJointNotch.sha256", false]], "sha256() (compas_timber.fabrication.tenon method)": [[652, "compas_timber.fabrication.Tenon.sha256", false]], "sha256() (compas_timber.model.timbermodel method)": [[699, "compas_timber.model.TimberModel.sha256", false]], "sha256() (compas_timber.planning.buildingplan method)": [[717, "compas_timber.planning.BuildingPlan.sha256", false]], "sha256() (compas_timber.planning.instruction method)": [[729, "compas_timber.planning.Instruction.sha256", false]], "sha256() (compas_timber.planning.lineardimension method)": [[739, "compas_timber.planning.LinearDimension.sha256", false]], "sha256() (compas_timber.planning.model3d method)": [[749, "compas_timber.planning.Model3d.sha256", false]], "sha256() (compas_timber.planning.step method)": [[760, "compas_timber.planning.Step.sha256", false]], "sha256() (compas_timber.planning.text3d method)": [[770, "compas_timber.planning.Text3d.sha256", false]], "side_as_surface() (compas_timber.elements.beam method)": [[369, "compas_timber.elements.Beam.side_as_surface", false]], "simplesequencegenerator (class in compas_timber.planning)": [[754, "compas_timber.planning.SimpleSequenceGenerator", false]], "slot (class in compas_timber.fabrication)": [[600, "compas_timber.fabrication.Slot", false]], "step (class in compas_timber.planning)": [[755, "compas_timber.planning.Step", false]], "stepjoint (class in compas_timber.fabrication)": [[612, "compas_timber.fabrication.StepJoint", false]], "stepjointnotch (class in compas_timber.fabrication)": [[627, "compas_timber.fabrication.StepJointNotch", false]], "stepshapetype (class in compas_timber.fabrication)": [[642, "compas_timber.fabrication.StepShapeType", false]], "surfacemodel (class in compas_timber.design)": [[319, "compas_timber.design.SurfaceModel", false]], "tbirdsmouthjoint (class in compas_timber.connections)": [[159, "compas_timber.connections.TBirdsmouthJoint", false]], "tbuttjoint (class in compas_timber.connections)": [[176, "compas_timber.connections.TButtJoint", false]], "tdovetailjoint (class in compas_timber.connections)": [[193, "compas_timber.connections.TDovetailJoint", false]], "tenon (class in compas_timber.fabrication)": [[643, "compas_timber.fabrication.Tenon", false]], "tenon_volume_from_params_and_beam() (compas_timber.fabrication.stepjoint method)": [[623, "compas_timber.fabrication.StepJoint.tenon_volume_from_params_and_beam", false]], "tenonmortisejoint (class in compas_timber.connections)": [[248, "compas_timber.connections.TenonMortiseJoint", false]], "tenonshapetype (class in compas_timber.fabrication)": [[657, "compas_timber.fabrication.TenonShapeType", false]], "text3d (class in compas_timber.planning)": [[765, "compas_timber.planning.Text3d", false]], "timberelement (class in compas_timber.elements)": [[424, "compas_timber.elements.TimberElement", false]], "timbermodel (class in compas_timber.model)": [[665, "compas_timber.model.TimberModel", false]], "tlapjoint (class in compas_timber.connections)": [[211, "compas_timber.connections.TLapJoint", false]], "to_json() (compas_timber.connections.ballnodejoint method)": [[24, "compas_timber.connections.BallNodeJoint.to_json", false]], "to_json() (compas_timber.connections.joint method)": [[44, "compas_timber.connections.Joint.to_json", false]], "to_json() (compas_timber.connections.lapjoint method)": [[139, "compas_timber.connections.LapJoint.to_json", false]], "to_json() (compas_timber.connections.lbuttjoint method)": [[63, "compas_timber.connections.LButtJoint.to_json", false]], "to_json() (compas_timber.connections.lfrenchridgelapjoint method)": [[83, "compas_timber.connections.LFrenchRidgeLapJoint.to_json", false]], "to_json() (compas_timber.connections.llapjoint method)": [[102, "compas_timber.connections.LLapJoint.to_json", false]], "to_json() (compas_timber.connections.lmiterjoint method)": [[120, "compas_timber.connections.LMiterJoint.to_json", false]], "to_json() (compas_timber.connections.nulljoint method)": [[156, "compas_timber.connections.NullJoint.to_json", false]], "to_json() (compas_timber.connections.tbirdsmouthjoint method)": [[173, "compas_timber.connections.TBirdsmouthJoint.to_json", false]], "to_json() (compas_timber.connections.tbuttjoint method)": [[190, "compas_timber.connections.TButtJoint.to_json", false]], "to_json() (compas_timber.connections.tdovetailjoint method)": [[208, "compas_timber.connections.TDovetailJoint.to_json", false]], "to_json() (compas_timber.connections.tenonmortisejoint method)": [[263, "compas_timber.connections.TenonMortiseJoint.to_json", false]], "to_json() (compas_timber.connections.tlapjoint method)": [[227, "compas_timber.connections.TLapJoint.to_json", false]], "to_json() (compas_timber.connections.tstepjoint method)": [[245, "compas_timber.connections.TStepJoint.to_json", false]], "to_json() (compas_timber.connections.xlapjoint method)": [[282, "compas_timber.connections.XLapJoint.to_json", false]], "to_json() (compas_timber.elements.beam method)": [[370, "compas_timber.elements.Beam.to_json", false]], "to_json() (compas_timber.elements.fastener method)": [[388, "compas_timber.elements.Fastener.to_json", false]], "to_json() (compas_timber.elements.fastenertimberinterface method)": [[400, "compas_timber.elements.FastenerTimberInterface.to_json", false]], "to_json() (compas_timber.elements.plate method)": [[419, "compas_timber.elements.Plate.to_json", false]], "to_json() (compas_timber.elements.timberelement method)": [[437, "compas_timber.elements.TimberElement.to_json", false]], "to_json() (compas_timber.elements.wall method)": [[456, "compas_timber.elements.Wall.to_json", false]], "to_json() (compas_timber.fabrication.btlxprocessing method)": [[474, "compas_timber.fabrication.BTLxProcessing.to_json", false]], "to_json() (compas_timber.fabrication.doublecut method)": [[491, "compas_timber.fabrication.DoubleCut.to_json", false]], "to_json() (compas_timber.fabrication.dovetailmortise method)": [[507, "compas_timber.fabrication.DovetailMortise.to_json", false]], "to_json() (compas_timber.fabrication.dovetailtenon method)": [[523, "compas_timber.fabrication.DovetailTenon.to_json", false]], "to_json() (compas_timber.fabrication.drilling method)": [[537, "compas_timber.fabrication.Drilling.to_json", false]], "to_json() (compas_timber.fabrication.frenchridgelap method)": [[552, "compas_timber.fabrication.FrenchRidgeLap.to_json", false]], "to_json() (compas_timber.fabrication.jackraftercut method)": [[566, "compas_timber.fabrication.JackRafterCut.to_json", false]], "to_json() (compas_timber.fabrication.lap method)": [[579, "compas_timber.fabrication.Lap.to_json", false]], "to_json() (compas_timber.fabrication.mortise method)": [[595, "compas_timber.fabrication.Mortise.to_json", false]], "to_json() (compas_timber.fabrication.slot method)": [[609, "compas_timber.fabrication.Slot.to_json", false]], "to_json() (compas_timber.fabrication.stepjoint method)": [[624, "compas_timber.fabrication.StepJoint.to_json", false]], "to_json() (compas_timber.fabrication.stepjointnotch method)": [[639, "compas_timber.fabrication.StepJointNotch.to_json", false]], "to_json() (compas_timber.fabrication.tenon method)": [[653, "compas_timber.fabrication.Tenon.to_json", false]], "to_json() (compas_timber.model.timbermodel method)": [[700, "compas_timber.model.TimberModel.to_json", false]], "to_json() (compas_timber.planning.buildingplan method)": [[718, "compas_timber.planning.BuildingPlan.to_json", false]], "to_json() (compas_timber.planning.instruction method)": [[730, "compas_timber.planning.Instruction.to_json", false]], "to_json() (compas_timber.planning.lineardimension method)": [[740, "compas_timber.planning.LinearDimension.to_json", false]], "to_json() (compas_timber.planning.model3d method)": [[750, "compas_timber.planning.Model3d.to_json", false]], "to_json() (compas_timber.planning.step method)": [[761, "compas_timber.planning.Step.to_json", false]], "to_json() (compas_timber.planning.text3d method)": [[771, "compas_timber.planning.Text3d.to_json", false]], "to_jsonstring() (compas_timber.connections.ballnodejoint method)": [[25, "compas_timber.connections.BallNodeJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.joint method)": [[45, "compas_timber.connections.Joint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lapjoint method)": [[140, "compas_timber.connections.LapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lbuttjoint method)": [[64, "compas_timber.connections.LButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lfrenchridgelapjoint method)": [[84, "compas_timber.connections.LFrenchRidgeLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.llapjoint method)": [[103, "compas_timber.connections.LLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lmiterjoint method)": [[121, "compas_timber.connections.LMiterJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.nulljoint method)": [[157, "compas_timber.connections.NullJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tbirdsmouthjoint method)": [[174, "compas_timber.connections.TBirdsmouthJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tbuttjoint method)": [[191, "compas_timber.connections.TButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tdovetailjoint method)": [[209, "compas_timber.connections.TDovetailJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tenonmortisejoint method)": [[264, "compas_timber.connections.TenonMortiseJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tlapjoint method)": [[228, "compas_timber.connections.TLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tstepjoint method)": [[246, "compas_timber.connections.TStepJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.xlapjoint method)": [[283, "compas_timber.connections.XLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.beam method)": [[371, "compas_timber.elements.Beam.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.fastener method)": [[389, "compas_timber.elements.Fastener.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.fastenertimberinterface method)": [[401, "compas_timber.elements.FastenerTimberInterface.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.plate method)": [[420, "compas_timber.elements.Plate.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.timberelement method)": [[438, "compas_timber.elements.TimberElement.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.wall method)": [[457, "compas_timber.elements.Wall.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.btlxprocessing method)": [[475, "compas_timber.fabrication.BTLxProcessing.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.doublecut method)": [[492, "compas_timber.fabrication.DoubleCut.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.dovetailmortise method)": [[508, "compas_timber.fabrication.DovetailMortise.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.dovetailtenon method)": [[524, "compas_timber.fabrication.DovetailTenon.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.drilling method)": [[538, "compas_timber.fabrication.Drilling.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.frenchridgelap method)": [[553, "compas_timber.fabrication.FrenchRidgeLap.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.jackraftercut method)": [[567, "compas_timber.fabrication.JackRafterCut.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.lap method)": [[580, "compas_timber.fabrication.Lap.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.mortise method)": [[596, "compas_timber.fabrication.Mortise.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.slot method)": [[610, "compas_timber.fabrication.Slot.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.stepjoint method)": [[625, "compas_timber.fabrication.StepJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.stepjointnotch method)": [[640, "compas_timber.fabrication.StepJointNotch.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.tenon method)": [[654, "compas_timber.fabrication.Tenon.to_jsonstring", false]], "to_jsonstring() (compas_timber.model.timbermodel method)": [[701, "compas_timber.model.TimberModel.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.buildingplan method)": [[719, "compas_timber.planning.BuildingPlan.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.instruction method)": [[731, "compas_timber.planning.Instruction.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.lineardimension method)": [[741, "compas_timber.planning.LinearDimension.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.model3d method)": [[751, "compas_timber.planning.Model3d.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.step method)": [[762, "compas_timber.planning.Step.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.text3d method)": [[772, "compas_timber.planning.Text3d.to_jsonstring", false]], "topologyrule (class in compas_timber.design)": [[337, "compas_timber.design.TopologyRule", false]], "tostring() (compas_timber.connections.ballnodejoint method)": [[11, "compas_timber.connections.BallNodeJoint.ToString", false]], "tostring() (compas_timber.connections.joint method)": [[31, "compas_timber.connections.Joint.ToString", false]], "tostring() (compas_timber.connections.lapjoint method)": [[124, "compas_timber.connections.LapJoint.ToString", false]], "tostring() (compas_timber.connections.lbuttjoint method)": [[50, "compas_timber.connections.LButtJoint.ToString", false]], "tostring() (compas_timber.connections.lfrenchridgelapjoint method)": [[68, "compas_timber.connections.LFrenchRidgeLapJoint.ToString", false]], "tostring() (compas_timber.connections.llapjoint method)": [[87, "compas_timber.connections.LLapJoint.ToString", false]], "tostring() (compas_timber.connections.lmiterjoint method)": [[106, "compas_timber.connections.LMiterJoint.ToString", false]], "tostring() (compas_timber.connections.nulljoint method)": [[143, "compas_timber.connections.NullJoint.ToString", false]], "tostring() (compas_timber.connections.tbirdsmouthjoint method)": [[160, "compas_timber.connections.TBirdsmouthJoint.ToString", false]], "tostring() (compas_timber.connections.tbuttjoint method)": [[177, "compas_timber.connections.TButtJoint.ToString", false]], "tostring() (compas_timber.connections.tdovetailjoint method)": [[194, "compas_timber.connections.TDovetailJoint.ToString", false]], "tostring() (compas_timber.connections.tenonmortisejoint method)": [[249, "compas_timber.connections.TenonMortiseJoint.ToString", false]], "tostring() (compas_timber.connections.tlapjoint method)": [[212, "compas_timber.connections.TLapJoint.ToString", false]], "tostring() (compas_timber.connections.tstepjoint method)": [[231, "compas_timber.connections.TStepJoint.ToString", false]], "tostring() (compas_timber.connections.xlapjoint method)": [[267, "compas_timber.connections.XLapJoint.ToString", false]], "tostring() (compas_timber.design.categoryrule method)": [[287, "compas_timber.design.CategoryRule.ToString", false]], "tostring() (compas_timber.design.debuginfomation method)": [[295, "compas_timber.design.DebugInfomation.ToString", false]], "tostring() (compas_timber.design.directrule method)": [[300, "compas_timber.design.DirectRule.ToString", false]], "tostring() (compas_timber.design.featuredefinition method)": [[308, "compas_timber.design.FeatureDefinition.ToString", false]], "tostring() (compas_timber.design.jointdefinition method)": [[310, "compas_timber.design.JointDefinition.ToString", false]], "tostring() (compas_timber.design.topologyrule method)": [[338, "compas_timber.design.TopologyRule.ToString", false]], "tostring() (compas_timber.elements.beam method)": [[347, "compas_timber.elements.Beam.ToString", false]], "tostring() (compas_timber.elements.fastener method)": [[376, "compas_timber.elements.Fastener.ToString", false]], "tostring() (compas_timber.elements.fastenertimberinterface method)": [[394, "compas_timber.elements.FastenerTimberInterface.ToString", false]], "tostring() (compas_timber.elements.plate method)": [[404, "compas_timber.elements.Plate.ToString", false]], "tostring() (compas_timber.elements.timberelement method)": [[425, "compas_timber.elements.TimberElement.ToString", false]], "tostring() (compas_timber.elements.wall method)": [[443, "compas_timber.elements.Wall.ToString", false]], "tostring() (compas_timber.fabrication.btlxprocessing method)": [[468, "compas_timber.fabrication.BTLxProcessing.ToString", false]], "tostring() (compas_timber.fabrication.doublecut method)": [[481, "compas_timber.fabrication.DoubleCut.ToString", false]], "tostring() (compas_timber.fabrication.dovetailmortise method)": [[495, "compas_timber.fabrication.DovetailMortise.ToString", false]], "tostring() (compas_timber.fabrication.dovetailtenon method)": [[511, "compas_timber.fabrication.DovetailTenon.ToString", false]], "tostring() (compas_timber.fabrication.drilling method)": [[527, "compas_timber.fabrication.Drilling.ToString", false]], "tostring() (compas_timber.fabrication.frenchridgelap method)": [[542, "compas_timber.fabrication.FrenchRidgeLap.ToString", false]], "tostring() (compas_timber.fabrication.jackraftercut method)": [[556, "compas_timber.fabrication.JackRafterCut.ToString", false]], "tostring() (compas_timber.fabrication.lap method)": [[570, "compas_timber.fabrication.Lap.ToString", false]], "tostring() (compas_timber.fabrication.mortise method)": [[586, "compas_timber.fabrication.Mortise.ToString", false]], "tostring() (compas_timber.fabrication.slot method)": [[601, "compas_timber.fabrication.Slot.ToString", false]], "tostring() (compas_timber.fabrication.stepjoint method)": [[613, "compas_timber.fabrication.StepJoint.ToString", false]], "tostring() (compas_timber.fabrication.stepjointnotch method)": [[628, "compas_timber.fabrication.StepJointNotch.ToString", false]], "tostring() (compas_timber.fabrication.tenon method)": [[644, "compas_timber.fabrication.Tenon.ToString", false]], "tostring() (compas_timber.model.timbermodel method)": [[666, "compas_timber.model.TimberModel.ToString", false]], "tostring() (compas_timber.planning.buildingplan method)": [[712, "compas_timber.planning.BuildingPlan.ToString", false]], "tostring() (compas_timber.planning.instruction method)": [[725, "compas_timber.planning.Instruction.ToString", false]], "tostring() (compas_timber.planning.lineardimension method)": [[735, "compas_timber.planning.LinearDimension.ToString", false]], "tostring() (compas_timber.planning.model3d method)": [[745, "compas_timber.planning.Model3d.ToString", false]], "tostring() (compas_timber.planning.step method)": [[756, "compas_timber.planning.Step.ToString", false]], "tostring() (compas_timber.planning.text3d method)": [[766, "compas_timber.planning.Text3d.ToString", false]], "transform() (compas_timber.elements.beam method)": [[372, "compas_timber.elements.Beam.transform", false]], "transform() (compas_timber.elements.fastener method)": [[390, "compas_timber.elements.Fastener.transform", false]], "transform() (compas_timber.elements.plate method)": [[421, "compas_timber.elements.Plate.transform", false]], "transform() (compas_timber.elements.timberelement method)": [[439, "compas_timber.elements.TimberElement.transform", false]], "transform() (compas_timber.elements.wall method)": [[458, "compas_timber.elements.Wall.transform", false]], "transform() (compas_timber.model.timbermodel method)": [[702, "compas_timber.model.TimberModel.transform", false]], "transform() (compas_timber.planning.instruction method)": [[732, "compas_timber.planning.Instruction.transform", false]], "transform() (compas_timber.planning.lineardimension method)": [[742, "compas_timber.planning.LinearDimension.transform", false]], "transform() (compas_timber.planning.model3d method)": [[752, "compas_timber.planning.Model3d.transform", false]], "transform() (compas_timber.planning.step method)": [[763, "compas_timber.planning.Step.transform", false]], "transform() (compas_timber.planning.text3d method)": [[773, "compas_timber.planning.Text3d.transform", false]], "transform_numpy() (compas_timber.model.timbermodel method)": [[703, "compas_timber.model.TimberModel.transform_numpy", false]], "transformed() (compas_timber.elements.beam method)": [[373, "compas_timber.elements.Beam.transformed", false]], "transformed() (compas_timber.elements.fastener method)": [[391, "compas_timber.elements.Fastener.transformed", false]], "transformed() (compas_timber.elements.plate method)": [[422, "compas_timber.elements.Plate.transformed", false]], "transformed() (compas_timber.elements.timberelement method)": [[440, "compas_timber.elements.TimberElement.transformed", false]], "transformed() (compas_timber.elements.wall method)": [[459, "compas_timber.elements.Wall.transformed", false]], "transformed() (compas_timber.model.timbermodel method)": [[704, "compas_timber.model.TimberModel.transformed", false]], "transformed_numpy() (compas_timber.model.timbermodel method)": [[705, "compas_timber.model.TimberModel.transformed_numpy", false]], "translate() (compas_timber.model.timbermodel method)": [[706, "compas_timber.model.TimberModel.translate", false]], "translated() (compas_timber.model.timbermodel method)": [[707, "compas_timber.model.TimberModel.translated", false]], "trim_jack_studs() (compas_timber.design.surfacemodel method)": [[334, "compas_timber.design.SurfaceModel.trim_jack_studs", false]], "trim_king_studs() (compas_timber.design.surfacemodel method)": [[335, "compas_timber.design.SurfaceModel.trim_king_studs", false]], "trim_studs() (compas_timber.design.surfacemodel method)": [[336, "compas_timber.design.SurfaceModel.trim_studs", false]], "tstepjoint (class in compas_timber.connections)": [[230, "compas_timber.connections.TStepJoint", false]], "update_beam_roles() (compas_timber.connections.lbuttjoint method)": [[65, "compas_timber.connections.LButtJoint.update_beam_roles", false]], "validate_data() (compas_timber.connections.ballnodejoint class method)": [[26, "compas_timber.connections.BallNodeJoint.validate_data", false]], "validate_data() (compas_timber.connections.joint class method)": [[46, "compas_timber.connections.Joint.validate_data", false]], "validate_data() (compas_timber.connections.lapjoint class method)": [[141, "compas_timber.connections.LapJoint.validate_data", false]], "validate_data() (compas_timber.connections.lbuttjoint class method)": [[66, "compas_timber.connections.LButtJoint.validate_data", false]], "validate_data() (compas_timber.connections.lfrenchridgelapjoint class method)": [[85, "compas_timber.connections.LFrenchRidgeLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.llapjoint class method)": [[104, "compas_timber.connections.LLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.lmiterjoint class method)": [[122, "compas_timber.connections.LMiterJoint.validate_data", false]], "validate_data() (compas_timber.connections.nulljoint class method)": [[158, "compas_timber.connections.NullJoint.validate_data", false]], "validate_data() (compas_timber.connections.tbirdsmouthjoint class method)": [[175, "compas_timber.connections.TBirdsmouthJoint.validate_data", false]], "validate_data() (compas_timber.connections.tbuttjoint class method)": [[192, "compas_timber.connections.TButtJoint.validate_data", false]], "validate_data() (compas_timber.connections.tdovetailjoint class method)": [[210, "compas_timber.connections.TDovetailJoint.validate_data", false]], "validate_data() (compas_timber.connections.tenonmortisejoint class method)": [[265, "compas_timber.connections.TenonMortiseJoint.validate_data", false]], "validate_data() (compas_timber.connections.tlapjoint class method)": [[229, "compas_timber.connections.TLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.tstepjoint class method)": [[247, "compas_timber.connections.TStepJoint.validate_data", false]], "validate_data() (compas_timber.connections.xlapjoint class method)": [[284, "compas_timber.connections.XLapJoint.validate_data", false]], "validate_data() (compas_timber.elements.beam class method)": [[374, "compas_timber.elements.Beam.validate_data", false]], "validate_data() (compas_timber.elements.fastener class method)": [[392, "compas_timber.elements.Fastener.validate_data", false]], "validate_data() (compas_timber.elements.fastenertimberinterface class method)": [[402, "compas_timber.elements.FastenerTimberInterface.validate_data", false]], "validate_data() (compas_timber.elements.plate class method)": [[423, "compas_timber.elements.Plate.validate_data", false]], "validate_data() (compas_timber.elements.timberelement class method)": [[441, "compas_timber.elements.TimberElement.validate_data", false]], "validate_data() (compas_timber.elements.wall class method)": [[460, "compas_timber.elements.Wall.validate_data", false]], "validate_data() (compas_timber.fabrication.btlxprocessing class method)": [[476, "compas_timber.fabrication.BTLxProcessing.validate_data", false]], "validate_data() (compas_timber.fabrication.doublecut class method)": [[493, "compas_timber.fabrication.DoubleCut.validate_data", false]], "validate_data() (compas_timber.fabrication.dovetailmortise class method)": [[509, "compas_timber.fabrication.DovetailMortise.validate_data", false]], "validate_data() (compas_timber.fabrication.dovetailtenon class method)": [[525, "compas_timber.fabrication.DovetailTenon.validate_data", false]], "validate_data() (compas_timber.fabrication.drilling class method)": [[539, "compas_timber.fabrication.Drilling.validate_data", false]], "validate_data() (compas_timber.fabrication.frenchridgelap class method)": [[554, "compas_timber.fabrication.FrenchRidgeLap.validate_data", false]], "validate_data() (compas_timber.fabrication.jackraftercut class method)": [[568, "compas_timber.fabrication.JackRafterCut.validate_data", false]], "validate_data() (compas_timber.fabrication.lap class method)": [[581, "compas_timber.fabrication.Lap.validate_data", false]], "validate_data() (compas_timber.fabrication.mortise class method)": [[597, "compas_timber.fabrication.Mortise.validate_data", false]], "validate_data() (compas_timber.fabrication.slot class method)": [[611, "compas_timber.fabrication.Slot.validate_data", false]], "validate_data() (compas_timber.fabrication.stepjoint class method)": [[626, "compas_timber.fabrication.StepJoint.validate_data", false]], "validate_data() (compas_timber.fabrication.stepjointnotch class method)": [[641, "compas_timber.fabrication.StepJointNotch.validate_data", false]], "validate_data() (compas_timber.fabrication.tenon class method)": [[655, "compas_timber.fabrication.Tenon.validate_data", false]], "validate_data() (compas_timber.model.timbermodel class method)": [[708, "compas_timber.model.TimberModel.validate_data", false]], "validate_data() (compas_timber.planning.buildingplan class method)": [[720, "compas_timber.planning.BuildingPlan.validate_data", false]], "validate_data() (compas_timber.planning.instruction class method)": [[733, "compas_timber.planning.Instruction.validate_data", false]], "validate_data() (compas_timber.planning.lineardimension class method)": [[743, "compas_timber.planning.LinearDimension.validate_data", false]], "validate_data() (compas_timber.planning.model3d class method)": [[753, "compas_timber.planning.Model3d.validate_data", false]], "validate_data() (compas_timber.planning.step class method)": [[764, "compas_timber.planning.Step.validate_data", false]], "validate_data() (compas_timber.planning.text3d class method)": [[774, "compas_timber.planning.Text3d.validate_data", false]], "volume_from_params_and_beam() (compas_timber.fabrication.lap method)": [[582, "compas_timber.fabrication.Lap.volume_from_params_and_beam", false]], "volume_from_params_and_beam() (compas_timber.fabrication.mortise method)": [[598, "compas_timber.fabrication.Mortise.volume_from_params_and_beam", false]], "volume_from_params_and_beam() (compas_timber.fabrication.tenon method)": [[656, "compas_timber.fabrication.Tenon.volume_from_params_and_beam", false]], "wall (class in compas_timber.elements)": [[442, "compas_timber.elements.Wall", false]], "write() (compas_timber.fabrication.btlxwriter method)": [[479, "compas_timber.fabrication.BTLxWriter.write", false]], "xlapjoint (class in compas_timber.connections)": [[266, "compas_timber.connections.XLapJoint", false]]}, "objects": {"compas_timber.connections": [[10, 0, 1, "", "BallNodeJoint"], [27, 0, 1, "", "ConnectionSolver"], [30, 0, 1, "", "Joint"], [47, 0, 1, "", "JointTopology"], [49, 0, 1, "", "LButtJoint"], [67, 0, 1, "", "LFrenchRidgeLapJoint"], [86, 0, 1, "", "LLapJoint"], [105, 0, 1, "", "LMiterJoint"], [123, 0, 1, "", "LapJoint"], [142, 0, 1, "", "NullJoint"], [159, 0, 1, "", "TBirdsmouthJoint"], [176, 0, 1, "", "TButtJoint"], [193, 0, 1, "", "TDovetailJoint"], [211, 0, 1, "", "TLapJoint"], [230, 0, 1, "", "TStepJoint"], [248, 0, 1, "", "TenonMortiseJoint"], [266, 0, 1, "", "XLapJoint"], [285, 2, 1, "", "find_neighboring_beams"]], "compas_timber.connections.BallNodeJoint": [[11, 1, 1, "", "ToString"], [12, 1, 1, "", "add_extensions"], [13, 1, 1, "", "add_features"], [14, 1, 1, "", "check_elements_compatibility"], [15, 1, 1, "", "copy"], [16, 1, 1, "", "create"], [17, 1, 1, "", "element_count_complies"], [18, 1, 1, "", "from_json"], [19, 1, 1, "", "from_jsonstring"], [20, 1, 1, "", "get_face_most_ortho_to_beam"], [21, 1, 1, "", "get_face_most_towards_beam"], [22, 1, 1, "", "restore_beams_from_keys"], [23, 1, 1, "", "sha256"], [24, 1, 1, "", "to_json"], [25, 1, 1, "", "to_jsonstring"], [26, 1, 1, "", "validate_data"]], "compas_timber.connections.ConnectionSolver": [[28, 1, 1, "", "find_intersecting_pairs"], [29, 1, 1, "", "find_topology"]], "compas_timber.connections.Joint": [[31, 1, 1, "", "ToString"], [32, 1, 1, "", "add_extensions"], [33, 1, 1, "", "add_features"], [34, 1, 1, "", "check_elements_compatibility"], [35, 1, 1, "", "copy"], [36, 1, 1, "", "create"], [37, 1, 1, "", "element_count_complies"], [38, 1, 1, "", "from_json"], [39, 1, 1, "", "from_jsonstring"], [40, 1, 1, "", "get_face_most_ortho_to_beam"], [41, 1, 1, "", "get_face_most_towards_beam"], [42, 1, 1, "", "restore_beams_from_keys"], [43, 1, 1, "", "sha256"], [44, 1, 1, "", "to_json"], [45, 1, 1, "", "to_jsonstring"], [46, 1, 1, "", "validate_data"]], "compas_timber.connections.JointTopology": [[48, 1, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[50, 1, 1, "", "ToString"], [51, 1, 1, "", "add_extensions"], [52, 1, 1, "", "add_features"], [53, 1, 1, "", "check_elements_compatibility"], [54, 1, 1, "", "copy"], [55, 1, 1, "", "create"], [56, 1, 1, "", "element_count_complies"], [57, 1, 1, "", "from_json"], [58, 1, 1, "", "from_jsonstring"], [59, 1, 1, "", "get_face_most_ortho_to_beam"], [60, 1, 1, "", "get_face_most_towards_beam"], [61, 1, 1, "", "restore_beams_from_keys"], [62, 1, 1, "", "sha256"], [63, 1, 1, "", "to_json"], [64, 1, 1, "", "to_jsonstring"], [65, 1, 1, "", "update_beam_roles"], [66, 1, 1, "", "validate_data"]], "compas_timber.connections.LFrenchRidgeLapJoint": [[68, 1, 1, "", "ToString"], [69, 1, 1, "", "add_extensions"], [70, 1, 1, "", "add_features"], [71, 1, 1, "", "check_elements_compatibility"], [72, 1, 1, "", "copy"], [73, 1, 1, "", "create"], [74, 1, 1, "", "element_count_complies"], [75, 1, 1, "", "from_json"], [76, 1, 1, "", "from_jsonstring"], [77, 1, 1, "", "get_cross_cutting_frame"], [78, 1, 1, "", "get_face_most_ortho_to_beam"], [79, 1, 1, "", "get_face_most_towards_beam"], [80, 1, 1, "", "get_main_cutting_frame"], [81, 1, 1, "", "restore_beams_from_keys"], [82, 1, 1, "", "sha256"], [83, 1, 1, "", "to_json"], [84, 1, 1, "", "to_jsonstring"], [85, 1, 1, "", "validate_data"]], "compas_timber.connections.LLapJoint": [[87, 1, 1, "", "ToString"], [88, 1, 1, "", "add_extensions"], [89, 1, 1, "", "add_features"], [90, 1, 1, "", "check_elements_compatibility"], [91, 1, 1, "", "copy"], [92, 1, 1, "", "create"], [93, 1, 1, "", "element_count_complies"], [94, 1, 1, "", "from_json"], [95, 1, 1, "", "from_jsonstring"], [96, 1, 1, "", "get_cross_cutting_frame"], [97, 1, 1, "", "get_face_most_ortho_to_beam"], [98, 1, 1, "", "get_face_most_towards_beam"], [99, 1, 1, "", "get_main_cutting_frame"], [100, 1, 1, "", "restore_beams_from_keys"], [101, 1, 1, "", "sha256"], [102, 1, 1, "", "to_json"], [103, 1, 1, "", "to_jsonstring"], [104, 1, 1, "", "validate_data"]], "compas_timber.connections.LMiterJoint": [[106, 1, 1, "", "ToString"], [107, 1, 1, "", "add_extensions"], [108, 1, 1, "", "add_features"], [109, 1, 1, "", "check_elements_compatibility"], [110, 1, 1, "", "copy"], [111, 1, 1, "", "create"], [112, 1, 1, "", "element_count_complies"], [113, 1, 1, "", "from_json"], [114, 1, 1, "", "from_jsonstring"], [115, 1, 1, "", "get_cutting_planes"], [116, 1, 1, "", "get_face_most_ortho_to_beam"], [117, 1, 1, "", "get_face_most_towards_beam"], [118, 1, 1, "", "restore_beams_from_keys"], [119, 1, 1, "", "sha256"], [120, 1, 1, "", "to_json"], [121, 1, 1, "", "to_jsonstring"], [122, 1, 1, "", "validate_data"]], "compas_timber.connections.LapJoint": [[124, 1, 1, "", "ToString"], [125, 1, 1, "", "add_extensions"], [126, 1, 1, "", "add_features"], [127, 1, 1, "", "check_elements_compatibility"], [128, 1, 1, "", "copy"], [129, 1, 1, "", "create"], [130, 1, 1, "", "element_count_complies"], [131, 1, 1, "", "from_json"], [132, 1, 1, "", "from_jsonstring"], [133, 1, 1, "", "get_cross_cutting_frame"], [134, 1, 1, "", "get_face_most_ortho_to_beam"], [135, 1, 1, "", "get_face_most_towards_beam"], [136, 1, 1, "", "get_main_cutting_frame"], [137, 1, 1, "", "restore_beams_from_keys"], [138, 1, 1, "", "sha256"], [139, 1, 1, "", "to_json"], [140, 1, 1, "", "to_jsonstring"], [141, 1, 1, "", "validate_data"]], "compas_timber.connections.NullJoint": [[143, 1, 1, "", "ToString"], [144, 1, 1, "", "add_extensions"], [145, 1, 1, "", "add_features"], [146, 1, 1, "", "check_elements_compatibility"], [147, 1, 1, "", "copy"], [148, 1, 1, "", "create"], [149, 1, 1, "", "element_count_complies"], [150, 1, 1, "", "from_json"], [151, 1, 1, "", "from_jsonstring"], [152, 1, 1, "", "get_face_most_ortho_to_beam"], [153, 1, 1, "", "get_face_most_towards_beam"], [154, 1, 1, "", "restore_beams_from_keys"], [155, 1, 1, "", "sha256"], [156, 1, 1, "", "to_json"], [157, 1, 1, "", "to_jsonstring"], [158, 1, 1, "", "validate_data"]], "compas_timber.connections.TBirdsmouthJoint": [[160, 1, 1, "", "ToString"], [161, 1, 1, "", "add_extensions"], [162, 1, 1, "", "add_features"], [163, 1, 1, "", "check_elements_compatibility"], [164, 1, 1, "", "copy"], [165, 1, 1, "", "create"], [166, 1, 1, "", "element_count_complies"], [167, 1, 1, "", "from_json"], [168, 1, 1, "", "from_jsonstring"], [169, 1, 1, "", "get_face_most_ortho_to_beam"], [170, 1, 1, "", "get_face_most_towards_beam"], [171, 1, 1, "", "restore_beams_from_keys"], [172, 1, 1, "", "sha256"], [173, 1, 1, "", "to_json"], [174, 1, 1, "", "to_jsonstring"], [175, 1, 1, "", "validate_data"]], "compas_timber.connections.TButtJoint": [[177, 1, 1, "", "ToString"], [178, 1, 1, "", "add_extensions"], [179, 1, 1, "", "add_features"], [180, 1, 1, "", "check_elements_compatibility"], [181, 1, 1, "", "copy"], [182, 1, 1, "", "create"], [183, 1, 1, "", "element_count_complies"], [184, 1, 1, "", "from_json"], [185, 1, 1, "", "from_jsonstring"], [186, 1, 1, "", "get_face_most_ortho_to_beam"], [187, 1, 1, "", "get_face_most_towards_beam"], [188, 1, 1, "", "restore_beams_from_keys"], [189, 1, 1, "", "sha256"], [190, 1, 1, "", "to_json"], [191, 1, 1, "", "to_jsonstring"], [192, 1, 1, "", "validate_data"]], "compas_timber.connections.TDovetailJoint": [[194, 1, 1, "", "ToString"], [195, 1, 1, "", "add_extensions"], [196, 1, 1, "", "add_features"], [197, 1, 1, "", "check_elements_compatibility"], [198, 1, 1, "", "copy"], [199, 1, 1, "", "create"], [200, 1, 1, "", "define_dovetail_tool"], [201, 1, 1, "", "element_count_complies"], [202, 1, 1, "", "from_json"], [203, 1, 1, "", "from_jsonstring"], [204, 1, 1, "", "get_face_most_ortho_to_beam"], [205, 1, 1, "", "get_face_most_towards_beam"], [206, 1, 1, "", "restore_beams_from_keys"], [207, 1, 1, "", "sha256"], [208, 1, 1, "", "to_json"], [209, 1, 1, "", "to_jsonstring"], [210, 1, 1, "", "validate_data"]], "compas_timber.connections.TLapJoint": [[212, 1, 1, "", "ToString"], [213, 1, 1, "", "add_extensions"], [214, 1, 1, "", "add_features"], [215, 1, 1, "", "check_elements_compatibility"], [216, 1, 1, "", "copy"], [217, 1, 1, "", "create"], [218, 1, 1, "", "element_count_complies"], [219, 1, 1, "", "from_json"], [220, 1, 1, "", "from_jsonstring"], [221, 1, 1, "", "get_cross_cutting_frame"], [222, 1, 1, "", "get_face_most_ortho_to_beam"], [223, 1, 1, "", "get_face_most_towards_beam"], [224, 1, 1, "", "get_main_cutting_frame"], [225, 1, 1, "", "restore_beams_from_keys"], [226, 1, 1, "", "sha256"], [227, 1, 1, "", "to_json"], [228, 1, 1, "", "to_jsonstring"], [229, 1, 1, "", "validate_data"]], "compas_timber.connections.TStepJoint": [[231, 1, 1, "", "ToString"], [232, 1, 1, "", "add_extensions"], [233, 1, 1, "", "add_features"], [234, 1, 1, "", "check_elements_compatibility"], [235, 1, 1, "", "copy"], [236, 1, 1, "", "create"], [237, 1, 1, "", "element_count_complies"], [238, 1, 1, "", "from_json"], [239, 1, 1, "", "from_jsonstring"], [240, 1, 1, "", "get_face_most_ortho_to_beam"], [241, 1, 1, "", "get_face_most_towards_beam"], [242, 1, 1, "", "restore_beams_from_keys"], [243, 1, 1, "", "set_step_depths"], [244, 1, 1, "", "sha256"], [245, 1, 1, "", "to_json"], [246, 1, 1, "", "to_jsonstring"], [247, 1, 1, "", "validate_data"]], "compas_timber.connections.TenonMortiseJoint": [[249, 1, 1, "", "ToString"], [250, 1, 1, "", "add_extensions"], [251, 1, 1, "", "add_features"], [252, 1, 1, "", "check_elements_compatibility"], [253, 1, 1, "", "copy"], [254, 1, 1, "", "create"], [255, 1, 1, "", "element_count_complies"], [256, 1, 1, "", "from_json"], [257, 1, 1, "", "from_jsonstring"], [258, 1, 1, "", "get_face_most_ortho_to_beam"], [259, 1, 1, "", "get_face_most_towards_beam"], [260, 1, 1, "", "restore_beams_from_keys"], [261, 1, 1, "", "set_default_values"], [262, 1, 1, "", "sha256"], [263, 1, 1, "", "to_json"], [264, 1, 1, "", "to_jsonstring"], [265, 1, 1, "", "validate_data"]], "compas_timber.connections.XLapJoint": [[267, 1, 1, "", "ToString"], [268, 1, 1, "", "add_extensions"], [269, 1, 1, "", "add_features"], [270, 1, 1, "", "check_elements_compatibility"], [271, 1, 1, "", "copy"], [272, 1, 1, "", "create"], [273, 1, 1, "", "element_count_complies"], [274, 1, 1, "", "from_json"], [275, 1, 1, "", "from_jsonstring"], [276, 1, 1, "", "get_cross_cutting_frame"], [277, 1, 1, "", "get_face_most_ortho_to_beam"], [278, 1, 1, "", "get_face_most_towards_beam"], [279, 1, 1, "", "get_main_cutting_frame"], [280, 1, 1, "", "restore_beams_from_keys"], [281, 1, 1, "", "sha256"], [282, 1, 1, "", "to_json"], [283, 1, 1, "", "to_jsonstring"], [284, 1, 1, "", "validate_data"]], "compas_timber.design": [[286, 0, 1, "", "CategoryRule"], [294, 0, 1, "", "DebugInfomation"], [299, 0, 1, "", "DirectRule"], [307, 0, 1, "", "FeatureDefinition"], [309, 0, 1, "", "JointDefinition"], [313, 0, 1, "", "JointRule"], [319, 0, 1, "", "SurfaceModel"], [337, 0, 1, "", "TopologyRule"], [344, 2, 1, "", "guess_joint_topology_2beams"], [345, 2, 1, "", "set_default_joints"]], "compas_timber.design.CategoryRule": [[287, 1, 1, "", "ToString"], [288, 1, 1, "", "comply"], [289, 1, 1, "", "get_category_rules"], [290, 1, 1, "", "get_direct_rules"], [291, 1, 1, "", "get_topology_rules"], [292, 1, 1, "", "joints_from_beams_and_rules"], [293, 1, 1, "", "reorder"]], "compas_timber.design.DebugInfomation": [[295, 1, 1, "", "ToString"], [296, 1, 1, "", "add_fastener_error"], [297, 1, 1, "", "add_feature_error"], [298, 1, 1, "", "add_joint_error"]], "compas_timber.design.DirectRule": [[300, 1, 1, "", "ToString"], [301, 1, 1, "", "comply"], [302, 1, 1, "", "contains"], [303, 1, 1, "", "get_category_rules"], [304, 1, 1, "", "get_direct_rules"], [305, 1, 1, "", "get_topology_rules"], [306, 1, 1, "", "joints_from_beams_and_rules"]], "compas_timber.design.FeatureDefinition": [[308, 1, 1, "", "ToString"]], "compas_timber.design.JointDefinition": [[310, 1, 1, "", "ToString"], [311, 1, 1, "", "is_identical"], [312, 1, 1, "", "match"]], "compas_timber.design.JointRule": [[314, 1, 1, "", "comply"], [315, 1, 1, "", "get_category_rules"], [316, 1, 1, "", "get_direct_rules"], [317, 1, 1, "", "get_topology_rules"], [318, 1, 1, "", "joints_from_beams_and_rules"]], "compas_timber.design.SurfaceModel": [[320, 1, 1, "", "beam_category_names"], [321, 1, 1, "", "create_model"], [322, 1, 1, "", "cull_overlaps"], [323, 1, 1, "", "distance_between_elements"], [324, 1, 1, "", "generate_frame"], [325, 1, 1, "", "generate_perimeter_beams"], [326, 1, 1, "", "generate_plates"], [327, 1, 1, "", "generate_stud_lines"], [328, 1, 1, "", "generate_studs"], [329, 1, 1, "", "generate_windows"], [330, 1, 1, "", "get_beam_intersections"], [331, 1, 1, "", "get_interior_segment_indices"], [332, 1, 1, "", "offset_elements"], [333, 1, 1, "", "parse_loops"], [334, 1, 1, "", "trim_jack_studs"], [335, 1, 1, "", "trim_king_studs"], [336, 1, 1, "", "trim_studs"]], "compas_timber.design.TopologyRule": [[338, 1, 1, "", "ToString"], [339, 1, 1, "", "comply"], [340, 1, 1, "", "get_category_rules"], [341, 1, 1, "", "get_direct_rules"], [342, 1, 1, "", "get_topology_rules"], [343, 1, 1, "", "joints_from_beams_and_rules"]], "compas_timber.elements": [[346, 0, 1, "", "Beam"], [375, 0, 1, "", "Fastener"], [393, 0, 1, "", "FastenerTimberInterface"], [403, 0, 1, "", "Plate"], [424, 0, 1, "", "TimberElement"], [442, 0, 1, "", "Wall"]], "compas_timber.elements.Beam": [[347, 1, 1, "", "ToString"], [348, 1, 1, "", "add_blank_extension"], [349, 1, 1, "", "add_feature"], [350, 1, 1, "", "add_features"], [351, 1, 1, "", "compute_aabb"], [352, 1, 1, "", "compute_collision_mesh"], [353, 1, 1, "", "compute_geometry"], [354, 1, 1, "", "compute_obb"], [355, 1, 1, "", "compute_worldtransformation"], [356, 1, 1, "", "copy"], [357, 1, 1, "", "endpoint_closest_to_point"], [358, 1, 1, "", "extension_to_plane"], [359, 1, 1, "", "from_centerline"], [360, 1, 1, "", "from_endpoints"], [361, 1, 1, "", "from_json"], [362, 1, 1, "", "from_jsonstring"], [363, 1, 1, "", "get_dimensions_relative_to_side"], [364, 1, 1, "", "opposing_side_index"], [365, 1, 1, "", "remove_blank_extension"], [366, 1, 1, "", "remove_features"], [367, 1, 1, "", "reset"], [368, 1, 1, "", "sha256"], [369, 1, 1, "", "side_as_surface"], [370, 1, 1, "", "to_json"], [371, 1, 1, "", "to_jsonstring"], [372, 1, 1, "", "transform"], [373, 1, 1, "", "transformed"], [374, 1, 1, "", "validate_data"]], "compas_timber.elements.Fastener": [[376, 1, 1, "", "ToString"], [377, 1, 1, "", "add_feature"], [378, 1, 1, "", "compute_aabb"], [379, 1, 1, "", "compute_collision_mesh"], [380, 1, 1, "", "compute_geometry"], [381, 1, 1, "", "compute_obb"], [382, 1, 1, "", "compute_worldtransformation"], [383, 1, 1, "", "copy"], [384, 1, 1, "", "from_json"], [385, 1, 1, "", "from_jsonstring"], [386, 1, 1, "", "reset"], [387, 1, 1, "", "sha256"], [388, 1, 1, "", "to_json"], [389, 1, 1, "", "to_jsonstring"], [390, 1, 1, "", "transform"], [391, 1, 1, "", "transformed"], [392, 1, 1, "", "validate_data"]], "compas_timber.elements.FastenerTimberInterface": [[394, 1, 1, "", "ToString"], [395, 1, 1, "", "copy"], [396, 1, 1, "", "from_json"], [397, 1, 1, "", "from_jsonstring"], [398, 1, 1, "", "get_features"], [399, 1, 1, "", "sha256"], [400, 1, 1, "", "to_json"], [401, 1, 1, "", "to_jsonstring"], [402, 1, 1, "", "validate_data"]], "compas_timber.elements.Plate": [[404, 1, 1, "", "ToString"], [405, 1, 1, "", "add_feature"], [406, 1, 1, "", "add_features"], [407, 1, 1, "", "compute_aabb"], [408, 1, 1, "", "compute_collision_mesh"], [409, 1, 1, "", "compute_geometry"], [410, 1, 1, "", "compute_obb"], [411, 1, 1, "", "compute_worldtransformation"], [412, 1, 1, "", "copy"], [413, 1, 1, "", "from_json"], [414, 1, 1, "", "from_jsonstring"], [415, 1, 1, "", "remove_features"], [416, 1, 1, "", "reset"], [417, 1, 1, "", "set_frame_and_outline"], [418, 1, 1, "", "sha256"], [419, 1, 1, "", "to_json"], [420, 1, 1, "", "to_jsonstring"], [421, 1, 1, "", "transform"], [422, 1, 1, "", "transformed"], [423, 1, 1, "", "validate_data"]], "compas_timber.elements.TimberElement": [[425, 1, 1, "", "ToString"], [426, 1, 1, "", "add_feature"], [427, 1, 1, "", "compute_aabb"], [428, 1, 1, "", "compute_collision_mesh"], [429, 1, 1, "", "compute_geometry"], [430, 1, 1, "", "compute_obb"], [431, 1, 1, "", "compute_worldtransformation"], [432, 1, 1, "", "copy"], [433, 1, 1, "", "from_json"], [434, 1, 1, "", "from_jsonstring"], [435, 1, 1, "", "reset"], [436, 1, 1, "", "sha256"], [437, 1, 1, "", "to_json"], [438, 1, 1, "", "to_jsonstring"], [439, 1, 1, "", "transform"], [440, 1, 1, "", "transformed"], [441, 1, 1, "", "validate_data"]], "compas_timber.elements.Wall": [[443, 1, 1, "", "ToString"], [444, 1, 1, "", "add_feature"], [445, 1, 1, "", "compute_aabb"], [446, 1, 1, "", "compute_collision_mesh"], [447, 1, 1, "", "compute_geometry"], [448, 1, 1, "", "compute_obb"], [449, 1, 1, "", "compute_worldtransformation"], [450, 1, 1, "", "copy"], [451, 1, 1, "", "from_box"], [452, 1, 1, "", "from_json"], [453, 1, 1, "", "from_jsonstring"], [454, 1, 1, "", "reset"], [455, 1, 1, "", "sha256"], [456, 1, 1, "", "to_json"], [457, 1, 1, "", "to_jsonstring"], [458, 1, 1, "", "transform"], [459, 1, 1, "", "transformed"], [460, 1, 1, "", "validate_data"]], "compas_timber.errors": [[461, 3, 1, "", "BeamJoiningError"], [462, 3, 1, "", "FastenerApplicationError"], [463, 3, 1, "", "FeatureApplicationError"]], "compas_timber.fabrication": [[464, 0, 1, "", "BTLxPart"], [467, 0, 1, "", "BTLxProcessing"], [477, 0, 1, "", "BTLxWriter"], [480, 0, 1, "", "DoubleCut"], [494, 0, 1, "", "DovetailMortise"], [510, 0, 1, "", "DovetailTenon"], [526, 0, 1, "", "Drilling"], [540, 0, 1, "", "EdgePositionType"], [541, 0, 1, "", "FrenchRidgeLap"], [555, 0, 1, "", "JackRafterCut"], [569, 0, 1, "", "Lap"], [583, 0, 1, "", "LimitationTopType"], [584, 0, 1, "", "MachiningLimits"], [585, 0, 1, "", "Mortise"], [599, 0, 1, "", "OrientationType"], [600, 0, 1, "", "Slot"], [612, 0, 1, "", "StepJoint"], [627, 0, 1, "", "StepJointNotch"], [642, 0, 1, "", "StepShapeType"], [643, 0, 1, "", "Tenon"], [657, 0, 1, "", "TenonShapeType"]], "compas_timber.fabrication.BTLxPart": [[465, 1, 1, "", "et_point_vals"], [466, 1, 1, "", "ref_side_from_face"]], "compas_timber.fabrication.BTLxProcessing": [[468, 1, 1, "", "ToString"], [469, 1, 1, "", "add_subprocessing"], [470, 1, 1, "", "copy"], [471, 1, 1, "", "from_json"], [472, 1, 1, "", "from_jsonstring"], [473, 1, 1, "", "sha256"], [474, 1, 1, "", "to_json"], [475, 1, 1, "", "to_jsonstring"], [476, 1, 1, "", "validate_data"]], "compas_timber.fabrication.BTLxWriter": [[478, 1, 1, "", "model_to_xml"], [479, 1, 1, "", "write"]], "compas_timber.fabrication.DoubleCut": [[481, 1, 1, "", "ToString"], [482, 1, 1, "", "add_subprocessing"], [483, 1, 1, "", "apply"], [484, 1, 1, "", "copy"], [485, 1, 1, "", "from_json"], [486, 1, 1, "", "from_jsonstring"], [487, 1, 1, "", "from_planes_and_beam"], [488, 1, 1, "", "from_shapes_and_element"], [489, 1, 1, "", "planes_from_params_and_beam"], [490, 1, 1, "", "sha256"], [491, 1, 1, "", "to_json"], [492, 1, 1, "", "to_jsonstring"], [493, 1, 1, "", "validate_data"]], "compas_timber.fabrication.DovetailMortise": [[495, 1, 1, "", "ToString"], [496, 1, 1, "", "add_subprocessing"], [497, 1, 1, "", "apply"], [498, 1, 1, "", "copy"], [499, 1, 1, "", "define_dovetail_tool"], [500, 1, 1, "", "dovetail_cutting_frames_from_params_and_beam"], [501, 1, 1, "", "dovetail_volume_from_params_and_beam"], [502, 1, 1, "", "frame_from_params_and_beam"], [503, 1, 1, "", "from_frame_and_beam"], [504, 1, 1, "", "from_json"], [505, 1, 1, "", "from_jsonstring"], [506, 1, 1, "", "sha256"], [507, 1, 1, "", "to_json"], [508, 1, 1, "", "to_jsonstring"], [509, 1, 1, "", "validate_data"]], "compas_timber.fabrication.DovetailTenon": [[511, 1, 1, "", "ToString"], [512, 1, 1, "", "add_subprocessing"], [513, 1, 1, "", "apply"], [514, 1, 1, "", "copy"], [515, 1, 1, "", "define_dovetail_tool"], [516, 1, 1, "", "dovetail_cutting_frames_from_params_and_beam"], [517, 1, 1, "", "dovetail_volume_from_params_and_beam"], [518, 1, 1, "", "frame_from_params_and_beam"], [519, 1, 1, "", "from_json"], [520, 1, 1, "", "from_jsonstring"], [521, 1, 1, "", "from_plane_and_beam"], [522, 1, 1, "", "sha256"], [523, 1, 1, "", "to_json"], [524, 1, 1, "", "to_jsonstring"], [525, 1, 1, "", "validate_data"]], "compas_timber.fabrication.Drilling": [[527, 1, 1, "", "ToString"], [528, 1, 1, "", "add_subprocessing"], [529, 1, 1, "", "apply"], [530, 1, 1, "", "copy"], [531, 1, 1, "", "cylinder_from_params_and_element"], [532, 1, 1, "", "from_json"], [533, 1, 1, "", "from_jsonstring"], [534, 1, 1, "", "from_line_and_element"], [535, 1, 1, "", "from_shapes_and_element"], [536, 1, 1, "", "sha256"], [537, 1, 1, "", "to_json"], [538, 1, 1, "", "to_jsonstring"], [539, 1, 1, "", "validate_data"]], "compas_timber.fabrication.FrenchRidgeLap": [[542, 1, 1, "", "ToString"], [543, 1, 1, "", "add_subprocessing"], [544, 1, 1, "", "apply"], [545, 1, 1, "", "copy"], [546, 1, 1, "", "frame_from_params_and_beam"], [547, 1, 1, "", "from_beam_beam_and_plane"], [548, 1, 1, "", "from_json"], [549, 1, 1, "", "from_jsonstring"], [550, 1, 1, "", "lap_volume_from_params_and_beam"], [551, 1, 1, "", "sha256"], [552, 1, 1, "", "to_json"], [553, 1, 1, "", "to_jsonstring"], [554, 1, 1, "", "validate_data"]], "compas_timber.fabrication.JackRafterCut": [[556, 1, 1, "", "ToString"], [557, 1, 1, "", "add_subprocessing"], [558, 1, 1, "", "apply"], [559, 1, 1, "", "copy"], [560, 1, 1, "", "from_json"], [561, 1, 1, "", "from_jsonstring"], [562, 1, 1, "", "from_plane_and_beam"], [563, 1, 1, "", "from_shapes_and_element"], [564, 1, 1, "", "plane_from_params_and_beam"], [565, 1, 1, "", "sha256"], [566, 1, 1, "", "to_json"], [567, 1, 1, "", "to_jsonstring"], [568, 1, 1, "", "validate_data"]], "compas_timber.fabrication.Lap": [[570, 1, 1, "", "ToString"], [571, 1, 1, "", "add_subprocessing"], [572, 1, 1, "", "apply"], [573, 1, 1, "", "copy"], [574, 1, 1, "", "from_json"], [575, 1, 1, "", "from_jsonstring"], [576, 1, 1, "", "from_plane_and_beam"], [577, 1, 1, "", "planes_from_params_and_beam"], [578, 1, 1, "", "sha256"], [579, 1, 1, "", "to_json"], [580, 1, 1, "", "to_jsonstring"], [581, 1, 1, "", "validate_data"], [582, 1, 1, "", "volume_from_params_and_beam"]], "compas_timber.fabrication.Mortise": [[586, 1, 1, "", "ToString"], [587, 1, 1, "", "add_subprocessing"], [588, 1, 1, "", "apply"], [589, 1, 1, "", "copy"], [590, 1, 1, "", "frame_from_params_and_beam"], [591, 1, 1, "", "from_frame_and_beam"], [592, 1, 1, "", "from_json"], [593, 1, 1, "", "from_jsonstring"], [594, 1, 1, "", "sha256"], [595, 1, 1, "", "to_json"], [596, 1, 1, "", "to_jsonstring"], [597, 1, 1, "", "validate_data"], [598, 1, 1, "", "volume_from_params_and_beam"]], "compas_timber.fabrication.Slot": [[601, 1, 1, "", "ToString"], [602, 1, 1, "", "add_subprocessing"], [603, 1, 1, "", "apply"], [604, 1, 1, "", "copy"], [605, 1, 1, "", "from_json"], [606, 1, 1, "", "from_jsonstring"], [607, 1, 1, "", "from_plane_and_beam"], [608, 1, 1, "", "sha256"], [609, 1, 1, "", "to_json"], [610, 1, 1, "", "to_jsonstring"], [611, 1, 1, "", "validate_data"]], "compas_timber.fabrication.StepJoint": [[613, 1, 1, "", "ToString"], [614, 1, 1, "", "add_subprocessing"], [615, 1, 1, "", "add_tenon"], [616, 1, 1, "", "apply"], [617, 1, 1, "", "copy"], [618, 1, 1, "", "from_json"], [619, 1, 1, "", "from_jsonstring"], [620, 1, 1, "", "from_plane_and_beam"], [621, 1, 1, "", "planes_from_params_and_beam"], [622, 1, 1, "", "sha256"], [623, 1, 1, "", "tenon_volume_from_params_and_beam"], [624, 1, 1, "", "to_json"], [625, 1, 1, "", "to_jsonstring"], [626, 1, 1, "", "validate_data"]], "compas_timber.fabrication.StepJointNotch": [[628, 1, 1, "", "ToString"], [629, 1, 1, "", "add_mortise"], [630, 1, 1, "", "add_subprocessing"], [631, 1, 1, "", "apply"], [632, 1, 1, "", "copy"], [633, 1, 1, "", "from_json"], [634, 1, 1, "", "from_jsonstring"], [635, 1, 1, "", "from_plane_and_beam"], [636, 1, 1, "", "mortise_volume_from_params_and_beam"], [637, 1, 1, "", "planes_from_params_and_beam"], [638, 1, 1, "", "sha256"], [639, 1, 1, "", "to_json"], [640, 1, 1, "", "to_jsonstring"], [641, 1, 1, "", "validate_data"]], "compas_timber.fabrication.Tenon": [[644, 1, 1, "", "ToString"], [645, 1, 1, "", "add_subprocessing"], [646, 1, 1, "", "apply"], [647, 1, 1, "", "copy"], [648, 1, 1, "", "frame_from_params_and_beam"], [649, 1, 1, "", "from_json"], [650, 1, 1, "", "from_jsonstring"], [651, 1, 1, "", "from_plane_and_beam"], [652, 1, 1, "", "sha256"], [653, 1, 1, "", "to_json"], [654, 1, 1, "", "to_jsonstring"], [655, 1, 1, "", "validate_data"], [656, 1, 1, "", "volume_from_params_and_beam"]], "compas_timber.ghpython": [[658, 2, 1, "", "add_gh_param"], [659, 2, 1, "", "clear_gh_params"], [660, 2, 1, "", "get_leaf_subclasses"], [661, 2, 1, "", "item_input_valid"], [662, 2, 1, "", "list_input_valid"], [663, 2, 1, "", "manage_dynamic_params"], [664, 2, 1, "", "rename_gh_input"]], "compas_timber.model": [[665, 0, 1, "", "TimberModel"]], "compas_timber.model.TimberModel": [[666, 1, 1, "", "ToString"], [667, 1, 1, "", "add_element"], [668, 1, 1, "", "add_elements"], [669, 1, 1, "", "add_group"], [670, 1, 1, "", "add_group_element"], [671, 1, 1, "", "add_interaction"], [672, 1, 1, "", "add_joint"], [673, 1, 1, "", "add_material"], [674, 1, 1, "", "assign_material"], [675, 1, 1, "", "compute_aabb"], [676, 1, 1, "", "compute_obb"], [677, 1, 1, "", "copy"], [678, 1, 1, "", "element_by_guid"], [679, 1, 1, "", "elements"], [680, 1, 1, "", "elements_connected_by"], [681, 1, 1, "", "from_json"], [682, 1, 1, "", "from_jsonstring"], [683, 1, 1, "", "get_elements_in_group"], [684, 1, 1, "", "has_element"], [685, 1, 1, "", "has_group"], [686, 1, 1, "", "has_interaction"], [687, 1, 1, "", "has_material"], [688, 1, 1, "", "interactions"], [689, 1, 1, "", "materials"], [690, 1, 1, "", "process_joinery"], [691, 1, 1, "", "remove_element"], [692, 1, 1, "", "remove_interaction"], [693, 1, 1, "", "remove_joint"], [694, 1, 1, "", "rotate"], [695, 1, 1, "", "rotated"], [696, 1, 1, "", "scale"], [697, 1, 1, "", "scaled"], [698, 1, 1, "", "set_topologies"], [699, 1, 1, "", "sha256"], [700, 1, 1, "", "to_json"], [701, 1, 1, "", "to_jsonstring"], [702, 1, 1, "", "transform"], [703, 1, 1, "", "transform_numpy"], [704, 1, 1, "", "transformed"], [705, 1, 1, "", "transformed_numpy"], [706, 1, 1, "", "translate"], [707, 1, 1, "", "translated"], [708, 1, 1, "", "validate_data"]], "compas_timber.planning": [[709, 0, 1, "", "Actor"], [711, 0, 1, "", "BuildingPlan"], [721, 0, 1, "", "BuildingPlanParser"], [724, 0, 1, "", "Instruction"], [734, 0, 1, "", "LinearDimension"], [744, 0, 1, "", "Model3d"], [754, 0, 1, "", "SimpleSequenceGenerator"], [755, 0, 1, "", "Step"], [765, 0, 1, "", "Text3d"]], "compas_timber.planning.Actor": [[710, 1, 1, "", "get_name"]], "compas_timber.planning.BuildingPlan": [[712, 1, 1, "", "ToString"], [713, 1, 1, "", "add_step"], [714, 1, 1, "", "copy"], [715, 1, 1, "", "from_json"], [716, 1, 1, "", "from_jsonstring"], [717, 1, 1, "", "sha256"], [718, 1, 1, "", "to_json"], [719, 1, 1, "", "to_jsonstring"], [720, 1, 1, "", "validate_data"]], "compas_timber.planning.BuildingPlanParser": [[722, 1, 1, "", "parse"], [723, 1, 1, "", "serialize"]], "compas_timber.planning.Instruction": [[725, 1, 1, "", "ToString"], [726, 1, 1, "", "copy"], [727, 1, 1, "", "from_json"], [728, 1, 1, "", "from_jsonstring"], [729, 1, 1, "", "sha256"], [730, 1, 1, "", "to_json"], [731, 1, 1, "", "to_jsonstring"], [732, 1, 1, "", "transform"], [733, 1, 1, "", "validate_data"]], "compas_timber.planning.LinearDimension": [[735, 1, 1, "", "ToString"], [736, 1, 1, "", "copy"], [737, 1, 1, "", "from_json"], [738, 1, 1, "", "from_jsonstring"], [739, 1, 1, "", "sha256"], [740, 1, 1, "", "to_json"], [741, 1, 1, "", "to_jsonstring"], [742, 1, 1, "", "transform"], [743, 1, 1, "", "validate_data"]], "compas_timber.planning.Model3d": [[745, 1, 1, "", "ToString"], [746, 1, 1, "", "copy"], [747, 1, 1, "", "from_json"], [748, 1, 1, "", "from_jsonstring"], [749, 1, 1, "", "sha256"], [750, 1, 1, "", "to_json"], [751, 1, 1, "", "to_jsonstring"], [752, 1, 1, "", "transform"], [753, 1, 1, "", "validate_data"]], "compas_timber.planning.Step": [[756, 1, 1, "", "ToString"], [757, 1, 1, "", "copy"], [758, 1, 1, "", "from_json"], [759, 1, 1, "", "from_jsonstring"], [760, 1, 1, "", "sha256"], [761, 1, 1, "", "to_json"], [762, 1, 1, "", "to_jsonstring"], [763, 1, 1, "", "transform"], [764, 1, 1, "", "validate_data"]], "compas_timber.planning.Text3d": [[766, 1, 1, "", "ToString"], [767, 1, 1, "", "copy"], [768, 1, 1, "", "from_json"], [769, 1, 1, "", "from_jsonstring"], [770, 1, 1, "", "sha256"], [771, 1, 1, "", "to_json"], [772, 1, 1, "", "to_jsonstring"], [773, 1, 1, "", "transform"], [774, 1, 1, "", "validate_data"]], "compas_timber.rhino": [[775, 2, 1, "", "find_neighboring_beams"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:exception"}, "terms": {"": [12, 20, 21, 26, 32, 33, 40, 41, 46, 59, 60, 66, 71, 78, 79, 85, 97, 98, 104, 116, 117, 122, 125, 126, 134, 135, 141, 144, 152, 153, 158, 159, 169, 170, 175, 186, 187, 192, 193, 204, 205, 210, 222, 223, 229, 230, 240, 241, 247, 248, 258, 259, 265, 268, 277, 278, 284, 346, 357, 359, 360, 374, 375, 392, 393, 402, 423, 441, 460, 476, 493, 503, 509, 525, 539, 554, 568, 581, 591, 597, 611, 626, 627, 641, 655, 670, 708, 720, 733, 743, 753, 764, 774, 784, 785, 793], "0": [20, 23, 28, 40, 43, 59, 62, 78, 82, 86, 97, 101, 116, 119, 123, 134, 138, 152, 155, 169, 172, 186, 189, 193, 204, 207, 211, 222, 226, 230, 240, 244, 248, 258, 262, 266, 277, 281, 285, 346, 351, 354, 364, 368, 369, 378, 381, 387, 399, 407, 410, 418, 427, 430, 436, 445, 448, 455, 467, 473, 480, 487, 490, 494, 503, 506, 510, 521, 522, 526, 536, 541, 547, 551, 555, 562, 565, 569, 576, 578, 585, 591, 594, 608, 612, 615, 620, 622, 627, 629, 635, 638, 643, 651, 652, 663, 699, 717, 729, 739, 749, 760, 770, 775, 778, 780, 785], "02": 781, "06": [29, 344], "09": [288, 292, 301, 306, 318, 339, 343], "1": [21, 23, 41, 43, 60, 62, 79, 82, 86, 98, 101, 117, 119, 123, 135, 138, 153, 155, 170, 172, 187, 189, 193, 205, 207, 211, 223, 226, 230, 241, 244, 248, 259, 262, 266, 278, 281, 346, 368, 387, 399, 418, 436, 455, 466, 473, 480, 490, 494, 506, 510, 522, 536, 541, 551, 555, 565, 569, 578, 585, 594, 608, 612, 622, 627, 638, 643, 652, 659, 699, 717, 729, 739, 749, 760, 770, 778, 783, 785, 794], "10": [503, 521, 776, 780], "100": 670, "1000": [494, 510, 585, 612, 615, 627, 629, 643], "100000": [480, 494, 510, 541, 555, 569, 585, 612, 627, 643], "15": [503, 521], "17": 781, "179": [480, 494, 510, 541, 555, 569, 585, 612, 627, 643], "180": [494, 585], "1e": [29, 288, 292, 301, 306, 318, 339, 343, 344], "2": [193, 230, 248, 346, 778, 783, 794], "20": [503, 521, 526, 591, 620, 635, 651], "200": 670, "2020": 781, "2022": 776, "2023": 776, "28": [503, 521, 591, 651], "3": [193, 248, 346, 780, 783, 794], "30": [494, 510], "300": 670, "3000": 670, "35": [494, 510], "3d": [734, 744, 779], "4": [193, 248, 346, 778, 783], "40": [503, 521, 591, 651], "5": [86, 123, 211, 266, 346, 364, 369, 467, 494, 510], "50": [521, 526, 651], "5000": [494, 510, 585, 643, 670], "50000": [480, 555, 569, 612, 627], "5281": 776, "6": [346, 403, 466], "7": 780, "7934267": 776, "80": [503, 521, 591, 651], "89": 569, "9": [480, 494, 510, 541, 555, 569, 585, 612, 627, 643], "A": [16, 28, 30, 36, 55, 73, 92, 111, 129, 142, 148, 165, 182, 193, 199, 217, 236, 248, 254, 272, 285, 288, 292, 293, 301, 306, 318, 339, 343, 346, 349, 359, 360, 375, 377, 393, 403, 405, 426, 444, 461, 464, 477, 642, 665, 667, 673, 683, 687, 690, 776, 781, 785, 786, 790], "AND": 781, "AS": 781, "As": 776, "At": 779, "BE": 781, "BUT": 781, "By": [790, 794], "FOR": 781, "For": [48, 285, 690, 710, 779, 793], "IN": 781, "If": [15, 18, 19, 20, 21, 23, 24, 25, 29, 35, 38, 39, 40, 41, 43, 44, 45, 49, 51, 54, 57, 58, 59, 60, 62, 63, 64, 67, 69, 71, 72, 75, 76, 78, 79, 82, 83, 84, 86, 88, 90, 91, 94, 95, 97, 98, 101, 102, 103, 107, 110, 113, 114, 116, 117, 119, 120, 121, 123, 127, 128, 131, 132, 134, 135, 138, 139, 140, 147, 150, 151, 152, 153, 155, 156, 157, 161, 164, 167, 168, 169, 170, 172, 173, 174, 178, 181, 184, 185, 186, 187, 189, 190, 191, 195, 198, 202, 203, 204, 205, 207, 208, 209, 211, 213, 215, 216, 219, 220, 222, 223, 226, 227, 228, 230, 232, 234, 235, 238, 239, 240, 241, 244, 245, 246, 250, 253, 256, 257, 258, 259, 262, 263, 264, 266, 270, 271, 274, 275, 277, 278, 281, 282, 283, 339, 353, 356, 361, 362, 366, 368, 370, 371, 383, 384, 385, 387, 388, 389, 395, 396, 397, 399, 400, 401, 409, 412, 413, 414, 415, 418, 419, 420, 429, 432, 433, 434, 436, 437, 438, 447, 450, 452, 453, 455, 456, 457, 470, 471, 472, 473, 474, 475, 483, 484, 485, 486, 490, 491, 492, 497, 498, 504, 505, 506, 507, 508, 513, 514, 519, 520, 522, 523, 524, 526, 529, 530, 532, 533, 536, 537, 538, 544, 545, 548, 549, 551, 552, 553, 558, 559, 560, 561, 565, 566, 567, 572, 573, 574, 575, 576, 578, 579, 580, 588, 589, 592, 593, 594, 595, 596, 603, 604, 605, 606, 608, 609, 610, 616, 617, 618, 619, 622, 624, 625, 627, 631, 632, 633, 634, 638, 639, 640, 646, 647, 649, 650, 652, 653, 654, 667, 668, 670, 671, 674, 677, 681, 682, 690, 699, 700, 701, 714, 715, 716, 717, 718, 719, 726, 727, 728, 729, 730, 731, 736, 737, 738, 739, 740, 741, 746, 747, 748, 749, 750, 751, 757, 758, 759, 760, 761, 762, 767, 768, 769, 770, 771, 772, 775, 776, 785, 786, 790, 791], "In": [13, 285, 526, 779, 780], "It": [70, 288, 339, 375, 442, 627, 779, 782, 784, 785, 790, 791, 793], "NO": 781, "NOT": 781, "No": 583, "OF": 781, "OR": 781, "Of": [20, 21, 40, 41, 59, 60, 78, 79, 97, 98, 116, 117, 134, 135, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 277, 278], "One": [48, 710, 755], "THE": 781, "TO": 781, "The": [1, 9, 10, 15, 16, 18, 19, 20, 21, 24, 25, 26, 30, 35, 36, 38, 39, 40, 41, 44, 45, 46, 49, 54, 55, 57, 58, 59, 60, 63, 64, 66, 67, 72, 73, 75, 76, 78, 79, 83, 84, 85, 86, 91, 92, 94, 95, 97, 98, 102, 103, 104, 110, 111, 113, 114, 116, 117, 120, 121, 122, 123, 128, 129, 131, 132, 134, 135, 139, 140, 141, 147, 148, 150, 151, 152, 153, 156, 157, 158, 164, 165, 167, 168, 169, 170, 173, 174, 175, 176, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 198, 199, 200, 202, 203, 204, 205, 208, 209, 210, 211, 216, 217, 219, 220, 222, 223, 227, 228, 229, 235, 236, 238, 239, 240, 241, 245, 246, 247, 248, 253, 254, 256, 257, 258, 259, 263, 264, 265, 266, 271, 272, 274, 275, 277, 278, 282, 283, 284, 285, 286, 288, 292, 293, 299, 301, 306, 318, 319, 337, 339, 343, 346, 348, 350, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 381, 383, 384, 385, 388, 389, 390, 391, 392, 393, 395, 396, 397, 400, 401, 402, 403, 406, 407, 408, 410, 412, 413, 414, 415, 419, 420, 421, 422, 423, 427, 428, 430, 432, 433, 434, 437, 438, 439, 440, 441, 445, 446, 448, 450, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 513, 514, 515, 517, 518, 519, 520, 521, 523, 524, 525, 526, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 541, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 599, 603, 604, 605, 606, 607, 609, 610, 611, 612, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 629, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 643, 646, 647, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 663, 664, 665, 667, 668, 669, 670, 671, 674, 677, 678, 680, 681, 682, 683, 684, 685, 686, 690, 691, 693, 694, 695, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 718, 719, 720, 726, 727, 728, 730, 731, 733, 736, 737, 738, 740, 741, 743, 746, 747, 748, 750, 751, 753, 757, 758, 759, 761, 762, 764, 767, 768, 769, 771, 772, 774, 775, 781, 782, 784, 785, 789, 790, 791, 793, 794], "Then": 782, "There": [307, 777, 784, 790, 794], "These": [393, 784, 790], "To": [22, 42, 780, 782, 783, 791, 794], "WITH": 781, "_": [447, 784], "__from_data__": [26, 46, 66, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 284, 374, 392, 402, 423, 441, 460, 476, 493, 509, 525, 539, 554, 568, 581, 597, 611, 626, 641, 655, 708, 720, 733, 743, 753, 764, 774], "__init__": 783, "aabb": [285, 346, 351, 378, 403, 407, 427, 445], "abl": [12, 32, 33, 125, 126, 144, 268], "about": [461, 779], "abov": [781, 790], "absolut": [288, 301, 339], "abstract": [123, 375, 424], "accord": [293, 346, 784], "accross": 607, "acknowledg": 776, "act": 464, "action": 781, "activ": [779, 780, 785, 791, 793], "actor": [755, 779], "actual": [307, 309, 357], "ad": [12, 16, 30, 32, 36, 55, 70, 73, 92, 111, 125, 129, 144, 148, 165, 182, 199, 217, 236, 248, 254, 268, 272, 346, 350, 403, 406, 667, 668, 669, 670, 775, 786], "adapt": [13, 307], "add": [12, 13, 32, 33, 51, 52, 69, 70, 88, 89, 107, 108, 125, 126, 144, 145, 161, 162, 178, 179, 195, 196, 213, 214, 232, 233, 250, 251, 268, 269, 348, 349, 350, 377, 398, 405, 406, 426, 444, 469, 482, 496, 512, 528, 543, 557, 571, 587, 602, 614, 615, 629, 630, 645, 658, 667, 668, 669, 670, 671, 672, 673, 690, 782, 783, 791, 793, 794], "add_beam": 778, "add_el": 670, "add_extens": 70, "add_gh_param": 779, "addit": [28, 30, 669, 782, 784, 785, 789], "addition": 71, "adjac": [16, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272], "adjust": 793, "affect": [12, 32, 33, 125, 126, 144, 268], "after": [61, 70, 81, 100, 118, 137, 154, 171, 188, 206, 225, 242, 260, 280, 483, 497, 513, 529, 544, 558, 572, 588, 603, 616, 631, 646], "against": [26, 46, 66, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 284, 374, 392, 402, 423, 441, 460, 476, 493, 509, 525, 539, 554, 568, 581, 597, 611, 626, 641, 655, 708, 720, 733, 743, 753, 764, 774], "aka": 319, "aleksandra": 776, "algorithm": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 285, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 699, 717, 729, 739, 749, 760, 770], "align": [67, 285, 346, 351, 378, 403, 407, 427, 445, 675, 782, 793], "all": [12, 20, 21, 32, 40, 41, 59, 60, 78, 79, 97, 98, 116, 117, 125, 134, 135, 144, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 268, 277, 278, 358, 366, 367, 386, 393, 415, 416, 424, 435, 454, 659, 663, 665, 679, 683, 688, 689, 690, 702, 775, 781, 784, 786, 790, 792], "allow": [16, 36, 55, 73, 86, 92, 111, 123, 129, 148, 165, 182, 199, 211, 217, 236, 254, 266, 272, 293, 294, 307, 309, 358, 665, 755, 786], "along": [159, 176, 193, 211, 230, 248, 266, 346, 363, 494, 503, 521, 585, 591, 651, 790], "alreadi": [288, 301, 339, 667, 670], "also": [346, 776, 779, 782, 784, 785, 790], "alt": 534, "altern": 307, "amount": [285, 348, 358, 775], "an": [10, 15, 16, 18, 19, 24, 25, 26, 28, 35, 36, 38, 39, 44, 45, 46, 49, 54, 55, 57, 58, 63, 64, 66, 67, 72, 73, 75, 76, 83, 84, 85, 86, 91, 92, 94, 95, 102, 103, 104, 105, 110, 111, 113, 114, 120, 121, 122, 123, 128, 129, 131, 132, 139, 140, 141, 142, 147, 148, 150, 151, 156, 157, 158, 159, 164, 165, 167, 168, 173, 174, 175, 176, 181, 182, 184, 185, 190, 191, 192, 193, 198, 199, 202, 203, 208, 209, 210, 211, 216, 217, 219, 220, 227, 228, 229, 230, 235, 236, 238, 239, 245, 246, 247, 248, 253, 254, 256, 257, 263, 264, 265, 266, 271, 272, 274, 275, 282, 283, 284, 346, 356, 361, 362, 370, 371, 374, 375, 383, 384, 385, 388, 389, 392, 393, 395, 396, 397, 400, 401, 402, 403, 412, 413, 414, 419, 420, 423, 424, 432, 433, 434, 437, 438, 441, 442, 450, 452, 453, 456, 457, 460, 461, 463, 470, 471, 472, 474, 475, 476, 478, 484, 485, 486, 488, 491, 492, 493, 498, 504, 505, 507, 508, 509, 514, 519, 520, 521, 523, 524, 525, 530, 532, 533, 537, 538, 539, 545, 548, 549, 552, 553, 554, 559, 560, 561, 566, 567, 568, 573, 574, 575, 579, 580, 581, 589, 592, 593, 595, 596, 597, 604, 605, 606, 609, 610, 611, 617, 618, 619, 624, 625, 626, 632, 633, 634, 639, 640, 641, 647, 649, 650, 651, 653, 654, 655, 667, 670, 671, 672, 674, 677, 681, 682, 686, 690, 691, 700, 701, 708, 709, 714, 715, 716, 718, 719, 720, 726, 727, 728, 730, 731, 733, 736, 737, 738, 740, 741, 743, 746, 747, 748, 750, 751, 753, 757, 758, 759, 761, 762, 764, 767, 768, 769, 771, 772, 774, 776, 777, 779, 780, 781, 782, 784, 785, 790], "analysi": 779, "angl": [105, 193, 200, 363, 480, 494, 499, 503, 510, 515, 521, 526, 541, 555, 569, 585, 591, 643, 651, 694, 695, 790], "angle_1": 480, "angle_2": 480, "ani": [24, 25, 26, 44, 45, 46, 63, 64, 66, 83, 84, 85, 102, 103, 104, 120, 121, 122, 139, 140, 141, 142, 145, 156, 157, 158, 173, 174, 175, 190, 191, 192, 208, 209, 210, 227, 228, 229, 245, 246, 247, 263, 264, 265, 282, 283, 284, 370, 371, 374, 388, 389, 392, 400, 401, 402, 419, 420, 423, 437, 438, 441, 456, 457, 460, 474, 475, 476, 491, 492, 493, 497, 507, 508, 509, 513, 523, 524, 525, 537, 538, 539, 552, 553, 554, 566, 567, 568, 579, 580, 581, 588, 595, 596, 597, 609, 610, 611, 616, 624, 625, 626, 631, 639, 640, 641, 646, 653, 654, 655, 700, 701, 708, 718, 719, 720, 730, 731, 733, 740, 741, 743, 750, 751, 753, 761, 762, 764, 771, 772, 774, 777, 781, 789, 790, 794], "anna": 776, "anoth": [176, 211], "apart": 28, "api": [779, 782], "apolinarska": 776, "append": 783, "appli": [12, 32, 33, 125, 126, 144, 193, 248, 268, 286, 292, 299, 306, 307, 318, 337, 343, 372, 373, 390, 391, 393, 421, 422, 439, 440, 458, 459, 461, 462, 463, 464, 576, 683, 702, 783, 790, 794], "applic": [193, 248, 294, 792], "appropri": 375, "ar": [11, 12, 14, 16, 20, 21, 22, 28, 29, 31, 32, 34, 36, 40, 41, 42, 50, 53, 55, 59, 60, 67, 68, 71, 73, 78, 79, 87, 90, 92, 97, 98, 106, 109, 111, 116, 117, 124, 125, 127, 129, 134, 135, 143, 144, 146, 148, 152, 153, 160, 163, 165, 169, 170, 177, 180, 182, 186, 187, 194, 197, 199, 204, 205, 212, 215, 217, 222, 223, 230, 231, 234, 236, 240, 241, 243, 249, 252, 254, 258, 259, 261, 267, 268, 270, 272, 277, 278, 285, 286, 293, 302, 312, 339, 347, 376, 393, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 643, 644, 651, 666, 671, 674, 712, 725, 735, 745, 755, 756, 766, 777, 783, 784, 785, 788, 789, 790, 791, 793, 794], "argument": [16, 286, 299, 307, 337, 669], "aris": 781, "around": [193, 248, 526, 785], "as_str": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 699, 717, 729, 739, 749, 760, 770], "assembl": 755, "assembli": [319, 778, 779, 786, 792], "assign": [286, 337, 665, 667, 674, 790, 793], "associ": [10, 22, 42, 49, 67, 86, 105, 123, 142, 159, 176, 193, 211, 230, 248, 266, 755, 781], "assum": 393, "attach": [20, 21, 40, 41, 59, 60, 78, 79, 97, 98, 116, 117, 134, 135, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 277, 278, 286], "attempt": [393, 792], "attr": [464, 669], "attr1nam": 784, "attr1value_attr2nam": 784, "attr2valu": 784, "attribut": [10, 30, 47, 49, 67, 86, 105, 123, 142, 159, 176, 193, 211, 230, 248, 261, 266, 286, 288, 293, 294, 319, 346, 375, 393, 403, 424, 461, 462, 463, 464, 467, 540, 583, 584, 599, 642, 657, 665, 669, 754, 755, 779, 782, 783, 785], "author": [776, 781], "autom": 782, "automat": [51, 52, 69, 88, 89, 107, 108, 161, 162, 178, 179, 193, 195, 196, 213, 214, 232, 233, 248, 250, 251, 269, 494, 503, 510, 521, 585, 591, 643, 651, 657, 793], "avail": 285, "avoid": [22, 42, 351, 354, 378, 381, 407, 410, 427, 430, 445, 448], "awai": 599, "axi": [193, 248, 285, 346, 351, 359, 360, 378, 403, 407, 427, 445, 494, 503, 510, 526, 569, 585, 591, 643, 675, 694, 695, 785, 789, 793], "b": [671, 686, 692], "back": 584, "backend": 779, "bake": 782, "bakewithboxmap": 793, "ball": 10, "ball_diamet": 10, "ballnodejoint": [393, 779], "base": [10, 27, 30, 47, 49, 65, 67, 86, 105, 123, 142, 159, 176, 193, 200, 211, 230, 243, 248, 266, 286, 294, 299, 307, 309, 313, 319, 337, 346, 353, 355, 375, 382, 393, 403, 409, 411, 424, 429, 431, 442, 447, 449, 461, 462, 463, 464, 466, 467, 477, 480, 494, 499, 510, 515, 526, 540, 541, 555, 569, 583, 584, 585, 599, 600, 612, 627, 642, 643, 657, 665, 690, 694, 695, 709, 711, 721, 724, 734, 744, 754, 755, 765, 791, 792, 794], "base_interfac": 10, "basic": 779, "beam": [10, 12, 13, 14, 16, 20, 21, 22, 27, 28, 29, 30, 32, 33, 34, 36, 40, 41, 42, 49, 51, 52, 53, 55, 59, 60, 61, 65, 67, 69, 70, 71, 73, 78, 79, 81, 86, 88, 89, 92, 97, 98, 100, 105, 107, 108, 109, 111, 116, 117, 118, 123, 125, 126, 129, 134, 135, 137, 142, 144, 145, 146, 148, 152, 153, 154, 159, 161, 162, 163, 165, 169, 170, 171, 176, 178, 179, 180, 182, 186, 187, 188, 193, 195, 196, 197, 199, 204, 205, 206, 211, 213, 214, 217, 222, 223, 225, 230, 232, 233, 236, 240, 241, 242, 248, 250, 251, 252, 254, 258, 259, 260, 266, 268, 269, 272, 277, 278, 280, 285, 294, 319, 424, 442, 461, 464, 466, 467, 480, 483, 487, 489, 494, 497, 500, 501, 502, 503, 510, 513, 516, 517, 518, 521, 541, 544, 546, 547, 550, 555, 558, 562, 563, 564, 569, 572, 576, 577, 582, 585, 588, 590, 591, 598, 599, 603, 607, 612, 616, 620, 621, 623, 627, 629, 631, 635, 636, 637, 643, 646, 648, 651, 656, 665, 670, 678, 690, 744, 775, 778, 779, 782, 784, 789, 790, 791, 793, 794], "beam_a": [20, 21, 29, 40, 41, 59, 60, 78, 79, 97, 98, 105, 116, 117, 134, 135, 142, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 277, 278, 670], "beam_a_kei": 665, "beam_b": [20, 21, 29, 40, 41, 59, 60, 78, 79, 97, 98, 105, 116, 117, 134, 135, 142, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 277, 278], "beam_b_kei": 665, "beam_def": 330, "beam_fac": 466, "beam_width": [319, 786], "beama": 344, "beamb": 344, "beamdefinit": 319, "beamjoiningerror": [1, 12, 14, 32, 33, 34, 51, 53, 69, 71, 88, 107, 109, 125, 126, 144, 146, 161, 163, 178, 180, 195, 197, 213, 232, 234, 250, 252, 268, 294, 690, 779], "becaus": 790, "been": [16, 36, 55, 70, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272, 667, 755], "befor": [12, 16, 32, 36, 55, 73, 92, 111, 125, 129, 144, 148, 165, 182, 199, 217, 236, 254, 268, 272, 307, 667], "being": 779, "belong": [16, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272], "between": [10, 67, 86, 105, 123, 211, 266, 301, 319, 393, 466, 494, 510, 585, 643, 665, 671, 686, 688, 692, 784, 786, 790, 794], "birdsmouth": [159, 790], "bisector": [105, 790], "bit": 786, "bitmap": 793, "blank": [346, 348, 365, 464, 546, 690, 785], "blank_fram": 464, "blank_length": 464, "blender": 777, "bodi": 442, "bool": [15, 20, 21, 23, 24, 25, 28, 35, 40, 41, 43, 44, 45, 49, 54, 59, 60, 62, 63, 64, 67, 72, 78, 79, 82, 83, 84, 86, 91, 97, 98, 101, 102, 103, 110, 116, 117, 119, 120, 121, 123, 128, 134, 135, 138, 139, 140, 147, 152, 153, 155, 156, 157, 164, 169, 170, 172, 173, 174, 181, 186, 187, 189, 190, 191, 198, 204, 205, 207, 208, 209, 211, 216, 222, 223, 226, 227, 228, 230, 235, 240, 241, 244, 245, 246, 253, 258, 259, 262, 263, 264, 266, 271, 277, 278, 281, 282, 283, 288, 301, 314, 339, 353, 356, 368, 370, 371, 383, 387, 388, 389, 393, 395, 399, 400, 401, 409, 412, 418, 419, 420, 424, 429, 432, 436, 437, 438, 447, 450, 455, 456, 457, 470, 473, 474, 475, 484, 490, 491, 492, 494, 498, 506, 507, 508, 510, 514, 522, 523, 524, 526, 530, 536, 537, 538, 541, 545, 551, 552, 553, 559, 565, 566, 567, 569, 573, 576, 578, 579, 580, 584, 585, 589, 594, 595, 596, 604, 608, 609, 610, 617, 622, 624, 625, 627, 632, 638, 639, 640, 643, 647, 651, 652, 653, 654, 677, 684, 685, 686, 687, 690, 699, 700, 701, 714, 717, 718, 719, 726, 729, 730, 731, 736, 739, 740, 741, 746, 749, 750, 751, 755, 757, 760, 761, 762, 767, 770, 771, 772], "boolean": [393, 782, 786, 789, 791], "both": [52, 89, 108, 162, 179, 196, 214, 233, 248, 251, 269, 671, 674], "bottom": [494, 510, 521, 584, 585, 643, 651, 790], "bound": [285, 346, 351, 354, 378, 381, 403, 407, 410, 427, 430, 445, 448, 675, 676, 775], "box": [285, 346, 351, 354, 378, 381, 403, 407, 410, 427, 430, 445, 448, 451, 464, 636, 675, 676, 755, 775, 782, 785], "bracket": 375, "brep": [353, 403, 409, 429, 447, 483, 497, 501, 513, 517, 529, 544, 550, 558, 572, 588, 598, 603, 616, 623, 631, 646, 656, 779, 793], "brepdrillholefeatur": 789, "brepsubtractionfeatur": 789, "btlx": [346, 464, 466, 467, 477, 478, 479, 779, 782], "btlx_2_1_0": 783, "btlx_process": 783, "btlxfromgeometrydefinit": 393, "btlxjoint": 783, "btlxpart": [779, 783], "btlxprocess": [480, 494, 503, 510, 526, 541, 555, 569, 585, 591, 600, 612, 627, 643, 779, 783], "btlxwriter": 779, "build": [711, 721, 722, 723, 754, 755, 780, 794], "building_plan": 723, "buildingplan": [722, 723, 754, 779], "buildingplanpars": 779, "built": [779, 782], "butt": [49, 176, 345, 786], "byte": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 699, 717, 729, 739, 749, 760, 770], "c": [780, 781], "cad": [755, 777], "calcul": [12, 20, 21, 32, 33, 40, 41, 51, 59, 60, 69, 78, 79, 88, 97, 98, 107, 116, 117, 125, 126, 134, 135, 144, 152, 153, 161, 169, 170, 178, 186, 187, 195, 204, 205, 213, 222, 223, 232, 240, 241, 250, 258, 259, 268, 277, 278, 363, 461, 489, 500, 501, 502, 516, 517, 518, 546, 550, 564, 577, 582, 590, 598, 621, 623, 636, 637, 648, 656, 665, 690, 698], "call": [16, 22, 36, 42, 51, 52, 55, 69, 70, 73, 88, 89, 92, 107, 108, 111, 129, 148, 161, 162, 165, 178, 179, 182, 195, 196, 199, 213, 214, 217, 232, 233, 236, 250, 251, 254, 269, 272, 307, 783, 785], "callabl": 683, "can": [26, 46, 66, 67, 85, 104, 122, 141, 142, 158, 175, 192, 193, 210, 229, 247, 265, 284, 292, 306, 318, 343, 374, 392, 393, 402, 423, 424, 441, 460, 461, 476, 493, 509, 521, 525, 534, 539, 554, 568, 581, 597, 611, 626, 641, 651, 655, 667, 708, 711, 720, 733, 743, 753, 755, 764, 774, 777, 782, 783, 785, 790, 794], "cannot": [462, 463, 785], "canva": 790, "care": 794, "casa": 776, "case": [503, 591, 786, 791], "categori": [286, 288, 293, 784, 785, 794], "category_a": 286, "category_b": [286, 293], "categoryrul": [319, 779], "catergory_a": 293, "caus": 534, "caviti": 319, "cd": 780, "center": [20, 21, 40, 41, 59, 60, 78, 79, 97, 98, 116, 117, 134, 135, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 277, 278, 665, 776], "center_of_mass": 665, "centerlin": [20, 21, 40, 41, 59, 60, 78, 79, 97, 98, 105, 116, 117, 134, 135, 152, 153, 159, 169, 170, 186, 187, 193, 204, 205, 222, 223, 230, 240, 241, 248, 258, 259, 277, 278, 301, 319, 346, 357, 359, 360, 782, 784, 785, 793], "centerline_end": 346, "centerline_start": 346, "centr": 790, "centrelin": 785, "chamfer": [643, 651], "chang": [534, 790], "charg": 781, "check": [14, 34, 53, 71, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270, 288, 301, 339, 684, 685, 690, 775, 779], "checkstandardattribut": 784, "chen": 776, "chosen": [20, 21, 40, 41, 59, 60, 78, 79, 97, 98, 116, 117, 134, 135, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 277, 278], "circular": [22, 42], "cite": 779, "cl": [15, 35, 54, 72, 91, 110, 128, 147, 164, 181, 198, 216, 235, 253, 271, 286, 299, 337, 356, 383, 395, 412, 432, 450, 470, 484, 498, 514, 530, 545, 559, 573, 589, 604, 617, 632, 647, 660, 677, 714, 726, 736, 746, 757, 767], "claim": 781, "class": [10, 11, 27, 30, 31, 47, 49, 50, 67, 68, 86, 87, 105, 106, 123, 124, 142, 143, 159, 160, 176, 177, 193, 194, 211, 212, 230, 231, 248, 249, 266, 267, 286, 294, 299, 307, 309, 313, 319, 337, 346, 347, 375, 376, 393, 394, 403, 404, 424, 425, 442, 443, 462, 464, 467, 468, 477, 480, 481, 494, 495, 510, 511, 526, 527, 540, 541, 542, 555, 556, 569, 570, 583, 584, 585, 586, 599, 600, 601, 612, 613, 627, 628, 635, 642, 643, 644, 657, 665, 666, 672, 702, 709, 711, 712, 721, 724, 725, 734, 735, 744, 745, 754, 755, 756, 765, 766, 779, 783], "classmethod": [16, 17, 18, 19, 26, 28, 36, 37, 38, 39, 46, 48, 55, 56, 57, 58, 66, 73, 74, 75, 76, 85, 92, 93, 94, 95, 104, 111, 112, 113, 114, 122, 129, 130, 131, 132, 141, 148, 149, 150, 151, 158, 165, 166, 167, 168, 175, 182, 183, 184, 185, 192, 199, 201, 202, 203, 210, 217, 218, 219, 220, 229, 236, 237, 238, 239, 247, 254, 255, 256, 257, 265, 272, 273, 274, 275, 284, 320, 359, 360, 361, 362, 374, 384, 385, 392, 396, 397, 402, 413, 414, 423, 433, 434, 441, 451, 452, 453, 460, 471, 472, 476, 485, 486, 487, 488, 493, 499, 503, 504, 505, 509, 515, 519, 520, 521, 525, 532, 533, 534, 535, 539, 547, 548, 549, 554, 560, 561, 562, 563, 568, 574, 575, 576, 581, 591, 592, 593, 597, 605, 606, 607, 611, 618, 619, 620, 626, 633, 634, 635, 641, 649, 650, 651, 655, 681, 682, 708, 710, 715, 716, 720, 722, 723, 727, 728, 733, 737, 738, 743, 747, 748, 753, 758, 759, 764, 768, 769, 774], "clean": 790, "clear": [375, 659, 663], "clear_gh_param": 779, "clearli": 393, "click": 790, "clone": 780, "closer": 357, "closest": [20, 21, 40, 41, 59, 60, 78, 79, 97, 98, 116, 117, 134, 135, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 277, 278, 786], "clt": 403, "code": [16, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272, 777, 779], "collect": [711, 775, 791], "collis": [352, 379, 408, 428, 446], "colon": 784, "com": [776, 780, 783], "combin": 230, "comment": 477, "common": 123, "compa": [15, 18, 19, 23, 35, 38, 39, 43, 54, 57, 58, 62, 72, 75, 76, 82, 91, 94, 95, 101, 110, 113, 114, 119, 128, 131, 132, 138, 147, 150, 151, 155, 164, 167, 168, 172, 181, 184, 185, 189, 198, 202, 203, 207, 216, 219, 220, 226, 235, 238, 239, 244, 253, 256, 257, 262, 271, 274, 275, 281, 319, 346, 352, 353, 354, 355, 356, 361, 362, 368, 372, 373, 378, 379, 381, 382, 383, 384, 385, 387, 390, 391, 393, 395, 396, 397, 399, 408, 409, 410, 411, 412, 413, 414, 418, 421, 422, 427, 428, 429, 430, 431, 432, 433, 434, 436, 439, 440, 445, 446, 447, 448, 449, 450, 452, 453, 455, 458, 459, 470, 471, 472, 473, 484, 485, 486, 488, 490, 497, 498, 500, 501, 502, 504, 505, 506, 513, 514, 517, 518, 519, 520, 522, 529, 530, 531, 532, 533, 534, 535, 536, 545, 546, 548, 549, 550, 551, 559, 560, 561, 563, 564, 565, 573, 574, 575, 577, 578, 582, 588, 589, 590, 592, 593, 594, 598, 604, 605, 606, 608, 616, 617, 618, 619, 621, 622, 623, 632, 633, 634, 635, 636, 637, 638, 646, 647, 648, 649, 650, 652, 656, 675, 676, 677, 681, 682, 694, 695, 699, 702, 706, 707, 714, 715, 716, 717, 721, 726, 727, 728, 729, 736, 737, 738, 739, 746, 747, 748, 749, 755, 757, 758, 759, 760, 767, 768, 769, 770, 776, 782, 786, 788, 792], "compact": [24, 25, 44, 45, 63, 64, 83, 84, 102, 103, 120, 121, 139, 140, 156, 157, 173, 174, 190, 191, 208, 209, 227, 228, 245, 246, 263, 264, 282, 283, 370, 371, 388, 389, 400, 401, 419, 420, 437, 438, 456, 457, 474, 475, 491, 492, 507, 508, 523, 524, 537, 538, 552, 553, 566, 567, 579, 580, 595, 596, 609, 610, 624, 625, 639, 640, 653, 654, 700, 701, 718, 719, 730, 731, 740, 741, 750, 751, 761, 762, 771, 772], "compani": 477, "company_nam": 477, "compar": 71, "comparison": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 699, 717, 729, 739, 749, 760, 770], "compas_model": [373, 391, 422, 440, 459, 670, 680, 683, 685, 754], "compas_rhino": 780, "compas_timb": [0, 10, 16, 22, 27, 30, 36, 42, 47, 49, 55, 67, 73, 86, 92, 105, 111, 123, 129, 142, 148, 159, 165, 176, 182, 193, 199, 211, 217, 230, 236, 248, 254, 266, 272, 285, 286, 294, 299, 307, 309, 313, 319, 337, 344, 345, 346, 375, 393, 403, 424, 442, 461, 462, 463, 464, 467, 477, 480, 483, 488, 489, 494, 497, 500, 501, 502, 510, 513, 517, 518, 526, 529, 531, 534, 535, 540, 541, 544, 546, 550, 555, 558, 563, 564, 569, 572, 577, 582, 583, 584, 585, 588, 590, 598, 599, 600, 603, 612, 616, 621, 623, 627, 631, 636, 637, 642, 643, 646, 648, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 670, 709, 711, 721, 724, 734, 744, 754, 755, 765, 775, 776, 779, 780], "compat": [11, 14, 31, 34, 49, 50, 53, 67, 68, 71, 86, 87, 90, 105, 106, 109, 124, 127, 143, 146, 159, 160, 163, 176, 177, 180, 193, 194, 197, 211, 212, 215, 230, 231, 234, 248, 249, 252, 266, 267, 270, 285, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766], "compet": 776, "compil": 780, "complet": [86, 123, 211, 266, 442], "complex": 779, "compli": [14, 34, 53, 109, 146, 163, 180, 197, 252], "complianc": 301, "compon": [307, 309, 658, 659, 661, 662, 663, 664, 780, 784, 785, 786, 788, 789, 791, 794], "componen": 782, "compos": 791, "comput": [23, 29, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 351, 352, 353, 354, 355, 368, 378, 379, 381, 382, 387, 399, 407, 408, 409, 410, 411, 418, 427, 428, 429, 430, 431, 436, 445, 446, 447, 448, 449, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 675, 676, 699, 717, 729, 739, 749, 760, 770], "computation": 791, "concaten": 784, "concept": [777, 782], "concret": [22, 42], "condit": 781, "cone": [494, 503, 510, 521], "cone_angl": [193, 494, 503, 510, 521], "configur": 584, "connect": [0, 10, 11, 16, 22, 27, 30, 31, 36, 42, 47, 49, 50, 55, 67, 68, 73, 86, 87, 92, 105, 106, 111, 123, 124, 129, 142, 143, 148, 159, 160, 165, 176, 177, 182, 193, 194, 199, 211, 212, 217, 230, 231, 236, 248, 249, 254, 266, 267, 272, 285, 337, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 680, 712, 725, 735, 745, 756, 766, 779, 781, 790, 791], "connectionsolv": [698, 779], "consid": [28, 29, 286, 288, 292, 299, 301, 306, 318, 337, 339, 343, 790], "consist": 29, "constant": 337, "construct": [18, 19, 26, 38, 39, 46, 57, 58, 66, 75, 76, 85, 94, 95, 104, 113, 114, 122, 131, 132, 141, 150, 151, 158, 167, 168, 175, 184, 185, 192, 202, 203, 210, 219, 220, 229, 238, 239, 247, 256, 257, 265, 274, 275, 284, 361, 362, 374, 384, 385, 392, 396, 397, 402, 413, 414, 423, 433, 434, 441, 452, 453, 460, 471, 472, 476, 485, 486, 488, 493, 504, 505, 509, 519, 520, 525, 531, 532, 533, 534, 535, 539, 548, 549, 554, 560, 561, 563, 568, 574, 575, 581, 592, 593, 597, 605, 606, 607, 611, 618, 619, 626, 633, 634, 641, 649, 650, 655, 681, 682, 708, 715, 716, 720, 727, 728, 733, 737, 738, 743, 747, 748, 753, 758, 759, 764, 768, 769, 774, 779, 786], "constructor": [16, 307, 534], "contain": [9, 16, 18, 19, 20, 21, 28, 36, 38, 39, 40, 41, 55, 57, 58, 59, 60, 73, 75, 76, 78, 79, 92, 94, 95, 97, 98, 111, 113, 114, 116, 117, 129, 131, 132, 134, 135, 148, 150, 151, 152, 153, 165, 167, 168, 169, 170, 182, 184, 185, 186, 187, 199, 202, 203, 204, 205, 217, 219, 220, 222, 223, 236, 238, 239, 240, 241, 254, 256, 257, 258, 259, 272, 274, 275, 277, 278, 285, 288, 293, 294, 301, 307, 309, 339, 346, 361, 362, 384, 385, 396, 397, 413, 414, 424, 433, 434, 442, 452, 453, 461, 471, 472, 485, 486, 504, 505, 519, 520, 532, 533, 548, 549, 560, 561, 574, 575, 592, 593, 605, 606, 618, 619, 633, 634, 649, 650, 665, 667, 670, 679, 681, 682, 684, 687, 689, 702, 711, 715, 716, 727, 728, 737, 738, 747, 748, 755, 758, 759, 768, 769, 775], "content": 788, "context": 9, "continu": 779, "contract": 781, "contribut": [779, 782], "contributor": 776, "control": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 699, 717, 729, 739, 749, 760, 770], "convent": 785, "convers": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766], "convert": [11, 24, 25, 31, 44, 45, 50, 63, 64, 68, 83, 84, 87, 102, 103, 106, 120, 121, 124, 139, 140, 143, 156, 157, 160, 173, 174, 177, 190, 191, 194, 208, 209, 212, 227, 228, 231, 245, 246, 249, 263, 264, 267, 282, 283, 307, 347, 370, 371, 376, 388, 389, 394, 400, 401, 404, 419, 420, 425, 437, 438, 443, 456, 457, 465, 468, 474, 475, 478, 481, 491, 492, 495, 507, 508, 511, 523, 524, 527, 537, 538, 542, 552, 553, 556, 566, 567, 570, 579, 580, 586, 595, 596, 601, 609, 610, 613, 624, 625, 628, 639, 640, 644, 653, 654, 666, 700, 701, 712, 718, 719, 725, 730, 731, 735, 740, 741, 745, 750, 751, 756, 761, 762, 766, 771, 772], "coordin": [346, 355, 382, 393, 403, 411, 431, 449, 464, 480, 494, 510, 521, 526, 541, 555, 569, 585, 612, 627, 643, 651, 785], "copi": [373, 391, 422, 440, 459, 695, 697, 704, 705, 707, 781], "copy_guid": [15, 35, 54, 72, 91, 110, 128, 147, 164, 181, 198, 216, 235, 253, 271, 356, 383, 395, 412, 432, 450, 470, 484, 498, 514, 530, 545, 559, 573, 589, 604, 617, 632, 647, 677, 714, 726, 736, 746, 757, 767], "copyright": 781, "corner": [464, 790], "correct": [18, 19, 38, 39, 57, 58, 75, 76, 94, 95, 113, 114, 131, 132, 150, 151, 167, 168, 184, 185, 202, 203, 219, 220, 238, 239, 256, 257, 274, 275, 339, 361, 362, 384, 385, 396, 397, 413, 414, 433, 434, 452, 453, 471, 472, 485, 486, 504, 505, 519, 520, 532, 533, 548, 549, 560, 561, 574, 575, 582, 592, 593, 605, 606, 618, 619, 633, 634, 649, 650, 681, 682, 715, 716, 727, 728, 737, 738, 747, 748, 758, 759, 768, 769], "correctli": [582, 784], "correspond": [193, 248, 346, 357, 467, 784, 785, 793], "could": [51, 69, 88, 107, 161, 178, 195, 213, 232, 250, 462, 463, 503, 521, 591, 620, 635, 651, 709], "coupl": 393, "cpython": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766], "crate": 790, "creat": [10, 13, 30, 49, 51, 52, 67, 69, 86, 88, 89, 105, 107, 108, 123, 142, 159, 161, 162, 176, 178, 179, 193, 195, 196, 211, 213, 214, 230, 232, 233, 248, 250, 251, 266, 269, 299, 307, 319, 359, 360, 373, 391, 422, 440, 459, 487, 497, 503, 513, 521, 547, 562, 576, 577, 588, 591, 616, 620, 631, 635, 646, 651, 777, 779, 780, 782, 783, 784, 785, 786, 788, 790, 791, 794], "creategeometri": [786, 791], "creation": [14, 34, 53, 71, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270], "criteria": 784, "cross": [22, 29, 42, 49, 61, 65, 67, 81, 100, 118, 123, 137, 154, 159, 171, 176, 188, 193, 206, 211, 225, 230, 242, 248, 260, 280, 346, 359, 360, 503, 521, 591, 620, 627, 635, 651, 785, 786, 790], "cross_beam": [49, 67, 86, 123, 159, 176, 193, 211, 230, 248, 266, 778], "cross_beam_guid": 248, "current": [15, 35, 54, 72, 91, 110, 128, 147, 164, 181, 198, 216, 235, 253, 271, 356, 383, 395, 412, 432, 450, 470, 484, 498, 514, 530, 545, 559, 573, 589, 604, 617, 632, 647, 677, 714, 726, 736, 746, 757, 767, 779], "curv": 785, "custom": 779, "custom_dimens": 786, "cut": [49, 86, 123, 193, 200, 211, 230, 266, 467, 480, 483, 487, 488, 489, 494, 497, 499, 500, 501, 502, 503, 510, 513, 515, 516, 517, 518, 521, 529, 540, 541, 544, 546, 547, 550, 555, 558, 562, 563, 564, 569, 572, 576, 577, 582, 583, 584, 585, 588, 590, 591, 598, 599, 603, 607, 612, 616, 620, 621, 623, 627, 631, 635, 636, 637, 642, 643, 646, 648, 651, 656, 657, 782, 785, 789, 790, 791], "cut_plane_bia": [86, 123, 211, 266, 790], "cutoff": 790, "cutter": [200, 499, 515], "cylind": [531, 755], "damag": 781, "data": [15, 18, 19, 23, 24, 25, 26, 35, 38, 39, 43, 44, 45, 46, 54, 57, 58, 62, 63, 64, 66, 72, 75, 76, 82, 83, 84, 85, 91, 94, 95, 101, 102, 103, 104, 110, 113, 114, 119, 120, 121, 122, 128, 131, 132, 138, 139, 140, 141, 147, 150, 151, 155, 156, 157, 158, 164, 167, 168, 172, 173, 174, 175, 181, 184, 185, 189, 190, 191, 192, 198, 202, 203, 207, 208, 209, 210, 216, 219, 220, 226, 227, 228, 229, 235, 238, 239, 244, 245, 246, 247, 253, 256, 257, 262, 263, 264, 265, 271, 274, 275, 281, 282, 283, 284, 356, 361, 362, 368, 370, 371, 374, 383, 384, 385, 387, 388, 389, 392, 393, 395, 396, 397, 399, 400, 401, 402, 412, 413, 414, 418, 419, 420, 423, 432, 433, 434, 436, 437, 438, 441, 450, 452, 453, 455, 456, 457, 460, 467, 470, 471, 472, 473, 474, 475, 476, 477, 484, 485, 486, 490, 491, 492, 493, 498, 504, 505, 506, 507, 508, 509, 514, 519, 520, 522, 523, 524, 525, 530, 532, 533, 536, 537, 538, 539, 545, 548, 549, 551, 552, 553, 554, 559, 560, 561, 565, 566, 567, 568, 573, 574, 575, 578, 579, 580, 581, 589, 592, 593, 594, 595, 596, 597, 604, 605, 606, 608, 609, 610, 611, 617, 618, 619, 622, 624, 625, 626, 632, 633, 634, 638, 639, 640, 641, 647, 649, 650, 652, 653, 654, 655, 677, 681, 682, 699, 700, 701, 703, 704, 705, 708, 711, 714, 715, 716, 717, 718, 719, 720, 724, 726, 727, 728, 729, 730, 731, 733, 736, 737, 738, 739, 740, 741, 743, 746, 747, 748, 749, 750, 751, 753, 755, 757, 758, 759, 760, 761, 762, 764, 767, 768, 769, 770, 771, 772, 774, 788, 792], "datastructur": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 352, 368, 379, 387, 399, 408, 409, 418, 428, 429, 436, 446, 447, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 675, 676, 694, 696, 699, 704, 705, 706, 707, 717, 729, 739, 749, 760, 770], "de": [22, 42, 61, 81, 100, 118, 137, 154, 171, 188, 206, 225, 242, 260, 280], "deal": 781, "debug": [294, 461, 786, 791, 792], "debug_geometri": 461, "debug_info": [367, 386, 416, 435, 454, 461], "debuginfo": [786, 791], "debuginfom": 779, "deeper": [86, 123, 211, 266], "default": [11, 15, 31, 35, 49, 50, 54, 68, 72, 86, 87, 91, 106, 110, 123, 124, 128, 143, 147, 160, 164, 177, 181, 194, 198, 211, 212, 216, 231, 235, 243, 249, 253, 261, 266, 267, 271, 288, 301, 319, 339, 347, 356, 359, 360, 376, 383, 394, 395, 403, 404, 412, 425, 432, 443, 450, 468, 470, 477, 481, 484, 487, 495, 498, 503, 511, 514, 521, 526, 527, 530, 542, 545, 547, 556, 559, 562, 569, 570, 573, 576, 586, 589, 591, 601, 604, 613, 617, 620, 628, 632, 635, 644, 647, 651, 659, 663, 666, 677, 690, 694, 695, 696, 697, 712, 714, 725, 726, 735, 736, 745, 746, 756, 757, 766, 767, 779, 785, 786, 791, 793], "defin": [12, 32, 33, 125, 126, 144, 193, 200, 248, 268, 302, 312, 314, 359, 393, 487, 499, 515, 521, 576, 651, 784, 785, 786, 790, 793, 794], "define_dovetail_tool": [521, 651], "definit": [292, 306, 318, 343, 783, 791], "degre": 526, "delai": [307, 309], "delet": [659, 663], "deleteattribut": 784, "demo": 787, "depend": [357, 359, 360, 780, 783, 790], "depth": [49, 176, 193, 230, 243, 248, 494, 503, 510, 521, 526, 555, 569, 576, 585, 591, 607, 612, 627, 643, 651, 778, 790], "depth_limit": 526, "deriv": 783, "describ": [10, 783], "desigen": 29, "design": [0, 285, 286, 294, 299, 307, 309, 313, 319, 337, 344, 345, 776, 779, 782, 784, 785], "design2machin": 783, "desir": 793, "detail": [1, 782], "detect": [27, 791], "detected_topo": 665, "determin": [193, 293, 319, 790], "dev": 780, "develop": [776, 779], "deviat": 793, "dfab": 776, "diamet": [10, 67, 193, 200, 393, 499, 515, 526, 534, 535, 541, 547, 789], "dict": [30, 286, 299, 337, 393, 464, 465, 569, 665, 669, 783], "dictionari": [30, 584], "did": [14, 34, 53, 109, 146, 163, 180, 197, 252], "differ": [16, 665, 721, 777, 783, 786, 790], "differec": 393, "digest": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 699, 717, 729, 739, 749, 760, 770], "digit": 776, "dimens": [67, 71, 346, 363, 734, 785], "direct": [346, 358, 359, 360, 363, 658, 696, 697, 775, 785, 786, 794], "directli": [30, 123, 299, 424, 667, 668, 786, 790], "directrul": 779, "disabl": 791, "displai": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766, 784, 792], "distanc": [28, 29, 286, 288, 292, 299, 301, 306, 318, 337, 339, 343, 494, 510, 576, 585, 643, 786, 791], "distribut": 781, "do": [123, 497, 513, 588, 616, 631, 646, 781, 783], "docstr": 442, "document": [781, 783, 784, 785, 793], "doe": [16, 36, 55, 73, 92, 111, 129, 142, 145, 148, 165, 182, 199, 217, 236, 254, 272, 288, 301, 339, 375, 483, 529, 544, 558, 572, 603, 721, 783, 785], "doesn": 790, "doi": 776, "done": [20, 21, 40, 41, 59, 60, 78, 79, 97, 98, 116, 117, 134, 135, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 277, 278], "doubl": [230, 480, 487, 488, 612, 627, 642], "doublecut": 779, "dovetail": [193, 200, 494, 499, 500, 501, 503, 510, 515, 516, 517, 521, 651], "dovetail_shap": 193, "dovetailmortis": 779, "dovetailtenon": [503, 651, 779], "dowel": 375, "down": 790, "downstream": [307, 309], "drawn": 785, "drill": [67, 541, 563, 779], "drillhol": [541, 547], "drillhole_diam": [67, 541, 547], "drop": 790, "dure": [22, 23, 42, 43, 62, 70, 82, 101, 119, 138, 155, 172, 189, 193, 207, 226, 244, 262, 281, 294, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 690, 699, 717, 729, 739, 749, 755, 760, 770], "dynam": [786, 790], "e": [22, 29, 42, 487, 503, 521, 547, 562, 576, 591, 620, 635, 651, 777, 784, 793], "each": [10, 20, 21, 30, 40, 41, 59, 60, 78, 79, 97, 98, 116, 117, 134, 135, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 277, 278, 358, 711, 783, 784, 790, 792], "easi": 782, "eclips": 777, "ecosystem": 779, "edg": [319, 346, 494, 503, 510, 521, 540, 585, 591, 607, 643, 651, 671, 786, 790], "edge_stud": [319, 786, 790], "edge_stud_offset": 786, "edgepositiontyp": [541, 779], "edit": 780, "editor": 777, "either": [86, 123, 211, 266, 357, 480, 494, 510, 541, 555, 569, 585, 612, 627, 643, 658, 786], "element": [0, 10, 13, 14, 16, 17, 34, 36, 37, 53, 55, 56, 71, 73, 74, 90, 92, 93, 109, 111, 112, 123, 127, 129, 130, 146, 148, 149, 163, 165, 166, 180, 182, 183, 197, 199, 201, 215, 217, 218, 234, 236, 237, 248, 252, 254, 255, 270, 272, 273, 285, 286, 288, 292, 293, 299, 301, 302, 306, 307, 309, 312, 314, 318, 319, 337, 339, 343, 346, 351, 352, 353, 354, 355, 357, 367, 372, 373, 375, 378, 379, 381, 382, 386, 390, 391, 393, 398, 403, 407, 408, 409, 410, 411, 416, 421, 422, 424, 427, 428, 429, 430, 431, 435, 439, 440, 442, 445, 446, 447, 448, 449, 454, 458, 459, 462, 463, 464, 465, 483, 488, 489, 497, 500, 501, 502, 513, 517, 518, 526, 529, 531, 534, 535, 544, 546, 550, 558, 563, 564, 572, 577, 582, 588, 590, 598, 603, 616, 621, 623, 631, 636, 637, 646, 648, 656, 665, 667, 668, 670, 671, 674, 678, 680, 683, 684, 686, 688, 691, 692, 754, 755, 779, 791], "element_geometri": 463, "element_id": 755, "element_lists_to_intersect": 330, "element_loop": 332, "element_on": 323, "element_two": 323, "elementnod": [667, 668], "elements_held": 755, "encod": 784, "encompass": 779, "encount": 690, "end": [10, 20, 21, 30, 40, 41, 49, 59, 60, 67, 78, 79, 86, 97, 98, 105, 116, 117, 134, 135, 152, 153, 159, 169, 170, 176, 186, 187, 193, 204, 205, 211, 222, 223, 230, 240, 241, 248, 258, 259, 277, 278, 346, 348, 357, 358, 360, 480, 510, 541, 555, 569, 584, 599, 607, 612, 627, 643, 790], "end_point": 360, "endpoint": [357, 360], "enlarg": 285, "ensur": 582, "entail": [779, 784], "entir": 375, "entiti": 779, "entri": 784, "enum": [540, 583, 599, 642, 657, 709], "enumer": 47, "envelop": 442, "environ": [658, 659, 663, 664, 777, 779, 780, 785], "equal": [346, 607], "equival": [503, 591], "error": [0, 1, 294, 296, 297, 298, 351, 354, 378, 381, 407, 410, 427, 430, 445, 448, 461, 462, 463, 529, 690, 779, 784, 786, 791], "essenti": 466, "et": [464, 465], "et_el": 464, "etc": [346, 403, 744, 777, 779, 785], "eth": [776, 779], "event": 781, "everi": 790, "exactli": 607, "exampl": [22, 23, 42, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 285, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 670, 699, 717, 729, 739, 749, 760, 770, 779, 782, 784, 785, 794], "exceed": [288, 339, 546, 547], "except": [461, 462, 463, 671, 690], "exclud": [24, 25, 44, 45, 63, 64, 83, 84, 102, 103, 120, 121, 139, 140, 156, 157, 173, 174, 190, 191, 208, 209, 227, 228, 245, 246, 263, 264, 282, 283, 370, 371, 388, 389, 400, 401, 419, 420, 437, 438, 456, 457, 474, 475, 491, 492, 507, 508, 523, 524, 537, 538, 552, 553, 566, 567, 579, 580, 595, 596, 609, 610, 624, 625, 639, 640, 653, 654, 700, 701, 718, 719, 730, 731, 740, 741, 750, 751, 761, 762, 771, 772], "execut": [70, 709, 755, 777], "exist": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 615, 628, 629, 644, 666, 670, 685, 712, 725, 735, 745, 756, 766, 783], "expand": 779, "expect": [16, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272, 288, 584], "expected_kei": 584, "expens": 791, "explain": 782, "express": [665, 781], "extend": [49, 348, 358, 690, 790], "extens": [12, 32, 51, 52, 69, 70, 88, 107, 108, 125, 144, 161, 178, 179, 195, 213, 214, 232, 250, 268, 269, 348, 358, 365, 367, 386, 416, 435, 454, 690], "extra": 393, "extract": [785, 792], "extrus": 403, "fabric": [0, 393, 464, 467, 477, 480, 488, 494, 510, 526, 534, 535, 540, 541, 555, 563, 569, 583, 584, 585, 599, 600, 612, 627, 642, 643, 657, 776, 779, 782], "face": [20, 21, 23, 40, 41, 43, 49, 59, 60, 62, 78, 79, 82, 97, 98, 101, 116, 117, 119, 134, 135, 138, 152, 153, 155, 169, 170, 172, 186, 187, 189, 204, 205, 207, 222, 223, 226, 240, 241, 244, 258, 259, 262, 277, 278, 281, 346, 358, 368, 387, 399, 418, 436, 455, 466, 473, 490, 506, 510, 522, 536, 551, 565, 578, 582, 584, 594, 607, 608, 622, 638, 643, 652, 699, 717, 729, 739, 749, 760, 770, 790], "face_index": [20, 21, 40, 41, 59, 60, 78, 79, 97, 98, 116, 117, 134, 135, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 277, 278], "face_limited_back": 584, "face_limited_bottom": 584, "face_limited_end": 584, "face_limited_front": 584, "face_limited_start": 584, "face_limited_top": 584, "factor": [696, 697], "factori": 783, "fail": [497, 513, 588, 616, 631, 646], "fals": [15, 23, 24, 25, 28, 35, 43, 44, 45, 49, 54, 62, 63, 64, 72, 82, 83, 84, 91, 101, 102, 103, 110, 119, 120, 121, 128, 138, 139, 140, 147, 155, 156, 157, 164, 172, 173, 174, 181, 189, 190, 191, 198, 207, 208, 209, 216, 226, 227, 228, 235, 244, 245, 246, 253, 262, 263, 264, 271, 281, 282, 283, 288, 291, 301, 305, 314, 317, 339, 342, 353, 356, 368, 370, 371, 383, 387, 388, 389, 395, 399, 400, 401, 409, 412, 418, 419, 420, 429, 432, 436, 437, 438, 447, 450, 455, 456, 457, 470, 473, 474, 475, 484, 490, 491, 492, 494, 498, 506, 507, 508, 510, 514, 522, 523, 524, 530, 536, 537, 538, 545, 551, 552, 553, 559, 565, 566, 567, 573, 576, 578, 579, 580, 585, 589, 594, 595, 596, 604, 608, 609, 610, 617, 620, 622, 624, 625, 632, 635, 638, 639, 640, 643, 647, 651, 652, 653, 654, 677, 690, 699, 700, 701, 714, 717, 718, 719, 726, 729, 730, 731, 736, 739, 740, 741, 746, 749, 750, 751, 757, 760, 761, 762, 767, 770, 771, 772, 786, 791], "fast": 779, "fasten": [10, 13, 393, 462, 779], "fastenerapplicationerror": [1, 779], "fastenertimberinterfac": [10, 13, 779], "feasibl": 690, "featru": 230, "featur": [12, 13, 30, 32, 33, 52, 70, 89, 108, 125, 126, 142, 144, 145, 162, 179, 193, 196, 200, 214, 230, 233, 248, 251, 268, 269, 294, 307, 346, 349, 350, 353, 366, 367, 377, 386, 393, 398, 405, 406, 409, 415, 416, 426, 429, 435, 444, 447, 454, 461, 463, 480, 483, 494, 497, 499, 510, 513, 515, 529, 541, 544, 555, 558, 569, 572, 585, 588, 603, 607, 612, 616, 627, 631, 643, 646, 690, 779, 782, 785, 786, 791, 794], "feature_error": 294, "feature_geometri": 463, "featureapplicationerror": [1, 294, 483, 497, 513, 529, 544, 558, 572, 588, 603, 616, 631, 646, 779], "featuredefinit": 779, "fibr": [346, 782], "file": [18, 24, 38, 44, 57, 63, 75, 83, 94, 102, 113, 120, 131, 139, 150, 156, 167, 173, 184, 190, 202, 208, 219, 227, 238, 245, 256, 263, 274, 282, 361, 370, 384, 388, 396, 400, 413, 419, 433, 437, 452, 456, 471, 474, 477, 478, 479, 485, 491, 504, 507, 519, 523, 532, 537, 548, 552, 560, 566, 574, 579, 592, 595, 605, 609, 618, 624, 633, 639, 649, 653, 681, 700, 715, 718, 721, 722, 723, 727, 730, 737, 740, 747, 750, 758, 761, 768, 771, 781, 783, 787, 788], "file_nam": 477, "file_path": 479, "filepath": [18, 24, 38, 44, 57, 63, 75, 83, 94, 102, 113, 120, 131, 139, 150, 156, 167, 173, 184, 190, 202, 208, 219, 227, 238, 245, 256, 263, 274, 282, 361, 370, 384, 388, 396, 400, 413, 419, 433, 437, 452, 456, 471, 474, 485, 491, 504, 507, 519, 523, 532, 537, 548, 552, 560, 566, 574, 579, 592, 595, 605, 609, 618, 624, 633, 639, 649, 653, 681, 700, 715, 718, 722, 723, 727, 730, 737, 740, 747, 750, 758, 761, 768, 771], "filter": [683, 784], "filter_": 683, "final": 794, "find": [28, 285, 466, 680, 775, 785, 790], "find_neighboring_beam": 779, "first": [29, 86, 105, 142, 159, 193, 230, 248, 266, 286, 293, 357, 480, 488, 671, 686, 690, 790, 794], "fit": [193, 230, 248, 781], "fix": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766], "flag": 541, "flank": [193, 494, 503, 510, 521], "flank_angl": [193, 494, 503, 510, 521], "flip": [65, 67, 86, 123, 211, 266, 534, 790], "flip_lap_sid": [67, 86, 123, 211, 266, 790], "float": [10, 28, 29, 49, 67, 86, 123, 176, 193, 200, 211, 230, 248, 266, 285, 286, 288, 292, 299, 301, 306, 318, 319, 337, 339, 343, 346, 348, 351, 354, 358, 359, 360, 363, 378, 381, 393, 403, 407, 410, 427, 430, 445, 448, 464, 480, 494, 499, 503, 510, 515, 521, 526, 534, 535, 541, 547, 555, 569, 576, 585, 591, 612, 615, 627, 629, 643, 651, 665, 694, 695, 696, 697, 775], "flush": [786, 790], "follow": [1, 393, 781, 782, 783, 785, 790], "fom": 16, "forg": 780, "fork": 780, "form": 442, "format": [23, 24, 25, 43, 44, 45, 62, 63, 64, 82, 83, 84, 101, 102, 103, 119, 120, 121, 138, 139, 140, 155, 156, 157, 172, 173, 174, 189, 190, 191, 207, 208, 209, 226, 227, 228, 244, 245, 246, 262, 263, 264, 281, 282, 283, 368, 370, 371, 387, 388, 389, 399, 400, 401, 418, 419, 420, 436, 437, 438, 455, 456, 457, 465, 473, 474, 475, 477, 490, 491, 492, 506, 507, 508, 522, 523, 524, 536, 537, 538, 551, 552, 553, 565, 566, 567, 578, 579, 580, 594, 595, 596, 608, 609, 610, 622, 624, 625, 638, 639, 640, 652, 653, 654, 699, 700, 701, 717, 718, 719, 721, 729, 730, 731, 739, 740, 741, 749, 750, 751, 760, 761, 762, 770, 771, 772, 784], "found": 783, "foundat": 776, "four": [784, 790], "fragil": 534, "frame": [20, 21, 30, 40, 41, 59, 60, 78, 79, 97, 98, 116, 117, 134, 135, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 277, 278, 319, 346, 358, 375, 393, 403, 464, 466, 487, 500, 502, 503, 513, 516, 518, 521, 546, 562, 563, 590, 591, 620, 635, 646, 648, 651, 670, 755, 778, 779, 782, 785, 786, 794], "frame_depth": [319, 786], "framework": 779, "free": 781, "french": [541, 550], "frenchridgelap": [67, 779], "from": [18, 19, 23, 24, 25, 29, 38, 39, 43, 44, 45, 57, 58, 62, 63, 64, 75, 76, 82, 83, 84, 94, 95, 101, 102, 103, 113, 114, 119, 120, 121, 131, 132, 138, 139, 140, 150, 151, 155, 156, 157, 167, 168, 172, 173, 174, 184, 185, 189, 190, 191, 193, 202, 203, 207, 208, 209, 219, 220, 226, 227, 228, 238, 239, 244, 245, 246, 248, 256, 257, 262, 263, 264, 274, 275, 281, 282, 283, 319, 359, 360, 361, 362, 365, 366, 368, 370, 371, 375, 384, 385, 387, 388, 389, 393, 396, 397, 399, 400, 401, 413, 414, 415, 418, 419, 420, 433, 434, 436, 437, 438, 452, 453, 455, 456, 457, 466, 471, 472, 473, 474, 475, 477, 485, 486, 487, 488, 489, 490, 491, 492, 494, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 516, 517, 518, 519, 520, 521, 522, 523, 524, 532, 533, 534, 535, 536, 537, 538, 546, 547, 548, 549, 550, 551, 552, 553, 560, 561, 562, 563, 564, 565, 566, 567, 574, 575, 576, 577, 578, 579, 580, 582, 585, 590, 591, 592, 593, 594, 595, 596, 598, 605, 606, 608, 609, 610, 618, 619, 620, 621, 622, 623, 624, 625, 633, 634, 635, 636, 637, 638, 639, 640, 643, 648, 649, 650, 651, 652, 653, 654, 656, 659, 663, 670, 681, 682, 691, 693, 699, 700, 701, 715, 716, 717, 718, 719, 721, 722, 727, 728, 729, 730, 731, 737, 738, 739, 740, 741, 747, 748, 749, 750, 751, 758, 759, 760, 761, 762, 768, 769, 770, 771, 772, 777, 779, 781, 782, 783, 784, 785, 786, 788, 789, 790, 792], "from_obj": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 699, 717, 729, 739, 749, 760, 770], "front": 584, "full": 607, "fulli": 790, "fullnam": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766], "function": [9, 123, 285, 683, 782, 783], "furnish": 781, "furthest": [547, 786], "futur": 779, "g": [22, 29, 42, 777, 784], "gener": [10, 13, 16, 29, 230, 375, 393, 665, 683, 754, 783, 785, 786, 790, 794], "generated_el": 10, "geometr": [393, 779, 783, 789, 791], "geometri": [319, 346, 352, 353, 354, 355, 372, 373, 375, 378, 379, 380, 381, 382, 390, 391, 393, 403, 408, 409, 410, 411, 421, 422, 427, 428, 429, 430, 431, 439, 440, 445, 446, 447, 448, 449, 458, 459, 461, 463, 464, 483, 488, 497, 500, 501, 502, 513, 517, 518, 529, 531, 534, 535, 544, 546, 550, 558, 563, 564, 572, 577, 582, 588, 590, 598, 603, 616, 621, 623, 631, 635, 636, 637, 646, 648, 656, 675, 676, 694, 695, 697, 702, 706, 707, 755, 775, 779, 782, 785, 786, 789, 790, 791, 792, 793, 794], "geometry_typ": 778, "get": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 678, 683, 699, 717, 729, 739, 749, 760, 770, 780, 782, 784], "get_leaf_subclass": 779, "getcustomattribut": 784, "getstandardattribut": 784, "gettyp": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766], "ghenv": [658, 659, 663, 664], "ghpython": [0, 658, 659, 660, 661, 662, 663, 664, 779, 782], "ghuser": 780, "git": 780, "github": [776, 780], "given": [16, 28, 29, 36, 48, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272, 285, 288, 292, 293, 301, 302, 306, 318, 337, 339, 343, 357, 358, 360, 363, 364, 465, 466, 477, 479, 489, 500, 501, 502, 516, 517, 518, 546, 550, 564, 576, 577, 582, 590, 598, 621, 623, 636, 637, 648, 656, 684, 710, 784], "global": [337, 792], "go": 526, "goe": 393, "gonzalo": 776, "gramazio": [477, 776, 779, 781], "gramaziokohl": 776, "grant": 781, "graph": 671, "grasshopp": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 658, 659, 663, 664, 666, 712, 725, 735, 745, 756, 766, 777, 779, 780, 785, 790, 794], "group": [442, 667, 668, 669, 670, 680, 683, 685, 784], "group_nam": [683, 685], "groupnod": [667, 668, 669, 670], "grssshopper": 790, "guess_joint_topology_2beam": 779, "guid": [15, 24, 25, 35, 44, 45, 54, 63, 64, 72, 83, 84, 91, 102, 103, 110, 120, 121, 128, 139, 140, 147, 156, 157, 164, 173, 174, 181, 190, 191, 198, 208, 209, 216, 227, 228, 235, 245, 246, 248, 253, 263, 264, 271, 282, 283, 356, 370, 371, 383, 388, 389, 395, 400, 401, 412, 419, 420, 432, 437, 438, 450, 456, 457, 470, 474, 475, 484, 491, 492, 498, 507, 508, 514, 523, 524, 530, 537, 538, 545, 552, 553, 559, 566, 567, 573, 579, 580, 589, 595, 596, 604, 609, 610, 617, 624, 625, 632, 639, 640, 647, 653, 654, 677, 678, 700, 701, 714, 718, 719, 726, 730, 731, 736, 740, 741, 746, 750, 751, 757, 761, 762, 767, 771, 772, 779, 782, 785, 790], "ha": [18, 19, 38, 39, 57, 58, 70, 75, 76, 94, 95, 113, 114, 131, 132, 150, 151, 167, 168, 184, 185, 202, 203, 219, 220, 238, 239, 256, 257, 274, 275, 285, 361, 362, 384, 385, 396, 397, 413, 414, 433, 434, 452, 453, 461, 471, 472, 485, 486, 504, 505, 519, 520, 532, 533, 548, 549, 560, 561, 574, 575, 592, 593, 605, 606, 618, 619, 633, 634, 649, 650, 670, 681, 682, 715, 716, 727, 728, 737, 738, 747, 748, 755, 758, 759, 768, 769, 785, 790, 793], "half": 790, "halflap": 790, "handl": 779, "has_group": 670, "hash": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 699, 717, 729, 739, 749, 760, 770], "have": [15, 16, 35, 36, 54, 55, 67, 70, 72, 73, 91, 92, 110, 111, 128, 129, 142, 147, 148, 164, 165, 181, 182, 198, 199, 216, 217, 235, 236, 253, 254, 271, 272, 288, 301, 339, 346, 356, 383, 395, 403, 412, 432, 450, 470, 484, 498, 514, 530, 545, 559, 573, 589, 604, 617, 632, 647, 667, 677, 686, 714, 726, 736, 746, 757, 767, 785], "header": [319, 786, 790], "header_attribut": 783, "heel": [230, 243, 612, 627, 642], "heel_depth": [230, 243, 612, 620, 627, 635], "height": [193, 200, 230, 248, 319, 346, 359, 360, 464, 499, 503, 510, 515, 521, 591, 612, 615, 627, 629, 643, 651, 778, 784, 785, 786], "held": 755, "help": 786, "here": [393, 690, 783, 786, 787, 793], "hereaft": 790, "herebi": 781, "hexadecim": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 699, 717, 729, 739, 749, 760, 770], "hierarchi": [355, 382, 411, 431, 449, 665, 667, 794], "highest": 790, "highli": 790, "holder": 781, "hole": [67, 393, 541, 782], "horizont": [480, 541, 555, 569, 607], "hous": [503, 591], "how": [782, 790, 794], "http": [776, 780, 783], "human": [710, 755], "hybrid": 784, "i": [12, 14, 16, 18, 19, 20, 21, 22, 26, 28, 29, 30, 32, 34, 36, 38, 39, 40, 41, 42, 46, 49, 51, 52, 53, 55, 57, 58, 59, 60, 65, 66, 67, 69, 70, 73, 75, 76, 78, 79, 85, 86, 88, 89, 92, 94, 95, 97, 98, 104, 105, 107, 108, 109, 111, 113, 114, 116, 117, 122, 123, 125, 129, 131, 132, 134, 135, 141, 142, 144, 146, 148, 150, 151, 152, 153, 158, 159, 161, 162, 163, 165, 167, 168, 169, 170, 175, 176, 178, 179, 180, 182, 184, 185, 186, 187, 192, 193, 195, 196, 197, 199, 202, 203, 204, 205, 210, 211, 213, 214, 217, 219, 220, 222, 223, 229, 230, 232, 233, 236, 238, 239, 240, 241, 247, 248, 250, 251, 252, 254, 256, 257, 258, 259, 265, 266, 268, 269, 272, 274, 275, 277, 278, 284, 285, 288, 301, 319, 337, 339, 346, 348, 357, 358, 361, 362, 374, 375, 384, 385, 392, 393, 396, 397, 402, 403, 413, 414, 423, 424, 433, 434, 441, 442, 452, 453, 460, 471, 472, 476, 477, 483, 485, 486, 487, 489, 493, 494, 497, 500, 501, 502, 503, 504, 505, 509, 510, 513, 517, 518, 519, 520, 521, 525, 526, 532, 533, 534, 535, 539, 544, 546, 547, 548, 549, 550, 554, 558, 560, 561, 562, 564, 568, 569, 572, 574, 575, 576, 577, 581, 582, 585, 588, 590, 591, 592, 593, 597, 598, 599, 603, 605, 606, 607, 611, 616, 618, 619, 620, 621, 623, 626, 627, 631, 633, 634, 635, 636, 637, 641, 643, 646, 648, 649, 650, 651, 655, 656, 659, 663, 665, 667, 670, 674, 681, 682, 690, 702, 708, 711, 715, 716, 720, 727, 728, 733, 737, 738, 743, 747, 748, 753, 754, 758, 759, 764, 768, 769, 774, 776, 779, 781, 782, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794], "id": [467, 755, 777], "idea": 782, "identifi": [30, 285, 678], "ignor": [20, 21, 40, 41, 59, 60, 78, 79, 97, 98, 116, 117, 134, 135, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 277, 278], "ignore_end": [20, 21, 40, 41, 59, 60, 78, 79, 97, 98, 116, 117, 134, 135, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 277, 278], "imag": 793, "implement": [12, 14, 22, 30, 32, 34, 42, 53, 109, 125, 144, 146, 163, 180, 197, 252, 268, 375, 721, 775, 779, 790], "implemet": 721, "impli": [781, 791], "implicit": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766], "import": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 670, 690, 699, 717, 729, 739, 749, 760, 770, 783, 794], "inclin": [494, 510, 526, 555, 569, 585, 612, 627, 643], "inclination_1": 480, "inclination_2": 480, "includ": [353, 409, 429, 447, 477, 781, 783], "include_featur": [353, 409, 429, 447], "incorpor": 744, "increment": 755, "indent": [24, 25, 44, 45, 63, 64, 83, 84, 102, 103, 120, 121, 139, 140, 156, 157, 173, 174, 190, 191, 208, 209, 227, 228, 245, 246, 263, 264, 282, 283, 370, 371, 388, 389, 400, 401, 419, 420, 437, 438, 456, 457, 474, 475, 491, 492, 507, 508, 523, 524, 537, 538, 552, 553, 566, 567, 579, 580, 595, 596, 609, 610, 624, 625, 639, 640, 653, 654, 700, 701, 718, 719, 730, 731, 740, 741, 750, 751, 761, 762, 771, 772], "independ": [15, 35, 54, 72, 91, 110, 128, 147, 164, 181, 198, 216, 235, 253, 271, 356, 383, 395, 412, 432, 450, 470, 484, 498, 514, 530, 545, 559, 573, 589, 604, 617, 632, 647, 677, 714, 726, 736, 746, 757, 767], "index": [20, 21, 40, 41, 59, 60, 78, 79, 97, 98, 116, 117, 134, 135, 152, 153, 169, 170, 186, 187, 193, 204, 205, 222, 223, 240, 241, 248, 258, 259, 277, 278, 363, 364, 369, 466, 467, 487, 503, 521, 547, 562, 576, 591, 620, 635, 651, 658, 664, 779], "indic": [359, 360, 461, 541, 784, 785], "inflat": [285, 351, 354, 378, 381, 407, 410, 427, 430, 445, 448, 775], "inflate_bi": [285, 445, 448, 775], "inform": [294, 461, 779, 786, 791, 792, 793], "inherit": [10, 30, 49, 67, 86, 105, 123, 142, 159, 176, 193, 211, 230, 248, 266, 286, 299, 337, 346, 375, 393, 403, 424, 442, 467, 480, 494, 510, 526, 541, 555, 569, 585, 600, 612, 627, 643, 665, 711, 724, 734, 744, 755, 765, 779, 783], "initi": [193, 367, 386, 416, 435, 454], "inner": [20, 21, 40, 41, 59, 60, 78, 79, 97, 98, 116, 117, 134, 135, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 277, 278, 790], "input": [29, 285, 393, 658, 659, 663, 782, 783, 784, 785, 786, 788, 789, 790, 791], "input_nam": [663, 664], "insid": [319, 698, 777], "inspect": [294, 792], "instal": 779, "instanc": [10, 11, 16, 18, 19, 31, 36, 38, 39, 49, 50, 55, 57, 58, 67, 68, 73, 75, 76, 86, 87, 92, 94, 95, 105, 106, 111, 113, 114, 123, 124, 129, 131, 132, 142, 143, 148, 150, 151, 159, 160, 165, 167, 168, 176, 177, 182, 184, 185, 193, 194, 199, 202, 203, 211, 212, 217, 219, 220, 230, 231, 236, 238, 239, 248, 249, 254, 256, 257, 266, 267, 272, 274, 275, 314, 347, 361, 362, 376, 384, 385, 393, 394, 396, 397, 404, 413, 414, 425, 433, 434, 443, 452, 453, 468, 471, 472, 481, 483, 485, 486, 487, 489, 495, 497, 500, 501, 502, 503, 504, 505, 511, 513, 516, 517, 518, 519, 520, 521, 527, 531, 532, 533, 542, 544, 546, 547, 548, 549, 550, 556, 558, 560, 561, 562, 564, 570, 572, 574, 575, 576, 577, 582, 586, 588, 590, 591, 592, 593, 598, 601, 603, 605, 606, 607, 613, 615, 616, 618, 619, 620, 621, 623, 628, 629, 631, 633, 634, 635, 636, 637, 644, 646, 648, 649, 650, 651, 656, 666, 672, 681, 682, 712, 715, 716, 725, 727, 728, 735, 737, 738, 745, 747, 748, 756, 758, 759, 766, 768, 769, 777, 783], "instanti": [30, 70, 123, 424, 783], "instead": [16, 30, 534, 785], "instruct": [690, 709, 711, 734, 744, 755, 765, 779], "int": [48, 193, 230, 248, 346, 348, 363, 364, 365, 369, 403, 467, 480, 487, 503, 510, 521, 541, 547, 555, 562, 569, 576, 591, 612, 620, 627, 635, 643, 651, 659, 663, 664, 671, 710, 755], "integ": [193, 248, 346, 403], "intend": [784, 785], "interact": [30, 665, 671, 680, 686, 692, 777, 794], "interaction_typ": 680, "interest": 357, "interfac": [10, 393, 398, 779], "intersect": [27, 28, 29, 286, 288, 292, 299, 301, 306, 318, 337, 339, 343, 483, 529, 544, 558, 572, 603, 607], "introduct": 779, "intuit": 779, "invok": 780, "io": 658, "ironpython": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766], "is_beam": 424, "is_built": 755, "is_group_el": 424, "is_plan": 755, "is_plat": 424, "is_pocket": 576, "is_wal": 424, "issu": 534, "item_input_valid": 779, "iter": 690, "itersect": [497, 513, 588, 616, 631, 646], "its": [11, 20, 21, 24, 25, 31, 40, 41, 44, 45, 50, 59, 60, 63, 64, 68, 78, 79, 83, 84, 87, 97, 98, 102, 103, 106, 116, 117, 120, 121, 124, 134, 135, 139, 140, 143, 152, 153, 156, 157, 160, 169, 170, 173, 174, 177, 186, 187, 190, 191, 193, 194, 204, 205, 208, 209, 212, 222, 223, 227, 228, 231, 240, 241, 245, 246, 248, 249, 258, 259, 263, 264, 267, 277, 278, 282, 283, 347, 355, 359, 367, 370, 371, 376, 382, 386, 388, 389, 394, 400, 401, 404, 411, 416, 419, 420, 425, 431, 435, 437, 438, 443, 449, 454, 456, 457, 468, 474, 475, 481, 491, 492, 495, 507, 508, 511, 523, 524, 527, 537, 538, 542, 552, 553, 556, 566, 567, 570, 579, 580, 586, 595, 596, 601, 607, 609, 610, 613, 624, 625, 628, 639, 640, 644, 653, 654, 666, 678, 700, 701, 712, 718, 719, 725, 730, 731, 735, 740, 741, 745, 750, 751, 756, 761, 762, 766, 771, 772, 780, 784, 790], "jack": [319, 555, 563, 786], "jack_stud": [319, 786, 790], "jackraftercut": 779, "jo": [16, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272], "join": [10, 16, 30, 36, 49, 55, 67, 73, 86, 92, 105, 111, 123, 129, 142, 148, 159, 165, 176, 182, 193, 199, 211, 217, 230, 236, 248, 254, 266, 272, 292, 294, 299, 306, 309, 318, 343, 461, 786, 791], "joineri": 690, "joint": [10, 12, 13, 14, 16, 22, 27, 47, 49, 51, 52, 53, 55, 65, 67, 69, 70, 71, 73, 86, 88, 89, 90, 92, 105, 107, 108, 109, 111, 123, 125, 126, 127, 129, 142, 144, 145, 146, 148, 159, 161, 162, 163, 165, 176, 178, 179, 180, 182, 193, 195, 196, 197, 199, 211, 213, 214, 215, 217, 230, 232, 233, 234, 236, 243, 248, 250, 251, 252, 254, 266, 268, 269, 270, 272, 286, 288, 292, 294, 299, 306, 309, 318, 337, 343, 348, 365, 393, 442, 461, 462, 503, 521, 591, 612, 620, 627, 635, 651, 665, 672, 690, 693, 777, 779, 782, 783, 785, 786, 791, 794], "joint_error": 294, "joint_factori": 783, "joint_kei": [348, 365], "joint_overrid": 786, "joint_typ": [286, 299, 337], "jointdefinit": [292, 306, 318, 343, 779], "jointrul": [286, 292, 299, 306, 337, 343, 779, 791], "jointtopologi": [29, 286, 301, 337, 665, 779], "joist": 785, "json": [18, 19, 24, 25, 38, 39, 44, 45, 57, 58, 63, 64, 75, 76, 83, 84, 94, 95, 102, 103, 113, 114, 120, 121, 131, 132, 139, 140, 150, 151, 156, 157, 167, 168, 173, 174, 184, 185, 190, 191, 202, 203, 208, 209, 219, 220, 227, 228, 238, 239, 245, 246, 256, 257, 263, 264, 274, 275, 282, 283, 361, 362, 370, 371, 384, 385, 388, 389, 396, 397, 400, 401, 413, 414, 419, 420, 433, 434, 437, 438, 452, 453, 456, 457, 471, 472, 474, 475, 485, 486, 491, 492, 504, 505, 507, 508, 519, 520, 523, 524, 532, 533, 537, 538, 548, 549, 552, 553, 560, 561, 566, 567, 574, 575, 579, 580, 592, 593, 595, 596, 605, 606, 609, 610, 618, 619, 624, 625, 633, 634, 639, 640, 649, 650, 653, 654, 681, 682, 700, 701, 715, 716, 718, 719, 721, 722, 723, 727, 728, 730, 731, 737, 738, 740, 741, 747, 748, 750, 751, 758, 759, 761, 762, 768, 769, 771, 772], "just": 393, "k": 337, "kasir": 776, "keep": 790, "keep_connect": 663, "kei": [22, 30, 42, 346, 348, 365, 403, 464, 466, 584, 784], "keyword": [286, 299, 337, 669], "kick": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766], "kind": [781, 790], "king": [319, 786], "king_stud": [319, 786, 790], "kohler": [477, 776, 779, 781], "kwarg": [16, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272, 286, 299, 337, 488, 535, 563, 669], "l": [49, 67, 86, 105, 123, 248, 337, 345, 792], "l_default": 345, "lap": [67, 86, 123, 211, 266, 345, 541, 550, 779], "lapjoint": [67, 71, 86, 211, 266, 779], "larger": [346, 785, 790], "later": [193, 784, 785], "latest": 780, "latter": 785, "layer": 793, "lbuttjoint": 779, "lead": 569, "lead_angl": 569, "lead_angle_parallel": 569, "lead_inclin": 569, "lead_inclination_parallel": 569, "lement": [349, 377, 405, 426, 444], "length": [176, 193, 211, 248, 266, 319, 346, 359, 464, 494, 503, 510, 521, 569, 576, 585, 591, 607, 643, 651], "length_limited_bottom": [494, 510, 585, 643, 651], "length_limited_top": [510, 585, 643, 651], "less": [16, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272, 301, 346], "level": 790, "lfrenchridgelapjoint": 779, "li": [785, 793], "liabil": 781, "liabl": 781, "librari": [776, 777, 779, 782], "licens": 779, "lie": [16, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272], "like": [583, 779, 782, 791], "limit": [494, 510, 526, 569, 583, 584, 585, 627, 643, 651, 781], "limitation_top": 494, "limitationtoptyp": 779, "line": [319, 346, 359, 403, 534, 535, 779, 784, 785, 786, 789], "linear": [734, 785], "lineardimens": 779, "linecurv": 785, "link": 307, "lintel_post": 786, "list": [10, 16, 28, 30, 36, 55, 73, 92, 111, 123, 129, 148, 165, 182, 193, 199, 217, 236, 248, 254, 272, 285, 286, 292, 294, 299, 306, 314, 318, 319, 339, 343, 346, 349, 350, 357, 366, 377, 393, 405, 406, 415, 426, 444, 461, 462, 464, 487, 489, 500, 577, 663, 665, 668, 674, 680, 690, 755, 775, 783, 790, 792], "list_input_valid": 779, "liter": [540, 583, 599, 642, 657], "llapjoint": 779, "lmiterjoint": 779, "local": [346, 526, 785], "locat": [346, 755, 785], "log": [48, 710], "long": [346, 358], "long_edg": 346, "lower": 790, "lowest": 790, "ly": 789, "m": 780, "machin": [193, 248, 346, 489, 500, 501, 502, 516, 517, 518, 546, 550, 564, 569, 577, 582, 584, 590, 598, 621, 623, 636, 637, 648, 656, 783, 788], "machining_limit": 569, "machininglimit": 779, "made": [67, 193, 230, 248, 480, 494, 510, 534, 535, 541, 555, 569, 585, 612, 627, 643, 790], "mai": [1, 784, 791], "main": [10, 22, 29, 42, 49, 61, 65, 67, 81, 100, 118, 123, 137, 154, 159, 171, 176, 188, 193, 206, 211, 225, 230, 242, 248, 260, 280, 521, 591, 620, 635, 651, 790], "main_beam": [49, 67, 86, 123, 159, 176, 193, 211, 230, 248, 266, 576, 778], "main_beam_guid": 248, "maintain": 779, "major": [346, 785], "make": [11, 15, 31, 35, 50, 54, 68, 72, 87, 91, 106, 110, 124, 128, 143, 147, 160, 164, 177, 181, 194, 198, 212, 216, 231, 235, 249, 253, 267, 271, 347, 356, 376, 383, 393, 394, 395, 404, 412, 425, 432, 443, 450, 468, 470, 481, 484, 495, 498, 511, 514, 527, 530, 534, 542, 545, 556, 559, 570, 573, 586, 589, 601, 604, 607, 613, 617, 628, 632, 644, 647, 666, 677, 712, 714, 725, 726, 735, 736, 745, 746, 756, 757, 766, 767], "manage_dynamic_param": 779, "mani": [776, 777, 779], "map": [30, 782, 793], "mapsiz": 793, "margin": [494, 510, 585, 643], "mass": 665, "match": [71, 339, 466, 783, 790], "materi": [346, 403, 667, 673, 674, 687, 785, 793], "mathemat": 29, "max": 791, "max_dist": [28, 29, 286, 288, 292, 299, 301, 306, 318, 337, 339, 343, 344], "maxdist": 791, "maximum": [29, 286, 288, 292, 299, 301, 306, 318, 337, 339, 343], "mayb": 670, "meant": 9, "measur": 363, "meet": 790, "merchant": 781, "merg": 781, "mesh": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 352, 368, 379, 387, 399, 408, 409, 418, 428, 429, 436, 446, 447, 455, 473, 490, 506, 522, 536, 551, 565, 578, 582, 594, 608, 622, 638, 652, 699, 717, 729, 739, 749, 760, 770, 778], "messag": [462, 463], "method": [10, 11, 16, 22, 27, 29, 30, 31, 36, 42, 47, 49, 50, 51, 52, 55, 67, 68, 69, 70, 71, 73, 86, 87, 88, 89, 92, 105, 106, 107, 108, 111, 123, 124, 129, 142, 143, 148, 159, 160, 161, 162, 165, 176, 177, 178, 179, 182, 193, 194, 195, 196, 199, 211, 212, 213, 214, 217, 230, 231, 232, 233, 236, 248, 249, 250, 251, 254, 266, 267, 269, 272, 286, 294, 299, 307, 309, 313, 319, 337, 346, 347, 375, 376, 393, 394, 403, 404, 424, 425, 442, 443, 464, 467, 468, 477, 480, 481, 494, 495, 510, 511, 521, 526, 527, 541, 542, 555, 556, 569, 570, 576, 585, 586, 600, 601, 612, 613, 627, 628, 643, 644, 651, 665, 666, 690, 709, 711, 712, 721, 724, 725, 734, 735, 744, 745, 755, 756, 765, 766, 779, 783], "metric": 358, "middl": [346, 790], "midpoint": 346, "might": [782, 790], "mill": [49, 176, 497, 513, 588, 616, 631, 646], "mill_depth": [49, 176, 790], "mind": 783, "minim": [24, 25, 44, 45, 63, 64, 83, 84, 102, 103, 120, 121, 139, 140, 156, 157, 173, 174, 190, 191, 208, 209, 227, 228, 245, 246, 263, 264, 282, 283, 370, 371, 388, 389, 393, 400, 401, 419, 420, 437, 438, 456, 457, 474, 475, 491, 492, 507, 508, 523, 524, 537, 538, 552, 553, 566, 567, 579, 580, 595, 596, 609, 610, 624, 625, 639, 640, 653, 654, 700, 701, 718, 719, 730, 731, 740, 741, 750, 751, 761, 762, 771, 772], "minimum": 358, "misc": 776, "miss": 784, "mit": 781, "miter": [105, 345], "mm": 526, "mode": 780, "model": [0, 10, 16, 22, 36, 42, 49, 55, 61, 67, 70, 73, 81, 86, 92, 100, 105, 111, 118, 123, 129, 137, 142, 148, 154, 159, 165, 171, 176, 182, 188, 193, 199, 206, 211, 217, 225, 230, 236, 242, 248, 254, 260, 266, 272, 280, 319, 345, 346, 355, 380, 382, 393, 403, 411, 431, 449, 477, 478, 479, 665, 667, 668, 669, 670, 671, 672, 673, 674, 679, 684, 685, 687, 688, 689, 690, 691, 693, 698, 702, 709, 744, 754, 779, 782, 785, 788, 789, 794], "model3d": 779, "model_max_dist": [288, 301, 339], "model_to_xml": 479, "modifi": [463, 702, 781], "modify_cross": [49, 790], "modul": [1, 9, 779, 783], "more": [230, 350, 393, 406, 461, 779, 782, 783, 785, 790], "mortis": [230, 248, 494, 500, 501, 503, 627, 629, 636, 779], "mortise_height": [627, 629], "mortise_width": [627, 629], "most": [20, 21, 40, 41, 59, 60, 78, 79, 97, 98, 116, 117, 134, 135, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 277, 278], "move": 393, "multipl": [10, 299, 668, 777, 783], "must": [319, 480, 494, 510, 541, 555, 569, 585, 607, 612, 627, 643, 690, 786], "myenvnam": 780, "n": 780, "name": [307, 467, 477, 658, 661, 662, 663, 664, 669, 670, 683, 685, 783, 784, 792], "nation": 776, "nativ": [24, 25, 44, 45, 63, 64, 83, 84, 102, 103, 120, 121, 139, 140, 156, 157, 173, 174, 190, 191, 208, 209, 227, 228, 245, 246, 263, 264, 282, 283, 370, 371, 388, 389, 400, 401, 419, 420, 437, 438, 456, 457, 474, 475, 491, 492, 507, 508, 523, 524, 537, 538, 552, 553, 566, 567, 579, 580, 595, 596, 609, 610, 624, 625, 639, 640, 653, 654, 700, 701, 718, 719, 730, 731, 740, 741, 750, 751, 761, 762, 771, 772], "nccr": 776, "necessari": [51, 69, 70, 88, 107, 161, 178, 195, 213, 232, 250, 780, 783], "need": [307, 393, 783, 784, 794], "neighbor": [28, 285, 775], "neightbor": [28, 775], "neither": 674, "nest": [469, 482, 496, 512, 528, 543, 557, 571, 587, 602, 614, 630, 645], "net": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766], "new": [16, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272, 664, 780, 783, 785], "newlin": [24, 25, 44, 45, 63, 64, 83, 84, 102, 103, 120, 121, 139, 140, 156, 157, 173, 174, 190, 191, 208, 209, 227, 228, 245, 246, 263, 264, 282, 283, 370, 371, 388, 389, 400, 401, 419, 420, 437, 438, 456, 457, 474, 475, 491, 492, 507, 508, 523, 524, 537, 538, 552, 553, 566, 567, 579, 580, 595, 596, 609, 610, 624, 625, 639, 640, 653, 654, 700, 701, 718, 719, 730, 731, 740, 741, 750, 751, 761, 762, 771, 772], "node": [10, 667, 668, 669, 670], "non": 28, "none": [15, 29, 35, 54, 72, 91, 110, 128, 147, 164, 181, 198, 216, 230, 235, 243, 253, 271, 348, 349, 356, 359, 360, 365, 366, 372, 377, 383, 390, 393, 395, 403, 405, 412, 415, 417, 421, 426, 432, 439, 444, 450, 458, 470, 477, 484, 487, 498, 514, 530, 545, 559, 569, 573, 589, 604, 617, 632, 647, 658, 659, 663, 664, 667, 668, 669, 670, 671, 673, 674, 677, 683, 691, 692, 694, 695, 696, 697, 702, 703, 706, 714, 726, 736, 746, 757, 767, 785], "noninfring": 781, "normal": [20, 21, 40, 41, 59, 60, 78, 79, 97, 98, 116, 117, 134, 135, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 277, 278, 319, 346, 466, 521, 651], "notch": [193, 230, 627], "notch_limit": [627, 635], "notch_width": [627, 635], "note": [12, 32, 125, 144, 268, 285, 667, 776], "notic": 781, "now": 790, "null": 142, "nulljoint": 779, "number": [659, 663, 786, 794], "obb": [354, 381, 410, 430, 448], "obj": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 699, 717, 729, 739, 749, 755, 760, 770], "object": [11, 15, 16, 18, 19, 22, 24, 25, 26, 27, 28, 31, 35, 36, 38, 39, 42, 44, 45, 46, 47, 50, 54, 55, 57, 58, 63, 64, 66, 68, 72, 73, 75, 76, 83, 84, 85, 87, 91, 92, 94, 95, 102, 103, 104, 106, 110, 111, 113, 114, 120, 121, 122, 124, 128, 129, 131, 132, 139, 140, 141, 143, 147, 148, 150, 151, 156, 157, 158, 160, 164, 165, 167, 168, 173, 174, 175, 177, 181, 182, 184, 185, 190, 191, 192, 194, 198, 199, 202, 203, 208, 209, 210, 212, 216, 217, 219, 220, 227, 228, 229, 231, 235, 236, 238, 239, 245, 246, 247, 249, 253, 254, 256, 257, 263, 264, 265, 267, 271, 272, 274, 275, 282, 283, 284, 285, 294, 307, 309, 313, 319, 347, 356, 361, 362, 370, 371, 374, 376, 383, 384, 385, 388, 389, 392, 394, 395, 396, 397, 400, 401, 402, 404, 412, 413, 414, 419, 420, 423, 425, 432, 433, 434, 437, 438, 441, 443, 450, 452, 453, 456, 457, 460, 464, 468, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481, 484, 485, 486, 491, 492, 493, 495, 498, 504, 505, 507, 508, 509, 511, 514, 519, 520, 523, 524, 525, 527, 530, 531, 532, 533, 537, 538, 539, 540, 542, 545, 548, 549, 552, 553, 554, 556, 559, 560, 561, 566, 567, 568, 570, 573, 574, 575, 579, 580, 581, 583, 584, 586, 589, 592, 593, 595, 596, 597, 599, 601, 604, 605, 606, 609, 610, 611, 613, 617, 618, 619, 624, 625, 626, 628, 632, 633, 634, 639, 640, 641, 642, 644, 647, 649, 650, 653, 654, 655, 657, 658, 659, 663, 664, 665, 666, 671, 672, 677, 681, 682, 693, 700, 701, 708, 709, 712, 714, 715, 716, 718, 719, 720, 721, 725, 726, 727, 728, 730, 731, 733, 735, 736, 737, 738, 740, 741, 743, 745, 746, 747, 748, 750, 751, 753, 754, 756, 757, 758, 759, 761, 762, 764, 766, 767, 768, 769, 771, 772, 774, 779, 784, 785, 786, 791, 793], "obtain": 781, "occ": 779, "occur": [294, 461, 690, 792], "offset": [351, 354, 378, 381, 407, 410, 427, 430, 445, 448, 503, 521, 591, 651, 786], "often": 442, "onc": [346, 403, 785], "one": [20, 21, 40, 41, 59, 60, 71, 78, 79, 86, 97, 98, 116, 117, 123, 134, 135, 152, 153, 159, 169, 170, 186, 187, 193, 204, 205, 211, 222, 223, 230, 240, 241, 248, 258, 259, 266, 277, 278, 293, 350, 406, 466, 607, 671, 674, 754, 755, 783, 785, 790, 792], "onli": [12, 14, 22, 32, 34, 42, 53, 67, 109, 125, 144, 146, 163, 180, 197, 252, 268, 288, 301, 339, 353, 409, 429, 447, 690, 784], "onto": 786, "open": [776, 779], "opencascad": 779, "oper": [789, 791], "oppedg": [540, 541], "oppos": 364, "opposit": [49, 540, 790], "option": [12, 14, 15, 20, 21, 23, 24, 25, 28, 29, 32, 34, 35, 40, 41, 43, 44, 45, 53, 54, 59, 60, 62, 63, 64, 72, 78, 79, 82, 83, 84, 91, 97, 98, 101, 102, 103, 109, 110, 116, 117, 119, 120, 121, 125, 128, 134, 135, 138, 139, 140, 144, 146, 147, 152, 153, 155, 156, 157, 163, 164, 169, 170, 172, 173, 174, 180, 181, 186, 187, 189, 190, 191, 193, 197, 198, 204, 205, 207, 208, 209, 216, 222, 223, 226, 227, 228, 235, 240, 241, 244, 245, 246, 252, 253, 258, 259, 262, 263, 264, 268, 271, 277, 278, 281, 282, 283, 285, 286, 288, 292, 299, 301, 306, 318, 319, 337, 339, 343, 346, 351, 353, 356, 368, 370, 371, 378, 383, 387, 388, 389, 393, 395, 399, 400, 401, 403, 407, 409, 412, 418, 419, 420, 427, 429, 432, 436, 437, 438, 445, 447, 450, 455, 456, 457, 470, 473, 474, 475, 477, 484, 487, 490, 491, 492, 498, 503, 506, 507, 508, 514, 521, 522, 523, 524, 530, 536, 537, 538, 545, 547, 551, 552, 553, 559, 562, 565, 566, 567, 569, 573, 576, 578, 579, 580, 589, 591, 594, 595, 596, 604, 608, 609, 610, 617, 620, 622, 624, 625, 632, 635, 638, 639, 640, 647, 651, 652, 653, 654, 659, 663, 667, 668, 669, 670, 671, 674, 677, 683, 690, 692, 694, 695, 696, 697, 699, 700, 701, 714, 717, 718, 719, 726, 729, 730, 731, 736, 739, 740, 741, 746, 749, 750, 751, 757, 760, 761, 762, 767, 770, 771, 772, 785, 794], "order": [29, 285, 293, 307, 339, 754], "orient": [319, 354, 359, 360, 381, 410, 430, 448, 480, 510, 541, 555, 569, 582, 599, 607, 612, 627, 643, 676, 793], "orientationtyp": [480, 510, 541, 555, 569, 612, 627, 643, 779], "origin": [15, 35, 54, 72, 91, 110, 128, 147, 164, 181, 198, 216, 235, 253, 271, 346, 356, 383, 395, 412, 432, 450, 470, 484, 498, 514, 530, 545, 559, 573, 589, 604, 617, 632, 647, 677, 694, 695, 714, 726, 736, 746, 757, 767, 785, 793], "orthogon": [20, 40, 59, 78, 97, 116, 134, 152, 169, 186, 204, 222, 240, 258, 277], "other": [11, 20, 21, 31, 40, 41, 50, 59, 60, 67, 68, 78, 79, 86, 87, 97, 98, 106, 116, 117, 123, 124, 134, 135, 143, 152, 153, 159, 160, 169, 170, 177, 186, 187, 193, 194, 204, 205, 211, 212, 222, 223, 230, 231, 240, 241, 248, 249, 258, 259, 266, 267, 277, 278, 311, 347, 376, 394, 404, 424, 425, 442, 443, 468, 481, 495, 511, 527, 542, 547, 556, 570, 586, 601, 613, 628, 644, 666, 670, 712, 725, 735, 745, 756, 766, 776, 781, 790, 794], "other_beam": 547, "otherwis": [29, 49, 288, 301, 314, 339, 526, 781, 785], "out": 781, "outer": 790, "outlin": [393, 403, 417], "outline_point": 393, "output": [11, 24, 25, 29, 31, 44, 45, 50, 63, 64, 68, 83, 84, 87, 102, 103, 106, 120, 121, 124, 139, 140, 143, 156, 157, 160, 173, 174, 177, 190, 191, 194, 208, 209, 212, 227, 228, 231, 245, 246, 249, 263, 264, 267, 282, 283, 347, 370, 371, 376, 388, 389, 394, 400, 401, 404, 419, 420, 425, 437, 438, 443, 456, 457, 468, 474, 475, 481, 491, 492, 495, 507, 508, 511, 523, 524, 527, 537, 538, 542, 552, 553, 556, 566, 567, 570, 579, 580, 586, 595, 596, 601, 609, 610, 613, 624, 625, 628, 639, 640, 644, 653, 654, 658, 666, 700, 701, 712, 718, 719, 725, 730, 731, 735, 740, 741, 745, 750, 751, 756, 761, 762, 766, 771, 772, 785, 786, 788, 789, 791], "over": 393, "overal": 782, "overlai": 765, "overlap": 790, "overrid": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 337, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766, 786], "overwrit": [790, 794], "own": [721, 790], "packag": [779, 780, 783], "pair": [28, 29, 285, 775, 784], "panel": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 319, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766], "panel_height": 319, "panel_length": 319, "parallel": [363, 569, 576, 607, 755, 785, 790], "param": [661, 662], "paramet": [10, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 72, 73, 75, 76, 78, 79, 82, 83, 84, 85, 86, 91, 92, 94, 95, 97, 98, 101, 102, 103, 104, 105, 110, 111, 113, 114, 116, 117, 119, 120, 121, 122, 123, 128, 129, 131, 132, 134, 135, 138, 139, 140, 141, 142, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 159, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 216, 217, 219, 220, 222, 223, 226, 227, 228, 229, 230, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 248, 253, 254, 256, 257, 258, 259, 262, 263, 264, 265, 266, 271, 272, 274, 275, 277, 278, 281, 282, 283, 284, 285, 286, 288, 292, 293, 299, 301, 306, 314, 318, 319, 337, 339, 343, 346, 349, 350, 351, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 381, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 405, 406, 407, 409, 410, 412, 413, 414, 415, 418, 419, 420, 421, 422, 423, 426, 427, 429, 430, 432, 433, 434, 436, 437, 438, 439, 440, 441, 444, 445, 447, 448, 450, 452, 453, 455, 456, 457, 458, 459, 460, 464, 465, 466, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 714, 715, 716, 717, 718, 719, 720, 722, 723, 726, 727, 728, 729, 730, 731, 733, 736, 737, 738, 739, 740, 741, 743, 746, 747, 748, 749, 750, 751, 753, 754, 757, 758, 759, 760, 761, 762, 764, 767, 768, 769, 770, 771, 772, 774, 775, 783, 784, 793], "parametr": [346, 369, 480, 494, 510, 521, 541, 555, 569, 585, 612, 627, 643, 651, 779], "parent": [667, 668, 669, 670], "pars": 721, "part": [22, 42, 464, 546, 547, 667, 674, 775, 779, 783, 785, 789], "particular": 781, "pass": [16, 286, 299, 337, 358], "path": [18, 24, 38, 44, 57, 63, 75, 83, 94, 102, 113, 120, 131, 139, 150, 156, 167, 173, 184, 190, 202, 208, 219, 227, 238, 245, 256, 263, 274, 282, 361, 370, 384, 388, 396, 400, 413, 419, 433, 437, 452, 456, 471, 474, 477, 479, 485, 491, 504, 507, 519, 523, 532, 537, 548, 552, 560, 566, 574, 579, 592, 595, 605, 609, 618, 624, 633, 639, 649, 653, 681, 700, 715, 718, 722, 723, 727, 730, 737, 740, 747, 750, 758, 761, 768, 771, 788], "pdf": 783, "per": 754, "perhap": 393, "permanent_param_count": [659, 663], "permiss": 781, "permit": 781, "perpendicular": [363, 393, 785], "person": 781, "pip": 780, "place": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 702, 712, 725, 735, 745, 756, 766, 790], "plan": [0, 709, 711, 721, 722, 723, 724, 734, 744, 754, 755, 765, 779], "plana": 635, "planar": [319, 369, 782, 786, 790], "plane": [49, 105, 358, 483, 487, 488, 489, 497, 503, 521, 529, 544, 547, 558, 562, 563, 564, 572, 576, 577, 588, 591, 603, 607, 616, 620, 621, 631, 635, 637, 648, 651, 785, 789, 790, 793], "plane_a": 488, "plane_b": 488, "plate": [319, 393, 424, 665, 779, 786, 791], "pleas": [10, 49, 67, 86, 105, 123, 142, 159, 176, 193, 211, 230, 248, 266, 776], "pln": 358, "plug": 779, "pluggabl": 285, "plugin": [285, 779], "plywood": 403, "pocket": [49, 176, 494, 576, 583], "point": [346, 351, 354, 357, 360, 378, 381, 393, 407, 410, 427, 430, 445, 448, 465, 494, 510, 526, 534, 585, 643, 665, 694, 695, 779, 790, 793], "point_end": 360, "point_start": 360, "polylin": [331, 393, 403], "portion": 781, "posit": [193, 248, 346, 355, 382, 411, 431, 449, 464, 540, 541, 789], "possibl": [47, 307, 784], "post": 319, "prefabr": 442, "prehap": 393, "presenc": [612, 627], "present": [777, 790], "pretti": [24, 25, 44, 45, 63, 64, 83, 84, 102, 103, 120, 121, 139, 140, 156, 157, 173, 174, 190, 191, 208, 209, 227, 228, 245, 246, 263, 264, 282, 283, 370, 371, 388, 389, 400, 401, 419, 420, 437, 438, 456, 457, 474, 475, 491, 492, 507, 508, 523, 524, 537, 538, 552, 553, 566, 567, 579, 580, 595, 596, 609, 610, 624, 625, 639, 640, 653, 654, 700, 701, 718, 719, 730, 731, 740, 741, 750, 751, 761, 762, 771, 772], "prevent": 790, "preview": 792, "princip": 547, "print": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766], "prior": 775, "priorit": 65, "prioriti": [467, 755, 790], "process": [70, 193, 248, 292, 306, 307, 318, 343, 346, 464, 467, 483, 488, 497, 513, 526, 529, 534, 535, 544, 558, 563, 572, 588, 603, 616, 631, 646, 690, 779, 782, 783, 794], "process_id": 467, "process_joineri": 70, "process_param": 783, "process_typ": 783, "processing_nam": 467, "produc": 346, "product": [20, 21, 40, 41, 59, 60, 78, 79, 97, 98, 116, 117, 134, 135, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 277, 278], "programm": 776, "project": [776, 779], "proper": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766], "properli": [10, 49, 67, 86, 105, 123, 142, 159, 176, 193, 211, 230, 248, 266], "provid": [27, 243, 261, 314, 607, 667, 670, 674, 721, 781, 782, 785, 791], "publish": 781, "purpos": 781, "put": [393, 464], "py": 783, "python": [777, 779, 780, 782], "queri": [683, 685], "r": [28, 285, 780], "radian": [694, 695], "radiu": [193, 248, 494, 503, 510, 521, 585, 591, 643, 651, 657], "rafter": [555, 563, 785], "rais": [1, 12, 14, 16, 18, 19, 32, 33, 34, 36, 38, 39, 51, 53, 55, 57, 58, 69, 71, 73, 75, 76, 88, 90, 92, 94, 95, 107, 109, 111, 113, 114, 125, 126, 127, 129, 131, 132, 144, 146, 148, 150, 151, 161, 163, 165, 167, 168, 178, 180, 182, 184, 185, 195, 197, 199, 202, 203, 213, 215, 217, 219, 220, 232, 234, 236, 238, 239, 250, 252, 254, 256, 257, 268, 270, 272, 274, 275, 361, 362, 384, 385, 396, 397, 413, 414, 433, 434, 452, 453, 462, 463, 471, 472, 483, 485, 486, 497, 504, 505, 513, 519, 520, 529, 532, 533, 544, 548, 549, 558, 560, 561, 572, 574, 575, 588, 592, 593, 603, 605, 606, 616, 618, 619, 631, 633, 634, 646, 649, 650, 667, 670, 671, 674, 681, 682, 690, 715, 716, 727, 728, 737, 738, 747, 748, 758, 759, 768, 769], "random": 793, "rather": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 699, 717, 729, 739, 749, 760, 770], "ratio": 793, "raw": [26, 46, 66, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 284, 374, 392, 402, 423, 441, 460, 476, 493, 509, 525, 539, 554, 568, 581, 597, 611, 626, 641, 655, 708, 720, 733, 743, 753, 764, 774, 785], "reason": 690, "recogn": 792, "rectangular": [346, 785], "reder": [494, 510, 585, 643], "ref_edg": 346, "ref_fram": 346, "ref_posit": 541, "ref_sid": [346, 503, 521, 591, 620, 635, 651], "ref_side_index": [363, 467, 487, 503, 521, 547, 562, 576, 591, 620, 635, 651], "refedg": [540, 541], "refer": [22, 42, 61, 81, 100, 118, 137, 154, 171, 188, 206, 225, 242, 260, 280, 346, 363, 364, 369, 442, 466, 467, 480, 487, 494, 503, 510, 521, 526, 534, 540, 541, 547, 555, 562, 569, 576, 585, 591, 612, 620, 627, 635, 643, 651, 779, 782, 783, 784], "referenc": [785, 786], "regard": [285, 503, 591], "register_joint": 783, "reject": 49, "reject_i": [49, 790], "relat": [294, 442, 521, 651, 783], "remain": 790, "remov": [348, 365, 366, 367, 386, 415, 416, 435, 454, 691, 692, 693, 784, 789, 790], "renam": [663, 664], "rename_count": 663, "rename_gh_input": 779, "render": [782, 793], "repositori": 780, "repres": [10, 49, 67, 86, 105, 159, 176, 193, 211, 230, 248, 266, 346, 375, 393, 403, 442, 464, 477, 480, 494, 510, 526, 541, 555, 569, 585, 612, 627, 643, 665, 671, 709, 785], "represent": [11, 24, 25, 31, 44, 45, 48, 50, 63, 64, 68, 83, 84, 87, 102, 103, 106, 120, 121, 124, 139, 140, 143, 156, 157, 160, 173, 174, 177, 190, 191, 194, 208, 209, 212, 227, 228, 231, 245, 246, 249, 263, 264, 267, 282, 283, 347, 370, 371, 376, 388, 389, 393, 394, 400, 401, 404, 419, 420, 425, 437, 438, 443, 456, 457, 468, 474, 475, 481, 491, 492, 495, 507, 508, 511, 523, 524, 527, 537, 538, 542, 552, 553, 556, 566, 567, 570, 579, 580, 586, 595, 596, 601, 609, 610, 613, 624, 625, 628, 639, 640, 644, 653, 654, 666, 700, 701, 710, 712, 718, 719, 725, 730, 731, 735, 740, 741, 745, 750, 751, 756, 761, 762, 766, 771, 772, 783], "request": 369, "requir": [12, 14, 32, 34, 52, 53, 89, 108, 109, 125, 144, 146, 162, 163, 179, 180, 196, 197, 214, 233, 251, 252, 268, 269, 307, 348, 365, 780], "requr": 783, "research": [477, 776, 779, 781], "resolv": 779, "respect": [22, 30, 42], "respons": [16, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272, 393], "restor": [22, 42, 61, 81, 100, 118, 137, 154, 171, 188, 206, 225, 242, 260, 280], "restrict": 781, "result": [20, 21, 40, 41, 59, 60, 78, 79, 97, 98, 116, 117, 134, 135, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 277, 278, 357, 393, 483, 497, 513, 529, 544, 558, 572, 588, 603, 616, 631, 646, 754, 785, 786], "rethink": 375, "retriev": [678, 784], "return": [15, 16, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 35, 36, 38, 39, 40, 41, 43, 45, 46, 48, 54, 55, 57, 58, 59, 60, 62, 64, 66, 72, 73, 75, 76, 78, 79, 82, 84, 85, 91, 92, 94, 95, 97, 98, 101, 103, 104, 110, 111, 113, 114, 116, 117, 119, 121, 122, 128, 129, 131, 132, 134, 135, 138, 140, 141, 147, 148, 150, 151, 152, 153, 155, 157, 158, 164, 165, 167, 168, 169, 170, 172, 174, 175, 181, 182, 184, 185, 186, 187, 189, 191, 192, 198, 199, 202, 203, 204, 205, 207, 209, 210, 216, 217, 219, 220, 222, 223, 226, 228, 229, 235, 236, 238, 239, 240, 241, 244, 246, 247, 253, 254, 256, 257, 258, 259, 262, 264, 265, 271, 272, 274, 275, 277, 278, 281, 283, 284, 285, 288, 292, 293, 301, 302, 306, 312, 314, 318, 339, 343, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 368, 369, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 389, 390, 391, 392, 393, 395, 396, 397, 399, 401, 402, 405, 407, 408, 409, 410, 411, 412, 413, 414, 418, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 455, 457, 458, 459, 460, 465, 466, 470, 471, 472, 473, 475, 476, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 497, 498, 500, 501, 502, 503, 504, 505, 506, 508, 509, 513, 514, 517, 518, 519, 520, 521, 522, 524, 525, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 603, 604, 605, 606, 607, 608, 610, 611, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 658, 659, 663, 664, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 690, 691, 692, 694, 695, 696, 697, 699, 701, 702, 703, 704, 705, 706, 707, 708, 710, 714, 715, 716, 717, 719, 720, 722, 726, 727, 728, 729, 731, 733, 736, 737, 738, 739, 741, 743, 746, 747, 748, 749, 751, 753, 757, 758, 759, 760, 762, 764, 767, 768, 769, 770, 772, 774, 775], "revers": 339, "rhino": [0, 11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 285, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766, 775, 777, 779, 780, 784, 785, 790, 793], "rhinocero": 779, "rhinocommon": 779, "rhinocurv": 403, "ridg": [67, 541, 550], "right": [363, 781, 790], "robot": [710, 755], "role": [22, 29, 42, 293], "root": [667, 668], "rotat": [193, 248, 510, 521, 526, 643, 651, 696, 697, 706, 707, 785], "round": [193, 248, 494, 510, 585, 643, 657], "rs1": [467, 487, 503, 521, 547, 562, 576, 591, 620, 635, 651], "rs6": 467, "rtree": [28, 775], "rule": [286, 288, 289, 290, 291, 292, 299, 301, 303, 304, 305, 306, 314, 315, 316, 317, 318, 319, 337, 339, 340, 341, 342, 343, 779, 782, 785, 786, 791, 794], "run": [777, 779], "sai": 785, "same": [15, 29, 35, 49, 54, 67, 72, 91, 110, 128, 147, 164, 181, 198, 216, 235, 253, 271, 356, 363, 383, 395, 412, 432, 450, 470, 484, 498, 514, 530, 545, 559, 573, 589, 604, 617, 632, 647, 670, 677, 714, 726, 736, 746, 754, 755, 757, 767], "save": [24, 25, 44, 45, 61, 63, 64, 81, 83, 84, 100, 102, 103, 118, 120, 121, 137, 139, 140, 154, 156, 157, 171, 173, 174, 188, 190, 191, 206, 208, 209, 225, 227, 228, 242, 245, 246, 260, 263, 264, 280, 282, 283, 370, 371, 388, 389, 400, 401, 419, 420, 437, 438, 456, 457, 474, 475, 491, 492, 507, 508, 523, 524, 537, 538, 552, 553, 566, 567, 579, 580, 595, 596, 609, 610, 624, 625, 639, 640, 653, 654, 700, 701, 718, 719, 730, 731, 740, 741, 750, 751, 761, 762, 771, 772, 788], "scale": [694, 695, 706, 707, 793], "schema": [18, 19, 26, 38, 39, 46, 57, 58, 66, 75, 76, 85, 94, 95, 104, 113, 114, 122, 131, 132, 141, 150, 151, 158, 167, 168, 175, 184, 185, 192, 202, 203, 210, 219, 220, 229, 238, 239, 247, 256, 257, 265, 274, 275, 284, 361, 362, 374, 384, 385, 392, 396, 397, 402, 413, 414, 423, 433, 434, 441, 452, 453, 460, 471, 472, 476, 485, 486, 493, 504, 505, 509, 519, 520, 525, 532, 533, 539, 548, 549, 554, 560, 561, 568, 574, 575, 581, 592, 593, 597, 605, 606, 611, 618, 619, 626, 633, 634, 641, 649, 650, 655, 681, 682, 708, 715, 716, 720, 727, 728, 733, 737, 738, 743, 747, 748, 753, 758, 759, 764, 768, 769, 774], "scienc": 776, "screw": [375, 744], "sdk": 779, "search": [28, 285], "second": [29, 86, 105, 142, 159, 193, 230, 248, 266, 286, 293, 357, 480, 488, 671, 686, 690], "section": [49, 65, 346, 359, 360, 777, 782, 785, 786, 790], "secur": 790, "see": [1, 22, 42, 665, 782, 785, 787, 789, 790, 793], "seem": 393, "select": [786, 790, 792], "self": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766, 783], "sell": 781, "semant": 779, "sens": 393, "sensit": 29, "separ": [16, 784], "sequenc": [690, 754, 779], "sequenti": 790, "serial": [22, 42, 61, 81, 100, 118, 137, 154, 171, 188, 206, 225, 242, 260, 280, 721], "serv": [442, 793], "session": 777, "set": [28, 193, 243, 261, 285, 288, 301, 337, 339, 584, 686, 775, 784, 785, 786, 790, 791], "set_default_joint": 779, "setcustomattribut": 784, "setstandardattribut": 784, "shall": [309, 670, 781], "shape": [193, 230, 248, 346, 393, 403, 494, 503, 510, 521, 563, 585, 591, 612, 627, 642, 643, 651, 657], "shape_radiu": [193, 248, 494, 503, 510, 521, 585, 591, 643, 651], "sheet": 786, "sheeting_insid": 786, "sheeting_outsid": 786, "shift": [86, 123, 211, 266, 790], "shorten": 790, "should": [12, 14, 22, 30, 32, 33, 34, 42, 53, 86, 109, 123, 125, 126, 144, 146, 163, 180, 197, 211, 252, 266, 268, 285, 307, 348, 358, 363, 375, 393, 424, 461, 487, 494, 503, 521, 541, 562, 591, 620, 635, 651, 659, 663, 667, 783, 790], "shouldn": 142, "show": [779, 782], "side": [67, 86, 123, 211, 266, 346, 363, 364, 369, 466, 467, 480, 487, 494, 503, 510, 521, 526, 534, 541, 547, 555, 562, 569, 576, 585, 591, 607, 612, 620, 627, 635, 643, 651, 786, 789, 790], "side_index": [364, 369], "sill": [319, 786, 790], "similar": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766, 790], "simpl": [754, 779, 782], "simplesequencegener": 779, "sinc": [22, 42, 690], "singl": [442, 755, 783], "size": [785, 793], "slat": 346, "slope": [494, 569, 585], "slot": 779, "small": 607, "small_beam_butt": [49, 65, 790], "smaller": [49, 65, 346, 785], "so": [781, 783], "softwar": [779, 781], "solid": [346, 393, 791], "some": [393, 782, 793], "somewher": 266, "sort": 293, "sourc": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 779, 784, 785], "space": [319, 480, 494, 510, 521, 541, 555, 569, 585, 612, 627, 643, 651, 786], "spatial": [355, 382, 411, 431, 449], "specialist": 779, "specif": [22, 29, 42, 680, 687, 779, 783, 785, 786, 790], "specifi": [607, 678, 786], "squar": [193, 248, 494, 510, 585, 643, 657], "stage": 779, "standard": [346, 786], "start": [193, 248, 346, 348, 357, 358, 360, 480, 494, 503, 510, 521, 526, 541, 555, 569, 584, 585, 591, 599, 612, 627, 643, 651, 782, 785], "start_depth": [193, 248, 494, 503, 510, 521, 555, 585, 591, 643, 651], "start_i": [193, 248, 480, 494, 510, 521, 526, 555, 569, 585, 627, 635, 643, 651], "start_x": [480, 494, 510, 526, 541, 555, 569, 585, 612, 627, 643], "state": [367, 386, 416, 435, 454], "static": [20, 21, 40, 41, 59, 60, 78, 79, 97, 98, 116, 117, 134, 135, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 277, 278, 289, 290, 291, 292, 303, 304, 305, 306, 315, 316, 317, 318, 340, 341, 342, 343], "step": [230, 243, 497, 513, 588, 612, 616, 627, 631, 642, 646, 711, 713, 754, 779, 783], "step_depth": [230, 243, 612, 620, 627, 635], "step_shap": [230, 612, 627], "stepjoint": 779, "stepjointnotch": [615, 779], "stepshapetyp": [627, 779], "still": 28, "stock": [346, 785], "stop_on_first_error": 690, "store": [22, 42, 784, 785], "str": [18, 19, 23, 24, 25, 30, 38, 39, 43, 44, 45, 48, 57, 58, 62, 63, 64, 75, 76, 82, 83, 84, 94, 95, 101, 102, 103, 113, 114, 119, 120, 121, 131, 132, 138, 139, 140, 150, 151, 155, 156, 157, 167, 168, 172, 173, 174, 184, 185, 189, 190, 191, 202, 203, 207, 208, 209, 219, 220, 226, 227, 228, 238, 239, 244, 245, 246, 248, 256, 257, 262, 263, 264, 274, 275, 281, 282, 283, 286, 357, 361, 362, 368, 370, 371, 384, 385, 387, 388, 389, 396, 397, 399, 400, 401, 413, 414, 418, 419, 420, 433, 434, 436, 437, 438, 452, 453, 455, 456, 457, 461, 462, 463, 464, 466, 467, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 490, 491, 492, 494, 503, 504, 505, 506, 507, 508, 510, 519, 520, 521, 522, 523, 524, 532, 533, 536, 537, 538, 548, 549, 551, 552, 553, 560, 561, 565, 566, 567, 574, 575, 578, 579, 580, 585, 591, 592, 593, 594, 595, 596, 605, 606, 608, 609, 610, 612, 618, 619, 622, 624, 625, 627, 633, 634, 638, 639, 640, 643, 649, 650, 651, 652, 653, 654, 658, 663, 664, 669, 670, 678, 681, 682, 683, 685, 699, 700, 701, 710, 715, 716, 717, 718, 719, 722, 723, 727, 728, 729, 730, 731, 737, 738, 739, 740, 741, 747, 748, 749, 750, 751, 755, 758, 759, 760, 761, 762, 768, 769, 770, 771, 772], "straight": [534, 785], "string": [11, 19, 25, 31, 39, 45, 48, 50, 58, 64, 68, 76, 84, 87, 95, 103, 106, 114, 121, 124, 132, 140, 143, 151, 157, 160, 168, 174, 177, 185, 191, 194, 203, 209, 212, 220, 228, 231, 239, 246, 249, 257, 264, 267, 275, 283, 347, 362, 371, 376, 385, 389, 394, 397, 401, 404, 414, 420, 425, 434, 438, 443, 453, 457, 461, 468, 472, 475, 478, 479, 481, 486, 492, 495, 505, 508, 511, 520, 524, 527, 533, 538, 542, 549, 553, 556, 561, 567, 570, 575, 580, 586, 593, 596, 601, 606, 610, 613, 619, 625, 628, 634, 640, 644, 650, 654, 666, 682, 701, 710, 712, 716, 719, 725, 728, 731, 735, 738, 741, 745, 748, 751, 756, 759, 762, 766, 769, 772, 784, 785, 790], "structur": [393, 703, 704, 705, 776, 779, 782, 786, 791, 794], "strut": [612, 627], "strut_height": [627, 635], "strut_inclin": [612, 627], "stud": [319, 346, 785, 786, 790], "stud_direct": 786, "stud_spac": [319, 786], "studio": 777, "stuff": 393, "style": 782, "sub": 123, "subject": 781, "sublicens": 781, "sublim": 777, "subprocess": [469, 482, 496, 512, 528, 543, 557, 571, 587, 602, 614, 630, 645], "substanti": 781, "subtract": 791, "summaris": 790, "support": [286, 288, 755, 776, 777], "suppos": 461, "surfac": [193, 248, 319, 369, 466, 503, 521, 620, 635, 783, 789], "surfaceassembli": 319, "surfacemodel": 779, "swiss": 776, "system": [346, 403, 466, 526, 785], "t": [123, 142, 159, 176, 193, 211, 230, 248, 337, 345, 792], "t_default": 345, "take": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 534, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766, 783, 794], "taper": [193, 230, 642], "tapered_heel": [230, 620, 627, 635, 642], "taperedheel": [612, 642], "tbirdsmouth": 159, "tbirdsmouthjoint": 779, "tbuttjoint": [22, 42, 778, 779], "tdovetailjoint": 779, "tenon": [230, 248, 510, 516, 517, 521, 591, 612, 615, 623, 657, 779], "tenon_height": [612, 615], "tenon_mortise_height": 230, "tenon_width": [612, 615], "tenonmortis": 248, "tenonmortisejoint": 779, "tenonshapetyp": 779, "text": [765, 777, 788], "text3d": 779, "textur": [782, 793], "than": [16, 23, 36, 43, 55, 62, 73, 82, 92, 101, 111, 119, 129, 138, 148, 155, 165, 172, 182, 189, 199, 207, 217, 226, 236, 244, 254, 262, 272, 281, 301, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 699, 717, 729, 739, 749, 760, 770], "thei": [29, 243, 261, 339, 393, 487, 790, 794], "them": [16, 36, 55, 67, 73, 92, 105, 111, 129, 148, 159, 165, 182, 193, 199, 217, 230, 236, 248, 254, 272, 442, 686, 777, 783, 784, 790], "therefor": [13, 607], "thi": [1, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 26, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 85, 86, 87, 88, 89, 91, 92, 94, 95, 97, 98, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 122, 124, 125, 126, 128, 129, 131, 132, 134, 135, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 210, 211, 212, 213, 214, 216, 217, 219, 220, 222, 223, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 265, 266, 267, 268, 269, 271, 272, 274, 275, 277, 278, 284, 285, 286, 288, 293, 301, 302, 307, 309, 312, 314, 337, 339, 346, 347, 348, 355, 356, 358, 361, 362, 365, 374, 375, 376, 382, 383, 384, 385, 392, 393, 394, 395, 396, 397, 402, 403, 404, 411, 412, 413, 414, 423, 424, 425, 431, 432, 433, 434, 441, 442, 443, 449, 450, 452, 453, 460, 461, 464, 466, 468, 470, 471, 472, 476, 481, 483, 484, 485, 486, 487, 489, 493, 495, 497, 498, 500, 501, 502, 503, 504, 505, 509, 511, 513, 514, 516, 517, 518, 519, 520, 521, 525, 527, 530, 531, 532, 533, 534, 539, 542, 544, 545, 546, 547, 548, 549, 550, 554, 556, 558, 559, 560, 561, 562, 564, 568, 570, 572, 573, 574, 575, 576, 577, 581, 582, 586, 588, 589, 590, 591, 592, 593, 597, 598, 601, 603, 604, 605, 606, 607, 611, 613, 616, 617, 618, 619, 620, 621, 623, 626, 628, 631, 632, 633, 634, 635, 636, 637, 641, 644, 646, 647, 648, 649, 650, 651, 655, 656, 665, 666, 670, 677, 681, 682, 683, 685, 690, 693, 695, 697, 704, 705, 707, 708, 712, 714, 715, 716, 720, 721, 725, 726, 727, 728, 733, 735, 736, 737, 738, 743, 745, 746, 747, 748, 753, 755, 756, 757, 758, 759, 764, 766, 767, 768, 769, 774, 775, 777, 781, 783, 784, 786, 790, 794], "thick": [319, 393, 403, 607, 786], "third": 790, "thought": 393, "three": [790, 794], "through": [86, 123, 211, 266, 358, 393, 526, 534, 776, 790], "tightli": 393, "tilt": 790, "timber": [10, 13, 319, 346, 375, 393, 403, 424, 442, 477, 665, 776, 782, 785, 786, 788, 792, 794], "timberassembli": 778, "timberel": [288, 292, 293, 299, 301, 306, 314, 318, 339, 343, 346, 375, 403, 442, 462, 670, 779], "timbermodel": [16, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272, 478, 479, 779], "titl": 776, "tlapjoint": 779, "todo": [307, 358, 375, 393, 442, 534, 670, 683, 685, 698, 790], "togeth": [16, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272, 442, 785], "tol": [29, 288, 301, 339, 344], "toler": [29, 791], "too": 534, "tool": [27, 193, 200, 494, 499, 510, 515, 521, 651, 779, 782, 792, 793], "tool_angl": [193, 200, 499, 515], "tool_diamet": [193, 200, 499, 515], "tool_height": [193, 200, 499, 515], "top": [494, 510, 583, 584, 585, 643, 651, 782, 790], "topo": 286, "topo_i": 47, "topo_l": [47, 48], "topo_t": [47, 48], "topo_unknown": [47, 48], "topo_x": [47, 48], "topologi": [16, 27, 29, 36, 47, 48, 49, 55, 67, 73, 86, 92, 105, 111, 129, 148, 159, 165, 176, 182, 193, 199, 211, 217, 230, 236, 248, 254, 266, 272, 286, 288, 337, 339, 665, 698, 790, 791, 794], "topology_typ": 337, "topologyrul": 779, "tort": 781, "total": 665, "touch": 28, "tranform": [732, 742, 752, 773], "transform": [307, 355, 382, 411, 431, 449, 694, 695, 696, 697, 703, 705, 706, 707], "translat": [466, 694, 695, 696, 697], "tree": [28, 285, 667], "trim": [10, 49, 52, 105, 108, 162, 176, 179, 196, 214, 233, 251, 269, 550, 582, 791], "trimfeatur": 789, "true": [15, 20, 21, 23, 24, 25, 28, 35, 40, 41, 43, 44, 45, 49, 54, 59, 60, 62, 63, 64, 65, 67, 72, 78, 79, 82, 83, 84, 86, 91, 97, 98, 101, 102, 103, 110, 116, 117, 119, 120, 121, 123, 128, 134, 135, 138, 139, 140, 147, 152, 153, 155, 156, 157, 164, 169, 170, 172, 173, 174, 181, 186, 187, 189, 190, 191, 198, 204, 205, 207, 208, 209, 211, 216, 222, 223, 226, 227, 228, 230, 235, 240, 241, 244, 245, 246, 253, 258, 259, 262, 263, 264, 266, 271, 277, 278, 281, 282, 283, 288, 301, 302, 312, 314, 339, 353, 356, 358, 368, 370, 371, 383, 387, 388, 389, 393, 395, 399, 400, 401, 409, 412, 418, 419, 420, 424, 429, 432, 436, 437, 438, 447, 450, 455, 456, 457, 470, 473, 474, 475, 484, 490, 491, 492, 494, 498, 506, 507, 508, 510, 514, 522, 523, 524, 526, 530, 536, 537, 538, 545, 551, 552, 553, 559, 565, 566, 567, 573, 576, 578, 579, 580, 585, 589, 594, 595, 596, 604, 608, 609, 610, 617, 622, 624, 625, 627, 632, 638, 639, 640, 643, 647, 651, 652, 653, 654, 663, 670, 677, 684, 685, 686, 690, 699, 700, 701, 714, 717, 718, 719, 726, 729, 730, 731, 736, 739, 740, 741, 746, 749, 750, 751, 757, 760, 761, 762, 767, 770, 771, 772, 785, 786, 788, 790, 791], "try": 461, "tstepjoint": 779, "tupl": [20, 21, 29, 30, 40, 41, 59, 60, 78, 79, 97, 98, 116, 117, 134, 135, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 277, 278, 288, 293, 301, 339, 346, 358, 363, 403, 671], "two": [16, 29, 30, 36, 49, 55, 67, 73, 86, 92, 105, 111, 129, 148, 159, 165, 182, 193, 199, 217, 230, 236, 248, 254, 266, 272, 286, 288, 292, 293, 299, 301, 306, 318, 337, 339, 343, 357, 461, 487, 488, 547, 607, 671, 686, 692, 790], "txt": 780, "type": [9, 10, 11, 15, 18, 19, 26, 29, 31, 35, 38, 39, 46, 49, 50, 54, 57, 58, 66, 67, 68, 72, 75, 76, 85, 86, 87, 91, 94, 95, 104, 105, 106, 110, 113, 114, 122, 123, 124, 128, 131, 132, 141, 143, 147, 150, 151, 158, 159, 160, 164, 167, 168, 175, 176, 177, 181, 184, 185, 192, 193, 194, 198, 202, 203, 210, 211, 212, 216, 219, 220, 229, 230, 231, 235, 238, 239, 243, 247, 248, 249, 253, 256, 257, 265, 266, 267, 271, 274, 275, 284, 286, 299, 309, 337, 347, 356, 361, 362, 374, 376, 383, 384, 385, 392, 394, 395, 396, 397, 402, 404, 412, 413, 414, 423, 425, 432, 433, 434, 441, 443, 450, 452, 453, 460, 468, 470, 471, 472, 476, 481, 484, 485, 486, 493, 494, 495, 498, 504, 505, 509, 511, 514, 519, 520, 525, 527, 530, 532, 533, 539, 542, 545, 548, 549, 554, 556, 559, 560, 561, 568, 570, 573, 574, 575, 581, 586, 589, 592, 593, 597, 601, 604, 605, 606, 611, 613, 617, 618, 619, 626, 628, 632, 633, 634, 641, 644, 647, 649, 650, 655, 666, 677, 680, 681, 682, 708, 709, 712, 714, 715, 716, 720, 725, 726, 727, 728, 733, 735, 736, 737, 738, 743, 745, 746, 747, 748, 753, 755, 756, 757, 758, 759, 764, 766, 767, 768, 769, 774, 779, 783, 786, 794], "typeerror": [18, 19, 38, 39, 57, 58, 75, 76, 94, 95, 113, 114, 131, 132, 150, 151, 167, 168, 184, 185, 202, 203, 219, 220, 238, 239, 256, 257, 274, 275, 361, 362, 384, 385, 396, 397, 413, 414, 433, 434, 452, 453, 471, 472, 485, 486, 504, 505, 519, 520, 532, 533, 548, 549, 560, 561, 574, 575, 592, 593, 605, 606, 618, 619, 633, 634, 649, 650, 681, 682, 715, 716, 727, 728, 737, 738, 747, 748, 758, 759, 768, 769], "typic": [755, 783], "unchang": 790, "under": [667, 668], "underscor": 784, "uniform": 403, "uniqu": [30, 346, 403, 678], "unit": [29, 285, 358, 442], "unlik": 790, "unlimit": [494, 583], "updaterefobj": 785, "upon": 779, "upper": 790, "upstream": [670, 683, 685], "url": 776, "us": [9, 10, 11, 23, 26, 28, 29, 30, 31, 43, 46, 48, 49, 50, 62, 66, 67, 68, 82, 85, 86, 87, 101, 104, 105, 106, 119, 122, 123, 124, 138, 141, 142, 143, 155, 158, 159, 160, 172, 175, 176, 177, 189, 192, 193, 194, 207, 210, 211, 212, 226, 229, 230, 231, 244, 247, 248, 249, 262, 265, 266, 267, 281, 284, 285, 288, 293, 301, 339, 347, 358, 368, 374, 376, 387, 392, 394, 399, 402, 404, 418, 423, 424, 425, 436, 441, 443, 455, 460, 461, 468, 473, 476, 477, 481, 490, 493, 494, 495, 503, 506, 509, 510, 511, 521, 522, 525, 527, 531, 536, 539, 542, 547, 551, 554, 556, 565, 568, 570, 576, 578, 581, 586, 591, 594, 597, 601, 608, 611, 613, 622, 626, 628, 638, 641, 644, 651, 652, 655, 666, 670, 698, 699, 703, 704, 705, 706, 707, 708, 710, 712, 717, 720, 721, 725, 729, 733, 735, 739, 743, 745, 749, 753, 755, 756, 760, 764, 766, 770, 774, 775, 776, 779, 781, 782, 783, 784, 785, 786, 788, 789, 790, 792, 793], "use_default": [291, 305, 317, 342], "use_flank_angl": [494, 510], "user": [784, 786], "userwarn": [90, 127, 215, 270], "usual": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 346, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766], "util": [779, 782], "v": 393, "v1": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 699, 717, 729, 739, 749, 760, 770], "v2": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 699, 717, 729, 739, 749, 760, 770], "v3": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 699, 717, 729, 739, 749, 760, 770], "v7": 780, "valid": [26, 46, 66, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 284, 374, 392, 402, 423, 441, 460, 476, 493, 509, 525, 539, 554, 568, 581, 597, 611, 626, 641, 655, 708, 720, 733, 743, 753, 764, 774], "valu": [48, 86, 123, 211, 261, 266, 285, 346, 403, 465, 503, 591, 627, 710, 784], "valueerror": [16, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272, 667, 670, 674], "variabl": 790, "vector": [319, 359, 360, 393, 403, 417, 534, 694, 695, 706, 707, 779, 785, 786], "verifi": [16, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272, 358, 687], "version": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 699, 717, 729, 739, 749, 760, 770, 780], "vertex_attribut": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 699, 717, 729, 739, 749, 760, 770], "vertex_sampl": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 699, 717, 729, 739, 749, 760, 770], "vertic": [480, 555, 569, 607, 785, 790], "via": [70, 779], "visual": [294, 461, 711, 755, 777], "visualis": 791, "vocabulari": 786, "volum": [497, 501, 513, 517, 550, 582, 588, 598, 616, 623, 631, 636, 646, 656, 665], "wa": [12, 32, 33, 125, 126, 144, 268, 461], "wai": [307, 721, 777], "wall": [319, 424, 665, 670, 779, 786], "wall1": 670, "wall1_group": 670, "want": 721, "warranti": 781, "we": [375, 393], "well": [348, 670], "were": [29, 30, 461, 784], "what": 393, "when": [11, 28, 31, 50, 51, 52, 68, 69, 87, 88, 89, 106, 107, 108, 124, 143, 160, 161, 162, 177, 178, 179, 194, 195, 196, 212, 213, 214, 231, 232, 233, 249, 250, 251, 267, 269, 347, 348, 376, 394, 404, 425, 443, 462, 463, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766, 784, 790], "whenev": [12, 14, 32, 33, 34, 53, 109, 125, 126, 144, 146, 163, 180, 197, 252, 268], "where": [783, 785, 788, 790, 793], "whether": [494, 510, 585, 627, 643, 651, 755, 781], "which": [10, 16, 20, 21, 28, 29, 30, 36, 40, 41, 49, 55, 59, 60, 67, 73, 78, 79, 86, 92, 97, 98, 105, 111, 116, 117, 129, 134, 135, 142, 148, 152, 153, 159, 165, 169, 170, 176, 182, 186, 187, 193, 199, 204, 205, 211, 217, 222, 223, 230, 236, 240, 241, 248, 254, 258, 259, 266, 272, 277, 278, 285, 307, 337, 348, 357, 358, 363, 365, 461, 462, 521, 534, 535, 607, 651, 669, 670, 709, 711, 744, 755, 783, 785, 786, 791], "while": [393, 461, 790, 792], "whitespac": [24, 25, 44, 45, 63, 64, 83, 84, 102, 103, 120, 121, 139, 140, 156, 157, 173, 174, 190, 191, 208, 209, 227, 228, 245, 246, 263, 264, 282, 283, 370, 371, 388, 389, 400, 401, 419, 420, 437, 438, 456, 457, 474, 475, 491, 492, 507, 508, 523, 524, 537, 538, 552, 553, 566, 567, 579, 580, 595, 596, 609, 610, 624, 625, 639, 640, 653, 654, 700, 701, 718, 719, 730, 731, 740, 741, 750, 751, 761, 762, 771, 772], "whom": 781, "whose": [20, 21, 40, 41, 59, 60, 78, 79, 97, 98, 116, 117, 134, 135, 152, 153, 169, 170, 186, 187, 204, 205, 222, 223, 240, 241, 258, 259, 277, 278], "whould": [16, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272], "wide": [346, 403], "width": [193, 248, 319, 346, 359, 360, 464, 494, 503, 510, 521, 569, 585, 591, 612, 615, 627, 629, 643, 651, 778, 784, 785, 786], "within": [29, 302, 312, 755, 785], "without": [24, 25, 44, 45, 63, 64, 83, 84, 86, 102, 103, 120, 121, 123, 139, 140, 156, 157, 173, 174, 190, 191, 208, 209, 211, 227, 228, 245, 246, 263, 264, 266, 282, 283, 370, 371, 388, 389, 400, 401, 419, 420, 437, 438, 456, 457, 474, 475, 491, 492, 507, 508, 523, 524, 537, 538, 552, 553, 566, 567, 579, 580, 595, 596, 609, 610, 624, 625, 639, 640, 653, 654, 700, 701, 718, 719, 730, 731, 740, 741, 750, 751, 761, 762, 771, 772, 781, 785], "wood": 346, "work": [776, 786], "workflow": [779, 782, 784, 785], "world": [355, 382, 393, 411, 431, 449, 785, 786], "worldx": [359, 360], "worldxi": [670, 778], "worldz": [359, 360], "would": 393, "wrapper": 464, "write": [477, 478, 723, 784, 785], "written": 779, "x": [123, 266, 337, 345, 346, 480, 494, 510, 526, 541, 555, 569, 585, 612, 627, 643, 696, 697, 785, 792, 793], "x_default": 345, "xlapjoint": 779, "xmax": [346, 403], "xmin": [346, 403], "xml": [478, 479, 788], "y": [193, 248, 346, 480, 494, 503, 510, 521, 526, 555, 569, 585, 591, 627, 643, 651, 696, 697, 785, 793], "ye": [612, 627, 780], "year": 776, "yet": 790, "yield": [679, 688, 689], "ymax": [346, 403], "ymin": [346, 403], "you": [721, 776, 782, 786, 790, 794], "your": [721, 776], "yourgithub_usernam": 780, "z": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 346, 359, 360, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 526, 536, 551, 565, 578, 594, 608, 622, 638, 652, 694, 695, 696, 697, 699, 717, 729, 739, 749, 760, 770, 785, 786, 789, 793], "z_axi": 319, "z_vector": [359, 360], "zaxi": 319, "zenodo": 776, "zero": [467, 786], "zmax": [346, 403], "zmin": [346, 403], "zurich": [776, 779], "zvector": [784, 785]}, "titles": ["API Reference", "compas_timber.connections", "compas_timber.design", "compas_timber.elements", "compas_timber.errors", "compas_timber.fabrication", "compas_timber.ghpython", "compas_timber.model", "compas_timber.planning", "compas_timber.rhino", "BallNodeJoint", "BallNodeJoint.ToString", "BallNodeJoint.add_extensions", "BallNodeJoint.add_features", "BallNodeJoint.check_elements_compatibility", "BallNodeJoint.copy", "BallNodeJoint.create", "BallNodeJoint.element_count_complies", "BallNodeJoint.from_json", "BallNodeJoint.from_jsonstring", "BallNodeJoint.get_face_most_ortho_to_beam", "BallNodeJoint.get_face_most_towards_beam", "BallNodeJoint.restore_beams_from_keys", "BallNodeJoint.sha256", "BallNodeJoint.to_json", "BallNodeJoint.to_jsonstring", "BallNodeJoint.validate_data", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "Joint", "Joint.ToString", "Joint.add_extensions", "Joint.add_features", "Joint.check_elements_compatibility", "Joint.copy", "Joint.create", "Joint.element_count_complies", "Joint.from_json", "Joint.from_jsonstring", "Joint.get_face_most_ortho_to_beam", "Joint.get_face_most_towards_beam", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_json", "Joint.to_jsonstring", "Joint.validate_data", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_extensions", "LButtJoint.add_features", "LButtJoint.check_elements_compatibility", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.element_count_complies", "LButtJoint.from_json", "LButtJoint.from_jsonstring", "LButtJoint.get_face_most_ortho_to_beam", "LButtJoint.get_face_most_towards_beam", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.to_json", "LButtJoint.to_jsonstring", "LButtJoint.update_beam_roles", "LButtJoint.validate_data", "LFrenchRidgeLapJoint", "LFrenchRidgeLapJoint.ToString", "LFrenchRidgeLapJoint.add_extensions", "LFrenchRidgeLapJoint.add_features", "LFrenchRidgeLapJoint.check_elements_compatibility", "LFrenchRidgeLapJoint.copy", "LFrenchRidgeLapJoint.create", "LFrenchRidgeLapJoint.element_count_complies", "LFrenchRidgeLapJoint.from_json", "LFrenchRidgeLapJoint.from_jsonstring", "LFrenchRidgeLapJoint.get_cross_cutting_frame", "LFrenchRidgeLapJoint.get_face_most_ortho_to_beam", "LFrenchRidgeLapJoint.get_face_most_towards_beam", "LFrenchRidgeLapJoint.get_main_cutting_frame", "LFrenchRidgeLapJoint.restore_beams_from_keys", "LFrenchRidgeLapJoint.sha256", "LFrenchRidgeLapJoint.to_json", "LFrenchRidgeLapJoint.to_jsonstring", "LFrenchRidgeLapJoint.validate_data", "LLapJoint", "LLapJoint.ToString", "LLapJoint.add_extensions", "LLapJoint.add_features", "LLapJoint.check_elements_compatibility", "LLapJoint.copy", "LLapJoint.create", "LLapJoint.element_count_complies", "LLapJoint.from_json", "LLapJoint.from_jsonstring", "LLapJoint.get_cross_cutting_frame", "LLapJoint.get_face_most_ortho_to_beam", "LLapJoint.get_face_most_towards_beam", "LLapJoint.get_main_cutting_frame", "LLapJoint.restore_beams_from_keys", "LLapJoint.sha256", "LLapJoint.to_json", "LLapJoint.to_jsonstring", "LLapJoint.validate_data", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_extensions", "LMiterJoint.add_features", "LMiterJoint.check_elements_compatibility", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.element_count_complies", "LMiterJoint.from_json", "LMiterJoint.from_jsonstring", "LMiterJoint.get_cutting_planes", "LMiterJoint.get_face_most_ortho_to_beam", "LMiterJoint.get_face_most_towards_beam", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_json", "LMiterJoint.to_jsonstring", "LMiterJoint.validate_data", "LapJoint", "LapJoint.ToString", "LapJoint.add_extensions", "LapJoint.add_features", "LapJoint.check_elements_compatibility", "LapJoint.copy", "LapJoint.create", "LapJoint.element_count_complies", "LapJoint.from_json", "LapJoint.from_jsonstring", "LapJoint.get_cross_cutting_frame", "LapJoint.get_face_most_ortho_to_beam", "LapJoint.get_face_most_towards_beam", "LapJoint.get_main_cutting_frame", "LapJoint.restore_beams_from_keys", "LapJoint.sha256", "LapJoint.to_json", "LapJoint.to_jsonstring", "LapJoint.validate_data", "NullJoint", "NullJoint.ToString", "NullJoint.add_extensions", "NullJoint.add_features", "NullJoint.check_elements_compatibility", "NullJoint.copy", "NullJoint.create", "NullJoint.element_count_complies", "NullJoint.from_json", "NullJoint.from_jsonstring", "NullJoint.get_face_most_ortho_to_beam", "NullJoint.get_face_most_towards_beam", "NullJoint.restore_beams_from_keys", "NullJoint.sha256", "NullJoint.to_json", "NullJoint.to_jsonstring", "NullJoint.validate_data", "TBirdsmouthJoint", "TBirdsmouthJoint.ToString", "TBirdsmouthJoint.add_extensions", "TBirdsmouthJoint.add_features", "TBirdsmouthJoint.check_elements_compatibility", "TBirdsmouthJoint.copy", "TBirdsmouthJoint.create", "TBirdsmouthJoint.element_count_complies", "TBirdsmouthJoint.from_json", "TBirdsmouthJoint.from_jsonstring", "TBirdsmouthJoint.get_face_most_ortho_to_beam", "TBirdsmouthJoint.get_face_most_towards_beam", "TBirdsmouthJoint.restore_beams_from_keys", "TBirdsmouthJoint.sha256", "TBirdsmouthJoint.to_json", "TBirdsmouthJoint.to_jsonstring", "TBirdsmouthJoint.validate_data", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_extensions", "TButtJoint.add_features", "TButtJoint.check_elements_compatibility", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.element_count_complies", "TButtJoint.from_json", "TButtJoint.from_jsonstring", "TButtJoint.get_face_most_ortho_to_beam", "TButtJoint.get_face_most_towards_beam", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.to_json", "TButtJoint.to_jsonstring", "TButtJoint.validate_data", "TDovetailJoint", "TDovetailJoint.ToString", "TDovetailJoint.add_extensions", "TDovetailJoint.add_features", "TDovetailJoint.check_elements_compatibility", "TDovetailJoint.copy", "TDovetailJoint.create", "TDovetailJoint.define_dovetail_tool", "TDovetailJoint.element_count_complies", "TDovetailJoint.from_json", "TDovetailJoint.from_jsonstring", "TDovetailJoint.get_face_most_ortho_to_beam", "TDovetailJoint.get_face_most_towards_beam", "TDovetailJoint.restore_beams_from_keys", "TDovetailJoint.sha256", "TDovetailJoint.to_json", "TDovetailJoint.to_jsonstring", "TDovetailJoint.validate_data", "TLapJoint", "TLapJoint.ToString", "TLapJoint.add_extensions", "TLapJoint.add_features", "TLapJoint.check_elements_compatibility", "TLapJoint.copy", "TLapJoint.create", "TLapJoint.element_count_complies", "TLapJoint.from_json", "TLapJoint.from_jsonstring", "TLapJoint.get_cross_cutting_frame", "TLapJoint.get_face_most_ortho_to_beam", "TLapJoint.get_face_most_towards_beam", "TLapJoint.get_main_cutting_frame", "TLapJoint.restore_beams_from_keys", "TLapJoint.sha256", "TLapJoint.to_json", "TLapJoint.to_jsonstring", "TLapJoint.validate_data", "TStepJoint", "TStepJoint.ToString", "TStepJoint.add_extensions", "TStepJoint.add_features", "TStepJoint.check_elements_compatibility", "TStepJoint.copy", "TStepJoint.create", "TStepJoint.element_count_complies", "TStepJoint.from_json", "TStepJoint.from_jsonstring", "TStepJoint.get_face_most_ortho_to_beam", "TStepJoint.get_face_most_towards_beam", "TStepJoint.restore_beams_from_keys", "TStepJoint.set_step_depths", "TStepJoint.sha256", "TStepJoint.to_json", "TStepJoint.to_jsonstring", "TStepJoint.validate_data", "TenonMortiseJoint", "TenonMortiseJoint.ToString", "TenonMortiseJoint.add_extensions", "TenonMortiseJoint.add_features", "TenonMortiseJoint.check_elements_compatibility", "TenonMortiseJoint.copy", "TenonMortiseJoint.create", "TenonMortiseJoint.element_count_complies", "TenonMortiseJoint.from_json", "TenonMortiseJoint.from_jsonstring", "TenonMortiseJoint.get_face_most_ortho_to_beam", "TenonMortiseJoint.get_face_most_towards_beam", "TenonMortiseJoint.restore_beams_from_keys", "TenonMortiseJoint.set_default_values", "TenonMortiseJoint.sha256", "TenonMortiseJoint.to_json", "TenonMortiseJoint.to_jsonstring", "TenonMortiseJoint.validate_data", "XLapJoint", "XLapJoint.ToString", "XLapJoint.add_extensions", "XLapJoint.add_features", "XLapJoint.check_elements_compatibility", "XLapJoint.copy", "XLapJoint.create", "XLapJoint.element_count_complies", "XLapJoint.from_json", "XLapJoint.from_jsonstring", "XLapJoint.get_cross_cutting_frame", "XLapJoint.get_face_most_ortho_to_beam", "XLapJoint.get_face_most_towards_beam", "XLapJoint.get_main_cutting_frame", "XLapJoint.restore_beams_from_keys", "XLapJoint.sha256", "XLapJoint.to_json", "XLapJoint.to_jsonstring", "XLapJoint.validate_data", "find_neighboring_beams", "CategoryRule", "CategoryRule.ToString", "CategoryRule.comply", "CategoryRule.get_category_rules", "CategoryRule.get_direct_rules", "CategoryRule.get_topology_rules", "CategoryRule.joints_from_beams_and_rules", "CategoryRule.reorder", "DebugInfomation", "DebugInfomation.ToString", "DebugInfomation.add_fastener_error", "DebugInfomation.add_feature_error", "DebugInfomation.add_joint_error", "DirectRule", "DirectRule.ToString", "DirectRule.comply", "DirectRule.contains", "DirectRule.get_category_rules", "DirectRule.get_direct_rules", "DirectRule.get_topology_rules", "DirectRule.joints_from_beams_and_rules", "FeatureDefinition", "FeatureDefinition.ToString", "JointDefinition", "JointDefinition.ToString", "JointDefinition.is_identical", "JointDefinition.match", "JointRule", "JointRule.comply", "JointRule.get_category_rules", "JointRule.get_direct_rules", "JointRule.get_topology_rules", "JointRule.joints_from_beams_and_rules", "SurfaceModel", "SurfaceModel.beam_category_names", "SurfaceModel.create_model", "SurfaceModel.cull_overlaps", "SurfaceModel.distance_between_elements", "SurfaceModel.generate_frame", "SurfaceModel.generate_perimeter_beams", "SurfaceModel.generate_plates", "SurfaceModel.generate_stud_lines", "SurfaceModel.generate_studs", "SurfaceModel.generate_windows", "SurfaceModel.get_beam_intersections", "SurfaceModel.get_interior_segment_indices", "SurfaceModel.offset_elements", "SurfaceModel.parse_loops", "SurfaceModel.trim_jack_studs", "SurfaceModel.trim_king_studs", "SurfaceModel.trim_studs", "TopologyRule", "TopologyRule.ToString", "TopologyRule.comply", "TopologyRule.get_category_rules", "TopologyRule.get_direct_rules", "TopologyRule.get_topology_rules", "TopologyRule.joints_from_beams_and_rules", "guess_joint_topology_2beams", "set_default_joints", "Beam", "Beam.ToString", "Beam.add_blank_extension", "Beam.add_feature", "Beam.add_features", "Beam.compute_aabb", "Beam.compute_collision_mesh", "Beam.compute_geometry", "Beam.compute_obb", "Beam.compute_worldtransformation", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_endpoints", "Beam.from_json", "Beam.from_jsonstring", "Beam.get_dimensions_relative_to_side", "Beam.opposing_side_index", "Beam.remove_blank_extension", "Beam.remove_features", "Beam.reset", "Beam.sha256", "Beam.side_as_surface", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transformed", "Beam.validate_data", "Fastener", "Fastener.ToString", "Fastener.add_feature", "Fastener.compute_aabb", "Fastener.compute_collision_mesh", "Fastener.compute_geometry", "Fastener.compute_obb", "Fastener.compute_worldtransformation", "Fastener.copy", "Fastener.from_json", "Fastener.from_jsonstring", "Fastener.reset", "Fastener.sha256", "Fastener.to_json", "Fastener.to_jsonstring", "Fastener.transform", "Fastener.transformed", "Fastener.validate_data", "FastenerTimberInterface", "FastenerTimberInterface.ToString", "FastenerTimberInterface.copy", "FastenerTimberInterface.from_json", "FastenerTimberInterface.from_jsonstring", "FastenerTimberInterface.get_features", "FastenerTimberInterface.sha256", "FastenerTimberInterface.to_json", "FastenerTimberInterface.to_jsonstring", "FastenerTimberInterface.validate_data", "Plate", "Plate.ToString", "Plate.add_feature", "Plate.add_features", "Plate.compute_aabb", "Plate.compute_collision_mesh", "Plate.compute_geometry", "Plate.compute_obb", "Plate.compute_worldtransformation", "Plate.copy", "Plate.from_json", "Plate.from_jsonstring", "Plate.remove_features", "Plate.reset", "Plate.set_frame_and_outline", "Plate.sha256", "Plate.to_json", "Plate.to_jsonstring", "Plate.transform", "Plate.transformed", "Plate.validate_data", "TimberElement", "TimberElement.ToString", "TimberElement.add_feature", "TimberElement.compute_aabb", "TimberElement.compute_collision_mesh", "TimberElement.compute_geometry", "TimberElement.compute_obb", "TimberElement.compute_worldtransformation", "TimberElement.copy", "TimberElement.from_json", "TimberElement.from_jsonstring", "TimberElement.reset", "TimberElement.sha256", "TimberElement.to_json", "TimberElement.to_jsonstring", "TimberElement.transform", "TimberElement.transformed", "TimberElement.validate_data", "Wall", "Wall.ToString", "Wall.add_feature", "Wall.compute_aabb", "Wall.compute_collision_mesh", "Wall.compute_geometry", "Wall.compute_obb", "Wall.compute_worldtransformation", "Wall.copy", "Wall.from_box", "Wall.from_json", "Wall.from_jsonstring", "Wall.reset", "Wall.sha256", "Wall.to_json", "Wall.to_jsonstring", "Wall.transform", "Wall.transformed", "Wall.validate_data", "BeamJoiningError", "FastenerApplicationError", "FeatureApplicationError", "BTLxPart", "BTLxPart.et_point_vals", "BTLxPart.ref_side_from_face", "BTLxProcessing", "BTLxProcessing.ToString", "BTLxProcessing.add_subprocessing", "BTLxProcessing.copy", "BTLxProcessing.from_json", "BTLxProcessing.from_jsonstring", "BTLxProcessing.sha256", "BTLxProcessing.to_json", "BTLxProcessing.to_jsonstring", "BTLxProcessing.validate_data", "BTLxWriter", "BTLxWriter.model_to_xml", "BTLxWriter.write", "DoubleCut", "DoubleCut.ToString", "DoubleCut.add_subprocessing", "DoubleCut.apply", "DoubleCut.copy", "DoubleCut.from_json", "DoubleCut.from_jsonstring", "DoubleCut.from_planes_and_beam", "DoubleCut.from_shapes_and_element", "DoubleCut.planes_from_params_and_beam", "DoubleCut.sha256", "DoubleCut.to_json", "DoubleCut.to_jsonstring", "DoubleCut.validate_data", "DovetailMortise", "DovetailMortise.ToString", "DovetailMortise.add_subprocessing", "DovetailMortise.apply", "DovetailMortise.copy", "DovetailMortise.define_dovetail_tool", "DovetailMortise.dovetail_cutting_frames_from_params_and_beam", "DovetailMortise.dovetail_volume_from_params_and_beam", "DovetailMortise.frame_from_params_and_beam", "DovetailMortise.from_frame_and_beam", "DovetailMortise.from_json", "DovetailMortise.from_jsonstring", "DovetailMortise.sha256", "DovetailMortise.to_json", "DovetailMortise.to_jsonstring", "DovetailMortise.validate_data", "DovetailTenon", "DovetailTenon.ToString", "DovetailTenon.add_subprocessing", "DovetailTenon.apply", "DovetailTenon.copy", "DovetailTenon.define_dovetail_tool", "DovetailTenon.dovetail_cutting_frames_from_params_and_beam", "DovetailTenon.dovetail_volume_from_params_and_beam", "DovetailTenon.frame_from_params_and_beam", "DovetailTenon.from_json", "DovetailTenon.from_jsonstring", "DovetailTenon.from_plane_and_beam", "DovetailTenon.sha256", "DovetailTenon.to_json", "DovetailTenon.to_jsonstring", "DovetailTenon.validate_data", "Drilling", "Drilling.ToString", "Drilling.add_subprocessing", "Drilling.apply", "Drilling.copy", "Drilling.cylinder_from_params_and_element", "Drilling.from_json", "Drilling.from_jsonstring", "Drilling.from_line_and_element", "Drilling.from_shapes_and_element", "Drilling.sha256", "Drilling.to_json", "Drilling.to_jsonstring", "Drilling.validate_data", "EdgePositionType", "FrenchRidgeLap", "FrenchRidgeLap.ToString", "FrenchRidgeLap.add_subprocessing", "FrenchRidgeLap.apply", "FrenchRidgeLap.copy", "FrenchRidgeLap.frame_from_params_and_beam", "FrenchRidgeLap.from_beam_beam_and_plane", "FrenchRidgeLap.from_json", "FrenchRidgeLap.from_jsonstring", "FrenchRidgeLap.lap_volume_from_params_and_beam", "FrenchRidgeLap.sha256", "FrenchRidgeLap.to_json", "FrenchRidgeLap.to_jsonstring", "FrenchRidgeLap.validate_data", "JackRafterCut", "JackRafterCut.ToString", "JackRafterCut.add_subprocessing", "JackRafterCut.apply", "JackRafterCut.copy", "JackRafterCut.from_json", "JackRafterCut.from_jsonstring", "JackRafterCut.from_plane_and_beam", "JackRafterCut.from_shapes_and_element", "JackRafterCut.plane_from_params_and_beam", "JackRafterCut.sha256", "JackRafterCut.to_json", "JackRafterCut.to_jsonstring", "JackRafterCut.validate_data", "Lap", "Lap.ToString", "Lap.add_subprocessing", "Lap.apply", "Lap.copy", "Lap.from_json", "Lap.from_jsonstring", "Lap.from_plane_and_beam", "Lap.planes_from_params_and_beam", "Lap.sha256", "Lap.to_json", "Lap.to_jsonstring", "Lap.validate_data", "Lap.volume_from_params_and_beam", "LimitationTopType", "MachiningLimits", "Mortise", "Mortise.ToString", "Mortise.add_subprocessing", "Mortise.apply", "Mortise.copy", "Mortise.frame_from_params_and_beam", "Mortise.from_frame_and_beam", "Mortise.from_json", "Mortise.from_jsonstring", "Mortise.sha256", "Mortise.to_json", "Mortise.to_jsonstring", "Mortise.validate_data", "Mortise.volume_from_params_and_beam", "OrientationType", "Slot", "Slot.ToString", "Slot.add_subprocessing", "Slot.apply", "Slot.copy", "Slot.from_json", "Slot.from_jsonstring", "Slot.from_plane_and_beam", "Slot.sha256", "Slot.to_json", "Slot.to_jsonstring", "Slot.validate_data", "StepJoint", "StepJoint.ToString", "StepJoint.add_subprocessing", "StepJoint.add_tenon", "StepJoint.apply", "StepJoint.copy", "StepJoint.from_json", "StepJoint.from_jsonstring", "StepJoint.from_plane_and_beam", "StepJoint.planes_from_params_and_beam", "StepJoint.sha256", "StepJoint.tenon_volume_from_params_and_beam", "StepJoint.to_json", "StepJoint.to_jsonstring", "StepJoint.validate_data", "StepJointNotch", "StepJointNotch.ToString", "StepJointNotch.add_mortise", "StepJointNotch.add_subprocessing", "StepJointNotch.apply", "StepJointNotch.copy", "StepJointNotch.from_json", "StepJointNotch.from_jsonstring", "StepJointNotch.from_plane_and_beam", "StepJointNotch.mortise_volume_from_params_and_beam", "StepJointNotch.planes_from_params_and_beam", "StepJointNotch.sha256", "StepJointNotch.to_json", "StepJointNotch.to_jsonstring", "StepJointNotch.validate_data", "StepShapeType", "Tenon", "Tenon.ToString", "Tenon.add_subprocessing", "Tenon.apply", "Tenon.copy", "Tenon.frame_from_params_and_beam", "Tenon.from_json", "Tenon.from_jsonstring", "Tenon.from_plane_and_beam", "Tenon.sha256", "Tenon.to_json", "Tenon.to_jsonstring", "Tenon.validate_data", "Tenon.volume_from_params_and_beam", "TenonShapeType", "add_gh_param", "clear_gh_params", "get_leaf_subclasses", "item_input_valid", "list_input_valid", "manage_dynamic_params", "rename_gh_input", "TimberModel", "TimberModel.ToString", "TimberModel.add_element", "TimberModel.add_elements", "TimberModel.add_group", "TimberModel.add_group_element", "TimberModel.add_interaction", "TimberModel.add_joint", "TimberModel.add_material", "TimberModel.assign_material", "TimberModel.compute_aabb", "TimberModel.compute_obb", "TimberModel.copy", "TimberModel.element_by_guid", "TimberModel.elements", "TimberModel.elements_connected_by", "TimberModel.from_json", "TimberModel.from_jsonstring", "TimberModel.get_elements_in_group", "TimberModel.has_element", "TimberModel.has_group", "TimberModel.has_interaction", "TimberModel.has_material", "TimberModel.interactions", "TimberModel.materials", "TimberModel.process_joinery", "TimberModel.remove_element", "TimberModel.remove_interaction", "TimberModel.remove_joint", "TimberModel.rotate", "TimberModel.rotated", "TimberModel.scale", "TimberModel.scaled", "TimberModel.set_topologies", "TimberModel.sha256", "TimberModel.to_json", "TimberModel.to_jsonstring", "TimberModel.transform", "TimberModel.transform_numpy", "TimberModel.transformed", "TimberModel.transformed_numpy", "TimberModel.translate", "TimberModel.translated", "TimberModel.validate_data", "Actor", "Actor.get_name", "BuildingPlan", "BuildingPlan.ToString", "BuildingPlan.add_step", "BuildingPlan.copy", "BuildingPlan.from_json", "BuildingPlan.from_jsonstring", "BuildingPlan.sha256", "BuildingPlan.to_json", "BuildingPlan.to_jsonstring", "BuildingPlan.validate_data", "BuildingPlanParser", "BuildingPlanParser.parse", "BuildingPlanParser.serialize", "Instruction", "Instruction.ToString", "Instruction.copy", "Instruction.from_json", "Instruction.from_jsonstring", "Instruction.sha256", "Instruction.to_json", "Instruction.to_jsonstring", "Instruction.transform", "Instruction.validate_data", "LinearDimension", "LinearDimension.ToString", "LinearDimension.copy", "LinearDimension.from_json", "LinearDimension.from_jsonstring", "LinearDimension.sha256", "LinearDimension.to_json", "LinearDimension.to_jsonstring", "LinearDimension.transform", "LinearDimension.validate_data", "Model3d", "Model3d.ToString", "Model3d.copy", "Model3d.from_json", "Model3d.from_jsonstring", "Model3d.sha256", "Model3d.to_json", "Model3d.to_jsonstring", "Model3d.transform", "Model3d.validate_data", "SimpleSequenceGenerator", "Step", "Step.ToString", "Step.copy", "Step.from_json", "Step.from_jsonstring", "Step.sha256", "Step.to_json", "Step.to_jsonstring", "Step.transform", "Step.validate_data", "Text3d", "Text3d.ToString", "Text3d.copy", "Text3d.from_json", "Text3d.from_jsonstring", "Text3d.sha256", "Text3d.to_json", "Text3d.to_jsonstring", "Text3d.transform", "Text3d.validate_data", "find_neighboring_beams", "Citing", "Examples", "Create Joint", "COMPAS Timber Documentation", "Installation", "License", "Grasshopper plugin", "BTLx Contribution Guide", "Attributes", "Beams", "Design", "Examples", "Fabrication", "Features", "Joint Rules", "Model", "Show", "Utils", "Workflow"], "titleterms": {"actor": [709, 710], "add_blank_extens": 348, "add_el": [667, 668], "add_extens": [12, 32, 51, 69, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268], "add_fastener_error": 296, "add_featur": [13, 33, 52, 70, 89, 108, 126, 145, 162, 179, 196, 214, 233, 251, 269, 349, 350, 377, 405, 406, 426, 444], "add_feature_error": 297, "add_gh_param": 658, "add_group": 669, "add_group_el": 670, "add_interact": 671, "add_joint": 672, "add_joint_error": 298, "add_materi": 673, "add_mortis": 629, "add_step": 713, "add_subprocess": [469, 482, 496, 512, 528, 543, 557, 571, 587, 602, 614, 630, 645], "add_tenon": 615, "api": 0, "appli": [483, 497, 513, 529, 544, 558, 572, 588, 603, 616, 631, 646], "assembli": 777, "assign_materi": 674, "attribut": 784, "bake": 793, "ballnodejoint": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "beam": [346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 785, 786, 792], "beam_category_nam": 320, "beamjoiningerror": 461, "boxmap": 793, "brep": 789, "btlx": [783, 788], "btlxpart": [464, 465, 466], "btlxprocess": [467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "btlxwriter": [477, 478, 479], "buildingplan": [711, 712, 713, 714, 715, 716, 717, 718, 719, 720], "buildingplanpars": [721, 722, 723], "butt": 790, "categori": 790, "categoryrul": [286, 287, 288, 289, 290, 291, 292, 293], "check": 784, "check_elements_compat": [14, 34, 53, 71, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270], "cite": 776, "class": [1, 2, 3, 4, 5, 7, 8], "clear_gh_param": 659, "compa": 779, "compas_timb": [1, 2, 3, 4, 5, 6, 7, 8, 9], "compli": [288, 301, 314, 339], "compon": 790, "compute_aabb": [351, 378, 407, 427, 445, 675], "compute_collision_mesh": [352, 379, 408, 428, 446], "compute_geometri": [353, 380, 409, 429, 447], "compute_obb": [354, 381, 410, 430, 448, 676], "compute_worldtransform": [355, 382, 411, 431, 449], "conda": 780, "connect": 1, "connectionsolv": [27, 28, 29], "contain": 302, "content": 779, "contribut": 783, "copi": [15, 35, 54, 72, 91, 110, 128, 147, 164, 181, 198, 216, 235, 253, 271, 356, 383, 395, 412, 432, 450, 470, 484, 498, 514, 530, 545, 559, 573, 589, 604, 617, 632, 647, 677, 714, 726, 736, 746, 757, 767], "creat": [16, 36, 55, 73, 92, 111, 129, 148, 165, 182, 199, 217, 236, 254, 272, 778], "create_model": 321, "cull_overlap": 322, "custom": [784, 786], "cylinder_from_params_and_el": 531, "debuginfom": [294, 295, 296, 297, 298], "decomposebeam": 785, "default": 790, "define_dovetail_tool": [200, 499, 515], "delet": 784, "depend": 779, "design": [2, 786], "develop": 780, "dimens": 786, "direct": 790, "directrul": [299, 300, 301, 302, 303, 304, 305, 306], "distance_between_el": 323, "document": 779, "doublecut": [480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "dovetail_cutting_frames_from_params_and_beam": [500, 516], "dovetail_volume_from_params_and_beam": [501, 517], "dovetailmortis": [494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509], "dovetailtenon": [510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525], "drill": [526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 789], "edgepositiontyp": 540, "element": [3, 679], "element_by_guid": 678, "element_count_compli": [17, 37, 56, 74, 93, 112, 130, 149, 166, 183, 201, 218, 237, 255, 273], "elements_connected_bi": 680, "endpoint_closest_to_point": 357, "error": [4, 792], "et_point_v": 465, "exampl": [777, 787], "except": 1, "extension_to_plan": 358, "fabric": [5, 788], "face": 792, "fasten": [375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "fastenerapplicationerror": 462, "fastenertimberinterfac": [393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "featur": [789, 792], "featureapplicationerror": 463, "featuredefinit": [307, 308], "find_intersecting_pair": 28, "find_neighboring_beam": [285, 775], "find_topologi": 29, "findbeambyrhinoguid": 785, "frame_from_params_and_beam": [502, 518, 546, 590, 648], "french": 790, "frenchridgelap": [541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554], "from_beam_beam_and_plan": 547, "from_box": 451, "from_centerlin": 359, "from_endpoint": 360, "from_frame_and_beam": [503, 591], "from_json": [18, 38, 57, 75, 94, 113, 131, 150, 167, 184, 202, 219, 238, 256, 274, 361, 384, 396, 413, 433, 452, 471, 485, 504, 519, 532, 548, 560, 574, 592, 605, 618, 633, 649, 681, 715, 727, 737, 747, 758, 768], "from_jsonstr": [19, 39, 58, 76, 95, 114, 132, 151, 168, 185, 203, 220, 239, 257, 275, 362, 385, 397, 414, 434, 453, 472, 486, 505, 520, 533, 549, 561, 575, 593, 606, 619, 634, 650, 682, 716, 728, 738, 748, 759, 769], "from_line_and_el": 534, "from_plane_and_beam": [521, 562, 576, 607, 620, 635, 651], "from_planes_and_beam": 487, "from_shapes_and_el": [488, 535, 563], "function": [1, 2, 6], "generate_fram": 324, "generate_perimeter_beam": 325, "generate_pl": 326, "generate_stud": 328, "generate_stud_lin": 327, "generate_window": 329, "get_beam_intersect": 330, "get_category_rul": [289, 303, 315, 340], "get_cross_cutting_fram": [77, 96, 133, 221, 276], "get_cutting_plan": 115, "get_dimensions_relative_to_sid": 363, "get_direct_rul": [290, 304, 316, 341], "get_elements_in_group": 683, "get_face_most_ortho_to_beam": [20, 40, 59, 78, 97, 116, 134, 152, 169, 186, 204, 222, 240, 258, 277], "get_face_most_towards_beam": [21, 41, 60, 79, 98, 117, 135, 153, 170, 187, 205, 223, 241, 259, 278], "get_featur": 398, "get_interior_segment_indic": 331, "get_leaf_subclass": 660, "get_main_cutting_fram": [80, 99, 136, 224, 279], "get_nam": [48, 710], "get_topology_rul": [291, 305, 317, 342], "ghpython": 6, "grasshopp": 782, "guess_joint_topology_2beam": 344, "guid": 783, "has_el": 684, "has_group": 685, "has_interact": 686, "has_materi": 687, "hole": 789, "index": 792, "indic": 779, "instal": 780, "instruct": [724, 725, 726, 727, 728, 729, 730, 731, 732, 733], "interact": 688, "is_ident": 311, "item_input_valid": 661, "jackraftercut": [555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568], "join": 792, "joint": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 778, 790, 792], "jointdefinit": [309, 310, 311, 312], "jointrul": [313, 314, 315, 316, 317, 318], "joints_from_beams_and_rul": [292, 306, 318, 343], "jointtopologi": [47, 48], "l": 790, "lap": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 790], "lap_volume_from_params_and_beam": 550, "lapjoint": [123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "lbuttjoint": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "lfrenchridgelapjoint": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "licens": 781, "limitationtoptyp": 583, "lineardimens": [734, 735, 736, 737, 738, 739, 740, 741, 742, 743], "list_input_valid": 662, "llapjoint": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "lmiterjoint": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], "machininglimit": 584, "manage_dynamic_param": 663, "match": 312, "materi": 689, "miter": 790, "model": [7, 786, 790, 791, 792], "model3d": [744, 745, 746, 747, 748, 749, 750, 751, 752, 753], "model_to_xml": 478, "mortis": [585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "mortise_volume_from_params_and_beam": 636, "nulljoint": [142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "offset_el": 332, "opposing_side_index": 364, "option": 786, "orientationtyp": 599, "overrid": 790, "packag": 0, "pars": 722, "parse_loop": 333, "plan": 8, "plane_from_params_and_beam": 564, "planes_from_params_and_beam": [489, 577, 621, 637], "plate": [403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423], "plugin": [9, 782], "process_joineri": 690, "ref_side_from_fac": 466, "refer": 0, "remove_blank_extens": 365, "remove_el": 691, "remove_featur": [366, 415], "remove_interact": 692, "remove_joint": 693, "rename_gh_input": 664, "reorder": 293, "reset": [367, 386, 416, 435, 454], "restore_beams_from_kei": [22, 42, 61, 81, 100, 118, 137, 154, 171, 188, 206, 225, 242, 260, 280], "rhino": 9, "ridg": 790, "rotat": [694, 695], "rule": 790, "scale": [696, 697], "serial": 723, "set_default_joint": 345, "set_default_valu": 261, "set_frame_and_outlin": 417, "set_step_depth": 243, "set_topologi": 698, "sha256": [23, 43, 62, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 368, 387, 399, 418, 436, 455, 473, 490, 506, 522, 536, 551, 565, 578, 594, 608, 622, 638, 652, 699, 717, 729, 739, 749, 760, 770], "show": 792, "side_as_surfac": 369, "simplesequencegener": 754, "slot": [600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611], "stabl": 780, "standard": 784, "step": [755, 756, 757, 758, 759, 760, 761, 762, 763, 764], "stepjoint": [612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626], "stepjointnotch": [627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641], "stepshapetyp": 642, "subtract": 789, "summari": 790, "surfac": [786, 790, 792], "surfacemodel": [319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336], "t": 790, "tabl": [779, 790], "tbirdsmouthjoint": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], "tbuttjoint": [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192], "tdovetailjoint": [193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210], "tenon": [643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656], "tenon_volume_from_params_and_beam": 623, "tenonmortisejoint": [248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "tenonshapetyp": 657, "text3d": [765, 766, 767, 768, 769, 770, 771, 772, 773, 774], "timber": [777, 779], "timberel": [424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "timbermodel": [665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708], "tlapjoint": [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "to_json": [24, 44, 63, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 370, 388, 400, 419, 437, 456, 474, 491, 507, 523, 537, 552, 566, 579, 595, 609, 624, 639, 653, 700, 718, 730, 740, 750, 761, 771], "to_jsonstr": [25, 45, 64, 84, 103, 121, 140, 157, 174, 191, 209, 228, 246, 264, 283, 371, 389, 401, 420, 438, 457, 475, 492, 508, 524, 538, 553, 567, 580, 596, 610, 625, 640, 654, 701, 719, 731, 741, 751, 762, 772], "topolog": 790, "topologi": 792, "topologyrul": [337, 338, 339, 340, 341, 342, 343], "tostr": [11, 31, 50, 68, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 287, 295, 300, 308, 310, 338, 347, 376, 394, 404, 425, 443, 468, 481, 495, 511, 527, 542, 556, 570, 586, 601, 613, 628, 644, 666, 712, 725, 735, 745, 756, 766], "transform": [372, 373, 390, 391, 421, 422, 439, 440, 458, 459, 702, 704, 732, 742, 752, 763, 773], "transform_numpi": 703, "transformed_numpi": 705, "translat": [706, 707], "trim": 789, "trim_jack_stud": 334, "trim_king_stud": 335, "trim_stud": 336, "tstepjoint": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "type": [790, 792], "update_beam_rol": 65, "util": 793, "validate_data": [26, 46, 66, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 284, 374, 392, 402, 423, 441, 460, 476, 493, 509, 525, 539, 554, 568, 581, 597, 611, 626, 641, 655, 708, 720, 733, 743, 753, 764, 774], "volume_from_params_and_beam": [582, 598, 656], "wall": [442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460], "workflow": 794, "write": [479, 788], "x": 790, "xlapjoint": [266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284]}})