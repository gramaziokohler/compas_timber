Search.setIndex({"docnames": ["api", "api/compas_timber.assembly", "api/compas_timber.connections", "api/compas_timber.consumers", "api/compas_timber.fabrication", "api/compas_timber.parts", "api/compas_timber.planning", "api/compas_timber.rhino", "api/generated/compas_timber.assembly.TimberAssembly", "api/generated/compas_timber.assembly.TimberAssembly.ToString", "api/generated/compas_timber.assembly.TimberAssembly.add_beam", "api/generated/compas_timber.assembly.TimberAssembly.add_connection", "api/generated/compas_timber.assembly.TimberAssembly.add_joint", "api/generated/compas_timber.assembly.TimberAssembly.add_part", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined", "api/generated/compas_timber.assembly.TimberAssembly.connections", "api/generated/compas_timber.assembly.TimberAssembly.contains", "api/generated/compas_timber.assembly.TimberAssembly.copy", "api/generated/compas_timber.assembly.TimberAssembly.delete_connection", "api/generated/compas_timber.assembly.TimberAssembly.delete_part", "api/generated/compas_timber.assembly.TimberAssembly.find", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key", "api/generated/compas_timber.assembly.TimberAssembly.from_json", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.parts", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint", "api/generated/compas_timber.assembly.TimberAssembly.sha256", "api/generated/compas_timber.assembly.TimberAssembly.to_json", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.transform", "api/generated/compas_timber.assembly.TimberAssembly.transform_numpy", "api/generated/compas_timber.assembly.TimberAssembly.transformed", "api/generated/compas_timber.assembly.TimberAssembly.transformed_numpy", "api/generated/compas_timber.assembly.TimberAssembly.validate_data", "api/generated/compas_timber.connections.BeamJoinningError", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.from_jsonstring", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.to_jsonstring", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring", "api/generated/compas_timber.connections.LButtJoint.get_cross_cutting_plane", "api/generated/compas_timber.connections.LButtJoint.get_main_cutting_plane", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring", "api/generated/compas_timber.connections.TButtJoint.get_cutting_plane", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.XHalfLapJoint", "api/generated/compas_timber.connections.XHalfLapJoint.ToString", "api/generated/compas_timber.connections.XHalfLapJoint.add_features", "api/generated/compas_timber.connections.XHalfLapJoint.copy", "api/generated/compas_timber.connections.XHalfLapJoint.create", "api/generated/compas_timber.connections.XHalfLapJoint.from_json", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.XHalfLapJoint.sha256", "api/generated/compas_timber.connections.XHalfLapJoint.to_json", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data", "api/generated/compas_timber.connections.find_neighboring_beams", "api/generated/compas_timber.consumers.BrepGeometryConsumer", "api/generated/compas_timber.fabrication.BTLx", "api/generated/compas_timber.fabrication.BTLx.btlx_string", "api/generated/compas_timber.fabrication.BTLx.process_assembly", "api/generated/compas_timber.fabrication.BTLx.register_joint", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints", "api/generated/compas_timber.fabrication.BTLxJackCut", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process", "api/generated/compas_timber.fabrication.BTLxProcess", "api/generated/compas_timber.fabrication.FrenchRidgeFactory", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings", "api/generated/compas_timber.fabrication.LButtFactory", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings", "api/generated/compas_timber.fabrication.LMiterFactory", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings", "api/generated/compas_timber.fabrication.TButtFactory", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings", "api/generated/compas_timber.parts.Beam", "api/generated/compas_timber.parts.Beam.ToString", "api/generated/compas_timber.parts.Beam.add_blank_extension", "api/generated/compas_timber.parts.Beam.add_feature", "api/generated/compas_timber.parts.Beam.add_features", "api/generated/compas_timber.parts.Beam.align_z", "api/generated/compas_timber.parts.Beam.clear_features", "api/generated/compas_timber.parts.Beam.copy", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point", "api/generated/compas_timber.parts.Beam.extension_to_plane", "api/generated/compas_timber.parts.Beam.from_centerline", "api/generated/compas_timber.parts.Beam.from_endpoints", "api/generated/compas_timber.parts.Beam.from_json", "api/generated/compas_timber.parts.Beam.from_jsonstring", "api/generated/compas_timber.parts.Beam.get_geometry", "api/generated/compas_timber.parts.Beam.remove_blank_extension", "api/generated/compas_timber.parts.Beam.remove_features", "api/generated/compas_timber.parts.Beam.sha256", "api/generated/compas_timber.parts.Beam.to_json", "api/generated/compas_timber.parts.Beam.to_jsonstring", "api/generated/compas_timber.parts.Beam.transform", "api/generated/compas_timber.parts.Beam.transform_numpy", "api/generated/compas_timber.parts.Beam.transformed", "api/generated/compas_timber.parts.Beam.transformed_numpy", "api/generated/compas_timber.parts.Beam.validate_data", "api/generated/compas_timber.planning.Actor", "api/generated/compas_timber.planning.Actor.get_name", "api/generated/compas_timber.planning.BuildingPlan", "api/generated/compas_timber.planning.BuildingPlan.ToString", "api/generated/compas_timber.planning.BuildingPlan.add_step", "api/generated/compas_timber.planning.BuildingPlan.copy", "api/generated/compas_timber.planning.BuildingPlan.from_json", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.sha256", "api/generated/compas_timber.planning.BuildingPlan.to_json", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.validate_data", "api/generated/compas_timber.planning.SimpleSequenceGenerator", "api/generated/compas_timber.planning.Step", "api/generated/compas_timber.planning.Step.ToString", "api/generated/compas_timber.planning.Step.copy", "api/generated/compas_timber.planning.Step.from_json", "api/generated/compas_timber.planning.Step.from_jsonstring", "api/generated/compas_timber.planning.Step.sha256", "api/generated/compas_timber.planning.Step.to_json", "api/generated/compas_timber.planning.Step.to_jsonstring", "api/generated/compas_timber.planning.Step.transform", "api/generated/compas_timber.planning.Step.validate_data", "api/generated/compas_timber.rhino.find_neighboring_beams", "citing", "examples", "examples/create_joint", "index", "installation", "license", "tutorials", "tutorials/BTLx_contribution_guide", "tutorials/grasshopper/assembly", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beam", "tutorials/grasshopper/examples", "tutorials/grasshopper/features", "tutorials/grasshopper/joints", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "filenames": ["api.rst", "api/compas_timber.assembly.rst", "api/compas_timber.connections.rst", "api/compas_timber.consumers.rst", "api/compas_timber.fabrication.rst", "api/compas_timber.parts.rst", "api/compas_timber.planning.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.assembly.TimberAssembly.rst", "api/generated/compas_timber.assembly.TimberAssembly.ToString.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_beam.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined.rst", "api/generated/compas_timber.assembly.TimberAssembly.connections.rst", "api/generated/compas_timber.assembly.TimberAssembly.contains.rst", "api/generated/compas_timber.assembly.TimberAssembly.copy.rst", "api/generated/compas_timber.assembly.TimberAssembly.delete_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.delete_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.find.rst", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.parts.rst", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.sha256.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.transform.rst", "api/generated/compas_timber.assembly.TimberAssembly.transform_numpy.rst", "api/generated/compas_timber.assembly.TimberAssembly.transformed.rst", "api/generated/compas_timber.assembly.TimberAssembly.transformed_numpy.rst", "api/generated/compas_timber.assembly.TimberAssembly.validate_data.rst", "api/generated/compas_timber.connections.BeamJoinningError.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.from_json.rst", "api/generated/compas_timber.connections.Joint.from_jsonstring.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_json.rst", "api/generated/compas_timber.connections.Joint.to_jsonstring.rst", "api/generated/compas_timber.connections.Joint.validate_data.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.from_json.rst", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.get_cross_cutting_plane.rst", "api/generated/compas_timber.connections.LButtJoint.get_main_cutting_plane.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.to_json.rst", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.validate_data.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.from_json.rst", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_json.rst", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_data.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.from_json.rst", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.get_cutting_plane.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.to_json.rst", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.validate_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.rst", "api/generated/compas_timber.connections.XHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.XHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.XHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.XHalfLapJoint.create.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.XHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.find_neighboring_beams.rst", "api/generated/compas_timber.consumers.BrepGeometryConsumer.rst", "api/generated/compas_timber.fabrication.BTLx.rst", "api/generated/compas_timber.fabrication.BTLx.btlx_string.rst", "api/generated/compas_timber.fabrication.BTLx.process_assembly.rst", "api/generated/compas_timber.fabrication.BTLx.register_joint.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process.rst", "api/generated/compas_timber.fabrication.BTLxProcess.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LButtFactory.rst", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LMiterFactory.rst", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.TButtFactory.rst", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings.rst", "api/generated/compas_timber.parts.Beam.rst", "api/generated/compas_timber.parts.Beam.ToString.rst", "api/generated/compas_timber.parts.Beam.add_blank_extension.rst", "api/generated/compas_timber.parts.Beam.add_feature.rst", "api/generated/compas_timber.parts.Beam.add_features.rst", "api/generated/compas_timber.parts.Beam.align_z.rst", "api/generated/compas_timber.parts.Beam.clear_features.rst", "api/generated/compas_timber.parts.Beam.copy.rst", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.parts.Beam.extension_to_plane.rst", "api/generated/compas_timber.parts.Beam.from_centerline.rst", "api/generated/compas_timber.parts.Beam.from_endpoints.rst", "api/generated/compas_timber.parts.Beam.from_json.rst", "api/generated/compas_timber.parts.Beam.from_jsonstring.rst", "api/generated/compas_timber.parts.Beam.get_geometry.rst", "api/generated/compas_timber.parts.Beam.remove_blank_extension.rst", "api/generated/compas_timber.parts.Beam.remove_features.rst", "api/generated/compas_timber.parts.Beam.sha256.rst", "api/generated/compas_timber.parts.Beam.to_json.rst", "api/generated/compas_timber.parts.Beam.to_jsonstring.rst", "api/generated/compas_timber.parts.Beam.transform.rst", "api/generated/compas_timber.parts.Beam.transform_numpy.rst", "api/generated/compas_timber.parts.Beam.transformed.rst", "api/generated/compas_timber.parts.Beam.transformed_numpy.rst", "api/generated/compas_timber.parts.Beam.validate_data.rst", "api/generated/compas_timber.planning.Actor.rst", "api/generated/compas_timber.planning.Actor.get_name.rst", "api/generated/compas_timber.planning.BuildingPlan.rst", "api/generated/compas_timber.planning.BuildingPlan.ToString.rst", "api/generated/compas_timber.planning.BuildingPlan.add_step.rst", "api/generated/compas_timber.planning.BuildingPlan.copy.rst", "api/generated/compas_timber.planning.BuildingPlan.from_json.rst", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.sha256.rst", "api/generated/compas_timber.planning.BuildingPlan.to_json.rst", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.validate_data.rst", "api/generated/compas_timber.planning.SimpleSequenceGenerator.rst", "api/generated/compas_timber.planning.Step.rst", "api/generated/compas_timber.planning.Step.ToString.rst", "api/generated/compas_timber.planning.Step.copy.rst", "api/generated/compas_timber.planning.Step.from_json.rst", "api/generated/compas_timber.planning.Step.from_jsonstring.rst", "api/generated/compas_timber.planning.Step.sha256.rst", "api/generated/compas_timber.planning.Step.to_json.rst", "api/generated/compas_timber.planning.Step.to_jsonstring.rst", "api/generated/compas_timber.planning.Step.transform.rst", "api/generated/compas_timber.planning.Step.validate_data.rst", "api/generated/compas_timber.rhino.find_neighboring_beams.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "license.rst", "tutorials.rst", "tutorials/BTLx_contribution_guide.rst", "tutorials/grasshopper/assembly.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beam.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joints.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "titles": ["API Reference", "compas_timber.assembly", "compas_timber.connections", "compas_timber.consumers", "compas_timber.fabrication", "compas_timber.parts", "compas_timber.planning", "rhino", "TimberAssembly", "TimberAssembly.ToString", "TimberAssembly.add_beam", "TimberAssembly.add_connection", "TimberAssembly.add_joint", "TimberAssembly.add_part", "TimberAssembly.are_parts_joined", "TimberAssembly.connections", "TimberAssembly.contains", "TimberAssembly.copy", "TimberAssembly.delete_connection", "TimberAssembly.delete_part", "TimberAssembly.find", "TimberAssembly.find_by_key", "TimberAssembly.from_json", "TimberAssembly.from_jsonstring", "TimberAssembly.parts", "TimberAssembly.remove_joint", "TimberAssembly.sha256", "TimberAssembly.to_json", "TimberAssembly.to_jsonstring", "TimberAssembly.transform", "TimberAssembly.transform_numpy", "TimberAssembly.transformed", "TimberAssembly.transformed_numpy", "TimberAssembly.validate_data", "BeamJoinningError", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "Joint", "Joint.ToString", "Joint.add_features", "Joint.copy", "Joint.create", "Joint.from_json", "Joint.from_jsonstring", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_json", "Joint.to_jsonstring", "Joint.validate_data", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_features", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.from_json", "LButtJoint.from_jsonstring", "LButtJoint.get_cross_cutting_plane", "LButtJoint.get_main_cutting_plane", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.to_json", "LButtJoint.to_jsonstring", "LButtJoint.validate_data", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_features", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.from_json", "LMiterJoint.from_jsonstring", "LMiterJoint.get_cutting_planes", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_json", "LMiterJoint.to_jsonstring", "LMiterJoint.validate_data", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_features", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.from_json", "TButtJoint.from_jsonstring", "TButtJoint.get_cutting_plane", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.to_json", "TButtJoint.to_jsonstring", "TButtJoint.validate_data", "XHalfLapJoint", "XHalfLapJoint.ToString", "XHalfLapJoint.add_features", "XHalfLapJoint.copy", "XHalfLapJoint.create", "XHalfLapJoint.from_json", "XHalfLapJoint.from_jsonstring", "XHalfLapJoint.restore_beams_from_keys", "XHalfLapJoint.sha256", "XHalfLapJoint.to_json", "XHalfLapJoint.to_jsonstring", "XHalfLapJoint.validate_data", "find_neighboring_beams", "BrepGeometryConsumer", "BTLx", "BTLx.btlx_string", "BTLx.process_assembly", "BTLx.register_joint", "BTLxFrenchRidgeLap", "BTLxFrenchRidgeLap.create_process", "BTLxFrenchRidgeLap.get_params", "BTLxFrenchRidgeLap.process_joints", "BTLxJackCut", "BTLxJackCut.create_process", "BTLxJackCut.generate_process", "BTLxProcess", "FrenchRidgeFactory", "FrenchRidgeFactory.apply_processings", "LButtFactory", "LButtFactory.apply_processings", "LMiterFactory", "LMiterFactory.apply_processings", "TButtFactory", "TButtFactory.apply_processings", "Beam", "Beam.ToString", "Beam.add_blank_extension", "Beam.add_feature", "Beam.add_features", "Beam.align_z", "Beam.clear_features", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_endpoints", "Beam.from_json", "Beam.from_jsonstring", "Beam.get_geometry", "Beam.remove_blank_extension", "Beam.remove_features", "Beam.sha256", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transform_numpy", "Beam.transformed", "Beam.transformed_numpy", "Beam.validate_data", "Actor", "Actor.get_name", "BuildingPlan", "BuildingPlan.ToString", "BuildingPlan.add_step", "BuildingPlan.copy", "BuildingPlan.from_json", "BuildingPlan.from_jsonstring", "BuildingPlan.sha256", "BuildingPlan.to_json", "BuildingPlan.to_jsonstring", "BuildingPlan.validate_data", "SimpleSequenceGenerator", "Step", "Step.ToString", "Step.copy", "Step.from_json", "Step.from_jsonstring", "Step.sha256", "Step.to_json", "Step.to_jsonstring", "Step.transform", "Step.validate_data", "find_neighboring_beams", "Citing", "Examples", "Create Joint", "COMPAS TIMBER", "Installation", "License", "Grasshopper plugin", "BTLx Contribution Guide", "Assembly", "Attributes", "Beam", "Examples", "Features", "Joints", "Show", "Utils", "Workflow"], "terms": {"compas_timb": [0, 8, 34, 35, 38, 42, 45, 50, 52, 56, 66, 70, 79, 83, 92, 96, 104, 105, 106, 109, 110, 114, 117, 118, 120, 122, 124, 126, 151, 153, 163, 164, 174, 175, 178, 179], "assembli": [0, 8, 10, 11, 12, 13, 16, 19, 20, 21, 24, 25, 42, 45, 52, 56, 61, 66, 70, 74, 79, 83, 87, 96, 99, 105, 106, 108, 129, 151, 163, 177, 178, 181, 188, 189, 191], "part": [0, 8, 11, 12, 13, 14, 15, 18, 19, 20, 21, 45, 106, 108, 110, 111, 114, 115, 119, 121, 123, 125, 126, 129, 140, 174, 178, 182, 185, 187, 189], "connect": [0, 9, 11, 18, 34, 35, 38, 39, 42, 45, 50, 52, 53, 56, 66, 67, 70, 79, 80, 83, 92, 93, 96, 104, 119, 121, 123, 125, 127, 154, 165, 178, 180, 183, 188], "consum": [0, 105, 178], "fabric": [0, 106, 109, 110, 113, 114, 117, 118, 120, 122, 124, 175, 178], "plan": [0, 151, 153, 163, 164, 178], "rhino": [0, 9, 39, 53, 67, 80, 93, 104, 127, 154, 165, 174, 176, 178, 179, 184, 185, 190], "The": [7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 38, 41, 42, 43, 44, 47, 48, 49, 52, 55, 56, 57, 58, 63, 64, 65, 66, 69, 70, 71, 72, 76, 77, 78, 79, 82, 83, 84, 85, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 114, 117, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 156, 157, 158, 160, 161, 162, 166, 167, 168, 170, 171, 173, 174, 180, 181, 184, 185, 187, 188, 190, 191], "modul": [7, 117, 178, 182], "contain": [7, 8, 22, 23, 36, 42, 43, 44, 56, 57, 58, 70, 71, 72, 83, 84, 85, 96, 97, 98, 104, 126, 138, 139, 153, 157, 158, 164, 167, 168, 174], "function": [7, 104, 117, 181, 182], "type": [7, 9, 17, 22, 23, 33, 37, 39, 41, 43, 44, 49, 52, 53, 55, 57, 58, 65, 66, 67, 69, 71, 72, 78, 79, 80, 82, 84, 85, 91, 93, 95, 97, 98, 103, 105, 109, 110, 113, 117, 127, 133, 138, 139, 140, 150, 151, 154, 156, 157, 158, 162, 164, 165, 166, 167, 168, 173, 178, 182, 188, 189], "meant": 7, "us": [7, 9, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 46, 49, 51, 52, 53, 62, 65, 66, 67, 75, 78, 79, 80, 88, 91, 93, 100, 103, 104, 106, 113, 127, 131, 135, 143, 146, 147, 148, 149, 150, 152, 154, 159, 162, 164, 165, 169, 173, 174, 175, 178, 180, 181, 182, 183, 184, 185, 188, 190], "context": [7, 13], "class": [8, 9, 12, 16, 35, 38, 39, 50, 52, 53, 66, 67, 79, 80, 92, 93, 105, 106, 109, 110, 114, 117, 118, 120, 122, 124, 126, 127, 151, 153, 154, 163, 164, 165, 178, 182], "sourc": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 184, 185], "base": [8, 34, 35, 38, 50, 52, 66, 79, 92, 105, 106, 110, 114, 117, 118, 120, 122, 124, 126, 151, 153, 163, 164, 183, 188, 191], "repres": [8, 52, 66, 79, 106, 110, 114, 126, 151, 185], "timber": [8, 106, 114, 126, 175, 181, 185, 188, 191], "beam": [8, 10, 12, 34, 35, 36, 37, 38, 40, 42, 45, 52, 54, 56, 61, 66, 68, 70, 74, 79, 81, 83, 87, 94, 96, 99, 104, 105, 110, 114, 174, 177, 178, 181, 183, 184, 187, 188, 189, 190, 191], "joint": [8, 12, 14, 25, 34, 35, 50, 52, 54, 56, 66, 68, 70, 79, 81, 83, 92, 94, 96, 106, 109, 110, 111, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 141, 176, 178, 181, 182, 183, 185, 189, 191], "etc": [8, 106, 107, 126, 176, 178, 185], "attribut": [8, 11, 15, 38, 50, 52, 66, 79, 105, 106, 110, 117, 126, 163, 164, 178, 181, 182, 185], "list": [8, 12, 14, 36, 38, 42, 52, 56, 66, 70, 79, 83, 96, 104, 106, 117, 126, 130, 134, 142, 164, 174, 182, 188, 191], "A": [8, 20, 36, 42, 52, 56, 66, 70, 79, 83, 96, 104, 105, 106, 119, 121, 123, 125, 126, 136, 137, 175, 180, 185], "assign": [8, 13, 20, 188, 190], "thi": [8, 9, 10, 16, 17, 20, 22, 23, 25, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 49, 52, 53, 54, 55, 56, 57, 58, 65, 66, 67, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 84, 85, 91, 93, 94, 95, 96, 97, 98, 103, 104, 110, 112, 113, 116, 117, 119, 121, 123, 125, 126, 127, 128, 129, 133, 135, 138, 139, 141, 148, 149, 150, 154, 156, 157, 158, 162, 164, 165, 166, 167, 168, 173, 174, 176, 180, 182, 184, 185, 189, 191], "part_kei": 8, "int": [8, 10, 11, 12, 13, 15, 21, 51, 110, 128, 141, 152, 164], "kei": [8, 10, 13, 21, 45, 119, 121, 123, 125, 128, 141, 184], "includ": [8, 140, 180, 182], "beam_kei": 8, "joint_kei": [8, 128, 141], "method": [8, 9, 35, 37, 38, 39, 42, 45, 50, 52, 53, 54, 56, 66, 67, 68, 70, 79, 80, 81, 83, 92, 93, 96, 106, 110, 112, 114, 116, 118, 120, 122, 124, 126, 127, 151, 153, 154, 164, 165, 178, 182], "inherit": [8, 38, 52, 66, 79, 92, 126, 153, 164, 178, 182], "convert": [9, 27, 28, 39, 47, 48, 53, 63, 64, 67, 76, 77, 80, 89, 90, 93, 101, 102, 127, 144, 145, 154, 160, 161, 165, 170, 171], "instanc": [9, 12, 22, 23, 39, 42, 43, 44, 52, 53, 56, 57, 58, 66, 67, 70, 71, 72, 79, 80, 83, 84, 85, 93, 96, 97, 98, 117, 127, 138, 139, 154, 157, 158, 165, 167, 168, 176, 182], "string": [9, 23, 28, 39, 44, 48, 51, 52, 53, 58, 64, 66, 67, 72, 77, 79, 80, 85, 90, 93, 98, 102, 106, 107, 127, 139, 145, 152, 154, 158, 161, 165, 168, 171, 184, 185], "exist": [9, 39, 53, 67, 80, 93, 127, 154, 165, 182], "net": [9, 39, 53, 67, 80, 93, 127, 154, 165], "compat": [9, 39, 52, 53, 66, 67, 79, 80, 93, 104, 127, 154, 165], "when": [9, 20, 36, 39, 53, 54, 67, 68, 80, 81, 93, 127, 128, 154, 165, 184, 188], "ironpython": [9, 39, 53, 67, 80, 93, 127, 154, 165], "implicit": [9, 39, 53, 67, 80, 93, 127, 154, 165], "convers": [9, 39, 53, 67, 80, 93, 127, 154, 165], "usual": [9, 39, 53, 67, 80, 93, 126, 127, 154, 165], "take": [9, 39, 53, 67, 80, 93, 127, 154, 165, 182, 191], "place": [9, 39, 53, 67, 80, 93, 127, 154, 165], "cpython": [9, 39, 53, 67, 80, 93, 127, 154, 165], "kick": [9, 39, 53, 67, 80, 93, 127, 154, 165], "its": [9, 15, 20, 21, 27, 28, 39, 47, 48, 53, 63, 64, 67, 76, 77, 80, 89, 90, 93, 101, 102, 109, 121, 125, 127, 136, 144, 145, 154, 160, 161, 165, 170, 171, 179, 184, 185, 188], "default": [9, 13, 17, 27, 28, 39, 41, 47, 48, 53, 55, 63, 64, 67, 69, 76, 77, 80, 82, 89, 90, 93, 95, 101, 102, 114, 127, 133, 136, 137, 144, 145, 154, 156, 160, 161, 165, 166, 170, 171, 178, 183, 185, 188, 190], "print": [9, 27, 28, 39, 47, 48, 53, 63, 64, 67, 76, 77, 80, 89, 90, 93, 101, 102, 127, 144, 145, 154, 160, 161, 165, 170, 171], "self": [9, 39, 53, 67, 80, 93, 117, 127, 154, 165, 182], "gettyp": [9, 39, 53, 67, 80, 93, 127, 154, 165], "fullnam": [9, 39, 53, 67, 80, 93, 127, 154, 165], "similar": [9, 39, 53, 67, 80, 93, 127, 154, 165, 188], "overrid": [9, 39, 53, 67, 80, 93, 127, 154, 165, 191], "object": [9, 12, 16, 17, 22, 23, 25, 27, 28, 33, 35, 36, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 53, 55, 56, 57, 58, 63, 64, 65, 67, 69, 70, 71, 72, 76, 77, 78, 80, 82, 83, 84, 85, 89, 90, 91, 93, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 110, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 133, 138, 139, 140, 144, 145, 150, 151, 154, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 173, 178, 183, 184, 185, 189, 190], "fix": [9, 39, 53, 67, 80, 93, 127, 154, 165], "make": [9, 17, 39, 41, 53, 55, 67, 69, 80, 82, 93, 95, 127, 133, 154, 156, 165, 166], "grasshopp": [9, 39, 53, 67, 80, 93, 127, 154, 165, 176, 178, 185], "displai": [9, 39, 53, 67, 80, 93, 127, 154, 165, 184, 189], "proper": [9, 39, 53, 67, 80, 93, 127, 154, 165], "represent": [9, 27, 28, 39, 47, 48, 51, 52, 53, 63, 64, 66, 67, 76, 77, 79, 80, 89, 90, 93, 101, 102, 127, 144, 145, 152, 154, 160, 161, 165, 170, 171, 182], "ar": [9, 11, 20, 36, 37, 39, 42, 45, 53, 56, 67, 70, 80, 83, 93, 96, 104, 117, 127, 154, 164, 165, 176, 182, 183, 184, 187, 188, 189, 190, 191], "panel": [9, 39, 53, 67, 80, 93, 127, 154, 165], "other": [9, 12, 39, 53, 67, 80, 93, 110, 127, 154, 165, 175, 180, 188, 191], "output": [9, 37, 39, 53, 67, 80, 93, 127, 154, 165, 183], "add": [10, 11, 12, 13, 18, 19, 40, 54, 68, 81, 94, 128, 129, 130, 181, 182, 183, 190], "paramet": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 55, 56, 57, 58, 62, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 114, 116, 117, 119, 121, 123, 125, 126, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 174, 182, 183, 184, 185, 190], "return": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 41, 42, 43, 44, 46, 48, 49, 51, 55, 56, 57, 58, 62, 64, 65, 69, 70, 71, 72, 75, 77, 78, 82, 83, 84, 85, 88, 90, 91, 95, 96, 97, 98, 100, 102, 103, 104, 106, 107, 109, 113, 119, 121, 123, 125, 129, 133, 134, 135, 136, 137, 138, 139, 140, 143, 145, 146, 147, 148, 149, 150, 152, 156, 157, 158, 159, 161, 162, 166, 167, 168, 169, 171, 173, 174, 183, 189], "graph": [10, 12, 13], "identifi": [10, 11, 12, 13, 15, 20, 21, 104], "ad": [10, 42, 56, 70, 83, 96, 129, 130, 174], "b": 11, "kwarg": [11, 13, 42, 56, 70, 83, 96], "between": [11, 15, 18, 66, 184, 188, 191], "two": [11, 18, 34, 37, 38, 42, 52, 56, 66, 70, 83, 96, 134, 185, 188, 191], "compa": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 41, 43, 44, 46, 55, 57, 58, 62, 69, 71, 72, 75, 82, 84, 85, 88, 95, 97, 98, 100, 126, 129, 133, 138, 139, 140, 143, 156, 157, 158, 159, 164, 166, 167, 168, 169, 175, 181, 188], "datastructur": [11, 13, 18, 19, 20, 21, 24, 26, 31, 32, 46, 62, 75, 88, 100, 143, 148, 149, 159, 169], "from": [11, 19, 22, 23, 25, 26, 37, 43, 44, 46, 57, 58, 62, 71, 72, 75, 84, 85, 88, 97, 98, 100, 117, 136, 137, 138, 139, 141, 142, 143, 157, 158, 159, 167, 168, 169, 176, 178, 180, 181, 182, 184, 185, 187, 188], "dict": [11, 13, 15, 38, 105, 106, 110, 113, 117, 119, 121, 123, 125, 182], "str": [11, 13, 15, 20, 21, 22, 23, 26, 27, 28, 38, 43, 44, 46, 47, 48, 51, 52, 57, 58, 62, 63, 64, 66, 71, 72, 75, 76, 77, 79, 84, 85, 88, 89, 90, 97, 98, 100, 101, 102, 106, 110, 114, 117, 134, 138, 139, 143, 144, 145, 152, 157, 158, 159, 160, 161, 164, 167, 168, 169, 170, 171], "ani": [11, 13, 15, 33, 49, 65, 78, 91, 103, 150, 162, 173, 176, 180, 187, 189], "option": [11, 13, 15, 17, 21, 26, 27, 28, 36, 37, 41, 46, 47, 48, 55, 62, 63, 64, 69, 75, 76, 77, 82, 88, 89, 90, 95, 100, 101, 102, 104, 114, 133, 143, 144, 145, 156, 159, 160, 161, 166, 169, 170, 171, 185, 188, 191], "compil": 11, "name": [11, 13, 114, 117, 182, 184, 188, 189], "argument": 11, "tupl": [11, 15, 37, 66, 126, 135], "node": 11, "rais": [11, 22, 23, 40, 42, 43, 44, 56, 57, 58, 70, 71, 72, 83, 84, 85, 94, 96, 97, 98, 138, 139, 157, 158, 167, 168], "assemblyerror": 11, "If": [11, 15, 22, 23, 26, 27, 28, 37, 43, 44, 46, 47, 48, 57, 58, 62, 63, 64, 71, 72, 75, 76, 77, 84, 85, 88, 89, 90, 97, 98, 100, 101, 102, 129, 138, 139, 142, 143, 144, 145, 157, 158, 159, 160, 161, 167, 168, 169, 170, 171, 174, 175, 185, 188], "an": [12, 13, 17, 22, 23, 27, 28, 33, 34, 36, 41, 42, 43, 44, 47, 48, 49, 52, 55, 56, 57, 58, 63, 64, 65, 66, 69, 70, 71, 72, 76, 77, 78, 79, 82, 83, 84, 85, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 112, 116, 126, 133, 138, 139, 144, 145, 150, 151, 156, 157, 158, 160, 161, 162, 166, 167, 168, 170, 171, 173, 175, 176, 178, 179, 180, 181, 183, 184, 185, 188], "dowel": 12, "steel": 12, "plate": 12, "involv": [12, 123], "current": [12, 13, 17, 41, 55, 69, 82, 95, 133, 156, 166, 178], "none": [13, 17, 18, 19, 20, 21, 29, 30, 36, 37, 41, 55, 69, 82, 95, 104, 109, 114, 115, 119, 121, 123, 125, 128, 129, 132, 133, 136, 137, 142, 146, 147, 156, 166, 174, 185], "note": [13, 104, 175, 189], "i": [13, 14, 15, 20, 22, 23, 33, 36, 37, 38, 42, 43, 44, 45, 49, 52, 54, 56, 57, 58, 65, 66, 68, 70, 71, 72, 78, 79, 81, 83, 84, 85, 91, 96, 97, 98, 103, 104, 106, 110, 112, 113, 116, 126, 128, 129, 134, 135, 138, 139, 150, 153, 157, 158, 162, 163, 167, 168, 173, 175, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190], "uniqu": [13, 20], "onli": [13, 45, 129, 184], "nest": 13, "mai": [13, 183, 184], "have": [13, 42, 56, 70, 83, 96, 117, 185], "same": [13, 14, 37, 163, 164, 188, 191], "valu": [13, 51, 104, 126, 152, 184], "one": [13, 130, 163, 164, 182, 185, 188, 191], "which": [13, 34, 36, 37, 42, 52, 56, 66, 70, 79, 83, 96, 104, 110, 117, 128, 131, 134, 135, 141, 151, 153, 164, 182, 183, 185, 188], "case": 13, "automat": [13, 20, 54, 68, 81, 188, 190], "integ": 13, "addit": [13, 15, 36, 181, 184, 185, 187], "collect": [13, 153, 174], "check": [14, 174, 178, 184], "alreadi": 14, "defin": [14, 40, 94, 110, 136, 184, 185, 188, 190, 191], "set": [14, 36, 104, 174, 183, 184, 185, 189], "bool": [14, 15, 16, 26, 27, 28, 36, 46, 47, 48, 62, 63, 64, 75, 76, 77, 88, 89, 90, 100, 101, 102, 110, 129, 140, 143, 144, 145, 159, 160, 161, 164, 169, 170, 171], "data": [15, 16, 17, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 38, 41, 43, 44, 46, 47, 48, 49, 55, 57, 58, 62, 63, 64, 65, 69, 71, 72, 75, 76, 77, 78, 82, 84, 85, 88, 89, 90, 91, 95, 97, 98, 100, 101, 102, 103, 106, 133, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 153, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 173], "fals": [15, 16, 26, 27, 28, 36, 46, 47, 48, 62, 63, 64, 75, 76, 77, 88, 89, 90, 100, 101, 102, 129, 140, 143, 144, 145, 159, 160, 161, 169, 170, 171], "iter": 15, "over": 15, "true": [15, 16, 26, 27, 28, 36, 46, 47, 48, 62, 63, 64, 75, 76, 77, 88, 89, 90, 100, 101, 102, 129, 135, 140, 143, 144, 145, 159, 160, 161, 169, 170, 171, 183, 185], "yield": [15, 24, 105], "next": 15, "u": 15, "v": 15, "connector": 15, "attr": [15, 117], "obj": [16, 26, 46, 62, 75, 88, 100, 143, 159, 164, 169], "given": [16, 36, 37, 42, 51, 56, 70, 83, 96, 104, 131, 134, 135, 137, 152, 184], "otherwis": [16, 37, 129, 180, 185], "look": 16, "cl": [17, 41, 55, 69, 82, 95, 133, 156, 166], "independ": [17, 41, 55, 69, 82, 95, 133, 156, 166], "edg": 18, "delet": 18, "remov": [19, 25, 128, 141, 142, 184, 187], "guid": [20, 178, 181, 185], "global": 20, "creat": [20, 38, 52, 54, 66, 68, 79, 81, 109, 110, 118, 120, 122, 124, 136, 137, 176, 178, 179, 181, 182, 183, 184, 185, 188, 191], "can": [20, 21, 33, 49, 65, 78, 91, 103, 117, 140, 150, 153, 162, 164, 173, 176, 181, 182, 185, 188], "t": [20, 21, 79, 124], "found": [20, 21, 182], "find": [21, 36, 104, 174, 188], "classmethod": [22, 23, 33, 36, 42, 43, 44, 49, 51, 56, 57, 58, 65, 70, 71, 72, 78, 83, 84, 85, 91, 96, 97, 98, 103, 109, 111, 115, 119, 121, 123, 125, 136, 137, 138, 139, 150, 152, 157, 158, 162, 167, 168, 173], "filepath": [22, 27, 43, 47, 57, 63, 71, 76, 84, 89, 97, 101, 138, 144, 157, 160, 167, 170], "construct": [22, 23, 33, 43, 44, 49, 57, 58, 65, 71, 72, 78, 84, 85, 91, 97, 98, 103, 138, 139, 150, 157, 158, 162, 167, 168, 173, 178], "json": [22, 23, 27, 28, 43, 44, 47, 48, 57, 58, 63, 64, 71, 72, 76, 77, 84, 85, 89, 90, 97, 98, 101, 102, 138, 139, 144, 145, 157, 158, 160, 161, 167, 168, 170, 171], "file": [22, 27, 43, 47, 57, 63, 71, 76, 84, 89, 97, 101, 106, 138, 144, 157, 160, 167, 170, 180, 182, 186], "path": [22, 27, 43, 47, 57, 63, 71, 76, 84, 89, 97, 101, 138, 144, 157, 160, 167, 170], "ha": [22, 23, 34, 43, 44, 57, 58, 71, 72, 84, 85, 97, 98, 104, 138, 139, 157, 158, 164, 167, 168, 185, 188, 189, 190], "correct": [22, 23, 43, 44, 57, 58, 71, 72, 84, 85, 97, 98, 138, 139, 157, 158, 167, 168], "schema": [22, 23, 33, 43, 44, 49, 57, 58, 65, 71, 72, 78, 84, 85, 91, 97, 98, 103, 138, 139, 150, 157, 158, 162, 167, 168, 173], "typeerror": [22, 23, 43, 44, 57, 58, 71, 72, 84, 85, 97, 98, 138, 139, 157, 158, 167, 168], "individu": [24, 117], "as_str": [26, 46, 62, 75, 88, 100, 143, 159, 169], "comput": [26, 37, 46, 62, 75, 88, 100, 143, 159, 169], "hash": [26, 46, 62, 75, 88, 100, 143, 159, 169], "comparison": [26, 46, 62, 75, 88, 100, 143, 159, 169], "dure": [26, 45, 46, 62, 75, 88, 100, 143, 159, 164, 169], "version": [26, 46, 62, 75, 88, 100, 143, 159, 169, 179], "control": [26, 46, 62, 75, 88, 100, 143, 159, 169], "algorithm": [26, 46, 62, 75, 88, 100, 104, 143, 159, 169], "digest": [26, 46, 62, 75, 88, 100, 143, 159, 169], "hexadecim": [26, 46, 62, 75, 88, 100, 143, 159, 169], "format": [26, 46, 62, 75, 88, 100, 106, 143, 159, 169, 184], "rather": [26, 46, 62, 75, 88, 100, 143, 159, 169], "than": [26, 42, 46, 56, 62, 70, 75, 83, 88, 96, 100, 143, 159, 169, 188], "byte": [26, 46, 62, 75, 88, 100, 143, 159, 169], "exampl": [26, 45, 46, 62, 75, 88, 100, 104, 143, 159, 169, 178, 181, 184, 185, 188, 191], "import": [26, 46, 62, 75, 88, 100, 143, 159, 169, 182, 191], "mesh": [26, 46, 62, 75, 88, 100, 143, 159, 169, 177], "from_obj": [26, 46, 62, 75, 88, 100, 143, 159, 169], "get": [26, 46, 62, 75, 88, 100, 143, 159, 169, 179, 181], "face": [26, 46, 62, 75, 88, 100, 110, 126, 135, 143, 159, 169], "v1": [26, 46, 62, 75, 88, 100, 143, 159, 169], "v2": [26, 46, 62, 75, 88, 100, 143, 159, 169], "vertex_attribut": [26, 46, 62, 75, 88, 100, 143, 159, 169], "vertex_sampl": [26, 46, 62, 75, 88, 100, 143, 159, 169], "1": [26, 46, 62, 75, 88, 100, 126, 143, 159, 169, 177, 182, 185], "0": [26, 46, 62, 75, 88, 100, 126, 143, 159, 169, 177, 185, 188], "z": [26, 46, 62, 75, 88, 100, 126, 136, 137, 143, 159, 169, 185, 187, 190], "v3": [26, 46, 62, 75, 88, 100, 143, 159, 169], "pretti": [27, 28, 47, 48, 63, 64, 76, 77, 89, 90, 101, 102, 106, 107, 144, 145, 160, 161, 170, 171], "nativ": [27, 28, 47, 48, 63, 64, 76, 77, 89, 90, 101, 102, 144, 145, 160, 161, 170, 171], "save": [27, 28, 47, 48, 61, 63, 64, 74, 76, 77, 87, 89, 90, 99, 101, 102, 144, 145, 160, 161, 170, 171], "structur": [29, 30, 31, 32, 146, 147, 148, 149, 175, 178, 181, 183, 191], "transform": [30, 32, 140, 147, 149], "copi": [31, 32, 140, 148, 149, 180], "valid": [33, 49, 65, 78, 91, 103, 150, 162, 173], "against": [33, 49, 65, 78, 91, 103, 150, 162, 173], "": [33, 40, 49, 52, 65, 66, 78, 79, 91, 94, 103, 126, 131, 134, 136, 137, 140, 150, 162, 173, 184, 190], "raw": [33, 49, 65, 78, 91, 103, 150, 162, 173], "__from_data__": [33, 49, 65, 78, 91, 103, 150, 162, 173], "except": 34, "indic": [34, 110, 136, 137, 184, 185], "error": [34, 183, 184], "occur": 34, "while": 34, "try": 34, "join": [34, 38, 42, 52, 56, 66, 70, 79, 83, 96, 110, 183, 188], "more": [34, 130, 178, 181, 182], "should": [34, 38, 40, 45, 94, 104, 117, 128, 140, 182, 188], "calcul": [34, 40, 94], "featur": [34, 40, 54, 68, 81, 94, 105, 126, 129, 130, 140, 142, 178, 181, 183, 189, 191], "appli": [34, 40, 94, 105, 110, 117, 119, 121, 123, 125, 129, 182, 183, 188, 189, 191], "provid": [35, 180, 181, 183, 185], "tool": [35, 178, 181, 185, 189, 190], "detect": 35, "intersect": [35, 36, 37, 188], "topologi": [35, 37, 42, 50, 51, 52, 56, 66, 70, 79, 83, 96], "rtree": [36, 174], "max_dist": [36, 37], "pair": [36, 37, 104, 174, 184, 188, 191], "r": [36, 104, 179], "tree": [36, 104], "search": [36, 104], "neighbor": [36, 104, 174], "float": [36, 37, 104, 110, 126, 128, 135, 136, 137, 174], "distanc": [36, 37, 188], "apart": 36, "non": 36, "touch": 36, "still": 36, "consid": [36, 37], "neightbor": [36, 174], "beam_a": [37, 66], "beam_b": [37, 66], "tol": 37, "1e": 37, "06": 37, "within": [37, 164], "role": [37, 45], "sensit": 37, "consist": 37, "specif": [37, 45, 117, 178, 182], "order": [37, 104, 113, 163, 191], "e": [37, 45, 176, 184, 188, 189, 190], "g": [37, 45, 176, 184], "main": [37, 45, 52, 61, 74, 79, 81, 87, 99, 188], "first": [37, 66, 134, 188, 191], "cross": [37, 45, 52, 61, 74, 79, 81, 87, 99, 126, 136, 137, 185, 188], "second": [37, 66, 134, 188], "thei": 37, "were": [37, 184], "input": [37, 104, 117, 181, 182, 184, 185, 188], "gener": [37, 105, 108, 112, 116, 117, 163, 182, 191], "toler": [37, 188], "mathemat": 37, "maximum": 37, "desigen": 37, "unit": [37, 104, 135], "jointtopologi": [37, 178], "instanti": [38, 117, 182], "directli": 38, "respect": [38, 45, 188], "implement": [38, 45, 174, 178], "instead": [38, 185], "end": [38, 52, 66, 79, 110, 126, 128, 134, 135, 137, 188], "map": [38, 105, 181, 190], "ehich": 38, "each": [38, 66, 117, 135, 153, 182, 184, 188], "affect": [40, 94], "beamjoinningerror": [40, 94, 178], "whenev": [40, 94], "wa": [40, 94], "abl": [40, 94], "new": [42, 56, 70, 83, 96, 179, 182, 185], "expect": [42, 56, 70, 83, 96], "been": [42, 56, 70, 83, 96, 164], "befor": [42, 56, 70, 83, 96, 189], "call": [42, 45, 54, 56, 68, 70, 81, 83, 96, 117, 129, 182, 185, 188], "code": [42, 56, 70, 83, 96, 176, 178], "doe": [42, 56, 70, 83, 96, 182, 185, 188], "verifi": [42, 56, 70, 83, 96, 135], "adjac": [42, 56, 70, 83, 96], "lie": [42, 56, 70, 83, 96], "allow": [42, 56, 70, 83, 96, 135, 164], "them": [42, 56, 66, 70, 83, 96, 117, 176, 182, 184, 188], "respons": [42, 56, 70, 83, 96], "valueerror": [42, 56, 70, 83, 96], "less": [42, 56, 70, 83, 96, 126], "assemebli": [42, 56, 70, 83, 96], "jo": [42, 56, 70, 83, 96], "belong": [42, 56, 70, 83, 96], "whould": [42, 56, 70, 83, 96], "togeth": [42, 56, 70, 83, 96, 185], "restor": 45, "refer": [45, 61, 74, 87, 99, 110, 178, 181, 182, 184, 188], "associ": [45, 52, 66, 79, 110, 121, 125, 164, 180], "serial": [45, 61, 74, 87, 99], "To": [45, 179, 181, 182, 183, 188, 191], "avoid": [45, 188], "circular": 45, "store": [45, 184, 185], "de": [45, 61, 74, 87, 99], "sinc": 45, "concret": 45, "see": [45, 181, 185, 186, 190], "tbuttjoint": [45, 177, 178], "enumer": 50, "possibl": [50, 184], "topo_unknown": [50, 51], "topo_i": 50, "topo_l": [50, 51], "topo_t": [50, 51], "topo_x": [50, 51], "For": [51, 104, 152, 178, 190, 191], "log": [51, 152, 183], "One": [51, 152, 164], "l": [52, 66, 120, 122, 123], "butt": [52, 79, 120, 124], "trim": [52, 54, 66, 68, 79, 81, 183, 187, 188], "pleas": [52, 66, 79, 175], "properli": [52, 66, 79], "timberassembli": [52, 66, 79, 163, 177, 178], "main_beam": [52, 79, 177], "cross_beam": [52, 79, 177], "cutting_plane_main": [52, 79], "frame": [52, 66, 79, 110, 114, 115, 126, 164, 177, 178, 181, 183, 191], "cutting_plane_cross": [52, 79], "joint_typ": [52, 66, 79, 109], "requir": [54, 68, 113, 117, 128, 141, 179], "extens": [54, 68, 128, 135, 141], "both": [54, 68], "assemli": [61, 74, 99], "after": [61, 74, 87, 99, 105], "resotr": [61, 74, 87, 99], "miter": [66, 122, 123], "plane": [66, 81, 114, 135, 185, 187, 190], "bisector": [66, 188], "angl": [66, 110, 188], "centerlin": [66, 126, 134, 136, 137, 181, 184, 185, 188, 190], "cutting_plan": 66, "normal": [66, 126], "point": [66, 126, 134, 137, 178, 190], "opposit": 66, "direct": [66, 126, 135, 136, 137, 174, 185], "along": [79, 126, 188], "length": [79, 126, 136, 188], "anoth": 79, "inflate_bi": [104, 174], "axi": [104, 126, 136, 137, 185, 190], "align": [104, 126, 131, 181, 190], "bound": [104, 126, 174], "box": [104, 126, 164, 174, 181, 189], "aabb": [104, 126], "enlarg": 104, "amount": [104, 128, 135, 174], "element": [104, 117, 134, 163, 164], "design": [104, 175, 178, 181, 184, 185], "regard": 104, "inflat": [104, 174], "pluggabl": 104, "In": [104, 178, 179, 188], "plugin": [104, 178, 185], "avail": [104, 140], "result": [105, 134, 163, 188], "geometri": [105, 126, 140, 164, 174, 178, 181, 183, 185, 187, 189, 190, 191], "feature_map": 105, "featureappl": 105, "applic": 105, "beamgeometri": 105, "process": [105, 108, 110, 112, 113, 114, 116, 117, 119, 121, 123, 125, 178, 181, 182, 191], "histori": 106, "btlx_string": 106, "xml": [106, 107], "visual": [106, 107, 153, 164, 176, 183], "gh": [106, 107], "termin": [106, 107], "dictionari": [106, 119, 121, 123, 125], "btlxpart": [106, 110, 114, 117, 119, 121, 123, 125, 182], "joint_factori": [109, 117, 182], "regist": 109, "correspond": [109, 126, 134, 184, 185, 190], "factori": [109, 117, 118, 120, 122, 124, 182], "jointfactori": 109, "french": [110, 118], "ridg": [110, 118], "lap": 110, "is_top": [110, 111], "flag": 110, "top": [110, 181], "bottom": 110, "process_typ": [110, 117, 182], "frenchridgelap": 110, "other_beam": 110, "orient": [110, 136, 137, 190], "drill_hole_diamet": 110, "diamet": 110, "drill": 110, "hole": [110, 181], "ref_face_index": 110, "index": [110, 178, 189], "ref_fac": 110, "surfac": [110, 182], "header_attribut": [110, 117, 182], "header": 110, "process_paramet": [110, 117], "geometr": [110, 113, 117, 178, 182, 183, 187], "btlx": [110, 117, 178, 181], "degre": 110, "intern": [112, 116], "properti": 113, "all": [113, 135, 140, 142, 174, 180, 184], "It": [113, 178, 181, 183, 184, 185, 190], "ordereddict": 113, "maintain": [113, 178], "origin": [113, 126, 185, 189, 190], "jack": 114, "cut": [114, 181, 183, 187, 188], "joint_nam": [114, 115], "append": [117, 182], "btlx_process": [117, 182], "eg": 117, "btlxjackcut": [117, 178], "match": [117, 182], "describ": [117, 182], "deriv": [117, 182], "relat": [117, 182], "some": [117, 181, 190], "combin": 117, "multipl": [117, 176, 182], "cover": 117, "register_joint": [117, 182], "so": [117, 180, 182], "typic": [117, 164, 182], "need": [117, 131, 182, 184, 191], "param": 117, "et_el": 117, "et": 117, "stud": [126, 185], "slat": 126, "rectangular": [126, 185], "section": [126, 136, 137, 176, 181, 185], "local": [126, 185, 189], "coordin": [126, 185, 189], "system": [126, 185, 189], "locat": [126, 164, 185], "start": [126, 128, 134, 135, 137, 181, 185], "x": [126, 185, 188, 190], "major": [126, 185], "also": [126, 129, 175, 178, 181, 184, 185], "fibr": [126, 181], "solid": [126, 183], "wood": 126, "y": [126, 185, 190], "width": [126, 136, 137, 177, 184, 185], "smaller": [126, 185], "dimens": [126, 185], "height": [126, 136, 137, 177, 184, 185], "larger": [126, 185], "blank": [126, 128, 141], "parametr": [126, 178], "6": 126, "side": [126, 187, 188], "equal": 126, "posit": [126, 187, 188], "2": [126, 177, 182], "3": [126, 179, 182], "4": [126, 177, 182], "5": 126, "line": [126, 136, 178, 184, 185], "centerline_start": 126, "centerline_end": 126, "xmin": 126, "ymin": 126, "zmin": 126, "xmax": 126, "ymax": 126, "zmax": 126, "long_edg": 126, "long": [126, 135], "midpoint": 126, "middl": 126, "extend": [128, 135], "well": 128, "user": [129, 184], "must": 129, "apply_featur": 129, "vector": [131, 136, 137, 178, 185], "z_axi": 131, "definit": [131, 182, 183], "todo": [131, 135], "Not": 131, "anywher": 131, "features_to_clear": 132, "endpoint": [134, 137], "closer": 134, "interest": 134, "either": 134, "depend": [134, 136, 137, 179, 182, 189], "actual": 134, "pln": 135, "metric": 135, "minimum": 135, "pass": 135, "through": [135, 175], "z_vector": [136, 137], "worldz": [136, 137], "worldx": [136, 137], "point_start": 137, "point_end": 137, "end_point": 137, "with_featur": 140, "drawn": [140, 185], "scene": 140, "enum": 151, "could": 151, "execut": [151, 164, 176], "instruct": [151, 153, 164], "human": [152, 164], "robot": [152, 164], "build": [153, 163, 164, 191], "step": [153, 155, 163, 178, 182], "simpl": [163, 178, 181], "sequenc": [163, 178], "per": 163, "buildingplan": [163, 178], "assembl": 164, "singl": [164, 182], "actor": [164, 178], "element_id": 164, "cad": [164, 176], "id": [164, 176], "elements_held": 164, "held": 164, "support": [164, 175, 176], "is_built": 164, "whether": [164, 180, 189], "is_plan": 164, "increment": 164, "cylind": 164, "prioriti": 164, "parallel": [164, 185], "prior": 174, "research": [175, 178, 180], "project": [175, 178], "develop": [175, 178], "aleksandra": 175, "apolinarska": 175, "chen": 175, "kasir": 175, "gonzalo": 175, "casa": 175, "gramazio": [175, 178, 180], "kohler": [175, 178, 180], "eth": [175, 178], "zurich": [175, 178], "swiss": 175, "nation": 175, "scienc": 175, "foundat": 175, "center": 175, "compet": 175, "digit": 175, "nccr": 175, "dfab": 175, "programm": 175, "As": 175, "open": [175, 178], "mani": [175, 176, 178], "contributor": 175, "you": [175, 181, 185, 188, 191], "your": 175, "work": 175, "acknowledg": 175, "misc": 175, "titl": 175, "librari": [175, 176, 178, 181], "author": [175, 180], "anna": 175, "http": [175, 179, 182], "github": [175, 179], "com": [175, 179, 182], "gramaziokohl": 175, "year": 175, "2022": 175, "2023": 175, "doi": 175, "10": [175, 179], "5281": 175, "zenodo": 175, "7934267": 175, "url": 175, "present": 176, "differ": [176, 182, 188, 191], "concept": [176, 181], "There": [176, 184], "wai": 176, "run": [176, 178], "python": [176, 178, 179, 181], "environ": [176, 178, 179], "interact": 176, "session": 176, "text": 176, "editor": 176, "sublim": 176, "studio": 176, "eclips": 176, "insid": 176, "blender": 176, "worldxi": 177, "depth": 177, "geometry_typ": 177, "add_beam": 177, "packag": [178, 179, 182], "model": 178, "written": 178, "ecosystem": 178, "rhinocero": 178, "3d": 178, "plug": 178, "activ": [178, 179, 183, 185, 190], "being": 178, "continu": 178, "At": 178, "stage": 178, "encompass": 178, "fast": 178, "intuit": 178, "custom": [178, 184], "entiti": 178, "semant": 178, "inform": [178, 190], "about": 178, "futur": 178, "expand": 178, "entail": [178, 184], "interfac": 178, "analysi": 178, "softwar": [178, 180], "specialist": 178, "built": [178, 181], "upon": 178, "framework": 178, "basic": 178, "like": [178, 181, 183], "complex": 178, "brep": [178, 183, 187, 189, 190], "resolv": 178, "backend": 178, "rhinocommon": 178, "sdk": 178, "handl": 178, "opencascad": 178, "via": 178, "occ": 178, "introduct": 178, "instal": 178, "api": [178, 181], "lbuttjoint": 178, "lmiterjoint": 178, "xhalflapjoint": 178, "connectionsolv": 178, "find_neighboring_beam": 178, "brepgeometryconsum": 178, "btlxprocess": [178, 182], "btlxfrenchridgelap": 178, "lbuttfactori": 178, "tbuttfactori": 178, "lmiterfactori": 178, "frenchridgefactori": 178, "simplesequencegener": 178, "workflow": [178, 181, 184, 185], "show": [178, 181], "util": [178, 181], "contribut": [178, 181], "licens": 178, "cite": 178, "conda": 179, "n": 179, "myenvnam": 179, "ye": [179, 188], "m": 179, "compas_rhino": 179, "p": 179, "latest": 179, "fork": 179, "repositori": 179, "clone": 179, "git": 179, "yourgithub_usernam": 179, "cd": 179, "necessari": [179, 182], "edit": 179, "mode": 179, "dev": 179, "txt": 179, "mit": 180, "copyright": 180, "c": 180, "2020": 180, "02": 180, "17": 180, "permiss": 180, "herebi": 180, "grant": 180, "free": 180, "charg": 180, "person": 180, "obtain": 180, "document": [180, 182, 184, 185, 190], "deal": 180, "without": 180, "restrict": 180, "limit": 180, "right": 180, "modifi": 180, "merg": 180, "publish": 180, "distribut": 180, "sublicens": 180, "sell": 180, "permit": 180, "whom": 180, "furnish": 180, "do": [180, 182], "subject": 180, "follow": [180, 181, 182], "condit": 180, "abov": 180, "notic": 180, "shall": 180, "substanti": 180, "portion": 180, "THE": 180, "AS": 180, "warranti": 180, "OF": 180, "kind": 180, "express": 180, "OR": 180, "impli": [180, 183], "BUT": 180, "NOT": 180, "TO": 180, "merchant": 180, "fit": 180, "FOR": 180, "particular": 180, "purpos": 180, "AND": 180, "noninfring": 180, "IN": 180, "NO": 180, "event": 180, "holder": 180, "BE": 180, "liabl": 180, "claim": 180, "damag": 180, "liabil": 180, "action": 180, "contract": 180, "tort": 180, "aris": 180, "out": 180, "WITH": 180, "easi": 181, "autom": [181, 188], "bake": 181, "textur": [181, 190], "render": [181, 190], "boolean": [181, 183, 187], "style": 181, "planar": [181, 188], "might": 181, "ghpython": 181, "componen": 181, "detail": 181, "overal": 181, "idea": 181, "how": [181, 188], "Then": [181, 188], "explain": 181, "machin": 182, "requr": 182, "here": [182, 186, 188, 190], "design2machin": 182, "btlx_2_1_0": 182, "pdf": 182, "process_param": 182, "where": [182, 185, 190], "btlxjoint": 182, "__init__": 182, "py": 182, "mind": 182, "compon": [183, 184, 185, 189], "made": 183, "oper": [183, 187], "subtract": [183, 187], "computation": 183, "expens": 183, "disabl": 183, "applyfeatur": 183, "unsuccess": 183, "abstract": 183, "showassembli": [183, 189], "group": 184, "intend": [184, 185], "hybrid": 184, "encod": 184, "concaten": 184, "colon": 184, "separ": 184, "entri": [184, 191], "underscor": 184, "_": 184, "attr1nam": 184, "attr1value_attr2nam": 184, "attr2valu": 184, "four": [184, 188], "standard": 184, "categori": [184, 185, 188], "zvector": [184, 185], "setstandardattribut": 184, "write": [184, 185], "readstandardattribut": 184, "read": 184, "checkstandardattribut": 184, "correctli": 184, "miss": 184, "retriev": 184, "later": [184, 185, 188], "filter": 184, "accord": [184, 188], "criteria": 184, "These": 184, "deleteattribut": 184, "setcustomattribut": 184, "readallattribut": 184, "linear": [185, 188], "straight": 185, "rafter": 185, "joist": 185, "beamfromcurv": 185, "form": [185, 188], "linecurv": 185, "beamfromcurveguid": 185, "referenc": 185, "rotat": 185, "around": 185, "li": [185, 190], "sai": 185, "perpendicular": 185, "cannot": 185, "world": 185, "vertic": 185, "convent": 185, "rule": [185, 188], "jointcategoryrul": [185, 188], "automaticjoint": 185, "updaterefobj": 185, "onc": 185, "preview": [185, 189], "shape": 185, "extract": [185, 189], "demo": 186, "ly": 187, "three": 188, "prefix": 188, "rel": 188, "we": 188, "distinguish": 188, "topolog": 188, "situat": 188, "splice": 188, "co": 188, "corner": 188, "meet": 188, "select": 188, "addition": 188, "clean": 188, "serv": [188, 190], "cata": 188, "catb": 188, "thing": 188, "determin": 188, "everi": 188, "tri": 188, "unintend": 188, "maxdist": 188, "exactli": 188, "certain": 188, "000001": 188, "inspect": 189, "showbeam": 189, "showbeamfram": 189, "showbeamindex": 189, "showjointtyp": 189, "bakewithboxmap": 190, "layer": 190, "materi": 190, "desir": 190, "random": 190, "deviat": 190, "mapsiz": 190, "scale": 190, "adjust": 190, "size": 190, "imag": 190, "ratio": 190, "bitmap": 190, "care": 191, "final": 191, "matter": 191, "last": 191, "earlier": 191}, "objects": {"compas_timber.assembly": [[8, 0, 1, "", "TimberAssembly"]], "compas_timber.assembly.TimberAssembly": [[9, 1, 1, "", "ToString"], [10, 1, 1, "", "add_beam"], [11, 1, 1, "", "add_connection"], [12, 1, 1, "", "add_joint"], [13, 1, 1, "", "add_part"], [14, 1, 1, "", "are_parts_joined"], [15, 1, 1, "", "connections"], [16, 1, 1, "", "contains"], [17, 1, 1, "", "copy"], [18, 1, 1, "", "delete_connection"], [19, 1, 1, "", "delete_part"], [20, 1, 1, "", "find"], [21, 1, 1, "", "find_by_key"], [22, 1, 1, "", "from_json"], [23, 1, 1, "", "from_jsonstring"], [24, 1, 1, "", "parts"], [25, 1, 1, "", "remove_joint"], [26, 1, 1, "", "sha256"], [27, 1, 1, "", "to_json"], [28, 1, 1, "", "to_jsonstring"], [29, 1, 1, "", "transform"], [30, 1, 1, "", "transform_numpy"], [31, 1, 1, "", "transformed"], [32, 1, 1, "", "transformed_numpy"], [33, 1, 1, "", "validate_data"]], "compas_timber.connections": [[34, 2, 1, "", "BeamJoinningError"], [35, 0, 1, "", "ConnectionSolver"], [38, 0, 1, "", "Joint"], [50, 0, 1, "", "JointTopology"], [52, 0, 1, "", "LButtJoint"], [66, 0, 1, "", "LMiterJoint"], [79, 0, 1, "", "TButtJoint"], [92, 0, 1, "", "XHalfLapJoint"], [104, 3, 1, "", "find_neighboring_beams"]], "compas_timber.connections.ConnectionSolver": [[36, 1, 1, "", "find_intersecting_pairs"], [37, 1, 1, "", "find_topology"]], "compas_timber.connections.Joint": [[39, 1, 1, "", "ToString"], [40, 1, 1, "", "add_features"], [41, 1, 1, "", "copy"], [42, 1, 1, "", "create"], [43, 1, 1, "", "from_json"], [44, 1, 1, "", "from_jsonstring"], [45, 1, 1, "", "restore_beams_from_keys"], [46, 1, 1, "", "sha256"], [47, 1, 1, "", "to_json"], [48, 1, 1, "", "to_jsonstring"], [49, 1, 1, "", "validate_data"]], "compas_timber.connections.JointTopology": [[51, 1, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[53, 1, 1, "", "ToString"], [54, 1, 1, "", "add_features"], [55, 1, 1, "", "copy"], [56, 1, 1, "", "create"], [57, 1, 1, "", "from_json"], [58, 1, 1, "", "from_jsonstring"], [59, 1, 1, "", "get_cross_cutting_plane"], [60, 1, 1, "", "get_main_cutting_plane"], [61, 1, 1, "", "restore_beams_from_keys"], [62, 1, 1, "", "sha256"], [63, 1, 1, "", "to_json"], [64, 1, 1, "", "to_jsonstring"], [65, 1, 1, "", "validate_data"]], "compas_timber.connections.LMiterJoint": [[67, 1, 1, "", "ToString"], [68, 1, 1, "", "add_features"], [69, 1, 1, "", "copy"], [70, 1, 1, "", "create"], [71, 1, 1, "", "from_json"], [72, 1, 1, "", "from_jsonstring"], [73, 1, 1, "", "get_cutting_planes"], [74, 1, 1, "", "restore_beams_from_keys"], [75, 1, 1, "", "sha256"], [76, 1, 1, "", "to_json"], [77, 1, 1, "", "to_jsonstring"], [78, 1, 1, "", "validate_data"]], "compas_timber.connections.TButtJoint": [[80, 1, 1, "", "ToString"], [81, 1, 1, "", "add_features"], [82, 1, 1, "", "copy"], [83, 1, 1, "", "create"], [84, 1, 1, "", "from_json"], [85, 1, 1, "", "from_jsonstring"], [86, 1, 1, "", "get_cutting_plane"], [87, 1, 1, "", "restore_beams_from_keys"], [88, 1, 1, "", "sha256"], [89, 1, 1, "", "to_json"], [90, 1, 1, "", "to_jsonstring"], [91, 1, 1, "", "validate_data"]], "compas_timber.connections.XHalfLapJoint": [[93, 1, 1, "", "ToString"], [94, 1, 1, "", "add_features"], [95, 1, 1, "", "copy"], [96, 1, 1, "", "create"], [97, 1, 1, "", "from_json"], [98, 1, 1, "", "from_jsonstring"], [99, 1, 1, "", "restore_beams_from_keys"], [100, 1, 1, "", "sha256"], [101, 1, 1, "", "to_json"], [102, 1, 1, "", "to_jsonstring"], [103, 1, 1, "", "validate_data"]], "compas_timber.consumers": [[105, 0, 1, "", "BrepGeometryConsumer"]], "compas_timber.fabrication": [[106, 0, 1, "", "BTLx"], [110, 0, 1, "", "BTLxFrenchRidgeLap"], [114, 0, 1, "", "BTLxJackCut"], [117, 0, 1, "", "BTLxProcess"], [118, 0, 1, "", "FrenchRidgeFactory"], [120, 0, 1, "", "LButtFactory"], [122, 0, 1, "", "LMiterFactory"], [124, 0, 1, "", "TButtFactory"]], "compas_timber.fabrication.BTLx": [[107, 1, 1, "", "btlx_string"], [108, 1, 1, "", "process_assembly"], [109, 1, 1, "", "register_joint"]], "compas_timber.fabrication.BTLxFrenchRidgeLap": [[111, 1, 1, "", "create_process"], [112, 1, 1, "", "get_params"], [113, 1, 1, "", "process_joints"]], "compas_timber.fabrication.BTLxJackCut": [[115, 1, 1, "", "create_process"], [116, 1, 1, "", "generate_process"]], "compas_timber.fabrication.FrenchRidgeFactory": [[119, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.LButtFactory": [[121, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.LMiterFactory": [[123, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.TButtFactory": [[125, 1, 1, "", "apply_processings"]], "compas_timber.parts": [[126, 0, 1, "", "Beam"]], "compas_timber.parts.Beam": [[127, 1, 1, "", "ToString"], [128, 1, 1, "", "add_blank_extension"], [129, 1, 1, "", "add_feature"], [130, 1, 1, "", "add_features"], [131, 1, 1, "", "align_z"], [132, 1, 1, "", "clear_features"], [133, 1, 1, "", "copy"], [134, 1, 1, "", "endpoint_closest_to_point"], [135, 1, 1, "", "extension_to_plane"], [136, 1, 1, "", "from_centerline"], [137, 1, 1, "", "from_endpoints"], [138, 1, 1, "", "from_json"], [139, 1, 1, "", "from_jsonstring"], [140, 1, 1, "", "get_geometry"], [141, 1, 1, "", "remove_blank_extension"], [142, 1, 1, "", "remove_features"], [143, 1, 1, "", "sha256"], [144, 1, 1, "", "to_json"], [145, 1, 1, "", "to_jsonstring"], [146, 1, 1, "", "transform"], [147, 1, 1, "", "transform_numpy"], [148, 1, 1, "", "transformed"], [149, 1, 1, "", "transformed_numpy"], [150, 1, 1, "", "validate_data"]], "compas_timber.planning": [[151, 0, 1, "", "Actor"], [153, 0, 1, "", "BuildingPlan"], [163, 0, 1, "", "SimpleSequenceGenerator"], [164, 0, 1, "", "Step"]], "compas_timber.planning.Actor": [[152, 1, 1, "", "get_name"]], "compas_timber.planning.BuildingPlan": [[154, 1, 1, "", "ToString"], [155, 1, 1, "", "add_step"], [156, 1, 1, "", "copy"], [157, 1, 1, "", "from_json"], [158, 1, 1, "", "from_jsonstring"], [159, 1, 1, "", "sha256"], [160, 1, 1, "", "to_json"], [161, 1, 1, "", "to_jsonstring"], [162, 1, 1, "", "validate_data"]], "compas_timber.planning.Step": [[165, 1, 1, "", "ToString"], [166, 1, 1, "", "copy"], [167, 1, 1, "", "from_json"], [168, 1, 1, "", "from_jsonstring"], [169, 1, 1, "", "sha256"], [170, 1, 1, "", "to_json"], [171, 1, 1, "", "to_jsonstring"], [172, 1, 1, "", "transform"], [173, 1, 1, "", "validate_data"]], "compas_timber.rhino": [[174, 3, 1, "", "find_neighboring_beams"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:exception", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "exception", "Python exception"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "packag": 0, "compas_timb": [1, 2, 3, 4, 5, 6], "assembli": [1, 176, 183], "class": [1, 2, 3, 4, 5, 6], "connect": [2, 15], "function": 2, "except": 2, "consum": 3, "fabric": 4, "part": [5, 24], "plan": 6, "rhino": 7, "plugin": [7, 181], "timberassembli": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "tostr": [9, 39, 53, 67, 80, 93, 127, 154, 165], "add_beam": 10, "add_connect": 11, "add_joint": 12, "add_part": 13, "are_parts_join": 14, "contain": 16, "copi": [17, 41, 55, 69, 82, 95, 133, 156, 166], "delete_connect": 18, "delete_part": 19, "find": 20, "find_by_kei": 21, "from_json": [22, 43, 57, 71, 84, 97, 138, 157, 167], "from_jsonstr": [23, 44, 58, 72, 85, 98, 139, 158, 168], "remove_joint": 25, "sha256": [26, 46, 62, 75, 88, 100, 143, 159, 169], "to_json": [27, 47, 63, 76, 89, 101, 144, 160, 170], "to_jsonstr": [28, 48, 64, 77, 90, 102, 145, 161, 171], "transform": [29, 31, 146, 148, 172], "transform_numpi": [30, 147], "transformed_numpi": [32, 149], "validate_data": [33, 49, 65, 78, 91, 103, 150, 162, 173], "beamjoinningerror": 34, "connectionsolv": [35, 36, 37], "find_intersecting_pair": 36, "find_topologi": 37, "joint": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 177, 188], "add_featur": [40, 54, 68, 81, 94, 129, 130], "creat": [42, 56, 70, 83, 96, 177], "restore_beams_from_kei": [45, 61, 74, 87, 99], "jointtopologi": [50, 51], "get_nam": [51, 152], "lbuttjoint": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "get_cross_cutting_plan": 59, "get_main_cutting_plan": 60, "lmiterjoint": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "get_cutting_plan": [73, 86], "tbuttjoint": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "xhalflapjoint": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "find_neighboring_beam": [104, 174], "brepgeometryconsum": 105, "btlx": [106, 107, 108, 109, 182], "btlx_string": 107, "process_assembli": 108, "register_joint": 109, "btlxfrenchridgelap": [110, 111, 112, 113], "create_process": [111, 115], "get_param": 112, "process_joint": 113, "btlxjackcut": [114, 115, 116], "generate_process": 116, "btlxprocess": 117, "frenchridgefactori": [118, 119], "apply_process": [119, 121, 123, 125], "lbuttfactori": [120, 121], "lmiterfactori": [122, 123], "tbuttfactori": [124, 125], "beam": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 185], "add_blank_extens": 128, "align_z": 131, "clear_featur": 132, "endpoint_closest_to_point": 134, "extension_to_plan": 135, "from_centerlin": 136, "from_endpoint": 137, "get_geometri": 140, "remove_blank_extens": 141, "remove_featur": 142, "actor": [151, 152], "buildingplan": [153, 154, 155, 156, 157, 158, 159, 160, 161, 162], "add_step": 155, "simplesequencegener": 163, "step": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "cite": 175, "exampl": [176, 186], "timber": [176, 178], "compa": 178, "depend": 178, "tabl": 178, "content": 178, "indic": 178, "instal": 179, "stabl": 179, "pip": 179, "develop": 179, "licens": 180, "grasshopp": 181, "contribut": 182, "guid": 182, "attribut": 184, "featur": 187, "topologi": 188, "compon": 188, "t": 188, "butt": 188, "l": 188, "miter": 188, "automaticjoint": 188, "wizzard": 188, "show": 189, "util": 190, "bake": 190, "boxmap": 190, "workflow": 191}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"API Reference": [[0, "api-reference"]], "Packages": [[0, "packages"]], "compas_timber.assembly": [[1, "compas-timber-assembly"]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"]], "compas_timber.connections": [[2, "compas-timber-connections"]], "Functions": [[2, "functions"]], "Exceptions": [[2, "exceptions"]], "compas_timber.consumers": [[3, "compas-timber-consumers"]], "compas_timber.fabrication": [[4, "compas-timber-fabrication"]], "compas_timber.parts": [[5, "compas-timber-parts"]], "compas_timber.planning": [[6, "compas-timber-planning"]], "rhino": [[7, "rhino"]], "Plugins": [[7, "plugins"]], "TimberAssembly": [[8, "timberassembly"]], "TimberAssembly.ToString": [[9, "timberassembly-tostring"]], "TimberAssembly.add_beam": [[10, "timberassembly-add-beam"]], "TimberAssembly.add_connection": [[11, "timberassembly-add-connection"]], "TimberAssembly.add_joint": [[12, "timberassembly-add-joint"]], "TimberAssembly.add_part": [[13, "timberassembly-add-part"]], "TimberAssembly.are_parts_joined": [[14, "timberassembly-are-parts-joined"]], "TimberAssembly.connections": [[15, "timberassembly-connections"]], "TimberAssembly.contains": [[16, "timberassembly-contains"]], "TimberAssembly.copy": [[17, "timberassembly-copy"]], "TimberAssembly.delete_connection": [[18, "timberassembly-delete-connection"]], "TimberAssembly.delete_part": [[19, "timberassembly-delete-part"]], "TimberAssembly.find": [[20, "timberassembly-find"]], "TimberAssembly.find_by_key": [[21, "timberassembly-find-by-key"]], "TimberAssembly.from_json": [[22, "timberassembly-from-json"]], "TimberAssembly.from_jsonstring": [[23, "timberassembly-from-jsonstring"]], "TimberAssembly.parts": [[24, "timberassembly-parts"]], "TimberAssembly.remove_joint": [[25, "timberassembly-remove-joint"]], "TimberAssembly.sha256": [[26, "timberassembly-sha256"]], "TimberAssembly.to_json": [[27, "timberassembly-to-json"]], "TimberAssembly.to_jsonstring": [[28, "timberassembly-to-jsonstring"]], "TimberAssembly.transform": [[29, "timberassembly-transform"]], "TimberAssembly.transform_numpy": [[30, "timberassembly-transform-numpy"]], "TimberAssembly.transformed": [[31, "timberassembly-transformed"]], "TimberAssembly.transformed_numpy": [[32, "timberassembly-transformed-numpy"]], "TimberAssembly.validate_data": [[33, "timberassembly-validate-data"]], "BeamJoinningError": [[34, "beamjoinningerror"]], "ConnectionSolver": [[35, "connectionsolver"]], "ConnectionSolver.find_intersecting_pairs": [[36, "connectionsolver-find-intersecting-pairs"]], "ConnectionSolver.find_topology": [[37, "connectionsolver-find-topology"]], "Joint": [[38, "joint"]], "Joint.ToString": [[39, "joint-tostring"]], "Joint.add_features": [[40, "joint-add-features"]], "Joint.copy": [[41, "joint-copy"]], "Joint.create": [[42, "joint-create"]], "Joint.from_json": [[43, "joint-from-json"]], "Joint.from_jsonstring": [[44, "joint-from-jsonstring"]], "Joint.restore_beams_from_keys": [[45, "joint-restore-beams-from-keys"]], "Joint.sha256": [[46, "joint-sha256"]], "Joint.to_json": [[47, "joint-to-json"]], "Joint.to_jsonstring": [[48, "joint-to-jsonstring"]], "Joint.validate_data": [[49, "joint-validate-data"]], "JointTopology": [[50, "jointtopology"]], "JointTopology.get_name": [[51, "jointtopology-get-name"]], "LButtJoint": [[52, "lbuttjoint"]], "LButtJoint.ToString": [[53, "lbuttjoint-tostring"]], "LButtJoint.add_features": [[54, "lbuttjoint-add-features"]], "LButtJoint.copy": [[55, "lbuttjoint-copy"]], "LButtJoint.create": [[56, "lbuttjoint-create"]], "LButtJoint.from_json": [[57, "lbuttjoint-from-json"]], "LButtJoint.from_jsonstring": [[58, "lbuttjoint-from-jsonstring"]], "LButtJoint.get_cross_cutting_plane": [[59, "lbuttjoint-get-cross-cutting-plane"]], "LButtJoint.get_main_cutting_plane": [[60, "lbuttjoint-get-main-cutting-plane"]], "LButtJoint.restore_beams_from_keys": [[61, "lbuttjoint-restore-beams-from-keys"]], "LButtJoint.sha256": [[62, "lbuttjoint-sha256"]], "LButtJoint.to_json": [[63, "lbuttjoint-to-json"]], "LButtJoint.to_jsonstring": [[64, "lbuttjoint-to-jsonstring"]], "LButtJoint.validate_data": [[65, "lbuttjoint-validate-data"]], "LMiterJoint": [[66, "lmiterjoint"]], "LMiterJoint.ToString": [[67, "lmiterjoint-tostring"]], "LMiterJoint.add_features": [[68, "lmiterjoint-add-features"]], "LMiterJoint.copy": [[69, "lmiterjoint-copy"]], "LMiterJoint.create": [[70, "lmiterjoint-create"]], "LMiterJoint.from_json": [[71, "lmiterjoint-from-json"]], "LMiterJoint.from_jsonstring": [[72, "lmiterjoint-from-jsonstring"]], "LMiterJoint.get_cutting_planes": [[73, "lmiterjoint-get-cutting-planes"]], "LMiterJoint.restore_beams_from_keys": [[74, "lmiterjoint-restore-beams-from-keys"]], "LMiterJoint.sha256": [[75, "lmiterjoint-sha256"]], "LMiterJoint.to_json": [[76, "lmiterjoint-to-json"]], "LMiterJoint.to_jsonstring": [[77, "lmiterjoint-to-jsonstring"]], "LMiterJoint.validate_data": [[78, "lmiterjoint-validate-data"]], "TButtJoint": [[79, "tbuttjoint"]], "TButtJoint.ToString": [[80, "tbuttjoint-tostring"]], "TButtJoint.add_features": [[81, "tbuttjoint-add-features"]], "TButtJoint.copy": [[82, "tbuttjoint-copy"]], "TButtJoint.create": [[83, "tbuttjoint-create"]], "TButtJoint.from_json": [[84, "tbuttjoint-from-json"]], "TButtJoint.from_jsonstring": [[85, "tbuttjoint-from-jsonstring"]], "TButtJoint.get_cutting_plane": [[86, "tbuttjoint-get-cutting-plane"]], "TButtJoint.restore_beams_from_keys": [[87, "tbuttjoint-restore-beams-from-keys"]], "TButtJoint.sha256": [[88, "tbuttjoint-sha256"]], "TButtJoint.to_json": [[89, "tbuttjoint-to-json"]], "TButtJoint.to_jsonstring": [[90, "tbuttjoint-to-jsonstring"]], "TButtJoint.validate_data": [[91, "tbuttjoint-validate-data"]], "XHalfLapJoint": [[92, "xhalflapjoint"]], "XHalfLapJoint.ToString": [[93, "xhalflapjoint-tostring"]], "XHalfLapJoint.add_features": [[94, "xhalflapjoint-add-features"]], "XHalfLapJoint.copy": [[95, "xhalflapjoint-copy"]], "XHalfLapJoint.create": [[96, "xhalflapjoint-create"]], "XHalfLapJoint.from_json": [[97, "xhalflapjoint-from-json"]], "XHalfLapJoint.from_jsonstring": [[98, "xhalflapjoint-from-jsonstring"]], "XHalfLapJoint.restore_beams_from_keys": [[99, "xhalflapjoint-restore-beams-from-keys"]], "XHalfLapJoint.sha256": [[100, "xhalflapjoint-sha256"]], "XHalfLapJoint.to_json": [[101, "xhalflapjoint-to-json"]], "XHalfLapJoint.to_jsonstring": [[102, "xhalflapjoint-to-jsonstring"]], "XHalfLapJoint.validate_data": [[103, "xhalflapjoint-validate-data"]], "find_neighboring_beams": [[104, "find-neighboring-beams"], [174, "find-neighboring-beams"]], "BrepGeometryConsumer": [[105, "brepgeometryconsumer"]], "BTLx": [[106, "btlx"]], "BTLx.btlx_string": [[107, "btlx-btlx-string"]], "BTLx.process_assembly": [[108, "btlx-process-assembly"]], "BTLx.register_joint": [[109, "btlx-register-joint"]], "BTLxFrenchRidgeLap": [[110, "btlxfrenchridgelap"]], "BTLxFrenchRidgeLap.create_process": [[111, "btlxfrenchridgelap-create-process"]], "BTLxFrenchRidgeLap.get_params": [[112, "btlxfrenchridgelap-get-params"]], "BTLxFrenchRidgeLap.process_joints": [[113, "btlxfrenchridgelap-process-joints"]], "BTLxJackCut": [[114, "btlxjackcut"]], "BTLxJackCut.create_process": [[115, "btlxjackcut-create-process"]], "BTLxJackCut.generate_process": [[116, "btlxjackcut-generate-process"]], "BTLxProcess": [[117, "btlxprocess"]], "FrenchRidgeFactory": [[118, "frenchridgefactory"]], "FrenchRidgeFactory.apply_processings": [[119, "frenchridgefactory-apply-processings"]], "LButtFactory": [[120, "lbuttfactory"]], "LButtFactory.apply_processings": [[121, "lbuttfactory-apply-processings"]], "LMiterFactory": [[122, "lmiterfactory"]], "LMiterFactory.apply_processings": [[123, "lmiterfactory-apply-processings"]], "TButtFactory": [[124, "tbuttfactory"]], "TButtFactory.apply_processings": [[125, "tbuttfactory-apply-processings"]], "Beam": [[126, "beam"], [185, "beam"]], "Beam.ToString": [[127, "beam-tostring"]], "Beam.add_blank_extension": [[128, "beam-add-blank-extension"]], "Beam.add_feature": [[129, "beam-add-feature"]], "Beam.add_features": [[130, "beam-add-features"]], "Beam.align_z": [[131, "beam-align-z"]], "Beam.clear_features": [[132, "beam-clear-features"]], "Beam.copy": [[133, "beam-copy"]], "Beam.endpoint_closest_to_point": [[134, "beam-endpoint-closest-to-point"]], "Beam.extension_to_plane": [[135, "beam-extension-to-plane"]], "Beam.from_centerline": [[136, "beam-from-centerline"]], "Beam.from_endpoints": [[137, "beam-from-endpoints"]], "Beam.from_json": [[138, "beam-from-json"]], "Beam.from_jsonstring": [[139, "beam-from-jsonstring"]], "Beam.get_geometry": [[140, "beam-get-geometry"]], "Beam.remove_blank_extension": [[141, "beam-remove-blank-extension"]], "Beam.remove_features": [[142, "beam-remove-features"]], "Beam.sha256": [[143, "beam-sha256"]], "Beam.to_json": [[144, "beam-to-json"]], "Beam.to_jsonstring": [[145, "beam-to-jsonstring"]], "Beam.transform": [[146, "beam-transform"]], "Beam.transform_numpy": [[147, "beam-transform-numpy"]], "Beam.transformed": [[148, "beam-transformed"]], "Beam.transformed_numpy": [[149, "beam-transformed-numpy"]], "Beam.validate_data": [[150, "beam-validate-data"]], "Actor": [[151, "actor"]], "Actor.get_name": [[152, "actor-get-name"]], "BuildingPlan": [[153, "buildingplan"]], "BuildingPlan.ToString": [[154, "buildingplan-tostring"]], "BuildingPlan.add_step": [[155, "buildingplan-add-step"]], "BuildingPlan.copy": [[156, "buildingplan-copy"]], "BuildingPlan.from_json": [[157, "buildingplan-from-json"]], "BuildingPlan.from_jsonstring": [[158, "buildingplan-from-jsonstring"]], "BuildingPlan.sha256": [[159, "buildingplan-sha256"]], "BuildingPlan.to_json": [[160, "buildingplan-to-json"]], "BuildingPlan.to_jsonstring": [[161, "buildingplan-to-jsonstring"]], "BuildingPlan.validate_data": [[162, "buildingplan-validate-data"]], "SimpleSequenceGenerator": [[163, "simplesequencegenerator"]], "Step": [[164, "step"]], "Step.ToString": [[165, "step-tostring"]], "Step.copy": [[166, "step-copy"]], "Step.from_json": [[167, "step-from-json"]], "Step.from_jsonstring": [[168, "step-from-jsonstring"]], "Step.sha256": [[169, "step-sha256"]], "Step.to_json": [[170, "step-to-json"]], "Step.to_jsonstring": [[171, "step-to-jsonstring"]], "Step.transform": [[172, "step-transform"]], "Step.validate_data": [[173, "step-validate-data"]], "Citing": [[175, "citing"]], "Examples": [[176, "examples"], [186, "examples"]], "Timber Assembly Examples": [[176, "timber-assembly-examples"]], "Create Joint": [[177, "create-joint"]], "COMPAS TIMBER": [[178, "compas-timber"]], "Dependencies": [[178, "dependencies"]], "Table of Contents": [[178, "table-of-contents"]], "Indices and tables": [[178, "indices-and-tables"]], "Installation": [[179, "installation"]], "Stable": [[179, "stable"]], "Install with pip": [[179, "install-with-pip"]], "Development": [[179, "development"]], "License": [[180, "license"]], "Grasshopper plugin": [[181, "grasshopper-plugin"]], "BTLx Contribution Guide": [[182, "btlx-contribution-guide"]], "Assembly": [[183, "assembly"]], "Attributes": [[184, "attributes"]], "Features": [[187, "features"]], "Joints": [[188, "joints"]], "Joint Topologies": [[188, "joint-topologies"]], "Joint components": [[188, "joint-components"]], "T-Butt": [[188, "t-butt"]], "L-Butt": [[188, "l-butt"]], "L-Miter": [[188, "l-miter"]], "AutomaticJoint wizzard": [[188, "automaticjoint-wizzard"]], "Show": [[189, "show"]], "Utils": [[190, "utils"]], "Bake with BoxMap": [[190, "bake-with-boxmap"]], "Workflow": [[191, "workflow"]]}, "indexentries": {"timberassembly (class in compas_timber.assembly)": [[8, "compas_timber.assembly.TimberAssembly"]], "tostring() (compas_timber.assembly.timberassembly method)": [[9, "compas_timber.assembly.TimberAssembly.ToString"]], "add_beam() (compas_timber.assembly.timberassembly method)": [[10, "compas_timber.assembly.TimberAssembly.add_beam"]], "add_connection() (compas_timber.assembly.timberassembly method)": [[11, "compas_timber.assembly.TimberAssembly.add_connection"]], "add_joint() (compas_timber.assembly.timberassembly method)": [[12, "compas_timber.assembly.TimberAssembly.add_joint"]], "add_part() (compas_timber.assembly.timberassembly method)": [[13, "compas_timber.assembly.TimberAssembly.add_part"]], "are_parts_joined() (compas_timber.assembly.timberassembly method)": [[14, "compas_timber.assembly.TimberAssembly.are_parts_joined"]], "connections() (compas_timber.assembly.timberassembly method)": [[15, "compas_timber.assembly.TimberAssembly.connections"]], "contains() (compas_timber.assembly.timberassembly method)": [[16, "compas_timber.assembly.TimberAssembly.contains"]], "copy() (compas_timber.assembly.timberassembly method)": [[17, "compas_timber.assembly.TimberAssembly.copy"]], "delete_connection() (compas_timber.assembly.timberassembly method)": [[18, "compas_timber.assembly.TimberAssembly.delete_connection"]], "delete_part() (compas_timber.assembly.timberassembly method)": [[19, "compas_timber.assembly.TimberAssembly.delete_part"]], "find() (compas_timber.assembly.timberassembly method)": [[20, "compas_timber.assembly.TimberAssembly.find"]], "find_by_key() (compas_timber.assembly.timberassembly method)": [[21, "compas_timber.assembly.TimberAssembly.find_by_key"]], "from_json() (compas_timber.assembly.timberassembly class method)": [[22, "compas_timber.assembly.TimberAssembly.from_json"]], "from_jsonstring() (compas_timber.assembly.timberassembly class method)": [[23, "compas_timber.assembly.TimberAssembly.from_jsonstring"]], "parts() (compas_timber.assembly.timberassembly method)": [[24, "compas_timber.assembly.TimberAssembly.parts"]], "remove_joint() (compas_timber.assembly.timberassembly method)": [[25, "compas_timber.assembly.TimberAssembly.remove_joint"]], "sha256() (compas_timber.assembly.timberassembly method)": [[26, "compas_timber.assembly.TimberAssembly.sha256"]], "to_json() (compas_timber.assembly.timberassembly method)": [[27, "compas_timber.assembly.TimberAssembly.to_json"]], "to_jsonstring() (compas_timber.assembly.timberassembly method)": [[28, "compas_timber.assembly.TimberAssembly.to_jsonstring"]], "transform() (compas_timber.assembly.timberassembly method)": [[29, "compas_timber.assembly.TimberAssembly.transform"]], "transform_numpy() (compas_timber.assembly.timberassembly method)": [[30, "compas_timber.assembly.TimberAssembly.transform_numpy"]], "transformed() (compas_timber.assembly.timberassembly method)": [[31, "compas_timber.assembly.TimberAssembly.transformed"]], "transformed_numpy() (compas_timber.assembly.timberassembly method)": [[32, "compas_timber.assembly.TimberAssembly.transformed_numpy"]], "validate_data() (compas_timber.assembly.timberassembly class method)": [[33, "compas_timber.assembly.TimberAssembly.validate_data"]], "beamjoinningerror": [[34, "compas_timber.connections.BeamJoinningError"]], "connectionsolver (class in compas_timber.connections)": [[35, "compas_timber.connections.ConnectionSolver"]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[36, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs"]], "find_topology() (compas_timber.connections.connectionsolver method)": [[37, "compas_timber.connections.ConnectionSolver.find_topology"]], "joint (class in compas_timber.connections)": [[38, "compas_timber.connections.Joint"]], "tostring() (compas_timber.connections.joint method)": [[39, "compas_timber.connections.Joint.ToString"]], "add_features() (compas_timber.connections.joint method)": [[40, "compas_timber.connections.Joint.add_features"]], "copy() (compas_timber.connections.joint method)": [[41, "compas_timber.connections.Joint.copy"]], "create() (compas_timber.connections.joint class method)": [[42, "compas_timber.connections.Joint.create"]], "from_json() (compas_timber.connections.joint class method)": [[43, "compas_timber.connections.Joint.from_json"]], "from_jsonstring() (compas_timber.connections.joint class method)": [[44, "compas_timber.connections.Joint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[45, "compas_timber.connections.Joint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.joint method)": [[46, "compas_timber.connections.Joint.sha256"]], "to_json() (compas_timber.connections.joint method)": [[47, "compas_timber.connections.Joint.to_json"]], "to_jsonstring() (compas_timber.connections.joint method)": [[48, "compas_timber.connections.Joint.to_jsonstring"]], "validate_data() (compas_timber.connections.joint class method)": [[49, "compas_timber.connections.Joint.validate_data"]], "jointtopology (class in compas_timber.connections)": [[50, "compas_timber.connections.JointTopology"]], "get_name() (compas_timber.connections.jointtopology class method)": [[51, "compas_timber.connections.JointTopology.get_name"]], "lbuttjoint (class in compas_timber.connections)": [[52, "compas_timber.connections.LButtJoint"]], "tostring() (compas_timber.connections.lbuttjoint method)": [[53, "compas_timber.connections.LButtJoint.ToString"]], "add_features() (compas_timber.connections.lbuttjoint method)": [[54, "compas_timber.connections.LButtJoint.add_features"]], "copy() (compas_timber.connections.lbuttjoint method)": [[55, "compas_timber.connections.LButtJoint.copy"]], "create() (compas_timber.connections.lbuttjoint class method)": [[56, "compas_timber.connections.LButtJoint.create"]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[57, "compas_timber.connections.LButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[58, "compas_timber.connections.LButtJoint.from_jsonstring"]], "get_cross_cutting_plane() (compas_timber.connections.lbuttjoint method)": [[59, "compas_timber.connections.LButtJoint.get_cross_cutting_plane"]], "get_main_cutting_plane() (compas_timber.connections.lbuttjoint method)": [[60, "compas_timber.connections.LButtJoint.get_main_cutting_plane"]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[61, "compas_timber.connections.LButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lbuttjoint method)": [[62, "compas_timber.connections.LButtJoint.sha256"]], "to_json() (compas_timber.connections.lbuttjoint method)": [[63, "compas_timber.connections.LButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lbuttjoint method)": [[64, "compas_timber.connections.LButtJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lbuttjoint class method)": [[65, "compas_timber.connections.LButtJoint.validate_data"]], "lmiterjoint (class in compas_timber.connections)": [[66, "compas_timber.connections.LMiterJoint"]], "tostring() (compas_timber.connections.lmiterjoint method)": [[67, "compas_timber.connections.LMiterJoint.ToString"]], "add_features() (compas_timber.connections.lmiterjoint method)": [[68, "compas_timber.connections.LMiterJoint.add_features"]], "copy() (compas_timber.connections.lmiterjoint method)": [[69, "compas_timber.connections.LMiterJoint.copy"]], "create() (compas_timber.connections.lmiterjoint class method)": [[70, "compas_timber.connections.LMiterJoint.create"]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[71, "compas_timber.connections.LMiterJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[72, "compas_timber.connections.LMiterJoint.from_jsonstring"]], "get_cutting_planes() (compas_timber.connections.lmiterjoint method)": [[73, "compas_timber.connections.LMiterJoint.get_cutting_planes"]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[74, "compas_timber.connections.LMiterJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lmiterjoint method)": [[75, "compas_timber.connections.LMiterJoint.sha256"]], "to_json() (compas_timber.connections.lmiterjoint method)": [[76, "compas_timber.connections.LMiterJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lmiterjoint method)": [[77, "compas_timber.connections.LMiterJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lmiterjoint class method)": [[78, "compas_timber.connections.LMiterJoint.validate_data"]], "tbuttjoint (class in compas_timber.connections)": [[79, "compas_timber.connections.TButtJoint"]], "tostring() (compas_timber.connections.tbuttjoint method)": [[80, "compas_timber.connections.TButtJoint.ToString"]], "add_features() (compas_timber.connections.tbuttjoint method)": [[81, "compas_timber.connections.TButtJoint.add_features"]], "copy() (compas_timber.connections.tbuttjoint method)": [[82, "compas_timber.connections.TButtJoint.copy"]], "create() (compas_timber.connections.tbuttjoint class method)": [[83, "compas_timber.connections.TButtJoint.create"]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[84, "compas_timber.connections.TButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[85, "compas_timber.connections.TButtJoint.from_jsonstring"]], "get_cutting_plane() (compas_timber.connections.tbuttjoint method)": [[86, "compas_timber.connections.TButtJoint.get_cutting_plane"]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[87, "compas_timber.connections.TButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.tbuttjoint method)": [[88, "compas_timber.connections.TButtJoint.sha256"]], "to_json() (compas_timber.connections.tbuttjoint method)": [[89, "compas_timber.connections.TButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.tbuttjoint method)": [[90, "compas_timber.connections.TButtJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.tbuttjoint class method)": [[91, "compas_timber.connections.TButtJoint.validate_data"]], "xhalflapjoint (class in compas_timber.connections)": [[92, "compas_timber.connections.XHalfLapJoint"]], "tostring() (compas_timber.connections.xhalflapjoint method)": [[93, "compas_timber.connections.XHalfLapJoint.ToString"]], "add_features() (compas_timber.connections.xhalflapjoint method)": [[94, "compas_timber.connections.XHalfLapJoint.add_features"]], "copy() (compas_timber.connections.xhalflapjoint method)": [[95, "compas_timber.connections.XHalfLapJoint.copy"]], "create() (compas_timber.connections.xhalflapjoint class method)": [[96, "compas_timber.connections.XHalfLapJoint.create"]], "from_json() (compas_timber.connections.xhalflapjoint class method)": [[97, "compas_timber.connections.XHalfLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.xhalflapjoint class method)": [[98, "compas_timber.connections.XHalfLapJoint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.xhalflapjoint method)": [[99, "compas_timber.connections.XHalfLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.xhalflapjoint method)": [[100, "compas_timber.connections.XHalfLapJoint.sha256"]], "to_json() (compas_timber.connections.xhalflapjoint method)": [[101, "compas_timber.connections.XHalfLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.xhalflapjoint method)": [[102, "compas_timber.connections.XHalfLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.xhalflapjoint class method)": [[103, "compas_timber.connections.XHalfLapJoint.validate_data"]], "find_neighboring_beams() (in module compas_timber.connections)": [[104, "compas_timber.connections.find_neighboring_beams"]], "brepgeometryconsumer (class in compas_timber.consumers)": [[105, "compas_timber.consumers.BrepGeometryConsumer"]], "btlx (class in compas_timber.fabrication)": [[106, "compas_timber.fabrication.BTLx"]], "btlx_string() (compas_timber.fabrication.btlx method)": [[107, "compas_timber.fabrication.BTLx.btlx_string"]], "process_assembly() (compas_timber.fabrication.btlx method)": [[108, "compas_timber.fabrication.BTLx.process_assembly"]], "register_joint() (compas_timber.fabrication.btlx class method)": [[109, "compas_timber.fabrication.BTLx.register_joint"]], "btlxfrenchridgelap (class in compas_timber.fabrication)": [[110, "compas_timber.fabrication.BTLxFrenchRidgeLap"]], "create_process() (compas_timber.fabrication.btlxfrenchridgelap class method)": [[111, "compas_timber.fabrication.BTLxFrenchRidgeLap.create_process"]], "get_params() (compas_timber.fabrication.btlxfrenchridgelap method)": [[112, "compas_timber.fabrication.BTLxFrenchRidgeLap.get_params"]], "process_joints() (compas_timber.fabrication.btlxfrenchridgelap method)": [[113, "compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints"]], "btlxjackcut (class in compas_timber.fabrication)": [[114, "compas_timber.fabrication.BTLxJackCut"]], "create_process() (compas_timber.fabrication.btlxjackcut class method)": [[115, "compas_timber.fabrication.BTLxJackCut.create_process"]], "generate_process() (compas_timber.fabrication.btlxjackcut method)": [[116, "compas_timber.fabrication.BTLxJackCut.generate_process"]], "btlxprocess (class in compas_timber.fabrication)": [[117, "compas_timber.fabrication.BTLxProcess"]], "frenchridgefactory (class in compas_timber.fabrication)": [[118, "compas_timber.fabrication.FrenchRidgeFactory"]], "apply_processings() (compas_timber.fabrication.frenchridgefactory class method)": [[119, "compas_timber.fabrication.FrenchRidgeFactory.apply_processings"]], "lbuttfactory (class in compas_timber.fabrication)": [[120, "compas_timber.fabrication.LButtFactory"]], "apply_processings() (compas_timber.fabrication.lbuttfactory class method)": [[121, "compas_timber.fabrication.LButtFactory.apply_processings"]], "lmiterfactory (class in compas_timber.fabrication)": [[122, "compas_timber.fabrication.LMiterFactory"]], "apply_processings() (compas_timber.fabrication.lmiterfactory class method)": [[123, "compas_timber.fabrication.LMiterFactory.apply_processings"]], "tbuttfactory (class in compas_timber.fabrication)": [[124, "compas_timber.fabrication.TButtFactory"]], "apply_processings() (compas_timber.fabrication.tbuttfactory class method)": [[125, "compas_timber.fabrication.TButtFactory.apply_processings"]], "beam (class in compas_timber.parts)": [[126, "compas_timber.parts.Beam"]], "tostring() (compas_timber.parts.beam method)": [[127, "compas_timber.parts.Beam.ToString"]], "add_blank_extension() (compas_timber.parts.beam method)": [[128, "compas_timber.parts.Beam.add_blank_extension"]], "add_feature() (compas_timber.parts.beam method)": [[129, "compas_timber.parts.Beam.add_feature"]], "add_features() (compas_timber.parts.beam method)": [[130, "compas_timber.parts.Beam.add_features"]], "align_z() (compas_timber.parts.beam method)": [[131, "compas_timber.parts.Beam.align_z"]], "clear_features() (compas_timber.parts.beam method)": [[132, "compas_timber.parts.Beam.clear_features"]], "copy() (compas_timber.parts.beam method)": [[133, "compas_timber.parts.Beam.copy"]], "endpoint_closest_to_point() (compas_timber.parts.beam method)": [[134, "compas_timber.parts.Beam.endpoint_closest_to_point"]], "extension_to_plane() (compas_timber.parts.beam method)": [[135, "compas_timber.parts.Beam.extension_to_plane"]], "from_centerline() (compas_timber.parts.beam class method)": [[136, "compas_timber.parts.Beam.from_centerline"]], "from_endpoints() (compas_timber.parts.beam class method)": [[137, "compas_timber.parts.Beam.from_endpoints"]], "from_json() (compas_timber.parts.beam class method)": [[138, "compas_timber.parts.Beam.from_json"]], "from_jsonstring() (compas_timber.parts.beam class method)": [[139, "compas_timber.parts.Beam.from_jsonstring"]], "get_geometry() (compas_timber.parts.beam method)": [[140, "compas_timber.parts.Beam.get_geometry"]], "remove_blank_extension() (compas_timber.parts.beam method)": [[141, "compas_timber.parts.Beam.remove_blank_extension"]], "remove_features() (compas_timber.parts.beam method)": [[142, "compas_timber.parts.Beam.remove_features"]], "sha256() (compas_timber.parts.beam method)": [[143, "compas_timber.parts.Beam.sha256"]], "to_json() (compas_timber.parts.beam method)": [[144, "compas_timber.parts.Beam.to_json"]], "to_jsonstring() (compas_timber.parts.beam method)": [[145, "compas_timber.parts.Beam.to_jsonstring"]], "transform() (compas_timber.parts.beam method)": [[146, "compas_timber.parts.Beam.transform"]], "transform_numpy() (compas_timber.parts.beam method)": [[147, "compas_timber.parts.Beam.transform_numpy"]], "transformed() (compas_timber.parts.beam method)": [[148, "compas_timber.parts.Beam.transformed"]], "transformed_numpy() (compas_timber.parts.beam method)": [[149, "compas_timber.parts.Beam.transformed_numpy"]], "validate_data() (compas_timber.parts.beam class method)": [[150, "compas_timber.parts.Beam.validate_data"]], "actor (class in compas_timber.planning)": [[151, "compas_timber.planning.Actor"]], "get_name() (compas_timber.planning.actor class method)": [[152, "compas_timber.planning.Actor.get_name"]], "buildingplan (class in compas_timber.planning)": [[153, "compas_timber.planning.BuildingPlan"]], "tostring() (compas_timber.planning.buildingplan method)": [[154, "compas_timber.planning.BuildingPlan.ToString"]], "add_step() (compas_timber.planning.buildingplan method)": [[155, "compas_timber.planning.BuildingPlan.add_step"]], "copy() (compas_timber.planning.buildingplan method)": [[156, "compas_timber.planning.BuildingPlan.copy"]], "from_json() (compas_timber.planning.buildingplan class method)": [[157, "compas_timber.planning.BuildingPlan.from_json"]], "from_jsonstring() (compas_timber.planning.buildingplan class method)": [[158, "compas_timber.planning.BuildingPlan.from_jsonstring"]], "sha256() (compas_timber.planning.buildingplan method)": [[159, "compas_timber.planning.BuildingPlan.sha256"]], "to_json() (compas_timber.planning.buildingplan method)": [[160, "compas_timber.planning.BuildingPlan.to_json"]], "to_jsonstring() (compas_timber.planning.buildingplan method)": [[161, "compas_timber.planning.BuildingPlan.to_jsonstring"]], "validate_data() (compas_timber.planning.buildingplan class method)": [[162, "compas_timber.planning.BuildingPlan.validate_data"]], "simplesequencegenerator (class in compas_timber.planning)": [[163, "compas_timber.planning.SimpleSequenceGenerator"]], "step (class in compas_timber.planning)": [[164, "compas_timber.planning.Step"]], "tostring() (compas_timber.planning.step method)": [[165, "compas_timber.planning.Step.ToString"]], "copy() (compas_timber.planning.step method)": [[166, "compas_timber.planning.Step.copy"]], "from_json() (compas_timber.planning.step class method)": [[167, "compas_timber.planning.Step.from_json"]], "from_jsonstring() (compas_timber.planning.step class method)": [[168, "compas_timber.planning.Step.from_jsonstring"]], "sha256() (compas_timber.planning.step method)": [[169, "compas_timber.planning.Step.sha256"]], "to_json() (compas_timber.planning.step method)": [[170, "compas_timber.planning.Step.to_json"]], "to_jsonstring() (compas_timber.planning.step method)": [[171, "compas_timber.planning.Step.to_jsonstring"]], "transform() (compas_timber.planning.step method)": [[172, "compas_timber.planning.Step.transform"]], "validate_data() (compas_timber.planning.step class method)": [[173, "compas_timber.planning.Step.validate_data"]], "find_neighboring_beams() (in module compas_timber.rhino)": [[174, "compas_timber.rhino.find_neighboring_beams"]]}})