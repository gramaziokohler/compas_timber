Search.setIndex({"docnames": ["api", "api/compas_timber.assembly", "api/compas_timber.connections", "api/compas_timber.consumers", "api/compas_timber.fabrication", "api/compas_timber.ghpython", "api/compas_timber.parts", "api/compas_timber.planning", "api/compas_timber.rhino", "api/generated/compas_timber.assembly.TimberAssembly", "api/generated/compas_timber.assembly.TimberAssembly.ToString", "api/generated/compas_timber.assembly.TimberAssembly.add_beam", "api/generated/compas_timber.assembly.TimberAssembly.add_connection", "api/generated/compas_timber.assembly.TimberAssembly.add_joint", "api/generated/compas_timber.assembly.TimberAssembly.add_part", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined", "api/generated/compas_timber.assembly.TimberAssembly.connections", "api/generated/compas_timber.assembly.TimberAssembly.contains", "api/generated/compas_timber.assembly.TimberAssembly.copy", "api/generated/compas_timber.assembly.TimberAssembly.delete_connection", "api/generated/compas_timber.assembly.TimberAssembly.delete_part", "api/generated/compas_timber.assembly.TimberAssembly.find", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key", "api/generated/compas_timber.assembly.TimberAssembly.from_json", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.parts", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint", "api/generated/compas_timber.assembly.TimberAssembly.rotate", "api/generated/compas_timber.assembly.TimberAssembly.rotated", "api/generated/compas_timber.assembly.TimberAssembly.scale", "api/generated/compas_timber.assembly.TimberAssembly.scaled", "api/generated/compas_timber.assembly.TimberAssembly.set_topologies", "api/generated/compas_timber.assembly.TimberAssembly.sha256", "api/generated/compas_timber.assembly.TimberAssembly.to_json", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.transform", "api/generated/compas_timber.assembly.TimberAssembly.transform_numpy", "api/generated/compas_timber.assembly.TimberAssembly.transformed", "api/generated/compas_timber.assembly.TimberAssembly.transformed_numpy", "api/generated/compas_timber.assembly.TimberAssembly.translate", "api/generated/compas_timber.assembly.TimberAssembly.translated", "api/generated/compas_timber.assembly.TimberAssembly.validate_data", "api/generated/compas_timber.connections.BeamJoinningError", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.FrenchRidgeLapJoint", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.ToString", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_features", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.check_geometry", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.copy", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.create", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_json", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.sha256", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_json", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.validate_data", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.from_jsonstring", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.to_jsonstring", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring", "api/generated/compas_timber.connections.LButtJoint.get_cross_cutting_plane", "api/generated/compas_timber.connections.LButtJoint.get_main_cutting_plane", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LHalfLapJoint", "api/generated/compas_timber.connections.LHalfLapJoint.ToString", "api/generated/compas_timber.connections.LHalfLapJoint.add_features", "api/generated/compas_timber.connections.LHalfLapJoint.copy", "api/generated/compas_timber.connections.LHalfLapJoint.create", "api/generated/compas_timber.connections.LHalfLapJoint.from_json", "api/generated/compas_timber.connections.LHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LHalfLapJoint.sha256", "api/generated/compas_timber.connections.LHalfLapJoint.to_json", "api/generated/compas_timber.connections.LHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.LapJoint", "api/generated/compas_timber.connections.LapJoint.ToString", "api/generated/compas_timber.connections.LapJoint.add_features", "api/generated/compas_timber.connections.LapJoint.copy", "api/generated/compas_timber.connections.LapJoint.create", "api/generated/compas_timber.connections.LapJoint.from_json", "api/generated/compas_timber.connections.LapJoint.from_jsonstring", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LapJoint.sha256", "api/generated/compas_timber.connections.LapJoint.to_json", "api/generated/compas_timber.connections.LapJoint.to_jsonstring", "api/generated/compas_timber.connections.LapJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring", "api/generated/compas_timber.connections.TButtJoint.get_cutting_plane", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.THalfLapJoint", "api/generated/compas_timber.connections.THalfLapJoint.ToString", "api/generated/compas_timber.connections.THalfLapJoint.add_features", "api/generated/compas_timber.connections.THalfLapJoint.copy", "api/generated/compas_timber.connections.THalfLapJoint.create", "api/generated/compas_timber.connections.THalfLapJoint.from_json", "api/generated/compas_timber.connections.THalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.THalfLapJoint.sha256", "api/generated/compas_timber.connections.THalfLapJoint.to_json", "api/generated/compas_timber.connections.THalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.validate_data", "api/generated/compas_timber.connections.XHalfLapJoint", "api/generated/compas_timber.connections.XHalfLapJoint.ToString", "api/generated/compas_timber.connections.XHalfLapJoint.add_features", "api/generated/compas_timber.connections.XHalfLapJoint.copy", "api/generated/compas_timber.connections.XHalfLapJoint.create", "api/generated/compas_timber.connections.XHalfLapJoint.from_json", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.XHalfLapJoint.sha256", "api/generated/compas_timber.connections.XHalfLapJoint.to_json", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data", "api/generated/compas_timber.connections.beam_side_incidence", "api/generated/compas_timber.connections.find_neighboring_beams", "api/generated/compas_timber.consumers.BeamGeometry", "api/generated/compas_timber.consumers.BrepGeometryConsumer", "api/generated/compas_timber.consumers.CutFeature", "api/generated/compas_timber.consumers.CutFeature.ToString", "api/generated/compas_timber.consumers.CutFeature.copy", "api/generated/compas_timber.consumers.CutFeature.from_json", "api/generated/compas_timber.consumers.CutFeature.from_jsonstring", "api/generated/compas_timber.consumers.CutFeature.sha256", "api/generated/compas_timber.consumers.CutFeature.to_json", "api/generated/compas_timber.consumers.CutFeature.to_jsonstring", "api/generated/compas_timber.consumers.CutFeature.validate_data", "api/generated/compas_timber.consumers.CutFeatureGeometry", "api/generated/compas_timber.consumers.CutFeatureGeometry.apply", "api/generated/compas_timber.consumers.DrillFeature", "api/generated/compas_timber.consumers.DrillFeature.ToString", "api/generated/compas_timber.consumers.DrillFeature.copy", "api/generated/compas_timber.consumers.DrillFeature.from_json", "api/generated/compas_timber.consumers.DrillFeature.from_jsonstring", "api/generated/compas_timber.consumers.DrillFeature.sha256", "api/generated/compas_timber.consumers.DrillFeature.to_json", "api/generated/compas_timber.consumers.DrillFeature.to_jsonstring", "api/generated/compas_timber.consumers.DrillFeature.validate_data", "api/generated/compas_timber.consumers.DrillFeatureGeometry", "api/generated/compas_timber.consumers.DrillFeatureGeometry.apply", "api/generated/compas_timber.consumers.FeatureApplicationError", "api/generated/compas_timber.consumers.FeatureApplicator", "api/generated/compas_timber.consumers.FeatureApplicator.apply", "api/generated/compas_timber.consumers.MillVolume", "api/generated/compas_timber.consumers.MillVolume.ToString", "api/generated/compas_timber.consumers.MillVolume.copy", "api/generated/compas_timber.consumers.MillVolume.from_json", "api/generated/compas_timber.consumers.MillVolume.from_jsonstring", "api/generated/compas_timber.consumers.MillVolume.sha256", "api/generated/compas_timber.consumers.MillVolume.to_json", "api/generated/compas_timber.consumers.MillVolume.to_jsonstring", "api/generated/compas_timber.consumers.MillVolume.validate_data", "api/generated/compas_timber.consumers.MillVolumeGeometry", "api/generated/compas_timber.consumers.MillVolumeGeometry.apply", "api/generated/compas_timber.fabrication.BTLx", "api/generated/compas_timber.fabrication.BTLx.btlx_string", "api/generated/compas_timber.fabrication.BTLx.process_assembly", "api/generated/compas_timber.fabrication.BTLx.register_joint", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints", "api/generated/compas_timber.fabrication.BTLxJackCut", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process", "api/generated/compas_timber.fabrication.BTLxProcess", "api/generated/compas_timber.fabrication.FrenchRidgeFactory", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings", "api/generated/compas_timber.fabrication.LButtFactory", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings", "api/generated/compas_timber.fabrication.LMiterFactory", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings", "api/generated/compas_timber.fabrication.TButtFactory", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings", "api/generated/compas_timber.ghpython.CategoryRule", "api/generated/compas_timber.ghpython.CategoryRule.ToString", "api/generated/compas_timber.ghpython.CategoryRule.comply", "api/generated/compas_timber.ghpython.CategoryRule.reorder", "api/generated/compas_timber.ghpython.DebugInfomation", "api/generated/compas_timber.ghpython.DebugInfomation.ToString", "api/generated/compas_timber.ghpython.DebugInfomation.add_feature_error", "api/generated/compas_timber.ghpython.DebugInfomation.add_joint_error", "api/generated/compas_timber.ghpython.DirectRule", "api/generated/compas_timber.ghpython.DirectRule.ToString", "api/generated/compas_timber.ghpython.DirectRule.comply", "api/generated/compas_timber.ghpython.FeatureDefinition", "api/generated/compas_timber.ghpython.FeatureDefinition.ToString", "api/generated/compas_timber.ghpython.JointDefinition", "api/generated/compas_timber.ghpython.JointDefinition.ToString", "api/generated/compas_timber.ghpython.JointDefinition.is_identical", "api/generated/compas_timber.ghpython.JointDefinition.match", "api/generated/compas_timber.ghpython.JointOptions", "api/generated/compas_timber.ghpython.JointOptions.ToString", "api/generated/compas_timber.ghpython.JointOptions.is_identical", "api/generated/compas_timber.ghpython.TopologyRule", "api/generated/compas_timber.ghpython.TopologyRule.ToString", "api/generated/compas_timber.ghpython.TopologyRule.comply", "api/generated/compas_timber.parts.Beam", "api/generated/compas_timber.parts.Beam.ToString", "api/generated/compas_timber.parts.Beam.add_blank_extension", "api/generated/compas_timber.parts.Beam.add_feature", "api/generated/compas_timber.parts.Beam.add_features", "api/generated/compas_timber.parts.Beam.align_z", "api/generated/compas_timber.parts.Beam.clear_features", "api/generated/compas_timber.parts.Beam.copy", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point", "api/generated/compas_timber.parts.Beam.extension_to_plane", "api/generated/compas_timber.parts.Beam.from_centerline", "api/generated/compas_timber.parts.Beam.from_endpoints", "api/generated/compas_timber.parts.Beam.from_json", "api/generated/compas_timber.parts.Beam.from_jsonstring", "api/generated/compas_timber.parts.Beam.get_geometry", "api/generated/compas_timber.parts.Beam.remove_blank_extension", "api/generated/compas_timber.parts.Beam.remove_features", "api/generated/compas_timber.parts.Beam.rotate", "api/generated/compas_timber.parts.Beam.rotated", "api/generated/compas_timber.parts.Beam.scale", "api/generated/compas_timber.parts.Beam.scaled", "api/generated/compas_timber.parts.Beam.sha256", "api/generated/compas_timber.parts.Beam.to_json", "api/generated/compas_timber.parts.Beam.to_jsonstring", "api/generated/compas_timber.parts.Beam.transform", "api/generated/compas_timber.parts.Beam.transform_numpy", "api/generated/compas_timber.parts.Beam.transformed", "api/generated/compas_timber.parts.Beam.transformed_numpy", "api/generated/compas_timber.parts.Beam.translate", "api/generated/compas_timber.parts.Beam.translated", "api/generated/compas_timber.parts.Beam.validate_data", "api/generated/compas_timber.planning.Actor", "api/generated/compas_timber.planning.Actor.get_name", "api/generated/compas_timber.planning.BuildingPlan", "api/generated/compas_timber.planning.BuildingPlan.ToString", "api/generated/compas_timber.planning.BuildingPlan.add_step", "api/generated/compas_timber.planning.BuildingPlan.copy", "api/generated/compas_timber.planning.BuildingPlan.from_json", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.sha256", "api/generated/compas_timber.planning.BuildingPlan.to_json", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.validate_data", "api/generated/compas_timber.planning.SimpleSequenceGenerator", "api/generated/compas_timber.planning.Step", "api/generated/compas_timber.planning.Step.ToString", "api/generated/compas_timber.planning.Step.copy", "api/generated/compas_timber.planning.Step.from_json", "api/generated/compas_timber.planning.Step.from_jsonstring", "api/generated/compas_timber.planning.Step.sha256", "api/generated/compas_timber.planning.Step.to_json", "api/generated/compas_timber.planning.Step.to_jsonstring", "api/generated/compas_timber.planning.Step.transform", "api/generated/compas_timber.planning.Step.validate_data", "api/generated/compas_timber.rhino.find_neighboring_beams", "citing", "examples", "examples/create_joint", "index", "installation", "license", "tutorials", "tutorials/BTLx_contribution_guide", "tutorials/grasshopper/assembly", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beam", "tutorials/grasshopper/examples", "tutorials/grasshopper/features", "tutorials/grasshopper/joints", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "filenames": ["api.rst", "api/compas_timber.assembly.rst", "api/compas_timber.connections.rst", "api/compas_timber.consumers.rst", "api/compas_timber.fabrication.rst", "api/compas_timber.ghpython.rst", "api/compas_timber.parts.rst", "api/compas_timber.planning.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.assembly.TimberAssembly.rst", "api/generated/compas_timber.assembly.TimberAssembly.ToString.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_beam.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined.rst", "api/generated/compas_timber.assembly.TimberAssembly.connections.rst", "api/generated/compas_timber.assembly.TimberAssembly.contains.rst", "api/generated/compas_timber.assembly.TimberAssembly.copy.rst", "api/generated/compas_timber.assembly.TimberAssembly.delete_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.delete_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.find.rst", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.parts.rst", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.rotate.rst", "api/generated/compas_timber.assembly.TimberAssembly.rotated.rst", "api/generated/compas_timber.assembly.TimberAssembly.scale.rst", "api/generated/compas_timber.assembly.TimberAssembly.scaled.rst", "api/generated/compas_timber.assembly.TimberAssembly.set_topologies.rst", "api/generated/compas_timber.assembly.TimberAssembly.sha256.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.transform.rst", "api/generated/compas_timber.assembly.TimberAssembly.transform_numpy.rst", "api/generated/compas_timber.assembly.TimberAssembly.transformed.rst", "api/generated/compas_timber.assembly.TimberAssembly.transformed_numpy.rst", "api/generated/compas_timber.assembly.TimberAssembly.translate.rst", "api/generated/compas_timber.assembly.TimberAssembly.translated.rst", "api/generated/compas_timber.assembly.TimberAssembly.validate_data.rst", "api/generated/compas_timber.connections.BeamJoinningError.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.ToString.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.add_features.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.check_geometry.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.copy.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.create.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_json.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.sha256.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_json.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.FrenchRidgeLapJoint.validate_data.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.from_json.rst", "api/generated/compas_timber.connections.Joint.from_jsonstring.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_json.rst", "api/generated/compas_timber.connections.Joint.to_jsonstring.rst", "api/generated/compas_timber.connections.Joint.validate_data.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.from_json.rst", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.get_cross_cutting_plane.rst", "api/generated/compas_timber.connections.LButtJoint.get_main_cutting_plane.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.to_json.rst", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.validate_data.rst", "api/generated/compas_timber.connections.LHalfLapJoint.rst", "api/generated/compas_timber.connections.LHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.LHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.LHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.LHalfLapJoint.create.rst", "api/generated/compas_timber.connections.LHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.LHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LHalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.LHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.LHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.from_json.rst", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_json.rst", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_data.rst", "api/generated/compas_timber.connections.LapJoint.rst", "api/generated/compas_timber.connections.LapJoint.ToString.rst", "api/generated/compas_timber.connections.LapJoint.add_features.rst", "api/generated/compas_timber.connections.LapJoint.copy.rst", "api/generated/compas_timber.connections.LapJoint.create.rst", "api/generated/compas_timber.connections.LapJoint.from_json.rst", "api/generated/compas_timber.connections.LapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LapJoint.sha256.rst", "api/generated/compas_timber.connections.LapJoint.to_json.rst", "api/generated/compas_timber.connections.LapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LapJoint.validate_data.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.from_json.rst", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.get_cutting_plane.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.to_json.rst", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.validate_data.rst", "api/generated/compas_timber.connections.THalfLapJoint.rst", "api/generated/compas_timber.connections.THalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.THalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.THalfLapJoint.copy.rst", "api/generated/compas_timber.connections.THalfLapJoint.create.rst", "api/generated/compas_timber.connections.THalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.THalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.THalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.THalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.THalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.THalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.THalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.THalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.rst", "api/generated/compas_timber.connections.XHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.XHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.XHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.XHalfLapJoint.create.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame.rst", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.XHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.beam_side_incidence.rst", "api/generated/compas_timber.connections.find_neighboring_beams.rst", "api/generated/compas_timber.consumers.BeamGeometry.rst", "api/generated/compas_timber.consumers.BrepGeometryConsumer.rst", "api/generated/compas_timber.consumers.CutFeature.rst", "api/generated/compas_timber.consumers.CutFeature.ToString.rst", "api/generated/compas_timber.consumers.CutFeature.copy.rst", "api/generated/compas_timber.consumers.CutFeature.from_json.rst", "api/generated/compas_timber.consumers.CutFeature.from_jsonstring.rst", "api/generated/compas_timber.consumers.CutFeature.sha256.rst", "api/generated/compas_timber.consumers.CutFeature.to_json.rst", "api/generated/compas_timber.consumers.CutFeature.to_jsonstring.rst", "api/generated/compas_timber.consumers.CutFeature.validate_data.rst", "api/generated/compas_timber.consumers.CutFeatureGeometry.rst", "api/generated/compas_timber.consumers.CutFeatureGeometry.apply.rst", "api/generated/compas_timber.consumers.DrillFeature.rst", "api/generated/compas_timber.consumers.DrillFeature.ToString.rst", "api/generated/compas_timber.consumers.DrillFeature.copy.rst", "api/generated/compas_timber.consumers.DrillFeature.from_json.rst", "api/generated/compas_timber.consumers.DrillFeature.from_jsonstring.rst", "api/generated/compas_timber.consumers.DrillFeature.sha256.rst", "api/generated/compas_timber.consumers.DrillFeature.to_json.rst", "api/generated/compas_timber.consumers.DrillFeature.to_jsonstring.rst", "api/generated/compas_timber.consumers.DrillFeature.validate_data.rst", "api/generated/compas_timber.consumers.DrillFeatureGeometry.rst", "api/generated/compas_timber.consumers.DrillFeatureGeometry.apply.rst", "api/generated/compas_timber.consumers.FeatureApplicationError.rst", "api/generated/compas_timber.consumers.FeatureApplicator.rst", "api/generated/compas_timber.consumers.FeatureApplicator.apply.rst", "api/generated/compas_timber.consumers.MillVolume.rst", "api/generated/compas_timber.consumers.MillVolume.ToString.rst", "api/generated/compas_timber.consumers.MillVolume.copy.rst", "api/generated/compas_timber.consumers.MillVolume.from_json.rst", "api/generated/compas_timber.consumers.MillVolume.from_jsonstring.rst", "api/generated/compas_timber.consumers.MillVolume.sha256.rst", "api/generated/compas_timber.consumers.MillVolume.to_json.rst", "api/generated/compas_timber.consumers.MillVolume.to_jsonstring.rst", "api/generated/compas_timber.consumers.MillVolume.validate_data.rst", "api/generated/compas_timber.consumers.MillVolumeGeometry.rst", "api/generated/compas_timber.consumers.MillVolumeGeometry.apply.rst", "api/generated/compas_timber.fabrication.BTLx.rst", "api/generated/compas_timber.fabrication.BTLx.btlx_string.rst", "api/generated/compas_timber.fabrication.BTLx.process_assembly.rst", "api/generated/compas_timber.fabrication.BTLx.register_joint.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process.rst", "api/generated/compas_timber.fabrication.BTLxProcess.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LButtFactory.rst", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LMiterFactory.rst", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.TButtFactory.rst", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings.rst", "api/generated/compas_timber.ghpython.CategoryRule.rst", "api/generated/compas_timber.ghpython.CategoryRule.ToString.rst", "api/generated/compas_timber.ghpython.CategoryRule.comply.rst", "api/generated/compas_timber.ghpython.CategoryRule.reorder.rst", "api/generated/compas_timber.ghpython.DebugInfomation.rst", "api/generated/compas_timber.ghpython.DebugInfomation.ToString.rst", "api/generated/compas_timber.ghpython.DebugInfomation.add_feature_error.rst", "api/generated/compas_timber.ghpython.DebugInfomation.add_joint_error.rst", "api/generated/compas_timber.ghpython.DirectRule.rst", "api/generated/compas_timber.ghpython.DirectRule.ToString.rst", "api/generated/compas_timber.ghpython.DirectRule.comply.rst", "api/generated/compas_timber.ghpython.FeatureDefinition.rst", "api/generated/compas_timber.ghpython.FeatureDefinition.ToString.rst", "api/generated/compas_timber.ghpython.JointDefinition.rst", "api/generated/compas_timber.ghpython.JointDefinition.ToString.rst", "api/generated/compas_timber.ghpython.JointDefinition.is_identical.rst", "api/generated/compas_timber.ghpython.JointDefinition.match.rst", "api/generated/compas_timber.ghpython.JointOptions.rst", "api/generated/compas_timber.ghpython.JointOptions.ToString.rst", "api/generated/compas_timber.ghpython.JointOptions.is_identical.rst", "api/generated/compas_timber.ghpython.TopologyRule.rst", "api/generated/compas_timber.ghpython.TopologyRule.ToString.rst", "api/generated/compas_timber.ghpython.TopologyRule.comply.rst", "api/generated/compas_timber.parts.Beam.rst", "api/generated/compas_timber.parts.Beam.ToString.rst", "api/generated/compas_timber.parts.Beam.add_blank_extension.rst", "api/generated/compas_timber.parts.Beam.add_feature.rst", "api/generated/compas_timber.parts.Beam.add_features.rst", "api/generated/compas_timber.parts.Beam.align_z.rst", "api/generated/compas_timber.parts.Beam.clear_features.rst", "api/generated/compas_timber.parts.Beam.copy.rst", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.parts.Beam.extension_to_plane.rst", "api/generated/compas_timber.parts.Beam.from_centerline.rst", "api/generated/compas_timber.parts.Beam.from_endpoints.rst", "api/generated/compas_timber.parts.Beam.from_json.rst", "api/generated/compas_timber.parts.Beam.from_jsonstring.rst", "api/generated/compas_timber.parts.Beam.get_geometry.rst", "api/generated/compas_timber.parts.Beam.remove_blank_extension.rst", "api/generated/compas_timber.parts.Beam.remove_features.rst", "api/generated/compas_timber.parts.Beam.rotate.rst", "api/generated/compas_timber.parts.Beam.rotated.rst", "api/generated/compas_timber.parts.Beam.scale.rst", "api/generated/compas_timber.parts.Beam.scaled.rst", "api/generated/compas_timber.parts.Beam.sha256.rst", "api/generated/compas_timber.parts.Beam.to_json.rst", "api/generated/compas_timber.parts.Beam.to_jsonstring.rst", "api/generated/compas_timber.parts.Beam.transform.rst", "api/generated/compas_timber.parts.Beam.transform_numpy.rst", "api/generated/compas_timber.parts.Beam.transformed.rst", "api/generated/compas_timber.parts.Beam.transformed_numpy.rst", "api/generated/compas_timber.parts.Beam.translate.rst", "api/generated/compas_timber.parts.Beam.translated.rst", "api/generated/compas_timber.parts.Beam.validate_data.rst", "api/generated/compas_timber.planning.Actor.rst", "api/generated/compas_timber.planning.Actor.get_name.rst", "api/generated/compas_timber.planning.BuildingPlan.rst", "api/generated/compas_timber.planning.BuildingPlan.ToString.rst", "api/generated/compas_timber.planning.BuildingPlan.add_step.rst", "api/generated/compas_timber.planning.BuildingPlan.copy.rst", "api/generated/compas_timber.planning.BuildingPlan.from_json.rst", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.sha256.rst", "api/generated/compas_timber.planning.BuildingPlan.to_json.rst", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.validate_data.rst", "api/generated/compas_timber.planning.SimpleSequenceGenerator.rst", "api/generated/compas_timber.planning.Step.rst", "api/generated/compas_timber.planning.Step.ToString.rst", "api/generated/compas_timber.planning.Step.copy.rst", "api/generated/compas_timber.planning.Step.from_json.rst", "api/generated/compas_timber.planning.Step.from_jsonstring.rst", "api/generated/compas_timber.planning.Step.sha256.rst", "api/generated/compas_timber.planning.Step.to_json.rst", "api/generated/compas_timber.planning.Step.to_jsonstring.rst", "api/generated/compas_timber.planning.Step.transform.rst", "api/generated/compas_timber.planning.Step.validate_data.rst", "api/generated/compas_timber.rhino.find_neighboring_beams.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "license.rst", "tutorials.rst", "tutorials/BTLx_contribution_guide.rst", "tutorials/grasshopper/assembly.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beam.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joints.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "titles": ["API Reference", "compas_timber.assembly", "compas_timber.connections", "compas_timber.consumers", "compas_timber.fabrication", "compas_timber.ghpython", "compas_timber.parts", "compas_timber.planning", "rhino", "TimberAssembly", "TimberAssembly.ToString", "TimberAssembly.add_beam", "TimberAssembly.add_connection", "TimberAssembly.add_joint", "TimberAssembly.add_part", "TimberAssembly.are_parts_joined", "TimberAssembly.connections", "TimberAssembly.contains", "TimberAssembly.copy", "TimberAssembly.delete_connection", "TimberAssembly.delete_part", "TimberAssembly.find", "TimberAssembly.find_by_key", "TimberAssembly.from_json", "TimberAssembly.from_jsonstring", "TimberAssembly.parts", "TimberAssembly.remove_joint", "TimberAssembly.rotate", "TimberAssembly.rotated", "TimberAssembly.scale", "TimberAssembly.scaled", "TimberAssembly.set_topologies", "TimberAssembly.sha256", "TimberAssembly.to_json", "TimberAssembly.to_jsonstring", "TimberAssembly.transform", "TimberAssembly.transform_numpy", "TimberAssembly.transformed", "TimberAssembly.transformed_numpy", "TimberAssembly.translate", "TimberAssembly.translated", "TimberAssembly.validate_data", "BeamJoinningError", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "FrenchRidgeLapJoint", "FrenchRidgeLapJoint.ToString", "FrenchRidgeLapJoint.add_features", "FrenchRidgeLapJoint.check_geometry", "FrenchRidgeLapJoint.copy", "FrenchRidgeLapJoint.create", "FrenchRidgeLapJoint.from_json", "FrenchRidgeLapJoint.from_jsonstring", "FrenchRidgeLapJoint.restore_beams_from_keys", "FrenchRidgeLapJoint.sha256", "FrenchRidgeLapJoint.to_json", "FrenchRidgeLapJoint.to_jsonstring", "FrenchRidgeLapJoint.validate_data", "Joint", "Joint.ToString", "Joint.add_features", "Joint.copy", "Joint.create", "Joint.from_json", "Joint.from_jsonstring", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_json", "Joint.to_jsonstring", "Joint.validate_data", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_features", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.from_json", "LButtJoint.from_jsonstring", "LButtJoint.get_cross_cutting_plane", "LButtJoint.get_main_cutting_plane", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.to_json", "LButtJoint.to_jsonstring", "LButtJoint.validate_data", "LHalfLapJoint", "LHalfLapJoint.ToString", "LHalfLapJoint.add_features", "LHalfLapJoint.copy", "LHalfLapJoint.create", "LHalfLapJoint.from_json", "LHalfLapJoint.from_jsonstring", "LHalfLapJoint.get_cross_cutting_frame", "LHalfLapJoint.get_main_cutting_frame", "LHalfLapJoint.restore_beams_from_keys", "LHalfLapJoint.sha256", "LHalfLapJoint.to_json", "LHalfLapJoint.to_jsonstring", "LHalfLapJoint.validate_data", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_features", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.from_json", "LMiterJoint.from_jsonstring", "LMiterJoint.get_cutting_planes", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_json", "LMiterJoint.to_jsonstring", "LMiterJoint.validate_data", "LapJoint", "LapJoint.ToString", "LapJoint.add_features", "LapJoint.copy", "LapJoint.create", "LapJoint.from_json", "LapJoint.from_jsonstring", "LapJoint.get_cross_cutting_frame", "LapJoint.get_main_cutting_frame", "LapJoint.restore_beams_from_keys", "LapJoint.sha256", "LapJoint.to_json", "LapJoint.to_jsonstring", "LapJoint.validate_data", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_features", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.from_json", "TButtJoint.from_jsonstring", "TButtJoint.get_cutting_plane", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.to_json", "TButtJoint.to_jsonstring", "TButtJoint.validate_data", "THalfLapJoint", "THalfLapJoint.ToString", "THalfLapJoint.add_features", "THalfLapJoint.copy", "THalfLapJoint.create", "THalfLapJoint.from_json", "THalfLapJoint.from_jsonstring", "THalfLapJoint.get_cross_cutting_frame", "THalfLapJoint.get_main_cutting_frame", "THalfLapJoint.restore_beams_from_keys", "THalfLapJoint.sha256", "THalfLapJoint.to_json", "THalfLapJoint.to_jsonstring", "THalfLapJoint.validate_data", "XHalfLapJoint", "XHalfLapJoint.ToString", "XHalfLapJoint.add_features", "XHalfLapJoint.copy", "XHalfLapJoint.create", "XHalfLapJoint.from_json", "XHalfLapJoint.from_jsonstring", "XHalfLapJoint.get_cross_cutting_frame", "XHalfLapJoint.get_main_cutting_frame", "XHalfLapJoint.restore_beams_from_keys", "XHalfLapJoint.sha256", "XHalfLapJoint.to_json", "XHalfLapJoint.to_jsonstring", "XHalfLapJoint.validate_data", "beam_side_incidence", "find_neighboring_beams", "BeamGeometry", "BrepGeometryConsumer", "CutFeature", "CutFeature.ToString", "CutFeature.copy", "CutFeature.from_json", "CutFeature.from_jsonstring", "CutFeature.sha256", "CutFeature.to_json", "CutFeature.to_jsonstring", "CutFeature.validate_data", "CutFeatureGeometry", "CutFeatureGeometry.apply", "DrillFeature", "DrillFeature.ToString", "DrillFeature.copy", "DrillFeature.from_json", "DrillFeature.from_jsonstring", "DrillFeature.sha256", "DrillFeature.to_json", "DrillFeature.to_jsonstring", "DrillFeature.validate_data", "DrillFeatureGeometry", "DrillFeatureGeometry.apply", "FeatureApplicationError", "FeatureApplicator", "FeatureApplicator.apply", "MillVolume", "MillVolume.ToString", "MillVolume.copy", "MillVolume.from_json", "MillVolume.from_jsonstring", "MillVolume.sha256", "MillVolume.to_json", "MillVolume.to_jsonstring", "MillVolume.validate_data", "MillVolumeGeometry", "MillVolumeGeometry.apply", "BTLx", "BTLx.btlx_string", "BTLx.process_assembly", "BTLx.register_joint", "BTLxFrenchRidgeLap", "BTLxFrenchRidgeLap.create_process", "BTLxFrenchRidgeLap.get_params", "BTLxFrenchRidgeLap.process_joints", "BTLxJackCut", "BTLxJackCut.create_process", "BTLxJackCut.generate_process", "BTLxProcess", "FrenchRidgeFactory", "FrenchRidgeFactory.apply_processings", "LButtFactory", "LButtFactory.apply_processings", "LMiterFactory", "LMiterFactory.apply_processings", "TButtFactory", "TButtFactory.apply_processings", "CategoryRule", "CategoryRule.ToString", "CategoryRule.comply", "CategoryRule.reorder", "DebugInfomation", "DebugInfomation.ToString", "DebugInfomation.add_feature_error", "DebugInfomation.add_joint_error", "DirectRule", "DirectRule.ToString", "DirectRule.comply", "FeatureDefinition", "FeatureDefinition.ToString", "JointDefinition", "JointDefinition.ToString", "JointDefinition.is_identical", "JointDefinition.match", "JointOptions", "JointOptions.ToString", "JointOptions.is_identical", "TopologyRule", "TopologyRule.ToString", "TopologyRule.comply", "Beam", "Beam.ToString", "Beam.add_blank_extension", "Beam.add_feature", "Beam.add_features", "Beam.align_z", "Beam.clear_features", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_endpoints", "Beam.from_json", "Beam.from_jsonstring", "Beam.get_geometry", "Beam.remove_blank_extension", "Beam.remove_features", "Beam.rotate", "Beam.rotated", "Beam.scale", "Beam.scaled", "Beam.sha256", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transform_numpy", "Beam.transformed", "Beam.transformed_numpy", "Beam.translate", "Beam.translated", "Beam.validate_data", "Actor", "Actor.get_name", "BuildingPlan", "BuildingPlan.ToString", "BuildingPlan.add_step", "BuildingPlan.copy", "BuildingPlan.from_json", "BuildingPlan.from_jsonstring", "BuildingPlan.sha256", "BuildingPlan.to_json", "BuildingPlan.to_jsonstring", "BuildingPlan.validate_data", "SimpleSequenceGenerator", "Step", "Step.ToString", "Step.copy", "Step.from_json", "Step.from_jsonstring", "Step.sha256", "Step.to_json", "Step.to_jsonstring", "Step.transform", "Step.validate_data", "find_neighboring_beams", "Citing", "Examples", "Create Joint", "COMPAS TIMBER", "Installation", "License", "Grasshopper plugin", "BTLx Contribution Guide", "Assembly", "Attributes", "Beam", "Examples", "Features", "Joints", "Show", "Utils", "Workflow"], "terms": {"compas_timb": [0, 9, 42, 43, 46, 51, 59, 63, 66, 71, 73, 77, 87, 91, 101, 105, 114, 118, 128, 132, 141, 145, 155, 159, 169, 170, 171, 172, 173, 182, 183, 184, 193, 194, 195, 196, 198, 207, 208, 209, 212, 213, 217, 220, 221, 223, 225, 227, 229, 233, 237, 240, 242, 246, 249, 252, 283, 285, 295, 296, 306, 307, 310, 311], "assembli": [0, 9, 11, 12, 13, 14, 17, 20, 21, 22, 25, 26, 46, 51, 54, 63, 66, 73, 77, 82, 87, 91, 96, 101, 105, 109, 114, 118, 123, 128, 132, 136, 141, 145, 150, 155, 159, 164, 172, 209, 211, 255, 283, 295, 309, 310, 313, 320, 321, 323], "part": [0, 9, 12, 13, 14, 15, 16, 19, 20, 21, 22, 49, 66, 182, 193, 207, 209, 211, 213, 214, 217, 218, 222, 224, 226, 228, 252, 255, 266, 306, 310, 314, 317, 319, 321], "connect": [0, 10, 12, 19, 42, 43, 46, 47, 51, 59, 60, 63, 66, 71, 73, 74, 77, 87, 88, 91, 101, 102, 105, 114, 115, 118, 128, 129, 132, 141, 142, 145, 155, 156, 159, 169, 170, 174, 185, 199, 222, 224, 226, 228, 237, 246, 249, 253, 286, 297, 310, 312, 315, 320], "consum": [0, 171, 172, 173, 182, 183, 184, 193, 194, 195, 196, 198, 207, 208, 310], "fabric": [0, 209, 212, 213, 216, 217, 220, 221, 223, 225, 227, 307, 310], "plan": [0, 283, 285, 295, 296, 310], "ghpython": [0, 229, 233, 237, 240, 242, 246, 249, 310, 313], "rhino": [0, 10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 170, 174, 185, 199, 253, 286, 297, 306, 308, 310, 311, 316, 317, 322], "The": [8, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 50, 51, 52, 53, 56, 57, 58, 59, 62, 63, 64, 65, 68, 69, 70, 73, 76, 77, 78, 79, 84, 85, 86, 87, 90, 91, 92, 93, 98, 99, 100, 101, 104, 105, 106, 107, 111, 112, 113, 114, 117, 118, 119, 120, 125, 126, 127, 128, 131, 132, 133, 134, 138, 139, 140, 141, 144, 145, 146, 147, 152, 153, 154, 155, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 213, 217, 220, 222, 224, 226, 228, 232, 246, 249, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 288, 289, 290, 292, 293, 294, 298, 299, 300, 302, 303, 305, 306, 312, 313, 316, 317, 319, 320, 322, 323], "modul": [8, 220, 310, 314], "contain": [8, 9, 23, 24, 44, 46, 51, 52, 53, 63, 64, 65, 77, 78, 79, 91, 92, 93, 105, 106, 107, 118, 119, 120, 132, 133, 134, 145, 146, 147, 159, 160, 161, 170, 171, 176, 177, 187, 188, 194, 201, 202, 232, 233, 240, 242, 246, 252, 264, 265, 285, 289, 290, 296, 299, 300, 306], "function": [8, 114, 170, 220, 313, 314], "type": [8, 10, 18, 23, 24, 41, 45, 46, 47, 50, 52, 53, 58, 60, 62, 64, 65, 70, 73, 74, 76, 78, 79, 86, 87, 88, 90, 92, 93, 100, 101, 102, 104, 106, 107, 113, 114, 115, 117, 119, 120, 127, 128, 129, 131, 133, 134, 140, 141, 142, 144, 146, 147, 154, 155, 156, 158, 160, 161, 168, 172, 174, 175, 176, 177, 181, 185, 186, 187, 188, 192, 199, 200, 201, 202, 206, 212, 213, 216, 220, 237, 242, 246, 249, 253, 259, 264, 265, 266, 282, 283, 286, 288, 289, 290, 294, 296, 297, 298, 299, 300, 305, 310, 314, 320, 321], "meant": 8, "us": [8, 10, 32, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 49, 55, 58, 59, 60, 67, 70, 72, 73, 74, 83, 86, 87, 88, 97, 100, 101, 102, 110, 113, 114, 115, 124, 127, 128, 129, 137, 140, 141, 142, 151, 154, 155, 156, 165, 168, 169, 170, 174, 178, 181, 185, 189, 192, 199, 203, 206, 209, 216, 232, 253, 257, 261, 273, 276, 277, 278, 279, 280, 281, 282, 284, 286, 291, 294, 296, 297, 301, 305, 306, 307, 310, 312, 313, 314, 315, 316, 317, 320, 322], "context": [8, 14], "class": [9, 10, 13, 17, 43, 46, 47, 59, 60, 71, 73, 74, 87, 88, 101, 102, 114, 115, 128, 129, 141, 142, 155, 156, 171, 172, 173, 174, 182, 184, 185, 193, 196, 198, 199, 207, 209, 212, 213, 217, 220, 221, 223, 225, 227, 229, 233, 237, 240, 242, 246, 249, 252, 253, 283, 285, 286, 295, 296, 297, 310, 314], "sourc": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 316, 317], "base": [9, 27, 28, 42, 43, 46, 59, 71, 73, 87, 101, 114, 128, 141, 155, 171, 172, 173, 182, 184, 193, 195, 196, 198, 207, 209, 213, 217, 220, 221, 223, 225, 227, 229, 233, 237, 240, 242, 246, 249, 252, 269, 270, 283, 285, 295, 296, 315, 320, 323], "repres": [9, 46, 73, 87, 101, 128, 141, 155, 209, 213, 217, 252, 283, 317], "timber": [9, 209, 217, 252, 307, 313, 317, 320, 323], "beam": [9, 11, 13, 42, 43, 44, 45, 46, 48, 51, 54, 59, 61, 63, 66, 73, 75, 77, 82, 87, 89, 91, 96, 101, 103, 105, 109, 114, 116, 118, 123, 128, 130, 132, 136, 141, 143, 145, 150, 155, 157, 159, 164, 169, 170, 171, 172, 173, 182, 183, 184, 193, 194, 195, 197, 198, 207, 208, 213, 217, 229, 231, 232, 233, 239, 240, 242, 245, 246, 251, 306, 309, 310, 313, 315, 316, 319, 320, 321, 322, 323], "joint": [9, 13, 15, 26, 42, 43, 46, 48, 51, 71, 73, 75, 77, 87, 89, 91, 101, 103, 105, 114, 116, 118, 128, 130, 132, 141, 143, 145, 155, 157, 159, 209, 212, 213, 214, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 237, 242, 246, 249, 254, 267, 308, 310, 313, 314, 315, 317, 321, 323], "etc": [9, 209, 210, 252, 308, 310, 317], "attribut": [9, 12, 16, 46, 59, 71, 73, 87, 101, 114, 128, 141, 155, 172, 195, 209, 213, 220, 229, 232, 233, 246, 252, 295, 296, 310, 313, 314, 317], "list": [9, 13, 15, 44, 46, 51, 59, 63, 73, 77, 87, 91, 101, 105, 114, 118, 128, 132, 141, 145, 155, 159, 169, 170, 209, 220, 231, 233, 239, 251, 252, 256, 260, 268, 296, 306, 314, 320, 323], "A": [9, 21, 44, 46, 51, 63, 73, 77, 87, 91, 101, 105, 114, 118, 128, 132, 141, 145, 155, 159, 170, 171, 172, 198, 209, 222, 224, 226, 228, 232, 252, 262, 263, 307, 312, 317], "assign": [9, 14, 21, 229, 237, 249, 320, 322], "thi": [9, 10, 11, 17, 18, 21, 23, 24, 26, 28, 30, 37, 38, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 73, 74, 75, 76, 77, 78, 79, 86, 87, 88, 89, 90, 91, 92, 93, 100, 101, 102, 103, 104, 105, 106, 107, 113, 114, 115, 116, 117, 118, 119, 120, 127, 128, 129, 130, 131, 132, 133, 134, 140, 141, 142, 143, 144, 145, 146, 147, 154, 155, 156, 157, 158, 159, 160, 161, 168, 169, 170, 174, 175, 176, 177, 181, 185, 186, 187, 188, 192, 199, 200, 201, 202, 206, 213, 215, 216, 219, 220, 222, 224, 226, 228, 229, 231, 232, 237, 239, 240, 242, 245, 246, 249, 251, 252, 253, 254, 255, 259, 261, 264, 265, 267, 270, 272, 278, 279, 281, 282, 286, 288, 289, 290, 294, 296, 297, 298, 299, 300, 305, 306, 308, 312, 314, 316, 317, 321, 323], "part_kei": 9, "int": [9, 11, 12, 13, 14, 16, 22, 72, 213, 254, 267, 284, 296], "kei": [9, 11, 14, 22, 66, 87, 114, 141, 155, 222, 224, 226, 228, 254, 267, 316], "includ": [9, 266, 312, 314], "beam_kei": 9, "joint_kei": [9, 254, 267], "topologi": [9, 31, 43, 45, 46, 51, 63, 71, 72, 73, 77, 87, 91, 101, 105, 118, 128, 132, 141, 145, 155, 159, 237, 249], "dict": [9, 12, 14, 16, 46, 59, 172, 209, 213, 216, 220, 222, 224, 226, 228, 246, 249, 314], "jointtopologi": [9, 45, 249, 310], "i": [9, 14, 15, 16, 21, 23, 24, 41, 44, 45, 46, 49, 51, 52, 53, 58, 59, 63, 64, 65, 66, 70, 73, 75, 77, 78, 79, 86, 87, 91, 92, 93, 100, 101, 103, 105, 106, 107, 113, 114, 118, 119, 120, 127, 128, 130, 132, 133, 134, 140, 141, 145, 146, 147, 154, 155, 159, 160, 161, 168, 169, 170, 176, 177, 181, 184, 187, 188, 192, 194, 201, 202, 206, 209, 213, 215, 216, 219, 237, 249, 252, 254, 255, 260, 261, 264, 265, 282, 285, 289, 290, 294, 295, 299, 300, 305, 307, 310, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322], "detected_topo": 9, "beam_a_kei": 9, "beam_b_kei": 9, "see": [9, 66, 313, 317, 318, 322], "method": [9, 10, 43, 45, 46, 47, 49, 51, 59, 60, 63, 66, 71, 73, 74, 75, 77, 87, 88, 91, 101, 102, 103, 105, 114, 115, 118, 128, 129, 130, 132, 141, 142, 145, 155, 156, 159, 173, 174, 182, 184, 185, 193, 196, 198, 199, 207, 209, 213, 215, 217, 219, 221, 223, 225, 227, 229, 233, 237, 240, 242, 246, 249, 252, 253, 283, 285, 286, 296, 297, 310, 314], "inherit": [9, 46, 59, 73, 87, 101, 114, 128, 141, 155, 173, 184, 198, 249, 252, 285, 296, 310, 314], "convert": [10, 33, 34, 47, 56, 57, 60, 68, 69, 74, 84, 85, 88, 98, 99, 102, 111, 112, 115, 125, 126, 129, 138, 139, 142, 152, 153, 156, 166, 167, 174, 179, 180, 185, 190, 191, 199, 204, 205, 253, 274, 275, 286, 292, 293, 297, 302, 303], "instanc": [10, 13, 23, 24, 46, 47, 51, 52, 53, 60, 63, 64, 65, 73, 74, 77, 78, 79, 87, 88, 91, 92, 93, 101, 102, 105, 106, 107, 114, 115, 118, 119, 120, 128, 129, 132, 133, 134, 141, 142, 145, 146, 147, 155, 156, 159, 160, 161, 174, 176, 177, 185, 187, 188, 199, 201, 202, 220, 231, 239, 251, 253, 264, 265, 286, 289, 290, 297, 299, 300, 308, 314], "string": [10, 24, 34, 46, 47, 53, 57, 60, 65, 69, 72, 73, 74, 79, 85, 87, 88, 93, 99, 101, 102, 107, 112, 114, 115, 120, 126, 128, 129, 134, 139, 141, 142, 147, 153, 155, 156, 161, 167, 174, 177, 180, 185, 188, 191, 199, 202, 205, 209, 210, 253, 265, 275, 284, 286, 290, 293, 297, 300, 303, 316, 317], "exist": [10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 253, 286, 297, 314], "net": [10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 253, 286, 297], "compat": [10, 46, 47, 60, 73, 74, 87, 88, 101, 102, 115, 128, 129, 141, 142, 155, 156, 170, 174, 185, 199, 253, 286, 297], "when": [10, 21, 44, 47, 60, 74, 75, 88, 102, 103, 115, 129, 130, 142, 156, 169, 174, 185, 195, 199, 253, 254, 286, 297, 316, 320], "ironpython": [10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 253, 286, 297], "implicit": [10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 253, 286, 297], "convers": [10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 253, 286, 297], "usual": [10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 252, 253, 286, 297], "take": [10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 253, 286, 297, 314, 323], "place": [10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 253, 286, 297], "cpython": [10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 253, 286, 297], "kick": [10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 253, 286, 297], "its": [10, 16, 21, 22, 33, 34, 47, 56, 57, 60, 68, 69, 74, 84, 85, 88, 98, 99, 102, 111, 112, 115, 125, 126, 129, 138, 139, 142, 152, 153, 156, 166, 167, 169, 174, 179, 180, 185, 190, 191, 199, 204, 205, 212, 224, 228, 253, 262, 274, 275, 286, 292, 293, 297, 302, 303, 311, 316, 317, 320], "default": [10, 14, 18, 27, 28, 29, 30, 33, 34, 47, 50, 56, 57, 60, 62, 68, 69, 74, 76, 84, 85, 87, 88, 90, 98, 99, 102, 104, 111, 112, 114, 115, 117, 125, 126, 129, 131, 138, 139, 141, 142, 144, 152, 153, 155, 156, 158, 166, 167, 174, 175, 179, 180, 185, 186, 190, 191, 199, 200, 204, 205, 217, 253, 259, 262, 263, 269, 270, 271, 272, 274, 275, 286, 288, 292, 293, 297, 298, 302, 303, 310, 315, 317, 320, 322], "print": [10, 33, 34, 47, 56, 57, 60, 68, 69, 74, 84, 85, 88, 98, 99, 102, 111, 112, 115, 125, 126, 129, 138, 139, 142, 152, 153, 156, 166, 167, 174, 179, 180, 185, 190, 191, 199, 204, 205, 253, 274, 275, 286, 292, 293, 297, 302, 303], "self": [10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 220, 253, 286, 297, 314], "gettyp": [10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 253, 286, 297], "fullnam": [10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 253, 286, 297], "similar": [10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 253, 286, 297, 320], "overrid": [10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 253, 286, 297, 323], "object": [10, 13, 17, 18, 23, 24, 26, 33, 34, 41, 43, 44, 47, 50, 51, 52, 53, 56, 57, 58, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 74, 76, 77, 78, 79, 84, 85, 86, 88, 90, 91, 92, 93, 98, 99, 100, 102, 104, 105, 106, 107, 111, 112, 113, 115, 117, 118, 119, 120, 125, 126, 127, 129, 131, 132, 133, 134, 138, 139, 140, 142, 144, 145, 146, 147, 152, 153, 154, 156, 158, 159, 160, 161, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 185, 186, 187, 188, 190, 191, 192, 196, 199, 200, 201, 202, 204, 205, 206, 209, 213, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 240, 242, 246, 253, 259, 264, 265, 266, 274, 275, 282, 283, 286, 288, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 302, 303, 305, 310, 315, 316, 317, 321, 322], "fix": [10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 253, 286, 297], "make": [10, 18, 47, 50, 60, 62, 74, 76, 88, 90, 102, 104, 115, 117, 129, 131, 142, 144, 156, 158, 174, 175, 185, 186, 199, 200, 253, 259, 286, 288, 297, 298], "grasshopp": [10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 253, 286, 297, 308, 310, 311, 317], "displai": [10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 253, 286, 297, 316, 321], "proper": [10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 253, 286, 297], "represent": [10, 33, 34, 46, 47, 56, 57, 60, 68, 69, 72, 73, 74, 84, 85, 87, 88, 98, 99, 101, 102, 111, 112, 114, 115, 125, 126, 128, 129, 138, 139, 141, 142, 152, 153, 155, 156, 166, 167, 174, 179, 180, 185, 190, 191, 199, 204, 205, 253, 274, 275, 284, 286, 292, 293, 297, 302, 303, 314], "ar": [10, 12, 21, 44, 45, 47, 49, 51, 60, 63, 66, 74, 77, 88, 91, 102, 105, 115, 118, 129, 132, 142, 145, 156, 159, 170, 174, 185, 199, 220, 232, 245, 253, 286, 296, 297, 308, 314, 315, 316, 319, 320, 321, 322, 323], "panel": [10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 253, 286, 297], "other": [10, 13, 47, 60, 74, 87, 88, 102, 114, 115, 129, 141, 142, 155, 156, 169, 174, 185, 199, 213, 244, 248, 253, 286, 297, 307, 312, 320, 323], "output": [10, 45, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 253, 286, 297, 315], "add": [11, 12, 13, 14, 19, 20, 48, 61, 75, 89, 103, 116, 130, 143, 157, 254, 255, 256, 313, 314, 315, 322], "paramet": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 50, 51, 52, 53, 55, 56, 57, 58, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 76, 77, 78, 79, 83, 84, 85, 86, 87, 90, 91, 92, 93, 97, 98, 99, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 117, 118, 119, 120, 124, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 139, 140, 141, 144, 145, 146, 147, 151, 152, 153, 154, 155, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 198, 200, 201, 202, 203, 204, 205, 206, 207, 209, 212, 213, 215, 216, 217, 219, 220, 222, 224, 226, 228, 231, 232, 239, 246, 249, 251, 252, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 305, 306, 314, 315, 316, 317, 322], "return": [11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 50, 51, 52, 53, 55, 57, 58, 59, 62, 63, 64, 65, 67, 69, 70, 72, 76, 77, 78, 79, 83, 85, 86, 90, 91, 92, 93, 97, 99, 100, 104, 105, 106, 107, 110, 112, 113, 117, 118, 119, 120, 124, 126, 127, 131, 132, 133, 134, 137, 139, 140, 144, 145, 146, 147, 151, 153, 154, 158, 159, 160, 161, 165, 167, 168, 169, 170, 175, 176, 177, 178, 180, 181, 183, 186, 187, 188, 189, 191, 192, 194, 197, 200, 201, 202, 203, 205, 206, 208, 209, 210, 212, 216, 222, 224, 226, 228, 231, 232, 239, 245, 251, 255, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 288, 289, 290, 291, 293, 294, 298, 299, 300, 301, 303, 305, 306, 315, 321], "graph": [11, 13, 14], "identifi": [11, 12, 13, 14, 16, 21, 22, 170], "ad": [11, 51, 63, 77, 91, 105, 118, 132, 145, 159, 255, 256, 306], "b": 12, "kwarg": [12, 14, 51, 63, 77, 91, 105, 118, 132, 145, 159, 246, 249], "between": [12, 16, 19, 87, 101, 114, 141, 155, 316, 320, 323], "two": [12, 19, 42, 45, 46, 51, 59, 63, 73, 77, 87, 91, 101, 105, 118, 132, 145, 159, 169, 232, 260, 317, 320, 323], "compa": [12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 32, 39, 40, 50, 52, 53, 55, 62, 64, 65, 67, 76, 78, 79, 83, 90, 92, 93, 97, 104, 106, 107, 110, 117, 119, 120, 124, 131, 133, 134, 137, 144, 146, 147, 151, 158, 160, 161, 165, 173, 175, 176, 177, 178, 182, 183, 184, 186, 187, 188, 189, 193, 194, 197, 198, 200, 201, 202, 203, 207, 208, 252, 255, 259, 264, 265, 266, 269, 270, 273, 280, 281, 288, 289, 290, 291, 296, 298, 299, 300, 301, 307, 313, 320], "datastructur": [12, 14, 19, 20, 21, 22, 25, 27, 29, 32, 37, 38, 39, 40, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 198, 203, 269, 271, 273, 278, 279, 280, 281, 291, 301], "from": [12, 20, 23, 24, 26, 32, 45, 52, 53, 55, 64, 65, 67, 78, 79, 83, 92, 93, 97, 106, 107, 110, 119, 120, 124, 133, 134, 137, 146, 147, 151, 160, 161, 165, 176, 177, 178, 187, 188, 189, 201, 202, 203, 220, 262, 263, 264, 265, 267, 268, 273, 289, 290, 291, 299, 300, 301, 308, 310, 312, 313, 314, 316, 317, 319, 320], "str": [12, 14, 16, 21, 22, 23, 24, 32, 33, 34, 46, 52, 53, 55, 56, 57, 59, 64, 65, 67, 68, 69, 72, 73, 78, 79, 83, 84, 85, 87, 92, 93, 97, 98, 99, 101, 106, 107, 110, 111, 112, 114, 119, 120, 124, 125, 126, 128, 133, 134, 137, 138, 139, 141, 146, 147, 151, 152, 153, 155, 160, 161, 165, 166, 167, 176, 177, 178, 179, 180, 187, 188, 189, 190, 191, 195, 201, 202, 203, 204, 205, 209, 213, 217, 220, 260, 264, 265, 273, 274, 275, 284, 289, 290, 291, 292, 293, 296, 299, 300, 301, 302, 303], "ani": [12, 14, 16, 41, 58, 70, 86, 100, 113, 127, 140, 154, 168, 181, 192, 206, 282, 294, 305, 308, 312, 319, 321], "option": [12, 14, 16, 18, 22, 27, 28, 29, 30, 32, 33, 34, 44, 45, 50, 55, 56, 57, 62, 67, 68, 69, 76, 83, 84, 85, 90, 97, 98, 99, 104, 110, 111, 112, 117, 124, 125, 126, 131, 137, 138, 139, 144, 151, 152, 153, 158, 165, 166, 167, 170, 171, 175, 178, 179, 180, 186, 189, 190, 191, 200, 203, 204, 205, 217, 246, 259, 269, 270, 271, 272, 273, 274, 275, 288, 291, 292, 293, 298, 301, 302, 303, 317, 320, 323], "compil": [12, 311], "name": [12, 14, 217, 220, 314, 316, 320, 321], "argument": [12, 246, 249], "tupl": [12, 16, 45, 101, 169, 232, 252, 261], "node": 12, "rais": [12, 23, 24, 48, 51, 52, 53, 61, 63, 64, 65, 77, 78, 79, 89, 91, 92, 93, 105, 106, 107, 116, 118, 119, 120, 132, 133, 134, 143, 145, 146, 147, 157, 159, 160, 161, 176, 177, 183, 187, 188, 194, 195, 201, 202, 208, 264, 265, 289, 290, 299, 300], "assemblyerror": 12, "If": [12, 16, 23, 24, 32, 33, 34, 45, 52, 53, 55, 56, 57, 64, 65, 67, 68, 69, 78, 79, 83, 84, 85, 87, 92, 93, 97, 98, 99, 106, 107, 110, 111, 112, 114, 119, 120, 124, 125, 126, 133, 134, 137, 138, 139, 141, 146, 147, 151, 152, 153, 155, 160, 161, 165, 166, 167, 176, 177, 178, 179, 180, 183, 187, 188, 189, 190, 191, 194, 201, 202, 203, 204, 205, 208, 255, 264, 265, 268, 273, 274, 275, 289, 290, 291, 292, 293, 299, 300, 301, 302, 303, 306, 307, 317, 320], "an": [13, 14, 18, 23, 24, 33, 34, 41, 42, 44, 46, 50, 51, 52, 53, 56, 57, 58, 62, 63, 64, 65, 68, 69, 70, 73, 76, 77, 78, 79, 84, 85, 86, 87, 90, 91, 92, 93, 98, 99, 100, 101, 104, 105, 106, 107, 111, 112, 113, 114, 117, 118, 119, 120, 125, 126, 127, 128, 131, 132, 133, 134, 138, 139, 140, 141, 144, 145, 146, 147, 152, 153, 154, 155, 158, 159, 160, 161, 166, 167, 168, 171, 175, 176, 177, 179, 180, 181, 186, 187, 188, 190, 191, 192, 200, 201, 202, 204, 205, 206, 215, 219, 252, 259, 264, 265, 274, 275, 282, 283, 288, 289, 290, 292, 293, 294, 298, 299, 300, 302, 303, 305, 307, 308, 310, 311, 312, 313, 315, 316, 317, 320], "dowel": 13, "steel": 13, "plate": 13, "involv": [13, 226], "current": [13, 14, 18, 50, 62, 76, 90, 104, 117, 131, 144, 158, 175, 186, 200, 259, 288, 298, 310], "none": [14, 18, 19, 20, 21, 22, 27, 28, 29, 30, 35, 36, 39, 44, 45, 50, 62, 76, 90, 104, 117, 131, 144, 158, 170, 175, 186, 200, 212, 217, 218, 222, 224, 226, 228, 254, 255, 258, 259, 262, 263, 268, 269, 270, 271, 272, 276, 277, 280, 288, 298, 306, 317], "note": [14, 170, 307, 321], "uniqu": [14, 21], "onli": [14, 66, 255, 316], "nest": 14, "mai": [14, 315, 316], "have": [14, 51, 63, 77, 91, 105, 118, 132, 145, 159, 220, 317], "same": [14, 15, 45, 295, 296, 320, 323], "valu": [14, 72, 87, 114, 141, 155, 170, 252, 284, 316], "one": [14, 87, 114, 141, 155, 169, 232, 256, 295, 296, 314, 317, 320, 323], "which": [14, 42, 44, 45, 46, 49, 51, 63, 73, 77, 87, 91, 101, 105, 118, 128, 132, 141, 145, 155, 159, 170, 184, 213, 220, 240, 249, 254, 257, 260, 261, 267, 283, 285, 296, 314, 315, 317, 320], "case": 14, "automat": [14, 21, 75, 103, 130, 320, 322], "integ": 14, "addit": [14, 16, 44, 313, 316, 317, 319], "collect": [14, 285, 306], "check": [15, 49, 306, 310, 316], "alreadi": 15, "defin": [15, 48, 61, 89, 116, 143, 157, 213, 231, 239, 245, 251, 262, 316, 317, 320, 322, 323], "set": [15, 44, 170, 306, 315, 316, 317, 321], "bool": [15, 16, 17, 32, 33, 34, 44, 55, 56, 57, 67, 68, 69, 83, 84, 85, 87, 97, 98, 99, 110, 111, 112, 114, 124, 125, 126, 137, 138, 139, 141, 151, 152, 153, 155, 165, 166, 167, 178, 179, 180, 189, 190, 191, 203, 204, 205, 213, 231, 239, 251, 255, 266, 273, 274, 275, 291, 292, 293, 296, 301, 302, 303], "data": [16, 17, 18, 23, 24, 32, 33, 34, 35, 36, 37, 38, 41, 50, 52, 53, 55, 56, 57, 58, 59, 62, 64, 65, 67, 68, 69, 70, 76, 78, 79, 83, 84, 85, 86, 90, 92, 93, 97, 98, 99, 100, 104, 106, 107, 110, 111, 112, 113, 117, 119, 120, 124, 125, 126, 127, 131, 133, 134, 137, 138, 139, 140, 144, 146, 147, 151, 152, 153, 154, 158, 160, 161, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 186, 187, 188, 189, 190, 191, 192, 200, 201, 202, 203, 204, 205, 206, 209, 259, 264, 265, 273, 274, 275, 276, 277, 278, 279, 282, 285, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 305], "fals": [16, 17, 32, 33, 34, 44, 55, 56, 57, 67, 68, 69, 83, 84, 85, 97, 98, 99, 110, 111, 112, 124, 125, 126, 137, 138, 139, 151, 152, 153, 165, 166, 167, 178, 179, 180, 189, 190, 191, 203, 204, 205, 231, 239, 251, 255, 266, 273, 274, 275, 291, 292, 293, 301, 302, 303], "iter": 16, "over": 16, "true": [16, 17, 32, 33, 34, 44, 55, 56, 57, 67, 68, 69, 83, 84, 85, 87, 97, 98, 99, 110, 111, 112, 114, 124, 125, 126, 137, 138, 139, 141, 151, 152, 153, 155, 165, 166, 167, 178, 179, 180, 189, 190, 191, 203, 204, 205, 231, 239, 245, 251, 255, 261, 266, 273, 274, 275, 291, 292, 293, 301, 302, 303, 315, 317], "yield": [16, 25, 172], "next": 16, "u": 16, "v": 16, "connector": 16, "attr": [16, 220], "obj": [17, 32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 273, 291, 296, 301], "given": [17, 44, 45, 51, 63, 72, 77, 91, 105, 118, 132, 145, 159, 170, 232, 237, 249, 257, 260, 261, 263, 284, 316], "otherwis": [17, 45, 231, 239, 251, 255, 312, 317], "look": 17, "cl": [18, 50, 62, 76, 90, 104, 117, 131, 144, 158, 175, 186, 200, 246, 249, 259, 288, 298], "independ": [18, 50, 62, 76, 90, 104, 117, 131, 144, 158, 175, 186, 200, 259, 288, 298], "edg": 19, "delet": 19, "remov": [20, 26, 254, 267, 268, 316, 319], "guid": [21, 310, 313, 317], "global": 21, "creat": [21, 46, 49, 59, 73, 75, 87, 101, 103, 114, 128, 130, 141, 155, 212, 213, 221, 223, 225, 227, 262, 263, 308, 310, 311, 313, 314, 315, 316, 317, 320, 323], "can": [21, 22, 41, 58, 70, 86, 100, 113, 127, 140, 154, 168, 181, 192, 206, 220, 266, 282, 285, 294, 296, 305, 308, 313, 314, 317, 320], "t": [21, 22, 114, 128, 141, 155, 227, 237, 249], "found": [21, 22, 314], "find": [22, 44, 169, 170, 306, 320], "classmethod": [23, 24, 41, 44, 51, 52, 53, 58, 63, 64, 65, 70, 72, 77, 78, 79, 86, 91, 92, 93, 100, 105, 106, 107, 113, 118, 119, 120, 127, 132, 133, 134, 140, 145, 146, 147, 154, 159, 160, 161, 168, 176, 177, 181, 187, 188, 192, 201, 202, 206, 212, 214, 218, 222, 224, 226, 228, 262, 263, 264, 265, 282, 284, 289, 290, 294, 299, 300, 305], "filepath": [23, 33, 52, 56, 64, 68, 78, 84, 92, 98, 106, 111, 119, 125, 133, 138, 146, 152, 160, 166, 176, 179, 187, 190, 201, 204, 264, 274, 289, 292, 299, 302], "construct": [23, 24, 41, 52, 53, 58, 64, 65, 70, 78, 79, 86, 92, 93, 100, 106, 107, 113, 119, 120, 127, 133, 134, 140, 146, 147, 154, 160, 161, 168, 176, 177, 181, 187, 188, 192, 201, 202, 206, 264, 265, 282, 289, 290, 294, 299, 300, 305, 310], "json": [23, 24, 33, 34, 52, 53, 56, 57, 64, 65, 68, 69, 78, 79, 84, 85, 92, 93, 98, 99, 106, 107, 111, 112, 119, 120, 125, 126, 133, 134, 138, 139, 146, 147, 152, 153, 160, 161, 166, 167, 176, 177, 179, 180, 187, 188, 190, 191, 201, 202, 204, 205, 264, 265, 274, 275, 289, 290, 292, 293, 299, 300, 302, 303], "file": [23, 33, 52, 56, 64, 68, 78, 84, 92, 98, 106, 111, 119, 125, 133, 138, 146, 152, 160, 166, 176, 179, 187, 190, 201, 204, 209, 264, 274, 289, 292, 299, 302, 312, 314, 318], "path": [23, 33, 52, 56, 64, 68, 78, 84, 92, 98, 106, 111, 119, 125, 133, 138, 146, 152, 160, 166, 176, 179, 187, 190, 201, 204, 264, 274, 289, 292, 299, 302], "ha": [23, 24, 42, 52, 53, 64, 65, 78, 79, 92, 93, 106, 107, 119, 120, 133, 134, 146, 147, 160, 161, 170, 176, 177, 187, 188, 201, 202, 264, 265, 289, 290, 296, 299, 300, 317, 320, 321, 322], "correct": [23, 24, 52, 53, 64, 65, 78, 79, 92, 93, 106, 107, 119, 120, 133, 134, 146, 147, 160, 161, 176, 177, 187, 188, 201, 202, 264, 265, 289, 290, 299, 300], "schema": [23, 24, 41, 52, 53, 58, 64, 65, 70, 78, 79, 86, 92, 93, 100, 106, 107, 113, 119, 120, 127, 133, 134, 140, 146, 147, 154, 160, 161, 168, 176, 177, 181, 187, 188, 192, 201, 202, 206, 264, 265, 282, 289, 290, 294, 299, 300, 305], "typeerror": [23, 24, 52, 53, 64, 65, 78, 79, 92, 93, 106, 107, 119, 120, 133, 134, 146, 147, 160, 161, 176, 177, 187, 188, 201, 202, 264, 265, 289, 290, 299, 300], "individu": [25, 220], "angl": [27, 28, 101, 169, 213, 269, 270, 320], "axi": [27, 28, 170, 252, 262, 263, 269, 270, 317, 322], "point": [27, 28, 101, 252, 260, 263, 269, 270, 310, 322], "float": [27, 28, 29, 30, 44, 45, 87, 114, 141, 155, 169, 170, 184, 213, 252, 254, 261, 262, 263, 269, 270, 271, 272, 306], "radian": [27, 28, 269, 270], "geometri": [27, 28, 30, 39, 40, 171, 172, 173, 182, 183, 184, 193, 194, 195, 197, 198, 207, 208, 252, 266, 269, 270, 272, 280, 281, 296, 306, 310, 313, 315, 317, 319, 321, 322, 323], "vector": [27, 28, 39, 40, 257, 262, 263, 269, 270, 280, 281, 310, 317], "z": [27, 28, 29, 30, 32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 252, 262, 263, 269, 270, 271, 272, 273, 291, 301, 317, 319, 322], "origin": [27, 28, 216, 252, 269, 270, 317, 321, 322], "translat": [27, 28, 29, 30, 269, 270, 271, 272], "scale": [27, 28, 39, 40, 269, 270, 280, 281, 322], "transform": [27, 28, 29, 30, 36, 38, 39, 40, 266, 269, 270, 271, 272, 277, 279, 280, 281], "copi": [28, 30, 37, 38, 40, 266, 270, 272, 278, 279, 281, 312], "x": [29, 30, 114, 155, 237, 249, 252, 271, 272, 317, 320, 322], "y": [29, 30, 252, 271, 272, 317, 322], "factor": [29, 30, 271, 272], "direct": [29, 30, 101, 252, 261, 262, 263, 271, 272, 306, 317], "rotat": [29, 30, 39, 40, 271, 272, 280, 281, 317], "as_str": [32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 273, 291, 301], "comput": [32, 45, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 273, 291, 301], "hash": [32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 273, 291, 301], "comparison": [32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 273, 291, 301], "dure": [32, 55, 66, 67, 83, 97, 110, 124, 137, 151, 165, 171, 178, 189, 203, 233, 273, 291, 296, 301], "version": [32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 273, 291, 301, 311], "control": [32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 273, 291, 301], "algorithm": [32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 170, 178, 189, 203, 273, 291, 301], "digest": [32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 273, 291, 301], "hexadecim": [32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 273, 291, 301], "format": [32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 209, 273, 291, 301, 316], "rather": [32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 273, 291, 301], "than": [32, 51, 55, 63, 67, 77, 83, 91, 97, 105, 110, 118, 124, 132, 137, 145, 151, 159, 165, 178, 189, 203, 273, 291, 301, 320], "byte": [32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 273, 291, 301], "exampl": [32, 55, 66, 67, 83, 97, 110, 124, 137, 151, 165, 170, 178, 189, 203, 273, 291, 301, 310, 313, 316, 317, 320, 323], "import": [32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 273, 291, 301, 314, 323], "mesh": [32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 198, 203, 273, 291, 301, 309], "from_obj": [32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 273, 291, 301], "get": [32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 273, 291, 301, 311, 313], "face": [32, 46, 49, 55, 67, 83, 97, 110, 124, 137, 151, 165, 169, 178, 189, 203, 213, 252, 261, 273, 291, 301], "v1": [32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 273, 291, 301], "v2": [32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 273, 291, 301], "vertex_attribut": [32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 273, 291, 301], "vertex_sampl": [32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 273, 291, 301], "1": [32, 55, 67, 83, 87, 97, 110, 114, 124, 137, 141, 151, 155, 165, 178, 189, 203, 252, 273, 291, 301, 309, 314, 317], "0": [32, 55, 67, 83, 87, 97, 110, 114, 124, 137, 141, 151, 155, 165, 178, 189, 203, 252, 273, 291, 301, 309, 311, 317, 320], "v3": [32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 273, 291, 301], "pretti": [33, 34, 56, 57, 68, 69, 84, 85, 98, 99, 111, 112, 125, 126, 138, 139, 152, 153, 166, 167, 179, 180, 190, 191, 204, 205, 209, 210, 274, 275, 292, 293, 302, 303], "nativ": [33, 34, 56, 57, 68, 69, 84, 85, 98, 99, 111, 112, 125, 126, 138, 139, 152, 153, 166, 167, 179, 180, 190, 191, 204, 205, 274, 275, 292, 293, 302, 303], "save": [33, 34, 54, 56, 57, 68, 69, 82, 84, 85, 96, 98, 99, 109, 111, 112, 123, 125, 126, 136, 138, 139, 150, 152, 153, 164, 166, 167, 179, 180, 190, 191, 204, 205, 274, 275, 292, 293, 302, 303], "structur": [35, 36, 37, 38, 276, 277, 278, 279, 307, 310, 313, 315, 323], "valid": [41, 58, 70, 86, 100, 113, 127, 140, 154, 168, 181, 192, 206, 282, 294, 305], "against": [41, 58, 70, 86, 100, 113, 127, 140, 154, 168, 181, 192, 206, 282, 294, 305], "": [41, 46, 48, 58, 61, 70, 73, 86, 87, 89, 100, 101, 113, 114, 116, 127, 128, 140, 141, 143, 154, 155, 157, 168, 169, 181, 192, 206, 252, 257, 260, 262, 263, 266, 282, 294, 305, 316, 322], "raw": [41, 58, 70, 86, 100, 113, 127, 140, 154, 168, 181, 192, 206, 282, 294, 305], "__from_data__": [41, 58, 70, 86, 100, 113, 127, 140, 154, 168, 181, 192, 206, 282, 294, 305], "except": [42, 195], "indic": [42, 46, 173, 213, 262, 263, 316, 317], "error": [42, 171, 195, 233, 235, 236, 315, 316], "occur": [42, 171, 233], "while": 42, "try": 42, "join": [42, 46, 51, 59, 63, 73, 77, 87, 91, 101, 105, 114, 118, 128, 132, 141, 145, 155, 159, 169, 213, 233, 242, 246, 315, 320], "more": [42, 256, 310, 313, 314], "should": [42, 48, 59, 61, 66, 87, 89, 114, 116, 141, 143, 155, 157, 170, 220, 240, 254, 266, 314, 320], "calcul": [42, 48, 61, 89, 116, 143, 157], "featur": [42, 48, 61, 75, 87, 89, 103, 114, 116, 130, 141, 143, 155, 157, 171, 172, 173, 182, 183, 184, 193, 194, 195, 196, 197, 198, 207, 208, 233, 240, 252, 255, 256, 266, 268, 310, 313, 315, 321, 323], "appli": [42, 48, 61, 89, 116, 143, 157, 171, 172, 182, 193, 195, 207, 213, 220, 222, 224, 226, 228, 240, 249, 255, 314, 315, 320, 321, 323], "provid": [43, 231, 239, 251, 312, 313, 315, 317], "tool": [43, 310, 313, 317, 321, 322], "detect": 43, "intersect": [43, 44, 45, 183, 208, 320], "rtree": [44, 306], "max_dist": [44, 45], "pair": [44, 45, 170, 306, 316, 320, 323], "r": [44, 170, 311], "tree": [44, 170], "search": [44, 170], "neighbor": [44, 170, 306], "distanc": [44, 45, 320], "apart": 44, "non": 44, "touch": 44, "still": 44, "consid": [44, 45], "neightbor": [44, 306], "beam_a": [45, 46, 101], "beam_b": [45, 46, 101], "tol": 45, "1e": 45, "06": 45, "within": [45, 245, 296], "role": [45, 66, 232], "sensit": 45, "consist": 45, "specif": [45, 66, 220, 310, 314], "order": [45, 170, 216, 232, 295, 323], "e": [45, 66, 308, 316, 320, 321, 322], "g": [45, 66, 308, 316], "main": [45, 66, 73, 82, 87, 96, 109, 114, 123, 128, 130, 136, 141, 150, 155, 164, 320], "first": [45, 101, 232, 260, 320, 323], "cross": [45, 66, 73, 82, 87, 96, 109, 114, 123, 128, 130, 136, 141, 150, 155, 164, 252, 262, 263, 317, 320], "second": [45, 101, 232, 260, 320], "thei": 45, "were": [45, 316], "input": [45, 170, 220, 313, 314, 316, 317, 320], "gener": [45, 172, 211, 215, 219, 220, 295, 314, 323], "toler": [45, 320], "mathemat": 45, "maximum": 45, "desigen": 45, "unit": [45, 170, 261], "french": [46, 49, 213, 221], "ridg": [46, 49, 213, 221], "lap": [46, 49, 87, 114, 141, 155, 213], "end": [46, 59, 73, 87, 101, 128, 141, 155, 169, 213, 252, 254, 260, 261, 263, 320], "l": [46, 73, 87, 101, 114, 223, 225, 226, 237, 249], "pleas": [46, 73, 87, 101, 114, 128, 141, 155, 307], "lbuttjoint": [46, 310], "properli": [46, 73, 87, 101, 114, 128, 141, 155], "associ": [46, 66, 73, 87, 101, 114, 128, 141, 155, 213, 224, 228, 296, 312], "timberassembli": [46, 73, 101, 128, 295, 309, 310], "top": [46, 54, 213, 313], "bottom": [46, 54, 213], "joint_typ": [46, 73, 87, 101, 114, 128, 141, 155, 212, 249], "reference_face_indic": 46, "dictionari": [46, 209, 222, 224, 226, 228], "refer": [46, 49, 54, 66, 82, 96, 109, 123, 136, 150, 164, 213, 310, 313, 314, 316, 320], "both": [46, 75, 103], "affect": [48, 61, 89, 116, 143, 157], "beamjoinningerror": [48, 61, 89, 116, 143, 157, 310], "whenev": [48, 61, 89, 116, 143, 157], "wa": [48, 61, 89, 116, 143, 157], "abl": [48, 61, 89, 116, 143, 157], "whether": [49, 296, 312, 321], "align": [49, 170, 252, 257, 313, 322], "necessari": [49, 311, 314], "determin": [49, 232, 320], "machin": [49, 314], "new": [51, 63, 77, 91, 105, 118, 132, 145, 159, 311, 314, 317], "expect": [51, 63, 77, 91, 105, 118, 132, 145, 159], "been": [51, 63, 77, 91, 105, 118, 132, 145, 159, 296], "befor": [51, 63, 77, 91, 105, 118, 132, 145, 159, 321], "call": [51, 63, 66, 75, 77, 91, 103, 105, 118, 130, 132, 145, 159, 220, 255, 314, 317, 320], "code": [51, 63, 77, 91, 105, 118, 132, 145, 159, 308, 310], "doe": [51, 63, 77, 91, 105, 118, 132, 145, 159, 183, 208, 314, 317, 320], "verifi": [51, 63, 77, 91, 105, 118, 132, 145, 159, 261], "adjac": [51, 63, 77, 91, 105, 118, 132, 145, 159], "lie": [51, 63, 77, 91, 105, 118, 132, 145, 159], "allow": [51, 63, 77, 87, 91, 105, 114, 118, 132, 141, 145, 155, 159, 232, 233, 240, 242, 246, 261, 296], "them": [51, 63, 77, 91, 101, 105, 118, 132, 145, 159, 220, 308, 314, 316, 320], "respons": [51, 63, 77, 91, 105, 118, 132, 145, 159], "valueerror": [51, 63, 77, 91, 105, 118, 132, 145, 159], "less": [51, 63, 77, 91, 105, 118, 132, 145, 159, 252], "assemebli": [51, 63, 77, 91, 105, 118, 132, 145, 159], "jo": [51, 63, 77, 91, 105, 118, 132, 145, 159], "belong": [51, 63, 77, 91, 105, 118, 132, 145, 159], "whould": [51, 63, 77, 91, 105, 118, 132, 145, 159], "togeth": [51, 63, 77, 91, 105, 118, 132, 145, 159, 317], "assemli": [54, 82, 96, 109, 123, 150, 164], "after": [54, 82, 96, 109, 123, 136, 150, 164, 171, 172, 183, 194, 197, 208], "de": [54, 66, 82, 96, 109, 123, 136, 150, 164], "serial": [54, 66, 82, 96, 109, 123, 136, 150, 164], "restor": [54, 66], "instanti": [59, 114, 220, 314], "directli": [59, 114], "respect": [59, 66, 320], "implement": [59, 66, 306, 310], "instead": [59, 317], "map": [59, 169, 172, 313, 322], "ehich": 59, "each": [59, 101, 220, 261, 285, 314, 316, 320], "To": [66, 311, 313, 314, 315, 320, 323], "avoid": [66, 320], "circular": 66, "store": [66, 316, 317], "sinc": 66, "concret": 66, "tbuttjoint": [66, 309, 310], "enumer": 71, "possibl": [71, 316], "topo_unknown": [71, 72], "topo_i": 71, "topo_l": [71, 72], "topo_t": [71, 72], "topo_x": [71, 72], "For": [72, 170, 284, 310, 322, 323], "log": [72, 284, 315], "One": [72, 284, 296], "butt": [73, 128, 223, 227], "trim": [73, 75, 87, 101, 103, 128, 130, 141, 155, 315, 319, 320], "main_beam": [73, 87, 114, 128, 141, 155, 309], "cross_beam": [73, 87, 114, 128, 141, 155, 309], "cutting_plane_main": [73, 128], "frame": [73, 101, 128, 169, 173, 213, 217, 218, 252, 296, 309, 310, 313, 315, 323], "cutting_plane_cross": [73, 128], "requir": [75, 103, 216, 220, 254, 267, 311], "extens": [75, 103, 254, 261, 267], "resotr": [82, 96, 109, 123, 136, 150, 164], "lapjoint": [87, 141, 155, 310], "flip_lap_sid": [87, 114, 141, 155], "flip": [87, 114, 141, 155], "side": [87, 114, 141, 155, 169, 252, 319, 320], "cut_plane_bia": [87, 114, 141, 155], "shift": [87, 114, 141, 155], "deeper": [87, 114, 141, 155], "without": [87, 114, 141, 155, 312], "complet": [87, 114, 141, 155], "cut": [87, 114, 141, 155, 169, 173, 183, 217, 313, 315, 319, 320], "through": [87, 114, 141, 155, 261, 307], "either": [87, 114, 141, 155, 260], "5": [87, 114, 141, 155, 252], "main_beam_kei": [87, 114, 141, 155], "cross_beam_kei": [87, 114, 141, 155], "miter": [101, 225, 226], "plane": [101, 130, 169, 173, 183, 184, 217, 261, 317, 319, 322], "bisector": [101, 320], "centerlin": [101, 169, 252, 260, 262, 263, 313, 316, 317, 320, 322], "cutting_plan": [101, 173], "normal": [101, 169, 252], "opposit": 101, "abstract": [114, 315], "common": 114, "do": [114, 312, 314], "sub": 114, "along": [128, 141, 155, 252, 320], "length": [128, 141, 155, 184, 252, 262, 320], "anoth": [128, 141, 155], "beam1": 169, "beam2": 169, "attach": [169, 229], "inflate_bi": [170, 306], "bound": [170, 252, 306], "box": [170, 252, 296, 306, 313, 321], "aabb": [170, 252], "enlarg": 170, "amount": [170, 254, 261, 306], "element": [170, 220, 260, 295, 296], "design": [170, 307, 310, 313, 316, 317], "regard": 170, "inflat": [170, 306], "pluggabl": 170, "In": [170, 310, 311, 320], "plugin": [170, 310, 317], "avail": [170, 266], "result": [171, 172, 183, 194, 197, 208, 260, 295, 320], "process": [171, 172, 183, 194, 197, 208, 211, 213, 215, 216, 217, 219, 220, 222, 224, 226, 228, 310, 313, 314, 323], "debug_info": 171, "featureapplicationerror": [171, 183, 194, 208, 233, 310], "debug": [171, 233], "inform": [171, 233, 310, 322], "feature_map": 172, "featureappl": [172, 182, 193, 207, 310], "applic": [172, 196, 233], "beamgeometri": [172, 310], "made": [173, 184, 315], "cutfeatur": [182, 310], "beam_geometri": [182, 193, 195, 207], "brep": [182, 183, 193, 194, 207, 208, 310, 315, 319, 321, 322], "parametr": [184, 252, 310], "drill": [184, 194, 213], "hole": [184, 213, 313], "diamet": [184, 213], "depth": [184, 309], "drillfeatur": [193, 310], "volum": [194, 198, 208], "cannot": [195, 317], "feature_geometri": 195, "could": [195, 283], "modifi": [195, 312], "messag": 195, "mill": 198, "out": [198, 312], "polyhedron": 198, "millvolum": [207, 310], "histori": 209, "btlx_string": 209, "xml": [209, 210], "visual": [209, 210, 233, 285, 296, 308, 315], "gh": [209, 210], "termin": [209, 210], "btlxpart": [209, 213, 217, 220, 222, 224, 226, 228, 314], "joint_factori": [212, 220, 314], "regist": 212, "correspond": [212, 252, 260, 316, 317, 322], "factori": [212, 220, 221, 223, 225, 227, 314], "jointfactori": 212, "is_top": [213, 214], "flag": 213, "process_typ": [213, 220, 314], "frenchridgelap": 213, "other_beam": 213, "orient": [213, 262, 263, 322], "drill_hole_diamet": 213, "ref_face_index": 213, "index": [213, 310, 321], "ref_fac": 213, "surfac": [213, 314], "header_attribut": [213, 220, 314], "header": 213, "process_paramet": [213, 220], "geometr": [213, 216, 220, 310, 314, 315, 319], "btlx": [213, 220, 310, 313], "degre": 213, "intern": [215, 219], "properti": 216, "all": [216, 261, 266, 268, 306, 312, 316], "It": [216, 310, 313, 315, 316, 317, 322], "ordereddict": 216, "maintain": [216, 310], "jack": 217, "joint_nam": [217, 218], "append": [220, 314], "btlx_process": [220, 314], "eg": 220, "btlxjackcut": [220, 310], "match": [220, 314], "describ": [220, 314], "deriv": [220, 314], "relat": [220, 233, 314], "some": [220, 313, 322], "combin": 220, "multipl": [220, 308, 314], "cover": 220, "register_joint": [220, 314], "so": [220, 312, 314], "typic": [220, 296, 314], "need": [220, 257, 314, 316, 323], "param": 220, "et_el": 220, "et": 220, "jointrul": [229, 237, 249], "categori": [229, 232, 316, 317, 320], "rule": [229, 231, 237, 239, 249, 251, 317, 320], "sort": 232, "accord": [232, 316, 320], "catergory_a": 232, "category_b": 232, "inspect": [233, 321], "beamjoiningerror": 233, "feature_error": 233, "joint_error": 233, "k": [237, 249], "link": 240, "delai": [240, 242, 246], "actual": [240, 242, 246, 260], "downstream": [240, 242, 246], "compon": [240, 242, 246, 311, 315, 316, 317, 321], "shall": [242, 312], "pass": [246, 249, 261], "keyword": [246, 249], "topology_typ": 249, "constant": 249, "stud": [252, 317], "slat": 252, "rectangular": [252, 317], "section": [252, 262, 263, 308, 313, 317], "local": [252, 317, 321], "coordin": [252, 317, 321], "system": [252, 317, 321], "locat": [252, 296, 317], "start": [252, 254, 260, 261, 263, 313, 317], "major": [252, 317], "also": [252, 255, 307, 310, 313, 316, 317], "fibr": [252, 313], "solid": [252, 315], "wood": 252, "width": [252, 262, 263, 309, 316, 317], "smaller": [252, 317], "dimens": [252, 317], "height": [252, 262, 263, 309, 316, 317], "larger": [252, 317], "shape": [252, 317], "blank": [252, 254, 267], "materi": [252, 322], "stock": 252, "produc": 252, "6": 252, "equal": 252, "posit": [252, 319, 320], "2": [252, 309, 314], "3": [252, 311, 314], "4": [252, 309, 314], "line": [252, 262, 310, 316, 317], "centerline_start": 252, "centerline_end": 252, "xmin": 252, "ymin": 252, "zmin": 252, "xmax": 252, "ymax": 252, "zmax": 252, "long_edg": 252, "long": [252, 261], "midpoint": 252, "middl": 252, "extend": [254, 261], "well": 254, "user": [255, 316], "must": 255, "apply_featur": 255, "z_axi": 257, "definit": [257, 314, 315], "todo": [257, 261], "Not": 257, "anywher": 257, "features_to_clear": 258, "endpoint": [260, 263], "closer": 260, "interest": 260, "depend": [260, 262, 263, 311, 314, 321], "pln": 261, "metric": 261, "minimum": 261, "z_vector": [262, 263], "worldz": [262, 263], "worldx": [262, 263], "point_start": 263, "point_end": 263, "end_point": 263, "with_featur": 266, "drawn": [266, 317], "scene": 266, "enum": 283, "execut": [283, 296, 308], "instruct": [283, 285, 296], "human": [284, 296], "robot": [284, 296], "build": [285, 295, 296, 311, 323], "step": [285, 287, 295, 310, 314], "simpl": [295, 310, 313], "sequenc": [295, 310], "per": 295, "buildingplan": [295, 310], "assembl": 296, "singl": [296, 314], "actor": [296, 310], "element_id": 296, "cad": [296, 308], "id": [296, 308], "elements_held": 296, "held": 296, "support": [296, 307, 308], "is_built": 296, "is_plan": 296, "increment": 296, "cylind": 296, "prioriti": 296, "parallel": [296, 317], "prior": 306, "research": [307, 310, 312], "project": [307, 310], "develop": [307, 310], "aleksandra": 307, "apolinarska": 307, "chen": 307, "kasir": 307, "gonzalo": 307, "casa": 307, "gramazio": [307, 310, 312], "kohler": [307, 310, 312], "eth": [307, 310], "zurich": [307, 310], "swiss": 307, "nation": 307, "scienc": 307, "foundat": 307, "center": 307, "compet": 307, "digit": 307, "nccr": 307, "dfab": 307, "programm": 307, "As": 307, "open": [307, 310], "mani": [307, 308, 310], "contributor": 307, "you": [307, 313, 317, 320, 323], "your": 307, "work": 307, "acknowledg": 307, "misc": 307, "titl": 307, "librari": [307, 308, 310, 313], "author": [307, 312], "anna": 307, "http": [307, 311, 314], "github": [307, 311], "com": [307, 311, 314], "gramaziokohl": 307, "year": 307, "2022": 307, "2023": 307, "doi": 307, "10": [307, 311], "5281": 307, "zenodo": 307, "7934267": 307, "url": 307, "present": 308, "differ": [308, 314, 320, 323], "concept": [308, 313], "There": [308, 316], "wai": 308, "run": [308, 310], "python": [308, 310, 311, 313], "environ": [308, 310, 311], "interact": 308, "session": 308, "text": 308, "editor": 308, "sublim": 308, "studio": 308, "eclips": 308, "insid": 308, "blender": 308, "worldxi": 309, "geometry_typ": 309, "add_beam": 309, "packag": [310, 311, 314], "model": 310, "written": 310, "ecosystem": 310, "rhinocero": 310, "3d": 310, "plug": 310, "activ": [310, 311, 315, 317, 322], "being": 310, "continu": 310, "At": 310, "stage": 310, "encompass": 310, "fast": 310, "intuit": 310, "custom": [310, 316], "entiti": 310, "semant": 310, "about": 310, "futur": 310, "expand": 310, "entail": [310, 316], "interfac": 310, "analysi": 310, "softwar": [310, 312], "specialist": 310, "built": [310, 313], "upon": 310, "framework": 310, "basic": 310, "like": [310, 313, 315], "complex": 310, "resolv": 310, "backend": 310, "rhinocommon": 310, "sdk": 310, "handl": 310, "opencascad": 310, "via": 310, "occ": 310, "introduct": 310, "instal": 310, "api": [310, 313], "connectionsolv": 310, "frenchridgelapjoint": 310, "lhalflapjoint": 310, "lmiterjoint": 310, "thalflapjoint": 310, "xhalflapjoint": 310, "find_neighboring_beam": 310, "beam_side_incid": 310, "brepgeometryconsum": 310, "cutfeaturegeometri": 310, "drillfeaturegeometri": 310, "millvolumegeometri": 310, "btlxprocess": [310, 314], "btlxfrenchridgelap": 310, "lbuttfactori": 310, "tbuttfactori": 310, "lmiterfactori": 310, "frenchridgefactori": 310, "simplesequencegener": 310, "jointdefinit": 310, "categoryrul": 310, "topologyrul": 310, "directrul": 310, "featuredefinit": 310, "jointopt": 310, "debuginfom": 310, "workflow": [310, 313, 316, 317], "show": [310, 313], "util": [310, 313], "contribut": [310, 313], "licens": 310, "cite": 310, "conda": 311, "n": 311, "myenvnam": 311, "ye": [311, 320], "7": 311, "m": 311, "compas_rhino": 311, "v7": 311, "latest": 311, "fork": 311, "repositori": 311, "clone": 311, "git": 311, "yourgithub_usernam": 311, "cd": 311, "edit": 311, "mode": 311, "dev": 311, "txt": 311, "invok": 311, "ghuser": 311, "mit": 312, "copyright": 312, "c": 312, "2020": 312, "02": 312, "17": 312, "permiss": 312, "herebi": 312, "grant": 312, "free": 312, "charg": 312, "person": 312, "obtain": 312, "document": [312, 314, 316, 317, 322], "deal": 312, "restrict": 312, "limit": 312, "right": 312, "merg": 312, "publish": 312, "distribut": 312, "sublicens": 312, "sell": 312, "permit": 312, "whom": 312, "furnish": 312, "subject": 312, "follow": [312, 313, 314], "condit": 312, "abov": 312, "notic": 312, "substanti": 312, "portion": 312, "THE": 312, "AS": 312, "warranti": 312, "OF": 312, "kind": 312, "express": 312, "OR": 312, "impli": [312, 315], "BUT": 312, "NOT": 312, "TO": 312, "merchant": 312, "fit": 312, "FOR": 312, "particular": 312, "purpos": 312, "AND": 312, "noninfring": 312, "IN": 312, "NO": 312, "event": 312, "holder": 312, "BE": 312, "liabl": 312, "claim": 312, "damag": 312, "liabil": 312, "action": 312, "contract": 312, "tort": 312, "aris": 312, "WITH": 312, "easi": 313, "autom": [313, 320], "bake": 313, "textur": [313, 322], "render": [313, 322], "boolean": [313, 315, 319], "style": 313, "planar": [313, 320], "might": 313, "componen": 313, "detail": 313, "overal": 313, "idea": 313, "how": [313, 320], "Then": [313, 320], "explain": 313, "requr": 314, "here": [314, 318, 320, 322], "design2machin": 314, "btlx_2_1_0": 314, "pdf": 314, "process_param": 314, "where": [314, 317, 322], "btlxjoint": 314, "__init__": 314, "py": 314, "mind": 314, "oper": [315, 319], "subtract": [315, 319], "computation": 315, "expens": 315, "disabl": 315, "applyfeatur": 315, "unsuccess": 315, "showassembli": [315, 321], "group": 316, "intend": [316, 317], "hybrid": 316, "encod": 316, "concaten": 316, "colon": 316, "separ": 316, "entri": [316, 323], "underscor": 316, "_": 316, "attr1nam": 316, "attr1value_attr2nam": 316, "attr2valu": 316, "four": [316, 320], "standard": 316, "zvector": [316, 317], "setstandardattribut": 316, "write": [316, 317], "readstandardattribut": 316, "read": 316, "checkstandardattribut": 316, "correctli": 316, "miss": 316, "retriev": 316, "later": [316, 317, 320], "filter": 316, "criteria": 316, "These": 316, "deleteattribut": 316, "setcustomattribut": 316, "readallattribut": 316, "linear": [317, 320], "straight": 317, "rafter": 317, "joist": 317, "beamfromcurv": 317, "form": [317, 320], "linecurv": 317, "beamfromcurveguid": 317, "referenc": 317, "around": 317, "li": [317, 322], "sai": 317, "perpendicular": 317, "world": 317, "vertic": 317, "convent": 317, "jointcategoryrul": [317, 320], "automaticjoint": 317, "updaterefobj": 317, "onc": 317, "preview": [317, 321], "extract": [317, 321], "demo": 318, "ly": 319, "three": 320, "prefix": 320, "rel": 320, "we": 320, "distinguish": 320, "topolog": 320, "situat": 320, "splice": 320, "co": 320, "corner": 320, "meet": 320, "select": 320, "addition": 320, "clean": 320, "serv": [320, 322], "cata": 320, "catb": 320, "thing": 320, "everi": 320, "tri": 320, "unintend": 320, "maxdist": 320, "exactli": 320, "certain": 320, "000001": 320, "showbeam": 321, "showbeamfram": 321, "showbeamindex": 321, "showjointtyp": 321, "bakewithboxmap": 322, "layer": 322, "desir": 322, "random": 322, "deviat": 322, "mapsiz": 322, "adjust": 322, "size": 322, "imag": 322, "ratio": 322, "bitmap": 322, "care": 323, "final": 323, "matter": 323, "last": 323, "earlier": 323}, "objects": {"compas_timber.assembly": [[9, 0, 1, "", "TimberAssembly"]], "compas_timber.assembly.TimberAssembly": [[10, 1, 1, "", "ToString"], [11, 1, 1, "", "add_beam"], [12, 1, 1, "", "add_connection"], [13, 1, 1, "", "add_joint"], [14, 1, 1, "", "add_part"], [15, 1, 1, "", "are_parts_joined"], [16, 1, 1, "", "connections"], [17, 1, 1, "", "contains"], [18, 1, 1, "", "copy"], [19, 1, 1, "", "delete_connection"], [20, 1, 1, "", "delete_part"], [21, 1, 1, "", "find"], [22, 1, 1, "", "find_by_key"], [23, 1, 1, "", "from_json"], [24, 1, 1, "", "from_jsonstring"], [25, 1, 1, "", "parts"], [26, 1, 1, "", "remove_joint"], [27, 1, 1, "", "rotate"], [28, 1, 1, "", "rotated"], [29, 1, 1, "", "scale"], [30, 1, 1, "", "scaled"], [31, 1, 1, "", "set_topologies"], [32, 1, 1, "", "sha256"], [33, 1, 1, "", "to_json"], [34, 1, 1, "", "to_jsonstring"], [35, 1, 1, "", "transform"], [36, 1, 1, "", "transform_numpy"], [37, 1, 1, "", "transformed"], [38, 1, 1, "", "transformed_numpy"], [39, 1, 1, "", "translate"], [40, 1, 1, "", "translated"], [41, 1, 1, "", "validate_data"]], "compas_timber.connections": [[42, 2, 1, "", "BeamJoinningError"], [43, 0, 1, "", "ConnectionSolver"], [46, 0, 1, "", "FrenchRidgeLapJoint"], [59, 0, 1, "", "Joint"], [71, 0, 1, "", "JointTopology"], [73, 0, 1, "", "LButtJoint"], [87, 0, 1, "", "LHalfLapJoint"], [101, 0, 1, "", "LMiterJoint"], [114, 0, 1, "", "LapJoint"], [128, 0, 1, "", "TButtJoint"], [141, 0, 1, "", "THalfLapJoint"], [155, 0, 1, "", "XHalfLapJoint"], [169, 3, 1, "", "beam_side_incidence"], [170, 3, 1, "", "find_neighboring_beams"]], "compas_timber.connections.ConnectionSolver": [[44, 1, 1, "", "find_intersecting_pairs"], [45, 1, 1, "", "find_topology"]], "compas_timber.connections.FrenchRidgeLapJoint": [[47, 1, 1, "", "ToString"], [48, 1, 1, "", "add_features"], [49, 1, 1, "", "check_geometry"], [50, 1, 1, "", "copy"], [51, 1, 1, "", "create"], [52, 1, 1, "", "from_json"], [53, 1, 1, "", "from_jsonstring"], [54, 1, 1, "", "restore_beams_from_keys"], [55, 1, 1, "", "sha256"], [56, 1, 1, "", "to_json"], [57, 1, 1, "", "to_jsonstring"], [58, 1, 1, "", "validate_data"]], "compas_timber.connections.Joint": [[60, 1, 1, "", "ToString"], [61, 1, 1, "", "add_features"], [62, 1, 1, "", "copy"], [63, 1, 1, "", "create"], [64, 1, 1, "", "from_json"], [65, 1, 1, "", "from_jsonstring"], [66, 1, 1, "", "restore_beams_from_keys"], [67, 1, 1, "", "sha256"], [68, 1, 1, "", "to_json"], [69, 1, 1, "", "to_jsonstring"], [70, 1, 1, "", "validate_data"]], "compas_timber.connections.JointTopology": [[72, 1, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[74, 1, 1, "", "ToString"], [75, 1, 1, "", "add_features"], [76, 1, 1, "", "copy"], [77, 1, 1, "", "create"], [78, 1, 1, "", "from_json"], [79, 1, 1, "", "from_jsonstring"], [80, 1, 1, "", "get_cross_cutting_plane"], [81, 1, 1, "", "get_main_cutting_plane"], [82, 1, 1, "", "restore_beams_from_keys"], [83, 1, 1, "", "sha256"], [84, 1, 1, "", "to_json"], [85, 1, 1, "", "to_jsonstring"], [86, 1, 1, "", "validate_data"]], "compas_timber.connections.LHalfLapJoint": [[88, 1, 1, "", "ToString"], [89, 1, 1, "", "add_features"], [90, 1, 1, "", "copy"], [91, 1, 1, "", "create"], [92, 1, 1, "", "from_json"], [93, 1, 1, "", "from_jsonstring"], [94, 1, 1, "", "get_cross_cutting_frame"], [95, 1, 1, "", "get_main_cutting_frame"], [96, 1, 1, "", "restore_beams_from_keys"], [97, 1, 1, "", "sha256"], [98, 1, 1, "", "to_json"], [99, 1, 1, "", "to_jsonstring"], [100, 1, 1, "", "validate_data"]], "compas_timber.connections.LMiterJoint": [[102, 1, 1, "", "ToString"], [103, 1, 1, "", "add_features"], [104, 1, 1, "", "copy"], [105, 1, 1, "", "create"], [106, 1, 1, "", "from_json"], [107, 1, 1, "", "from_jsonstring"], [108, 1, 1, "", "get_cutting_planes"], [109, 1, 1, "", "restore_beams_from_keys"], [110, 1, 1, "", "sha256"], [111, 1, 1, "", "to_json"], [112, 1, 1, "", "to_jsonstring"], [113, 1, 1, "", "validate_data"]], "compas_timber.connections.LapJoint": [[115, 1, 1, "", "ToString"], [116, 1, 1, "", "add_features"], [117, 1, 1, "", "copy"], [118, 1, 1, "", "create"], [119, 1, 1, "", "from_json"], [120, 1, 1, "", "from_jsonstring"], [121, 1, 1, "", "get_cross_cutting_frame"], [122, 1, 1, "", "get_main_cutting_frame"], [123, 1, 1, "", "restore_beams_from_keys"], [124, 1, 1, "", "sha256"], [125, 1, 1, "", "to_json"], [126, 1, 1, "", "to_jsonstring"], [127, 1, 1, "", "validate_data"]], "compas_timber.connections.TButtJoint": [[129, 1, 1, "", "ToString"], [130, 1, 1, "", "add_features"], [131, 1, 1, "", "copy"], [132, 1, 1, "", "create"], [133, 1, 1, "", "from_json"], [134, 1, 1, "", "from_jsonstring"], [135, 1, 1, "", "get_cutting_plane"], [136, 1, 1, "", "restore_beams_from_keys"], [137, 1, 1, "", "sha256"], [138, 1, 1, "", "to_json"], [139, 1, 1, "", "to_jsonstring"], [140, 1, 1, "", "validate_data"]], "compas_timber.connections.THalfLapJoint": [[142, 1, 1, "", "ToString"], [143, 1, 1, "", "add_features"], [144, 1, 1, "", "copy"], [145, 1, 1, "", "create"], [146, 1, 1, "", "from_json"], [147, 1, 1, "", "from_jsonstring"], [148, 1, 1, "", "get_cross_cutting_frame"], [149, 1, 1, "", "get_main_cutting_frame"], [150, 1, 1, "", "restore_beams_from_keys"], [151, 1, 1, "", "sha256"], [152, 1, 1, "", "to_json"], [153, 1, 1, "", "to_jsonstring"], [154, 1, 1, "", "validate_data"]], "compas_timber.connections.XHalfLapJoint": [[156, 1, 1, "", "ToString"], [157, 1, 1, "", "add_features"], [158, 1, 1, "", "copy"], [159, 1, 1, "", "create"], [160, 1, 1, "", "from_json"], [161, 1, 1, "", "from_jsonstring"], [162, 1, 1, "", "get_cross_cutting_frame"], [163, 1, 1, "", "get_main_cutting_frame"], [164, 1, 1, "", "restore_beams_from_keys"], [165, 1, 1, "", "sha256"], [166, 1, 1, "", "to_json"], [167, 1, 1, "", "to_jsonstring"], [168, 1, 1, "", "validate_data"]], "compas_timber.consumers": [[171, 0, 1, "", "BeamGeometry"], [172, 0, 1, "", "BrepGeometryConsumer"], [173, 0, 1, "", "CutFeature"], [182, 0, 1, "", "CutFeatureGeometry"], [184, 0, 1, "", "DrillFeature"], [193, 0, 1, "", "DrillFeatureGeometry"], [195, 2, 1, "", "FeatureApplicationError"], [196, 0, 1, "", "FeatureApplicator"], [198, 0, 1, "", "MillVolume"], [207, 0, 1, "", "MillVolumeGeometry"]], "compas_timber.consumers.CutFeature": [[174, 1, 1, "", "ToString"], [175, 1, 1, "", "copy"], [176, 1, 1, "", "from_json"], [177, 1, 1, "", "from_jsonstring"], [178, 1, 1, "", "sha256"], [179, 1, 1, "", "to_json"], [180, 1, 1, "", "to_jsonstring"], [181, 1, 1, "", "validate_data"]], "compas_timber.consumers.CutFeatureGeometry": [[183, 1, 1, "", "apply"]], "compas_timber.consumers.DrillFeature": [[185, 1, 1, "", "ToString"], [186, 1, 1, "", "copy"], [187, 1, 1, "", "from_json"], [188, 1, 1, "", "from_jsonstring"], [189, 1, 1, "", "sha256"], [190, 1, 1, "", "to_json"], [191, 1, 1, "", "to_jsonstring"], [192, 1, 1, "", "validate_data"]], "compas_timber.consumers.DrillFeatureGeometry": [[194, 1, 1, "", "apply"]], "compas_timber.consumers.FeatureApplicator": [[197, 1, 1, "", "apply"]], "compas_timber.consumers.MillVolume": [[199, 1, 1, "", "ToString"], [200, 1, 1, "", "copy"], [201, 1, 1, "", "from_json"], [202, 1, 1, "", "from_jsonstring"], [203, 1, 1, "", "sha256"], [204, 1, 1, "", "to_json"], [205, 1, 1, "", "to_jsonstring"], [206, 1, 1, "", "validate_data"]], "compas_timber.consumers.MillVolumeGeometry": [[208, 1, 1, "", "apply"]], "compas_timber.fabrication": [[209, 0, 1, "", "BTLx"], [213, 0, 1, "", "BTLxFrenchRidgeLap"], [217, 0, 1, "", "BTLxJackCut"], [220, 0, 1, "", "BTLxProcess"], [221, 0, 1, "", "FrenchRidgeFactory"], [223, 0, 1, "", "LButtFactory"], [225, 0, 1, "", "LMiterFactory"], [227, 0, 1, "", "TButtFactory"]], "compas_timber.fabrication.BTLx": [[210, 1, 1, "", "btlx_string"], [211, 1, 1, "", "process_assembly"], [212, 1, 1, "", "register_joint"]], "compas_timber.fabrication.BTLxFrenchRidgeLap": [[214, 1, 1, "", "create_process"], [215, 1, 1, "", "get_params"], [216, 1, 1, "", "process_joints"]], "compas_timber.fabrication.BTLxJackCut": [[218, 1, 1, "", "create_process"], [219, 1, 1, "", "generate_process"]], "compas_timber.fabrication.FrenchRidgeFactory": [[222, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.LButtFactory": [[224, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.LMiterFactory": [[226, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.TButtFactory": [[228, 1, 1, "", "apply_processings"]], "compas_timber.ghpython": [[229, 0, 1, "", "CategoryRule"], [233, 0, 1, "", "DebugInfomation"], [237, 0, 1, "", "DirectRule"], [240, 0, 1, "", "FeatureDefinition"], [242, 0, 1, "", "JointDefinition"], [246, 0, 1, "", "JointOptions"], [249, 0, 1, "", "TopologyRule"]], "compas_timber.ghpython.CategoryRule": [[230, 1, 1, "", "ToString"], [231, 1, 1, "", "comply"], [232, 1, 1, "", "reorder"]], "compas_timber.ghpython.DebugInfomation": [[234, 1, 1, "", "ToString"], [235, 1, 1, "", "add_feature_error"], [236, 1, 1, "", "add_joint_error"]], "compas_timber.ghpython.DirectRule": [[238, 1, 1, "", "ToString"], [239, 1, 1, "", "comply"]], "compas_timber.ghpython.FeatureDefinition": [[241, 1, 1, "", "ToString"]], "compas_timber.ghpython.JointDefinition": [[243, 1, 1, "", "ToString"], [244, 1, 1, "", "is_identical"], [245, 1, 1, "", "match"]], "compas_timber.ghpython.JointOptions": [[247, 1, 1, "", "ToString"], [248, 1, 1, "", "is_identical"]], "compas_timber.ghpython.TopologyRule": [[250, 1, 1, "", "ToString"], [251, 1, 1, "", "comply"]], "compas_timber.parts": [[252, 0, 1, "", "Beam"]], "compas_timber.parts.Beam": [[253, 1, 1, "", "ToString"], [254, 1, 1, "", "add_blank_extension"], [255, 1, 1, "", "add_feature"], [256, 1, 1, "", "add_features"], [257, 1, 1, "", "align_z"], [258, 1, 1, "", "clear_features"], [259, 1, 1, "", "copy"], [260, 1, 1, "", "endpoint_closest_to_point"], [261, 1, 1, "", "extension_to_plane"], [262, 1, 1, "", "from_centerline"], [263, 1, 1, "", "from_endpoints"], [264, 1, 1, "", "from_json"], [265, 1, 1, "", "from_jsonstring"], [266, 1, 1, "", "get_geometry"], [267, 1, 1, "", "remove_blank_extension"], [268, 1, 1, "", "remove_features"], [269, 1, 1, "", "rotate"], [270, 1, 1, "", "rotated"], [271, 1, 1, "", "scale"], [272, 1, 1, "", "scaled"], [273, 1, 1, "", "sha256"], [274, 1, 1, "", "to_json"], [275, 1, 1, "", "to_jsonstring"], [276, 1, 1, "", "transform"], [277, 1, 1, "", "transform_numpy"], [278, 1, 1, "", "transformed"], [279, 1, 1, "", "transformed_numpy"], [280, 1, 1, "", "translate"], [281, 1, 1, "", "translated"], [282, 1, 1, "", "validate_data"]], "compas_timber.planning": [[283, 0, 1, "", "Actor"], [285, 0, 1, "", "BuildingPlan"], [295, 0, 1, "", "SimpleSequenceGenerator"], [296, 0, 1, "", "Step"]], "compas_timber.planning.Actor": [[284, 1, 1, "", "get_name"]], "compas_timber.planning.BuildingPlan": [[286, 1, 1, "", "ToString"], [287, 1, 1, "", "add_step"], [288, 1, 1, "", "copy"], [289, 1, 1, "", "from_json"], [290, 1, 1, "", "from_jsonstring"], [291, 1, 1, "", "sha256"], [292, 1, 1, "", "to_json"], [293, 1, 1, "", "to_jsonstring"], [294, 1, 1, "", "validate_data"]], "compas_timber.planning.Step": [[297, 1, 1, "", "ToString"], [298, 1, 1, "", "copy"], [299, 1, 1, "", "from_json"], [300, 1, 1, "", "from_jsonstring"], [301, 1, 1, "", "sha256"], [302, 1, 1, "", "to_json"], [303, 1, 1, "", "to_jsonstring"], [304, 1, 1, "", "transform"], [305, 1, 1, "", "validate_data"]], "compas_timber.rhino": [[306, 3, 1, "", "find_neighboring_beams"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:exception", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "exception", "Python exception"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "packag": 0, "compas_timb": [1, 2, 3, 4, 5, 6, 7], "assembli": [1, 308, 315], "class": [1, 2, 3, 4, 5, 6, 7], "connect": [2, 16], "function": 2, "except": 2, "consum": 3, "fabric": 4, "ghpython": 5, "part": [6, 25], "plan": 7, "rhino": 8, "plugin": [8, 313], "timberassembli": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "tostr": [10, 47, 60, 74, 88, 102, 115, 129, 142, 156, 174, 185, 199, 230, 234, 238, 241, 243, 247, 250, 253, 286, 297], "add_beam": 11, "add_connect": 12, "add_joint": 13, "add_part": 14, "are_parts_join": 15, "contain": 17, "copi": [18, 50, 62, 76, 90, 104, 117, 131, 144, 158, 175, 186, 200, 259, 288, 298], "delete_connect": 19, "delete_part": 20, "find": 21, "find_by_kei": 22, "from_json": [23, 52, 64, 78, 92, 106, 119, 133, 146, 160, 176, 187, 201, 264, 289, 299], "from_jsonstr": [24, 53, 65, 79, 93, 107, 120, 134, 147, 161, 177, 188, 202, 265, 290, 300], "remove_joint": 26, "rotat": [27, 28, 269, 270], "scale": [29, 30, 271, 272], "set_topologi": 31, "sha256": [32, 55, 67, 83, 97, 110, 124, 137, 151, 165, 178, 189, 203, 273, 291, 301], "to_json": [33, 56, 68, 84, 98, 111, 125, 138, 152, 166, 179, 190, 204, 274, 292, 302], "to_jsonstr": [34, 57, 69, 85, 99, 112, 126, 139, 153, 167, 180, 191, 205, 275, 293, 303], "transform": [35, 37, 276, 278, 304], "transform_numpi": [36, 277], "transformed_numpi": [38, 279], "translat": [39, 40, 280, 281], "validate_data": [41, 58, 70, 86, 100, 113, 127, 140, 154, 168, 181, 192, 206, 282, 294, 305], "beamjoinningerror": 42, "connectionsolv": [43, 44, 45], "find_intersecting_pair": 44, "find_topologi": 45, "frenchridgelapjoint": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "add_featur": [48, 61, 75, 89, 103, 116, 130, 143, 157, 255, 256], "check_geometri": 49, "creat": [51, 63, 77, 91, 105, 118, 132, 145, 159, 309], "restore_beams_from_kei": [54, 66, 82, 96, 109, 123, 136, 150, 164], "joint": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 309, 320], "jointtopologi": [71, 72], "get_nam": [72, 284], "lbuttjoint": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "get_cross_cutting_plan": 80, "get_main_cutting_plan": 81, "lhalflapjoint": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "get_cross_cutting_fram": [94, 121, 148, 162], "get_main_cutting_fram": [95, 122, 149, 163], "lmiterjoint": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "get_cutting_plan": [108, 135], "lapjoint": [114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "tbuttjoint": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "thalflapjoint": [141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "xhalflapjoint": [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "beam_side_incid": 169, "find_neighboring_beam": [170, 306], "beamgeometri": 171, "brepgeometryconsum": 172, "cutfeatur": [173, 174, 175, 176, 177, 178, 179, 180, 181], "cutfeaturegeometri": [182, 183], "appli": [183, 194, 197, 208], "drillfeatur": [184, 185, 186, 187, 188, 189, 190, 191, 192], "drillfeaturegeometri": [193, 194], "featureapplicationerror": 195, "featureappl": [196, 197], "millvolum": [198, 199, 200, 201, 202, 203, 204, 205, 206], "millvolumegeometri": [207, 208], "btlx": [209, 210, 211, 212, 314], "btlx_string": 210, "process_assembli": 211, "register_joint": 212, "btlxfrenchridgelap": [213, 214, 215, 216], "create_process": [214, 218], "get_param": 215, "process_joint": 216, "btlxjackcut": [217, 218, 219], "generate_process": 219, "btlxprocess": 220, "frenchridgefactori": [221, 222], "apply_process": [222, 224, 226, 228], "lbuttfactori": [223, 224], "lmiterfactori": [225, 226], "tbuttfactori": [227, 228], "categoryrul": [229, 230, 231, 232], "compli": [231, 239, 251], "reorder": 232, "debuginfom": [233, 234, 235, 236], "add_feature_error": 235, "add_joint_error": 236, "directrul": [237, 238, 239], "featuredefinit": [240, 241], "jointdefinit": [242, 243, 244, 245], "is_ident": [244, 248], "match": 245, "jointopt": [246, 247, 248], "topologyrul": [249, 250, 251], "beam": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 317], "add_blank_extens": 254, "align_z": 257, "clear_featur": 258, "endpoint_closest_to_point": 260, "extension_to_plan": 261, "from_centerlin": 262, "from_endpoint": 263, "get_geometri": 266, "remove_blank_extens": 267, "remove_featur": 268, "actor": [283, 284], "buildingplan": [285, 286, 287, 288, 289, 290, 291, 292, 293, 294], "add_step": 287, "simplesequencegener": 295, "step": [296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "cite": 307, "exampl": [308, 318], "timber": [308, 310], "compa": 310, "depend": 310, "tabl": 310, "content": 310, "indic": 310, "instal": 311, "stabl": 311, "pip": 311, "develop": 311, "licens": 312, "grasshopp": 313, "contribut": 314, "guid": 314, "attribut": 316, "featur": 319, "topologi": 320, "compon": 320, "t": 320, "butt": 320, "l": 320, "miter": 320, "automaticjoint": 320, "wizzard": 320, "show": 321, "util": 322, "bake": 322, "boxmap": 322, "workflow": 323}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Packages": [[0, "packages"]], "compas_timber.assembly": [[1, "compas-timber-assembly"]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [7, "classes"]], "compas_timber.connections": [[2, "compas-timber-connections"]], "Functions": [[2, "functions"]], "Exceptions": [[2, "exceptions"]], "compas_timber.consumers": [[3, "compas-timber-consumers"]], "compas_timber.fabrication": [[4, "compas-timber-fabrication"]], "compas_timber.ghpython": [[5, "compas-timber-ghpython"]], "compas_timber.parts": [[6, "compas-timber-parts"]], "compas_timber.planning": [[7, "compas-timber-planning"]], "rhino": [[8, "rhino"]], "Plugins": [[8, "plugins"]], "TimberAssembly": [[9, "timberassembly"]], "TimberAssembly.ToString": [[10, "timberassembly-tostring"]], "TimberAssembly.add_beam": [[11, "timberassembly-add-beam"]], "TimberAssembly.add_connection": [[12, "timberassembly-add-connection"]], "TimberAssembly.add_joint": [[13, "timberassembly-add-joint"]], "TimberAssembly.add_part": [[14, "timberassembly-add-part"]], "TimberAssembly.are_parts_joined": [[15, "timberassembly-are-parts-joined"]], "TimberAssembly.connections": [[16, "timberassembly-connections"]], "TimberAssembly.contains": [[17, "timberassembly-contains"]], "TimberAssembly.copy": [[18, "timberassembly-copy"]], "TimberAssembly.delete_connection": [[19, "timberassembly-delete-connection"]], "TimberAssembly.delete_part": [[20, "timberassembly-delete-part"]], "TimberAssembly.find": [[21, "timberassembly-find"]], "TimberAssembly.find_by_key": [[22, "timberassembly-find-by-key"]], "TimberAssembly.from_json": [[23, "timberassembly-from-json"]], "TimberAssembly.from_jsonstring": [[24, "timberassembly-from-jsonstring"]], "TimberAssembly.parts": [[25, "timberassembly-parts"]], "TimberAssembly.remove_joint": [[26, "timberassembly-remove-joint"]], "TimberAssembly.rotate": [[27, "timberassembly-rotate"]], "TimberAssembly.rotated": [[28, "timberassembly-rotated"]], "TimberAssembly.scale": [[29, "timberassembly-scale"]], "TimberAssembly.scaled": [[30, "timberassembly-scaled"]], "TimberAssembly.set_topologies": [[31, "timberassembly-set-topologies"]], "TimberAssembly.sha256": [[32, "timberassembly-sha256"]], "TimberAssembly.to_json": [[33, "timberassembly-to-json"]], "TimberAssembly.to_jsonstring": [[34, "timberassembly-to-jsonstring"]], "TimberAssembly.transform": [[35, "timberassembly-transform"]], "TimberAssembly.transform_numpy": [[36, "timberassembly-transform-numpy"]], "TimberAssembly.transformed": [[37, "timberassembly-transformed"]], "TimberAssembly.transformed_numpy": [[38, "timberassembly-transformed-numpy"]], "TimberAssembly.translate": [[39, "timberassembly-translate"]], "TimberAssembly.translated": [[40, "timberassembly-translated"]], "TimberAssembly.validate_data": [[41, "timberassembly-validate-data"]], "BeamJoinningError": [[42, "beamjoinningerror"]], "ConnectionSolver": [[43, "connectionsolver"]], "ConnectionSolver.find_intersecting_pairs": [[44, "connectionsolver-find-intersecting-pairs"]], "ConnectionSolver.find_topology": [[45, "connectionsolver-find-topology"]], "FrenchRidgeLapJoint": [[46, "frenchridgelapjoint"]], "FrenchRidgeLapJoint.ToString": [[47, "frenchridgelapjoint-tostring"]], "FrenchRidgeLapJoint.add_features": [[48, "frenchridgelapjoint-add-features"]], "FrenchRidgeLapJoint.check_geometry": [[49, "frenchridgelapjoint-check-geometry"]], "FrenchRidgeLapJoint.copy": [[50, "frenchridgelapjoint-copy"]], "FrenchRidgeLapJoint.create": [[51, "frenchridgelapjoint-create"]], "FrenchRidgeLapJoint.from_json": [[52, "frenchridgelapjoint-from-json"]], "FrenchRidgeLapJoint.from_jsonstring": [[53, "frenchridgelapjoint-from-jsonstring"]], "FrenchRidgeLapJoint.restore_beams_from_keys": [[54, "frenchridgelapjoint-restore-beams-from-keys"]], "FrenchRidgeLapJoint.sha256": [[55, "frenchridgelapjoint-sha256"]], "FrenchRidgeLapJoint.to_json": [[56, "frenchridgelapjoint-to-json"]], "FrenchRidgeLapJoint.to_jsonstring": [[57, "frenchridgelapjoint-to-jsonstring"]], "FrenchRidgeLapJoint.validate_data": [[58, "frenchridgelapjoint-validate-data"]], "Joint": [[59, "joint"]], "Joint.ToString": [[60, "joint-tostring"]], "Joint.add_features": [[61, "joint-add-features"]], "Joint.copy": [[62, "joint-copy"]], "Joint.create": [[63, "joint-create"]], "Joint.from_json": [[64, "joint-from-json"]], "Joint.from_jsonstring": [[65, "joint-from-jsonstring"]], "Joint.restore_beams_from_keys": [[66, "joint-restore-beams-from-keys"]], "Joint.sha256": [[67, "joint-sha256"]], "Joint.to_json": [[68, "joint-to-json"]], "Joint.to_jsonstring": [[69, "joint-to-jsonstring"]], "Joint.validate_data": [[70, "joint-validate-data"]], "JointTopology": [[71, "jointtopology"]], "JointTopology.get_name": [[72, "jointtopology-get-name"]], "LButtJoint": [[73, "lbuttjoint"]], "LButtJoint.ToString": [[74, "lbuttjoint-tostring"]], "LButtJoint.add_features": [[75, "lbuttjoint-add-features"]], "LButtJoint.copy": [[76, "lbuttjoint-copy"]], "LButtJoint.create": [[77, "lbuttjoint-create"]], "LButtJoint.from_json": [[78, "lbuttjoint-from-json"]], "LButtJoint.from_jsonstring": [[79, "lbuttjoint-from-jsonstring"]], "LButtJoint.get_cross_cutting_plane": [[80, "lbuttjoint-get-cross-cutting-plane"]], "LButtJoint.get_main_cutting_plane": [[81, "lbuttjoint-get-main-cutting-plane"]], "LButtJoint.restore_beams_from_keys": [[82, "lbuttjoint-restore-beams-from-keys"]], "LButtJoint.sha256": [[83, "lbuttjoint-sha256"]], "LButtJoint.to_json": [[84, "lbuttjoint-to-json"]], "LButtJoint.to_jsonstring": [[85, "lbuttjoint-to-jsonstring"]], "LButtJoint.validate_data": [[86, "lbuttjoint-validate-data"]], "LHalfLapJoint": [[87, "lhalflapjoint"]], "LHalfLapJoint.ToString": [[88, "lhalflapjoint-tostring"]], "LHalfLapJoint.add_features": [[89, "lhalflapjoint-add-features"]], "LHalfLapJoint.copy": [[90, "lhalflapjoint-copy"]], "LHalfLapJoint.create": [[91, "lhalflapjoint-create"]], "LHalfLapJoint.from_json": [[92, "lhalflapjoint-from-json"]], "LHalfLapJoint.from_jsonstring": [[93, "lhalflapjoint-from-jsonstring"]], "LHalfLapJoint.get_cross_cutting_frame": [[94, "lhalflapjoint-get-cross-cutting-frame"]], "LHalfLapJoint.get_main_cutting_frame": [[95, "lhalflapjoint-get-main-cutting-frame"]], "LHalfLapJoint.restore_beams_from_keys": [[96, "lhalflapjoint-restore-beams-from-keys"]], "LHalfLapJoint.sha256": [[97, "lhalflapjoint-sha256"]], "LHalfLapJoint.to_json": [[98, "lhalflapjoint-to-json"]], "LHalfLapJoint.to_jsonstring": [[99, "lhalflapjoint-to-jsonstring"]], "LHalfLapJoint.validate_data": [[100, "lhalflapjoint-validate-data"]], "LMiterJoint": [[101, "lmiterjoint"]], "LMiterJoint.ToString": [[102, "lmiterjoint-tostring"]], "LMiterJoint.add_features": [[103, "lmiterjoint-add-features"]], "LMiterJoint.copy": [[104, "lmiterjoint-copy"]], "LMiterJoint.create": [[105, "lmiterjoint-create"]], "LMiterJoint.from_json": [[106, "lmiterjoint-from-json"]], "LMiterJoint.from_jsonstring": [[107, "lmiterjoint-from-jsonstring"]], "LMiterJoint.get_cutting_planes": [[108, "lmiterjoint-get-cutting-planes"]], "LMiterJoint.restore_beams_from_keys": [[109, "lmiterjoint-restore-beams-from-keys"]], "LMiterJoint.sha256": [[110, "lmiterjoint-sha256"]], "LMiterJoint.to_json": [[111, "lmiterjoint-to-json"]], "LMiterJoint.to_jsonstring": [[112, "lmiterjoint-to-jsonstring"]], "LMiterJoint.validate_data": [[113, "lmiterjoint-validate-data"]], "LapJoint": [[114, "lapjoint"]], "LapJoint.ToString": [[115, "lapjoint-tostring"]], "LapJoint.add_features": [[116, "lapjoint-add-features"]], "LapJoint.copy": [[117, "lapjoint-copy"]], "LapJoint.create": [[118, "lapjoint-create"]], "LapJoint.from_json": [[119, "lapjoint-from-json"]], "LapJoint.from_jsonstring": [[120, "lapjoint-from-jsonstring"]], "LapJoint.get_cross_cutting_frame": [[121, "lapjoint-get-cross-cutting-frame"]], "LapJoint.get_main_cutting_frame": [[122, "lapjoint-get-main-cutting-frame"]], "LapJoint.restore_beams_from_keys": [[123, "lapjoint-restore-beams-from-keys"]], "LapJoint.sha256": [[124, "lapjoint-sha256"]], "LapJoint.to_json": [[125, "lapjoint-to-json"]], "LapJoint.to_jsonstring": [[126, "lapjoint-to-jsonstring"]], "LapJoint.validate_data": [[127, "lapjoint-validate-data"]], "TButtJoint": [[128, "tbuttjoint"]], "TButtJoint.ToString": [[129, "tbuttjoint-tostring"]], "TButtJoint.add_features": [[130, "tbuttjoint-add-features"]], "TButtJoint.copy": [[131, "tbuttjoint-copy"]], "TButtJoint.create": [[132, "tbuttjoint-create"]], "TButtJoint.from_json": [[133, "tbuttjoint-from-json"]], "TButtJoint.from_jsonstring": [[134, "tbuttjoint-from-jsonstring"]], "TButtJoint.get_cutting_plane": [[135, "tbuttjoint-get-cutting-plane"]], "TButtJoint.restore_beams_from_keys": [[136, "tbuttjoint-restore-beams-from-keys"]], "TButtJoint.sha256": [[137, "tbuttjoint-sha256"]], "TButtJoint.to_json": [[138, "tbuttjoint-to-json"]], "TButtJoint.to_jsonstring": [[139, "tbuttjoint-to-jsonstring"]], "TButtJoint.validate_data": [[140, "tbuttjoint-validate-data"]], "THalfLapJoint": [[141, "thalflapjoint"]], "THalfLapJoint.ToString": [[142, "thalflapjoint-tostring"]], "THalfLapJoint.add_features": [[143, "thalflapjoint-add-features"]], "THalfLapJoint.copy": [[144, "thalflapjoint-copy"]], "THalfLapJoint.create": [[145, "thalflapjoint-create"]], "THalfLapJoint.from_json": [[146, "thalflapjoint-from-json"]], "THalfLapJoint.from_jsonstring": [[147, "thalflapjoint-from-jsonstring"]], "THalfLapJoint.get_cross_cutting_frame": [[148, "thalflapjoint-get-cross-cutting-frame"]], "THalfLapJoint.get_main_cutting_frame": [[149, "thalflapjoint-get-main-cutting-frame"]], "THalfLapJoint.restore_beams_from_keys": [[150, "thalflapjoint-restore-beams-from-keys"]], "THalfLapJoint.sha256": [[151, "thalflapjoint-sha256"]], "THalfLapJoint.to_json": [[152, "thalflapjoint-to-json"]], "THalfLapJoint.to_jsonstring": [[153, "thalflapjoint-to-jsonstring"]], "THalfLapJoint.validate_data": [[154, "thalflapjoint-validate-data"]], "XHalfLapJoint": [[155, "xhalflapjoint"]], "XHalfLapJoint.ToString": [[156, "xhalflapjoint-tostring"]], "XHalfLapJoint.add_features": [[157, "xhalflapjoint-add-features"]], "XHalfLapJoint.copy": [[158, "xhalflapjoint-copy"]], "XHalfLapJoint.create": [[159, "xhalflapjoint-create"]], "XHalfLapJoint.from_json": [[160, "xhalflapjoint-from-json"]], "XHalfLapJoint.from_jsonstring": [[161, "xhalflapjoint-from-jsonstring"]], "XHalfLapJoint.get_cross_cutting_frame": [[162, "xhalflapjoint-get-cross-cutting-frame"]], "XHalfLapJoint.get_main_cutting_frame": [[163, "xhalflapjoint-get-main-cutting-frame"]], "XHalfLapJoint.restore_beams_from_keys": [[164, "xhalflapjoint-restore-beams-from-keys"]], "XHalfLapJoint.sha256": [[165, "xhalflapjoint-sha256"]], "XHalfLapJoint.to_json": [[166, "xhalflapjoint-to-json"]], "XHalfLapJoint.to_jsonstring": [[167, "xhalflapjoint-to-jsonstring"]], "XHalfLapJoint.validate_data": [[168, "xhalflapjoint-validate-data"]], "beam_side_incidence": [[169, "beam-side-incidence"]], "find_neighboring_beams": [[170, "find-neighboring-beams"], [306, "find-neighboring-beams"]], "BeamGeometry": [[171, "beamgeometry"]], "BrepGeometryConsumer": [[172, "brepgeometryconsumer"]], "CutFeature": [[173, "cutfeature"]], "CutFeature.ToString": [[174, "cutfeature-tostring"]], "CutFeature.copy": [[175, "cutfeature-copy"]], "CutFeature.from_json": [[176, "cutfeature-from-json"]], "CutFeature.from_jsonstring": [[177, "cutfeature-from-jsonstring"]], "CutFeature.sha256": [[178, "cutfeature-sha256"]], "CutFeature.to_json": [[179, "cutfeature-to-json"]], "CutFeature.to_jsonstring": [[180, "cutfeature-to-jsonstring"]], "CutFeature.validate_data": [[181, "cutfeature-validate-data"]], "CutFeatureGeometry": [[182, "cutfeaturegeometry"]], "CutFeatureGeometry.apply": [[183, "cutfeaturegeometry-apply"]], "DrillFeature": [[184, "drillfeature"]], "DrillFeature.ToString": [[185, "drillfeature-tostring"]], "DrillFeature.copy": [[186, "drillfeature-copy"]], "DrillFeature.from_json": [[187, "drillfeature-from-json"]], "DrillFeature.from_jsonstring": [[188, "drillfeature-from-jsonstring"]], "DrillFeature.sha256": [[189, "drillfeature-sha256"]], "DrillFeature.to_json": [[190, "drillfeature-to-json"]], "DrillFeature.to_jsonstring": [[191, "drillfeature-to-jsonstring"]], "DrillFeature.validate_data": [[192, "drillfeature-validate-data"]], "DrillFeatureGeometry": [[193, "drillfeaturegeometry"]], "DrillFeatureGeometry.apply": [[194, "drillfeaturegeometry-apply"]], "FeatureApplicationError": [[195, "featureapplicationerror"]], "FeatureApplicator": [[196, "featureapplicator"]], "FeatureApplicator.apply": [[197, "featureapplicator-apply"]], "MillVolume": [[198, "millvolume"]], "MillVolume.ToString": [[199, "millvolume-tostring"]], "MillVolume.copy": [[200, "millvolume-copy"]], "MillVolume.from_json": [[201, "millvolume-from-json"]], "MillVolume.from_jsonstring": [[202, "millvolume-from-jsonstring"]], "MillVolume.sha256": [[203, "millvolume-sha256"]], "MillVolume.to_json": [[204, "millvolume-to-json"]], "MillVolume.to_jsonstring": [[205, "millvolume-to-jsonstring"]], "MillVolume.validate_data": [[206, "millvolume-validate-data"]], "MillVolumeGeometry": [[207, "millvolumegeometry"]], "MillVolumeGeometry.apply": [[208, "millvolumegeometry-apply"]], "BTLx": [[209, "btlx"]], "BTLx.btlx_string": [[210, "btlx-btlx-string"]], "BTLx.process_assembly": [[211, "btlx-process-assembly"]], "BTLx.register_joint": [[212, "btlx-register-joint"]], "BTLxFrenchRidgeLap": [[213, "btlxfrenchridgelap"]], "BTLxFrenchRidgeLap.create_process": [[214, "btlxfrenchridgelap-create-process"]], "BTLxFrenchRidgeLap.get_params": [[215, "btlxfrenchridgelap-get-params"]], "BTLxFrenchRidgeLap.process_joints": [[216, "btlxfrenchridgelap-process-joints"]], "BTLxJackCut": [[217, "btlxjackcut"]], "BTLxJackCut.create_process": [[218, "btlxjackcut-create-process"]], "BTLxJackCut.generate_process": [[219, "btlxjackcut-generate-process"]], "BTLxProcess": [[220, "btlxprocess"]], "FrenchRidgeFactory": [[221, "frenchridgefactory"]], "FrenchRidgeFactory.apply_processings": [[222, "frenchridgefactory-apply-processings"]], "LButtFactory": [[223, "lbuttfactory"]], "LButtFactory.apply_processings": [[224, "lbuttfactory-apply-processings"]], "LMiterFactory": [[225, "lmiterfactory"]], "LMiterFactory.apply_processings": [[226, "lmiterfactory-apply-processings"]], "TButtFactory": [[227, "tbuttfactory"]], "TButtFactory.apply_processings": [[228, "tbuttfactory-apply-processings"]], "CategoryRule": [[229, "categoryrule"]], "CategoryRule.ToString": [[230, "categoryrule-tostring"]], "CategoryRule.comply": [[231, "categoryrule-comply"]], "CategoryRule.reorder": [[232, "categoryrule-reorder"]], "DebugInfomation": [[233, "debuginfomation"]], "DebugInfomation.ToString": [[234, "debuginfomation-tostring"]], "DebugInfomation.add_feature_error": [[235, "debuginfomation-add-feature-error"]], "DebugInfomation.add_joint_error": [[236, "debuginfomation-add-joint-error"]], "DirectRule": [[237, "directrule"]], "DirectRule.ToString": [[238, "directrule-tostring"]], "DirectRule.comply": [[239, "directrule-comply"]], "FeatureDefinition": [[240, "featuredefinition"]], "FeatureDefinition.ToString": [[241, "featuredefinition-tostring"]], "JointDefinition": [[242, "jointdefinition"]], "JointDefinition.ToString": [[243, "jointdefinition-tostring"]], "JointDefinition.is_identical": [[244, "jointdefinition-is-identical"]], "JointDefinition.match": [[245, "jointdefinition-match"]], "JointOptions": [[246, "jointoptions"]], "JointOptions.ToString": [[247, "jointoptions-tostring"]], "JointOptions.is_identical": [[248, "jointoptions-is-identical"]], "TopologyRule": [[249, "topologyrule"]], "TopologyRule.ToString": [[250, "topologyrule-tostring"]], "TopologyRule.comply": [[251, "topologyrule-comply"]], "Beam": [[252, "beam"], [317, "beam"]], "Beam.ToString": [[253, "beam-tostring"]], "Beam.add_blank_extension": [[254, "beam-add-blank-extension"]], "Beam.add_feature": [[255, "beam-add-feature"]], "Beam.add_features": [[256, "beam-add-features"]], "Beam.align_z": [[257, "beam-align-z"]], "Beam.clear_features": [[258, "beam-clear-features"]], "Beam.copy": [[259, "beam-copy"]], "Beam.endpoint_closest_to_point": [[260, "beam-endpoint-closest-to-point"]], "Beam.extension_to_plane": [[261, "beam-extension-to-plane"]], "Beam.from_centerline": [[262, "beam-from-centerline"]], "Beam.from_endpoints": [[263, "beam-from-endpoints"]], "Beam.from_json": [[264, "beam-from-json"]], "Beam.from_jsonstring": [[265, "beam-from-jsonstring"]], "Beam.get_geometry": [[266, "beam-get-geometry"]], "Beam.remove_blank_extension": [[267, "beam-remove-blank-extension"]], "Beam.remove_features": [[268, "beam-remove-features"]], "Beam.rotate": [[269, "beam-rotate"]], "Beam.rotated": [[270, "beam-rotated"]], "Beam.scale": [[271, "beam-scale"]], "Beam.scaled": [[272, "beam-scaled"]], "Beam.sha256": [[273, "beam-sha256"]], "Beam.to_json": [[274, "beam-to-json"]], "Beam.to_jsonstring": [[275, "beam-to-jsonstring"]], "Beam.transform": [[276, "beam-transform"]], "Beam.transform_numpy": [[277, "beam-transform-numpy"]], "Beam.transformed": [[278, "beam-transformed"]], "Beam.transformed_numpy": [[279, "beam-transformed-numpy"]], "Beam.translate": [[280, "beam-translate"]], "Beam.translated": [[281, "beam-translated"]], "Beam.validate_data": [[282, "beam-validate-data"]], "Actor": [[283, "actor"]], "Actor.get_name": [[284, "actor-get-name"]], "BuildingPlan": [[285, "buildingplan"]], "BuildingPlan.ToString": [[286, "buildingplan-tostring"]], "BuildingPlan.add_step": [[287, "buildingplan-add-step"]], "BuildingPlan.copy": [[288, "buildingplan-copy"]], "BuildingPlan.from_json": [[289, "buildingplan-from-json"]], "BuildingPlan.from_jsonstring": [[290, "buildingplan-from-jsonstring"]], "BuildingPlan.sha256": [[291, "buildingplan-sha256"]], "BuildingPlan.to_json": [[292, "buildingplan-to-json"]], "BuildingPlan.to_jsonstring": [[293, "buildingplan-to-jsonstring"]], "BuildingPlan.validate_data": [[294, "buildingplan-validate-data"]], "SimpleSequenceGenerator": [[295, "simplesequencegenerator"]], "Step": [[296, "step"]], "Step.ToString": [[297, "step-tostring"]], "Step.copy": [[298, "step-copy"]], "Step.from_json": [[299, "step-from-json"]], "Step.from_jsonstring": [[300, "step-from-jsonstring"]], "Step.sha256": [[301, "step-sha256"]], "Step.to_json": [[302, "step-to-json"]], "Step.to_jsonstring": [[303, "step-to-jsonstring"]], "Step.transform": [[304, "step-transform"]], "Step.validate_data": [[305, "step-validate-data"]], "Citing": [[307, "citing"]], "Examples": [[308, "examples"], [318, "examples"]], "Timber Assembly Examples": [[308, "timber-assembly-examples"]], "Create Joint": [[309, "create-joint"]], "COMPAS TIMBER": [[310, "compas-timber"]], "Dependencies": [[310, "dependencies"]], "Table of Contents": [[310, "table-of-contents"]], "Indices and tables": [[310, "indices-and-tables"]], "Installation": [[311, "installation"]], "Stable": [[311, "stable"]], "Install with pip": [[311, "install-with-pip"]], "Development": [[311, "development"]], "License": [[312, "license"]], "Grasshopper plugin": [[313, "grasshopper-plugin"]], "BTLx Contribution Guide": [[314, "btlx-contribution-guide"]], "Assembly": [[315, "assembly"]], "Attributes": [[316, "attributes"]], "Features": [[319, "features"]], "Joints": [[320, "joints"]], "Joint Topologies": [[320, "joint-topologies"]], "Joint components": [[320, "joint-components"]], "T-Butt": [[320, "t-butt"]], "L-Butt": [[320, "l-butt"]], "L-Miter": [[320, "l-miter"]], "AutomaticJoint wizzard": [[320, "automaticjoint-wizzard"]], "Show": [[321, "show"]], "Utils": [[322, "utils"]], "Bake with BoxMap": [[322, "bake-with-boxmap"]], "Workflow": [[323, "workflow"]]}, "indexentries": {"timberassembly (class in compas_timber.assembly)": [[9, "compas_timber.assembly.TimberAssembly"]], "tostring() (compas_timber.assembly.timberassembly method)": [[10, "compas_timber.assembly.TimberAssembly.ToString"]], "add_beam() (compas_timber.assembly.timberassembly method)": [[11, "compas_timber.assembly.TimberAssembly.add_beam"]], "add_connection() (compas_timber.assembly.timberassembly method)": [[12, "compas_timber.assembly.TimberAssembly.add_connection"]], "add_joint() (compas_timber.assembly.timberassembly method)": [[13, "compas_timber.assembly.TimberAssembly.add_joint"]], "add_part() (compas_timber.assembly.timberassembly method)": [[14, "compas_timber.assembly.TimberAssembly.add_part"]], "are_parts_joined() (compas_timber.assembly.timberassembly method)": [[15, "compas_timber.assembly.TimberAssembly.are_parts_joined"]], "connections() (compas_timber.assembly.timberassembly method)": [[16, "compas_timber.assembly.TimberAssembly.connections"]], "contains() (compas_timber.assembly.timberassembly method)": [[17, "compas_timber.assembly.TimberAssembly.contains"]], "copy() (compas_timber.assembly.timberassembly method)": [[18, "compas_timber.assembly.TimberAssembly.copy"]], "delete_connection() (compas_timber.assembly.timberassembly method)": [[19, "compas_timber.assembly.TimberAssembly.delete_connection"]], "delete_part() (compas_timber.assembly.timberassembly method)": [[20, "compas_timber.assembly.TimberAssembly.delete_part"]], "find() (compas_timber.assembly.timberassembly method)": [[21, "compas_timber.assembly.TimberAssembly.find"]], "find_by_key() (compas_timber.assembly.timberassembly method)": [[22, "compas_timber.assembly.TimberAssembly.find_by_key"]], "from_json() (compas_timber.assembly.timberassembly class method)": [[23, "compas_timber.assembly.TimberAssembly.from_json"]], "from_jsonstring() (compas_timber.assembly.timberassembly class method)": [[24, "compas_timber.assembly.TimberAssembly.from_jsonstring"]], "parts() (compas_timber.assembly.timberassembly method)": [[25, "compas_timber.assembly.TimberAssembly.parts"]], "remove_joint() (compas_timber.assembly.timberassembly method)": [[26, "compas_timber.assembly.TimberAssembly.remove_joint"]], "rotate() (compas_timber.assembly.timberassembly method)": [[27, "compas_timber.assembly.TimberAssembly.rotate"]], "rotated() (compas_timber.assembly.timberassembly method)": [[28, "compas_timber.assembly.TimberAssembly.rotated"]], "scale() (compas_timber.assembly.timberassembly method)": [[29, "compas_timber.assembly.TimberAssembly.scale"]], "scaled() (compas_timber.assembly.timberassembly method)": [[30, "compas_timber.assembly.TimberAssembly.scaled"]], "set_topologies() (compas_timber.assembly.timberassembly method)": [[31, "compas_timber.assembly.TimberAssembly.set_topologies"]], "sha256() (compas_timber.assembly.timberassembly method)": [[32, "compas_timber.assembly.TimberAssembly.sha256"]], "to_json() (compas_timber.assembly.timberassembly method)": [[33, "compas_timber.assembly.TimberAssembly.to_json"]], "to_jsonstring() (compas_timber.assembly.timberassembly method)": [[34, "compas_timber.assembly.TimberAssembly.to_jsonstring"]], "transform() (compas_timber.assembly.timberassembly method)": [[35, "compas_timber.assembly.TimberAssembly.transform"]], "transform_numpy() (compas_timber.assembly.timberassembly method)": [[36, "compas_timber.assembly.TimberAssembly.transform_numpy"]], "transformed() (compas_timber.assembly.timberassembly method)": [[37, "compas_timber.assembly.TimberAssembly.transformed"]], "transformed_numpy() (compas_timber.assembly.timberassembly method)": [[38, "compas_timber.assembly.TimberAssembly.transformed_numpy"]], "translate() (compas_timber.assembly.timberassembly method)": [[39, "compas_timber.assembly.TimberAssembly.translate"]], "translated() (compas_timber.assembly.timberassembly method)": [[40, "compas_timber.assembly.TimberAssembly.translated"]], "validate_data() (compas_timber.assembly.timberassembly class method)": [[41, "compas_timber.assembly.TimberAssembly.validate_data"]], "beamjoinningerror": [[42, "compas_timber.connections.BeamJoinningError"]], "connectionsolver (class in compas_timber.connections)": [[43, "compas_timber.connections.ConnectionSolver"]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[44, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs"]], "find_topology() (compas_timber.connections.connectionsolver method)": [[45, "compas_timber.connections.ConnectionSolver.find_topology"]], "frenchridgelapjoint (class in compas_timber.connections)": [[46, "compas_timber.connections.FrenchRidgeLapJoint"]], "tostring() (compas_timber.connections.frenchridgelapjoint method)": [[47, "compas_timber.connections.FrenchRidgeLapJoint.ToString"]], "add_features() (compas_timber.connections.frenchridgelapjoint method)": [[48, "compas_timber.connections.FrenchRidgeLapJoint.add_features"]], "check_geometry() (compas_timber.connections.frenchridgelapjoint method)": [[49, "compas_timber.connections.FrenchRidgeLapJoint.check_geometry"]], "copy() (compas_timber.connections.frenchridgelapjoint method)": [[50, "compas_timber.connections.FrenchRidgeLapJoint.copy"]], "create() (compas_timber.connections.frenchridgelapjoint class method)": [[51, "compas_timber.connections.FrenchRidgeLapJoint.create"]], "from_json() (compas_timber.connections.frenchridgelapjoint class method)": [[52, "compas_timber.connections.FrenchRidgeLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.frenchridgelapjoint class method)": [[53, "compas_timber.connections.FrenchRidgeLapJoint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.frenchridgelapjoint method)": [[54, "compas_timber.connections.FrenchRidgeLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.frenchridgelapjoint method)": [[55, "compas_timber.connections.FrenchRidgeLapJoint.sha256"]], "to_json() (compas_timber.connections.frenchridgelapjoint method)": [[56, "compas_timber.connections.FrenchRidgeLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.frenchridgelapjoint method)": [[57, "compas_timber.connections.FrenchRidgeLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.frenchridgelapjoint class method)": [[58, "compas_timber.connections.FrenchRidgeLapJoint.validate_data"]], "joint (class in compas_timber.connections)": [[59, "compas_timber.connections.Joint"]], "tostring() (compas_timber.connections.joint method)": [[60, "compas_timber.connections.Joint.ToString"]], "add_features() (compas_timber.connections.joint method)": [[61, "compas_timber.connections.Joint.add_features"]], "copy() (compas_timber.connections.joint method)": [[62, "compas_timber.connections.Joint.copy"]], "create() (compas_timber.connections.joint class method)": [[63, "compas_timber.connections.Joint.create"]], "from_json() (compas_timber.connections.joint class method)": [[64, "compas_timber.connections.Joint.from_json"]], "from_jsonstring() (compas_timber.connections.joint class method)": [[65, "compas_timber.connections.Joint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[66, "compas_timber.connections.Joint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.joint method)": [[67, "compas_timber.connections.Joint.sha256"]], "to_json() (compas_timber.connections.joint method)": [[68, "compas_timber.connections.Joint.to_json"]], "to_jsonstring() (compas_timber.connections.joint method)": [[69, "compas_timber.connections.Joint.to_jsonstring"]], "validate_data() (compas_timber.connections.joint class method)": [[70, "compas_timber.connections.Joint.validate_data"]], "jointtopology (class in compas_timber.connections)": [[71, "compas_timber.connections.JointTopology"]], "get_name() (compas_timber.connections.jointtopology class method)": [[72, "compas_timber.connections.JointTopology.get_name"]], "lbuttjoint (class in compas_timber.connections)": [[73, "compas_timber.connections.LButtJoint"]], "tostring() (compas_timber.connections.lbuttjoint method)": [[74, "compas_timber.connections.LButtJoint.ToString"]], "add_features() (compas_timber.connections.lbuttjoint method)": [[75, "compas_timber.connections.LButtJoint.add_features"]], "copy() (compas_timber.connections.lbuttjoint method)": [[76, "compas_timber.connections.LButtJoint.copy"]], "create() (compas_timber.connections.lbuttjoint class method)": [[77, "compas_timber.connections.LButtJoint.create"]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[78, "compas_timber.connections.LButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[79, "compas_timber.connections.LButtJoint.from_jsonstring"]], "get_cross_cutting_plane() (compas_timber.connections.lbuttjoint method)": [[80, "compas_timber.connections.LButtJoint.get_cross_cutting_plane"]], "get_main_cutting_plane() (compas_timber.connections.lbuttjoint method)": [[81, "compas_timber.connections.LButtJoint.get_main_cutting_plane"]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[82, "compas_timber.connections.LButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lbuttjoint method)": [[83, "compas_timber.connections.LButtJoint.sha256"]], "to_json() (compas_timber.connections.lbuttjoint method)": [[84, "compas_timber.connections.LButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lbuttjoint method)": [[85, "compas_timber.connections.LButtJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lbuttjoint class method)": [[86, "compas_timber.connections.LButtJoint.validate_data"]], "lhalflapjoint (class in compas_timber.connections)": [[87, "compas_timber.connections.LHalfLapJoint"]], "tostring() (compas_timber.connections.lhalflapjoint method)": [[88, "compas_timber.connections.LHalfLapJoint.ToString"]], "add_features() (compas_timber.connections.lhalflapjoint method)": [[89, "compas_timber.connections.LHalfLapJoint.add_features"]], "copy() (compas_timber.connections.lhalflapjoint method)": [[90, "compas_timber.connections.LHalfLapJoint.copy"]], "create() (compas_timber.connections.lhalflapjoint class method)": [[91, "compas_timber.connections.LHalfLapJoint.create"]], "from_json() (compas_timber.connections.lhalflapjoint class method)": [[92, "compas_timber.connections.LHalfLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lhalflapjoint class method)": [[93, "compas_timber.connections.LHalfLapJoint.from_jsonstring"]], "get_cross_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[94, "compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame"]], "get_main_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[95, "compas_timber.connections.LHalfLapJoint.get_main_cutting_frame"]], "restore_beams_from_keys() (compas_timber.connections.lhalflapjoint method)": [[96, "compas_timber.connections.LHalfLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lhalflapjoint method)": [[97, "compas_timber.connections.LHalfLapJoint.sha256"]], "to_json() (compas_timber.connections.lhalflapjoint method)": [[98, "compas_timber.connections.LHalfLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lhalflapjoint method)": [[99, "compas_timber.connections.LHalfLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lhalflapjoint class method)": [[100, "compas_timber.connections.LHalfLapJoint.validate_data"]], "lmiterjoint (class in compas_timber.connections)": [[101, "compas_timber.connections.LMiterJoint"]], "tostring() (compas_timber.connections.lmiterjoint method)": [[102, "compas_timber.connections.LMiterJoint.ToString"]], "add_features() (compas_timber.connections.lmiterjoint method)": [[103, "compas_timber.connections.LMiterJoint.add_features"]], "copy() (compas_timber.connections.lmiterjoint method)": [[104, "compas_timber.connections.LMiterJoint.copy"]], "create() (compas_timber.connections.lmiterjoint class method)": [[105, "compas_timber.connections.LMiterJoint.create"]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[106, "compas_timber.connections.LMiterJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[107, "compas_timber.connections.LMiterJoint.from_jsonstring"]], "get_cutting_planes() (compas_timber.connections.lmiterjoint method)": [[108, "compas_timber.connections.LMiterJoint.get_cutting_planes"]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[109, "compas_timber.connections.LMiterJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lmiterjoint method)": [[110, "compas_timber.connections.LMiterJoint.sha256"]], "to_json() (compas_timber.connections.lmiterjoint method)": [[111, "compas_timber.connections.LMiterJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lmiterjoint method)": [[112, "compas_timber.connections.LMiterJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lmiterjoint class method)": [[113, "compas_timber.connections.LMiterJoint.validate_data"]], "lapjoint (class in compas_timber.connections)": [[114, "compas_timber.connections.LapJoint"]], "tostring() (compas_timber.connections.lapjoint method)": [[115, "compas_timber.connections.LapJoint.ToString"]], "add_features() (compas_timber.connections.lapjoint method)": [[116, "compas_timber.connections.LapJoint.add_features"]], "copy() (compas_timber.connections.lapjoint method)": [[117, "compas_timber.connections.LapJoint.copy"]], "create() (compas_timber.connections.lapjoint class method)": [[118, "compas_timber.connections.LapJoint.create"]], "from_json() (compas_timber.connections.lapjoint class method)": [[119, "compas_timber.connections.LapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lapjoint class method)": [[120, "compas_timber.connections.LapJoint.from_jsonstring"]], "get_cross_cutting_frame() (compas_timber.connections.lapjoint method)": [[121, "compas_timber.connections.LapJoint.get_cross_cutting_frame"]], "get_main_cutting_frame() (compas_timber.connections.lapjoint method)": [[122, "compas_timber.connections.LapJoint.get_main_cutting_frame"]], "restore_beams_from_keys() (compas_timber.connections.lapjoint method)": [[123, "compas_timber.connections.LapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lapjoint method)": [[124, "compas_timber.connections.LapJoint.sha256"]], "to_json() (compas_timber.connections.lapjoint method)": [[125, "compas_timber.connections.LapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lapjoint method)": [[126, "compas_timber.connections.LapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lapjoint class method)": [[127, "compas_timber.connections.LapJoint.validate_data"]], "tbuttjoint (class in compas_timber.connections)": [[128, "compas_timber.connections.TButtJoint"]], "tostring() (compas_timber.connections.tbuttjoint method)": [[129, "compas_timber.connections.TButtJoint.ToString"]], "add_features() (compas_timber.connections.tbuttjoint method)": [[130, "compas_timber.connections.TButtJoint.add_features"]], "copy() (compas_timber.connections.tbuttjoint method)": [[131, "compas_timber.connections.TButtJoint.copy"]], "create() (compas_timber.connections.tbuttjoint class method)": [[132, "compas_timber.connections.TButtJoint.create"]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[133, "compas_timber.connections.TButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[134, "compas_timber.connections.TButtJoint.from_jsonstring"]], "get_cutting_plane() (compas_timber.connections.tbuttjoint method)": [[135, "compas_timber.connections.TButtJoint.get_cutting_plane"]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[136, "compas_timber.connections.TButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.tbuttjoint method)": [[137, "compas_timber.connections.TButtJoint.sha256"]], "to_json() (compas_timber.connections.tbuttjoint method)": [[138, "compas_timber.connections.TButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.tbuttjoint method)": [[139, "compas_timber.connections.TButtJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.tbuttjoint class method)": [[140, "compas_timber.connections.TButtJoint.validate_data"]], "thalflapjoint (class in compas_timber.connections)": [[141, "compas_timber.connections.THalfLapJoint"]], "tostring() (compas_timber.connections.thalflapjoint method)": [[142, "compas_timber.connections.THalfLapJoint.ToString"]], "add_features() (compas_timber.connections.thalflapjoint method)": [[143, "compas_timber.connections.THalfLapJoint.add_features"]], "copy() (compas_timber.connections.thalflapjoint method)": [[144, "compas_timber.connections.THalfLapJoint.copy"]], "create() (compas_timber.connections.thalflapjoint class method)": [[145, "compas_timber.connections.THalfLapJoint.create"]], "from_json() (compas_timber.connections.thalflapjoint class method)": [[146, "compas_timber.connections.THalfLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.thalflapjoint class method)": [[147, "compas_timber.connections.THalfLapJoint.from_jsonstring"]], "get_cross_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[148, "compas_timber.connections.THalfLapJoint.get_cross_cutting_frame"]], "get_main_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[149, "compas_timber.connections.THalfLapJoint.get_main_cutting_frame"]], "restore_beams_from_keys() (compas_timber.connections.thalflapjoint method)": [[150, "compas_timber.connections.THalfLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.thalflapjoint method)": [[151, "compas_timber.connections.THalfLapJoint.sha256"]], "to_json() (compas_timber.connections.thalflapjoint method)": [[152, "compas_timber.connections.THalfLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.thalflapjoint method)": [[153, "compas_timber.connections.THalfLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.thalflapjoint class method)": [[154, "compas_timber.connections.THalfLapJoint.validate_data"]], "xhalflapjoint (class in compas_timber.connections)": [[155, "compas_timber.connections.XHalfLapJoint"]], "tostring() (compas_timber.connections.xhalflapjoint method)": [[156, "compas_timber.connections.XHalfLapJoint.ToString"]], "add_features() (compas_timber.connections.xhalflapjoint method)": [[157, "compas_timber.connections.XHalfLapJoint.add_features"]], "copy() (compas_timber.connections.xhalflapjoint method)": [[158, "compas_timber.connections.XHalfLapJoint.copy"]], "create() (compas_timber.connections.xhalflapjoint class method)": [[159, "compas_timber.connections.XHalfLapJoint.create"]], "from_json() (compas_timber.connections.xhalflapjoint class method)": [[160, "compas_timber.connections.XHalfLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.xhalflapjoint class method)": [[161, "compas_timber.connections.XHalfLapJoint.from_jsonstring"]], "get_cross_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[162, "compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame"]], "get_main_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[163, "compas_timber.connections.XHalfLapJoint.get_main_cutting_frame"]], "restore_beams_from_keys() (compas_timber.connections.xhalflapjoint method)": [[164, "compas_timber.connections.XHalfLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.xhalflapjoint method)": [[165, "compas_timber.connections.XHalfLapJoint.sha256"]], "to_json() (compas_timber.connections.xhalflapjoint method)": [[166, "compas_timber.connections.XHalfLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.xhalflapjoint method)": [[167, "compas_timber.connections.XHalfLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.xhalflapjoint class method)": [[168, "compas_timber.connections.XHalfLapJoint.validate_data"]], "beam_side_incidence() (in module compas_timber.connections)": [[169, "compas_timber.connections.beam_side_incidence"]], "find_neighboring_beams() (in module compas_timber.connections)": [[170, "compas_timber.connections.find_neighboring_beams"]], "beamgeometry (class in compas_timber.consumers)": [[171, "compas_timber.consumers.BeamGeometry"]], "brepgeometryconsumer (class in compas_timber.consumers)": [[172, "compas_timber.consumers.BrepGeometryConsumer"]], "cutfeature (class in compas_timber.consumers)": [[173, "compas_timber.consumers.CutFeature"]], "tostring() (compas_timber.consumers.cutfeature method)": [[174, "compas_timber.consumers.CutFeature.ToString"]], "copy() (compas_timber.consumers.cutfeature method)": [[175, "compas_timber.consumers.CutFeature.copy"]], "from_json() (compas_timber.consumers.cutfeature class method)": [[176, "compas_timber.consumers.CutFeature.from_json"]], "from_jsonstring() (compas_timber.consumers.cutfeature class method)": [[177, "compas_timber.consumers.CutFeature.from_jsonstring"]], "sha256() (compas_timber.consumers.cutfeature method)": [[178, "compas_timber.consumers.CutFeature.sha256"]], "to_json() (compas_timber.consumers.cutfeature method)": [[179, "compas_timber.consumers.CutFeature.to_json"]], "to_jsonstring() (compas_timber.consumers.cutfeature method)": [[180, "compas_timber.consumers.CutFeature.to_jsonstring"]], "validate_data() (compas_timber.consumers.cutfeature class method)": [[181, "compas_timber.consumers.CutFeature.validate_data"]], "cutfeaturegeometry (class in compas_timber.consumers)": [[182, "compas_timber.consumers.CutFeatureGeometry"]], "apply() (compas_timber.consumers.cutfeaturegeometry method)": [[183, "compas_timber.consumers.CutFeatureGeometry.apply"]], "drillfeature (class in compas_timber.consumers)": [[184, "compas_timber.consumers.DrillFeature"]], "tostring() (compas_timber.consumers.drillfeature method)": [[185, "compas_timber.consumers.DrillFeature.ToString"]], "copy() (compas_timber.consumers.drillfeature method)": [[186, "compas_timber.consumers.DrillFeature.copy"]], "from_json() (compas_timber.consumers.drillfeature class method)": [[187, "compas_timber.consumers.DrillFeature.from_json"]], "from_jsonstring() (compas_timber.consumers.drillfeature class method)": [[188, "compas_timber.consumers.DrillFeature.from_jsonstring"]], "sha256() (compas_timber.consumers.drillfeature method)": [[189, "compas_timber.consumers.DrillFeature.sha256"]], "to_json() (compas_timber.consumers.drillfeature method)": [[190, "compas_timber.consumers.DrillFeature.to_json"]], "to_jsonstring() (compas_timber.consumers.drillfeature method)": [[191, "compas_timber.consumers.DrillFeature.to_jsonstring"]], "validate_data() (compas_timber.consumers.drillfeature class method)": [[192, "compas_timber.consumers.DrillFeature.validate_data"]], "drillfeaturegeometry (class in compas_timber.consumers)": [[193, "compas_timber.consumers.DrillFeatureGeometry"]], "apply() (compas_timber.consumers.drillfeaturegeometry method)": [[194, "compas_timber.consumers.DrillFeatureGeometry.apply"]], "featureapplicationerror": [[195, "compas_timber.consumers.FeatureApplicationError"]], "featureapplicator (class in compas_timber.consumers)": [[196, "compas_timber.consumers.FeatureApplicator"]], "apply() (compas_timber.consumers.featureapplicator method)": [[197, "compas_timber.consumers.FeatureApplicator.apply"]], "millvolume (class in compas_timber.consumers)": [[198, "compas_timber.consumers.MillVolume"]], "tostring() (compas_timber.consumers.millvolume method)": [[199, "compas_timber.consumers.MillVolume.ToString"]], "copy() (compas_timber.consumers.millvolume method)": [[200, "compas_timber.consumers.MillVolume.copy"]], "from_json() (compas_timber.consumers.millvolume class method)": [[201, "compas_timber.consumers.MillVolume.from_json"]], "from_jsonstring() (compas_timber.consumers.millvolume class method)": [[202, "compas_timber.consumers.MillVolume.from_jsonstring"]], "sha256() (compas_timber.consumers.millvolume method)": [[203, "compas_timber.consumers.MillVolume.sha256"]], "to_json() (compas_timber.consumers.millvolume method)": [[204, "compas_timber.consumers.MillVolume.to_json"]], "to_jsonstring() (compas_timber.consumers.millvolume method)": [[205, "compas_timber.consumers.MillVolume.to_jsonstring"]], "validate_data() (compas_timber.consumers.millvolume class method)": [[206, "compas_timber.consumers.MillVolume.validate_data"]], "millvolumegeometry (class in compas_timber.consumers)": [[207, "compas_timber.consumers.MillVolumeGeometry"]], "apply() (compas_timber.consumers.millvolumegeometry method)": [[208, "compas_timber.consumers.MillVolumeGeometry.apply"]], "btlx (class in compas_timber.fabrication)": [[209, "compas_timber.fabrication.BTLx"]], "btlx_string() (compas_timber.fabrication.btlx method)": [[210, "compas_timber.fabrication.BTLx.btlx_string"]], "process_assembly() (compas_timber.fabrication.btlx method)": [[211, "compas_timber.fabrication.BTLx.process_assembly"]], "register_joint() (compas_timber.fabrication.btlx class method)": [[212, "compas_timber.fabrication.BTLx.register_joint"]], "btlxfrenchridgelap (class in compas_timber.fabrication)": [[213, "compas_timber.fabrication.BTLxFrenchRidgeLap"]], "create_process() (compas_timber.fabrication.btlxfrenchridgelap class method)": [[214, "compas_timber.fabrication.BTLxFrenchRidgeLap.create_process"]], "get_params() (compas_timber.fabrication.btlxfrenchridgelap method)": [[215, "compas_timber.fabrication.BTLxFrenchRidgeLap.get_params"]], "process_joints() (compas_timber.fabrication.btlxfrenchridgelap method)": [[216, "compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints"]], "btlxjackcut (class in compas_timber.fabrication)": [[217, "compas_timber.fabrication.BTLxJackCut"]], "create_process() (compas_timber.fabrication.btlxjackcut class method)": [[218, "compas_timber.fabrication.BTLxJackCut.create_process"]], "generate_process() (compas_timber.fabrication.btlxjackcut method)": [[219, "compas_timber.fabrication.BTLxJackCut.generate_process"]], "btlxprocess (class in compas_timber.fabrication)": [[220, "compas_timber.fabrication.BTLxProcess"]], "frenchridgefactory (class in compas_timber.fabrication)": [[221, "compas_timber.fabrication.FrenchRidgeFactory"]], "apply_processings() (compas_timber.fabrication.frenchridgefactory class method)": [[222, "compas_timber.fabrication.FrenchRidgeFactory.apply_processings"]], "lbuttfactory (class in compas_timber.fabrication)": [[223, "compas_timber.fabrication.LButtFactory"]], "apply_processings() (compas_timber.fabrication.lbuttfactory class method)": [[224, "compas_timber.fabrication.LButtFactory.apply_processings"]], "lmiterfactory (class in compas_timber.fabrication)": [[225, "compas_timber.fabrication.LMiterFactory"]], "apply_processings() (compas_timber.fabrication.lmiterfactory class method)": [[226, "compas_timber.fabrication.LMiterFactory.apply_processings"]], "tbuttfactory (class in compas_timber.fabrication)": [[227, "compas_timber.fabrication.TButtFactory"]], "apply_processings() (compas_timber.fabrication.tbuttfactory class method)": [[228, "compas_timber.fabrication.TButtFactory.apply_processings"]], "categoryrule (class in compas_timber.ghpython)": [[229, "compas_timber.ghpython.CategoryRule"]], "tostring() (compas_timber.ghpython.categoryrule method)": [[230, "compas_timber.ghpython.CategoryRule.ToString"]], "comply() (compas_timber.ghpython.categoryrule method)": [[231, "compas_timber.ghpython.CategoryRule.comply"]], "reorder() (compas_timber.ghpython.categoryrule method)": [[232, "compas_timber.ghpython.CategoryRule.reorder"]], "debuginfomation (class in compas_timber.ghpython)": [[233, "compas_timber.ghpython.DebugInfomation"]], "tostring() (compas_timber.ghpython.debuginfomation method)": [[234, "compas_timber.ghpython.DebugInfomation.ToString"]], "add_feature_error() (compas_timber.ghpython.debuginfomation method)": [[235, "compas_timber.ghpython.DebugInfomation.add_feature_error"]], "add_joint_error() (compas_timber.ghpython.debuginfomation method)": [[236, "compas_timber.ghpython.DebugInfomation.add_joint_error"]], "directrule (class in compas_timber.ghpython)": [[237, "compas_timber.ghpython.DirectRule"]], "tostring() (compas_timber.ghpython.directrule method)": [[238, "compas_timber.ghpython.DirectRule.ToString"]], "comply() (compas_timber.ghpython.directrule method)": [[239, "compas_timber.ghpython.DirectRule.comply"]], "featuredefinition (class in compas_timber.ghpython)": [[240, "compas_timber.ghpython.FeatureDefinition"]], "tostring() (compas_timber.ghpython.featuredefinition method)": [[241, "compas_timber.ghpython.FeatureDefinition.ToString"]], "jointdefinition (class in compas_timber.ghpython)": [[242, "compas_timber.ghpython.JointDefinition"]], "tostring() (compas_timber.ghpython.jointdefinition method)": [[243, "compas_timber.ghpython.JointDefinition.ToString"]], "is_identical() (compas_timber.ghpython.jointdefinition method)": [[244, "compas_timber.ghpython.JointDefinition.is_identical"]], "match() (compas_timber.ghpython.jointdefinition method)": [[245, "compas_timber.ghpython.JointDefinition.match"]], "jointoptions (class in compas_timber.ghpython)": [[246, "compas_timber.ghpython.JointOptions"]], "tostring() (compas_timber.ghpython.jointoptions method)": [[247, "compas_timber.ghpython.JointOptions.ToString"]], "is_identical() (compas_timber.ghpython.jointoptions method)": [[248, "compas_timber.ghpython.JointOptions.is_identical"]], "topologyrule (class in compas_timber.ghpython)": [[249, "compas_timber.ghpython.TopologyRule"]], "tostring() (compas_timber.ghpython.topologyrule method)": [[250, "compas_timber.ghpython.TopologyRule.ToString"]], "comply() (compas_timber.ghpython.topologyrule method)": [[251, "compas_timber.ghpython.TopologyRule.comply"]], "beam (class in compas_timber.parts)": [[252, "compas_timber.parts.Beam"]], "tostring() (compas_timber.parts.beam method)": [[253, "compas_timber.parts.Beam.ToString"]], "add_blank_extension() (compas_timber.parts.beam method)": [[254, "compas_timber.parts.Beam.add_blank_extension"]], "add_feature() (compas_timber.parts.beam method)": [[255, "compas_timber.parts.Beam.add_feature"]], "add_features() (compas_timber.parts.beam method)": [[256, "compas_timber.parts.Beam.add_features"]], "align_z() (compas_timber.parts.beam method)": [[257, "compas_timber.parts.Beam.align_z"]], "clear_features() (compas_timber.parts.beam method)": [[258, "compas_timber.parts.Beam.clear_features"]], "copy() (compas_timber.parts.beam method)": [[259, "compas_timber.parts.Beam.copy"]], "endpoint_closest_to_point() (compas_timber.parts.beam method)": [[260, "compas_timber.parts.Beam.endpoint_closest_to_point"]], "extension_to_plane() (compas_timber.parts.beam method)": [[261, "compas_timber.parts.Beam.extension_to_plane"]], "from_centerline() (compas_timber.parts.beam class method)": [[262, "compas_timber.parts.Beam.from_centerline"]], "from_endpoints() (compas_timber.parts.beam class method)": [[263, "compas_timber.parts.Beam.from_endpoints"]], "from_json() (compas_timber.parts.beam class method)": [[264, "compas_timber.parts.Beam.from_json"]], "from_jsonstring() (compas_timber.parts.beam class method)": [[265, "compas_timber.parts.Beam.from_jsonstring"]], "get_geometry() (compas_timber.parts.beam method)": [[266, "compas_timber.parts.Beam.get_geometry"]], "remove_blank_extension() (compas_timber.parts.beam method)": [[267, "compas_timber.parts.Beam.remove_blank_extension"]], "remove_features() (compas_timber.parts.beam method)": [[268, "compas_timber.parts.Beam.remove_features"]], "rotate() (compas_timber.parts.beam method)": [[269, "compas_timber.parts.Beam.rotate"]], "rotated() (compas_timber.parts.beam method)": [[270, "compas_timber.parts.Beam.rotated"]], "scale() (compas_timber.parts.beam method)": [[271, "compas_timber.parts.Beam.scale"]], "scaled() (compas_timber.parts.beam method)": [[272, "compas_timber.parts.Beam.scaled"]], "sha256() (compas_timber.parts.beam method)": [[273, "compas_timber.parts.Beam.sha256"]], "to_json() (compas_timber.parts.beam method)": [[274, "compas_timber.parts.Beam.to_json"]], "to_jsonstring() (compas_timber.parts.beam method)": [[275, "compas_timber.parts.Beam.to_jsonstring"]], "transform() (compas_timber.parts.beam method)": [[276, "compas_timber.parts.Beam.transform"]], "transform_numpy() (compas_timber.parts.beam method)": [[277, "compas_timber.parts.Beam.transform_numpy"]], "transformed() (compas_timber.parts.beam method)": [[278, "compas_timber.parts.Beam.transformed"]], "transformed_numpy() (compas_timber.parts.beam method)": [[279, "compas_timber.parts.Beam.transformed_numpy"]], "translate() (compas_timber.parts.beam method)": [[280, "compas_timber.parts.Beam.translate"]], "translated() (compas_timber.parts.beam method)": [[281, "compas_timber.parts.Beam.translated"]], "validate_data() (compas_timber.parts.beam class method)": [[282, "compas_timber.parts.Beam.validate_data"]], "actor (class in compas_timber.planning)": [[283, "compas_timber.planning.Actor"]], "get_name() (compas_timber.planning.actor class method)": [[284, "compas_timber.planning.Actor.get_name"]], "buildingplan (class in compas_timber.planning)": [[285, "compas_timber.planning.BuildingPlan"]], "tostring() (compas_timber.planning.buildingplan method)": [[286, "compas_timber.planning.BuildingPlan.ToString"]], "add_step() (compas_timber.planning.buildingplan method)": [[287, "compas_timber.planning.BuildingPlan.add_step"]], "copy() (compas_timber.planning.buildingplan method)": [[288, "compas_timber.planning.BuildingPlan.copy"]], "from_json() (compas_timber.planning.buildingplan class method)": [[289, "compas_timber.planning.BuildingPlan.from_json"]], "from_jsonstring() (compas_timber.planning.buildingplan class method)": [[290, "compas_timber.planning.BuildingPlan.from_jsonstring"]], "sha256() (compas_timber.planning.buildingplan method)": [[291, "compas_timber.planning.BuildingPlan.sha256"]], "to_json() (compas_timber.planning.buildingplan method)": [[292, "compas_timber.planning.BuildingPlan.to_json"]], "to_jsonstring() (compas_timber.planning.buildingplan method)": [[293, "compas_timber.planning.BuildingPlan.to_jsonstring"]], "validate_data() (compas_timber.planning.buildingplan class method)": [[294, "compas_timber.planning.BuildingPlan.validate_data"]], "simplesequencegenerator (class in compas_timber.planning)": [[295, "compas_timber.planning.SimpleSequenceGenerator"]], "step (class in compas_timber.planning)": [[296, "compas_timber.planning.Step"]], "tostring() (compas_timber.planning.step method)": [[297, "compas_timber.planning.Step.ToString"]], "copy() (compas_timber.planning.step method)": [[298, "compas_timber.planning.Step.copy"]], "from_json() (compas_timber.planning.step class method)": [[299, "compas_timber.planning.Step.from_json"]], "from_jsonstring() (compas_timber.planning.step class method)": [[300, "compas_timber.planning.Step.from_jsonstring"]], "sha256() (compas_timber.planning.step method)": [[301, "compas_timber.planning.Step.sha256"]], "to_json() (compas_timber.planning.step method)": [[302, "compas_timber.planning.Step.to_json"]], "to_jsonstring() (compas_timber.planning.step method)": [[303, "compas_timber.planning.Step.to_jsonstring"]], "transform() (compas_timber.planning.step method)": [[304, "compas_timber.planning.Step.transform"]], "validate_data() (compas_timber.planning.step class method)": [[305, "compas_timber.planning.Step.validate_data"]], "find_neighboring_beams() (in module compas_timber.rhino)": [[306, "compas_timber.rhino.find_neighboring_beams"]]}})