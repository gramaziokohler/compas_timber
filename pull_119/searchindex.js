Search.setIndex({"docnames": ["api", "api/compas_timber", "api/compas_timber.assembly", "api/compas_timber.connections", "api/compas_timber.parts", "api/compas_timber.rhino", "api/generated/compas_timber.assembly.TimberAssembly", "api/generated/compas_timber.assembly.TimberAssembly.ToString", "api/generated/compas_timber.assembly.TimberAssembly.add_beam", "api/generated/compas_timber.assembly.TimberAssembly.add_connection", "api/generated/compas_timber.assembly.TimberAssembly.add_joint", "api/generated/compas_timber.assembly.TimberAssembly.add_part", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined", "api/generated/compas_timber.assembly.TimberAssembly.connections", "api/generated/compas_timber.assembly.TimberAssembly.contains", "api/generated/compas_timber.assembly.TimberAssembly.copy", "api/generated/compas_timber.assembly.TimberAssembly.find", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key", "api/generated/compas_timber.assembly.TimberAssembly.from_data", "api/generated/compas_timber.assembly.TimberAssembly.from_json", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.parts", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint", "api/generated/compas_timber.assembly.TimberAssembly.sha256", "api/generated/compas_timber.assembly.TimberAssembly.to_data", "api/generated/compas_timber.assembly.TimberAssembly.to_json", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.validate_json", "api/generated/compas_timber.assembly.TimberAssembly.validate_jsondata", "api/generated/compas_timber.assembly.TimberAssembly.validate_jsonstring", "api/generated/compas_timber.connections.BeamJoinningError", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.from_data", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.from_jsonstring", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_data", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.to_jsonstring", "api/generated/compas_timber.connections.Joint.validate_json", "api/generated/compas_timber.connections.Joint.validate_jsondata", "api/generated/compas_timber.connections.Joint.validate_jsonstring", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.from_data", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.to_data", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring", "api/generated/compas_timber.connections.LButtJoint.validate_json", "api/generated/compas_timber.connections.LButtJoint.validate_jsondata", "api/generated/compas_timber.connections.LButtJoint.validate_jsonstring", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.from_data", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_data", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.validate_json", "api/generated/compas_timber.connections.LMiterJoint.validate_jsondata", "api/generated/compas_timber.connections.LMiterJoint.validate_jsonstring", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.from_data", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.to_data", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring", "api/generated/compas_timber.connections.TButtJoint.validate_json", "api/generated/compas_timber.connections.TButtJoint.validate_jsondata", "api/generated/compas_timber.connections.TButtJoint.validate_jsonstring", "api/generated/compas_timber.connections.find_neighboring_beams", "api/generated/compas_timber.parts.Beam", "api/generated/compas_timber.parts.Beam.ToString", "api/generated/compas_timber.parts.Beam.add_feature", "api/generated/compas_timber.parts.Beam.align_z", "api/generated/compas_timber.parts.Beam.apply_features", "api/generated/compas_timber.parts.Beam.clear_features", "api/generated/compas_timber.parts.Beam.copy", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point", "api/generated/compas_timber.parts.Beam.extend_ends", "api/generated/compas_timber.parts.Beam.extension_to_plane", "api/generated/compas_timber.parts.Beam.from_brep", "api/generated/compas_timber.parts.Beam.from_centerline", "api/generated/compas_timber.parts.Beam.from_data", "api/generated/compas_timber.parts.Beam.from_endpoints", "api/generated/compas_timber.parts.Beam.from_json", "api/generated/compas_timber.parts.Beam.from_jsonstring", "api/generated/compas_timber.parts.Beam.get_geometry", "api/generated/compas_timber.parts.Beam.is_identical", "api/generated/compas_timber.parts.Beam.move_endpoint", "api/generated/compas_timber.parts.Beam.sha256", "api/generated/compas_timber.parts.Beam.to_data", "api/generated/compas_timber.parts.Beam.to_json", "api/generated/compas_timber.parts.Beam.to_jsonstring", "api/generated/compas_timber.parts.Beam.update_beam_geometry", "api/generated/compas_timber.parts.Beam.validate_json", "api/generated/compas_timber.parts.Beam.validate_jsondata", "api/generated/compas_timber.parts.Beam.validate_jsonstring", "api/generated/compas_timber.rhino.find_neighboring_beams", "citing", "examples", "examples/create_joint", "index", "installation", "installation/installation_dev", "installation/installation_manual", "installation/installation_quick", "license", "tutorials", "tutorials/grasshopper/assembly", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beam", "tutorials/grasshopper/examples", "tutorials/grasshopper/features", "tutorials/grasshopper/joints", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "filenames": ["api.rst", "api/compas_timber.rst", "api/compas_timber.assembly.rst", "api/compas_timber.connections.rst", "api/compas_timber.parts.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.assembly.TimberAssembly.rst", "api/generated/compas_timber.assembly.TimberAssembly.ToString.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_beam.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined.rst", "api/generated/compas_timber.assembly.TimberAssembly.connections.rst", "api/generated/compas_timber.assembly.TimberAssembly.contains.rst", "api/generated/compas_timber.assembly.TimberAssembly.copy.rst", "api/generated/compas_timber.assembly.TimberAssembly.find.rst", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_data.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.parts.rst", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.sha256.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_data.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.validate_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.validate_jsondata.rst", "api/generated/compas_timber.assembly.TimberAssembly.validate_jsonstring.rst", "api/generated/compas_timber.connections.BeamJoinningError.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.from_data.rst", "api/generated/compas_timber.connections.Joint.from_json.rst", "api/generated/compas_timber.connections.Joint.from_jsonstring.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_data.rst", "api/generated/compas_timber.connections.Joint.to_json.rst", "api/generated/compas_timber.connections.Joint.to_jsonstring.rst", "api/generated/compas_timber.connections.Joint.validate_json.rst", "api/generated/compas_timber.connections.Joint.validate_jsondata.rst", "api/generated/compas_timber.connections.Joint.validate_jsonstring.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.from_data.rst", "api/generated/compas_timber.connections.LButtJoint.from_json.rst", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.to_data.rst", "api/generated/compas_timber.connections.LButtJoint.to_json.rst", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.validate_json.rst", "api/generated/compas_timber.connections.LButtJoint.validate_jsondata.rst", "api/generated/compas_timber.connections.LButtJoint.validate_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.from_data.rst", "api/generated/compas_timber.connections.LMiterJoint.from_json.rst", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_data.rst", "api/generated/compas_timber.connections.LMiterJoint.to_json.rst", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_json.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_jsondata.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.from_data.rst", "api/generated/compas_timber.connections.TButtJoint.from_json.rst", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.to_data.rst", "api/generated/compas_timber.connections.TButtJoint.to_json.rst", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.validate_json.rst", "api/generated/compas_timber.connections.TButtJoint.validate_jsondata.rst", "api/generated/compas_timber.connections.TButtJoint.validate_jsonstring.rst", "api/generated/compas_timber.connections.find_neighboring_beams.rst", "api/generated/compas_timber.parts.Beam.rst", "api/generated/compas_timber.parts.Beam.ToString.rst", "api/generated/compas_timber.parts.Beam.add_feature.rst", "api/generated/compas_timber.parts.Beam.align_z.rst", "api/generated/compas_timber.parts.Beam.apply_features.rst", "api/generated/compas_timber.parts.Beam.clear_features.rst", "api/generated/compas_timber.parts.Beam.copy.rst", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.parts.Beam.extend_ends.rst", "api/generated/compas_timber.parts.Beam.extension_to_plane.rst", "api/generated/compas_timber.parts.Beam.from_brep.rst", "api/generated/compas_timber.parts.Beam.from_centerline.rst", "api/generated/compas_timber.parts.Beam.from_data.rst", "api/generated/compas_timber.parts.Beam.from_endpoints.rst", "api/generated/compas_timber.parts.Beam.from_json.rst", "api/generated/compas_timber.parts.Beam.from_jsonstring.rst", "api/generated/compas_timber.parts.Beam.get_geometry.rst", "api/generated/compas_timber.parts.Beam.is_identical.rst", "api/generated/compas_timber.parts.Beam.move_endpoint.rst", "api/generated/compas_timber.parts.Beam.sha256.rst", "api/generated/compas_timber.parts.Beam.to_data.rst", "api/generated/compas_timber.parts.Beam.to_json.rst", "api/generated/compas_timber.parts.Beam.to_jsonstring.rst", "api/generated/compas_timber.parts.Beam.update_beam_geometry.rst", "api/generated/compas_timber.parts.Beam.validate_json.rst", "api/generated/compas_timber.parts.Beam.validate_jsondata.rst", "api/generated/compas_timber.parts.Beam.validate_jsonstring.rst", "api/generated/compas_timber.rhino.find_neighboring_beams.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "installation/installation_dev.rst", "installation/installation_manual.rst", "installation/installation_quick.rst", "license.rst", "tutorials.rst", "tutorials/grasshopper/assembly.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beam.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joints.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "titles": ["API Reference", "compas_timber", "assembly", "connections", "parts", "rhino", "TimberAssembly", "TimberAssembly.ToString", "TimberAssembly.add_beam", "TimberAssembly.add_connection", "TimberAssembly.add_joint", "TimberAssembly.add_part", "TimberAssembly.are_parts_joined", "TimberAssembly.connections", "TimberAssembly.contains", "TimberAssembly.copy", "TimberAssembly.find", "TimberAssembly.find_by_key", "TimberAssembly.from_data", "TimberAssembly.from_json", "TimberAssembly.from_jsonstring", "TimberAssembly.parts", "TimberAssembly.remove_joint", "TimberAssembly.sha256", "TimberAssembly.to_data", "TimberAssembly.to_json", "TimberAssembly.to_jsonstring", "TimberAssembly.validate_json", "TimberAssembly.validate_jsondata", "TimberAssembly.validate_jsonstring", "BeamJoinningError", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "Joint", "Joint.ToString", "Joint.add_features", "Joint.copy", "Joint.create", "Joint.from_data", "Joint.from_json", "Joint.from_jsonstring", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_data", "Joint.to_json", "Joint.to_jsonstring", "Joint.validate_json", "Joint.validate_jsondata", "Joint.validate_jsonstring", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_features", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.from_data", "LButtJoint.from_json", "LButtJoint.from_jsonstring", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.to_data", "LButtJoint.to_json", "LButtJoint.to_jsonstring", "LButtJoint.validate_json", "LButtJoint.validate_jsondata", "LButtJoint.validate_jsonstring", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_features", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.from_data", "LMiterJoint.from_json", "LMiterJoint.from_jsonstring", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_data", "LMiterJoint.to_json", "LMiterJoint.to_jsonstring", "LMiterJoint.validate_json", "LMiterJoint.validate_jsondata", "LMiterJoint.validate_jsonstring", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_features", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.from_data", "TButtJoint.from_json", "TButtJoint.from_jsonstring", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.to_data", "TButtJoint.to_json", "TButtJoint.to_jsonstring", "TButtJoint.validate_json", "TButtJoint.validate_jsondata", "TButtJoint.validate_jsonstring", "find_neighboring_beams", "Beam", "Beam.ToString", "Beam.add_feature", "Beam.align_z", "Beam.apply_features", "Beam.clear_features", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extend_ends", "Beam.extension_to_plane", "Beam.from_brep", "Beam.from_centerline", "Beam.from_data", "Beam.from_endpoints", "Beam.from_json", "Beam.from_jsonstring", "Beam.get_geometry", "Beam.is_identical", "Beam.move_endpoint", "Beam.sha256", "Beam.to_data", "Beam.to_json", "Beam.to_jsonstring", "Beam.update_beam_geometry", "Beam.validate_json", "Beam.validate_jsondata", "Beam.validate_jsonstring", "find_neighboring_beams", "Citing", "Examples", "Create Joint", "COMPAS TIMBER", "Installation", "Manual installation for developers", "Manual installation", "Quick installation", "License", "Grasshopper plugin", "Assembly", "Attributes", "Beam", "Examples", "Features", "Joints", "Show", "Utils", "Workflow"], "terms": {"compas_timb": [0, 6, 30, 31, 34, 38, 42, 50, 52, 56, 68, 72, 84, 88, 100, 101, 128, 129, 132, 135, 136], "assembli": [1, 6, 8, 9, 10, 11, 14, 16, 17, 21, 22, 38, 42, 52, 56, 60, 68, 72, 76, 84, 88, 92, 131, 132, 138, 144, 145, 147], "part": [1, 6, 9, 10, 11, 12, 13, 16, 17, 42, 101, 117, 128, 132, 141, 143, 145], "connect": [1, 7, 9, 30, 31, 34, 35, 38, 42, 50, 52, 53, 56, 68, 69, 72, 84, 85, 88, 100, 102, 132, 137, 139, 144], "rhino": [1, 7, 35, 53, 69, 85, 100, 102, 128, 130, 132, 134, 136, 140, 141, 146], "thi": [2, 6, 7, 8, 14, 15, 16, 18, 19, 20, 22, 34, 35, 36, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 69, 70, 71, 72, 73, 74, 75, 84, 85, 86, 87, 88, 89, 90, 91, 100, 101, 102, 103, 105, 106, 107, 110, 112, 114, 115, 116, 118, 128, 130, 132, 134, 135, 136, 137, 140, 141, 145, 147], "place": [2, 7, 35, 53, 69, 85, 102], "tool": [2, 3, 31, 132, 138, 141, 145, 146], "plan": 2, "fabric": [2, 129, 132], "process": [2, 132, 138, 147], "e": [2, 33, 42, 130, 134, 140, 144, 145, 146], "g": [2, 33, 42, 130, 134, 140], "defin": [2, 12, 36, 112, 140, 141, 144, 146, 147], "grip": 2, "plane": [2, 68, 86, 110, 141, 143, 146], "insert": 2, "path": [2, 19, 25, 27, 40, 45, 47, 58, 63, 65, 74, 79, 81, 90, 95, 97, 115, 122, 125, 134], "sequenc": [2, 132], "etc": [2, 6, 101, 130, 132, 141], "ar": [3, 7, 9, 16, 32, 33, 35, 38, 42, 53, 56, 69, 72, 85, 88, 100, 102, 105, 106, 118, 130, 133, 139, 140, 143, 144, 145, 146, 147], "collect": [3, 11, 128], "gener": [3, 33, 147], "joint": [3, 6, 10, 12, 22, 31, 50, 52, 54, 56, 68, 70, 72, 84, 86, 88, 130, 132, 138, 139, 141, 145, 147], "geometri": [3, 101, 103, 105, 109, 112, 114, 117, 124, 128, 132, 138, 139, 141, 143, 145, 146, 147], "The": [4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 34, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 52, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 112, 114, 115, 116, 117, 121, 122, 123, 125, 126, 127, 128, 137, 138, 140, 141, 143, 144, 146, 147], "modul": [4, 5, 132], "element": [4, 100, 108], "describ": [4, 24, 44, 62, 78, 94, 121], "simpl": [4, 132, 138], "re": 4, "usabl": 4, "beam": [4, 6, 8, 10, 30, 31, 32, 33, 34, 36, 38, 42, 52, 54, 56, 60, 68, 70, 72, 76, 84, 86, 88, 92, 100, 128, 131, 132, 138, 139, 140, 143, 144, 145, 146, 147], "rod": 4, "plate": [4, 10], "contain": [5, 6, 18, 19, 20, 25, 27, 29, 32, 38, 39, 40, 41, 45, 47, 49, 56, 57, 58, 59, 63, 65, 67, 72, 73, 74, 75, 79, 81, 83, 88, 89, 90, 91, 95, 97, 99, 100, 101, 115, 116, 122, 125, 127, 128], "function": [5, 100, 138], "type": [5, 7, 15, 18, 19, 20, 33, 35, 37, 39, 40, 41, 52, 53, 55, 57, 58, 59, 68, 69, 71, 73, 74, 75, 84, 85, 87, 89, 90, 91, 101, 102, 107, 112, 114, 115, 116, 117, 132, 144, 145], "meant": 5, "us": [5, 7, 23, 32, 33, 34, 35, 43, 51, 52, 53, 61, 68, 69, 77, 84, 85, 93, 100, 101, 102, 104, 105, 110, 112, 114, 120, 128, 129, 132, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146], "context": [5, 11], "class": [6, 7, 10, 31, 34, 35, 42, 50, 52, 53, 68, 69, 84, 85, 101, 102, 132], "arg": [6, 34], "kwarg": [6, 9, 11, 34, 101], "sourc": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 42, 43, 44, 45, 46, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 68, 69, 70, 71, 76, 77, 78, 79, 80, 84, 85, 86, 87, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 118, 119, 120, 121, 122, 123, 124, 128, 129, 132, 136, 140, 141], "base": [6, 30, 31, 34, 50, 52, 68, 84, 101, 132, 139, 144, 147], "repres": [6, 52, 68, 84, 101, 103, 141], "timber": [6, 101, 129, 134, 135, 136, 138, 141, 144, 147], "attribut": [6, 9, 13, 34, 50, 52, 68, 84, 101, 132, 138, 141], "list": [6, 10, 12, 32, 34, 38, 52, 56, 68, 72, 84, 88, 100, 101, 105, 106, 108, 128, 144, 147], "A": [6, 16, 32, 38, 52, 56, 68, 72, 84, 88, 100, 101, 105, 112, 114, 129, 137, 141], "assign": [6, 11, 16, 144, 146], "part_kei": 6, "int": [6, 8, 9, 10, 11, 13, 17, 51], "kei": [6, 8, 11, 17, 42, 140], "includ": [6, 101, 117, 136, 137], "beam_kei": 6, "joint_kei": 6, "method": [6, 7, 31, 33, 34, 35, 38, 42, 50, 52, 53, 54, 56, 68, 69, 70, 72, 84, 85, 86, 88, 101, 102, 105, 132], "inherit": [6, 34, 52, 68, 84, 101, 132], "convert": [7, 24, 35, 44, 53, 62, 69, 78, 85, 94, 102, 121], "instanc": [7, 10, 18, 19, 20, 35, 38, 39, 40, 41, 52, 53, 56, 57, 58, 59, 68, 69, 72, 73, 74, 75, 84, 85, 88, 89, 90, 91, 102, 115, 116, 130], "string": [7, 19, 20, 25, 26, 27, 28, 29, 35, 40, 41, 45, 46, 47, 48, 49, 51, 52, 53, 58, 59, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 80, 81, 82, 83, 84, 85, 90, 91, 95, 96, 97, 98, 99, 102, 115, 116, 122, 123, 125, 126, 127, 140, 141], "exist": [7, 35, 53, 69, 85, 102, 135], "net": [7, 35, 53, 69, 85, 102], "compat": [7, 35, 52, 53, 68, 69, 84, 85, 100, 102], "when": [7, 16, 32, 35, 53, 54, 69, 70, 85, 86, 102, 105, 112, 114, 140, 144], "ironpython": [7, 35, 53, 69, 85, 102, 134], "implicit": [7, 35, 53, 69, 85, 102], "convers": [7, 35, 53, 69, 85, 102], "usual": [7, 35, 53, 69, 85, 101, 102], "take": [7, 35, 53, 69, 85, 102, 147], "cpython": [7, 35, 53, 69, 85, 102], "kick": [7, 35, 53, 69, 85, 102], "its": [7, 13, 16, 17, 24, 35, 44, 53, 62, 69, 78, 85, 94, 102, 112, 121, 132, 134, 136, 140, 141, 144], "default": [7, 11, 15, 35, 37, 53, 55, 69, 71, 85, 87, 101, 102, 107, 112, 113, 114, 132, 139, 141, 144, 146], "print": [7, 35, 53, 69, 85, 102], "self": [7, 35, 53, 69, 85, 102], "gettyp": [7, 35, 53, 69, 85, 102], "fullnam": [7, 35, 53, 69, 85, 102], "similar": [7, 35, 53, 69, 85, 102, 144], "overrid": [7, 35, 53, 69, 85, 102, 147], "object": [7, 10, 14, 15, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 102, 107, 115, 116, 121, 122, 123, 125, 126, 127, 132, 139, 140, 141, 145, 146], "fix": [7, 35, 53, 69, 85, 102], "make": [7, 15, 35, 37, 53, 55, 69, 71, 85, 87, 102, 107, 134], "grasshopp": [7, 35, 53, 69, 85, 102, 130, 132, 134, 136, 141], "displai": [7, 35, 53, 69, 85, 102, 140, 145], "proper": [7, 35, 53, 69, 85, 102], "represent": [7, 24, 25, 26, 35, 44, 45, 46, 51, 52, 53, 62, 63, 64, 68, 69, 78, 79, 80, 84, 85, 94, 95, 96, 102, 121, 122, 123, 124], "panel": [7, 35, 53, 69, 85, 102], "other": [7, 10, 35, 53, 69, 85, 102, 118, 129, 137, 144, 147], "output": [7, 33, 35, 53, 69, 85, 102, 139], "add": [8, 9, 10, 11, 36, 54, 70, 86, 103, 134, 135, 138, 139, 146], "paramet": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 32, 33, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 51, 52, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 120, 122, 123, 125, 126, 127, 128, 139, 140, 141, 146], "return": [8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 32, 33, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 105, 107, 108, 110, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 139, 145], "graph": [8, 10, 11], "identifi": [8, 9, 10, 11, 13, 16, 17, 100], "ad": [8, 38, 56, 72, 88, 103, 105, 128, 134], "b": 9, "between": [9, 13, 68, 140, 144, 147], "two": [9, 30, 33, 34, 38, 52, 56, 68, 72, 88, 108, 141, 144, 147], "from": [9, 18, 19, 20, 22, 23, 33, 39, 40, 41, 43, 57, 58, 59, 61, 73, 74, 75, 77, 89, 90, 91, 93, 112, 114, 115, 116, 120, 130, 132, 134, 136, 137, 138, 140, 141, 143, 144], "dict": [9, 11, 13, 18, 24, 26, 39, 44, 46, 57, 62, 64, 73, 78, 80, 89, 94, 96, 121, 123], "str": [9, 11, 13, 16, 17, 20, 23, 26, 29, 41, 43, 46, 49, 51, 52, 59, 61, 64, 67, 68, 75, 77, 80, 83, 84, 91, 93, 96, 99, 101, 105, 108, 112, 114, 116, 120, 123, 127], "ani": [9, 11, 13, 25, 27, 28, 29, 45, 47, 48, 49, 63, 65, 66, 67, 79, 81, 82, 83, 95, 97, 98, 99, 101, 105, 122, 125, 126, 127, 130, 137, 143, 145], "option": [9, 11, 13, 15, 17, 23, 25, 26, 32, 33, 37, 43, 45, 46, 55, 61, 63, 64, 71, 77, 79, 80, 87, 93, 95, 96, 100, 107, 120, 122, 123, 133, 135, 141, 144, 147], "compil": 9, "name": [9, 11, 135, 140, 144, 145], "argument": 9, "tupl": [9, 13, 33, 68, 101, 110], "node": 9, "rais": [9, 38, 56, 72, 88], "assemblyerror": 9, "If": [9, 13, 23, 25, 26, 33, 43, 45, 46, 61, 63, 64, 77, 79, 80, 93, 95, 96, 103, 106, 120, 122, 123, 128, 129, 135, 141, 144], "an": [10, 11, 15, 18, 19, 20, 24, 25, 26, 30, 32, 37, 38, 39, 40, 41, 44, 45, 46, 52, 55, 56, 57, 58, 59, 62, 63, 64, 68, 71, 72, 73, 74, 75, 78, 79, 80, 84, 87, 88, 89, 90, 91, 94, 95, 96, 101, 107, 115, 116, 117, 121, 122, 123, 129, 130, 132, 135, 137, 138, 139, 140, 141, 144], "dowel": 10, "steel": 10, "involv": 10, "current": [10, 11, 15, 37, 55, 71, 87, 107, 124, 132], "none": [11, 15, 16, 17, 25, 32, 33, 37, 45, 52, 55, 63, 68, 71, 79, 84, 87, 95, 100, 106, 107, 112, 113, 114, 122, 128, 141], "note": [11, 100, 129, 145], "i": [11, 12, 13, 16, 28, 32, 33, 34, 38, 42, 48, 52, 54, 56, 66, 68, 70, 72, 82, 84, 86, 88, 98, 100, 101, 103, 106, 108, 109, 110, 126, 129, 132, 134, 137, 138, 139, 140, 141, 143, 144, 145, 146], "uniqu": [11, 16], "onli": [11, 42, 106, 140], "nest": 11, "mai": [11, 139, 140], "have": [11, 38, 56, 72, 88, 109, 135, 136, 141], "same": [11, 12, 33, 144, 147], "valu": [11, 51, 100, 101, 109, 118, 124, 140], "one": [11, 141, 144, 147], "which": [11, 32, 33, 38, 52, 56, 68, 72, 84, 88, 100, 104, 105, 106, 108, 109, 110, 139, 141, 144], "case": [11, 106], "automat": [11, 16, 54, 70, 86, 144, 146], "integ": 11, "addit": [11, 13, 32, 138, 140, 141, 143], "check": [12, 128, 132, 140], "alreadi": 12, "set": [12, 32, 100, 128, 139, 140, 141, 145], "bool": [12, 13, 14, 23, 25, 26, 32, 43, 45, 46, 61, 63, 64, 77, 79, 80, 93, 95, 96, 103, 117, 118, 120, 122, 123], "data": [13, 14, 15, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 34, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 107, 113, 115, 116, 120, 121, 122, 123, 125, 126, 127], "fals": [13, 14, 23, 25, 26, 32, 43, 45, 46, 61, 63, 64, 77, 79, 80, 93, 95, 96, 103, 117, 120, 122, 123], "iter": 13, "over": 13, "true": [13, 14, 23, 25, 26, 32, 43, 45, 46, 61, 63, 64, 77, 79, 80, 93, 95, 96, 103, 110, 117, 118, 120, 122, 123, 139, 141], "yield": [13, 21], "next": 13, "u": 13, "v": [13, 134], "connector": 13, "attr": 13, "obj": [14, 23, 43, 61, 77, 93, 120], "given": [14, 32, 33, 38, 51, 56, 72, 88, 100, 104, 108, 109, 110, 114, 140], "otherwis": [14, 33, 109, 137, 141], "look": 14, "cl": [15, 37, 55, 71, 87, 107], "independ": [15, 37, 55, 71, 87, 107], "guid": [16, 134, 135, 141], "global": 16, "creat": [16, 34, 52, 54, 68, 70, 84, 86, 101, 112, 114, 130, 132, 135, 136, 138, 139, 140, 141, 144, 147], "can": [16, 17, 117, 130, 138, 141, 144], "t": [16, 17, 84, 135], "found": [16, 17], "find": [17, 32, 100, 128, 144], "classmethod": [18, 19, 20, 27, 28, 29, 32, 38, 39, 40, 41, 47, 48, 49, 51, 56, 57, 58, 59, 65, 66, 67, 72, 73, 74, 75, 81, 82, 83, 88, 89, 90, 91, 97, 98, 99, 111, 112, 113, 114, 115, 116, 125, 126, 127], "construct": [18, 19, 20, 39, 40, 41, 57, 58, 59, 73, 74, 75, 89, 90, 91, 115, 116, 132], "provid": [18, 31, 39, 57, 73, 89, 106, 137, 138, 139, 141], "dictionari": [18, 39, 57, 73, 89], "ha": [18, 19, 20, 30, 39, 40, 41, 57, 58, 59, 73, 74, 75, 89, 90, 91, 100, 115, 116, 141, 144, 145, 146], "correct": [18, 19, 20, 39, 40, 41, 57, 58, 59, 73, 74, 75, 89, 90, 91, 115, 116], "schema": [18, 19, 20, 24, 27, 28, 29, 39, 40, 41, 44, 47, 48, 49, 57, 58, 59, 62, 65, 66, 67, 73, 74, 75, 78, 81, 82, 83, 89, 90, 91, 94, 97, 98, 99, 115, 116, 121, 125, 126, 127], "filepath": [19, 25, 27, 40, 45, 47, 58, 63, 65, 74, 79, 81, 90, 95, 97, 115, 122, 125], "serial": [19, 20, 25, 26, 40, 41, 42, 45, 46, 58, 59, 60, 63, 64, 74, 75, 76, 79, 80, 90, 91, 92, 95, 96, 115, 116, 122, 123], "json": [19, 20, 25, 26, 27, 28, 29, 40, 41, 45, 46, 47, 48, 49, 58, 59, 63, 64, 65, 66, 67, 74, 75, 79, 80, 81, 82, 83, 90, 91, 95, 96, 97, 98, 99, 115, 116, 122, 123, 125, 126, 127], "file": [19, 20, 25, 27, 40, 41, 45, 47, 58, 59, 63, 65, 74, 75, 79, 81, 90, 91, 95, 97, 115, 116, 122, 125, 136, 137, 142], "like": [19, 25, 27, 40, 45, 47, 58, 63, 65, 74, 79, 81, 90, 95, 97, 115, 122, 125, 132, 138, 139], "url": [19, 27, 40, 47, 58, 65, 74, 81, 90, 97, 115, 125, 129], "individu": 21, "remov": [22, 106, 140, 143], "as_str": [23, 43, 61, 77, 93, 120], "comput": [23, 33, 43, 61, 77, 93, 120], "hash": [23, 43, 61, 77, 93, 120], "comparison": [23, 43, 61, 77, 93, 120], "dure": [23, 42, 43, 61, 77, 93, 105, 120], "version": [23, 43, 61, 77, 93, 120, 134], "control": [23, 43, 61, 77, 93, 120], "algorithm": [23, 43, 61, 77, 93, 100, 120], "digest": [23, 43, 61, 77, 93, 120], "hexadecim": [23, 43, 61, 77, 93, 120], "format": [23, 26, 43, 46, 61, 64, 77, 80, 93, 96, 120, 123, 140], "rather": [23, 43, 61, 77, 93, 120], "than": [23, 38, 43, 56, 61, 72, 77, 88, 93, 120, 144], "byte": [23, 43, 61, 77, 93, 120], "exampl": [23, 42, 43, 61, 77, 93, 100, 120, 132, 134, 138, 140, 141, 144, 147], "compa": [23, 43, 61, 77, 93, 101, 106, 120, 129, 134, 135, 136, 138, 144], "datastructur": [23, 43, 61, 77, 93, 101, 106, 120], "import": [23, 43, 61, 77, 93, 120, 147], "mesh": [23, 43, 61, 77, 93, 101, 112, 114, 120, 131], "from_obj": [23, 43, 61, 77, 93, 120], "get": [23, 43, 61, 77, 93, 120, 138], "face": [23, 43, 61, 77, 93, 101, 110, 120], "v1": [23, 43, 61, 77, 93, 120], "v2": [23, 43, 61, 77, 93, 120], "vertex_attribut": [23, 43, 61, 77, 93, 120], "vertex_sampl": [23, 43, 61, 77, 93, 120], "1": [23, 43, 61, 77, 93, 101, 120, 131, 141], "0": [23, 43, 61, 77, 93, 101, 119, 120, 131, 134, 141, 144], "z": [23, 43, 61, 77, 93, 101, 112, 114, 120, 141, 143, 146], "v3": [23, 43, 61, 77, 93, 120], "nativ": [24, 44, 62, 78, 94, 121], "pretti": [25, 26, 45, 46, 63, 64, 79, 80, 95, 96, 122, 123], "compact": [25, 26, 45, 46, 63, 64, 79, 80, 95, 96, 122, 123], "human": [25, 45, 63, 79, 95, 122], "readabl": [25, 45, 63, 79, 95, 122], "without": [25, 45, 63, 79, 95, 122, 137], "whitespac": [25, 45, 63, 79, 95, 122], "": [26, 27, 28, 29, 36, 46, 47, 48, 49, 52, 64, 65, 66, 67, 68, 80, 81, 82, 83, 84, 96, 97, 98, 99, 101, 103, 104, 108, 109, 112, 114, 117, 118, 123, 125, 126, 127, 136, 140, 146], "valid": [27, 28, 29, 47, 48, 49, 65, 66, 67, 81, 82, 83, 97, 98, 99, 125, 126, 127], "document": [27, 28, 47, 48, 65, 66, 81, 82, 97, 98, 125, 126, 132, 137, 140, 141, 146], "against": [27, 28, 29, 47, 48, 49, 65, 66, 67, 81, 82, 83, 97, 98, 99, 125, 126, 127], "jsondata": [28, 48, 66, 82, 98, 126], "result": [28, 48, 66, 82, 98, 108, 126, 144], "pars": [28, 48, 66, 82, 98, 126], "jsonstr": [29, 49, 67, 83, 99, 127], "except": 30, "baseexcept": 30, "indic": [30, 112, 114, 140, 141], "error": [30, 105, 139, 140], "occur": [30, 105], "while": 30, "try": 30, "join": [30, 34, 38, 52, 56, 68, 72, 84, 88, 139, 144], "more": [30, 132, 138], "detect": 31, "intersect": [31, 32, 33, 144], "topologi": [31, 33, 38, 50, 51, 52, 56, 68, 72, 84, 88], "rtree": [32, 128], "max_dist": [32, 33], "pair": [32, 33, 100, 128, 140, 144, 147], "r": [32, 100, 134], "tree": [32, 100], "search": [32, 100], "neighbor": [32, 100, 128], "float": [32, 33, 100, 101, 109, 110, 112, 114, 128], "distanc": [32, 33, 144], "apart": 32, "non": 32, "touch": 32, "still": 32, "consid": [32, 33], "neightbor": [32, 128], "beam_a": [33, 68], "beam_b": [33, 68], "tol": 33, "1e": 33, "06": 33, "within": [33, 118], "role": [33, 42], "sensit": 33, "consist": 33, "specif": [33, 42, 132], "order": [33, 100, 147], "main": [33, 42, 52, 60, 76, 84, 86, 92, 134, 135, 136, 144], "first": [33, 68, 108, 135, 144, 147], "cross": [33, 42, 52, 60, 76, 84, 86, 92, 101, 112, 114, 141, 144], "second": [33, 68, 108, 144], "thei": 33, "were": [33, 140], "input": [33, 100, 138, 140, 141, 144], "toler": [33, 101, 118, 144], "mathemat": 33, "maximum": 33, "desigen": 33, "unit": [33, 100, 109, 110], "jointtopologi": 33, "should": [34, 42, 100, 109, 117, 124, 144], "instanti": 34, "directli": [34, 136], "respect": [34, 42, 144], "implement": [34, 42, 128, 132], "instead": [34, 141], "featur": [36, 54, 70, 86, 101, 103, 105, 106, 117, 132, 138, 139, 145, 147], "affect": 36, "new": [38, 56, 72, 88, 109, 135, 136, 141], "expect": [38, 56, 72, 88], "been": [38, 56, 72, 88], "befor": [38, 56, 72, 88, 145], "call": [38, 42, 54, 56, 70, 72, 86, 88, 103, 124, 141, 144], "code": [38, 56, 72, 88, 130, 132], "doe": [38, 56, 72, 88, 136, 141, 144], "verifi": [38, 56, 72, 88, 110], "adjac": [38, 56, 72, 88], "lie": [38, 56, 72, 88], "allow": [38, 56, 72, 88, 110], "them": [38, 56, 68, 72, 88, 130, 140, 144], "respons": [38, 56, 72, 88], "valueerror": [38, 56, 72, 88], "less": [38, 56, 72, 88, 101], "assemebli": [38, 56, 72, 88], "jo": [38, 56, 72, 88], "belong": [38, 56, 72, 88], "whould": [38, 56, 72, 88], "togeth": [38, 56, 72, 88, 141], "restor": [42, 106], "refer": [42, 60, 76, 92, 132, 134, 138, 140, 144], "associ": [42, 52, 68, 84, 137], "To": [42, 136, 138, 139, 144, 147], "avoid": [42, 144], "circular": 42, "store": [42, 140, 141], "de": [42, 60, 76, 92], "sinc": 42, "concret": 42, "see": [42, 134, 138, 141, 142, 146], "tbuttjoint": [42, 131], "enumer": 50, "possibl": [50, 105, 106, 140], "topo_unknown": [50, 51], "topo_i": 50, "topo_l": [50, 51], "topo_t": [50, 51], "topo_x": [50, 51], "For": [51, 100, 132, 146, 147], "log": [51, 139], "One": 51, "main_beam": [52, 84, 131], "cross_beam": [52, 84, 131], "l": [52, 68], "butt": [52, 84], "end": [52, 68, 84, 101, 108, 109, 110, 114, 144], "trim": [52, 54, 68, 70, 84, 86, 139, 143, 144], "pleas": [52, 68, 84, 129], "properli": [52, 68, 84], "timberassembli": [52, 68, 84, 131], "cutting_plane_main": [52, 84], "frame": [52, 68, 84, 101, 131, 132, 138, 139, 147], "cutting_plane_cross": [52, 84], "joint_typ": [52, 68, 84], "requir": [54, 70, 134], "extens": [54, 70, 109, 110, 136], "both": [54, 70, 109], "assemli": [60, 76], "after": [60, 76, 92, 124], "resotr": [60, 76, 92], "save": [60, 76, 92], "cutoff": 68, "miter": 68, "bisector": [68, 144], "angl": [68, 144], "centerlin": [68, 101, 108, 109, 112, 114, 138, 140, 141, 144, 146], "cutting_plan": 68, "each": [68, 110, 124, 140, 144], "normal": [68, 101], "point": [68, 101, 108, 114, 132, 146], "opposit": 68, "direct": [68, 101, 110, 112, 114, 128, 141], "along": [84, 101, 144], "length": [84, 101, 112, 144], "anoth": 84, "inflate_bi": [100, 128], "axi": [100, 101, 112, 114, 141, 146], "align": [100, 101, 104, 138, 146], "bound": [100, 101, 128], "box": [100, 101, 128, 138, 145], "aabb": [100, 101], "enlarg": 100, "amount": [100, 109, 110, 128], "design": [100, 109, 129, 132, 138, 140, 141], "regard": 100, "inflat": [100, 128], "pluggabl": 100, "In": [100, 106, 132, 144], "plugin": [100, 132, 141], "avail": [100, 117], "width": [101, 112, 114, 131, 140, 141], "height": [101, 112, 114, 131, 140, 141], "geometry_typ": [101, 112, 114, 131], "stud": [101, 141], "slat": 101, "rectangular": [101, 141], "section": [101, 112, 114, 130, 138, 141], "local": [101, 136, 141, 145], "coordin": [101, 141, 145], "system": [101, 141, 145], "origin": [101, 141, 145, 146], "locat": [101, 136, 141], "start": [101, 108, 109, 110, 114, 119, 138, 141], "x": [101, 141, 144, 146], "correspond": [101, 108, 140, 141, 146], "major": [101, 141], "also": [101, 129, 132, 134, 138, 140, 141], "fibr": [101, 138], "solid": [101, 139], "wood": 101, "y": [101, 141, 146], "smaller": [101, 141], "dimens": [101, 141], "larger": [101, 141], "either": [101, 108, 112, 114], "brep": [101, 111, 112, 114, 132, 139, 143, 145, 146], "resolv": [101, 132], "appli": [101, 103, 105, 106, 139, 144, 145, 147], "shape": [101, 141], "parametr": [101, 105, 109, 124, 132], "oper": [101, 139, 143], "perform": 101, "6": 101, "side": [101, 143, 144], "equal": 101, "posit": [101, 109, 143, 144], "2": [101, 131], "3": [101, 135], "4": [101, 131], "5": 101, "line": [101, 112, 132, 140, 141], "centerline_start": 101, "centerline_end": 101, "xmin": 101, "ymin": 101, "zmin": 101, "xmax": 101, "ymax": 101, "zmax": 101, "long_edg": 101, "long": [101, 110], "midpoint": 101, "middl": 101, "apply_featur": 103, "must": 103, "upon": [103, 132], "vector": [104, 112, 114, 119, 132, 141], "z_axi": 104, "definit": [104, 109, 124, 139], "todo": [104, 110], "Not": 104, "anywher": 104, "need": [104, 134, 136, 140, 147], "all": [105, 106, 110, 117, 128, 137, 140], "previous": 105, "add_featur": 105, "separatelli": 105, "geometr": [105, 132, 139, 143], "accumul": 105, "applic": 105, "assist": 105, "debug": 105, "features_to_clear": 106, "clear": 106, "effect": 106, "select": [106, 144], "shall": [106, 137], "remain": 106, "reappli": 106, "endpoint": [108, 114], "closer": 108, "interest": 108, "depend": [108, 112, 114, 134, 135, 145], "actual": 108, "d_start": 109, "d_end": 109, "extend": [109, 110], "neg": 109, "extenshion": 109, "shortend": 109, "subsequ": 109, "updat": [109, 124], "match": 109, "pln": 110, "metric": 110, "minimum": 110, "pass": 110, "through": [110, 129], "z_vector": [112, 114], "worldz": [112, 114], "worldx": [112, 114], "orient": [112, 114, 146], "gemetry_typ": [112, 114], "altern": [113, 136], "__init__": 113, "point_start": 114, "point_end": 114, "end_point": 114, "with_featur": 117, "transform": 117, "copi": [117, 136, 137], "drawn": [117, 141], "artist": 117, "identical": 118, "ones": 118, "000": 119, "which_endpoint": 119, "deprec": 119, "reset": 124, "accrod": 124, "paramter": 124, "prior": 128, "research": [129, 132, 137], "project": [129, 132], "develop": [129, 132, 133, 135], "aleksandra": 129, "apolinarska": 129, "chen": 129, "kasir": 129, "gonzalo": 129, "casa": 129, "gramazio": [129, 132, 137], "kohler": [129, 132, 137], "eth": [129, 132], "zurich": [129, 132], "support": [129, 130], "swiss": 129, "nation": 129, "scienc": 129, "foundat": 129, "center": 129, "compet": 129, "digit": 129, "nccr": 129, "dfab": 129, "programm": 129, "As": 129, "open": [129, 132, 136], "mani": [129, 130, 132], "contributor": 129, "you": [129, 134, 135, 136, 138, 141, 144, 147], "your": [129, 133, 135], "work": 129, "acknowledg": 129, "misc": 129, "titl": 129, "librari": [129, 130, 132, 138], "structur": [129, 132, 138, 139, 147], "author": [129, 137], "anna": 129, "http": [129, 134, 135], "github": [129, 134, 135, 136], "com": [129, 134, 135], "gramaziokohl": 129, "year": 129, "2022": 129, "2023": 129, "doi": 129, "10": 129, "5281": 129, "zenodo": 129, "7934267": 129, "present": 130, "differ": [130, 144, 147], "concept": [130, 138], "There": [130, 140], "multipl": 130, "wai": 130, "run": [130, 132, 136], "execut": [130, 136], "python": [130, 132, 134, 135, 138], "environ": [130, 132, 134, 135, 136], "interact": 130, "session": [130, 136], "id": 130, "text": [130, 136], "editor": 130, "sublim": 130, "visual": [130, 139], "studio": 130, "eclips": 130, "insid": 130, "cad": 130, "blender": 130, "worldxi": 131, "depth": 131, "add_beam": 131, "packag": 132, "model": 132, "written": 132, "framework": 132, "ecosystem": 132, "It": [132, 138, 139, 140, 141, 146], "rhinocero": 132, "3d": 132, "plug": 132, "activ": [132, 135, 139, 141, 146], "being": 132, "continu": 132, "At": 132, "stage": 132, "encompass": 132, "fast": 132, "intuit": 132, "custom": [132, 140], "entiti": 132, "maintain": 132, "semant": 132, "inform": [132, 146], "about": 132, "futur": 132, "expand": 132, "entail": [132, 140], "interfac": 132, "analysi": 132, "softwar": [132, 137], "specialist": 132, "built": [132, 138], "basic": 132, "complex": 132, "backend": 132, "rhinocommon": 132, "sdk": 132, "handl": 132, "opencascad": 132, "via": 132, "occ": 132, "introduct": 132, "instal": 132, "quick": [132, 133], "manual": [132, 133], "api": [132, 138], "workflow": [132, 138, 140, 141], "show": [132, 138], "util": [132, 138], "licens": 132, "cite": 132, "index": [132, 145], "want": [134, 135], "purpos": [134, 135, 137], "detail": [134, 138], "here": [134, 136, 142, 144, 146], "fork": 134, "repo": 134, "clone": 134, "navig": [134, 136], "repositori": 134, "folder": 134, "cd": 134, "pip": [134, 135, 136], "git": [134, 135], "dev": [134, 135], "txt": 134, "build": [134, 147], "ghuser": 134, "compon": [134, 136, 139, 140, 141, 145], "invok": 134, "sure": 134, "variabl": 134, "dependeci": 134, "m": 134, "compas_rhino": 134, "7": 134, "specifi": 134, "virutu": 135, "conda": [135, 136], "virtual": [135, 136], "replac": 135, "myenvnam": 135, "desir": [135, 146], "n": 135, "9": 135, "don": 135, "forg": 135, "yet": 135, "config": 135, "env": 135, "channel": 135, "prerequisit": 136, "rhinoceros3d": 136, "window": 136, "download": 136, "win_instal": 136, "cmd": 136, "content": 136, "newli": 136, "chang": 136, "doubl": 136, "click": 136, "ex": 136, "mac": 136, "mac_instal": 136, "termin": 136, "script": 136, "sh": 136, "what": 136, "background": 136, "batch": 136, "miniconda": 136, "branch": 136, "mit": 137, "copyright": 137, "c": 137, "2020": 137, "02": 137, "17": 137, "permiss": 137, "herebi": 137, "grant": 137, "free": 137, "charg": 137, "person": 137, "obtain": 137, "deal": 137, "restrict": 137, "limit": 137, "right": 137, "modifi": 137, "merg": 137, "publish": 137, "distribut": 137, "sublicens": 137, "sell": 137, "permit": 137, "whom": 137, "furnish": 137, "do": 137, "so": 137, "subject": 137, "follow": [137, 138], "condit": 137, "abov": 137, "notic": 137, "substanti": 137, "portion": 137, "THE": 137, "AS": 137, "warranti": 137, "OF": 137, "kind": 137, "express": 137, "OR": 137, "impli": [137, 139], "BUT": 137, "NOT": 137, "TO": 137, "merchant": 137, "fit": 137, "FOR": 137, "particular": 137, "AND": 137, "noninfring": 137, "IN": 137, "NO": 137, "event": 137, "holder": 137, "BE": 137, "liabl": 137, "claim": 137, "damag": 137, "liabil": 137, "whether": [137, 145], "action": 137, "contract": 137, "tort": 137, "aris": 137, "out": 137, "WITH": 137, "easi": 138, "autom": [138, 144], "bake": 138, "map": [138, 146], "textur": [138, 146], "render": [138, 146], "boolean": [138, 139, 143], "style": 138, "planar": [138, 144], "cut": [138, 139, 143, 144], "hole": 138, "some": [138, 146], "top": 138, "might": 138, "ghpython": 138, "componen": 138, "overal": 138, "idea": 138, "how": [138, 144], "Then": [138, 144], "explain": 138, "made": 139, "subtract": [139, 143], "computation": 139, "expens": 139, "disabl": 139, "applyfeatur": 139, "unsuccess": 139, "abstract": 139, "showassembli": [139, 145], "group": 140, "intend": [140, 141], "hybrid": 140, "encod": 140, "concaten": 140, "colon": 140, "separ": 140, "entri": [140, 147], "underscor": 140, "_": 140, "attr1nam": 140, "attr1value_attr2nam": 140, "attr2valu": 140, "four": [140, 144], "standard": 140, "categori": [140, 141, 144], "zvector": [140, 141], "setstandardattribut": 140, "write": [140, 141], "readstandardattribut": 140, "read": 140, "checkstandardattribut": 140, "correctli": 140, "miss": 140, "retriev": 140, "user": 140, "later": [140, 141, 144], "filter": 140, "accord": [140, 144], "criteria": 140, "These": 140, "deleteattribut": 140, "setcustomattribut": 140, "readallattribut": 140, "linear": [141, 144], "straight": 141, "rafter": 141, "joist": 141, "where": [141, 146], "beamfromcurv": 141, "form": [141, 144], "linecurv": 141, "beamfromcurveguid": 141, "referenc": 141, "rotat": 141, "around": 141, "li": [141, 146], "sai": 141, "perpendicular": 141, "cannot": 141, "parallel": 141, "world": 141, "vertic": 141, "convent": 141, "rule": [141, 144], "jointcategoryrul": [141, 144], "automaticjoint": 141, "updaterefobj": 141, "onc": 141, "preview": [141, 145], "extract": [141, 145], "demo": 142, "ly": 143, "three": 144, "prefix": 144, "rel": 144, "we": 144, "distinguish": 144, "topolog": 144, "situat": 144, "splice": 144, "co": 144, "corner": 144, "meet": 144, "addition": 144, "clean": 144, "serv": [144, 146], "cata": 144, "catb": 144, "thing": 144, "determin": 144, "ye": 144, "everi": 144, "tri": 144, "unintend": 144, "maxdist": 144, "exactli": 144, "certain": 144, "000001": 144, "inspect": 145, "showbeam": 145, "showbeamfram": 145, "showbeamindex": 145, "showjointtyp": 145, "bakewithboxmap": 146, "layer": 146, "materi": 146, "random": 146, "deviat": 146, "mapsiz": 146, "scale": 146, "adjust": 146, "size": 146, "imag": 146, "ratio": 146, "bitmap": 146, "care": 147, "final": 147, "matter": 147, "last": 147, "earlier": 147}, "objects": {"": [[1, 0, 0, "-", "compas_timber"]], "compas_timber": [[2, 0, 0, "-", "assembly"], [3, 0, 0, "-", "connections"], [4, 0, 0, "-", "parts"], [5, 0, 0, "-", "rhino"]], "compas_timber.assembly": [[6, 1, 1, "", "TimberAssembly"]], "compas_timber.assembly.TimberAssembly": [[7, 2, 1, "", "ToString"], [8, 2, 1, "", "add_beam"], [9, 2, 1, "", "add_connection"], [10, 2, 1, "", "add_joint"], [11, 2, 1, "", "add_part"], [12, 2, 1, "", "are_parts_joined"], [13, 2, 1, "", "connections"], [14, 2, 1, "", "contains"], [15, 2, 1, "", "copy"], [16, 2, 1, "", "find"], [17, 2, 1, "", "find_by_key"], [18, 2, 1, "", "from_data"], [19, 2, 1, "", "from_json"], [20, 2, 1, "", "from_jsonstring"], [21, 2, 1, "", "parts"], [22, 2, 1, "", "remove_joint"], [23, 2, 1, "", "sha256"], [24, 2, 1, "", "to_data"], [25, 2, 1, "", "to_json"], [26, 2, 1, "", "to_jsonstring"], [27, 2, 1, "", "validate_json"], [28, 2, 1, "", "validate_jsondata"], [29, 2, 1, "", "validate_jsonstring"]], "compas_timber.connections": [[30, 3, 1, "", "BeamJoinningError"], [31, 1, 1, "", "ConnectionSolver"], [34, 1, 1, "", "Joint"], [50, 1, 1, "", "JointTopology"], [52, 1, 1, "", "LButtJoint"], [68, 1, 1, "", "LMiterJoint"], [84, 1, 1, "", "TButtJoint"], [100, 4, 1, "", "find_neighboring_beams"]], "compas_timber.connections.ConnectionSolver": [[32, 2, 1, "", "find_intersecting_pairs"], [33, 2, 1, "", "find_topology"]], "compas_timber.connections.Joint": [[35, 2, 1, "", "ToString"], [36, 2, 1, "", "add_features"], [37, 2, 1, "", "copy"], [38, 2, 1, "", "create"], [39, 2, 1, "", "from_data"], [40, 2, 1, "", "from_json"], [41, 2, 1, "", "from_jsonstring"], [42, 2, 1, "", "restore_beams_from_keys"], [43, 2, 1, "", "sha256"], [44, 2, 1, "", "to_data"], [45, 2, 1, "", "to_json"], [46, 2, 1, "", "to_jsonstring"], [47, 2, 1, "", "validate_json"], [48, 2, 1, "", "validate_jsondata"], [49, 2, 1, "", "validate_jsonstring"]], "compas_timber.connections.JointTopology": [[51, 2, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[53, 2, 1, "", "ToString"], [54, 2, 1, "", "add_features"], [55, 2, 1, "", "copy"], [56, 2, 1, "", "create"], [57, 2, 1, "", "from_data"], [58, 2, 1, "", "from_json"], [59, 2, 1, "", "from_jsonstring"], [60, 2, 1, "", "restore_beams_from_keys"], [61, 2, 1, "", "sha256"], [62, 2, 1, "", "to_data"], [63, 2, 1, "", "to_json"], [64, 2, 1, "", "to_jsonstring"], [65, 2, 1, "", "validate_json"], [66, 2, 1, "", "validate_jsondata"], [67, 2, 1, "", "validate_jsonstring"]], "compas_timber.connections.LMiterJoint": [[69, 2, 1, "", "ToString"], [70, 2, 1, "", "add_features"], [71, 2, 1, "", "copy"], [72, 2, 1, "", "create"], [73, 2, 1, "", "from_data"], [74, 2, 1, "", "from_json"], [75, 2, 1, "", "from_jsonstring"], [76, 2, 1, "", "restore_beams_from_keys"], [77, 2, 1, "", "sha256"], [78, 2, 1, "", "to_data"], [79, 2, 1, "", "to_json"], [80, 2, 1, "", "to_jsonstring"], [81, 2, 1, "", "validate_json"], [82, 2, 1, "", "validate_jsondata"], [83, 2, 1, "", "validate_jsonstring"]], "compas_timber.connections.TButtJoint": [[85, 2, 1, "", "ToString"], [86, 2, 1, "", "add_features"], [87, 2, 1, "", "copy"], [88, 2, 1, "", "create"], [89, 2, 1, "", "from_data"], [90, 2, 1, "", "from_json"], [91, 2, 1, "", "from_jsonstring"], [92, 2, 1, "", "restore_beams_from_keys"], [93, 2, 1, "", "sha256"], [94, 2, 1, "", "to_data"], [95, 2, 1, "", "to_json"], [96, 2, 1, "", "to_jsonstring"], [97, 2, 1, "", "validate_json"], [98, 2, 1, "", "validate_jsondata"], [99, 2, 1, "", "validate_jsonstring"]], "compas_timber.parts": [[101, 1, 1, "", "Beam"]], "compas_timber.parts.Beam": [[102, 2, 1, "", "ToString"], [103, 2, 1, "", "add_feature"], [104, 2, 1, "", "align_z"], [105, 2, 1, "", "apply_features"], [106, 2, 1, "", "clear_features"], [107, 2, 1, "", "copy"], [108, 2, 1, "", "endpoint_closest_to_point"], [109, 2, 1, "", "extend_ends"], [110, 2, 1, "", "extension_to_plane"], [111, 2, 1, "", "from_brep"], [112, 2, 1, "", "from_centerline"], [113, 2, 1, "", "from_data"], [114, 2, 1, "", "from_endpoints"], [115, 2, 1, "", "from_json"], [116, 2, 1, "", "from_jsonstring"], [117, 2, 1, "", "get_geometry"], [118, 2, 1, "", "is_identical"], [119, 2, 1, "", "move_endpoint"], [120, 2, 1, "", "sha256"], [121, 2, 1, "", "to_data"], [122, 2, 1, "", "to_json"], [123, 2, 1, "", "to_jsonstring"], [124, 2, 1, "", "update_beam_geometry"], [125, 2, 1, "", "validate_json"], [126, 2, 1, "", "validate_jsondata"], [127, 2, 1, "", "validate_jsonstring"]], "compas_timber.rhino": [[128, 4, 1, "", "find_neighboring_beams"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:exception", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "exception", "Python exception"], "4": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "packag": 0, "compas_timb": 1, "assembli": [2, 130, 139], "class": [2, 3, 4], "connect": [3, 13], "function": 3, "except": 3, "part": [4, 21], "rhino": 5, "plugin": [5, 138], "timberassembli": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "tostr": [7, 35, 53, 69, 85, 102], "add_beam": 8, "add_connect": 9, "add_joint": 10, "add_part": 11, "are_parts_join": 12, "contain": 14, "copi": [15, 37, 55, 71, 87, 107], "find": 16, "find_by_kei": 17, "from_data": [18, 39, 57, 73, 89, 113], "from_json": [19, 40, 58, 74, 90, 115], "from_jsonstr": [20, 41, 59, 75, 91, 116], "remove_joint": 22, "sha256": [23, 43, 61, 77, 93, 120], "to_data": [24, 44, 62, 78, 94, 121], "to_json": [25, 45, 63, 79, 95, 122], "to_jsonstr": [26, 46, 64, 80, 96, 123], "validate_json": [27, 47, 65, 81, 97, 125], "validate_jsondata": [28, 48, 66, 82, 98, 126], "validate_jsonstr": [29, 49, 67, 83, 99, 127], "beamjoinningerror": 30, "connectionsolv": [31, 32, 33], "find_intersecting_pair": 32, "find_topologi": 33, "joint": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 131, 144], "add_featur": [36, 54, 70, 86, 103], "creat": [38, 56, 72, 88, 131], "restore_beams_from_kei": [42, 60, 76, 92], "jointtopologi": [50, 51], "get_nam": 51, "lbuttjoint": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "lmiterjoint": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], "tbuttjoint": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "find_neighboring_beam": [100, 128], "beam": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 141], "align_z": 104, "apply_featur": 105, "clear_featur": 106, "endpoint_closest_to_point": 108, "extend_end": 109, "extension_to_plan": 110, "from_brep": 111, "from_centerlin": 112, "from_endpoint": 114, "get_geometri": 117, "is_ident": 118, "move_endpoint": 119, "update_beam_geometri": 124, "cite": 129, "exampl": [130, 142], "timber": [130, 132], "compa": 132, "depend": 132, "tabl": 132, "content": 132, "indic": 132, "instal": [133, 134, 135, 136], "manual": [134, 135], "develop": 134, "quick": 136, "licens": 137, "grasshopp": 138, "attribut": 140, "featur": 143, "topologi": 144, "compon": 144, "t": 144, "butt": 144, "l": 144, "miter": 144, "automaticjoint": 144, "wizzard": 144, "show": 145, "util": 146, "bake": 146, "boxmap": 146, "workflow": 147}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"API Reference": [[0, "api-reference"]], "Packages": [[0, "packages"]], "compas_timber": [[1, "module-compas_timber"], [1, "id1"]], "assembly": [[2, "assembly"]], "Classes": [[2, "classes"], [3, "classes"], [4, "classes"]], "connections": [[3, "connections"]], "Functions": [[3, "functions"]], "Exceptions": [[3, "exceptions"]], "parts": [[4, "parts"]], "rhino": [[5, "rhino"]], "Plugins": [[5, "plugins"]], "TimberAssembly": [[6, "timberassembly"]], "TimberAssembly.ToString": [[7, "timberassembly-tostring"]], "TimberAssembly.add_beam": [[8, "timberassembly-add-beam"]], "TimberAssembly.add_connection": [[9, "timberassembly-add-connection"]], "TimberAssembly.add_joint": [[10, "timberassembly-add-joint"]], "TimberAssembly.add_part": [[11, "timberassembly-add-part"]], "TimberAssembly.are_parts_joined": [[12, "timberassembly-are-parts-joined"]], "TimberAssembly.connections": [[13, "timberassembly-connections"]], "TimberAssembly.contains": [[14, "timberassembly-contains"]], "TimberAssembly.copy": [[15, "timberassembly-copy"]], "TimberAssembly.find": [[16, "timberassembly-find"]], "TimberAssembly.find_by_key": [[17, "timberassembly-find-by-key"]], "TimberAssembly.from_data": [[18, "timberassembly-from-data"]], "TimberAssembly.from_json": [[19, "timberassembly-from-json"]], "TimberAssembly.from_jsonstring": [[20, "timberassembly-from-jsonstring"]], "TimberAssembly.parts": [[21, "timberassembly-parts"]], "TimberAssembly.remove_joint": [[22, "timberassembly-remove-joint"]], "TimberAssembly.sha256": [[23, "timberassembly-sha256"]], "TimberAssembly.to_data": [[24, "timberassembly-to-data"]], "TimberAssembly.to_json": [[25, "timberassembly-to-json"]], "TimberAssembly.to_jsonstring": [[26, "timberassembly-to-jsonstring"]], "TimberAssembly.validate_json": [[27, "timberassembly-validate-json"]], "TimberAssembly.validate_jsondata": [[28, "timberassembly-validate-jsondata"]], "TimberAssembly.validate_jsonstring": [[29, "timberassembly-validate-jsonstring"]], "BeamJoinningError": [[30, "beamjoinningerror"]], "ConnectionSolver": [[31, "connectionsolver"]], "ConnectionSolver.find_intersecting_pairs": [[32, "connectionsolver-find-intersecting-pairs"]], "ConnectionSolver.find_topology": [[33, "connectionsolver-find-topology"]], "Joint": [[34, "joint"]], "Joint.ToString": [[35, "joint-tostring"]], "Joint.add_features": [[36, "joint-add-features"]], "Joint.copy": [[37, "joint-copy"]], "Joint.create": [[38, "joint-create"]], "Joint.from_data": [[39, "joint-from-data"]], "Joint.from_json": [[40, "joint-from-json"]], "Joint.from_jsonstring": [[41, "joint-from-jsonstring"]], "Joint.restore_beams_from_keys": [[42, "joint-restore-beams-from-keys"]], "Joint.sha256": [[43, "joint-sha256"]], "Joint.to_data": [[44, "joint-to-data"]], "Joint.to_json": [[45, "joint-to-json"]], "Joint.to_jsonstring": [[46, "joint-to-jsonstring"]], "Joint.validate_json": [[47, "joint-validate-json"]], "Joint.validate_jsondata": [[48, "joint-validate-jsondata"]], "Joint.validate_jsonstring": [[49, "joint-validate-jsonstring"]], "JointTopology": [[50, "jointtopology"]], "JointTopology.get_name": [[51, "jointtopology-get-name"]], "LButtJoint": [[52, "lbuttjoint"]], "LButtJoint.ToString": [[53, "lbuttjoint-tostring"]], "LButtJoint.add_features": [[54, "lbuttjoint-add-features"]], "LButtJoint.copy": [[55, "lbuttjoint-copy"]], "LButtJoint.create": [[56, "lbuttjoint-create"]], "LButtJoint.from_data": [[57, "lbuttjoint-from-data"]], "LButtJoint.from_json": [[58, "lbuttjoint-from-json"]], "LButtJoint.from_jsonstring": [[59, "lbuttjoint-from-jsonstring"]], "LButtJoint.restore_beams_from_keys": [[60, "lbuttjoint-restore-beams-from-keys"]], "LButtJoint.sha256": [[61, "lbuttjoint-sha256"]], "LButtJoint.to_data": [[62, "lbuttjoint-to-data"]], "LButtJoint.to_json": [[63, "lbuttjoint-to-json"]], "LButtJoint.to_jsonstring": [[64, "lbuttjoint-to-jsonstring"]], "LButtJoint.validate_json": [[65, "lbuttjoint-validate-json"]], "LButtJoint.validate_jsondata": [[66, "lbuttjoint-validate-jsondata"]], "LButtJoint.validate_jsonstring": [[67, "lbuttjoint-validate-jsonstring"]], "LMiterJoint": [[68, "lmiterjoint"]], "LMiterJoint.ToString": [[69, "lmiterjoint-tostring"]], "LMiterJoint.add_features": [[70, "lmiterjoint-add-features"]], "LMiterJoint.copy": [[71, "lmiterjoint-copy"]], "LMiterJoint.create": [[72, "lmiterjoint-create"]], "LMiterJoint.from_data": [[73, "lmiterjoint-from-data"]], "LMiterJoint.from_json": [[74, "lmiterjoint-from-json"]], "LMiterJoint.from_jsonstring": [[75, "lmiterjoint-from-jsonstring"]], "LMiterJoint.restore_beams_from_keys": [[76, "lmiterjoint-restore-beams-from-keys"]], "LMiterJoint.sha256": [[77, "lmiterjoint-sha256"]], "LMiterJoint.to_data": [[78, "lmiterjoint-to-data"]], "LMiterJoint.to_json": [[79, "lmiterjoint-to-json"]], "LMiterJoint.to_jsonstring": [[80, "lmiterjoint-to-jsonstring"]], "LMiterJoint.validate_json": [[81, "lmiterjoint-validate-json"]], "LMiterJoint.validate_jsondata": [[82, "lmiterjoint-validate-jsondata"]], "LMiterJoint.validate_jsonstring": [[83, "lmiterjoint-validate-jsonstring"]], "TButtJoint": [[84, "tbuttjoint"]], "TButtJoint.ToString": [[85, "tbuttjoint-tostring"]], "TButtJoint.add_features": [[86, "tbuttjoint-add-features"]], "TButtJoint.copy": [[87, "tbuttjoint-copy"]], "TButtJoint.create": [[88, "tbuttjoint-create"]], "TButtJoint.from_data": [[89, "tbuttjoint-from-data"]], "TButtJoint.from_json": [[90, "tbuttjoint-from-json"]], "TButtJoint.from_jsonstring": [[91, "tbuttjoint-from-jsonstring"]], "TButtJoint.restore_beams_from_keys": [[92, "tbuttjoint-restore-beams-from-keys"]], "TButtJoint.sha256": [[93, "tbuttjoint-sha256"]], "TButtJoint.to_data": [[94, "tbuttjoint-to-data"]], "TButtJoint.to_json": [[95, "tbuttjoint-to-json"]], "TButtJoint.to_jsonstring": [[96, "tbuttjoint-to-jsonstring"]], "TButtJoint.validate_json": [[97, "tbuttjoint-validate-json"]], "TButtJoint.validate_jsondata": [[98, "tbuttjoint-validate-jsondata"]], "TButtJoint.validate_jsonstring": [[99, "tbuttjoint-validate-jsonstring"]], "find_neighboring_beams": [[100, "find-neighboring-beams"], [128, "find-neighboring-beams"]], "Beam": [[101, "beam"], [141, "beam"]], "Beam.ToString": [[102, "beam-tostring"]], "Beam.add_feature": [[103, "beam-add-feature"]], "Beam.align_z": [[104, "beam-align-z"]], "Beam.apply_features": [[105, "beam-apply-features"]], "Beam.clear_features": [[106, "beam-clear-features"]], "Beam.copy": [[107, "beam-copy"]], "Beam.endpoint_closest_to_point": [[108, "beam-endpoint-closest-to-point"]], "Beam.extend_ends": [[109, "beam-extend-ends"]], "Beam.extension_to_plane": [[110, "beam-extension-to-plane"]], "Beam.from_brep": [[111, "beam-from-brep"]], "Beam.from_centerline": [[112, "beam-from-centerline"]], "Beam.from_data": [[113, "beam-from-data"]], "Beam.from_endpoints": [[114, "beam-from-endpoints"]], "Beam.from_json": [[115, "beam-from-json"]], "Beam.from_jsonstring": [[116, "beam-from-jsonstring"]], "Beam.get_geometry": [[117, "beam-get-geometry"]], "Beam.is_identical": [[118, "beam-is-identical"]], "Beam.move_endpoint": [[119, "beam-move-endpoint"]], "Beam.sha256": [[120, "beam-sha256"]], "Beam.to_data": [[121, "beam-to-data"]], "Beam.to_json": [[122, "beam-to-json"]], "Beam.to_jsonstring": [[123, "beam-to-jsonstring"]], "Beam.update_beam_geometry": [[124, "beam-update-beam-geometry"]], "Beam.validate_json": [[125, "beam-validate-json"]], "Beam.validate_jsondata": [[126, "beam-validate-jsondata"]], "Beam.validate_jsonstring": [[127, "beam-validate-jsonstring"]], "Citing": [[129, "citing"]], "Examples": [[130, "examples"], [142, "examples"]], "Timber Assembly Examples": [[130, "timber-assembly-examples"]], "Create Joint": [[131, "create-joint"]], "COMPAS TIMBER": [[132, "compas-timber"]], "Dependencies": [[132, "dependencies"]], "Table of Contents": [[132, "table-of-contents"]], "Indices and tables": [[132, "indices-and-tables"]], "Installation": [[133, "installation"]], "Manual installation for developers": [[134, "manual-installation-for-developers"]], "Manual installation": [[135, "manual-installation"]], "Quick installation": [[136, "quick-installation"]], "License": [[137, "license"]], "Grasshopper plugin": [[138, "grasshopper-plugin"]], "Assembly": [[139, "assembly"]], "Attributes": [[140, "attributes"]], "Features": [[143, "features"]], "Joints": [[144, "joints"]], "Joint Topologies": [[144, "joint-topologies"]], "Joint components": [[144, "joint-components"]], "T-Butt": [[144, "t-butt"]], "L-Butt": [[144, "l-butt"]], "L-Miter": [[144, "l-miter"]], "AutomaticJoint wizzard": [[144, "automaticjoint-wizzard"]], "Show": [[145, "show"]], "Utils": [[146, "utils"]], "Bake with BoxMap": [[146, "bake-with-boxmap"]], "Workflow": [[147, "workflow"]]}, "indexentries": {"compas_timber": [[1, "module-compas_timber"]], "module": [[1, "module-compas_timber"], [2, "module-compas_timber.assembly"], [3, "module-compas_timber.connections"], [4, "module-compas_timber.parts"], [5, "module-compas_timber.rhino"]], "compas_timber.assembly": [[2, "module-compas_timber.assembly"]], "compas_timber.connections": [[3, "module-compas_timber.connections"]], "compas_timber.parts": [[4, "module-compas_timber.parts"]], "compas_timber.rhino": [[5, "module-compas_timber.rhino"]], "timberassembly (class in compas_timber.assembly)": [[6, "compas_timber.assembly.TimberAssembly"]], "tostring() (compas_timber.assembly.timberassembly method)": [[7, "compas_timber.assembly.TimberAssembly.ToString"]], "add_beam() (compas_timber.assembly.timberassembly method)": [[8, "compas_timber.assembly.TimberAssembly.add_beam"]], "add_connection() (compas_timber.assembly.timberassembly method)": [[9, "compas_timber.assembly.TimberAssembly.add_connection"]], "add_joint() (compas_timber.assembly.timberassembly method)": [[10, "compas_timber.assembly.TimberAssembly.add_joint"]], "add_part() (compas_timber.assembly.timberassembly method)": [[11, "compas_timber.assembly.TimberAssembly.add_part"]], "are_parts_joined() (compas_timber.assembly.timberassembly method)": [[12, "compas_timber.assembly.TimberAssembly.are_parts_joined"]], "connections() (compas_timber.assembly.timberassembly method)": [[13, "compas_timber.assembly.TimberAssembly.connections"]], "contains() (compas_timber.assembly.timberassembly method)": [[14, "compas_timber.assembly.TimberAssembly.contains"]], "copy() (compas_timber.assembly.timberassembly method)": [[15, "compas_timber.assembly.TimberAssembly.copy"]], "find() (compas_timber.assembly.timberassembly method)": [[16, "compas_timber.assembly.TimberAssembly.find"]], "find_by_key() (compas_timber.assembly.timberassembly method)": [[17, "compas_timber.assembly.TimberAssembly.find_by_key"]], "from_data() (compas_timber.assembly.timberassembly class method)": [[18, "compas_timber.assembly.TimberAssembly.from_data"]], "from_json() (compas_timber.assembly.timberassembly class method)": [[19, "compas_timber.assembly.TimberAssembly.from_json"]], "from_jsonstring() (compas_timber.assembly.timberassembly class method)": [[20, "compas_timber.assembly.TimberAssembly.from_jsonstring"]], "parts() (compas_timber.assembly.timberassembly method)": [[21, "compas_timber.assembly.TimberAssembly.parts"]], "remove_joint() (compas_timber.assembly.timberassembly method)": [[22, "compas_timber.assembly.TimberAssembly.remove_joint"]], "sha256() (compas_timber.assembly.timberassembly method)": [[23, "compas_timber.assembly.TimberAssembly.sha256"]], "to_data() (compas_timber.assembly.timberassembly method)": [[24, "compas_timber.assembly.TimberAssembly.to_data"]], "to_json() (compas_timber.assembly.timberassembly method)": [[25, "compas_timber.assembly.TimberAssembly.to_json"]], "to_jsonstring() (compas_timber.assembly.timberassembly method)": [[26, "compas_timber.assembly.TimberAssembly.to_jsonstring"]], "validate_json() (compas_timber.assembly.timberassembly class method)": [[27, "compas_timber.assembly.TimberAssembly.validate_json"]], "validate_jsondata() (compas_timber.assembly.timberassembly class method)": [[28, "compas_timber.assembly.TimberAssembly.validate_jsondata"]], "validate_jsonstring() (compas_timber.assembly.timberassembly class method)": [[29, "compas_timber.assembly.TimberAssembly.validate_jsonstring"]], "beamjoinningerror": [[30, "compas_timber.connections.BeamJoinningError"]], "connectionsolver (class in compas_timber.connections)": [[31, "compas_timber.connections.ConnectionSolver"]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[32, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs"]], "find_topology() (compas_timber.connections.connectionsolver method)": [[33, "compas_timber.connections.ConnectionSolver.find_topology"]], "joint (class in compas_timber.connections)": [[34, "compas_timber.connections.Joint"]], "tostring() (compas_timber.connections.joint method)": [[35, "compas_timber.connections.Joint.ToString"]], "add_features() (compas_timber.connections.joint method)": [[36, "compas_timber.connections.Joint.add_features"]], "copy() (compas_timber.connections.joint method)": [[37, "compas_timber.connections.Joint.copy"]], "create() (compas_timber.connections.joint class method)": [[38, "compas_timber.connections.Joint.create"]], "from_data() (compas_timber.connections.joint class method)": [[39, "compas_timber.connections.Joint.from_data"]], "from_json() (compas_timber.connections.joint class method)": [[40, "compas_timber.connections.Joint.from_json"]], "from_jsonstring() (compas_timber.connections.joint class method)": [[41, "compas_timber.connections.Joint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[42, "compas_timber.connections.Joint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.joint method)": [[43, "compas_timber.connections.Joint.sha256"]], "to_data() (compas_timber.connections.joint method)": [[44, "compas_timber.connections.Joint.to_data"]], "to_json() (compas_timber.connections.joint method)": [[45, "compas_timber.connections.Joint.to_json"]], "to_jsonstring() (compas_timber.connections.joint method)": [[46, "compas_timber.connections.Joint.to_jsonstring"]], "validate_json() (compas_timber.connections.joint class method)": [[47, "compas_timber.connections.Joint.validate_json"]], "validate_jsondata() (compas_timber.connections.joint class method)": [[48, "compas_timber.connections.Joint.validate_jsondata"]], "validate_jsonstring() (compas_timber.connections.joint class method)": [[49, "compas_timber.connections.Joint.validate_jsonstring"]], "jointtopology (class in compas_timber.connections)": [[50, "compas_timber.connections.JointTopology"]], "get_name() (compas_timber.connections.jointtopology class method)": [[51, "compas_timber.connections.JointTopology.get_name"]], "lbuttjoint (class in compas_timber.connections)": [[52, "compas_timber.connections.LButtJoint"]], "tostring() (compas_timber.connections.lbuttjoint method)": [[53, "compas_timber.connections.LButtJoint.ToString"]], "add_features() (compas_timber.connections.lbuttjoint method)": [[54, "compas_timber.connections.LButtJoint.add_features"]], "copy() (compas_timber.connections.lbuttjoint method)": [[55, "compas_timber.connections.LButtJoint.copy"]], "create() (compas_timber.connections.lbuttjoint class method)": [[56, "compas_timber.connections.LButtJoint.create"]], "from_data() (compas_timber.connections.lbuttjoint class method)": [[57, "compas_timber.connections.LButtJoint.from_data"]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[58, "compas_timber.connections.LButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[59, "compas_timber.connections.LButtJoint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[60, "compas_timber.connections.LButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lbuttjoint method)": [[61, "compas_timber.connections.LButtJoint.sha256"]], "to_data() (compas_timber.connections.lbuttjoint method)": [[62, "compas_timber.connections.LButtJoint.to_data"]], "to_json() (compas_timber.connections.lbuttjoint method)": [[63, "compas_timber.connections.LButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lbuttjoint method)": [[64, "compas_timber.connections.LButtJoint.to_jsonstring"]], "validate_json() (compas_timber.connections.lbuttjoint class method)": [[65, "compas_timber.connections.LButtJoint.validate_json"]], "validate_jsondata() (compas_timber.connections.lbuttjoint class method)": [[66, "compas_timber.connections.LButtJoint.validate_jsondata"]], "validate_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[67, "compas_timber.connections.LButtJoint.validate_jsonstring"]], "lmiterjoint (class in compas_timber.connections)": [[68, "compas_timber.connections.LMiterJoint"]], "tostring() (compas_timber.connections.lmiterjoint method)": [[69, "compas_timber.connections.LMiterJoint.ToString"]], "add_features() (compas_timber.connections.lmiterjoint method)": [[70, "compas_timber.connections.LMiterJoint.add_features"]], "copy() (compas_timber.connections.lmiterjoint method)": [[71, "compas_timber.connections.LMiterJoint.copy"]], "create() (compas_timber.connections.lmiterjoint class method)": [[72, "compas_timber.connections.LMiterJoint.create"]], "from_data() (compas_timber.connections.lmiterjoint class method)": [[73, "compas_timber.connections.LMiterJoint.from_data"]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[74, "compas_timber.connections.LMiterJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[75, "compas_timber.connections.LMiterJoint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[76, "compas_timber.connections.LMiterJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lmiterjoint method)": [[77, "compas_timber.connections.LMiterJoint.sha256"]], "to_data() (compas_timber.connections.lmiterjoint method)": [[78, "compas_timber.connections.LMiterJoint.to_data"]], "to_json() (compas_timber.connections.lmiterjoint method)": [[79, "compas_timber.connections.LMiterJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lmiterjoint method)": [[80, "compas_timber.connections.LMiterJoint.to_jsonstring"]], "validate_json() (compas_timber.connections.lmiterjoint class method)": [[81, "compas_timber.connections.LMiterJoint.validate_json"]], "validate_jsondata() (compas_timber.connections.lmiterjoint class method)": [[82, "compas_timber.connections.LMiterJoint.validate_jsondata"]], "validate_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[83, "compas_timber.connections.LMiterJoint.validate_jsonstring"]], "tbuttjoint (class in compas_timber.connections)": [[84, "compas_timber.connections.TButtJoint"]], "tostring() (compas_timber.connections.tbuttjoint method)": [[85, "compas_timber.connections.TButtJoint.ToString"]], "add_features() (compas_timber.connections.tbuttjoint method)": [[86, "compas_timber.connections.TButtJoint.add_features"]], "copy() (compas_timber.connections.tbuttjoint method)": [[87, "compas_timber.connections.TButtJoint.copy"]], "create() (compas_timber.connections.tbuttjoint class method)": [[88, "compas_timber.connections.TButtJoint.create"]], "from_data() (compas_timber.connections.tbuttjoint class method)": [[89, "compas_timber.connections.TButtJoint.from_data"]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[90, "compas_timber.connections.TButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[91, "compas_timber.connections.TButtJoint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[92, "compas_timber.connections.TButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.tbuttjoint method)": [[93, "compas_timber.connections.TButtJoint.sha256"]], "to_data() (compas_timber.connections.tbuttjoint method)": [[94, "compas_timber.connections.TButtJoint.to_data"]], "to_json() (compas_timber.connections.tbuttjoint method)": [[95, "compas_timber.connections.TButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.tbuttjoint method)": [[96, "compas_timber.connections.TButtJoint.to_jsonstring"]], "validate_json() (compas_timber.connections.tbuttjoint class method)": [[97, "compas_timber.connections.TButtJoint.validate_json"]], "validate_jsondata() (compas_timber.connections.tbuttjoint class method)": [[98, "compas_timber.connections.TButtJoint.validate_jsondata"]], "validate_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[99, "compas_timber.connections.TButtJoint.validate_jsonstring"]], "find_neighboring_beams() (in module compas_timber.connections)": [[100, "compas_timber.connections.find_neighboring_beams"]], "beam (class in compas_timber.parts)": [[101, "compas_timber.parts.Beam"]], "tostring() (compas_timber.parts.beam method)": [[102, "compas_timber.parts.Beam.ToString"]], "add_feature() (compas_timber.parts.beam method)": [[103, "compas_timber.parts.Beam.add_feature"]], "align_z() (compas_timber.parts.beam method)": [[104, "compas_timber.parts.Beam.align_z"]], "apply_features() (compas_timber.parts.beam method)": [[105, "compas_timber.parts.Beam.apply_features"]], "clear_features() (compas_timber.parts.beam method)": [[106, "compas_timber.parts.Beam.clear_features"]], "copy() (compas_timber.parts.beam method)": [[107, "compas_timber.parts.Beam.copy"]], "endpoint_closest_to_point() (compas_timber.parts.beam method)": [[108, "compas_timber.parts.Beam.endpoint_closest_to_point"]], "extend_ends() (compas_timber.parts.beam method)": [[109, "compas_timber.parts.Beam.extend_ends"]], "extension_to_plane() (compas_timber.parts.beam method)": [[110, "compas_timber.parts.Beam.extension_to_plane"]], "from_brep() (compas_timber.parts.beam class method)": [[111, "compas_timber.parts.Beam.from_brep"]], "from_centerline() (compas_timber.parts.beam class method)": [[112, "compas_timber.parts.Beam.from_centerline"]], "from_data() (compas_timber.parts.beam class method)": [[113, "compas_timber.parts.Beam.from_data"]], "from_endpoints() (compas_timber.parts.beam class method)": [[114, "compas_timber.parts.Beam.from_endpoints"]], "from_json() (compas_timber.parts.beam class method)": [[115, "compas_timber.parts.Beam.from_json"]], "from_jsonstring() (compas_timber.parts.beam class method)": [[116, "compas_timber.parts.Beam.from_jsonstring"]], "get_geometry() (compas_timber.parts.beam method)": [[117, "compas_timber.parts.Beam.get_geometry"]], "is_identical() (compas_timber.parts.beam method)": [[118, "compas_timber.parts.Beam.is_identical"]], "move_endpoint() (compas_timber.parts.beam method)": [[119, "compas_timber.parts.Beam.move_endpoint"]], "sha256() (compas_timber.parts.beam method)": [[120, "compas_timber.parts.Beam.sha256"]], "to_data() (compas_timber.parts.beam method)": [[121, "compas_timber.parts.Beam.to_data"]], "to_json() (compas_timber.parts.beam method)": [[122, "compas_timber.parts.Beam.to_json"]], "to_jsonstring() (compas_timber.parts.beam method)": [[123, "compas_timber.parts.Beam.to_jsonstring"]], "update_beam_geometry() (compas_timber.parts.beam method)": [[124, "compas_timber.parts.Beam.update_beam_geometry"]], "validate_json() (compas_timber.parts.beam class method)": [[125, "compas_timber.parts.Beam.validate_json"]], "validate_jsondata() (compas_timber.parts.beam class method)": [[126, "compas_timber.parts.Beam.validate_jsondata"]], "validate_jsonstring() (compas_timber.parts.beam class method)": [[127, "compas_timber.parts.Beam.validate_jsonstring"]], "find_neighboring_beams() (in module compas_timber.rhino)": [[128, "compas_timber.rhino.find_neighboring_beams"]]}})