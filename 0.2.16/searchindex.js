Search.setIndex({"docnames": ["api", "api/compas_timber", "api/compas_timber.assembly", "api/compas_timber.connections", "api/compas_timber.parts", "api/compas_timber.rhino", "api/generated/compas_timber.assembly.TimberAssembly", "api/generated/compas_timber.assembly.TimberAssembly.ToString", "api/generated/compas_timber.assembly.TimberAssembly.add_beam", "api/generated/compas_timber.assembly.TimberAssembly.add_connection", "api/generated/compas_timber.assembly.TimberAssembly.add_joint", "api/generated/compas_timber.assembly.TimberAssembly.add_part", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined", "api/generated/compas_timber.assembly.TimberAssembly.connections", "api/generated/compas_timber.assembly.TimberAssembly.contains", "api/generated/compas_timber.assembly.TimberAssembly.copy", "api/generated/compas_timber.assembly.TimberAssembly.find", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key", "api/generated/compas_timber.assembly.TimberAssembly.from_data", "api/generated/compas_timber.assembly.TimberAssembly.from_json", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.parts", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint", "api/generated/compas_timber.assembly.TimberAssembly.sha256", "api/generated/compas_timber.assembly.TimberAssembly.to_data", "api/generated/compas_timber.assembly.TimberAssembly.to_json", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.validate_data", "api/generated/compas_timber.assembly.TimberAssembly.validate_json", "api/generated/compas_timber.connections.BeamJoinningError", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.from_data", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.from_jsonstring", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_data", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.to_jsonstring", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.Joint.validate_json", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.from_data", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.to_data", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LButtJoint.validate_json", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.from_data", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_data", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint.validate_json", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.from_data", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.to_data", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint.validate_json", "api/generated/compas_timber.connections.find_neighboring_beams", "api/generated/compas_timber.parts.Beam", "api/generated/compas_timber.parts.Beam.ToString", "api/generated/compas_timber.parts.Beam.add_feature", "api/generated/compas_timber.parts.Beam.align_z", "api/generated/compas_timber.parts.Beam.apply_features", "api/generated/compas_timber.parts.Beam.clear_features", "api/generated/compas_timber.parts.Beam.copy", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point", "api/generated/compas_timber.parts.Beam.extend_ends", "api/generated/compas_timber.parts.Beam.extension_to_plane", "api/generated/compas_timber.parts.Beam.from_centerline", "api/generated/compas_timber.parts.Beam.from_data", "api/generated/compas_timber.parts.Beam.from_endpoints", "api/generated/compas_timber.parts.Beam.from_json", "api/generated/compas_timber.parts.Beam.from_jsonstring", "api/generated/compas_timber.parts.Beam.get_geometry", "api/generated/compas_timber.parts.Beam.is_identical", "api/generated/compas_timber.parts.Beam.move_endpoint", "api/generated/compas_timber.parts.Beam.sha256", "api/generated/compas_timber.parts.Beam.to_data", "api/generated/compas_timber.parts.Beam.to_json", "api/generated/compas_timber.parts.Beam.to_jsonstring", "api/generated/compas_timber.parts.Beam.update_beam_geometry", "api/generated/compas_timber.parts.Beam.validate_data", "api/generated/compas_timber.parts.Beam.validate_json", "api/generated/compas_timber.rhino.find_neighboring_beams", "citing", "examples", "examples/create_joint", "index", "installation", "installation/installation_dev", "installation/installation_manual", "installation/installation_quick", "license", "tutorials", "tutorials/grasshopper/assembly", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beam", "tutorials/grasshopper/examples", "tutorials/grasshopper/features", "tutorials/grasshopper/joints", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "filenames": ["api.rst", "api/compas_timber.rst", "api/compas_timber.assembly.rst", "api/compas_timber.connections.rst", "api/compas_timber.parts.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.assembly.TimberAssembly.rst", "api/generated/compas_timber.assembly.TimberAssembly.ToString.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_beam.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined.rst", "api/generated/compas_timber.assembly.TimberAssembly.connections.rst", "api/generated/compas_timber.assembly.TimberAssembly.contains.rst", "api/generated/compas_timber.assembly.TimberAssembly.copy.rst", "api/generated/compas_timber.assembly.TimberAssembly.find.rst", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_data.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.parts.rst", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.sha256.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_data.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.validate_data.rst", "api/generated/compas_timber.assembly.TimberAssembly.validate_json.rst", "api/generated/compas_timber.connections.BeamJoinningError.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.from_data.rst", "api/generated/compas_timber.connections.Joint.from_json.rst", "api/generated/compas_timber.connections.Joint.from_jsonstring.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_data.rst", "api/generated/compas_timber.connections.Joint.to_json.rst", "api/generated/compas_timber.connections.Joint.to_jsonstring.rst", "api/generated/compas_timber.connections.Joint.validate_data.rst", "api/generated/compas_timber.connections.Joint.validate_json.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.from_data.rst", "api/generated/compas_timber.connections.LButtJoint.from_json.rst", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.to_data.rst", "api/generated/compas_timber.connections.LButtJoint.to_json.rst", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.validate_data.rst", "api/generated/compas_timber.connections.LButtJoint.validate_json.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.from_data.rst", "api/generated/compas_timber.connections.LMiterJoint.from_json.rst", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_data.rst", "api/generated/compas_timber.connections.LMiterJoint.to_json.rst", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_data.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_json.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.from_data.rst", "api/generated/compas_timber.connections.TButtJoint.from_json.rst", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.to_data.rst", "api/generated/compas_timber.connections.TButtJoint.to_json.rst", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.validate_data.rst", "api/generated/compas_timber.connections.TButtJoint.validate_json.rst", "api/generated/compas_timber.connections.find_neighboring_beams.rst", "api/generated/compas_timber.parts.Beam.rst", "api/generated/compas_timber.parts.Beam.ToString.rst", "api/generated/compas_timber.parts.Beam.add_feature.rst", "api/generated/compas_timber.parts.Beam.align_z.rst", "api/generated/compas_timber.parts.Beam.apply_features.rst", "api/generated/compas_timber.parts.Beam.clear_features.rst", "api/generated/compas_timber.parts.Beam.copy.rst", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.parts.Beam.extend_ends.rst", "api/generated/compas_timber.parts.Beam.extension_to_plane.rst", "api/generated/compas_timber.parts.Beam.from_centerline.rst", "api/generated/compas_timber.parts.Beam.from_data.rst", "api/generated/compas_timber.parts.Beam.from_endpoints.rst", "api/generated/compas_timber.parts.Beam.from_json.rst", "api/generated/compas_timber.parts.Beam.from_jsonstring.rst", "api/generated/compas_timber.parts.Beam.get_geometry.rst", "api/generated/compas_timber.parts.Beam.is_identical.rst", "api/generated/compas_timber.parts.Beam.move_endpoint.rst", "api/generated/compas_timber.parts.Beam.sha256.rst", "api/generated/compas_timber.parts.Beam.to_data.rst", "api/generated/compas_timber.parts.Beam.to_json.rst", "api/generated/compas_timber.parts.Beam.to_jsonstring.rst", "api/generated/compas_timber.parts.Beam.update_beam_geometry.rst", "api/generated/compas_timber.parts.Beam.validate_data.rst", "api/generated/compas_timber.parts.Beam.validate_json.rst", "api/generated/compas_timber.rhino.find_neighboring_beams.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "installation/installation_dev.rst", "installation/installation_manual.rst", "installation/installation_quick.rst", "license.rst", "tutorials.rst", "tutorials/grasshopper/assembly.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beam.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joints.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "titles": ["API Reference", "compas_timber", "assembly", "connections", "parts", "rhino", "TimberAssembly", "TimberAssembly.ToString", "TimberAssembly.add_beam", "TimberAssembly.add_connection", "TimberAssembly.add_joint", "TimberAssembly.add_part", "TimberAssembly.are_parts_joined", "TimberAssembly.connections", "TimberAssembly.contains", "TimberAssembly.copy", "TimberAssembly.find", "TimberAssembly.find_by_key", "TimberAssembly.from_data", "TimberAssembly.from_json", "TimberAssembly.from_jsonstring", "TimberAssembly.parts", "TimberAssembly.remove_joint", "TimberAssembly.sha256", "TimberAssembly.to_data", "TimberAssembly.to_json", "TimberAssembly.to_jsonstring", "TimberAssembly.validate_data", "TimberAssembly.validate_json", "BeamJoinningError", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "Joint", "Joint.ToString", "Joint.add_features", "Joint.copy", "Joint.create", "Joint.from_data", "Joint.from_json", "Joint.from_jsonstring", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_data", "Joint.to_json", "Joint.to_jsonstring", "Joint.validate_data", "Joint.validate_json", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_features", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.from_data", "LButtJoint.from_json", "LButtJoint.from_jsonstring", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.to_data", "LButtJoint.to_json", "LButtJoint.to_jsonstring", "LButtJoint.validate_data", "LButtJoint.validate_json", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_features", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.from_data", "LMiterJoint.from_json", "LMiterJoint.from_jsonstring", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_data", "LMiterJoint.to_json", "LMiterJoint.to_jsonstring", "LMiterJoint.validate_data", "LMiterJoint.validate_json", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_features", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.from_data", "TButtJoint.from_json", "TButtJoint.from_jsonstring", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.to_data", "TButtJoint.to_json", "TButtJoint.to_jsonstring", "TButtJoint.validate_data", "TButtJoint.validate_json", "find_neighboring_beams", "Beam", "Beam.ToString", "Beam.add_feature", "Beam.align_z", "Beam.apply_features", "Beam.clear_features", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extend_ends", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_data", "Beam.from_endpoints", "Beam.from_json", "Beam.from_jsonstring", "Beam.get_geometry", "Beam.is_identical", "Beam.move_endpoint", "Beam.sha256", "Beam.to_data", "Beam.to_json", "Beam.to_jsonstring", "Beam.update_beam_geometry", "Beam.validate_data", "Beam.validate_json", "find_neighboring_beams", "Citing", "Examples", "Create Joint", "COMPAS TIMBER", "Installation", "Manual installation for developers", "Manual installation", "Quick installation", "License", "Grasshopper plugin", "Assembly", "Attributes", "Beam", "Examples", "Features", "Joints", "Show", "Utils", "Workflow"], "terms": {"compas_timb": [0, 6, 29, 30, 33, 37, 41, 48, 50, 54, 65, 69, 80, 84, 95, 96, 121, 122, 125, 128], "assembli": [1, 6, 8, 9, 10, 11, 14, 16, 17, 21, 22, 37, 41, 50, 54, 58, 65, 69, 73, 80, 84, 88, 124, 125, 131, 137, 138, 140], "part": [1, 6, 9, 10, 11, 12, 13, 16, 17, 41, 96, 121, 125, 134, 136, 138], "connect": [1, 7, 9, 29, 30, 33, 34, 37, 41, 48, 50, 51, 54, 65, 66, 69, 80, 81, 84, 95, 97, 125, 130, 132, 137], "rhino": [1, 7, 34, 51, 66, 81, 95, 97, 121, 123, 125, 127, 129, 133, 134, 139], "thi": [2, 6, 7, 8, 14, 15, 16, 18, 19, 20, 22, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 71, 72, 80, 81, 82, 83, 84, 85, 86, 87, 95, 96, 97, 98, 100, 101, 102, 105, 106, 108, 109, 110, 111, 112, 121, 123, 125, 127, 128, 129, 130, 133, 134, 138, 140], "place": [2, 7, 34, 51, 66, 81, 97, 129], "tool": [2, 3, 30, 125, 131, 134, 138, 139], "plan": 2, "fabric": [2, 122, 125], "process": [2, 125, 131, 140], "e": [2, 32, 41, 123, 127, 133, 137, 138, 139], "g": [2, 32, 41, 123, 127, 133], "defin": [2, 12, 35, 106, 133, 134, 137, 139, 140], "grip": 2, "plane": [2, 65, 82, 105, 134, 136, 139], "insert": 2, "path": [2, 19, 25, 39, 44, 56, 61, 71, 76, 86, 91, 109, 116, 127], "sequenc": [2, 125], "etc": [2, 6, 96, 123, 125, 134], "ar": [3, 7, 9, 16, 31, 32, 34, 37, 41, 51, 54, 66, 69, 81, 84, 95, 97, 100, 101, 112, 123, 126, 132, 133, 136, 137, 138, 139, 140], "collect": [3, 11, 121], "gener": [3, 32, 140], "joint": [3, 6, 10, 12, 22, 30, 48, 50, 52, 54, 65, 67, 69, 80, 82, 84, 123, 125, 131, 132, 134, 138, 140], "geometri": [3, 96, 98, 100, 104, 106, 108, 111, 118, 121, 125, 131, 132, 134, 136, 138, 139, 140], "The": [4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 33, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 50, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 115, 116, 117, 119, 120, 121, 130, 131, 133, 134, 136, 137, 139, 140], "modul": [4, 5, 125], "element": [4, 95, 103], "describ": [4, 24, 43, 60, 75, 90, 115], "simpl": [4, 125, 131], "re": 4, "usabl": 4, "beam": [4, 6, 8, 10, 29, 30, 31, 32, 33, 35, 37, 41, 50, 52, 54, 58, 65, 67, 69, 73, 80, 82, 84, 88, 95, 121, 124, 125, 131, 132, 133, 136, 137, 138, 139, 140], "rod": 4, "plate": [4, 10], "contain": [5, 6, 18, 19, 20, 25, 31, 37, 38, 39, 40, 44, 54, 55, 56, 57, 61, 69, 70, 71, 72, 76, 84, 85, 86, 87, 91, 95, 96, 109, 110, 116, 121], "function": [5, 95, 131], "type": [5, 7, 15, 18, 19, 20, 32, 34, 36, 38, 39, 40, 50, 51, 53, 55, 56, 57, 65, 66, 68, 70, 71, 72, 80, 81, 83, 85, 86, 87, 96, 97, 102, 106, 108, 109, 110, 125, 137, 138], "meant": 5, "us": [5, 7, 23, 31, 32, 33, 34, 42, 49, 50, 51, 59, 65, 66, 74, 80, 81, 89, 95, 96, 97, 99, 100, 105, 106, 108, 114, 121, 122, 125, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139], "context": [5, 11], "class": [6, 7, 10, 30, 33, 34, 41, 48, 50, 51, 65, 66, 80, 81, 96, 97, 125], "arg": [6, 33], "kwarg": [6, 9, 11, 33, 96], "sourc": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 129, 133, 134], "base": [6, 29, 30, 33, 48, 50, 65, 80, 96, 125, 132, 137, 140], "repres": [6, 50, 65, 80, 96, 98, 134], "timber": [6, 96, 122, 127, 128, 129, 131, 134, 137, 140], "attribut": [6, 9, 13, 33, 48, 50, 65, 80, 96, 125, 131, 134], "list": [6, 10, 12, 31, 33, 37, 50, 54, 65, 69, 80, 84, 95, 96, 100, 101, 103, 121, 137, 140], "A": [6, 16, 31, 37, 50, 54, 65, 69, 80, 84, 95, 96, 100, 106, 108, 122, 130, 134], "assign": [6, 11, 16, 137, 139], "part_kei": 6, "int": [6, 8, 9, 10, 11, 13, 17, 49], "kei": [6, 8, 11, 17, 41, 133], "includ": [6, 111, 130], "beam_kei": 6, "joint_kei": 6, "method": [6, 7, 30, 32, 33, 34, 37, 41, 48, 50, 51, 52, 54, 65, 66, 67, 69, 80, 81, 82, 84, 96, 97, 100, 125], "inherit": [6, 33, 50, 65, 80, 96, 125], "convert": [7, 24, 34, 43, 51, 60, 66, 75, 81, 90, 97, 115], "instanc": [7, 10, 18, 19, 20, 34, 37, 38, 39, 40, 50, 51, 54, 55, 56, 57, 65, 66, 69, 70, 71, 72, 80, 81, 84, 85, 86, 87, 97, 109, 110, 123], "string": [7, 19, 20, 25, 26, 34, 39, 40, 44, 45, 49, 50, 51, 56, 57, 61, 62, 65, 66, 71, 72, 76, 77, 80, 81, 86, 87, 91, 92, 97, 109, 110, 116, 117, 133, 134], "exist": [7, 34, 51, 66, 81, 97, 128], "net": [7, 34, 51, 66, 81, 97], "compat": [7, 34, 50, 51, 65, 66, 80, 81, 95, 97], "when": [7, 16, 31, 34, 51, 52, 66, 67, 81, 82, 97, 100, 106, 108, 133, 137], "ironpython": [7, 34, 51, 66, 81, 97, 127], "implicit": [7, 34, 51, 66, 81, 97], "convers": [7, 34, 51, 66, 81, 97], "usual": [7, 34, 51, 66, 81, 96, 97], "take": [7, 34, 51, 66, 81, 97, 140], "cpython": [7, 34, 51, 66, 81, 97], "kick": [7, 34, 51, 66, 81, 97], "its": [7, 13, 16, 17, 24, 27, 28, 34, 43, 46, 47, 51, 60, 63, 64, 66, 75, 78, 79, 81, 90, 93, 94, 97, 106, 115, 119, 120, 125, 127, 133, 134, 137], "default": [7, 11, 15, 34, 36, 51, 53, 66, 68, 81, 83, 96, 97, 102, 106, 107, 108, 125, 132, 134, 137, 139], "print": [7, 34, 51, 66, 81, 97], "self": [7, 34, 51, 66, 81, 97], "gettyp": [7, 34, 51, 66, 81, 97], "fullnam": [7, 34, 51, 66, 81, 97], "similar": [7, 34, 51, 66, 81, 97, 137], "overrid": [7, 34, 51, 66, 81, 97, 140], "object": [7, 10, 14, 15, 18, 19, 20, 22, 24, 25, 26, 27, 28, 30, 31, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 97, 102, 109, 110, 115, 116, 117, 119, 120, 125, 132, 133, 134, 138, 139], "fix": [7, 34, 51, 66, 81, 97], "make": [7, 15, 34, 36, 51, 53, 66, 68, 81, 83, 97, 102, 127], "grasshopp": [7, 34, 51, 66, 81, 97, 123, 125, 127, 134], "displai": [7, 34, 51, 66, 81, 97, 133, 138], "proper": [7, 34, 51, 66, 81, 97], "represent": [7, 24, 25, 26, 28, 34, 43, 44, 45, 47, 49, 50, 51, 60, 61, 62, 64, 65, 66, 75, 76, 77, 79, 80, 81, 90, 91, 92, 94, 97, 111, 115, 116, 117, 118, 120], "panel": [7, 34, 51, 66, 81, 97], "other": [7, 10, 34, 51, 66, 81, 97, 112, 122, 130, 137, 140], "output": [7, 32, 34, 51, 66, 81, 97, 132], "add": [8, 9, 10, 11, 35, 52, 67, 82, 98, 127, 128, 131, 132, 139], "paramet": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 31, 32, 36, 37, 38, 39, 40, 42, 44, 45, 49, 50, 53, 54, 55, 56, 57, 59, 61, 62, 65, 68, 69, 70, 71, 72, 74, 76, 77, 80, 83, 84, 85, 86, 87, 89, 91, 92, 95, 96, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 121, 132, 133, 134, 139], "return": [8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 31, 32, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 100, 102, 103, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 132, 138], "graph": [8, 10, 11], "identifi": [8, 9, 10, 11, 13, 16, 17, 95], "ad": [8, 37, 54, 69, 84, 98, 100, 121, 127], "b": 9, "between": [9, 13, 65, 133, 137, 140], "two": [9, 29, 32, 33, 37, 50, 54, 65, 69, 84, 103, 134, 137, 140], "from": [9, 18, 19, 20, 22, 23, 32, 38, 39, 40, 42, 55, 56, 57, 59, 70, 71, 72, 74, 85, 86, 87, 89, 106, 108, 109, 110, 114, 123, 125, 127, 129, 130, 131, 133, 134, 136, 137], "dict": [9, 11, 13, 18, 24, 26, 27, 38, 43, 45, 46, 55, 60, 62, 63, 70, 75, 77, 78, 85, 90, 92, 93, 115, 117, 119], "str": [9, 11, 13, 16, 17, 20, 23, 26, 28, 40, 42, 45, 47, 49, 50, 57, 59, 62, 64, 65, 72, 74, 77, 79, 80, 87, 89, 92, 94, 96, 100, 103, 106, 108, 110, 114, 117, 120], "ani": [9, 11, 13, 100, 111, 123, 130, 136, 138], "option": [9, 11, 13, 15, 17, 23, 25, 26, 31, 32, 36, 42, 44, 45, 53, 59, 61, 62, 68, 74, 76, 77, 83, 89, 91, 92, 95, 102, 114, 116, 117, 126, 128, 134, 137, 140], "compil": 9, "name": [9, 11, 128, 133, 137, 138], "argument": 9, "tupl": [9, 13, 32, 65, 96, 105], "node": 9, "rais": [9, 27, 28, 37, 46, 47, 54, 63, 64, 69, 78, 79, 84, 93, 94, 119, 120], "assemblyerror": 9, "If": [9, 13, 23, 25, 26, 32, 42, 44, 45, 59, 61, 62, 74, 76, 77, 89, 91, 92, 98, 101, 111, 114, 116, 117, 121, 122, 128, 134, 137], "an": [10, 11, 15, 18, 19, 20, 24, 25, 26, 29, 31, 36, 37, 38, 39, 40, 43, 44, 45, 50, 53, 54, 55, 56, 57, 60, 61, 62, 65, 68, 69, 70, 71, 72, 75, 76, 77, 80, 83, 84, 85, 86, 87, 90, 91, 92, 96, 102, 109, 110, 115, 116, 117, 122, 123, 125, 128, 129, 130, 131, 132, 133, 134, 137], "dowel": 10, "steel": 10, "involv": 10, "current": [10, 11, 15, 36, 53, 68, 83, 102, 118, 125], "none": [11, 15, 16, 17, 25, 31, 32, 36, 44, 50, 53, 61, 65, 68, 76, 80, 83, 91, 95, 101, 102, 106, 107, 108, 116, 121, 134], "note": [11, 95, 122, 138], "i": [11, 12, 13, 16, 31, 32, 33, 37, 41, 50, 52, 54, 65, 67, 69, 80, 82, 84, 95, 96, 98, 101, 103, 104, 105, 111, 122, 125, 127, 130, 131, 132, 133, 134, 136, 137, 138, 139], "uniqu": [11, 16], "onli": [11, 41, 101, 133], "nest": 11, "mai": [11, 132, 133], "have": [11, 37, 54, 69, 84, 104, 128, 129, 134], "same": [11, 12, 32, 129, 137, 140], "valu": [11, 49, 95, 96, 104, 112, 118, 133], "one": [11, 134, 137, 140], "which": [11, 31, 32, 37, 50, 54, 65, 69, 80, 84, 95, 99, 100, 101, 103, 104, 105, 132, 134, 137], "case": [11, 101], "automat": [11, 16, 52, 67, 82, 137, 139], "integ": 11, "addit": [11, 13, 31, 131, 133, 134, 136], "check": [12, 121, 125, 133], "alreadi": 12, "set": [12, 31, 95, 121, 132, 133, 134, 138], "bool": [12, 13, 14, 23, 25, 26, 31, 42, 44, 45, 59, 61, 62, 74, 76, 77, 89, 91, 92, 98, 111, 112, 114, 116, 117], "data": [13, 14, 15, 18, 19, 20, 23, 24, 25, 26, 27, 28, 33, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 102, 107, 109, 110, 114, 115, 116, 117, 119, 120], "fals": [13, 14, 23, 25, 26, 31, 42, 44, 45, 59, 61, 62, 74, 76, 77, 89, 91, 92, 98, 111, 114, 116, 117], "iter": 13, "over": 13, "true": [13, 14, 23, 25, 26, 31, 42, 44, 45, 59, 61, 62, 74, 76, 77, 89, 91, 92, 98, 105, 111, 112, 114, 116, 117, 132, 134], "yield": [13, 21], "next": 13, "u": 13, "v": [13, 127], "connector": 13, "attr": 13, "obj": [14, 23, 42, 59, 74, 89, 114], "given": [14, 31, 32, 37, 49, 54, 69, 84, 95, 99, 103, 104, 105, 108, 133], "otherwis": [14, 32, 104, 130, 134], "look": 14, "cl": [15, 36, 53, 68, 83, 102], "independ": [15, 36, 53, 68, 83, 102], "guid": [16, 127, 128, 134], "global": 16, "creat": [16, 33, 50, 52, 65, 67, 80, 82, 96, 106, 108, 123, 125, 128, 129, 131, 132, 133, 134, 137, 140], "can": [16, 17, 123, 129, 131, 134, 137], "t": [16, 17, 80, 128], "found": [16, 17], "find": [17, 31, 95, 121, 137], "classmethod": [18, 19, 20, 31, 37, 38, 39, 40, 49, 54, 55, 56, 57, 69, 70, 71, 72, 84, 85, 86, 87, 106, 107, 108, 109, 110], "construct": [18, 19, 20, 38, 39, 40, 55, 56, 57, 70, 71, 72, 85, 86, 87, 109, 110, 125], "provid": [18, 30, 38, 55, 70, 85, 101, 130, 131, 132, 134], "dictionari": [18, 38, 55, 70, 85], "ha": [18, 19, 20, 29, 38, 39, 40, 55, 56, 57, 70, 71, 72, 85, 86, 87, 95, 109, 110, 134, 137, 138, 139], "correct": [18, 19, 20, 38, 39, 40, 55, 56, 57, 70, 71, 72, 85, 86, 87, 109, 110], "schema": [18, 19, 20, 24, 27, 28, 38, 39, 40, 43, 46, 47, 55, 56, 57, 60, 63, 64, 70, 71, 72, 75, 78, 79, 85, 86, 87, 90, 93, 94, 109, 110, 115, 119, 120], "filepath": [19, 25, 39, 44, 56, 61, 71, 76, 86, 91, 109, 116], "serial": [19, 20, 25, 26, 39, 40, 41, 44, 45, 56, 57, 58, 61, 62, 71, 72, 73, 76, 77, 86, 87, 88, 91, 92, 109, 110, 116, 117], "json": [19, 20, 25, 26, 28, 39, 40, 44, 45, 47, 56, 57, 61, 62, 64, 71, 72, 76, 77, 79, 86, 87, 91, 92, 94, 109, 110, 116, 117, 120], "file": [19, 20, 25, 39, 40, 44, 56, 57, 61, 71, 72, 76, 86, 87, 91, 109, 110, 116, 129, 130, 135], "like": [19, 25, 39, 44, 56, 61, 71, 76, 86, 91, 109, 116, 125, 131, 132], "url": [19, 39, 56, 71, 86, 109, 122], "individu": 21, "remov": [22, 101, 133, 136], "as_str": [23, 42, 59, 74, 89, 114], "comput": [23, 32, 42, 59, 74, 89, 114], "hash": [23, 42, 59, 74, 89, 114], "comparison": [23, 42, 59, 74, 89, 114], "dure": [23, 41, 42, 59, 74, 89, 100, 114], "version": [23, 42, 59, 74, 89, 114, 127], "control": [23, 42, 59, 74, 89, 114], "algorithm": [23, 42, 59, 74, 89, 95, 114], "digest": [23, 42, 59, 74, 89, 114], "hexadecim": [23, 42, 59, 74, 89, 114], "format": [23, 26, 42, 45, 59, 62, 74, 77, 89, 92, 114, 117, 133], "rather": [23, 42, 59, 74, 89, 114], "than": [23, 37, 42, 54, 59, 69, 74, 84, 89, 114, 137], "byte": [23, 42, 59, 74, 89, 114], "exampl": [23, 41, 42, 59, 74, 89, 95, 114, 125, 127, 131, 133, 134, 137, 140], "compa": [23, 42, 59, 74, 89, 96, 101, 111, 114, 122, 127, 128, 129, 131, 137], "datastructur": [23, 42, 59, 74, 89, 101, 114], "import": [23, 42, 59, 74, 89, 114, 140], "mesh": [23, 42, 59, 74, 89, 96, 106, 108, 114, 124], "from_obj": [23, 42, 59, 74, 89, 114], "get": [23, 42, 59, 74, 89, 114, 131], "face": [23, 42, 59, 74, 89, 96, 105, 114], "v1": [23, 42, 59, 74, 89, 114], "v2": [23, 42, 59, 74, 89, 114], "vertex_attribut": [23, 42, 59, 74, 89, 114], "vertex_sampl": [23, 42, 59, 74, 89, 114], "1": [23, 42, 59, 74, 89, 96, 114, 124, 134], "0": [23, 42, 59, 74, 89, 96, 113, 114, 124, 127, 134, 137], "z": [23, 42, 59, 74, 89, 96, 106, 108, 114, 134, 136, 139], "v3": [23, 42, 59, 74, 89, 114], "nativ": [24, 43, 60, 75, 90, 115], "pretti": [25, 26, 44, 45, 61, 62, 76, 77, 91, 92, 116, 117], "human": [25, 44, 61, 76, 91, 116], "readabl": [25, 44, 61, 76, 91, 116], "": [26, 27, 28, 35, 45, 46, 47, 50, 62, 63, 64, 65, 77, 78, 79, 80, 92, 93, 94, 96, 98, 99, 103, 104, 106, 108, 112, 117, 119, 120, 129, 133, 139], "valid": [27, 28, 46, 47, 63, 64, 78, 79, 93, 94, 119, 120], "against": [27, 28, 46, 47, 63, 64, 78, 79, 93, 94, 119, 120], "schemaerror": [27, 46, 63, 78, 93, 119], "jsonschema": [28, 47, 64, 79, 94, 120], "except": [28, 29, 47, 64, 79, 94, 120], "validationerror": [28, 47, 64, 79, 94, 120], "baseexcept": 29, "indic": [29, 106, 108, 133, 134], "error": [29, 100, 132, 133], "occur": [29, 100], "while": 29, "try": 29, "join": [29, 33, 37, 50, 54, 65, 69, 80, 84, 132, 137], "more": [29, 125, 131], "detect": 30, "intersect": [30, 31, 32, 137], "topologi": [30, 32, 37, 48, 49, 50, 54, 65, 69, 80, 84], "rtree": [31, 121], "max_dist": [31, 32], "pair": [31, 32, 95, 121, 133, 137, 140], "r": [31, 95, 127], "tree": [31, 95], "search": [31, 95], "neighbor": [31, 95, 121], "float": [31, 32, 95, 96, 104, 105, 106, 108, 121], "distanc": [31, 32, 137], "apart": 31, "non": 31, "touch": 31, "still": 31, "consid": [31, 32], "neightbor": [31, 121], "beam_a": [32, 65], "beam_b": [32, 65], "tol": 32, "1e": 32, "06": 32, "within": [32, 112], "role": [32, 41], "sensit": 32, "consist": 32, "specif": [32, 41, 125], "order": [32, 95, 140], "main": [32, 41, 50, 58, 73, 80, 82, 88, 127, 128, 137], "first": [32, 65, 103, 128, 137, 140], "cross": [32, 41, 50, 58, 73, 80, 82, 88, 96, 106, 108, 134, 137], "second": [32, 65, 103, 137], "thei": 32, "were": [32, 133], "input": [32, 95, 131, 133, 134, 137], "toler": [32, 96, 112, 137], "mathemat": 32, "maximum": 32, "desigen": 32, "unit": [32, 95, 104, 105], "jointtopologi": 32, "should": [33, 41, 95, 104, 111, 118, 137], "instanti": 33, "directli": 33, "respect": [33, 41, 137], "implement": [33, 41, 121, 125], "instead": [33, 134], "featur": [35, 52, 67, 82, 96, 98, 100, 101, 111, 125, 131, 132, 138, 140], "affect": 35, "new": [37, 54, 69, 84, 104, 128, 129, 134], "expect": [37, 54, 69, 84], "been": [37, 54, 69, 84], "befor": [37, 54, 69, 84, 138], "call": [37, 41, 52, 54, 67, 69, 82, 84, 98, 118, 134, 137], "code": [37, 54, 69, 84, 123, 125], "doe": [37, 54, 69, 84, 129, 134, 137], "verifi": [37, 54, 69, 84, 105], "adjac": [37, 54, 69, 84], "lie": [37, 54, 69, 84], "allow": [37, 54, 69, 84, 105], "them": [37, 54, 65, 69, 84, 123, 133, 137], "respons": [37, 54, 69, 84], "valueerror": [37, 54, 69, 84], "less": [37, 54, 69, 84, 96], "assemebli": [37, 54, 69, 84], "jo": [37, 54, 69, 84], "belong": [37, 54, 69, 84], "whould": [37, 54, 69, 84], "togeth": [37, 54, 69, 84, 129, 134], "restor": [41, 101], "refer": [41, 58, 73, 88, 125, 127, 131, 133, 137], "associ": [41, 50, 65, 80, 130], "To": [41, 131, 132, 137, 140], "avoid": [41, 137], "circular": 41, "store": [41, 133, 134], "de": [41, 58, 73, 88], "sinc": 41, "concret": 41, "see": [41, 127, 131, 134, 135, 139], "tbuttjoint": [41, 124], "enumer": 48, "possibl": [48, 100, 101, 133], "topo_unknown": [48, 49], "topo_i": 48, "topo_l": [48, 49], "topo_t": [48, 49], "topo_x": [48, 49], "For": [49, 95, 125, 139, 140], "log": [49, 132], "One": 49, "main_beam": [50, 80, 124], "cross_beam": [50, 80, 124], "l": [50, 65], "butt": [50, 80], "end": [50, 65, 80, 96, 103, 104, 105, 108, 137], "trim": [50, 52, 65, 67, 80, 82, 132, 136, 137], "pleas": [50, 65, 80, 122], "properli": [50, 65, 80], "timberassembli": [50, 65, 80, 124], "cutting_plane_main": [50, 80], "frame": [50, 65, 80, 96, 111, 124, 125, 131, 132, 140], "cutting_plane_cross": [50, 80], "joint_typ": [50, 65, 80], "requir": [52, 67, 127, 129], "extens": [52, 67, 104, 105], "both": [52, 67, 104, 129], "assemli": [58, 73, 88], "after": [58, 73, 88, 118], "resotr": [58, 73, 88], "save": [58, 73, 88], "cutoff": 65, "miter": 65, "bisector": [65, 137], "angl": [65, 137], "centerlin": [65, 96, 103, 104, 106, 108, 131, 133, 134, 137, 139], "cutting_plan": 65, "each": [65, 105, 118, 133, 137], "normal": [65, 96], "point": [65, 96, 103, 108, 125, 139], "opposit": 65, "direct": [65, 96, 105, 106, 108, 121, 134], "along": [80, 96, 129, 137], "length": [80, 96, 106, 137], "anoth": 80, "inflate_bi": [95, 121], "axi": [95, 96, 106, 108, 134, 139], "align": [95, 96, 99, 131, 139], "bound": [95, 96, 121], "box": [95, 96, 121, 131, 138], "aabb": [95, 96], "enlarg": 95, "amount": [95, 104, 105, 121], "design": [95, 104, 122, 125, 131, 133, 134], "regard": 95, "inflat": [95, 121], "pluggabl": 95, "In": [95, 101, 125, 137], "plugin": [95, 125, 134], "avail": 95, "width": [96, 106, 108, 124, 133, 134], "height": [96, 106, 108, 124, 133, 134], "geometry_typ": [96, 106, 108, 124], "stud": [96, 134], "slat": 96, "rectangular": [96, 134], "section": [96, 106, 108, 123, 131, 134], "local": [96, 129, 134, 138], "coordin": [96, 134, 138], "system": [96, 134, 138], "origin": [96, 134, 138, 139], "locat": [96, 129, 134], "start": [96, 103, 104, 105, 108, 113, 131, 134], "x": [96, 134, 137, 139], "correspond": [96, 103, 133, 134, 139], "major": [96, 134], "also": [96, 122, 125, 127, 131, 133, 134], "fibr": [96, 131], "solid": [96, 132], "wood": 96, "y": [96, 134, 139], "smaller": [96, 134], "dimens": [96, 134], "larger": [96, 134], "either": [96, 103, 106, 108], "brep": [96, 106, 108, 125, 132, 136, 138, 139], "shape": [96, 134], "parametr": [96, 100, 104, 118, 125], "oper": [96, 132, 136], "perform": 96, "6": 96, "side": [96, 136, 137], "equal": 96, "posit": [96, 104, 136, 137], "2": [96, 124], "3": [96, 128], "4": [96, 124], "5": 96, "line": [96, 106, 125, 133, 134], "centerline_start": 96, "centerline_end": 96, "xmin": 96, "ymin": 96, "zmin": 96, "xmax": 96, "ymax": 96, "zmax": 96, "long_edg": 96, "long": [96, 105], "midpoint": 96, "middl": 96, "appli": [98, 100, 101, 132, 137, 138, 140], "apply_featur": 98, "must": 98, "upon": [98, 125], "vector": [99, 106, 108, 113, 125, 134], "z_axi": 99, "definit": [99, 104, 118, 132], "todo": [99, 105], "Not": 99, "anywher": 99, "need": [99, 127, 133, 140], "all": [100, 101, 105, 121, 130, 133], "previous": 100, "add_featur": 100, "separatelli": 100, "geometr": [100, 125, 132, 136], "accumul": 100, "applic": 100, "assist": 100, "debug": 100, "features_to_clear": 101, "clear": 101, "effect": 101, "select": [101, 137], "shall": [101, 130], "remain": 101, "reappli": 101, "endpoint": [103, 108], "closer": 103, "interest": 103, "depend": [103, 106, 108, 127, 128, 129, 138], "result": [103, 137], "actual": 103, "d_start": 104, "d_end": 104, "extend": [104, 105], "neg": 104, "extenshion": 104, "shortend": 104, "subsequ": 104, "updat": [104, 118], "match": 104, "pln": 105, "metric": 105, "minimum": 105, "pass": 105, "through": [105, 122], "z_vector": [106, 108], "worldz": [106, 108], "worldx": [106, 108], "orient": [106, 108, 139], "gemetry_typ": [106, 108], "altern": [107, 129], "__init__": 107, "point_start": 108, "point_end": 108, "end_point": 108, "with_featur": 111, "transform": 111, "identical": 112, "ones": 112, "000": 113, "which_endpoint": 113, "deprec": 113, "reset": 118, "accrod": 118, "paramter": 118, "prior": 121, "research": [122, 125, 130], "project": [122, 125], "develop": [122, 125, 126, 128], "aleksandra": 122, "apolinarska": 122, "chen": 122, "kasir": 122, "gonzalo": 122, "casa": 122, "gramazio": [122, 125, 130], "kohler": [122, 125, 130], "eth": [122, 125], "zurich": [122, 125], "support": [122, 123], "swiss": 122, "nation": 122, "scienc": 122, "foundat": 122, "center": 122, "compet": 122, "digit": 122, "nccr": 122, "dfab": 122, "programm": 122, "As": 122, "open": [122, 125, 129], "mani": [122, 123, 125], "contributor": 122, "you": [122, 127, 128, 129, 131, 134, 137, 140], "your": [122, 126, 128], "work": 122, "acknowledg": 122, "misc": 122, "titl": 122, "librari": [122, 123, 125, 131], "structur": [122, 125, 131, 132, 140], "author": [122, 130], "anna": 122, "http": [122, 127, 128], "github": [122, 127, 128], "com": [122, 127, 128], "gramaziokohl": 122, "year": 122, "2022": 122, "2023": 122, "doi": 122, "10": 122, "5281": 122, "zenodo": 122, "7934267": 122, "present": [123, 129], "differ": [123, 137, 140], "concept": [123, 131], "There": [123, 133], "multipl": 123, "wai": 123, "run": [123, 125, 129], "execut": 123, "python": [123, 125, 127, 128, 131], "environ": [123, 125, 127, 128, 129], "interact": 123, "session": [123, 129], "id": 123, "text": 123, "editor": 123, "sublim": 123, "visual": [123, 132], "studio": 123, "eclips": 123, "insid": 123, "cad": 123, "blender": 123, "worldxi": 124, "depth": 124, "add_beam": 124, "document": [125, 130, 133, 134, 139], "packag": 125, "model": 125, "written": 125, "framework": 125, "ecosystem": 125, "It": [125, 131, 132, 133, 134, 139], "rhinocero": 125, "3d": 125, "plug": 125, "activ": [125, 128, 132, 134, 139], "being": 125, "continu": 125, "At": 125, "stage": 125, "encompass": 125, "fast": 125, "intuit": 125, "custom": [125, 133], "entiti": 125, "maintain": 125, "semant": 125, "inform": [125, 139], "about": 125, "futur": [125, 129], "expand": 125, "entail": [125, 133], "interfac": 125, "analysi": 125, "softwar": [125, 130], "specialist": 125, "built": [125, 131], "basic": 125, "complex": 125, "resolv": 125, "backend": 125, "rhinocommon": 125, "sdk": 125, "handl": 125, "opencascad": 125, "via": 125, "occ": 125, "introduct": 125, "instal": 125, "quick": [125, 126], "manual": [125, 126], "api": [125, 131], "workflow": [125, 131, 133, 134], "show": [125, 131], "util": [125, 131], "licens": 125, "cite": 125, "index": [125, 138], "want": [127, 128], "purpos": [127, 128, 130], "detail": [127, 131], "here": [127, 129, 135, 137, 139], "fork": 127, "repo": 127, "clone": 127, "navig": [127, 129], "repositori": [127, 129], "folder": 127, "cd": 127, "pip": [127, 128], "git": [127, 128], "dev": [127, 128], "txt": 127, "build": [127, 140], "ghuser": 127, "compon": [127, 129, 132, 133, 134, 138], "invok": 127, "sure": 127, "variabl": 127, "dependeci": 127, "m": 127, "compas_rhino": 127, "7": 127, "specifi": 127, "virutu": 128, "conda": [128, 129], "virtual": [128, 129], "replac": 128, "myenvnam": 128, "desir": [128, 139], "n": 128, "9": 128, "don": 128, "forg": 128, "yet": 128, "config": 128, "env": 128, "channel": 128, "prerequisit": 129, "assum": 129, "rhinoceros3d": 129, "usag": 129, "obtain": [129, 130], "offlin": 129, "wheel": 129, "done": 129, "donwload": 129, "zip": 129, "directori": 129, "script": 129, "reli": 129, "presenc": 129, "window": 129, "copi": [129, 130], "win_instal": 129, "cmd": 129, "target": 129, "machin": 129, "doubl": 129, "click": 129, "ex": 129, "mac": 129, "mac_instal": 129, "termin": 129, "sh": 129, "what": 129, "background": 129, "batch": 129, "download": 129, "miniconda": 129, "compas_futur": 129, "mit": 130, "copyright": 130, "c": 130, "2020": 130, "02": 130, "17": 130, "permiss": 130, "herebi": 130, "grant": 130, "free": 130, "charg": 130, "person": 130, "deal": 130, "without": 130, "restrict": 130, "limit": 130, "right": 130, "modifi": 130, "merg": 130, "publish": 130, "distribut": 130, "sublicens": 130, "sell": 130, "permit": 130, "whom": 130, "furnish": 130, "do": 130, "so": 130, "subject": 130, "follow": [130, 131], "condit": 130, "abov": 130, "notic": 130, "substanti": 130, "portion": 130, "THE": 130, "AS": 130, "warranti": 130, "OF": 130, "kind": 130, "express": 130, "OR": 130, "impli": [130, 132], "BUT": 130, "NOT": 130, "TO": 130, "merchant": 130, "fit": 130, "FOR": 130, "particular": 130, "AND": 130, "noninfring": 130, "IN": 130, "NO": 130, "event": 130, "holder": 130, "BE": 130, "liabl": 130, "claim": 130, "damag": 130, "liabil": 130, "whether": [130, 138], "action": 130, "contract": 130, "tort": 130, "aris": 130, "out": 130, "WITH": 130, "easi": 131, "autom": [131, 137], "bake": 131, "map": [131, 139], "textur": [131, 139], "render": [131, 139], "boolean": [131, 132, 136], "style": 131, "planar": [131, 137], "cut": [131, 132, 136, 137], "hole": 131, "some": [131, 139], "top": 131, "might": 131, "ghpython": 131, "componen": 131, "overal": 131, "idea": 131, "how": [131, 137], "Then": [131, 137], "explain": 131, "made": 132, "subtract": [132, 136], "computation": 132, "expens": 132, "disabl": 132, "applyfeatur": 132, "unsuccess": 132, "abstract": 132, "showassembli": [132, 138], "group": 133, "intend": [133, 134], "hybrid": 133, "encod": 133, "concaten": 133, "colon": 133, "separ": 133, "entri": [133, 140], "underscor": 133, "_": 133, "attr1nam": 133, "attr1value_attr2nam": 133, "attr2valu": 133, "four": [133, 137], "standard": 133, "categori": [133, 134, 137], "zvector": [133, 134], "setstandardattribut": 133, "write": [133, 134], "readstandardattribut": 133, "read": 133, "checkstandardattribut": 133, "correctli": 133, "miss": 133, "retriev": 133, "user": 133, "later": [133, 134, 137], "filter": 133, "accord": [133, 137], "criteria": 133, "These": 133, "deleteattribut": 133, "setcustomattribut": 133, "readallattribut": 133, "linear": [134, 137], "straight": 134, "rafter": 134, "joist": 134, "where": [134, 139], "beamfromcurv": 134, "form": [134, 137], "linecurv": 134, "beamfromcurveguid": 134, "referenc": 134, "drawn": 134, "rotat": 134, "around": 134, "li": [134, 139], "sai": 134, "perpendicular": 134, "cannot": 134, "parallel": 134, "world": 134, "vertic": 134, "convent": 134, "rule": [134, 137], "jointcategoryrul": [134, 137], "automaticjoint": 134, "updaterefobj": 134, "onc": 134, "preview": [134, 138], "extract": [134, 138], "demo": 135, "ly": 136, "three": 137, "prefix": 137, "rel": 137, "we": 137, "distinguish": 137, "topolog": 137, "situat": 137, "splice": 137, "co": 137, "corner": 137, "meet": 137, "addition": 137, "clean": 137, "serv": [137, 139], "cata": 137, "catb": 137, "thing": 137, "determin": 137, "ye": 137, "everi": 137, "tri": 137, "unintend": 137, "maxdist": 137, "exactli": 137, "certain": 137, "000001": 137, "inspect": 138, "showbeam": 138, "showbeamfram": 138, "showbeamindex": 138, "showjointtyp": 138, "bakewithboxmap": 139, "layer": 139, "materi": 139, "random": 139, "deviat": 139, "mapsiz": 139, "scale": 139, "adjust": 139, "size": 139, "imag": 139, "ratio": 139, "bitmap": 139, "care": 140, "final": 140, "matter": 140, "last": 140, "earlier": 140}, "objects": {"": [[1, 0, 0, "-", "compas_timber"]], "compas_timber": [[2, 0, 0, "-", "assembly"], [3, 0, 0, "-", "connections"], [4, 0, 0, "-", "parts"], [5, 0, 0, "-", "rhino"]], "compas_timber.assembly": [[6, 1, 1, "", "TimberAssembly"]], "compas_timber.assembly.TimberAssembly": [[7, 2, 1, "", "ToString"], [8, 2, 1, "", "add_beam"], [9, 2, 1, "", "add_connection"], [10, 2, 1, "", "add_joint"], [11, 2, 1, "", "add_part"], [12, 2, 1, "", "are_parts_joined"], [13, 2, 1, "", "connections"], [14, 2, 1, "", "contains"], [15, 2, 1, "", "copy"], [16, 2, 1, "", "find"], [17, 2, 1, "", "find_by_key"], [18, 2, 1, "", "from_data"], [19, 2, 1, "", "from_json"], [20, 2, 1, "", "from_jsonstring"], [21, 2, 1, "", "parts"], [22, 2, 1, "", "remove_joint"], [23, 2, 1, "", "sha256"], [24, 2, 1, "", "to_data"], [25, 2, 1, "", "to_json"], [26, 2, 1, "", "to_jsonstring"], [27, 2, 1, "", "validate_data"], [28, 2, 1, "", "validate_json"]], "compas_timber.connections": [[29, 3, 1, "", "BeamJoinningError"], [30, 1, 1, "", "ConnectionSolver"], [33, 1, 1, "", "Joint"], [48, 1, 1, "", "JointTopology"], [50, 1, 1, "", "LButtJoint"], [65, 1, 1, "", "LMiterJoint"], [80, 1, 1, "", "TButtJoint"], [95, 4, 1, "", "find_neighboring_beams"]], "compas_timber.connections.ConnectionSolver": [[31, 2, 1, "", "find_intersecting_pairs"], [32, 2, 1, "", "find_topology"]], "compas_timber.connections.Joint": [[34, 2, 1, "", "ToString"], [35, 2, 1, "", "add_features"], [36, 2, 1, "", "copy"], [37, 2, 1, "", "create"], [38, 2, 1, "", "from_data"], [39, 2, 1, "", "from_json"], [40, 2, 1, "", "from_jsonstring"], [41, 2, 1, "", "restore_beams_from_keys"], [42, 2, 1, "", "sha256"], [43, 2, 1, "", "to_data"], [44, 2, 1, "", "to_json"], [45, 2, 1, "", "to_jsonstring"], [46, 2, 1, "", "validate_data"], [47, 2, 1, "", "validate_json"]], "compas_timber.connections.JointTopology": [[49, 2, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[51, 2, 1, "", "ToString"], [52, 2, 1, "", "add_features"], [53, 2, 1, "", "copy"], [54, 2, 1, "", "create"], [55, 2, 1, "", "from_data"], [56, 2, 1, "", "from_json"], [57, 2, 1, "", "from_jsonstring"], [58, 2, 1, "", "restore_beams_from_keys"], [59, 2, 1, "", "sha256"], [60, 2, 1, "", "to_data"], [61, 2, 1, "", "to_json"], [62, 2, 1, "", "to_jsonstring"], [63, 2, 1, "", "validate_data"], [64, 2, 1, "", "validate_json"]], "compas_timber.connections.LMiterJoint": [[66, 2, 1, "", "ToString"], [67, 2, 1, "", "add_features"], [68, 2, 1, "", "copy"], [69, 2, 1, "", "create"], [70, 2, 1, "", "from_data"], [71, 2, 1, "", "from_json"], [72, 2, 1, "", "from_jsonstring"], [73, 2, 1, "", "restore_beams_from_keys"], [74, 2, 1, "", "sha256"], [75, 2, 1, "", "to_data"], [76, 2, 1, "", "to_json"], [77, 2, 1, "", "to_jsonstring"], [78, 2, 1, "", "validate_data"], [79, 2, 1, "", "validate_json"]], "compas_timber.connections.TButtJoint": [[81, 2, 1, "", "ToString"], [82, 2, 1, "", "add_features"], [83, 2, 1, "", "copy"], [84, 2, 1, "", "create"], [85, 2, 1, "", "from_data"], [86, 2, 1, "", "from_json"], [87, 2, 1, "", "from_jsonstring"], [88, 2, 1, "", "restore_beams_from_keys"], [89, 2, 1, "", "sha256"], [90, 2, 1, "", "to_data"], [91, 2, 1, "", "to_json"], [92, 2, 1, "", "to_jsonstring"], [93, 2, 1, "", "validate_data"], [94, 2, 1, "", "validate_json"]], "compas_timber.parts": [[96, 1, 1, "", "Beam"]], "compas_timber.parts.Beam": [[97, 2, 1, "", "ToString"], [98, 2, 1, "", "add_feature"], [99, 2, 1, "", "align_z"], [100, 2, 1, "", "apply_features"], [101, 2, 1, "", "clear_features"], [102, 2, 1, "", "copy"], [103, 2, 1, "", "endpoint_closest_to_point"], [104, 2, 1, "", "extend_ends"], [105, 2, 1, "", "extension_to_plane"], [106, 2, 1, "", "from_centerline"], [107, 2, 1, "", "from_data"], [108, 2, 1, "", "from_endpoints"], [109, 2, 1, "", "from_json"], [110, 2, 1, "", "from_jsonstring"], [111, 2, 1, "", "get_geometry"], [112, 2, 1, "", "is_identical"], [113, 2, 1, "", "move_endpoint"], [114, 2, 1, "", "sha256"], [115, 2, 1, "", "to_data"], [116, 2, 1, "", "to_json"], [117, 2, 1, "", "to_jsonstring"], [118, 2, 1, "", "update_beam_geometry"], [119, 2, 1, "", "validate_data"], [120, 2, 1, "", "validate_json"]], "compas_timber.rhino": [[121, 4, 1, "", "find_neighboring_beams"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:exception", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "exception", "Python exception"], "4": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "packag": 0, "compas_timb": 1, "assembli": [2, 123, 132], "class": [2, 3, 4], "connect": [3, 13], "function": 3, "except": 3, "part": [4, 21], "rhino": 5, "plugin": [5, 131], "timberassembli": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "tostr": [7, 34, 51, 66, 81, 97], "add_beam": 8, "add_connect": 9, "add_joint": 10, "add_part": 11, "are_parts_join": 12, "contain": 14, "copi": [15, 36, 53, 68, 83, 102], "find": 16, "find_by_kei": 17, "from_data": [18, 38, 55, 70, 85, 107], "from_json": [19, 39, 56, 71, 86, 109], "from_jsonstr": [20, 40, 57, 72, 87, 110], "remove_joint": 22, "sha256": [23, 42, 59, 74, 89, 114], "to_data": [24, 43, 60, 75, 90, 115], "to_json": [25, 44, 61, 76, 91, 116], "to_jsonstr": [26, 45, 62, 77, 92, 117], "validate_data": [27, 46, 63, 78, 93, 119], "validate_json": [28, 47, 64, 79, 94, 120], "beamjoinningerror": 29, "connectionsolv": [30, 31, 32], "find_intersecting_pair": 31, "find_topologi": 32, "joint": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 124, 137], "add_featur": [35, 52, 67, 82, 98], "creat": [37, 54, 69, 84, 124], "restore_beams_from_kei": [41, 58, 73, 88], "jointtopologi": [48, 49], "get_nam": 49, "lbuttjoint": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "lmiterjoint": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "tbuttjoint": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "find_neighboring_beam": [95, 121], "beam": [96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 134], "align_z": 99, "apply_featur": 100, "clear_featur": 101, "endpoint_closest_to_point": 103, "extend_end": 104, "extension_to_plan": 105, "from_centerlin": 106, "from_endpoint": 108, "get_geometri": 111, "is_ident": 112, "move_endpoint": 113, "update_beam_geometri": 118, "cite": 122, "exampl": [123, 135], "timber": [123, 125], "compa": 125, "depend": 125, "tabl": 125, "content": 125, "indic": 125, "instal": [126, 127, 128, 129], "manual": [127, 128], "develop": 127, "quick": 129, "licens": 130, "grasshopp": 131, "attribut": 133, "featur": 136, "topologi": 137, "compon": 137, "t": 137, "butt": 137, "l": 137, "miter": 137, "automaticjoint": 137, "wizzard": 137, "show": 138, "util": 139, "bake": 139, "boxmap": 139, "workflow": 140}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Packages": [[0, "packages"]], "compas_timber": [[1, "module-compas_timber"], [1, "id1"]], "assembly": [[2, "assembly"]], "Classes": [[2, "classes"], [3, "classes"], [4, "classes"]], "connections": [[3, "connections"]], "Functions": [[3, "functions"]], "Exceptions": [[3, "exceptions"]], "parts": [[4, "parts"]], "rhino": [[5, "rhino"]], "Plugins": [[5, "plugins"]], "TimberAssembly": [[6, "timberassembly"]], "TimberAssembly.ToString": [[7, "timberassembly-tostring"]], "TimberAssembly.add_beam": [[8, "timberassembly-add-beam"]], "TimberAssembly.add_connection": [[9, "timberassembly-add-connection"]], "TimberAssembly.add_joint": [[10, "timberassembly-add-joint"]], "TimberAssembly.add_part": [[11, "timberassembly-add-part"]], "TimberAssembly.are_parts_joined": [[12, "timberassembly-are-parts-joined"]], "TimberAssembly.connections": [[13, "timberassembly-connections"]], "TimberAssembly.contains": [[14, "timberassembly-contains"]], "TimberAssembly.copy": [[15, "timberassembly-copy"]], "TimberAssembly.find": [[16, "timberassembly-find"]], "TimberAssembly.find_by_key": [[17, "timberassembly-find-by-key"]], "TimberAssembly.from_data": [[18, "timberassembly-from-data"]], "TimberAssembly.from_json": [[19, "timberassembly-from-json"]], "TimberAssembly.from_jsonstring": [[20, "timberassembly-from-jsonstring"]], "TimberAssembly.parts": [[21, "timberassembly-parts"]], "TimberAssembly.remove_joint": [[22, "timberassembly-remove-joint"]], "TimberAssembly.sha256": [[23, "timberassembly-sha256"]], "TimberAssembly.to_data": [[24, "timberassembly-to-data"]], "TimberAssembly.to_json": [[25, "timberassembly-to-json"]], "TimberAssembly.to_jsonstring": [[26, "timberassembly-to-jsonstring"]], "TimberAssembly.validate_data": [[27, "timberassembly-validate-data"]], "TimberAssembly.validate_json": [[28, "timberassembly-validate-json"]], "BeamJoinningError": [[29, "beamjoinningerror"]], "ConnectionSolver": [[30, "connectionsolver"]], "ConnectionSolver.find_intersecting_pairs": [[31, "connectionsolver-find-intersecting-pairs"]], "ConnectionSolver.find_topology": [[32, "connectionsolver-find-topology"]], "Joint": [[33, "joint"]], "Joint.ToString": [[34, "joint-tostring"]], "Joint.add_features": [[35, "joint-add-features"]], "Joint.copy": [[36, "joint-copy"]], "Joint.create": [[37, "joint-create"]], "Joint.from_data": [[38, "joint-from-data"]], "Joint.from_json": [[39, "joint-from-json"]], "Joint.from_jsonstring": [[40, "joint-from-jsonstring"]], "Joint.restore_beams_from_keys": [[41, "joint-restore-beams-from-keys"]], "Joint.sha256": [[42, "joint-sha256"]], "Joint.to_data": [[43, "joint-to-data"]], "Joint.to_json": [[44, "joint-to-json"]], "Joint.to_jsonstring": [[45, "joint-to-jsonstring"]], "Joint.validate_data": [[46, "joint-validate-data"]], "Joint.validate_json": [[47, "joint-validate-json"]], "JointTopology": [[48, "jointtopology"]], "JointTopology.get_name": [[49, "jointtopology-get-name"]], "LButtJoint": [[50, "lbuttjoint"]], "LButtJoint.ToString": [[51, "lbuttjoint-tostring"]], "LButtJoint.add_features": [[52, "lbuttjoint-add-features"]], "LButtJoint.copy": [[53, "lbuttjoint-copy"]], "LButtJoint.create": [[54, "lbuttjoint-create"]], "LButtJoint.from_data": [[55, "lbuttjoint-from-data"]], "LButtJoint.from_json": [[56, "lbuttjoint-from-json"]], "LButtJoint.from_jsonstring": [[57, "lbuttjoint-from-jsonstring"]], "LButtJoint.restore_beams_from_keys": [[58, "lbuttjoint-restore-beams-from-keys"]], "LButtJoint.sha256": [[59, "lbuttjoint-sha256"]], "LButtJoint.to_data": [[60, "lbuttjoint-to-data"]], "LButtJoint.to_json": [[61, "lbuttjoint-to-json"]], "LButtJoint.to_jsonstring": [[62, "lbuttjoint-to-jsonstring"]], "LButtJoint.validate_data": [[63, "lbuttjoint-validate-data"]], "LButtJoint.validate_json": [[64, "lbuttjoint-validate-json"]], "LMiterJoint": [[65, "lmiterjoint"]], "LMiterJoint.ToString": [[66, "lmiterjoint-tostring"]], "LMiterJoint.add_features": [[67, "lmiterjoint-add-features"]], "LMiterJoint.copy": [[68, "lmiterjoint-copy"]], "LMiterJoint.create": [[69, "lmiterjoint-create"]], "LMiterJoint.from_data": [[70, "lmiterjoint-from-data"]], "LMiterJoint.from_json": [[71, "lmiterjoint-from-json"]], "LMiterJoint.from_jsonstring": [[72, "lmiterjoint-from-jsonstring"]], "LMiterJoint.restore_beams_from_keys": [[73, "lmiterjoint-restore-beams-from-keys"]], "LMiterJoint.sha256": [[74, "lmiterjoint-sha256"]], "LMiterJoint.to_data": [[75, "lmiterjoint-to-data"]], "LMiterJoint.to_json": [[76, "lmiterjoint-to-json"]], "LMiterJoint.to_jsonstring": [[77, "lmiterjoint-to-jsonstring"]], "LMiterJoint.validate_data": [[78, "lmiterjoint-validate-data"]], "LMiterJoint.validate_json": [[79, "lmiterjoint-validate-json"]], "TButtJoint": [[80, "tbuttjoint"]], "TButtJoint.ToString": [[81, "tbuttjoint-tostring"]], "TButtJoint.add_features": [[82, "tbuttjoint-add-features"]], "TButtJoint.copy": [[83, "tbuttjoint-copy"]], "TButtJoint.create": [[84, "tbuttjoint-create"]], "TButtJoint.from_data": [[85, "tbuttjoint-from-data"]], "TButtJoint.from_json": [[86, "tbuttjoint-from-json"]], "TButtJoint.from_jsonstring": [[87, "tbuttjoint-from-jsonstring"]], "TButtJoint.restore_beams_from_keys": [[88, "tbuttjoint-restore-beams-from-keys"]], "TButtJoint.sha256": [[89, "tbuttjoint-sha256"]], "TButtJoint.to_data": [[90, "tbuttjoint-to-data"]], "TButtJoint.to_json": [[91, "tbuttjoint-to-json"]], "TButtJoint.to_jsonstring": [[92, "tbuttjoint-to-jsonstring"]], "TButtJoint.validate_data": [[93, "tbuttjoint-validate-data"]], "TButtJoint.validate_json": [[94, "tbuttjoint-validate-json"]], "find_neighboring_beams": [[95, "find-neighboring-beams"], [121, "find-neighboring-beams"]], "Beam": [[96, "beam"], [134, "beam"]], "Beam.ToString": [[97, "beam-tostring"]], "Beam.add_feature": [[98, "beam-add-feature"]], "Beam.align_z": [[99, "beam-align-z"]], "Beam.apply_features": [[100, "beam-apply-features"]], "Beam.clear_features": [[101, "beam-clear-features"]], "Beam.copy": [[102, "beam-copy"]], "Beam.endpoint_closest_to_point": [[103, "beam-endpoint-closest-to-point"]], "Beam.extend_ends": [[104, "beam-extend-ends"]], "Beam.extension_to_plane": [[105, "beam-extension-to-plane"]], "Beam.from_centerline": [[106, "beam-from-centerline"]], "Beam.from_data": [[107, "beam-from-data"]], "Beam.from_endpoints": [[108, "beam-from-endpoints"]], "Beam.from_json": [[109, "beam-from-json"]], "Beam.from_jsonstring": [[110, "beam-from-jsonstring"]], "Beam.get_geometry": [[111, "beam-get-geometry"]], "Beam.is_identical": [[112, "beam-is-identical"]], "Beam.move_endpoint": [[113, "beam-move-endpoint"]], "Beam.sha256": [[114, "beam-sha256"]], "Beam.to_data": [[115, "beam-to-data"]], "Beam.to_json": [[116, "beam-to-json"]], "Beam.to_jsonstring": [[117, "beam-to-jsonstring"]], "Beam.update_beam_geometry": [[118, "beam-update-beam-geometry"]], "Beam.validate_data": [[119, "beam-validate-data"]], "Beam.validate_json": [[120, "beam-validate-json"]], "Citing": [[122, "citing"]], "Examples": [[123, "examples"], [135, "examples"]], "Timber Assembly Examples": [[123, "timber-assembly-examples"]], "Create Joint": [[124, "create-joint"]], "COMPAS TIMBER": [[125, "compas-timber"]], "Dependencies": [[125, "dependencies"]], "Table of Contents": [[125, "table-of-contents"]], "Indices and tables": [[125, "indices-and-tables"]], "Installation": [[126, "installation"]], "Manual installation for developers": [[127, "manual-installation-for-developers"]], "Manual installation": [[128, "manual-installation"]], "Quick installation": [[129, "quick-installation"]], "License": [[130, "license"]], "Grasshopper plugin": [[131, "grasshopper-plugin"]], "Assembly": [[132, "assembly"]], "Attributes": [[133, "attributes"]], "Features": [[136, "features"]], "Joints": [[137, "joints"]], "Joint Topologies": [[137, "joint-topologies"]], "Joint components": [[137, "joint-components"]], "T-Butt": [[137, "t-butt"]], "L-Butt": [[137, "l-butt"]], "L-Miter": [[137, "l-miter"]], "AutomaticJoint wizzard": [[137, "automaticjoint-wizzard"]], "Show": [[138, "show"]], "Utils": [[139, "utils"]], "Bake with BoxMap": [[139, "bake-with-boxmap"]], "Workflow": [[140, "workflow"]]}, "indexentries": {"compas_timber": [[1, "module-compas_timber"]], "module": [[1, "module-compas_timber"], [2, "module-compas_timber.assembly"], [3, "module-compas_timber.connections"], [4, "module-compas_timber.parts"], [5, "module-compas_timber.rhino"]], "compas_timber.assembly": [[2, "module-compas_timber.assembly"]], "compas_timber.connections": [[3, "module-compas_timber.connections"]], "compas_timber.parts": [[4, "module-compas_timber.parts"]], "compas_timber.rhino": [[5, "module-compas_timber.rhino"]], "timberassembly (class in compas_timber.assembly)": [[6, "compas_timber.assembly.TimberAssembly"]], "tostring() (compas_timber.assembly.timberassembly method)": [[7, "compas_timber.assembly.TimberAssembly.ToString"]], "add_beam() (compas_timber.assembly.timberassembly method)": [[8, "compas_timber.assembly.TimberAssembly.add_beam"]], "add_connection() (compas_timber.assembly.timberassembly method)": [[9, "compas_timber.assembly.TimberAssembly.add_connection"]], "add_joint() (compas_timber.assembly.timberassembly method)": [[10, "compas_timber.assembly.TimberAssembly.add_joint"]], "add_part() (compas_timber.assembly.timberassembly method)": [[11, "compas_timber.assembly.TimberAssembly.add_part"]], "are_parts_joined() (compas_timber.assembly.timberassembly method)": [[12, "compas_timber.assembly.TimberAssembly.are_parts_joined"]], "connections() (compas_timber.assembly.timberassembly method)": [[13, "compas_timber.assembly.TimberAssembly.connections"]], "contains() (compas_timber.assembly.timberassembly method)": [[14, "compas_timber.assembly.TimberAssembly.contains"]], "copy() (compas_timber.assembly.timberassembly method)": [[15, "compas_timber.assembly.TimberAssembly.copy"]], "find() (compas_timber.assembly.timberassembly method)": [[16, "compas_timber.assembly.TimberAssembly.find"]], "find_by_key() (compas_timber.assembly.timberassembly method)": [[17, "compas_timber.assembly.TimberAssembly.find_by_key"]], "from_data() (compas_timber.assembly.timberassembly class method)": [[18, "compas_timber.assembly.TimberAssembly.from_data"]], "from_json() (compas_timber.assembly.timberassembly class method)": [[19, "compas_timber.assembly.TimberAssembly.from_json"]], "from_jsonstring() (compas_timber.assembly.timberassembly class method)": [[20, "compas_timber.assembly.TimberAssembly.from_jsonstring"]], "parts() (compas_timber.assembly.timberassembly method)": [[21, "compas_timber.assembly.TimberAssembly.parts"]], "remove_joint() (compas_timber.assembly.timberassembly method)": [[22, "compas_timber.assembly.TimberAssembly.remove_joint"]], "sha256() (compas_timber.assembly.timberassembly method)": [[23, "compas_timber.assembly.TimberAssembly.sha256"]], "to_data() (compas_timber.assembly.timberassembly method)": [[24, "compas_timber.assembly.TimberAssembly.to_data"]], "to_json() (compas_timber.assembly.timberassembly method)": [[25, "compas_timber.assembly.TimberAssembly.to_json"]], "to_jsonstring() (compas_timber.assembly.timberassembly method)": [[26, "compas_timber.assembly.TimberAssembly.to_jsonstring"]], "validate_data() (compas_timber.assembly.timberassembly method)": [[27, "compas_timber.assembly.TimberAssembly.validate_data"]], "validate_json() (compas_timber.assembly.timberassembly method)": [[28, "compas_timber.assembly.TimberAssembly.validate_json"]], "beamjoinningerror": [[29, "compas_timber.connections.BeamJoinningError"]], "connectionsolver (class in compas_timber.connections)": [[30, "compas_timber.connections.ConnectionSolver"]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[31, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs"]], "find_topology() (compas_timber.connections.connectionsolver method)": [[32, "compas_timber.connections.ConnectionSolver.find_topology"]], "joint (class in compas_timber.connections)": [[33, "compas_timber.connections.Joint"]], "tostring() (compas_timber.connections.joint method)": [[34, "compas_timber.connections.Joint.ToString"]], "add_features() (compas_timber.connections.joint method)": [[35, "compas_timber.connections.Joint.add_features"]], "copy() (compas_timber.connections.joint method)": [[36, "compas_timber.connections.Joint.copy"]], "create() (compas_timber.connections.joint class method)": [[37, "compas_timber.connections.Joint.create"]], "from_data() (compas_timber.connections.joint class method)": [[38, "compas_timber.connections.Joint.from_data"]], "from_json() (compas_timber.connections.joint class method)": [[39, "compas_timber.connections.Joint.from_json"]], "from_jsonstring() (compas_timber.connections.joint class method)": [[40, "compas_timber.connections.Joint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[41, "compas_timber.connections.Joint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.joint method)": [[42, "compas_timber.connections.Joint.sha256"]], "to_data() (compas_timber.connections.joint method)": [[43, "compas_timber.connections.Joint.to_data"]], "to_json() (compas_timber.connections.joint method)": [[44, "compas_timber.connections.Joint.to_json"]], "to_jsonstring() (compas_timber.connections.joint method)": [[45, "compas_timber.connections.Joint.to_jsonstring"]], "validate_data() (compas_timber.connections.joint method)": [[46, "compas_timber.connections.Joint.validate_data"]], "validate_json() (compas_timber.connections.joint method)": [[47, "compas_timber.connections.Joint.validate_json"]], "jointtopology (class in compas_timber.connections)": [[48, "compas_timber.connections.JointTopology"]], "get_name() (compas_timber.connections.jointtopology class method)": [[49, "compas_timber.connections.JointTopology.get_name"]], "lbuttjoint (class in compas_timber.connections)": [[50, "compas_timber.connections.LButtJoint"]], "tostring() (compas_timber.connections.lbuttjoint method)": [[51, "compas_timber.connections.LButtJoint.ToString"]], "add_features() (compas_timber.connections.lbuttjoint method)": [[52, "compas_timber.connections.LButtJoint.add_features"]], "copy() (compas_timber.connections.lbuttjoint method)": [[53, "compas_timber.connections.LButtJoint.copy"]], "create() (compas_timber.connections.lbuttjoint class method)": [[54, "compas_timber.connections.LButtJoint.create"]], "from_data() (compas_timber.connections.lbuttjoint class method)": [[55, "compas_timber.connections.LButtJoint.from_data"]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[56, "compas_timber.connections.LButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[57, "compas_timber.connections.LButtJoint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[58, "compas_timber.connections.LButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lbuttjoint method)": [[59, "compas_timber.connections.LButtJoint.sha256"]], "to_data() (compas_timber.connections.lbuttjoint method)": [[60, "compas_timber.connections.LButtJoint.to_data"]], "to_json() (compas_timber.connections.lbuttjoint method)": [[61, "compas_timber.connections.LButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lbuttjoint method)": [[62, "compas_timber.connections.LButtJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lbuttjoint method)": [[63, "compas_timber.connections.LButtJoint.validate_data"]], "validate_json() (compas_timber.connections.lbuttjoint method)": [[64, "compas_timber.connections.LButtJoint.validate_json"]], "lmiterjoint (class in compas_timber.connections)": [[65, "compas_timber.connections.LMiterJoint"]], "tostring() (compas_timber.connections.lmiterjoint method)": [[66, "compas_timber.connections.LMiterJoint.ToString"]], "add_features() (compas_timber.connections.lmiterjoint method)": [[67, "compas_timber.connections.LMiterJoint.add_features"]], "copy() (compas_timber.connections.lmiterjoint method)": [[68, "compas_timber.connections.LMiterJoint.copy"]], "create() (compas_timber.connections.lmiterjoint class method)": [[69, "compas_timber.connections.LMiterJoint.create"]], "from_data() (compas_timber.connections.lmiterjoint class method)": [[70, "compas_timber.connections.LMiterJoint.from_data"]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[71, "compas_timber.connections.LMiterJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[72, "compas_timber.connections.LMiterJoint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[73, "compas_timber.connections.LMiterJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lmiterjoint method)": [[74, "compas_timber.connections.LMiterJoint.sha256"]], "to_data() (compas_timber.connections.lmiterjoint method)": [[75, "compas_timber.connections.LMiterJoint.to_data"]], "to_json() (compas_timber.connections.lmiterjoint method)": [[76, "compas_timber.connections.LMiterJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lmiterjoint method)": [[77, "compas_timber.connections.LMiterJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lmiterjoint method)": [[78, "compas_timber.connections.LMiterJoint.validate_data"]], "validate_json() (compas_timber.connections.lmiterjoint method)": [[79, "compas_timber.connections.LMiterJoint.validate_json"]], "tbuttjoint (class in compas_timber.connections)": [[80, "compas_timber.connections.TButtJoint"]], "tostring() (compas_timber.connections.tbuttjoint method)": [[81, "compas_timber.connections.TButtJoint.ToString"]], "add_features() (compas_timber.connections.tbuttjoint method)": [[82, "compas_timber.connections.TButtJoint.add_features"]], "copy() (compas_timber.connections.tbuttjoint method)": [[83, "compas_timber.connections.TButtJoint.copy"]], "create() (compas_timber.connections.tbuttjoint class method)": [[84, "compas_timber.connections.TButtJoint.create"]], "from_data() (compas_timber.connections.tbuttjoint class method)": [[85, "compas_timber.connections.TButtJoint.from_data"]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[86, "compas_timber.connections.TButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[87, "compas_timber.connections.TButtJoint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[88, "compas_timber.connections.TButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.tbuttjoint method)": [[89, "compas_timber.connections.TButtJoint.sha256"]], "to_data() (compas_timber.connections.tbuttjoint method)": [[90, "compas_timber.connections.TButtJoint.to_data"]], "to_json() (compas_timber.connections.tbuttjoint method)": [[91, "compas_timber.connections.TButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.tbuttjoint method)": [[92, "compas_timber.connections.TButtJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.tbuttjoint method)": [[93, "compas_timber.connections.TButtJoint.validate_data"]], "validate_json() (compas_timber.connections.tbuttjoint method)": [[94, "compas_timber.connections.TButtJoint.validate_json"]], "find_neighboring_beams() (in module compas_timber.connections)": [[95, "compas_timber.connections.find_neighboring_beams"]], "beam (class in compas_timber.parts)": [[96, "compas_timber.parts.Beam"]], "tostring() (compas_timber.parts.beam method)": [[97, "compas_timber.parts.Beam.ToString"]], "add_feature() (compas_timber.parts.beam method)": [[98, "compas_timber.parts.Beam.add_feature"]], "align_z() (compas_timber.parts.beam method)": [[99, "compas_timber.parts.Beam.align_z"]], "apply_features() (compas_timber.parts.beam method)": [[100, "compas_timber.parts.Beam.apply_features"]], "clear_features() (compas_timber.parts.beam method)": [[101, "compas_timber.parts.Beam.clear_features"]], "copy() (compas_timber.parts.beam method)": [[102, "compas_timber.parts.Beam.copy"]], "endpoint_closest_to_point() (compas_timber.parts.beam method)": [[103, "compas_timber.parts.Beam.endpoint_closest_to_point"]], "extend_ends() (compas_timber.parts.beam method)": [[104, "compas_timber.parts.Beam.extend_ends"]], "extension_to_plane() (compas_timber.parts.beam method)": [[105, "compas_timber.parts.Beam.extension_to_plane"]], "from_centerline() (compas_timber.parts.beam class method)": [[106, "compas_timber.parts.Beam.from_centerline"]], "from_data() (compas_timber.parts.beam class method)": [[107, "compas_timber.parts.Beam.from_data"]], "from_endpoints() (compas_timber.parts.beam class method)": [[108, "compas_timber.parts.Beam.from_endpoints"]], "from_json() (compas_timber.parts.beam class method)": [[109, "compas_timber.parts.Beam.from_json"]], "from_jsonstring() (compas_timber.parts.beam class method)": [[110, "compas_timber.parts.Beam.from_jsonstring"]], "get_geometry() (compas_timber.parts.beam method)": [[111, "compas_timber.parts.Beam.get_geometry"]], "is_identical() (compas_timber.parts.beam method)": [[112, "compas_timber.parts.Beam.is_identical"]], "move_endpoint() (compas_timber.parts.beam method)": [[113, "compas_timber.parts.Beam.move_endpoint"]], "sha256() (compas_timber.parts.beam method)": [[114, "compas_timber.parts.Beam.sha256"]], "to_data() (compas_timber.parts.beam method)": [[115, "compas_timber.parts.Beam.to_data"]], "to_json() (compas_timber.parts.beam method)": [[116, "compas_timber.parts.Beam.to_json"]], "to_jsonstring() (compas_timber.parts.beam method)": [[117, "compas_timber.parts.Beam.to_jsonstring"]], "update_beam_geometry() (compas_timber.parts.beam method)": [[118, "compas_timber.parts.Beam.update_beam_geometry"]], "validate_data() (compas_timber.parts.beam method)": [[119, "compas_timber.parts.Beam.validate_data"]], "validate_json() (compas_timber.parts.beam method)": [[120, "compas_timber.parts.Beam.validate_json"]], "find_neighboring_beams() (in module compas_timber.rhino)": [[121, "compas_timber.rhino.find_neighboring_beams"]]}})