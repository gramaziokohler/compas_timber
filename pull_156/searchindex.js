Search.setIndex({"docnames": ["api", "api/compas_timber.assembly", "api/compas_timber.connections", "api/compas_timber.consumers", "api/compas_timber.fabrication", "api/compas_timber.parts", "api/compas_timber.planning", "api/compas_timber.rhino", "api/generated/compas_timber.assembly.TimberAssembly", "api/generated/compas_timber.assembly.TimberAssembly.ToString", "api/generated/compas_timber.assembly.TimberAssembly.add_beam", "api/generated/compas_timber.assembly.TimberAssembly.add_connection", "api/generated/compas_timber.assembly.TimberAssembly.add_joint", "api/generated/compas_timber.assembly.TimberAssembly.add_part", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined", "api/generated/compas_timber.assembly.TimberAssembly.connections", "api/generated/compas_timber.assembly.TimberAssembly.contains", "api/generated/compas_timber.assembly.TimberAssembly.copy", "api/generated/compas_timber.assembly.TimberAssembly.delete_connection", "api/generated/compas_timber.assembly.TimberAssembly.delete_part", "api/generated/compas_timber.assembly.TimberAssembly.find", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key", "api/generated/compas_timber.assembly.TimberAssembly.from_data", "api/generated/compas_timber.assembly.TimberAssembly.from_json", "api/generated/compas_timber.assembly.TimberAssembly.parts", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint", "api/generated/compas_timber.assembly.TimberAssembly.sha256", "api/generated/compas_timber.assembly.TimberAssembly.to_data", "api/generated/compas_timber.assembly.TimberAssembly.to_json", "api/generated/compas_timber.assembly.TimberAssembly.validate_data", "api/generated/compas_timber.connections.BeamJoinningError", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.from_data", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_data", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.from_data", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.to_data", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.from_data", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_data", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.from_data", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.to_data", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.XHalfLapJoint", "api/generated/compas_timber.connections.XHalfLapJoint.ToString", "api/generated/compas_timber.connections.XHalfLapJoint.add_features", "api/generated/compas_timber.connections.XHalfLapJoint.copy", "api/generated/compas_timber.connections.XHalfLapJoint.create", "api/generated/compas_timber.connections.XHalfLapJoint.from_data", "api/generated/compas_timber.connections.XHalfLapJoint.from_json", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.XHalfLapJoint.sha256", "api/generated/compas_timber.connections.XHalfLapJoint.to_data", "api/generated/compas_timber.connections.XHalfLapJoint.to_json", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data", "api/generated/compas_timber.connections.find_neighboring_beams", "api/generated/compas_timber.consumers.BrepGeometryConsumer", "api/generated/compas_timber.fabrication.BTLx", "api/generated/compas_timber.fabrication.BTLx.btlx_string", "api/generated/compas_timber.fabrication.BTLx.process_assembly", "api/generated/compas_timber.fabrication.BTLx.register_joint", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints", "api/generated/compas_timber.fabrication.BTLxJackCut", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process", "api/generated/compas_timber.fabrication.BTLxProcess", "api/generated/compas_timber.fabrication.FrenchRidgeFactory", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings", "api/generated/compas_timber.fabrication.LButtFactory", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings", "api/generated/compas_timber.fabrication.LMiterFactory", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings", "api/generated/compas_timber.fabrication.TButtFactory", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings", "api/generated/compas_timber.parts.Beam", "api/generated/compas_timber.parts.Beam.ToString", "api/generated/compas_timber.parts.Beam.add_blank_extension", "api/generated/compas_timber.parts.Beam.add_feature", "api/generated/compas_timber.parts.Beam.add_features", "api/generated/compas_timber.parts.Beam.align_z", "api/generated/compas_timber.parts.Beam.clear_features", "api/generated/compas_timber.parts.Beam.copy", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point", "api/generated/compas_timber.parts.Beam.extension_to_plane", "api/generated/compas_timber.parts.Beam.from_centerline", "api/generated/compas_timber.parts.Beam.from_data", "api/generated/compas_timber.parts.Beam.from_endpoints", "api/generated/compas_timber.parts.Beam.from_json", "api/generated/compas_timber.parts.Beam.get_geometry", "api/generated/compas_timber.parts.Beam.remove_blank_extension", "api/generated/compas_timber.parts.Beam.remove_features", "api/generated/compas_timber.parts.Beam.sha256", "api/generated/compas_timber.parts.Beam.to_data", "api/generated/compas_timber.parts.Beam.to_json", "api/generated/compas_timber.parts.Beam.validate_data", "api/generated/compas_timber.planning.Actor", "api/generated/compas_timber.planning.Actor.get_name", "api/generated/compas_timber.planning.BuildingPlan", "api/generated/compas_timber.planning.BuildingPlan.ToString", "api/generated/compas_timber.planning.BuildingPlan.add_step", "api/generated/compas_timber.planning.BuildingPlan.copy", "api/generated/compas_timber.planning.BuildingPlan.from_data", "api/generated/compas_timber.planning.BuildingPlan.from_json", "api/generated/compas_timber.planning.BuildingPlan.sha256", "api/generated/compas_timber.planning.BuildingPlan.to_data", "api/generated/compas_timber.planning.BuildingPlan.to_json", "api/generated/compas_timber.planning.BuildingPlan.validate_data", "api/generated/compas_timber.planning.SimpleSequenceGenerator", "api/generated/compas_timber.planning.Step", "api/generated/compas_timber.planning.Step.ToString", "api/generated/compas_timber.planning.Step.copy", "api/generated/compas_timber.planning.Step.from_data", "api/generated/compas_timber.planning.Step.from_json", "api/generated/compas_timber.planning.Step.sha256", "api/generated/compas_timber.planning.Step.to_data", "api/generated/compas_timber.planning.Step.to_json", "api/generated/compas_timber.planning.Step.transform", "api/generated/compas_timber.planning.Step.validate_data", "api/generated/compas_timber.rhino.find_neighboring_beams", "citing", "examples", "examples/create_joint", "index", "installation", "installation/installation_dev", "installation/installation_manual", "installation/installation_quick", "license", "tutorials", "tutorials/BTLx_contribution_guide", "tutorials/grasshopper/assembly", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beam", "tutorials/grasshopper/examples", "tutorials/grasshopper/features", "tutorials/grasshopper/joints", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "filenames": ["api.rst", "api/compas_timber.assembly.rst", "api/compas_timber.connections.rst", "api/compas_timber.consumers.rst", "api/compas_timber.fabrication.rst", "api/compas_timber.parts.rst", "api/compas_timber.planning.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.assembly.TimberAssembly.rst", "api/generated/compas_timber.assembly.TimberAssembly.ToString.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_beam.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined.rst", "api/generated/compas_timber.assembly.TimberAssembly.connections.rst", "api/generated/compas_timber.assembly.TimberAssembly.contains.rst", "api/generated/compas_timber.assembly.TimberAssembly.copy.rst", "api/generated/compas_timber.assembly.TimberAssembly.delete_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.delete_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.find.rst", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_data.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.parts.rst", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.sha256.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_data.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.validate_data.rst", "api/generated/compas_timber.connections.BeamJoinningError.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.from_data.rst", "api/generated/compas_timber.connections.Joint.from_json.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_data.rst", "api/generated/compas_timber.connections.Joint.to_json.rst", "api/generated/compas_timber.connections.Joint.validate_data.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.from_data.rst", "api/generated/compas_timber.connections.LButtJoint.from_json.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.to_data.rst", "api/generated/compas_timber.connections.LButtJoint.to_json.rst", "api/generated/compas_timber.connections.LButtJoint.validate_data.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.from_data.rst", "api/generated/compas_timber.connections.LMiterJoint.from_json.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_data.rst", "api/generated/compas_timber.connections.LMiterJoint.to_json.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_data.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.from_data.rst", "api/generated/compas_timber.connections.TButtJoint.from_json.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.to_data.rst", "api/generated/compas_timber.connections.TButtJoint.to_json.rst", "api/generated/compas_timber.connections.TButtJoint.validate_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.rst", "api/generated/compas_timber.connections.XHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.XHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.XHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.XHalfLapJoint.create.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.XHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.find_neighboring_beams.rst", "api/generated/compas_timber.consumers.BrepGeometryConsumer.rst", "api/generated/compas_timber.fabrication.BTLx.rst", "api/generated/compas_timber.fabrication.BTLx.btlx_string.rst", "api/generated/compas_timber.fabrication.BTLx.process_assembly.rst", "api/generated/compas_timber.fabrication.BTLx.register_joint.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process.rst", "api/generated/compas_timber.fabrication.BTLxProcess.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LButtFactory.rst", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LMiterFactory.rst", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.TButtFactory.rst", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings.rst", "api/generated/compas_timber.parts.Beam.rst", "api/generated/compas_timber.parts.Beam.ToString.rst", "api/generated/compas_timber.parts.Beam.add_blank_extension.rst", "api/generated/compas_timber.parts.Beam.add_feature.rst", "api/generated/compas_timber.parts.Beam.add_features.rst", "api/generated/compas_timber.parts.Beam.align_z.rst", "api/generated/compas_timber.parts.Beam.clear_features.rst", "api/generated/compas_timber.parts.Beam.copy.rst", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.parts.Beam.extension_to_plane.rst", "api/generated/compas_timber.parts.Beam.from_centerline.rst", "api/generated/compas_timber.parts.Beam.from_data.rst", "api/generated/compas_timber.parts.Beam.from_endpoints.rst", "api/generated/compas_timber.parts.Beam.from_json.rst", "api/generated/compas_timber.parts.Beam.get_geometry.rst", "api/generated/compas_timber.parts.Beam.remove_blank_extension.rst", "api/generated/compas_timber.parts.Beam.remove_features.rst", "api/generated/compas_timber.parts.Beam.sha256.rst", "api/generated/compas_timber.parts.Beam.to_data.rst", "api/generated/compas_timber.parts.Beam.to_json.rst", "api/generated/compas_timber.parts.Beam.validate_data.rst", "api/generated/compas_timber.planning.Actor.rst", "api/generated/compas_timber.planning.Actor.get_name.rst", "api/generated/compas_timber.planning.BuildingPlan.rst", "api/generated/compas_timber.planning.BuildingPlan.ToString.rst", "api/generated/compas_timber.planning.BuildingPlan.add_step.rst", "api/generated/compas_timber.planning.BuildingPlan.copy.rst", "api/generated/compas_timber.planning.BuildingPlan.from_data.rst", "api/generated/compas_timber.planning.BuildingPlan.from_json.rst", "api/generated/compas_timber.planning.BuildingPlan.sha256.rst", "api/generated/compas_timber.planning.BuildingPlan.to_data.rst", "api/generated/compas_timber.planning.BuildingPlan.to_json.rst", "api/generated/compas_timber.planning.BuildingPlan.validate_data.rst", "api/generated/compas_timber.planning.SimpleSequenceGenerator.rst", "api/generated/compas_timber.planning.Step.rst", "api/generated/compas_timber.planning.Step.ToString.rst", "api/generated/compas_timber.planning.Step.copy.rst", "api/generated/compas_timber.planning.Step.from_data.rst", "api/generated/compas_timber.planning.Step.from_json.rst", "api/generated/compas_timber.planning.Step.sha256.rst", "api/generated/compas_timber.planning.Step.to_data.rst", "api/generated/compas_timber.planning.Step.to_json.rst", "api/generated/compas_timber.planning.Step.transform.rst", "api/generated/compas_timber.planning.Step.validate_data.rst", "api/generated/compas_timber.rhino.find_neighboring_beams.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "installation/installation_dev.rst", "installation/installation_manual.rst", "installation/installation_quick.rst", "license.rst", "tutorials.rst", "tutorials/BTLx_contribution_guide.rst", "tutorials/grasshopper/assembly.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beam.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joints.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "titles": ["API Reference", "compas_timber.assembly", "compas_timber.connections", "compas_timber.consumers", "compas_timber.fabrication", "compas_timber.parts", "compas_timber.planning", "rhino", "TimberAssembly", "TimberAssembly.ToString", "TimberAssembly.add_beam", "TimberAssembly.add_connection", "TimberAssembly.add_joint", "TimberAssembly.add_part", "TimberAssembly.are_parts_joined", "TimberAssembly.connections", "TimberAssembly.contains", "TimberAssembly.copy", "TimberAssembly.delete_connection", "TimberAssembly.delete_part", "TimberAssembly.find", "TimberAssembly.find_by_key", "TimberAssembly.from_data", "TimberAssembly.from_json", "TimberAssembly.parts", "TimberAssembly.remove_joint", "TimberAssembly.sha256", "TimberAssembly.to_data", "TimberAssembly.to_json", "TimberAssembly.validate_data", "BeamJoinningError", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "Joint", "Joint.ToString", "Joint.add_features", "Joint.copy", "Joint.create", "Joint.from_data", "Joint.from_json", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_data", "Joint.to_json", "Joint.validate_data", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_features", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.from_data", "LButtJoint.from_json", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.to_data", "LButtJoint.to_json", "LButtJoint.validate_data", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_features", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.from_data", "LMiterJoint.from_json", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_data", "LMiterJoint.to_json", "LMiterJoint.validate_data", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_features", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.from_data", "TButtJoint.from_json", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.to_data", "TButtJoint.to_json", "TButtJoint.validate_data", "XHalfLapJoint", "XHalfLapJoint.ToString", "XHalfLapJoint.add_features", "XHalfLapJoint.copy", "XHalfLapJoint.create", "XHalfLapJoint.from_data", "XHalfLapJoint.from_json", "XHalfLapJoint.restore_beams_from_keys", "XHalfLapJoint.sha256", "XHalfLapJoint.to_data", "XHalfLapJoint.to_json", "XHalfLapJoint.validate_data", "find_neighboring_beams", "BrepGeometryConsumer", "BTLx", "BTLx.btlx_string", "BTLx.process_assembly", "BTLx.register_joint", "BTLxFrenchRidgeLap", "BTLxFrenchRidgeLap.create_process", "BTLxFrenchRidgeLap.get_params", "BTLxFrenchRidgeLap.process_joints", "BTLxJackCut", "BTLxJackCut.create_process", "BTLxJackCut.generate_process", "BTLxProcess", "FrenchRidgeFactory", "FrenchRidgeFactory.apply_processings", "LButtFactory", "LButtFactory.apply_processings", "LMiterFactory", "LMiterFactory.apply_processings", "TButtFactory", "TButtFactory.apply_processings", "Beam", "Beam.ToString", "Beam.add_blank_extension", "Beam.add_feature", "Beam.add_features", "Beam.align_z", "Beam.clear_features", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_data", "Beam.from_endpoints", "Beam.from_json", "Beam.get_geometry", "Beam.remove_blank_extension", "Beam.remove_features", "Beam.sha256", "Beam.to_data", "Beam.to_json", "Beam.validate_data", "Actor", "Actor.get_name", "BuildingPlan", "BuildingPlan.ToString", "BuildingPlan.add_step", "BuildingPlan.copy", "BuildingPlan.from_data", "BuildingPlan.from_json", "BuildingPlan.sha256", "BuildingPlan.to_data", "BuildingPlan.to_json", "BuildingPlan.validate_data", "SimpleSequenceGenerator", "Step", "Step.ToString", "Step.copy", "Step.from_data", "Step.from_json", "Step.sha256", "Step.to_data", "Step.to_json", "Step.transform", "Step.validate_data", "find_neighboring_beams", "Citing", "Examples", "Create Joint", "COMPAS TIMBER", "Installation", "Manual installation for developers", "Manual installation", "Quick installation", "License", "Grasshopper plugin", "BTLx Contribution Guide", "Assembly", "Attributes", "Beam", "Examples", "Features", "Joints", "Show", "Utils", "Workflow"], "terms": {"compas_timb": [0, 8, 30, 31, 34, 38, 41, 46, 48, 52, 60, 64, 72, 76, 84, 88, 96, 97, 98, 101, 102, 106, 109, 110, 112, 114, 116, 118, 139, 141, 151, 152, 162, 163, 166, 169, 170], "assembli": [0, 8, 10, 11, 12, 13, 16, 19, 20, 21, 24, 25, 38, 41, 48, 52, 55, 60, 64, 67, 72, 76, 79, 88, 91, 98, 100, 121, 139, 151, 165, 166, 172, 179, 180, 182], "part": [0, 8, 11, 12, 13, 14, 15, 18, 19, 20, 21, 41, 98, 100, 102, 103, 106, 107, 111, 113, 115, 117, 118, 121, 132, 162, 166, 173, 176, 178, 180], "connect": [0, 9, 11, 18, 30, 31, 34, 35, 38, 41, 46, 48, 49, 52, 60, 61, 64, 72, 73, 76, 84, 85, 88, 96, 111, 113, 115, 117, 119, 142, 153, 166, 171, 174, 179], "consum": [0, 97, 166], "fabric": [0, 98, 101, 102, 105, 106, 109, 110, 112, 114, 116, 163, 166], "plan": [0, 139, 141, 151, 152, 166], "rhino": [0, 9, 35, 49, 61, 73, 85, 96, 119, 142, 153, 162, 164, 166, 168, 170, 175, 176, 181], "The": [7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 34, 37, 38, 39, 40, 43, 44, 45, 48, 51, 52, 53, 54, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, 82, 83, 87, 88, 89, 90, 93, 94, 95, 96, 98, 101, 102, 106, 109, 111, 113, 115, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 144, 145, 146, 148, 149, 150, 154, 155, 156, 158, 159, 161, 162, 167, 171, 172, 175, 176, 178, 179, 181, 182], "modul": [7, 109, 166, 173], "contain": [7, 8, 22, 23, 32, 38, 39, 40, 52, 53, 54, 64, 65, 66, 76, 77, 78, 88, 89, 90, 96, 118, 129, 131, 141, 145, 146, 152, 155, 156, 162], "function": [7, 96, 109, 172, 173], "type": [7, 9, 17, 22, 23, 29, 33, 35, 37, 39, 40, 45, 48, 49, 51, 53, 54, 59, 60, 61, 63, 65, 66, 71, 72, 73, 75, 77, 78, 83, 85, 87, 89, 90, 95, 101, 102, 105, 109, 119, 125, 129, 131, 132, 138, 139, 142, 144, 145, 146, 150, 152, 153, 154, 155, 156, 161, 166, 173, 179, 180], "meant": 7, "us": [7, 9, 26, 29, 32, 33, 34, 35, 42, 45, 47, 48, 49, 56, 59, 60, 61, 68, 71, 72, 73, 80, 83, 85, 92, 95, 96, 98, 105, 119, 123, 127, 135, 138, 140, 142, 147, 150, 152, 153, 157, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 181], "context": [7, 13], "class": [8, 9, 12, 16, 31, 34, 35, 46, 48, 49, 60, 61, 72, 73, 84, 85, 97, 98, 101, 102, 106, 109, 110, 112, 114, 116, 118, 119, 139, 141, 142, 151, 152, 153, 166, 173], "sourc": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 170, 175, 176], "base": [8, 30, 31, 34, 46, 48, 60, 72, 84, 97, 98, 102, 106, 109, 110, 112, 114, 116, 118, 139, 141, 151, 152, 166, 174, 179, 182], "repres": [8, 48, 60, 72, 98, 102, 106, 118, 139, 176], "timber": [8, 98, 106, 118, 163, 168, 169, 170, 172, 176, 179, 182], "beam": [8, 10, 12, 30, 31, 32, 33, 34, 36, 38, 41, 48, 50, 52, 55, 60, 62, 64, 67, 72, 74, 76, 79, 86, 88, 91, 96, 102, 106, 162, 165, 166, 172, 174, 175, 178, 179, 180, 181, 182], "joint": [8, 12, 14, 25, 31, 46, 48, 50, 52, 60, 62, 64, 72, 74, 76, 84, 86, 88, 98, 101, 102, 103, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 133, 164, 166, 172, 173, 174, 176, 180, 182], "etc": [8, 98, 99, 118, 164, 166, 176], "attribut": [8, 11, 15, 34, 46, 48, 60, 72, 98, 102, 109, 118, 151, 152, 166, 172, 173, 176], "list": [8, 12, 14, 32, 34, 38, 48, 52, 60, 64, 72, 76, 88, 96, 98, 109, 118, 122, 126, 134, 152, 162, 173, 179, 182], "A": [8, 20, 32, 38, 48, 52, 60, 64, 72, 76, 88, 96, 98, 111, 113, 115, 117, 118, 128, 130, 163, 171, 176], "assign": [8, 13, 20, 179, 181], "thi": [8, 9, 10, 16, 17, 20, 22, 23, 25, 29, 34, 35, 36, 37, 38, 39, 40, 41, 45, 48, 49, 50, 51, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 83, 85, 86, 87, 88, 89, 90, 95, 96, 102, 104, 105, 108, 109, 111, 113, 115, 117, 118, 119, 120, 121, 125, 127, 129, 131, 133, 138, 142, 144, 145, 146, 150, 152, 153, 154, 155, 156, 161, 162, 164, 166, 168, 169, 170, 171, 173, 175, 176, 180, 182], "part_kei": 8, "int": [8, 10, 11, 12, 13, 15, 21, 47, 102, 120, 133, 140, 152], "kei": [8, 10, 13, 21, 41, 111, 113, 115, 117, 120, 133, 175], "includ": [8, 132, 170, 171, 173], "beam_kei": 8, "joint_kei": [8, 120, 133], "method": [8, 9, 31, 33, 34, 35, 38, 41, 46, 48, 49, 50, 52, 60, 61, 62, 64, 72, 73, 74, 76, 84, 85, 88, 98, 102, 104, 106, 108, 110, 112, 114, 116, 118, 119, 139, 141, 142, 152, 153, 166, 173], "inherit": [8, 34, 48, 60, 72, 84, 118, 141, 152, 166, 173], "convert": [9, 27, 28, 35, 43, 44, 49, 57, 58, 61, 69, 70, 73, 81, 82, 85, 93, 94, 119, 136, 137, 142, 148, 149, 153, 158, 159], "instanc": [9, 12, 22, 23, 35, 38, 39, 40, 48, 49, 52, 53, 54, 60, 61, 64, 65, 66, 72, 73, 76, 77, 78, 85, 88, 89, 90, 109, 119, 129, 131, 142, 145, 146, 153, 155, 156, 164, 173], "string": [9, 35, 47, 48, 49, 60, 61, 72, 73, 85, 98, 99, 119, 140, 142, 153, 175, 176], "exist": [9, 35, 49, 61, 73, 85, 119, 142, 153, 169, 173], "net": [9, 35, 49, 61, 73, 85, 119, 142, 153], "compat": [9, 35, 48, 49, 60, 61, 72, 73, 85, 96, 119, 142, 153], "when": [9, 20, 32, 35, 49, 50, 61, 62, 73, 74, 85, 119, 120, 142, 153, 175, 179], "ironpython": [9, 35, 49, 61, 73, 85, 119, 142, 153, 168], "implicit": [9, 35, 49, 61, 73, 85, 119, 142, 153], "convers": [9, 35, 49, 61, 73, 85, 119, 142, 153], "usual": [9, 35, 49, 61, 73, 85, 118, 119, 142, 153], "take": [9, 35, 49, 61, 73, 85, 119, 142, 153, 173, 182], "place": [9, 35, 49, 61, 73, 85, 119, 142, 153], "cpython": [9, 35, 49, 61, 73, 85, 119, 142, 153], "kick": [9, 35, 49, 61, 73, 85, 119, 142, 153], "its": [9, 15, 20, 21, 27, 28, 35, 43, 44, 49, 57, 58, 61, 69, 70, 73, 81, 82, 85, 93, 94, 101, 113, 117, 119, 128, 136, 137, 142, 148, 149, 153, 158, 159, 166, 168, 170, 175, 176, 179], "default": [9, 13, 17, 28, 35, 37, 44, 49, 51, 58, 61, 63, 70, 73, 75, 82, 85, 87, 94, 106, 119, 125, 128, 130, 137, 142, 144, 149, 153, 154, 159, 166, 174, 176, 179, 181], "print": [9, 28, 35, 44, 49, 58, 61, 70, 73, 82, 85, 94, 119, 137, 142, 149, 153, 159], "self": [9, 35, 49, 61, 73, 85, 109, 119, 142, 153, 173], "gettyp": [9, 35, 49, 61, 73, 85, 119, 142, 153], "fullnam": [9, 35, 49, 61, 73, 85, 119, 142, 153], "similar": [9, 35, 49, 61, 73, 85, 119, 142, 153, 179], "overrid": [9, 35, 49, 61, 73, 85, 119, 142, 153, 182], "object": [9, 12, 16, 17, 22, 23, 25, 27, 28, 29, 31, 32, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 49, 51, 52, 53, 54, 57, 58, 59, 61, 63, 64, 65, 66, 69, 70, 71, 73, 75, 76, 77, 78, 81, 82, 83, 85, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 102, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 125, 129, 131, 132, 136, 137, 138, 139, 142, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 161, 166, 174, 175, 176, 180, 181], "fix": [9, 35, 49, 61, 73, 85, 119, 142, 153], "make": [9, 17, 35, 37, 49, 51, 61, 63, 73, 75, 85, 87, 119, 125, 142, 144, 153, 154, 168], "grasshopp": [9, 35, 49, 61, 73, 85, 119, 142, 153, 164, 166, 168, 170, 176], "displai": [9, 35, 49, 61, 73, 85, 119, 142, 153, 175, 180], "proper": [9, 35, 49, 61, 73, 85, 119, 142, 153], "represent": [9, 27, 28, 35, 43, 44, 47, 48, 49, 57, 58, 60, 61, 69, 70, 72, 73, 81, 82, 85, 93, 94, 119, 136, 137, 140, 142, 148, 149, 153, 158, 159, 173], "ar": [9, 11, 20, 32, 33, 35, 38, 41, 49, 52, 61, 64, 73, 76, 85, 88, 96, 109, 119, 142, 152, 153, 164, 167, 173, 174, 175, 178, 179, 180, 181, 182], "panel": [9, 35, 49, 61, 73, 85, 119, 142, 153], "other": [9, 12, 35, 49, 61, 73, 85, 102, 119, 142, 153, 163, 171, 179, 182], "output": [9, 33, 35, 49, 61, 73, 85, 119, 142, 153, 174], "add": [10, 11, 12, 13, 18, 19, 36, 50, 62, 74, 86, 120, 121, 122, 168, 169, 172, 173, 174, 181], "paramet": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 32, 33, 37, 38, 39, 40, 42, 44, 45, 47, 48, 51, 52, 53, 54, 56, 58, 59, 60, 63, 64, 65, 66, 68, 70, 71, 72, 75, 76, 77, 78, 80, 82, 83, 87, 88, 89, 90, 92, 94, 95, 96, 98, 102, 104, 105, 106, 108, 109, 111, 113, 115, 117, 118, 121, 122, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 144, 145, 146, 147, 149, 150, 151, 154, 155, 156, 157, 159, 161, 162, 173, 174, 175, 176, 181], "return": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 29, 32, 33, 34, 37, 38, 39, 40, 42, 43, 45, 47, 51, 52, 53, 54, 56, 57, 59, 63, 64, 65, 66, 68, 69, 71, 75, 76, 77, 78, 80, 81, 83, 87, 88, 89, 90, 92, 93, 95, 96, 98, 99, 101, 105, 111, 113, 115, 117, 121, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 138, 140, 144, 145, 146, 147, 148, 150, 154, 155, 156, 157, 158, 161, 162, 174, 180], "graph": [10, 12, 13], "identifi": [10, 11, 12, 13, 15, 20, 21, 96], "ad": [10, 38, 52, 64, 76, 88, 121, 122, 162, 168], "b": 11, "kwarg": [11, 13], "between": [11, 15, 18, 60, 175, 179, 182], "two": [11, 18, 30, 33, 34, 38, 48, 52, 60, 64, 76, 88, 126, 176, 179, 182], "compa": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 37, 39, 40, 42, 51, 53, 54, 56, 63, 65, 66, 68, 75, 77, 78, 80, 87, 89, 90, 92, 118, 121, 125, 129, 131, 132, 135, 144, 145, 146, 147, 152, 154, 155, 156, 157, 163, 168, 169, 170, 172, 179], "datastructur": [11, 13, 18, 19, 20, 21, 24, 26, 42, 56, 68, 80, 92, 135, 147, 157], "from": [11, 19, 22, 23, 25, 26, 33, 39, 40, 42, 53, 54, 56, 65, 66, 68, 77, 78, 80, 89, 90, 92, 109, 128, 129, 130, 131, 133, 134, 135, 145, 146, 147, 155, 156, 157, 164, 166, 168, 170, 171, 172, 173, 175, 176, 178, 179], "dict": [11, 13, 15, 22, 27, 34, 39, 43, 53, 57, 65, 69, 77, 81, 89, 93, 98, 102, 105, 109, 111, 113, 115, 117, 129, 136, 145, 148, 155, 158, 173], "str": [11, 13, 15, 20, 21, 23, 26, 28, 34, 40, 42, 44, 47, 48, 54, 56, 58, 60, 66, 68, 70, 72, 78, 80, 82, 90, 92, 94, 98, 102, 106, 109, 126, 131, 135, 137, 140, 146, 147, 149, 152, 156, 157, 159], "ani": [11, 13, 15, 29, 45, 59, 71, 83, 95, 138, 150, 161, 164, 171, 178, 180], "option": [11, 13, 15, 17, 21, 26, 28, 32, 33, 37, 42, 44, 51, 56, 58, 63, 68, 70, 75, 80, 82, 87, 92, 94, 96, 106, 125, 135, 137, 144, 147, 149, 154, 157, 159, 169, 176, 179, 182], "compil": 11, "name": [11, 13, 106, 109, 169, 173, 175, 179, 180], "argument": 11, "tupl": [11, 15, 33, 60, 118, 127], "node": 11, "rais": [11, 38, 52, 64, 76, 88], "assemblyerror": 11, "If": [11, 15, 26, 28, 33, 42, 44, 56, 58, 68, 70, 80, 82, 92, 94, 121, 134, 135, 137, 147, 149, 157, 159, 162, 163, 169, 176, 179], "an": [12, 13, 17, 22, 23, 27, 28, 29, 30, 32, 37, 38, 39, 40, 43, 44, 45, 48, 51, 52, 53, 54, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 81, 82, 83, 87, 88, 89, 90, 93, 94, 95, 104, 108, 118, 125, 129, 131, 136, 137, 138, 139, 144, 145, 146, 148, 149, 150, 154, 155, 156, 158, 159, 161, 163, 164, 166, 169, 171, 172, 174, 175, 176, 179], "dowel": 12, "steel": 12, "plate": 12, "involv": [12, 115], "current": [12, 13, 17, 37, 51, 63, 75, 87, 125, 144, 154, 166], "none": [13, 17, 18, 19, 20, 21, 32, 33, 37, 51, 63, 75, 87, 96, 101, 106, 107, 111, 113, 115, 117, 120, 121, 124, 125, 128, 130, 134, 144, 154, 162, 176], "note": [13, 96, 163, 180], "i": [13, 14, 15, 20, 29, 32, 33, 34, 38, 41, 45, 48, 50, 52, 59, 60, 62, 64, 71, 72, 74, 76, 83, 88, 95, 96, 98, 102, 104, 105, 108, 118, 120, 121, 126, 127, 138, 141, 150, 151, 161, 163, 166, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181], "uniqu": [13, 20], "onli": [13, 41, 121, 175], "nest": 13, "mai": [13, 174, 175], "have": [13, 38, 52, 64, 76, 88, 109, 169, 170, 176], "same": [13, 14, 33, 151, 152, 179, 182], "valu": [13, 47, 53, 65, 77, 89, 96, 118, 140, 175], "one": [13, 122, 151, 152, 173, 176, 179, 182], "which": [13, 32, 33, 38, 48, 52, 60, 64, 72, 76, 88, 96, 102, 109, 120, 123, 126, 127, 133, 139, 141, 152, 173, 174, 176, 179], "case": 13, "automat": [13, 20, 50, 62, 74, 179, 181], "integ": 13, "addit": [13, 15, 32, 172, 175, 176, 178], "collect": [13, 141, 162], "check": [14, 162, 166, 175], "alreadi": 14, "defin": [14, 36, 86, 102, 128, 175, 176, 179, 181, 182], "set": [14, 32, 96, 162, 174, 175, 176, 180], "bool": [14, 15, 16, 26, 28, 32, 42, 44, 56, 58, 68, 70, 80, 82, 92, 94, 102, 121, 132, 135, 137, 147, 149, 152, 157, 159], "data": [15, 16, 17, 22, 23, 26, 27, 28, 29, 34, 37, 39, 40, 42, 43, 44, 45, 51, 53, 54, 56, 57, 58, 59, 63, 65, 66, 68, 69, 70, 71, 75, 77, 78, 80, 81, 82, 83, 87, 89, 90, 92, 93, 94, 95, 98, 125, 129, 131, 135, 136, 137, 138, 141, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 161], "fals": [15, 16, 26, 28, 32, 42, 44, 56, 58, 68, 70, 80, 82, 92, 94, 121, 132, 135, 137, 147, 149, 157, 159], "iter": 15, "over": 15, "true": [15, 16, 26, 28, 32, 42, 44, 56, 58, 68, 70, 80, 82, 92, 94, 121, 127, 132, 135, 137, 147, 149, 157, 159, 174, 176], "yield": [15, 24], "next": 15, "u": 15, "v": [15, 168], "connector": 15, "attr": [15, 109], "obj": [16, 26, 42, 56, 68, 80, 92, 135, 147, 152, 157], "given": [16, 32, 33, 38, 47, 52, 64, 76, 88, 96, 123, 126, 127, 130, 140, 175], "otherwis": [16, 33, 121, 171, 176], "look": 16, "cl": [17, 37, 51, 63, 75, 87, 125, 144, 154], "independ": [17, 37, 51, 63, 75, 87, 125, 144, 154], "edg": 18, "delet": 18, "remov": [19, 25, 120, 133, 134, 175, 178], "guid": [20, 166, 168, 169, 172, 176], "global": 20, "creat": [20, 34, 48, 50, 60, 62, 72, 74, 101, 102, 110, 112, 114, 116, 128, 130, 164, 166, 169, 170, 172, 173, 174, 175, 176, 179, 182], "can": [20, 21, 29, 45, 59, 71, 83, 95, 109, 132, 138, 141, 150, 152, 161, 164, 172, 173, 176, 179], "t": [20, 21, 72, 116, 169], "found": [20, 21, 173], "find": [21, 32, 96, 162, 179], "classmethod": [22, 23, 29, 32, 38, 39, 40, 45, 47, 52, 53, 54, 59, 64, 65, 66, 71, 76, 77, 78, 83, 88, 89, 90, 95, 101, 103, 107, 111, 113, 115, 117, 128, 129, 130, 131, 138, 140, 145, 146, 150, 155, 156, 161], "construct": [22, 23, 29, 39, 40, 45, 53, 54, 59, 65, 66, 71, 77, 78, 83, 89, 90, 95, 129, 131, 138, 145, 146, 150, 155, 156, 161, 166], "provid": [22, 31, 39, 53, 65, 77, 89, 129, 145, 155, 171, 172, 174, 176], "dictionari": [22, 39, 53, 65, 77, 89, 98, 111, 113, 115, 117, 129, 145, 155], "ha": [22, 23, 30, 39, 40, 53, 54, 65, 66, 77, 78, 89, 90, 96, 129, 131, 145, 146, 152, 155, 156, 176, 179, 180, 181], "correct": [22, 23, 39, 40, 53, 54, 65, 66, 77, 78, 89, 90, 129, 131, 145, 146, 155, 156], "schema": [22, 23, 27, 29, 39, 40, 43, 45, 53, 54, 57, 59, 65, 66, 69, 71, 77, 78, 81, 83, 89, 90, 93, 95, 129, 131, 136, 138, 145, 146, 148, 150, 155, 156, 158, 161], "filepath": [23, 28, 40, 44, 54, 58, 66, 70, 78, 82, 90, 94, 131, 137, 146, 149, 156, 159], "json": [23, 28, 40, 44, 54, 58, 66, 70, 78, 82, 90, 94, 131, 137, 146, 149, 156, 159], "file": [23, 28, 40, 44, 54, 58, 66, 70, 78, 82, 90, 94, 98, 131, 137, 146, 149, 156, 159, 170, 171, 173, 177], "path": [23, 28, 40, 44, 54, 58, 66, 70, 78, 82, 90, 94, 131, 137, 146, 149, 156, 159, 168], "individu": [24, 109], "as_str": [26, 42, 56, 68, 80, 92, 135, 147, 157], "comput": [26, 33, 42, 56, 68, 80, 92, 135, 147, 157], "hash": [26, 42, 56, 68, 80, 92, 135, 147, 157], "comparison": [26, 42, 56, 68, 80, 92, 135, 147, 157], "dure": [26, 41, 42, 56, 68, 80, 92, 135, 147, 152, 157], "version": [26, 42, 56, 68, 80, 92, 135, 147, 157, 168], "control": [26, 42, 56, 68, 80, 92, 135, 147, 157], "algorithm": [26, 42, 56, 68, 80, 92, 96, 135, 147, 157], "digest": [26, 42, 56, 68, 80, 92, 135, 147, 157], "hexadecim": [26, 42, 56, 68, 80, 92, 135, 147, 157], "format": [26, 42, 56, 68, 80, 92, 98, 135, 147, 157, 175], "rather": [26, 42, 56, 68, 80, 92, 135, 147, 157], "than": [26, 38, 42, 52, 56, 64, 68, 76, 80, 88, 92, 135, 147, 157, 179], "byte": [26, 42, 56, 68, 80, 92, 135, 147, 157], "exampl": [26, 41, 42, 56, 68, 80, 92, 96, 135, 147, 157, 166, 168, 172, 175, 176, 179, 182], "import": [26, 42, 56, 68, 80, 92, 135, 147, 157, 173, 182], "mesh": [26, 42, 56, 68, 80, 92, 135, 147, 157, 165], "from_obj": [26, 42, 56, 68, 80, 92, 135, 147, 157], "get": [26, 42, 56, 68, 80, 92, 135, 147, 157, 172], "face": [26, 42, 56, 68, 80, 92, 102, 118, 127, 135, 147, 157], "v1": [26, 42, 56, 68, 80, 92, 135, 147, 157], "v2": [26, 42, 56, 68, 80, 92, 135, 147, 157], "vertex_attribut": [26, 42, 56, 68, 80, 92, 135, 147, 157], "vertex_sampl": [26, 42, 56, 68, 80, 92, 135, 147, 157], "1": [26, 42, 56, 68, 80, 92, 118, 135, 147, 157, 165, 173, 176], "0": [26, 42, 56, 68, 80, 92, 118, 135, 147, 157, 165, 168, 176, 179], "z": [26, 42, 56, 68, 80, 92, 118, 128, 130, 135, 147, 157, 176, 178, 181], "v3": [26, 42, 56, 68, 80, 92, 135, 147, 157], "nativ": [27, 28, 43, 44, 57, 58, 69, 70, 81, 82, 93, 94, 136, 137, 148, 149, 158, 159], "describ": [27, 43, 57, 69, 81, 93, 109, 136, 148, 158, 173], "pretti": [28, 44, 58, 70, 82, 94, 98, 99, 137, 149, 159], "save": [28, 44, 55, 58, 67, 70, 79, 82, 91, 94, 137, 149, 159], "valid": [29, 45, 59, 71, 83, 95, 138, 150, 161], "against": [29, 45, 59, 71, 83, 95, 138, 150, 161], "": [29, 36, 45, 48, 59, 60, 71, 72, 83, 86, 95, 118, 123, 126, 128, 130, 132, 138, 150, 161, 170, 175, 181], "raw": [29, 45, 59, 71, 83, 95, 138, 150, 161], "from_data": [29, 45, 59, 71, 83, 95, 138, 150, 161], "except": 30, "baseexcept": 30, "indic": [30, 102, 128, 130, 175, 176], "error": [30, 174, 175], "occur": 30, "while": 30, "try": 30, "join": [30, 34, 38, 48, 52, 60, 64, 72, 76, 88, 102, 174, 179], "more": [30, 122, 166, 172, 173], "tool": [31, 166, 172, 176, 180, 181], "detect": 31, "intersect": [31, 32, 33, 179], "topologi": [31, 33, 38, 46, 47, 48, 52, 60, 64, 72, 76, 88], "rtree": [32, 162], "max_dist": [32, 33], "pair": [32, 33, 96, 162, 175, 179, 182], "r": [32, 96, 168], "tree": [32, 96], "search": [32, 96], "neighbor": [32, 96, 162], "float": [32, 33, 96, 102, 118, 120, 127, 128, 130, 162], "distanc": [32, 33, 179], "apart": 32, "non": 32, "touch": 32, "still": 32, "consid": [32, 33], "neightbor": [32, 162], "beam_a": [33, 60], "beam_b": [33, 60], "tol": 33, "1e": 33, "06": 33, "within": [33, 152], "role": [33, 41], "sensit": 33, "consist": 33, "specif": [33, 41, 109, 166, 173], "order": [33, 96, 105, 151, 182], "e": [33, 41, 164, 168, 175, 179, 180, 181], "g": [33, 41, 164, 168, 175], "main": [33, 41, 48, 55, 67, 72, 74, 79, 91, 168, 169, 170, 179], "first": [33, 60, 126, 169, 179, 182], "cross": [33, 41, 48, 55, 67, 72, 74, 79, 91, 118, 128, 130, 176, 179], "second": [33, 60, 126, 179], "thei": 33, "were": [33, 175], "input": [33, 96, 109, 172, 173, 175, 176, 179], "gener": [33, 100, 104, 108, 109, 151, 173, 182], "toler": [33, 179], "mathemat": 33, "maximum": 33, "desigen": 33, "unit": [33, 96, 127], "jointtopologi": [33, 166], "should": [34, 41, 96, 109, 120, 132, 173, 179], "instanti": [34, 109, 173], "directli": [34, 170], "respect": [34, 41, 179], "implement": [34, 41, 162, 166], "instead": [34, 176], "end": [34, 48, 60, 72, 102, 118, 120, 126, 127, 130, 179], "map": [34, 172, 181], "ehich": 34, "each": [34, 60, 109, 127, 141, 173, 175, 179], "featur": [36, 50, 62, 74, 86, 118, 121, 122, 132, 134, 166, 172, 174, 180, 182], "affect": [36, 86], "new": [38, 52, 64, 76, 88, 169, 170, 173, 176], "expect": [38, 52, 64, 76, 88], "been": [38, 52, 64, 76, 88, 152], "befor": [38, 52, 64, 76, 88, 180], "call": [38, 41, 50, 52, 62, 64, 74, 76, 88, 109, 121, 173, 176, 179], "code": [38, 52, 64, 76, 88, 164, 166], "doe": [38, 52, 64, 76, 88, 170, 173, 176, 179], "verifi": [38, 52, 64, 76, 88, 127], "adjac": [38, 52, 64, 76, 88], "lie": [38, 52, 64, 76, 88], "allow": [38, 52, 64, 76, 88, 127, 152], "them": [38, 52, 60, 64, 76, 88, 109, 164, 173, 175, 179], "respons": [38, 52, 64, 76, 88], "valueerror": [38, 52, 64, 76, 88], "less": [38, 52, 64, 76, 88, 118], "assemebli": [38, 52, 64, 76, 88], "jo": [38, 52, 64, 76, 88], "belong": [38, 52, 64, 76, 88], "whould": [38, 52, 64, 76, 88], "togeth": [38, 52, 64, 76, 88, 176], "restor": 41, "refer": [41, 55, 67, 79, 91, 102, 166, 168, 172, 173, 175, 179], "associ": [41, 48, 60, 72, 102, 113, 117, 152, 171], "serial": [41, 55, 67, 79, 91], "To": [41, 170, 172, 173, 174, 179, 182], "avoid": [41, 179], "circular": 41, "store": [41, 175, 176], "de": [41, 55, 67, 79, 91], "sinc": 41, "concret": 41, "see": [41, 168, 172, 176, 177, 181], "tbuttjoint": [41, 165, 166], "enumer": 46, "possibl": [46, 175], "topo_unknown": [46, 47], "topo_i": 46, "topo_l": [46, 47], "topo_t": [46, 47], "topo_x": [46, 47], "For": [47, 96, 140, 166, 181, 182], "log": [47, 140, 174], "One": [47, 140, 152], "l": [48, 60, 112, 114, 115], "butt": [48, 72, 112, 116], "trim": [48, 50, 60, 62, 72, 74, 174, 178, 179], "pleas": [48, 60, 72, 163], "properli": [48, 60, 72], "timberassembli": [48, 60, 72, 151, 165, 166], "main_beam": [48, 72, 165], "cross_beam": [48, 72, 165], "cutting_plane_main": [48, 72], "frame": [48, 60, 72, 102, 106, 107, 118, 152, 165, 166, 172, 174, 182], "cutting_plane_cross": [48, 72], "joint_typ": [48, 60, 72, 101], "requir": [50, 62, 105, 109, 120, 133, 168], "extens": [50, 62, 120, 127, 133, 170], "both": [50, 62], "assemli": [55, 67, 91], "after": [55, 67, 79, 91], "resotr": [55, 67, 79, 91], "miter": [60, 114, 115], "plane": [60, 74, 106, 127, 176, 178, 181], "bisector": [60, 179], "angl": [60, 102, 179], "centerlin": [60, 118, 126, 128, 130, 172, 175, 176, 179, 181], "cutting_plan": 60, "normal": [60, 118], "point": [60, 118, 126, 130, 166, 181], "opposit": 60, "direct": [60, 118, 127, 128, 130, 162, 176], "along": [72, 118, 179], "length": [72, 118, 128, 179], "anoth": 72, "inflate_bi": [96, 162], "axi": [96, 118, 128, 130, 176, 181], "align": [96, 118, 123, 172, 181], "bound": [96, 118, 162], "box": [96, 118, 152, 162, 172, 180], "aabb": [96, 118], "enlarg": 96, "amount": [96, 120, 127, 162], "element": [96, 109, 126, 151, 152], "design": [96, 163, 166, 172, 175, 176], "regard": 96, "inflat": [96, 162], "pluggabl": 96, "In": [96, 166, 179], "plugin": [96, 166, 176], "avail": [96, 132, 167], "histori": 98, "btlx_string": 98, "xml": [98, 99], "visual": [98, 99, 141, 152, 164, 174], "gh": [98, 99], "termin": [98, 99, 170], "btlxpart": [98, 102, 106, 109, 111, 113, 115, 117, 173], "process": [100, 102, 104, 105, 106, 108, 109, 111, 113, 115, 117, 166, 172, 173, 182], "joint_factori": [101, 109, 173], "regist": 101, "correspond": [101, 118, 126, 175, 176, 181], "factori": [101, 109, 110, 112, 114, 116, 173], "arg": 101, "jointfactori": 101, "french": [102, 110], "ridg": [102, 110], "lap": 102, "is_top": [102, 103], "flag": 102, "top": [102, 172], "bottom": 102, "process_typ": [102, 109, 173], "frenchridgelap": 102, "other_beam": 102, "appli": [102, 109, 111, 113, 115, 117, 121, 173, 174, 179, 180, 182], "orient": [102, 128, 130, 181], "drill_hole_diamet": 102, "diamet": 102, "drill": 102, "hole": [102, 172], "ref_face_index": 102, "index": [102, 166, 180], "ref_fac": 102, "surfac": [102, 173], "header_attribut": [102, 109, 173], "header": 102, "process_paramet": [102, 109], "geometr": [102, 105, 109, 166, 173, 174, 178], "btlx": [102, 109, 166, 172], "degre": 102, "intern": [104, 108], "properti": 105, "all": [105, 127, 132, 134, 162, 171, 175], "It": [105, 166, 172, 174, 175, 176, 181], "ordereddict": 105, "maintain": [105, 166], "origin": [105, 118, 176, 180, 181], "jack": 106, "cut": [106, 172, 174, 178, 179], "joint_nam": [106, 107], "append": [109, 173], "btlx_process": [109, 173], "eg": 109, "btlxjackcut": [109, 166], "match": [109, 173], "deriv": [109, 173], "relat": [109, 173], "some": [109, 172, 181], "combin": 109, "multipl": [109, 164, 173], "cover": 109, "register_joint": [109, 173], "so": [109, 171, 173], "typic": [109, 152, 173], "need": [109, 123, 168, 170, 173, 175, 182], "param": 109, "et_el": 109, "et": 109, "stud": [118, 176], "slat": 118, "rectangular": [118, 176], "section": [118, 128, 130, 164, 172, 176], "geometri": [118, 132, 152, 162, 166, 172, 174, 176, 178, 180, 181, 182], "local": [118, 170, 176, 180], "coordin": [118, 176, 180], "system": [118, 176, 180], "locat": [118, 152, 170, 176], "start": [118, 120, 126, 127, 130, 172, 176], "x": [118, 176, 179, 181], "major": [118, 176], "also": [118, 121, 163, 166, 168, 172, 175, 176], "fibr": [118, 172], "solid": [118, 174], "wood": 118, "y": [118, 176, 181], "width": [118, 128, 130, 165, 175, 176], "smaller": [118, 176], "dimens": [118, 176], "height": [118, 128, 130, 165, 175, 176], "larger": [118, 176], "blank": [118, 120, 133], "parametr": [118, 166], "6": 118, "side": [118, 178, 179], "equal": 118, "posit": [118, 178, 179], "2": [118, 165, 173], "3": [118, 169, 173], "4": [118, 165, 173], "5": 118, "line": [118, 128, 166, 175, 176], "centerline_start": 118, "centerline_end": 118, "xmin": 118, "ymin": 118, "zmin": 118, "xmax": 118, "ymax": 118, "zmax": 118, "long_edg": 118, "long": [118, 127], "midpoint": 118, "middl": 118, "extend": [120, 127], "well": 120, "user": [121, 175], "must": 121, "apply_featur": 121, "vector": [123, 128, 130, 166, 176], "z_axi": 123, "definit": [123, 173, 174], "todo": [123, 127], "Not": 123, "anywher": 123, "features_to_clear": 124, "endpoint": [126, 130], "closer": 126, "interest": 126, "either": 126, "depend": [126, 128, 130, 168, 169, 173, 180], "result": [126, 151, 179], "actual": 126, "pln": 127, "metric": 127, "minimum": 127, "pass": 127, "through": [127, 163], "z_vector": [128, 130], "worldz": [128, 130], "worldx": [128, 130], "point_start": 130, "point_end": 130, "end_point": 130, "with_featur": 132, "transform": 132, "copi": [132, 170, 171], "drawn": [132, 176], "scene": 132, "enum": 139, "could": 139, "execut": [139, 152, 164, 170], "instruct": [139, 141, 152], "human": [140, 152], "robot": [140, 152], "build": [141, 151, 152, 168, 182], "step": [141, 143, 151, 166, 173], "simpl": [151, 166, 172], "sequenc": [151, 166], "per": 151, "buildingplan": [151, 166], "assembl": 152, "singl": [152, 173], "actor": [152, 166], "element_id": 152, "cad": [152, 164], "id": [152, 164], "elements_held": 152, "held": 152, "support": [152, 163, 164], "is_built": 152, "whether": [152, 171, 180], "is_plan": 152, "increment": 152, "cylind": 152, "prioriti": 152, "parallel": [152, 176], "prior": 162, "research": [163, 166, 171], "project": [163, 166], "develop": [163, 166, 167, 169], "aleksandra": 163, "apolinarska": 163, "chen": 163, "kasir": 163, "gonzalo": 163, "casa": 163, "gramazio": [163, 166, 171], "kohler": [163, 166, 171], "eth": [163, 166], "zurich": [163, 166], "swiss": 163, "nation": 163, "scienc": 163, "foundat": 163, "center": 163, "compet": 163, "digit": 163, "nccr": 163, "dfab": 163, "programm": 163, "As": 163, "open": [163, 166, 170], "mani": [163, 164, 166], "contributor": 163, "you": [163, 168, 169, 170, 172, 176, 179, 182], "your": [163, 169], "work": 163, "acknowledg": 163, "misc": 163, "titl": 163, "librari": [163, 164, 166, 172], "structur": [163, 166, 172, 174, 182], "author": [163, 171], "anna": 163, "http": [163, 168, 169, 173], "github": [163, 168, 169, 170], "com": [163, 168, 169, 173], "gramaziokohl": 163, "year": 163, "2022": 163, "2023": 163, "doi": 163, "10": 163, "5281": 163, "zenodo": 163, "7934267": 163, "url": 163, "present": 164, "differ": [164, 173, 179, 182], "concept": [164, 172], "There": [164, 175], "wai": 164, "run": [164, 166, 170], "python": [164, 166, 168, 169, 172], "environ": [164, 166, 168, 169, 170], "interact": 164, "session": [164, 170], "text": [164, 170], "editor": 164, "sublim": 164, "studio": 164, "eclips": 164, "insid": 164, "blender": 164, "worldxi": 165, "depth": 165, "geometry_typ": 165, "add_beam": 165, "document": [166, 171, 173, 175, 176, 181], "packag": [166, 173], "model": 166, "written": 166, "framework": 166, "ecosystem": 166, "rhinocero": 166, "3d": 166, "plug": 166, "activ": [166, 169, 174, 176, 181], "being": 166, "continu": 166, "At": 166, "stage": 166, "encompass": 166, "fast": 166, "intuit": 166, "custom": [166, 175], "entiti": 166, "semant": 166, "inform": [166, 181], "about": 166, "futur": 166, "expand": 166, "entail": [166, 175], "interfac": 166, "analysi": 166, "softwar": [166, 171], "specialist": 166, "built": [166, 172], "upon": 166, "basic": 166, "like": [166, 172, 174], "complex": 166, "brep": [166, 174, 178, 180, 181], "resolv": 166, "backend": 166, "rhinocommon": 166, "sdk": 166, "handl": 166, "opencascad": 166, "via": 166, "occ": 166, "introduct": 166, "instal": 166, "quick": [166, 167], "manual": [166, 167], "api": [166, 172], "lbuttjoint": 166, "lmiterjoint": 166, "xhalflapjoint": 166, "connectionsolv": 166, "find_neighboring_beam": 166, "beamjoinningerror": 166, "brepgeometryconsum": 166, "btlxprocess": [166, 173], "btlxfrenchridgelap": 166, "lbuttfactori": 166, "tbuttfactori": 166, "lmiterfactori": 166, "frenchridgefactori": 166, "simplesequencegener": 166, "workflow": [166, 172, 175, 176], "show": [166, 172], "util": [166, 172], "contribut": [166, 172], "licens": 166, "cite": 166, "follow": [167, 171, 172, 173], "possibilti": 167, "want": [168, 169], "purpos": [168, 169, 171], "detail": [168, 172], "here": [168, 170, 173, 177, 179, 181], "fork": 168, "repo": 168, "clone": 168, "navig": [168, 170], "repositori": 168, "folder": 168, "cd": 168, "pip": [168, 169, 170], "git": [168, 169], "dev": [168, 169], "txt": 168, "ghuser": 168, "compon": [168, 170, 174, 175, 176, 180], "invok": 168, "sure": 168, "variabl": 168, "dependeci": 168, "m": 168, "compas_rhino": 168, "7": 168, "specifi": 168, "virutu": 169, "conda": [169, 170], "virtual": [169, 170], "replac": 169, "myenvnam": 169, "desir": [169, 181], "n": 169, "9": 169, "don": 169, "forg": 169, "yet": 169, "config": 169, "env": 169, "channel": 169, "prerequisit": 170, "rhinoceros3d": 170, "window": 170, "download": 170, "win_instal": 170, "cmd": 170, "content": 170, "newli": 170, "chang": 170, "doubl": 170, "click": 170, "altern": 170, "ex": 170, "mac": 170, "mac_instal": 170, "script": 170, "sh": 170, "what": 170, "background": 170, "batch": 170, "miniconda": 170, "branch": 170, "mit": 171, "copyright": 171, "c": 171, "2020": 171, "02": 171, "17": 171, "permiss": 171, "herebi": 171, "grant": 171, "free": 171, "charg": 171, "person": 171, "obtain": 171, "deal": 171, "without": 171, "restrict": 171, "limit": 171, "right": 171, "modifi": 171, "merg": 171, "publish": 171, "distribut": 171, "sublicens": 171, "sell": 171, "permit": 171, "whom": 171, "furnish": 171, "do": [171, 173], "subject": 171, "condit": 171, "abov": 171, "notic": 171, "shall": 171, "substanti": 171, "portion": 171, "THE": 171, "AS": 171, "warranti": 171, "OF": 171, "kind": 171, "express": 171, "OR": 171, "impli": [171, 174], "BUT": 171, "NOT": 171, "TO": 171, "merchant": 171, "fit": 171, "FOR": 171, "particular": 171, "AND": 171, "noninfring": 171, "IN": 171, "NO": 171, "event": 171, "holder": 171, "BE": 171, "liabl": 171, "claim": 171, "damag": 171, "liabil": 171, "action": 171, "contract": 171, "tort": 171, "aris": 171, "out": 171, "WITH": 171, "easi": 172, "autom": [172, 179], "bake": 172, "textur": [172, 181], "render": [172, 181], "boolean": [172, 174, 178], "style": 172, "planar": [172, 179], "might": 172, "ghpython": 172, "componen": 172, "overal": 172, "idea": 172, "how": [172, 179], "Then": [172, 179], "explain": 172, "machin": 173, "requr": 173, "necessari": 173, "design2machin": 173, "btlx_2_1_0": 173, "pdf": 173, "process_param": 173, "where": [173, 176, 181], "btlxjoint": 173, "__init__": 173, "py": 173, "mind": 173, "made": 174, "oper": [174, 178], "subtract": [174, 178], "computation": 174, "expens": 174, "disabl": 174, "applyfeatur": 174, "unsuccess": 174, "abstract": 174, "showassembli": [174, 180], "group": 175, "intend": [175, 176], "hybrid": 175, "encod": 175, "concaten": 175, "colon": 175, "separ": 175, "entri": [175, 182], "underscor": 175, "_": 175, "attr1nam": 175, "attr1value_attr2nam": 175, "attr2valu": 175, "four": [175, 179], "standard": 175, "categori": [175, 176, 179], "zvector": [175, 176], "setstandardattribut": 175, "write": [175, 176], "readstandardattribut": 175, "read": 175, "checkstandardattribut": 175, "correctli": 175, "miss": 175, "retriev": 175, "later": [175, 176, 179], "filter": 175, "accord": [175, 179], "criteria": 175, "These": 175, "deleteattribut": 175, "setcustomattribut": 175, "readallattribut": 175, "linear": [176, 179], "straight": 176, "rafter": 176, "joist": 176, "beamfromcurv": 176, "form": [176, 179], "linecurv": 176, "beamfromcurveguid": 176, "referenc": 176, "rotat": 176, "around": 176, "li": [176, 181], "sai": 176, "perpendicular": 176, "cannot": 176, "world": 176, "vertic": 176, "convent": 176, "rule": [176, 179], "jointcategoryrul": [176, 179], "automaticjoint": 176, "updaterefobj": 176, "onc": 176, "preview": [176, 180], "shape": 176, "extract": [176, 180], "demo": 177, "ly": 178, "three": 179, "prefix": 179, "rel": 179, "we": 179, "distinguish": 179, "topolog": 179, "situat": 179, "splice": 179, "co": 179, "corner": 179, "meet": 179, "select": 179, "addition": 179, "clean": 179, "serv": [179, 181], "cata": 179, "catb": 179, "thing": 179, "determin": 179, "ye": 179, "everi": 179, "tri": 179, "unintend": 179, "maxdist": 179, "exactli": 179, "certain": 179, "000001": 179, "inspect": 180, "showbeam": 180, "showbeamfram": 180, "showbeamindex": 180, "showjointtyp": 180, "bakewithboxmap": 181, "layer": 181, "materi": 181, "random": 181, "deviat": 181, "mapsiz": 181, "scale": 181, "adjust": 181, "size": 181, "imag": 181, "ratio": 181, "bitmap": 181, "care": 182, "final": 182, "matter": 182, "last": 182, "earlier": 182}, "objects": {"compas_timber.assembly": [[8, 0, 1, "", "TimberAssembly"]], "compas_timber.assembly.TimberAssembly": [[9, 1, 1, "", "ToString"], [10, 1, 1, "", "add_beam"], [11, 1, 1, "", "add_connection"], [12, 1, 1, "", "add_joint"], [13, 1, 1, "", "add_part"], [14, 1, 1, "", "are_parts_joined"], [15, 1, 1, "", "connections"], [16, 1, 1, "", "contains"], [17, 1, 1, "", "copy"], [18, 1, 1, "", "delete_connection"], [19, 1, 1, "", "delete_part"], [20, 1, 1, "", "find"], [21, 1, 1, "", "find_by_key"], [22, 1, 1, "", "from_data"], [23, 1, 1, "", "from_json"], [24, 1, 1, "", "parts"], [25, 1, 1, "", "remove_joint"], [26, 1, 1, "", "sha256"], [27, 1, 1, "", "to_data"], [28, 1, 1, "", "to_json"], [29, 1, 1, "", "validate_data"]], "compas_timber.connections": [[30, 2, 1, "", "BeamJoinningError"], [31, 0, 1, "", "ConnectionSolver"], [34, 0, 1, "", "Joint"], [46, 0, 1, "", "JointTopology"], [48, 0, 1, "", "LButtJoint"], [60, 0, 1, "", "LMiterJoint"], [72, 0, 1, "", "TButtJoint"], [84, 0, 1, "", "XHalfLapJoint"], [96, 3, 1, "", "find_neighboring_beams"]], "compas_timber.connections.ConnectionSolver": [[32, 1, 1, "", "find_intersecting_pairs"], [33, 1, 1, "", "find_topology"]], "compas_timber.connections.Joint": [[35, 1, 1, "", "ToString"], [36, 1, 1, "", "add_features"], [37, 1, 1, "", "copy"], [38, 1, 1, "", "create"], [39, 1, 1, "", "from_data"], [40, 1, 1, "", "from_json"], [41, 1, 1, "", "restore_beams_from_keys"], [42, 1, 1, "", "sha256"], [43, 1, 1, "", "to_data"], [44, 1, 1, "", "to_json"], [45, 1, 1, "", "validate_data"]], "compas_timber.connections.JointTopology": [[47, 1, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[49, 1, 1, "", "ToString"], [50, 1, 1, "", "add_features"], [51, 1, 1, "", "copy"], [52, 1, 1, "", "create"], [53, 1, 1, "", "from_data"], [54, 1, 1, "", "from_json"], [55, 1, 1, "", "restore_beams_from_keys"], [56, 1, 1, "", "sha256"], [57, 1, 1, "", "to_data"], [58, 1, 1, "", "to_json"], [59, 1, 1, "", "validate_data"]], "compas_timber.connections.LMiterJoint": [[61, 1, 1, "", "ToString"], [62, 1, 1, "", "add_features"], [63, 1, 1, "", "copy"], [64, 1, 1, "", "create"], [65, 1, 1, "", "from_data"], [66, 1, 1, "", "from_json"], [67, 1, 1, "", "restore_beams_from_keys"], [68, 1, 1, "", "sha256"], [69, 1, 1, "", "to_data"], [70, 1, 1, "", "to_json"], [71, 1, 1, "", "validate_data"]], "compas_timber.connections.TButtJoint": [[73, 1, 1, "", "ToString"], [74, 1, 1, "", "add_features"], [75, 1, 1, "", "copy"], [76, 1, 1, "", "create"], [77, 1, 1, "", "from_data"], [78, 1, 1, "", "from_json"], [79, 1, 1, "", "restore_beams_from_keys"], [80, 1, 1, "", "sha256"], [81, 1, 1, "", "to_data"], [82, 1, 1, "", "to_json"], [83, 1, 1, "", "validate_data"]], "compas_timber.connections.XHalfLapJoint": [[85, 1, 1, "", "ToString"], [86, 1, 1, "", "add_features"], [87, 1, 1, "", "copy"], [88, 1, 1, "", "create"], [89, 1, 1, "", "from_data"], [90, 1, 1, "", "from_json"], [91, 1, 1, "", "restore_beams_from_keys"], [92, 1, 1, "", "sha256"], [93, 1, 1, "", "to_data"], [94, 1, 1, "", "to_json"], [95, 1, 1, "", "validate_data"]], "compas_timber.consumers": [[97, 0, 1, "", "BrepGeometryConsumer"]], "compas_timber.fabrication": [[98, 0, 1, "", "BTLx"], [102, 0, 1, "", "BTLxFrenchRidgeLap"], [106, 0, 1, "", "BTLxJackCut"], [109, 0, 1, "", "BTLxProcess"], [110, 0, 1, "", "FrenchRidgeFactory"], [112, 0, 1, "", "LButtFactory"], [114, 0, 1, "", "LMiterFactory"], [116, 0, 1, "", "TButtFactory"]], "compas_timber.fabrication.BTLx": [[99, 1, 1, "", "btlx_string"], [100, 1, 1, "", "process_assembly"], [101, 1, 1, "", "register_joint"]], "compas_timber.fabrication.BTLxFrenchRidgeLap": [[103, 1, 1, "", "create_process"], [104, 1, 1, "", "get_params"], [105, 1, 1, "", "process_joints"]], "compas_timber.fabrication.BTLxJackCut": [[107, 1, 1, "", "create_process"], [108, 1, 1, "", "generate_process"]], "compas_timber.fabrication.FrenchRidgeFactory": [[111, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.LButtFactory": [[113, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.LMiterFactory": [[115, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.TButtFactory": [[117, 1, 1, "", "apply_processings"]], "compas_timber.parts": [[118, 0, 1, "", "Beam"]], "compas_timber.parts.Beam": [[119, 1, 1, "", "ToString"], [120, 1, 1, "", "add_blank_extension"], [121, 1, 1, "", "add_feature"], [122, 1, 1, "", "add_features"], [123, 1, 1, "", "align_z"], [124, 1, 1, "", "clear_features"], [125, 1, 1, "", "copy"], [126, 1, 1, "", "endpoint_closest_to_point"], [127, 1, 1, "", "extension_to_plane"], [128, 1, 1, "", "from_centerline"], [129, 1, 1, "", "from_data"], [130, 1, 1, "", "from_endpoints"], [131, 1, 1, "", "from_json"], [132, 1, 1, "", "get_geometry"], [133, 1, 1, "", "remove_blank_extension"], [134, 1, 1, "", "remove_features"], [135, 1, 1, "", "sha256"], [136, 1, 1, "", "to_data"], [137, 1, 1, "", "to_json"], [138, 1, 1, "", "validate_data"]], "compas_timber.planning": [[139, 0, 1, "", "Actor"], [141, 0, 1, "", "BuildingPlan"], [151, 0, 1, "", "SimpleSequenceGenerator"], [152, 0, 1, "", "Step"]], "compas_timber.planning.Actor": [[140, 1, 1, "", "get_name"]], "compas_timber.planning.BuildingPlan": [[142, 1, 1, "", "ToString"], [143, 1, 1, "", "add_step"], [144, 1, 1, "", "copy"], [145, 1, 1, "", "from_data"], [146, 1, 1, "", "from_json"], [147, 1, 1, "", "sha256"], [148, 1, 1, "", "to_data"], [149, 1, 1, "", "to_json"], [150, 1, 1, "", "validate_data"]], "compas_timber.planning.Step": [[153, 1, 1, "", "ToString"], [154, 1, 1, "", "copy"], [155, 1, 1, "", "from_data"], [156, 1, 1, "", "from_json"], [157, 1, 1, "", "sha256"], [158, 1, 1, "", "to_data"], [159, 1, 1, "", "to_json"], [160, 1, 1, "", "transform"], [161, 1, 1, "", "validate_data"]], "compas_timber.rhino": [[162, 3, 1, "", "find_neighboring_beams"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:exception", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "exception", "Python exception"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "packag": 0, "compas_timb": [1, 2, 3, 4, 5, 6], "assembli": [1, 164, 174], "class": [1, 2, 3, 4, 5, 6], "connect": [2, 15], "function": 2, "except": 2, "consum": 3, "fabric": 4, "part": [5, 24], "plan": 6, "rhino": 7, "plugin": [7, 172], "timberassembli": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "tostr": [9, 35, 49, 61, 73, 85, 119, 142, 153], "add_beam": 10, "add_connect": 11, "add_joint": 12, "add_part": 13, "are_parts_join": 14, "contain": 16, "copi": [17, 37, 51, 63, 75, 87, 125, 144, 154], "delete_connect": 18, "delete_part": 19, "find": 20, "find_by_kei": 21, "from_data": [22, 39, 53, 65, 77, 89, 129, 145, 155], "from_json": [23, 40, 54, 66, 78, 90, 131, 146, 156], "remove_joint": 25, "sha256": [26, 42, 56, 68, 80, 92, 135, 147, 157], "to_data": [27, 43, 57, 69, 81, 93, 136, 148, 158], "to_json": [28, 44, 58, 70, 82, 94, 137, 149, 159], "validate_data": [29, 45, 59, 71, 83, 95, 138, 150, 161], "beamjoinningerror": 30, "connectionsolv": [31, 32, 33], "find_intersecting_pair": 32, "find_topologi": 33, "joint": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 165, 179], "add_featur": [36, 50, 62, 74, 86, 121, 122], "creat": [38, 52, 64, 76, 88, 165], "restore_beams_from_kei": [41, 55, 67, 79, 91], "jointtopologi": [46, 47], "get_nam": [47, 140], "lbuttjoint": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "lmiterjoint": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "tbuttjoint": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], "xhalflapjoint": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "find_neighboring_beam": [96, 162], "brepgeometryconsum": 97, "btlx": [98, 99, 100, 101, 173], "btlx_string": 99, "process_assembli": 100, "register_joint": 101, "btlxfrenchridgelap": [102, 103, 104, 105], "create_process": [103, 107], "get_param": 104, "process_joint": 105, "btlxjackcut": [106, 107, 108], "generate_process": 108, "btlxprocess": 109, "frenchridgefactori": [110, 111], "apply_process": [111, 113, 115, 117], "lbuttfactori": [112, 113], "lmiterfactori": [114, 115], "tbuttfactori": [116, 117], "beam": [118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 176], "add_blank_extens": 120, "align_z": 123, "clear_featur": 124, "endpoint_closest_to_point": 126, "extension_to_plan": 127, "from_centerlin": 128, "from_endpoint": 130, "get_geometri": 132, "remove_blank_extens": 133, "remove_featur": 134, "actor": [139, 140], "buildingplan": [141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "add_step": 143, "simplesequencegener": 151, "step": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "transform": 160, "cite": 163, "exampl": [164, 177], "timber": [164, 166], "compa": 166, "depend": 166, "tabl": 166, "content": 166, "indic": 166, "instal": [167, 168, 169, 170], "manual": [168, 169], "develop": 168, "quick": 170, "licens": 171, "grasshopp": 172, "contribut": 173, "guid": 173, "attribut": 175, "featur": 178, "topologi": 179, "compon": 179, "t": 179, "butt": 179, "l": 179, "miter": 179, "automaticjoint": 179, "wizzard": 179, "show": 180, "util": 181, "bake": 181, "boxmap": 181, "workflow": 182}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"API Reference": [[0, "api-reference"]], "Packages": [[0, "packages"]], "compas_timber.assembly": [[1, "compas-timber-assembly"]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"]], "compas_timber.connections": [[2, "compas-timber-connections"]], "Functions": [[2, "functions"]], "Exceptions": [[2, "exceptions"]], "compas_timber.consumers": [[3, "compas-timber-consumers"]], "compas_timber.fabrication": [[4, "compas-timber-fabrication"]], "compas_timber.parts": [[5, "compas-timber-parts"]], "compas_timber.planning": [[6, "compas-timber-planning"]], "rhino": [[7, "rhino"]], "Plugins": [[7, "plugins"]], "TimberAssembly": [[8, "timberassembly"]], "TimberAssembly.ToString": [[9, "timberassembly-tostring"]], "TimberAssembly.add_beam": [[10, "timberassembly-add-beam"]], "TimberAssembly.add_connection": [[11, "timberassembly-add-connection"]], "TimberAssembly.add_joint": [[12, "timberassembly-add-joint"]], "TimberAssembly.add_part": [[13, "timberassembly-add-part"]], "TimberAssembly.are_parts_joined": [[14, "timberassembly-are-parts-joined"]], "TimberAssembly.connections": [[15, "timberassembly-connections"]], "TimberAssembly.contains": [[16, "timberassembly-contains"]], "TimberAssembly.copy": [[17, "timberassembly-copy"]], "TimberAssembly.delete_connection": [[18, "timberassembly-delete-connection"]], "TimberAssembly.delete_part": [[19, "timberassembly-delete-part"]], "TimberAssembly.find": [[20, "timberassembly-find"]], "TimberAssembly.find_by_key": [[21, "timberassembly-find-by-key"]], "TimberAssembly.from_data": [[22, "timberassembly-from-data"]], "TimberAssembly.from_json": [[23, "timberassembly-from-json"]], "TimberAssembly.parts": [[24, "timberassembly-parts"]], "TimberAssembly.remove_joint": [[25, "timberassembly-remove-joint"]], "TimberAssembly.sha256": [[26, "timberassembly-sha256"]], "TimberAssembly.to_data": [[27, "timberassembly-to-data"]], "TimberAssembly.to_json": [[28, "timberassembly-to-json"]], "TimberAssembly.validate_data": [[29, "timberassembly-validate-data"]], "BeamJoinningError": [[30, "beamjoinningerror"]], "ConnectionSolver": [[31, "connectionsolver"]], "ConnectionSolver.find_intersecting_pairs": [[32, "connectionsolver-find-intersecting-pairs"]], "ConnectionSolver.find_topology": [[33, "connectionsolver-find-topology"]], "Joint": [[34, "joint"]], "Joint.ToString": [[35, "joint-tostring"]], "Joint.add_features": [[36, "joint-add-features"]], "Joint.copy": [[37, "joint-copy"]], "Joint.create": [[38, "joint-create"]], "Joint.from_data": [[39, "joint-from-data"]], "Joint.from_json": [[40, "joint-from-json"]], "Joint.restore_beams_from_keys": [[41, "joint-restore-beams-from-keys"]], "Joint.sha256": [[42, "joint-sha256"]], "Joint.to_data": [[43, "joint-to-data"]], "Joint.to_json": [[44, "joint-to-json"]], "Joint.validate_data": [[45, "joint-validate-data"]], "JointTopology": [[46, "jointtopology"]], "JointTopology.get_name": [[47, "jointtopology-get-name"]], "LButtJoint": [[48, "lbuttjoint"]], "LButtJoint.ToString": [[49, "lbuttjoint-tostring"]], "LButtJoint.add_features": [[50, "lbuttjoint-add-features"]], "LButtJoint.copy": [[51, "lbuttjoint-copy"]], "LButtJoint.create": [[52, "lbuttjoint-create"]], "LButtJoint.from_data": [[53, "lbuttjoint-from-data"]], "LButtJoint.from_json": [[54, "lbuttjoint-from-json"]], "LButtJoint.restore_beams_from_keys": [[55, "lbuttjoint-restore-beams-from-keys"]], "LButtJoint.sha256": [[56, "lbuttjoint-sha256"]], "LButtJoint.to_data": [[57, "lbuttjoint-to-data"]], "LButtJoint.to_json": [[58, "lbuttjoint-to-json"]], "LButtJoint.validate_data": [[59, "lbuttjoint-validate-data"]], "LMiterJoint": [[60, "lmiterjoint"]], "LMiterJoint.ToString": [[61, "lmiterjoint-tostring"]], "LMiterJoint.add_features": [[62, "lmiterjoint-add-features"]], "LMiterJoint.copy": [[63, "lmiterjoint-copy"]], "LMiterJoint.create": [[64, "lmiterjoint-create"]], "LMiterJoint.from_data": [[65, "lmiterjoint-from-data"]], "LMiterJoint.from_json": [[66, "lmiterjoint-from-json"]], "LMiterJoint.restore_beams_from_keys": [[67, "lmiterjoint-restore-beams-from-keys"]], "LMiterJoint.sha256": [[68, "lmiterjoint-sha256"]], "LMiterJoint.to_data": [[69, "lmiterjoint-to-data"]], "LMiterJoint.to_json": [[70, "lmiterjoint-to-json"]], "LMiterJoint.validate_data": [[71, "lmiterjoint-validate-data"]], "TButtJoint": [[72, "tbuttjoint"]], "TButtJoint.ToString": [[73, "tbuttjoint-tostring"]], "TButtJoint.add_features": [[74, "tbuttjoint-add-features"]], "TButtJoint.copy": [[75, "tbuttjoint-copy"]], "TButtJoint.create": [[76, "tbuttjoint-create"]], "TButtJoint.from_data": [[77, "tbuttjoint-from-data"]], "TButtJoint.from_json": [[78, "tbuttjoint-from-json"]], "TButtJoint.restore_beams_from_keys": [[79, "tbuttjoint-restore-beams-from-keys"]], "TButtJoint.sha256": [[80, "tbuttjoint-sha256"]], "TButtJoint.to_data": [[81, "tbuttjoint-to-data"]], "TButtJoint.to_json": [[82, "tbuttjoint-to-json"]], "TButtJoint.validate_data": [[83, "tbuttjoint-validate-data"]], "XHalfLapJoint": [[84, "xhalflapjoint"]], "XHalfLapJoint.ToString": [[85, "xhalflapjoint-tostring"]], "XHalfLapJoint.add_features": [[86, "xhalflapjoint-add-features"]], "XHalfLapJoint.copy": [[87, "xhalflapjoint-copy"]], "XHalfLapJoint.create": [[88, "xhalflapjoint-create"]], "XHalfLapJoint.from_data": [[89, "xhalflapjoint-from-data"]], "XHalfLapJoint.from_json": [[90, "xhalflapjoint-from-json"]], "XHalfLapJoint.restore_beams_from_keys": [[91, "xhalflapjoint-restore-beams-from-keys"]], "XHalfLapJoint.sha256": [[92, "xhalflapjoint-sha256"]], "XHalfLapJoint.to_data": [[93, "xhalflapjoint-to-data"]], "XHalfLapJoint.to_json": [[94, "xhalflapjoint-to-json"]], "XHalfLapJoint.validate_data": [[95, "xhalflapjoint-validate-data"]], "find_neighboring_beams": [[96, "find-neighboring-beams"], [162, "find-neighboring-beams"]], "BrepGeometryConsumer": [[97, "brepgeometryconsumer"]], "BTLx": [[98, "btlx"]], "BTLx.btlx_string": [[99, "btlx-btlx-string"]], "BTLx.process_assembly": [[100, "btlx-process-assembly"]], "BTLx.register_joint": [[101, "btlx-register-joint"]], "BTLxFrenchRidgeLap": [[102, "btlxfrenchridgelap"]], "BTLxFrenchRidgeLap.create_process": [[103, "btlxfrenchridgelap-create-process"]], "BTLxFrenchRidgeLap.get_params": [[104, "btlxfrenchridgelap-get-params"]], "BTLxFrenchRidgeLap.process_joints": [[105, "btlxfrenchridgelap-process-joints"]], "BTLxJackCut": [[106, "btlxjackcut"]], "BTLxJackCut.create_process": [[107, "btlxjackcut-create-process"]], "BTLxJackCut.generate_process": [[108, "btlxjackcut-generate-process"]], "BTLxProcess": [[109, "btlxprocess"]], "FrenchRidgeFactory": [[110, "frenchridgefactory"]], "FrenchRidgeFactory.apply_processings": [[111, "frenchridgefactory-apply-processings"]], "LButtFactory": [[112, "lbuttfactory"]], "LButtFactory.apply_processings": [[113, "lbuttfactory-apply-processings"]], "LMiterFactory": [[114, "lmiterfactory"]], "LMiterFactory.apply_processings": [[115, "lmiterfactory-apply-processings"]], "TButtFactory": [[116, "tbuttfactory"]], "TButtFactory.apply_processings": [[117, "tbuttfactory-apply-processings"]], "Beam": [[118, "beam"], [176, "beam"]], "Beam.ToString": [[119, "beam-tostring"]], "Beam.add_blank_extension": [[120, "beam-add-blank-extension"]], "Beam.add_feature": [[121, "beam-add-feature"]], "Beam.add_features": [[122, "beam-add-features"]], "Beam.align_z": [[123, "beam-align-z"]], "Beam.clear_features": [[124, "beam-clear-features"]], "Beam.copy": [[125, "beam-copy"]], "Beam.endpoint_closest_to_point": [[126, "beam-endpoint-closest-to-point"]], "Beam.extension_to_plane": [[127, "beam-extension-to-plane"]], "Beam.from_centerline": [[128, "beam-from-centerline"]], "Beam.from_data": [[129, "beam-from-data"]], "Beam.from_endpoints": [[130, "beam-from-endpoints"]], "Beam.from_json": [[131, "beam-from-json"]], "Beam.get_geometry": [[132, "beam-get-geometry"]], "Beam.remove_blank_extension": [[133, "beam-remove-blank-extension"]], "Beam.remove_features": [[134, "beam-remove-features"]], "Beam.sha256": [[135, "beam-sha256"]], "Beam.to_data": [[136, "beam-to-data"]], "Beam.to_json": [[137, "beam-to-json"]], "Beam.validate_data": [[138, "beam-validate-data"]], "Actor": [[139, "actor"]], "Actor.get_name": [[140, "actor-get-name"]], "BuildingPlan": [[141, "buildingplan"]], "BuildingPlan.ToString": [[142, "buildingplan-tostring"]], "BuildingPlan.add_step": [[143, "buildingplan-add-step"]], "BuildingPlan.copy": [[144, "buildingplan-copy"]], "BuildingPlan.from_data": [[145, "buildingplan-from-data"]], "BuildingPlan.from_json": [[146, "buildingplan-from-json"]], "BuildingPlan.sha256": [[147, "buildingplan-sha256"]], "BuildingPlan.to_data": [[148, "buildingplan-to-data"]], "BuildingPlan.to_json": [[149, "buildingplan-to-json"]], "BuildingPlan.validate_data": [[150, "buildingplan-validate-data"]], "SimpleSequenceGenerator": [[151, "simplesequencegenerator"]], "Step": [[152, "step"]], "Step.ToString": [[153, "step-tostring"]], "Step.copy": [[154, "step-copy"]], "Step.from_data": [[155, "step-from-data"]], "Step.from_json": [[156, "step-from-json"]], "Step.sha256": [[157, "step-sha256"]], "Step.to_data": [[158, "step-to-data"]], "Step.to_json": [[159, "step-to-json"]], "Step.transform": [[160, "step-transform"]], "Step.validate_data": [[161, "step-validate-data"]], "Citing": [[163, "citing"]], "Examples": [[164, "examples"], [177, "examples"]], "Timber Assembly Examples": [[164, "timber-assembly-examples"]], "Create Joint": [[165, "create-joint"]], "COMPAS TIMBER": [[166, "compas-timber"]], "Dependencies": [[166, "dependencies"]], "Table of Contents": [[166, "table-of-contents"]], "Indices and tables": [[166, "indices-and-tables"]], "Installation": [[167, "installation"]], "Manual installation for developers": [[168, "manual-installation-for-developers"]], "Manual installation": [[169, "manual-installation"]], "Quick installation": [[170, "quick-installation"]], "License": [[171, "license"]], "Grasshopper plugin": [[172, "grasshopper-plugin"]], "BTLx Contribution Guide": [[173, "btlx-contribution-guide"]], "Assembly": [[174, "assembly"]], "Attributes": [[175, "attributes"]], "Features": [[178, "features"]], "Joints": [[179, "joints"]], "Joint Topologies": [[179, "joint-topologies"]], "Joint components": [[179, "joint-components"]], "T-Butt": [[179, "t-butt"]], "L-Butt": [[179, "l-butt"]], "L-Miter": [[179, "l-miter"]], "AutomaticJoint wizzard": [[179, "automaticjoint-wizzard"]], "Show": [[180, "show"]], "Utils": [[181, "utils"]], "Bake with BoxMap": [[181, "bake-with-boxmap"]], "Workflow": [[182, "workflow"]]}, "indexentries": {"timberassembly (class in compas_timber.assembly)": [[8, "compas_timber.assembly.TimberAssembly"]], "tostring() (compas_timber.assembly.timberassembly method)": [[9, "compas_timber.assembly.TimberAssembly.ToString"]], "add_beam() (compas_timber.assembly.timberassembly method)": [[10, "compas_timber.assembly.TimberAssembly.add_beam"]], "add_connection() (compas_timber.assembly.timberassembly method)": [[11, "compas_timber.assembly.TimberAssembly.add_connection"]], "add_joint() (compas_timber.assembly.timberassembly method)": [[12, "compas_timber.assembly.TimberAssembly.add_joint"]], "add_part() (compas_timber.assembly.timberassembly method)": [[13, "compas_timber.assembly.TimberAssembly.add_part"]], "are_parts_joined() (compas_timber.assembly.timberassembly method)": [[14, "compas_timber.assembly.TimberAssembly.are_parts_joined"]], "connections() (compas_timber.assembly.timberassembly method)": [[15, "compas_timber.assembly.TimberAssembly.connections"]], "contains() (compas_timber.assembly.timberassembly method)": [[16, "compas_timber.assembly.TimberAssembly.contains"]], "copy() (compas_timber.assembly.timberassembly method)": [[17, "compas_timber.assembly.TimberAssembly.copy"]], "delete_connection() (compas_timber.assembly.timberassembly method)": [[18, "compas_timber.assembly.TimberAssembly.delete_connection"]], "delete_part() (compas_timber.assembly.timberassembly method)": [[19, "compas_timber.assembly.TimberAssembly.delete_part"]], "find() (compas_timber.assembly.timberassembly method)": [[20, "compas_timber.assembly.TimberAssembly.find"]], "find_by_key() (compas_timber.assembly.timberassembly method)": [[21, "compas_timber.assembly.TimberAssembly.find_by_key"]], "from_data() (compas_timber.assembly.timberassembly class method)": [[22, "compas_timber.assembly.TimberAssembly.from_data"]], "from_json() (compas_timber.assembly.timberassembly class method)": [[23, "compas_timber.assembly.TimberAssembly.from_json"]], "parts() (compas_timber.assembly.timberassembly method)": [[24, "compas_timber.assembly.TimberAssembly.parts"]], "remove_joint() (compas_timber.assembly.timberassembly method)": [[25, "compas_timber.assembly.TimberAssembly.remove_joint"]], "sha256() (compas_timber.assembly.timberassembly method)": [[26, "compas_timber.assembly.TimberAssembly.sha256"]], "to_data() (compas_timber.assembly.timberassembly method)": [[27, "compas_timber.assembly.TimberAssembly.to_data"]], "to_json() (compas_timber.assembly.timberassembly method)": [[28, "compas_timber.assembly.TimberAssembly.to_json"]], "validate_data() (compas_timber.assembly.timberassembly class method)": [[29, "compas_timber.assembly.TimberAssembly.validate_data"]], "beamjoinningerror": [[30, "compas_timber.connections.BeamJoinningError"]], "connectionsolver (class in compas_timber.connections)": [[31, "compas_timber.connections.ConnectionSolver"]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[32, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs"]], "find_topology() (compas_timber.connections.connectionsolver method)": [[33, "compas_timber.connections.ConnectionSolver.find_topology"]], "joint (class in compas_timber.connections)": [[34, "compas_timber.connections.Joint"]], "tostring() (compas_timber.connections.joint method)": [[35, "compas_timber.connections.Joint.ToString"]], "add_features() (compas_timber.connections.joint method)": [[36, "compas_timber.connections.Joint.add_features"]], "copy() (compas_timber.connections.joint method)": [[37, "compas_timber.connections.Joint.copy"]], "create() (compas_timber.connections.joint class method)": [[38, "compas_timber.connections.Joint.create"]], "from_data() (compas_timber.connections.joint class method)": [[39, "compas_timber.connections.Joint.from_data"]], "from_json() (compas_timber.connections.joint class method)": [[40, "compas_timber.connections.Joint.from_json"]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[41, "compas_timber.connections.Joint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.joint method)": [[42, "compas_timber.connections.Joint.sha256"]], "to_data() (compas_timber.connections.joint method)": [[43, "compas_timber.connections.Joint.to_data"]], "to_json() (compas_timber.connections.joint method)": [[44, "compas_timber.connections.Joint.to_json"]], "validate_data() (compas_timber.connections.joint class method)": [[45, "compas_timber.connections.Joint.validate_data"]], "jointtopology (class in compas_timber.connections)": [[46, "compas_timber.connections.JointTopology"]], "get_name() (compas_timber.connections.jointtopology class method)": [[47, "compas_timber.connections.JointTopology.get_name"]], "lbuttjoint (class in compas_timber.connections)": [[48, "compas_timber.connections.LButtJoint"]], "tostring() (compas_timber.connections.lbuttjoint method)": [[49, "compas_timber.connections.LButtJoint.ToString"]], "add_features() (compas_timber.connections.lbuttjoint method)": [[50, "compas_timber.connections.LButtJoint.add_features"]], "copy() (compas_timber.connections.lbuttjoint method)": [[51, "compas_timber.connections.LButtJoint.copy"]], "create() (compas_timber.connections.lbuttjoint class method)": [[52, "compas_timber.connections.LButtJoint.create"]], "from_data() (compas_timber.connections.lbuttjoint class method)": [[53, "compas_timber.connections.LButtJoint.from_data"]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[54, "compas_timber.connections.LButtJoint.from_json"]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[55, "compas_timber.connections.LButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lbuttjoint method)": [[56, "compas_timber.connections.LButtJoint.sha256"]], "to_data() (compas_timber.connections.lbuttjoint method)": [[57, "compas_timber.connections.LButtJoint.to_data"]], "to_json() (compas_timber.connections.lbuttjoint method)": [[58, "compas_timber.connections.LButtJoint.to_json"]], "validate_data() (compas_timber.connections.lbuttjoint class method)": [[59, "compas_timber.connections.LButtJoint.validate_data"]], "lmiterjoint (class in compas_timber.connections)": [[60, "compas_timber.connections.LMiterJoint"]], "tostring() (compas_timber.connections.lmiterjoint method)": [[61, "compas_timber.connections.LMiterJoint.ToString"]], "add_features() (compas_timber.connections.lmiterjoint method)": [[62, "compas_timber.connections.LMiterJoint.add_features"]], "copy() (compas_timber.connections.lmiterjoint method)": [[63, "compas_timber.connections.LMiterJoint.copy"]], "create() (compas_timber.connections.lmiterjoint class method)": [[64, "compas_timber.connections.LMiterJoint.create"]], "from_data() (compas_timber.connections.lmiterjoint class method)": [[65, "compas_timber.connections.LMiterJoint.from_data"]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[66, "compas_timber.connections.LMiterJoint.from_json"]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[67, "compas_timber.connections.LMiterJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lmiterjoint method)": [[68, "compas_timber.connections.LMiterJoint.sha256"]], "to_data() (compas_timber.connections.lmiterjoint method)": [[69, "compas_timber.connections.LMiterJoint.to_data"]], "to_json() (compas_timber.connections.lmiterjoint method)": [[70, "compas_timber.connections.LMiterJoint.to_json"]], "validate_data() (compas_timber.connections.lmiterjoint class method)": [[71, "compas_timber.connections.LMiterJoint.validate_data"]], "tbuttjoint (class in compas_timber.connections)": [[72, "compas_timber.connections.TButtJoint"]], "tostring() (compas_timber.connections.tbuttjoint method)": [[73, "compas_timber.connections.TButtJoint.ToString"]], "add_features() (compas_timber.connections.tbuttjoint method)": [[74, "compas_timber.connections.TButtJoint.add_features"]], "copy() (compas_timber.connections.tbuttjoint method)": [[75, "compas_timber.connections.TButtJoint.copy"]], "create() (compas_timber.connections.tbuttjoint class method)": [[76, "compas_timber.connections.TButtJoint.create"]], "from_data() (compas_timber.connections.tbuttjoint class method)": [[77, "compas_timber.connections.TButtJoint.from_data"]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[78, "compas_timber.connections.TButtJoint.from_json"]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[79, "compas_timber.connections.TButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.tbuttjoint method)": [[80, "compas_timber.connections.TButtJoint.sha256"]], "to_data() (compas_timber.connections.tbuttjoint method)": [[81, "compas_timber.connections.TButtJoint.to_data"]], "to_json() (compas_timber.connections.tbuttjoint method)": [[82, "compas_timber.connections.TButtJoint.to_json"]], "validate_data() (compas_timber.connections.tbuttjoint class method)": [[83, "compas_timber.connections.TButtJoint.validate_data"]], "xhalflapjoint (class in compas_timber.connections)": [[84, "compas_timber.connections.XHalfLapJoint"]], "tostring() (compas_timber.connections.xhalflapjoint method)": [[85, "compas_timber.connections.XHalfLapJoint.ToString"]], "add_features() (compas_timber.connections.xhalflapjoint method)": [[86, "compas_timber.connections.XHalfLapJoint.add_features"]], "copy() (compas_timber.connections.xhalflapjoint method)": [[87, "compas_timber.connections.XHalfLapJoint.copy"]], "create() (compas_timber.connections.xhalflapjoint class method)": [[88, "compas_timber.connections.XHalfLapJoint.create"]], "from_data() (compas_timber.connections.xhalflapjoint class method)": [[89, "compas_timber.connections.XHalfLapJoint.from_data"]], "from_json() (compas_timber.connections.xhalflapjoint class method)": [[90, "compas_timber.connections.XHalfLapJoint.from_json"]], "restore_beams_from_keys() (compas_timber.connections.xhalflapjoint method)": [[91, "compas_timber.connections.XHalfLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.xhalflapjoint method)": [[92, "compas_timber.connections.XHalfLapJoint.sha256"]], "to_data() (compas_timber.connections.xhalflapjoint method)": [[93, "compas_timber.connections.XHalfLapJoint.to_data"]], "to_json() (compas_timber.connections.xhalflapjoint method)": [[94, "compas_timber.connections.XHalfLapJoint.to_json"]], "validate_data() (compas_timber.connections.xhalflapjoint class method)": [[95, "compas_timber.connections.XHalfLapJoint.validate_data"]], "find_neighboring_beams() (in module compas_timber.connections)": [[96, "compas_timber.connections.find_neighboring_beams"]], "brepgeometryconsumer (class in compas_timber.consumers)": [[97, "compas_timber.consumers.BrepGeometryConsumer"]], "btlx (class in compas_timber.fabrication)": [[98, "compas_timber.fabrication.BTLx"]], "btlx_string() (compas_timber.fabrication.btlx method)": [[99, "compas_timber.fabrication.BTLx.btlx_string"]], "process_assembly() (compas_timber.fabrication.btlx method)": [[100, "compas_timber.fabrication.BTLx.process_assembly"]], "register_joint() (compas_timber.fabrication.btlx class method)": [[101, "compas_timber.fabrication.BTLx.register_joint"]], "btlxfrenchridgelap (class in compas_timber.fabrication)": [[102, "compas_timber.fabrication.BTLxFrenchRidgeLap"]], "create_process() (compas_timber.fabrication.btlxfrenchridgelap class method)": [[103, "compas_timber.fabrication.BTLxFrenchRidgeLap.create_process"]], "get_params() (compas_timber.fabrication.btlxfrenchridgelap method)": [[104, "compas_timber.fabrication.BTLxFrenchRidgeLap.get_params"]], "process_joints() (compas_timber.fabrication.btlxfrenchridgelap method)": [[105, "compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints"]], "btlxjackcut (class in compas_timber.fabrication)": [[106, "compas_timber.fabrication.BTLxJackCut"]], "create_process() (compas_timber.fabrication.btlxjackcut class method)": [[107, "compas_timber.fabrication.BTLxJackCut.create_process"]], "generate_process() (compas_timber.fabrication.btlxjackcut method)": [[108, "compas_timber.fabrication.BTLxJackCut.generate_process"]], "btlxprocess (class in compas_timber.fabrication)": [[109, "compas_timber.fabrication.BTLxProcess"]], "frenchridgefactory (class in compas_timber.fabrication)": [[110, "compas_timber.fabrication.FrenchRidgeFactory"]], "apply_processings() (compas_timber.fabrication.frenchridgefactory class method)": [[111, "compas_timber.fabrication.FrenchRidgeFactory.apply_processings"]], "lbuttfactory (class in compas_timber.fabrication)": [[112, "compas_timber.fabrication.LButtFactory"]], "apply_processings() (compas_timber.fabrication.lbuttfactory class method)": [[113, "compas_timber.fabrication.LButtFactory.apply_processings"]], "lmiterfactory (class in compas_timber.fabrication)": [[114, "compas_timber.fabrication.LMiterFactory"]], "apply_processings() (compas_timber.fabrication.lmiterfactory class method)": [[115, "compas_timber.fabrication.LMiterFactory.apply_processings"]], "tbuttfactory (class in compas_timber.fabrication)": [[116, "compas_timber.fabrication.TButtFactory"]], "apply_processings() (compas_timber.fabrication.tbuttfactory class method)": [[117, "compas_timber.fabrication.TButtFactory.apply_processings"]], "beam (class in compas_timber.parts)": [[118, "compas_timber.parts.Beam"]], "tostring() (compas_timber.parts.beam method)": [[119, "compas_timber.parts.Beam.ToString"]], "add_blank_extension() (compas_timber.parts.beam method)": [[120, "compas_timber.parts.Beam.add_blank_extension"]], "add_feature() (compas_timber.parts.beam method)": [[121, "compas_timber.parts.Beam.add_feature"]], "add_features() (compas_timber.parts.beam method)": [[122, "compas_timber.parts.Beam.add_features"]], "align_z() (compas_timber.parts.beam method)": [[123, "compas_timber.parts.Beam.align_z"]], "clear_features() (compas_timber.parts.beam method)": [[124, "compas_timber.parts.Beam.clear_features"]], "copy() (compas_timber.parts.beam method)": [[125, "compas_timber.parts.Beam.copy"]], "endpoint_closest_to_point() (compas_timber.parts.beam method)": [[126, "compas_timber.parts.Beam.endpoint_closest_to_point"]], "extension_to_plane() (compas_timber.parts.beam method)": [[127, "compas_timber.parts.Beam.extension_to_plane"]], "from_centerline() (compas_timber.parts.beam class method)": [[128, "compas_timber.parts.Beam.from_centerline"]], "from_data() (compas_timber.parts.beam class method)": [[129, "compas_timber.parts.Beam.from_data"]], "from_endpoints() (compas_timber.parts.beam class method)": [[130, "compas_timber.parts.Beam.from_endpoints"]], "from_json() (compas_timber.parts.beam class method)": [[131, "compas_timber.parts.Beam.from_json"]], "get_geometry() (compas_timber.parts.beam method)": [[132, "compas_timber.parts.Beam.get_geometry"]], "remove_blank_extension() (compas_timber.parts.beam method)": [[133, "compas_timber.parts.Beam.remove_blank_extension"]], "remove_features() (compas_timber.parts.beam method)": [[134, "compas_timber.parts.Beam.remove_features"]], "sha256() (compas_timber.parts.beam method)": [[135, "compas_timber.parts.Beam.sha256"]], "to_data() (compas_timber.parts.beam method)": [[136, "compas_timber.parts.Beam.to_data"]], "to_json() (compas_timber.parts.beam method)": [[137, "compas_timber.parts.Beam.to_json"]], "validate_data() (compas_timber.parts.beam class method)": [[138, "compas_timber.parts.Beam.validate_data"]], "actor (class in compas_timber.planning)": [[139, "compas_timber.planning.Actor"]], "get_name() (compas_timber.planning.actor class method)": [[140, "compas_timber.planning.Actor.get_name"]], "buildingplan (class in compas_timber.planning)": [[141, "compas_timber.planning.BuildingPlan"]], "tostring() (compas_timber.planning.buildingplan method)": [[142, "compas_timber.planning.BuildingPlan.ToString"]], "add_step() (compas_timber.planning.buildingplan method)": [[143, "compas_timber.planning.BuildingPlan.add_step"]], "copy() (compas_timber.planning.buildingplan method)": [[144, "compas_timber.planning.BuildingPlan.copy"]], "from_data() (compas_timber.planning.buildingplan class method)": [[145, "compas_timber.planning.BuildingPlan.from_data"]], "from_json() (compas_timber.planning.buildingplan class method)": [[146, "compas_timber.planning.BuildingPlan.from_json"]], "sha256() (compas_timber.planning.buildingplan method)": [[147, "compas_timber.planning.BuildingPlan.sha256"]], "to_data() (compas_timber.planning.buildingplan method)": [[148, "compas_timber.planning.BuildingPlan.to_data"]], "to_json() (compas_timber.planning.buildingplan method)": [[149, "compas_timber.planning.BuildingPlan.to_json"]], "validate_data() (compas_timber.planning.buildingplan class method)": [[150, "compas_timber.planning.BuildingPlan.validate_data"]], "simplesequencegenerator (class in compas_timber.planning)": [[151, "compas_timber.planning.SimpleSequenceGenerator"]], "step (class in compas_timber.planning)": [[152, "compas_timber.planning.Step"]], "tostring() (compas_timber.planning.step method)": [[153, "compas_timber.planning.Step.ToString"]], "copy() (compas_timber.planning.step method)": [[154, "compas_timber.planning.Step.copy"]], "from_data() (compas_timber.planning.step class method)": [[155, "compas_timber.planning.Step.from_data"]], "from_json() (compas_timber.planning.step class method)": [[156, "compas_timber.planning.Step.from_json"]], "sha256() (compas_timber.planning.step method)": [[157, "compas_timber.planning.Step.sha256"]], "to_data() (compas_timber.planning.step method)": [[158, "compas_timber.planning.Step.to_data"]], "to_json() (compas_timber.planning.step method)": [[159, "compas_timber.planning.Step.to_json"]], "transform() (compas_timber.planning.step method)": [[160, "compas_timber.planning.Step.transform"]], "validate_data() (compas_timber.planning.step class method)": [[161, "compas_timber.planning.Step.validate_data"]], "find_neighboring_beams() (in module compas_timber.rhino)": [[162, "compas_timber.rhino.find_neighboring_beams"]]}})