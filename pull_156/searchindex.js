Search.setIndex({"docnames": ["api", "api/compas_timber.assembly", "api/compas_timber.connections", "api/compas_timber.consumers", "api/compas_timber.fabrication", "api/compas_timber.parts", "api/compas_timber.planning", "api/compas_timber.rhino", "api/generated/compas_timber.assembly.TimberAssembly", "api/generated/compas_timber.assembly.TimberAssembly.ToString", "api/generated/compas_timber.assembly.TimberAssembly.add_beam", "api/generated/compas_timber.assembly.TimberAssembly.add_connection", "api/generated/compas_timber.assembly.TimberAssembly.add_joint", "api/generated/compas_timber.assembly.TimberAssembly.add_part", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined", "api/generated/compas_timber.assembly.TimberAssembly.connections", "api/generated/compas_timber.assembly.TimberAssembly.contains", "api/generated/compas_timber.assembly.TimberAssembly.copy", "api/generated/compas_timber.assembly.TimberAssembly.delete_connection", "api/generated/compas_timber.assembly.TimberAssembly.delete_part", "api/generated/compas_timber.assembly.TimberAssembly.find", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key", "api/generated/compas_timber.assembly.TimberAssembly.from_data", "api/generated/compas_timber.assembly.TimberAssembly.from_json", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.parts", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint", "api/generated/compas_timber.assembly.TimberAssembly.sha256", "api/generated/compas_timber.assembly.TimberAssembly.to_data", "api/generated/compas_timber.assembly.TimberAssembly.to_json", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring", "api/generated/compas_timber.assembly.TimberAssembly.transform", "api/generated/compas_timber.assembly.TimberAssembly.transform_numpy", "api/generated/compas_timber.assembly.TimberAssembly.transformed", "api/generated/compas_timber.assembly.TimberAssembly.transformed_numpy", "api/generated/compas_timber.assembly.TimberAssembly.validate_data", "api/generated/compas_timber.connections.BeamJoinningError", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.from_data", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.from_jsonstring", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_data", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.to_jsonstring", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.from_data", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.to_data", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.from_data", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_data", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.from_data", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.to_data", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.XHalfLapJoint", "api/generated/compas_timber.connections.XHalfLapJoint.ToString", "api/generated/compas_timber.connections.XHalfLapJoint.add_features", "api/generated/compas_timber.connections.XHalfLapJoint.copy", "api/generated/compas_timber.connections.XHalfLapJoint.create", "api/generated/compas_timber.connections.XHalfLapJoint.from_data", "api/generated/compas_timber.connections.XHalfLapJoint.from_json", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.XHalfLapJoint.sha256", "api/generated/compas_timber.connections.XHalfLapJoint.to_data", "api/generated/compas_timber.connections.XHalfLapJoint.to_json", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data", "api/generated/compas_timber.connections.find_neighboring_beams", "api/generated/compas_timber.consumers.BrepGeometryConsumer", "api/generated/compas_timber.fabrication.BTLx", "api/generated/compas_timber.fabrication.BTLx.btlx_string", "api/generated/compas_timber.fabrication.BTLx.process_assembly", "api/generated/compas_timber.fabrication.BTLx.register_joint", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints", "api/generated/compas_timber.fabrication.BTLxJackCut", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process", "api/generated/compas_timber.fabrication.BTLxProcess", "api/generated/compas_timber.fabrication.FrenchRidgeFactory", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings", "api/generated/compas_timber.fabrication.LButtFactory", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings", "api/generated/compas_timber.fabrication.LMiterFactory", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings", "api/generated/compas_timber.fabrication.TButtFactory", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings", "api/generated/compas_timber.parts.Beam", "api/generated/compas_timber.parts.Beam.ToString", "api/generated/compas_timber.parts.Beam.add_blank_extension", "api/generated/compas_timber.parts.Beam.add_feature", "api/generated/compas_timber.parts.Beam.add_features", "api/generated/compas_timber.parts.Beam.align_z", "api/generated/compas_timber.parts.Beam.clear_features", "api/generated/compas_timber.parts.Beam.copy", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point", "api/generated/compas_timber.parts.Beam.extension_to_plane", "api/generated/compas_timber.parts.Beam.from_centerline", "api/generated/compas_timber.parts.Beam.from_data", "api/generated/compas_timber.parts.Beam.from_endpoints", "api/generated/compas_timber.parts.Beam.from_json", "api/generated/compas_timber.parts.Beam.from_jsonstring", "api/generated/compas_timber.parts.Beam.get_geometry", "api/generated/compas_timber.parts.Beam.remove_blank_extension", "api/generated/compas_timber.parts.Beam.remove_features", "api/generated/compas_timber.parts.Beam.sha256", "api/generated/compas_timber.parts.Beam.to_data", "api/generated/compas_timber.parts.Beam.to_json", "api/generated/compas_timber.parts.Beam.to_jsonstring", "api/generated/compas_timber.parts.Beam.transform", "api/generated/compas_timber.parts.Beam.transform_numpy", "api/generated/compas_timber.parts.Beam.transformed", "api/generated/compas_timber.parts.Beam.transformed_numpy", "api/generated/compas_timber.parts.Beam.validate_data", "api/generated/compas_timber.planning.Actor", "api/generated/compas_timber.planning.Actor.get_name", "api/generated/compas_timber.planning.BuildingPlan", "api/generated/compas_timber.planning.BuildingPlan.ToString", "api/generated/compas_timber.planning.BuildingPlan.add_step", "api/generated/compas_timber.planning.BuildingPlan.copy", "api/generated/compas_timber.planning.BuildingPlan.from_data", "api/generated/compas_timber.planning.BuildingPlan.from_json", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.sha256", "api/generated/compas_timber.planning.BuildingPlan.to_data", "api/generated/compas_timber.planning.BuildingPlan.to_json", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.validate_data", "api/generated/compas_timber.planning.SimpleSequenceGenerator", "api/generated/compas_timber.planning.Step", "api/generated/compas_timber.planning.Step.ToString", "api/generated/compas_timber.planning.Step.copy", "api/generated/compas_timber.planning.Step.from_data", "api/generated/compas_timber.planning.Step.from_json", "api/generated/compas_timber.planning.Step.from_jsonstring", "api/generated/compas_timber.planning.Step.sha256", "api/generated/compas_timber.planning.Step.to_data", "api/generated/compas_timber.planning.Step.to_json", "api/generated/compas_timber.planning.Step.to_jsonstring", "api/generated/compas_timber.planning.Step.transform", "api/generated/compas_timber.planning.Step.validate_data", "api/generated/compas_timber.rhino.find_neighboring_beams", "citing", "examples", "examples/create_joint", "index", "installation", "installation/installation_dev", "installation/installation_manual", "installation/installation_quick", "license", "tutorials", "tutorials/BTLx_contribution_guide", "tutorials/grasshopper/assembly", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beam", "tutorials/grasshopper/examples", "tutorials/grasshopper/features", "tutorials/grasshopper/joints", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "filenames": ["api.rst", "api/compas_timber.assembly.rst", "api/compas_timber.connections.rst", "api/compas_timber.consumers.rst", "api/compas_timber.fabrication.rst", "api/compas_timber.parts.rst", "api/compas_timber.planning.rst", "api/compas_timber.rhino.rst", "api/generated/compas_timber.assembly.TimberAssembly.rst", "api/generated/compas_timber.assembly.TimberAssembly.ToString.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_beam.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.add_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.are_parts_joined.rst", "api/generated/compas_timber.assembly.TimberAssembly.connections.rst", "api/generated/compas_timber.assembly.TimberAssembly.contains.rst", "api/generated/compas_timber.assembly.TimberAssembly.copy.rst", "api/generated/compas_timber.assembly.TimberAssembly.delete_connection.rst", "api/generated/compas_timber.assembly.TimberAssembly.delete_part.rst", "api/generated/compas_timber.assembly.TimberAssembly.find.rst", "api/generated/compas_timber.assembly.TimberAssembly.find_by_key.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_data.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.from_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.parts.rst", "api/generated/compas_timber.assembly.TimberAssembly.remove_joint.rst", "api/generated/compas_timber.assembly.TimberAssembly.sha256.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_data.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_json.rst", "api/generated/compas_timber.assembly.TimberAssembly.to_jsonstring.rst", "api/generated/compas_timber.assembly.TimberAssembly.transform.rst", "api/generated/compas_timber.assembly.TimberAssembly.transform_numpy.rst", "api/generated/compas_timber.assembly.TimberAssembly.transformed.rst", "api/generated/compas_timber.assembly.TimberAssembly.transformed_numpy.rst", "api/generated/compas_timber.assembly.TimberAssembly.validate_data.rst", "api/generated/compas_timber.connections.BeamJoinningError.rst", "api/generated/compas_timber.connections.ConnectionSolver.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api/generated/compas_timber.connections.ConnectionSolver.find_topology.rst", "api/generated/compas_timber.connections.Joint.rst", "api/generated/compas_timber.connections.Joint.ToString.rst", "api/generated/compas_timber.connections.Joint.add_features.rst", "api/generated/compas_timber.connections.Joint.copy.rst", "api/generated/compas_timber.connections.Joint.create.rst", "api/generated/compas_timber.connections.Joint.from_data.rst", "api/generated/compas_timber.connections.Joint.from_json.rst", "api/generated/compas_timber.connections.Joint.from_jsonstring.rst", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.Joint.sha256.rst", "api/generated/compas_timber.connections.Joint.to_data.rst", "api/generated/compas_timber.connections.Joint.to_json.rst", "api/generated/compas_timber.connections.Joint.to_jsonstring.rst", "api/generated/compas_timber.connections.Joint.validate_data.rst", "api/generated/compas_timber.connections.JointTopology.rst", "api/generated/compas_timber.connections.JointTopology.get_name.rst", "api/generated/compas_timber.connections.LButtJoint.rst", "api/generated/compas_timber.connections.LButtJoint.ToString.rst", "api/generated/compas_timber.connections.LButtJoint.add_features.rst", "api/generated/compas_timber.connections.LButtJoint.copy.rst", "api/generated/compas_timber.connections.LButtJoint.create.rst", "api/generated/compas_timber.connections.LButtJoint.from_data.rst", "api/generated/compas_timber.connections.LButtJoint.from_json.rst", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LButtJoint.sha256.rst", "api/generated/compas_timber.connections.LButtJoint.to_data.rst", "api/generated/compas_timber.connections.LButtJoint.to_json.rst", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LButtJoint.validate_data.rst", "api/generated/compas_timber.connections.LMiterJoint.rst", "api/generated/compas_timber.connections.LMiterJoint.ToString.rst", "api/generated/compas_timber.connections.LMiterJoint.add_features.rst", "api/generated/compas_timber.connections.LMiterJoint.copy.rst", "api/generated/compas_timber.connections.LMiterJoint.create.rst", "api/generated/compas_timber.connections.LMiterJoint.from_data.rst", "api/generated/compas_timber.connections.LMiterJoint.from_json.rst", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.LMiterJoint.sha256.rst", "api/generated/compas_timber.connections.LMiterJoint.to_data.rst", "api/generated/compas_timber.connections.LMiterJoint.to_json.rst", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.LMiterJoint.validate_data.rst", "api/generated/compas_timber.connections.TButtJoint.rst", "api/generated/compas_timber.connections.TButtJoint.ToString.rst", "api/generated/compas_timber.connections.TButtJoint.add_features.rst", "api/generated/compas_timber.connections.TButtJoint.copy.rst", "api/generated/compas_timber.connections.TButtJoint.create.rst", "api/generated/compas_timber.connections.TButtJoint.from_data.rst", "api/generated/compas_timber.connections.TButtJoint.from_json.rst", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.TButtJoint.sha256.rst", "api/generated/compas_timber.connections.TButtJoint.to_data.rst", "api/generated/compas_timber.connections.TButtJoint.to_json.rst", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.TButtJoint.validate_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.rst", "api/generated/compas_timber.connections.XHalfLapJoint.ToString.rst", "api/generated/compas_timber.connections.XHalfLapJoint.add_features.rst", "api/generated/compas_timber.connections.XHalfLapJoint.copy.rst", "api/generated/compas_timber.connections.XHalfLapJoint.create.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys.rst", "api/generated/compas_timber.connections.XHalfLapJoint.sha256.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_data.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_json.rst", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring.rst", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data.rst", "api/generated/compas_timber.connections.find_neighboring_beams.rst", "api/generated/compas_timber.consumers.BrepGeometryConsumer.rst", "api/generated/compas_timber.fabrication.BTLx.rst", "api/generated/compas_timber.fabrication.BTLx.btlx_string.rst", "api/generated/compas_timber.fabrication.BTLx.process_assembly.rst", "api/generated/compas_timber.fabrication.BTLx.register_joint.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.create_process.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.get_params.rst", "api/generated/compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.create_process.rst", "api/generated/compas_timber.fabrication.BTLxJackCut.generate_process.rst", "api/generated/compas_timber.fabrication.BTLxProcess.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.rst", "api/generated/compas_timber.fabrication.FrenchRidgeFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LButtFactory.rst", "api/generated/compas_timber.fabrication.LButtFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.LMiterFactory.rst", "api/generated/compas_timber.fabrication.LMiterFactory.apply_processings.rst", "api/generated/compas_timber.fabrication.TButtFactory.rst", "api/generated/compas_timber.fabrication.TButtFactory.apply_processings.rst", "api/generated/compas_timber.parts.Beam.rst", "api/generated/compas_timber.parts.Beam.ToString.rst", "api/generated/compas_timber.parts.Beam.add_blank_extension.rst", "api/generated/compas_timber.parts.Beam.add_feature.rst", "api/generated/compas_timber.parts.Beam.add_features.rst", "api/generated/compas_timber.parts.Beam.align_z.rst", "api/generated/compas_timber.parts.Beam.clear_features.rst", "api/generated/compas_timber.parts.Beam.copy.rst", "api/generated/compas_timber.parts.Beam.endpoint_closest_to_point.rst", "api/generated/compas_timber.parts.Beam.extension_to_plane.rst", "api/generated/compas_timber.parts.Beam.from_centerline.rst", "api/generated/compas_timber.parts.Beam.from_data.rst", "api/generated/compas_timber.parts.Beam.from_endpoints.rst", "api/generated/compas_timber.parts.Beam.from_json.rst", "api/generated/compas_timber.parts.Beam.from_jsonstring.rst", "api/generated/compas_timber.parts.Beam.get_geometry.rst", "api/generated/compas_timber.parts.Beam.remove_blank_extension.rst", "api/generated/compas_timber.parts.Beam.remove_features.rst", "api/generated/compas_timber.parts.Beam.sha256.rst", "api/generated/compas_timber.parts.Beam.to_data.rst", "api/generated/compas_timber.parts.Beam.to_json.rst", "api/generated/compas_timber.parts.Beam.to_jsonstring.rst", "api/generated/compas_timber.parts.Beam.transform.rst", "api/generated/compas_timber.parts.Beam.transform_numpy.rst", "api/generated/compas_timber.parts.Beam.transformed.rst", "api/generated/compas_timber.parts.Beam.transformed_numpy.rst", "api/generated/compas_timber.parts.Beam.validate_data.rst", "api/generated/compas_timber.planning.Actor.rst", "api/generated/compas_timber.planning.Actor.get_name.rst", "api/generated/compas_timber.planning.BuildingPlan.rst", "api/generated/compas_timber.planning.BuildingPlan.ToString.rst", "api/generated/compas_timber.planning.BuildingPlan.add_step.rst", "api/generated/compas_timber.planning.BuildingPlan.copy.rst", "api/generated/compas_timber.planning.BuildingPlan.from_data.rst", "api/generated/compas_timber.planning.BuildingPlan.from_json.rst", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.sha256.rst", "api/generated/compas_timber.planning.BuildingPlan.to_data.rst", "api/generated/compas_timber.planning.BuildingPlan.to_json.rst", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring.rst", "api/generated/compas_timber.planning.BuildingPlan.validate_data.rst", "api/generated/compas_timber.planning.SimpleSequenceGenerator.rst", "api/generated/compas_timber.planning.Step.rst", "api/generated/compas_timber.planning.Step.ToString.rst", "api/generated/compas_timber.planning.Step.copy.rst", "api/generated/compas_timber.planning.Step.from_data.rst", "api/generated/compas_timber.planning.Step.from_json.rst", "api/generated/compas_timber.planning.Step.from_jsonstring.rst", "api/generated/compas_timber.planning.Step.sha256.rst", "api/generated/compas_timber.planning.Step.to_data.rst", "api/generated/compas_timber.planning.Step.to_json.rst", "api/generated/compas_timber.planning.Step.to_jsonstring.rst", "api/generated/compas_timber.planning.Step.transform.rst", "api/generated/compas_timber.planning.Step.validate_data.rst", "api/generated/compas_timber.rhino.find_neighboring_beams.rst", "citing.rst", "examples.rst", "examples/create_joint.rst", "index.rst", "installation.rst", "installation/installation_dev.rst", "installation/installation_manual.rst", "installation/installation_quick.rst", "license.rst", "tutorials.rst", "tutorials/BTLx_contribution_guide.rst", "tutorials/grasshopper/assembly.rst", "tutorials/grasshopper/attributes.rst", "tutorials/grasshopper/beam.rst", "tutorials/grasshopper/examples.rst", "tutorials/grasshopper/features.rst", "tutorials/grasshopper/joints.rst", "tutorials/grasshopper/show.rst", "tutorials/grasshopper/utils.rst", "tutorials/grasshopper/workflow.rst"], "titles": ["API Reference", "compas_timber.assembly", "compas_timber.connections", "compas_timber.consumers", "compas_timber.fabrication", "compas_timber.parts", "compas_timber.planning", "rhino", "TimberAssembly", "TimberAssembly.ToString", "TimberAssembly.add_beam", "TimberAssembly.add_connection", "TimberAssembly.add_joint", "TimberAssembly.add_part", "TimberAssembly.are_parts_joined", "TimberAssembly.connections", "TimberAssembly.contains", "TimberAssembly.copy", "TimberAssembly.delete_connection", "TimberAssembly.delete_part", "TimberAssembly.find", "TimberAssembly.find_by_key", "TimberAssembly.from_data", "TimberAssembly.from_json", "TimberAssembly.from_jsonstring", "TimberAssembly.parts", "TimberAssembly.remove_joint", "TimberAssembly.sha256", "TimberAssembly.to_data", "TimberAssembly.to_json", "TimberAssembly.to_jsonstring", "TimberAssembly.transform", "TimberAssembly.transform_numpy", "TimberAssembly.transformed", "TimberAssembly.transformed_numpy", "TimberAssembly.validate_data", "BeamJoinningError", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "Joint", "Joint.ToString", "Joint.add_features", "Joint.copy", "Joint.create", "Joint.from_data", "Joint.from_json", "Joint.from_jsonstring", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_data", "Joint.to_json", "Joint.to_jsonstring", "Joint.validate_data", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_features", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.from_data", "LButtJoint.from_json", "LButtJoint.from_jsonstring", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.to_data", "LButtJoint.to_json", "LButtJoint.to_jsonstring", "LButtJoint.validate_data", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_features", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.from_data", "LMiterJoint.from_json", "LMiterJoint.from_jsonstring", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_data", "LMiterJoint.to_json", "LMiterJoint.to_jsonstring", "LMiterJoint.validate_data", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_features", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.from_data", "TButtJoint.from_json", "TButtJoint.from_jsonstring", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.to_data", "TButtJoint.to_json", "TButtJoint.to_jsonstring", "TButtJoint.validate_data", "XHalfLapJoint", "XHalfLapJoint.ToString", "XHalfLapJoint.add_features", "XHalfLapJoint.copy", "XHalfLapJoint.create", "XHalfLapJoint.from_data", "XHalfLapJoint.from_json", "XHalfLapJoint.from_jsonstring", "XHalfLapJoint.restore_beams_from_keys", "XHalfLapJoint.sha256", "XHalfLapJoint.to_data", "XHalfLapJoint.to_json", "XHalfLapJoint.to_jsonstring", "XHalfLapJoint.validate_data", "find_neighboring_beams", "BrepGeometryConsumer", "BTLx", "BTLx.btlx_string", "BTLx.process_assembly", "BTLx.register_joint", "BTLxFrenchRidgeLap", "BTLxFrenchRidgeLap.create_process", "BTLxFrenchRidgeLap.get_params", "BTLxFrenchRidgeLap.process_joints", "BTLxJackCut", "BTLxJackCut.create_process", "BTLxJackCut.generate_process", "BTLxProcess", "FrenchRidgeFactory", "FrenchRidgeFactory.apply_processings", "LButtFactory", "LButtFactory.apply_processings", "LMiterFactory", "LMiterFactory.apply_processings", "TButtFactory", "TButtFactory.apply_processings", "Beam", "Beam.ToString", "Beam.add_blank_extension", "Beam.add_feature", "Beam.add_features", "Beam.align_z", "Beam.clear_features", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_data", "Beam.from_endpoints", "Beam.from_json", "Beam.from_jsonstring", "Beam.get_geometry", "Beam.remove_blank_extension", "Beam.remove_features", "Beam.sha256", "Beam.to_data", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transform_numpy", "Beam.transformed", "Beam.transformed_numpy", "Beam.validate_data", "Actor", "Actor.get_name", "BuildingPlan", "BuildingPlan.ToString", "BuildingPlan.add_step", "BuildingPlan.copy", "BuildingPlan.from_data", "BuildingPlan.from_json", "BuildingPlan.from_jsonstring", "BuildingPlan.sha256", "BuildingPlan.to_data", "BuildingPlan.to_json", "BuildingPlan.to_jsonstring", "BuildingPlan.validate_data", "SimpleSequenceGenerator", "Step", "Step.ToString", "Step.copy", "Step.from_data", "Step.from_json", "Step.from_jsonstring", "Step.sha256", "Step.to_data", "Step.to_json", "Step.to_jsonstring", "Step.transform", "Step.validate_data", "find_neighboring_beams", "Citing", "Examples", "Create Joint", "COMPAS TIMBER", "Installation", "Manual installation for developers", "Manual installation", "Quick installation", "License", "Grasshopper plugin", "BTLx Contribution Guide", "Assembly", "Attributes", "Beam", "Examples", "Features", "Joints", "Show", "Utils", "Workflow"], "terms": {"compas_timb": [0, 8, 36, 37, 40, 44, 48, 54, 56, 60, 70, 74, 84, 88, 98, 102, 112, 113, 114, 117, 118, 122, 125, 126, 128, 130, 132, 134, 161, 163, 175, 176, 188, 189, 192, 195, 196], "assembli": [0, 8, 10, 11, 12, 13, 16, 19, 20, 21, 25, 26, 44, 48, 56, 60, 64, 70, 74, 78, 84, 88, 92, 102, 106, 114, 116, 137, 161, 175, 191, 192, 198, 205, 206, 208], "part": [0, 8, 11, 12, 13, 14, 15, 18, 19, 20, 21, 48, 114, 116, 118, 119, 122, 123, 127, 129, 131, 133, 134, 137, 149, 188, 192, 199, 202, 204, 206], "connect": [0, 9, 11, 18, 36, 37, 40, 41, 44, 48, 54, 56, 57, 60, 70, 71, 74, 84, 85, 88, 98, 99, 102, 112, 127, 129, 131, 133, 135, 164, 177, 192, 197, 200, 205], "consum": [0, 113, 192], "fabric": [0, 114, 117, 118, 121, 122, 125, 126, 128, 130, 132, 189, 192], "plan": [0, 161, 163, 175, 176, 192], "rhino": [0, 9, 41, 57, 71, 85, 99, 112, 135, 164, 177, 188, 190, 192, 194, 196, 201, 202, 207], "The": [7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 40, 43, 44, 45, 46, 47, 50, 51, 52, 53, 56, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 94, 95, 96, 97, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 114, 117, 118, 122, 125, 127, 129, 131, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 166, 167, 168, 169, 171, 172, 173, 174, 178, 179, 180, 181, 183, 184, 185, 187, 188, 193, 197, 198, 201, 202, 204, 205, 207, 208], "modul": [7, 125, 192, 199], "contain": [7, 8, 22, 23, 24, 38, 44, 45, 46, 47, 60, 61, 62, 63, 74, 75, 76, 77, 88, 89, 90, 91, 102, 103, 104, 105, 112, 134, 145, 147, 148, 163, 167, 168, 169, 176, 179, 180, 181, 188], "function": [7, 112, 125, 198, 199], "type": [7, 9, 17, 22, 23, 24, 35, 39, 41, 43, 45, 46, 47, 53, 56, 57, 59, 61, 62, 63, 69, 70, 71, 73, 75, 76, 77, 83, 84, 85, 87, 89, 90, 91, 97, 99, 101, 103, 104, 105, 111, 117, 118, 121, 125, 135, 141, 145, 147, 148, 149, 160, 161, 164, 166, 167, 168, 169, 174, 176, 177, 178, 179, 180, 181, 187, 192, 199, 205, 206], "meant": 7, "us": [7, 9, 27, 31, 32, 33, 34, 35, 38, 39, 40, 41, 49, 53, 55, 56, 57, 65, 69, 70, 71, 79, 83, 84, 85, 93, 97, 99, 107, 111, 112, 114, 121, 135, 139, 143, 152, 156, 157, 158, 159, 160, 162, 164, 170, 174, 176, 177, 182, 187, 188, 189, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207], "context": [7, 13], "class": [8, 9, 12, 16, 37, 40, 41, 54, 56, 57, 70, 71, 84, 85, 98, 99, 113, 114, 117, 118, 122, 125, 126, 128, 130, 132, 134, 135, 161, 163, 164, 175, 176, 177, 192, 199], "sourc": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 196, 201, 202], "base": [8, 36, 37, 40, 54, 56, 70, 84, 98, 113, 114, 118, 122, 125, 126, 128, 130, 132, 134, 161, 163, 175, 176, 192, 200, 205, 208], "repres": [8, 56, 70, 84, 114, 118, 122, 134, 161, 202], "timber": [8, 114, 122, 134, 189, 194, 195, 196, 198, 202, 205, 208], "beam": [8, 10, 12, 36, 37, 38, 39, 40, 42, 44, 48, 56, 58, 60, 64, 70, 72, 74, 78, 84, 86, 88, 92, 100, 102, 106, 112, 118, 122, 188, 191, 192, 198, 200, 201, 204, 205, 206, 207, 208], "joint": [8, 12, 14, 26, 37, 54, 56, 58, 60, 70, 72, 74, 84, 86, 88, 98, 100, 102, 114, 117, 118, 119, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 150, 190, 192, 198, 199, 200, 202, 206, 208], "etc": [8, 114, 115, 134, 190, 192, 202], "attribut": [8, 11, 15, 40, 54, 56, 70, 84, 114, 118, 125, 134, 175, 176, 192, 198, 199, 202], "list": [8, 12, 14, 38, 40, 44, 56, 60, 70, 74, 84, 88, 102, 112, 114, 125, 134, 138, 142, 151, 176, 188, 199, 205, 208], "A": [8, 20, 38, 44, 56, 60, 70, 74, 84, 88, 102, 112, 114, 127, 129, 131, 133, 134, 144, 146, 189, 197, 202], "assign": [8, 13, 20, 205, 207], "thi": [8, 9, 10, 16, 17, 20, 22, 23, 24, 26, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 56, 57, 58, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 99, 100, 101, 102, 103, 104, 105, 111, 112, 118, 120, 121, 124, 125, 127, 129, 131, 133, 134, 135, 136, 137, 141, 143, 145, 147, 148, 150, 158, 159, 160, 164, 166, 167, 168, 169, 174, 176, 177, 178, 179, 180, 181, 187, 188, 190, 192, 194, 195, 196, 197, 199, 201, 202, 206, 208], "part_kei": 8, "int": [8, 10, 11, 12, 13, 15, 21, 55, 118, 136, 150, 162, 176], "kei": [8, 10, 13, 21, 48, 127, 129, 131, 133, 136, 150, 201], "includ": [8, 149, 196, 197, 199], "beam_kei": 8, "joint_kei": [8, 136, 150], "method": [8, 9, 37, 39, 40, 41, 44, 48, 54, 56, 57, 58, 60, 70, 71, 72, 74, 84, 85, 86, 88, 98, 99, 102, 114, 118, 120, 122, 124, 126, 128, 130, 132, 134, 135, 161, 163, 164, 176, 177, 192, 199], "inherit": [8, 40, 56, 70, 84, 98, 134, 163, 176, 192, 199], "convert": [9, 28, 29, 30, 41, 50, 51, 52, 57, 66, 67, 68, 71, 80, 81, 82, 85, 94, 95, 96, 99, 108, 109, 110, 135, 153, 154, 155, 164, 171, 172, 173, 177, 183, 184, 185], "instanc": [9, 12, 22, 23, 24, 41, 44, 45, 46, 47, 56, 57, 60, 61, 62, 63, 70, 71, 74, 75, 76, 77, 84, 85, 88, 89, 90, 91, 99, 102, 103, 104, 105, 125, 135, 145, 147, 148, 164, 167, 168, 169, 177, 179, 180, 181, 190, 199], "string": [9, 24, 30, 41, 47, 52, 55, 56, 57, 63, 68, 70, 71, 77, 82, 84, 85, 91, 96, 99, 105, 110, 114, 115, 135, 148, 155, 162, 164, 169, 173, 177, 181, 185, 201, 202], "exist": [9, 41, 57, 71, 85, 99, 135, 164, 177, 195, 199], "net": [9, 41, 57, 71, 85, 99, 135, 164, 177], "compat": [9, 41, 56, 57, 70, 71, 84, 85, 99, 112, 135, 164, 177], "when": [9, 20, 38, 41, 57, 58, 71, 72, 85, 86, 99, 135, 136, 164, 177, 201, 205], "ironpython": [9, 41, 57, 71, 85, 99, 135, 164, 177, 194], "implicit": [9, 41, 57, 71, 85, 99, 135, 164, 177], "convers": [9, 41, 57, 71, 85, 99, 135, 164, 177], "usual": [9, 41, 57, 71, 85, 99, 134, 135, 164, 177], "take": [9, 41, 57, 71, 85, 99, 135, 164, 177, 199, 208], "place": [9, 41, 57, 71, 85, 99, 135, 164, 177], "cpython": [9, 41, 57, 71, 85, 99, 135, 164, 177], "kick": [9, 41, 57, 71, 85, 99, 135, 164, 177], "its": [9, 15, 20, 21, 28, 29, 30, 41, 50, 51, 52, 57, 66, 67, 68, 71, 80, 81, 82, 85, 94, 95, 96, 99, 108, 109, 110, 117, 129, 133, 135, 144, 153, 154, 155, 164, 171, 172, 173, 177, 183, 184, 185, 192, 194, 196, 201, 202, 205], "default": [9, 13, 17, 29, 30, 41, 43, 51, 52, 57, 59, 67, 68, 71, 73, 81, 82, 85, 87, 95, 96, 99, 101, 109, 110, 122, 135, 141, 144, 146, 154, 155, 164, 166, 172, 173, 177, 178, 184, 185, 192, 200, 202, 205, 207], "print": [9, 29, 30, 41, 51, 52, 57, 67, 68, 71, 81, 82, 85, 95, 96, 99, 109, 110, 135, 154, 155, 164, 172, 173, 177, 184, 185], "self": [9, 41, 57, 71, 85, 99, 125, 135, 164, 177, 199], "gettyp": [9, 41, 57, 71, 85, 99, 135, 164, 177], "fullnam": [9, 41, 57, 71, 85, 99, 135, 164, 177], "similar": [9, 41, 57, 71, 85, 99, 135, 164, 177, 205], "overrid": [9, 41, 57, 71, 85, 99, 135, 164, 177, 208], "object": [9, 12, 16, 17, 22, 23, 24, 26, 28, 29, 30, 35, 37, 38, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 118, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 141, 145, 147, 148, 149, 153, 154, 155, 160, 161, 164, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 183, 184, 185, 187, 192, 200, 201, 202, 206, 207], "fix": [9, 41, 57, 71, 85, 99, 135, 164, 177], "make": [9, 17, 41, 43, 57, 59, 71, 73, 85, 87, 99, 101, 135, 141, 164, 166, 177, 178, 194], "grasshopp": [9, 41, 57, 71, 85, 99, 135, 164, 177, 190, 192, 194, 196, 202], "displai": [9, 41, 57, 71, 85, 99, 135, 164, 177, 201, 206], "proper": [9, 41, 57, 71, 85, 99, 135, 164, 177], "represent": [9, 28, 29, 30, 41, 50, 51, 52, 55, 56, 57, 66, 67, 68, 70, 71, 80, 81, 82, 84, 85, 94, 95, 96, 99, 108, 109, 110, 135, 153, 154, 155, 162, 164, 171, 172, 173, 177, 183, 184, 185, 199], "ar": [9, 11, 20, 38, 39, 41, 44, 48, 57, 60, 71, 74, 85, 88, 99, 102, 112, 125, 135, 164, 176, 177, 190, 193, 199, 200, 201, 204, 205, 206, 207, 208], "panel": [9, 41, 57, 71, 85, 99, 135, 164, 177], "other": [9, 12, 41, 57, 71, 85, 99, 118, 135, 164, 177, 189, 197, 205, 208], "output": [9, 39, 41, 57, 71, 85, 99, 135, 164, 177, 200], "add": [10, 11, 12, 13, 18, 19, 42, 58, 72, 86, 100, 136, 137, 138, 194, 195, 198, 199, 200, 207], "paramet": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 38, 39, 43, 44, 45, 46, 47, 49, 51, 52, 53, 55, 56, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 87, 88, 89, 90, 91, 93, 95, 96, 97, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 114, 118, 120, 121, 122, 124, 125, 127, 129, 131, 133, 134, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 166, 167, 168, 169, 170, 172, 173, 174, 175, 178, 179, 180, 181, 182, 184, 185, 187, 188, 199, 200, 201, 202, 207], "return": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 43, 44, 45, 46, 47, 49, 50, 52, 53, 55, 59, 60, 61, 62, 63, 65, 66, 68, 69, 73, 74, 75, 76, 77, 79, 80, 82, 83, 87, 88, 89, 90, 91, 93, 94, 96, 97, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 114, 115, 117, 121, 127, 129, 131, 133, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 155, 156, 157, 158, 159, 160, 162, 166, 167, 168, 169, 170, 171, 173, 174, 178, 179, 180, 181, 182, 183, 185, 187, 188, 200, 206], "graph": [10, 12, 13], "identifi": [10, 11, 12, 13, 15, 20, 21, 112], "ad": [10, 44, 60, 74, 88, 102, 137, 138, 188, 194], "b": 11, "kwarg": [11, 13], "between": [11, 15, 18, 70, 201, 205, 208], "two": [11, 18, 36, 39, 40, 44, 56, 60, 70, 74, 88, 102, 142, 202, 205, 208], "compa": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 43, 45, 46, 47, 49, 59, 61, 62, 63, 65, 73, 75, 76, 77, 79, 87, 89, 90, 91, 93, 101, 103, 104, 105, 107, 134, 137, 141, 145, 147, 148, 149, 152, 166, 167, 168, 169, 170, 176, 178, 179, 180, 181, 182, 189, 194, 195, 196, 198, 205], "datastructur": [11, 13, 18, 19, 20, 21, 25, 27, 33, 34, 49, 65, 79, 93, 107, 152, 158, 159, 170, 182], "from": [11, 19, 22, 23, 24, 26, 27, 39, 45, 46, 47, 49, 61, 62, 63, 65, 75, 76, 77, 79, 89, 90, 91, 93, 103, 104, 105, 107, 125, 144, 145, 146, 147, 148, 150, 151, 152, 167, 168, 169, 170, 179, 180, 181, 182, 190, 192, 194, 196, 197, 198, 199, 201, 202, 204, 205], "dict": [11, 13, 15, 22, 28, 40, 45, 50, 61, 66, 75, 80, 89, 94, 103, 108, 114, 118, 121, 125, 127, 129, 131, 133, 145, 153, 167, 171, 179, 183, 199], "str": [11, 13, 15, 20, 21, 23, 24, 27, 29, 30, 40, 46, 47, 49, 51, 52, 55, 56, 62, 63, 65, 67, 68, 70, 76, 77, 79, 81, 82, 84, 90, 91, 93, 95, 96, 104, 105, 107, 109, 110, 114, 118, 122, 125, 142, 147, 148, 152, 154, 155, 162, 168, 169, 170, 172, 173, 176, 180, 181, 182, 184, 185], "ani": [11, 13, 15, 35, 53, 69, 83, 97, 111, 160, 174, 187, 190, 197, 204, 206], "option": [11, 13, 15, 17, 21, 27, 29, 30, 38, 39, 43, 49, 51, 52, 59, 65, 67, 68, 73, 79, 81, 82, 87, 93, 95, 96, 101, 107, 109, 110, 112, 122, 141, 152, 154, 155, 166, 170, 172, 173, 178, 182, 184, 185, 195, 202, 205, 208], "compil": 11, "name": [11, 13, 122, 125, 195, 199, 201, 205, 206], "argument": 11, "tupl": [11, 15, 39, 70, 134, 143], "node": 11, "rais": [11, 23, 24, 44, 46, 47, 60, 62, 63, 74, 76, 77, 88, 90, 91, 102, 104, 105, 147, 148, 168, 169, 180, 181], "assemblyerror": 11, "If": [11, 15, 23, 24, 27, 29, 30, 39, 46, 47, 49, 51, 52, 62, 63, 65, 67, 68, 76, 77, 79, 81, 82, 90, 91, 93, 95, 96, 104, 105, 107, 109, 110, 137, 147, 148, 151, 152, 154, 155, 168, 169, 170, 172, 173, 180, 181, 182, 184, 185, 188, 189, 195, 202, 205], "an": [12, 13, 17, 22, 23, 24, 28, 29, 30, 35, 36, 38, 43, 44, 45, 46, 47, 50, 51, 52, 53, 56, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 94, 95, 96, 97, 101, 102, 103, 104, 105, 108, 109, 110, 111, 120, 124, 134, 141, 145, 147, 148, 153, 154, 155, 160, 161, 166, 167, 168, 169, 171, 172, 173, 174, 178, 179, 180, 181, 183, 184, 185, 187, 189, 190, 192, 195, 197, 198, 200, 201, 202, 205], "dowel": 12, "steel": 12, "plate": 12, "involv": [12, 131], "current": [12, 13, 17, 43, 59, 73, 87, 101, 141, 166, 178, 192], "none": [13, 17, 18, 19, 20, 21, 31, 32, 38, 39, 43, 59, 73, 87, 101, 112, 117, 122, 123, 127, 129, 131, 133, 136, 137, 140, 141, 144, 146, 151, 156, 157, 166, 178, 188, 202], "note": [13, 112, 189, 206], "i": [13, 14, 15, 20, 23, 24, 35, 38, 39, 40, 44, 46, 47, 48, 53, 56, 58, 60, 62, 63, 69, 70, 72, 74, 76, 77, 83, 84, 86, 88, 90, 91, 97, 102, 104, 105, 111, 112, 114, 118, 120, 121, 124, 134, 136, 137, 142, 143, 147, 148, 160, 163, 168, 169, 174, 175, 180, 181, 187, 189, 192, 194, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207], "uniqu": [13, 20], "onli": [13, 48, 137, 201], "nest": 13, "mai": [13, 200, 201], "have": [13, 44, 60, 74, 88, 102, 125, 195, 196, 202], "same": [13, 14, 39, 175, 176, 205, 208], "valu": [13, 55, 61, 75, 89, 103, 112, 134, 162, 201], "one": [13, 138, 175, 176, 199, 202, 205, 208], "which": [13, 38, 39, 44, 56, 60, 70, 74, 84, 88, 102, 112, 118, 125, 136, 139, 142, 143, 150, 161, 163, 176, 199, 200, 202, 205], "case": 13, "automat": [13, 20, 58, 72, 86, 205, 207], "integ": 13, "addit": [13, 15, 38, 198, 201, 202, 204], "collect": [13, 163, 188], "check": [14, 188, 192, 201], "alreadi": 14, "defin": [14, 42, 100, 118, 144, 201, 202, 205, 207, 208], "set": [14, 38, 112, 188, 200, 201, 202, 206], "bool": [14, 15, 16, 27, 29, 30, 38, 49, 51, 52, 65, 67, 68, 79, 81, 82, 93, 95, 96, 107, 109, 110, 118, 137, 149, 152, 154, 155, 170, 172, 173, 176, 182, 184, 185], "data": [15, 16, 17, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 43, 45, 46, 47, 49, 50, 51, 52, 53, 59, 61, 62, 63, 65, 66, 67, 68, 69, 73, 75, 76, 77, 79, 80, 81, 82, 83, 87, 89, 90, 91, 93, 94, 95, 96, 97, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 141, 145, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187], "fals": [15, 16, 27, 29, 30, 38, 49, 51, 52, 65, 67, 68, 79, 81, 82, 93, 95, 96, 107, 109, 110, 137, 149, 152, 154, 155, 170, 172, 173, 182, 184, 185], "iter": 15, "over": 15, "true": [15, 16, 27, 29, 30, 38, 49, 51, 52, 65, 67, 68, 79, 81, 82, 93, 95, 96, 107, 109, 110, 137, 143, 149, 152, 154, 155, 170, 172, 173, 182, 184, 185, 200, 202], "yield": [15, 25], "next": 15, "u": 15, "v": [15, 194], "connector": 15, "attr": [15, 125], "obj": [16, 27, 49, 65, 79, 93, 107, 152, 170, 176, 182], "given": [16, 38, 39, 44, 55, 60, 74, 88, 102, 112, 139, 142, 143, 146, 162, 201], "otherwis": [16, 39, 137, 197, 202], "look": 16, "cl": [17, 43, 59, 73, 87, 101, 141, 166, 178], "independ": [17, 43, 59, 73, 87, 101, 141, 166, 178], "edg": 18, "delet": 18, "remov": [19, 26, 136, 150, 151, 201, 204], "guid": [20, 192, 194, 195, 198, 202], "global": 20, "creat": [20, 40, 56, 58, 70, 72, 84, 86, 117, 118, 126, 128, 130, 132, 144, 146, 190, 192, 195, 196, 198, 199, 200, 201, 202, 205, 208], "can": [20, 21, 35, 53, 69, 83, 97, 111, 125, 149, 160, 163, 174, 176, 187, 190, 198, 199, 202, 205], "t": [20, 21, 84, 132, 195], "found": [20, 21, 199], "find": [21, 38, 112, 188, 205], "classmethod": [22, 23, 24, 35, 38, 44, 45, 46, 47, 53, 55, 60, 61, 62, 63, 69, 74, 75, 76, 77, 83, 88, 89, 90, 91, 97, 102, 103, 104, 105, 111, 117, 119, 123, 127, 129, 131, 133, 144, 145, 146, 147, 148, 160, 162, 167, 168, 169, 174, 179, 180, 181, 187], "construct": [22, 23, 24, 35, 45, 46, 47, 53, 61, 62, 63, 69, 75, 76, 77, 83, 89, 90, 91, 97, 103, 104, 105, 111, 145, 147, 148, 160, 167, 168, 169, 174, 179, 180, 181, 187, 192], "provid": [22, 37, 45, 61, 75, 89, 103, 145, 167, 179, 197, 198, 200, 202], "dictionari": [22, 45, 61, 75, 89, 103, 114, 127, 129, 131, 133, 145, 167, 179], "ha": [22, 23, 24, 36, 45, 46, 47, 61, 62, 63, 75, 76, 77, 89, 90, 91, 103, 104, 105, 112, 145, 147, 148, 167, 168, 169, 176, 179, 180, 181, 202, 205, 206, 207], "correct": [22, 23, 24, 45, 46, 47, 61, 62, 63, 75, 76, 77, 89, 90, 91, 103, 104, 105, 145, 147, 148, 167, 168, 169, 179, 180, 181], "schema": [22, 23, 24, 28, 35, 45, 46, 47, 50, 53, 61, 62, 63, 66, 69, 75, 76, 77, 80, 83, 89, 90, 91, 94, 97, 103, 104, 105, 108, 111, 145, 147, 148, 153, 160, 167, 168, 169, 171, 174, 179, 180, 181, 183, 187], "filepath": [23, 29, 46, 51, 62, 67, 76, 81, 90, 95, 104, 109, 147, 154, 168, 172, 180, 184], "json": [23, 24, 29, 30, 46, 47, 51, 52, 62, 63, 67, 68, 76, 77, 81, 82, 90, 91, 95, 96, 104, 105, 109, 110, 147, 148, 154, 155, 168, 169, 172, 173, 180, 181, 184, 185], "file": [23, 29, 46, 51, 62, 67, 76, 81, 90, 95, 104, 109, 114, 147, 154, 168, 172, 180, 184, 196, 197, 199, 203], "path": [23, 29, 46, 51, 62, 67, 76, 81, 90, 95, 104, 109, 147, 154, 168, 172, 180, 184, 194], "typeerror": [23, 24, 46, 47, 62, 63, 76, 77, 90, 91, 104, 105, 147, 148, 168, 169, 180, 181], "individu": [25, 125], "as_str": [27, 49, 65, 79, 93, 107, 152, 170, 182], "comput": [27, 39, 49, 65, 79, 93, 107, 152, 170, 182], "hash": [27, 49, 65, 79, 93, 107, 152, 170, 182], "comparison": [27, 49, 65, 79, 93, 107, 152, 170, 182], "dure": [27, 48, 49, 65, 79, 93, 107, 152, 170, 176, 182], "version": [27, 49, 65, 79, 93, 107, 152, 170, 182, 194], "control": [27, 49, 65, 79, 93, 107, 152, 170, 182], "algorithm": [27, 49, 65, 79, 93, 107, 112, 152, 170, 182], "digest": [27, 49, 65, 79, 93, 107, 152, 170, 182], "hexadecim": [27, 49, 65, 79, 93, 107, 152, 170, 182], "format": [27, 49, 65, 79, 93, 107, 114, 152, 170, 182, 201], "rather": [27, 49, 65, 79, 93, 107, 152, 170, 182], "than": [27, 44, 49, 60, 65, 74, 79, 88, 93, 102, 107, 152, 170, 182, 205], "byte": [27, 49, 65, 79, 93, 107, 152, 170, 182], "exampl": [27, 48, 49, 65, 79, 93, 107, 112, 152, 170, 182, 192, 194, 198, 201, 202, 205, 208], "import": [27, 49, 65, 79, 93, 107, 152, 170, 182, 199, 208], "mesh": [27, 49, 65, 79, 93, 107, 152, 170, 182, 191], "from_obj": [27, 49, 65, 79, 93, 107, 152, 170, 182], "get": [27, 49, 65, 79, 93, 107, 152, 170, 182, 198], "face": [27, 49, 65, 79, 93, 107, 118, 134, 143, 152, 170, 182], "v1": [27, 49, 65, 79, 93, 107, 152, 170, 182], "v2": [27, 49, 65, 79, 93, 107, 152, 170, 182], "vertex_attribut": [27, 49, 65, 79, 93, 107, 152, 170, 182], "vertex_sampl": [27, 49, 65, 79, 93, 107, 152, 170, 182], "1": [27, 49, 65, 79, 93, 107, 134, 152, 170, 182, 191, 199, 202], "0": [27, 49, 65, 79, 93, 107, 134, 152, 170, 182, 191, 194, 202, 205], "z": [27, 49, 65, 79, 93, 107, 134, 144, 146, 152, 170, 182, 202, 204, 207], "v3": [27, 49, 65, 79, 93, 107, 152, 170, 182], "nativ": [28, 29, 30, 50, 51, 52, 66, 67, 68, 80, 81, 82, 94, 95, 96, 108, 109, 110, 153, 154, 155, 171, 172, 173, 183, 184, 185], "describ": [28, 50, 66, 80, 94, 108, 125, 153, 171, 183, 199], "pretti": [29, 30, 51, 52, 67, 68, 81, 82, 95, 96, 109, 110, 114, 115, 154, 155, 172, 173, 184, 185], "save": [29, 30, 51, 52, 64, 67, 68, 78, 81, 82, 92, 95, 96, 106, 109, 110, 154, 155, 172, 173, 184, 185], "structur": [31, 32, 33, 34, 156, 157, 158, 159, 189, 192, 198, 200, 208], "transform": [32, 34, 149, 157, 159], "copi": [33, 34, 149, 158, 159, 196, 197], "valid": [35, 53, 69, 83, 97, 111, 160, 174, 187], "against": [35, 53, 69, 83, 97, 111, 160, 174, 187], "": [35, 42, 53, 56, 69, 70, 83, 84, 97, 100, 111, 134, 139, 142, 144, 146, 149, 160, 174, 187, 196, 201, 207], "raw": [35, 53, 69, 83, 97, 111, 160, 174, 187], "from_data": [35, 53, 69, 83, 97, 111, 160, 174, 187], "except": 36, "baseexcept": 36, "indic": [36, 118, 144, 146, 201, 202], "error": [36, 200, 201], "occur": 36, "while": 36, "try": 36, "join": [36, 40, 44, 56, 60, 70, 74, 84, 88, 102, 118, 200, 205], "more": [36, 138, 192, 198, 199], "tool": [37, 192, 198, 202, 206, 207], "detect": 37, "intersect": [37, 38, 39, 205], "topologi": [37, 39, 44, 54, 55, 56, 60, 70, 74, 84, 88, 102], "rtree": [38, 188], "max_dist": [38, 39], "pair": [38, 39, 112, 188, 201, 205, 208], "r": [38, 112, 194], "tree": [38, 112], "search": [38, 112], "neighbor": [38, 112, 188], "float": [38, 39, 112, 118, 134, 136, 143, 144, 146, 188], "distanc": [38, 39, 205], "apart": 38, "non": 38, "touch": 38, "still": 38, "consid": [38, 39], "neightbor": [38, 188], "beam_a": [39, 70], "beam_b": [39, 70], "tol": 39, "1e": 39, "06": 39, "within": [39, 176], "role": [39, 48], "sensit": 39, "consist": 39, "specif": [39, 48, 125, 192, 199], "order": [39, 112, 121, 175, 208], "e": [39, 48, 190, 194, 201, 205, 206, 207], "g": [39, 48, 190, 194, 201], "main": [39, 48, 56, 64, 78, 84, 86, 92, 106, 194, 195, 196, 205], "first": [39, 70, 142, 195, 205, 208], "cross": [39, 48, 56, 64, 78, 84, 86, 92, 106, 134, 144, 146, 202, 205], "second": [39, 70, 142, 205], "thei": 39, "were": [39, 201], "input": [39, 112, 125, 198, 199, 201, 202, 205], "gener": [39, 116, 120, 124, 125, 175, 199, 208], "toler": [39, 205], "mathemat": 39, "maximum": 39, "desigen": 39, "unit": [39, 112, 143], "jointtopologi": [39, 192], "should": [40, 48, 112, 125, 136, 149, 199, 205], "instanti": [40, 125, 199], "directli": [40, 196], "respect": [40, 48, 205], "implement": [40, 48, 188, 192], "instead": [40, 202], "end": [40, 56, 70, 84, 118, 134, 136, 142, 143, 146, 205], "map": [40, 198, 207], "ehich": 40, "each": [40, 70, 125, 143, 163, 199, 201, 205], "featur": [42, 58, 72, 86, 100, 134, 137, 138, 149, 151, 192, 198, 200, 206, 208], "affect": [42, 100], "new": [44, 60, 74, 88, 102, 195, 196, 199, 202], "expect": [44, 60, 74, 88, 102], "been": [44, 60, 74, 88, 102, 176], "befor": [44, 60, 74, 88, 102, 206], "call": [44, 48, 58, 60, 72, 74, 86, 88, 102, 125, 137, 199, 202, 205], "code": [44, 60, 74, 88, 102, 190, 192], "doe": [44, 60, 74, 88, 102, 196, 199, 202, 205], "verifi": [44, 60, 74, 88, 102, 143], "adjac": [44, 60, 74, 88, 102], "lie": [44, 60, 74, 88, 102], "allow": [44, 60, 74, 88, 102, 143, 176], "them": [44, 60, 70, 74, 88, 102, 125, 190, 199, 201, 205], "respons": [44, 60, 74, 88, 102], "valueerror": [44, 60, 74, 88, 102], "less": [44, 60, 74, 88, 102, 134], "assemebli": [44, 60, 74, 88, 102], "jo": [44, 60, 74, 88, 102], "belong": [44, 60, 74, 88, 102], "whould": [44, 60, 74, 88, 102], "togeth": [44, 60, 74, 88, 102, 202], "restor": 48, "refer": [48, 64, 78, 92, 106, 118, 192, 194, 198, 199, 201, 205], "associ": [48, 56, 70, 84, 118, 129, 133, 176, 197], "serial": [48, 64, 78, 92, 106], "To": [48, 196, 198, 199, 200, 205, 208], "avoid": [48, 205], "circular": 48, "store": [48, 201, 202], "de": [48, 64, 78, 92, 106], "sinc": 48, "concret": 48, "see": [48, 194, 198, 202, 203, 207], "tbuttjoint": [48, 191, 192], "enumer": 54, "possibl": [54, 201], "topo_unknown": [54, 55], "topo_i": 54, "topo_l": [54, 55], "topo_t": [54, 55], "topo_x": [54, 55], "For": [55, 112, 162, 192, 207, 208], "log": [55, 162, 200], "One": [55, 162, 176], "l": [56, 70, 128, 130, 131], "butt": [56, 84, 128, 132], "trim": [56, 58, 70, 72, 84, 86, 200, 204, 205], "pleas": [56, 70, 84, 189], "properli": [56, 70, 84], "timberassembli": [56, 70, 84, 175, 191, 192], "main_beam": [56, 84, 191], "cross_beam": [56, 84, 191], "cutting_plane_main": [56, 84], "frame": [56, 70, 84, 118, 122, 123, 134, 176, 191, 192, 198, 200, 208], "cutting_plane_cross": [56, 84], "joint_typ": [56, 70, 84, 117], "requir": [58, 72, 121, 125, 136, 150, 194], "extens": [58, 72, 136, 143, 150, 196], "both": [58, 72], "assemli": [64, 78, 106], "after": [64, 78, 92, 106], "resotr": [64, 78, 92, 106], "miter": [70, 130, 131], "plane": [70, 86, 122, 143, 202, 204, 207], "bisector": [70, 205], "angl": [70, 118, 205], "centerlin": [70, 134, 142, 144, 146, 198, 201, 202, 205, 207], "cutting_plan": 70, "normal": [70, 134], "point": [70, 134, 142, 146, 192, 207], "opposit": 70, "direct": [70, 134, 143, 144, 146, 188, 202], "along": [84, 134, 205], "length": [84, 134, 144, 205], "anoth": 84, "inflate_bi": [112, 188], "axi": [112, 134, 144, 146, 202, 207], "align": [112, 134, 139, 198, 207], "bound": [112, 134, 188], "box": [112, 134, 176, 188, 198, 206], "aabb": [112, 134], "enlarg": 112, "amount": [112, 136, 143, 188], "element": [112, 125, 142, 175, 176], "design": [112, 189, 192, 198, 201, 202], "regard": 112, "inflat": [112, 188], "pluggabl": 112, "In": [112, 192, 205], "plugin": [112, 192, 202], "avail": [112, 149, 193], "histori": 114, "btlx_string": 114, "xml": [114, 115], "visual": [114, 115, 163, 176, 190, 200], "gh": [114, 115], "termin": [114, 115, 196], "btlxpart": [114, 118, 122, 125, 127, 129, 131, 133, 199], "process": [116, 118, 120, 121, 122, 124, 125, 127, 129, 131, 133, 192, 198, 199, 208], "joint_factori": [117, 125, 199], "regist": 117, "correspond": [117, 134, 142, 201, 202, 207], "factori": [117, 125, 126, 128, 130, 132, 199], "arg": 117, "jointfactori": 117, "french": [118, 126], "ridg": [118, 126], "lap": 118, "is_top": [118, 119], "flag": 118, "top": [118, 198], "bottom": 118, "process_typ": [118, 125, 199], "frenchridgelap": 118, "other_beam": 118, "appli": [118, 125, 127, 129, 131, 133, 137, 199, 200, 205, 206, 208], "orient": [118, 144, 146, 207], "drill_hole_diamet": 118, "diamet": 118, "drill": 118, "hole": [118, 198], "ref_face_index": 118, "index": [118, 192, 206], "ref_fac": 118, "surfac": [118, 199], "header_attribut": [118, 125, 199], "header": 118, "process_paramet": [118, 125], "geometr": [118, 121, 125, 192, 199, 200, 204], "btlx": [118, 125, 192, 198], "degre": 118, "intern": [120, 124], "properti": 121, "all": [121, 143, 149, 151, 188, 197, 201], "It": [121, 192, 198, 200, 201, 202, 207], "ordereddict": 121, "maintain": [121, 192], "origin": [121, 134, 202, 206, 207], "jack": 122, "cut": [122, 198, 200, 204, 205], "joint_nam": [122, 123], "append": [125, 199], "btlx_process": [125, 199], "eg": 125, "btlxjackcut": [125, 192], "match": [125, 199], "deriv": [125, 199], "relat": [125, 199], "some": [125, 198, 207], "combin": 125, "multipl": [125, 190, 199], "cover": 125, "register_joint": [125, 199], "so": [125, 197, 199], "typic": [125, 176, 199], "need": [125, 139, 194, 196, 199, 201, 208], "param": 125, "et_el": 125, "et": 125, "stud": [134, 202], "slat": 134, "rectangular": [134, 202], "section": [134, 144, 146, 190, 198, 202], "geometri": [134, 149, 176, 188, 192, 198, 200, 202, 204, 206, 207, 208], "local": [134, 196, 202, 206], "coordin": [134, 202, 206], "system": [134, 202, 206], "locat": [134, 176, 196, 202], "start": [134, 136, 142, 143, 146, 198, 202], "x": [134, 202, 205, 207], "major": [134, 202], "also": [134, 137, 189, 192, 194, 198, 201, 202], "fibr": [134, 198], "solid": [134, 200], "wood": 134, "y": [134, 202, 207], "width": [134, 144, 146, 191, 201, 202], "smaller": [134, 202], "dimens": [134, 202], "height": [134, 144, 146, 191, 201, 202], "larger": [134, 202], "blank": [134, 136, 150], "parametr": [134, 192], "6": 134, "side": [134, 204, 205], "equal": 134, "posit": [134, 204, 205], "2": [134, 191, 199], "3": [134, 195, 199], "4": [134, 191, 199], "5": 134, "line": [134, 144, 192, 201, 202], "centerline_start": 134, "centerline_end": 134, "xmin": 134, "ymin": 134, "zmin": 134, "xmax": 134, "ymax": 134, "zmax": 134, "long_edg": 134, "long": [134, 143], "midpoint": 134, "middl": 134, "extend": [136, 143], "well": 136, "user": [137, 201], "must": 137, "apply_featur": 137, "vector": [139, 144, 146, 192, 202], "z_axi": 139, "definit": [139, 199, 200], "todo": [139, 143], "Not": 139, "anywher": 139, "features_to_clear": 140, "endpoint": [142, 146], "closer": 142, "interest": 142, "either": 142, "depend": [142, 144, 146, 194, 195, 199, 206], "result": [142, 175, 205], "actual": 142, "pln": 143, "metric": 143, "minimum": 143, "pass": 143, "through": [143, 189], "z_vector": [144, 146], "worldz": [144, 146], "worldx": [144, 146], "point_start": 146, "point_end": 146, "end_point": 146, "with_featur": 149, "drawn": [149, 202], "scene": 149, "enum": 161, "could": 161, "execut": [161, 176, 190, 196], "instruct": [161, 163, 176], "human": [162, 176], "robot": [162, 176], "build": [163, 175, 176, 194, 208], "step": [163, 165, 175, 192, 199], "simpl": [175, 192, 198], "sequenc": [175, 192], "per": 175, "buildingplan": [175, 192], "assembl": 176, "singl": [176, 199], "actor": [176, 192], "element_id": 176, "cad": [176, 190], "id": [176, 190], "elements_held": 176, "held": 176, "support": [176, 189, 190], "is_built": 176, "whether": [176, 197, 206], "is_plan": 176, "increment": 176, "cylind": 176, "prioriti": 176, "parallel": [176, 202], "prior": 188, "research": [189, 192, 197], "project": [189, 192], "develop": [189, 192, 193, 195], "aleksandra": 189, "apolinarska": 189, "chen": 189, "kasir": 189, "gonzalo": 189, "casa": 189, "gramazio": [189, 192, 197], "kohler": [189, 192, 197], "eth": [189, 192], "zurich": [189, 192], "swiss": 189, "nation": 189, "scienc": 189, "foundat": 189, "center": 189, "compet": 189, "digit": 189, "nccr": 189, "dfab": 189, "programm": 189, "As": 189, "open": [189, 192, 196], "mani": [189, 190, 192], "contributor": 189, "you": [189, 194, 195, 196, 198, 202, 205, 208], "your": [189, 195], "work": 189, "acknowledg": 189, "misc": 189, "titl": 189, "librari": [189, 190, 192, 198], "author": [189, 197], "anna": 189, "http": [189, 194, 195, 199], "github": [189, 194, 195, 196], "com": [189, 194, 195, 199], "gramaziokohl": 189, "year": 189, "2022": 189, "2023": 189, "doi": 189, "10": 189, "5281": 189, "zenodo": 189, "7934267": 189, "url": 189, "present": 190, "differ": [190, 199, 205, 208], "concept": [190, 198], "There": [190, 201], "wai": 190, "run": [190, 192, 196], "python": [190, 192, 194, 195, 198], "environ": [190, 192, 194, 195, 196], "interact": 190, "session": [190, 196], "text": [190, 196], "editor": 190, "sublim": 190, "studio": 190, "eclips": 190, "insid": 190, "blender": 190, "worldxi": 191, "depth": 191, "geometry_typ": 191, "add_beam": 191, "document": [192, 197, 199, 201, 202, 207], "packag": [192, 199], "model": 192, "written": 192, "framework": 192, "ecosystem": 192, "rhinocero": 192, "3d": 192, "plug": 192, "activ": [192, 195, 200, 202, 207], "being": 192, "continu": 192, "At": 192, "stage": 192, "encompass": 192, "fast": 192, "intuit": 192, "custom": [192, 201], "entiti": 192, "semant": 192, "inform": [192, 207], "about": 192, "futur": 192, "expand": 192, "entail": [192, 201], "interfac": 192, "analysi": 192, "softwar": [192, 197], "specialist": 192, "built": [192, 198], "upon": 192, "basic": 192, "like": [192, 198, 200], "complex": 192, "brep": [192, 200, 204, 206, 207], "resolv": 192, "backend": 192, "rhinocommon": 192, "sdk": 192, "handl": 192, "opencascad": 192, "via": 192, "occ": 192, "introduct": 192, "instal": 192, "quick": [192, 193], "manual": [192, 193], "api": [192, 198], "lbuttjoint": 192, "lmiterjoint": 192, "xhalflapjoint": 192, "connectionsolv": 192, "find_neighboring_beam": 192, "beamjoinningerror": 192, "brepgeometryconsum": 192, "btlxprocess": [192, 199], "btlxfrenchridgelap": 192, "lbuttfactori": 192, "tbuttfactori": 192, "lmiterfactori": 192, "frenchridgefactori": 192, "simplesequencegener": 192, "workflow": [192, 198, 201, 202], "show": [192, 198], "util": [192, 198], "contribut": [192, 198], "licens": 192, "cite": 192, "follow": [193, 197, 198, 199], "possibilti": 193, "want": [194, 195], "purpos": [194, 195, 197], "detail": [194, 198], "here": [194, 196, 199, 203, 205, 207], "fork": 194, "repo": 194, "clone": 194, "navig": [194, 196], "repositori": 194, "folder": 194, "cd": 194, "pip": [194, 195, 196], "git": [194, 195], "dev": [194, 195], "txt": 194, "ghuser": 194, "compon": [194, 196, 200, 201, 202, 206], "invok": 194, "sure": 194, "variabl": 194, "dependeci": 194, "m": 194, "compas_rhino": 194, "7": 194, "specifi": 194, "virutu": 195, "conda": [195, 196], "virtual": [195, 196], "replac": 195, "myenvnam": 195, "desir": [195, 207], "n": 195, "9": 195, "don": 195, "forg": 195, "yet": 195, "config": 195, "env": 195, "channel": 195, "prerequisit": 196, "rhinoceros3d": 196, "window": 196, "download": 196, "win_instal": 196, "cmd": 196, "content": 196, "newli": 196, "chang": 196, "doubl": 196, "click": 196, "altern": 196, "ex": 196, "mac": 196, "mac_instal": 196, "script": 196, "sh": 196, "what": 196, "background": 196, "batch": 196, "miniconda": 196, "branch": 196, "mit": 197, "copyright": 197, "c": 197, "2020": 197, "02": 197, "17": 197, "permiss": 197, "herebi": 197, "grant": 197, "free": 197, "charg": 197, "person": 197, "obtain": 197, "deal": 197, "without": 197, "restrict": 197, "limit": 197, "right": 197, "modifi": 197, "merg": 197, "publish": 197, "distribut": 197, "sublicens": 197, "sell": 197, "permit": 197, "whom": 197, "furnish": 197, "do": [197, 199], "subject": 197, "condit": 197, "abov": 197, "notic": 197, "shall": 197, "substanti": 197, "portion": 197, "THE": 197, "AS": 197, "warranti": 197, "OF": 197, "kind": 197, "express": 197, "OR": 197, "impli": [197, 200], "BUT": 197, "NOT": 197, "TO": 197, "merchant": 197, "fit": 197, "FOR": 197, "particular": 197, "AND": 197, "noninfring": 197, "IN": 197, "NO": 197, "event": 197, "holder": 197, "BE": 197, "liabl": 197, "claim": 197, "damag": 197, "liabil": 197, "action": 197, "contract": 197, "tort": 197, "aris": 197, "out": 197, "WITH": 197, "easi": 198, "autom": [198, 205], "bake": 198, "textur": [198, 207], "render": [198, 207], "boolean": [198, 200, 204], "style": 198, "planar": [198, 205], "might": 198, "ghpython": 198, "componen": 198, "overal": 198, "idea": 198, "how": [198, 205], "Then": [198, 205], "explain": 198, "machin": 199, "requr": 199, "necessari": 199, "design2machin": 199, "btlx_2_1_0": 199, "pdf": 199, "process_param": 199, "where": [199, 202, 207], "btlxjoint": 199, "__init__": 199, "py": 199, "mind": 199, "made": 200, "oper": [200, 204], "subtract": [200, 204], "computation": 200, "expens": 200, "disabl": 200, "applyfeatur": 200, "unsuccess": 200, "abstract": 200, "showassembli": [200, 206], "group": 201, "intend": [201, 202], "hybrid": 201, "encod": 201, "concaten": 201, "colon": 201, "separ": 201, "entri": [201, 208], "underscor": 201, "_": 201, "attr1nam": 201, "attr1value_attr2nam": 201, "attr2valu": 201, "four": [201, 205], "standard": 201, "categori": [201, 202, 205], "zvector": [201, 202], "setstandardattribut": 201, "write": [201, 202], "readstandardattribut": 201, "read": 201, "checkstandardattribut": 201, "correctli": 201, "miss": 201, "retriev": 201, "later": [201, 202, 205], "filter": 201, "accord": [201, 205], "criteria": 201, "These": 201, "deleteattribut": 201, "setcustomattribut": 201, "readallattribut": 201, "linear": [202, 205], "straight": 202, "rafter": 202, "joist": 202, "beamfromcurv": 202, "form": [202, 205], "linecurv": 202, "beamfromcurveguid": 202, "referenc": 202, "rotat": 202, "around": 202, "li": [202, 207], "sai": 202, "perpendicular": 202, "cannot": 202, "world": 202, "vertic": 202, "convent": 202, "rule": [202, 205], "jointcategoryrul": [202, 205], "automaticjoint": 202, "updaterefobj": 202, "onc": 202, "preview": [202, 206], "shape": 202, "extract": [202, 206], "demo": 203, "ly": 204, "three": 205, "prefix": 205, "rel": 205, "we": 205, "distinguish": 205, "topolog": 205, "situat": 205, "splice": 205, "co": 205, "corner": 205, "meet": 205, "select": 205, "addition": 205, "clean": 205, "serv": [205, 207], "cata": 205, "catb": 205, "thing": 205, "determin": 205, "ye": 205, "everi": 205, "tri": 205, "unintend": 205, "maxdist": 205, "exactli": 205, "certain": 205, "000001": 205, "inspect": 206, "showbeam": 206, "showbeamfram": 206, "showbeamindex": 206, "showjointtyp": 206, "bakewithboxmap": 207, "layer": 207, "materi": 207, "random": 207, "deviat": 207, "mapsiz": 207, "scale": 207, "adjust": 207, "size": 207, "imag": 207, "ratio": 207, "bitmap": 207, "care": 208, "final": 208, "matter": 208, "last": 208, "earlier": 208}, "objects": {"compas_timber.assembly": [[8, 0, 1, "", "TimberAssembly"]], "compas_timber.assembly.TimberAssembly": [[9, 1, 1, "", "ToString"], [10, 1, 1, "", "add_beam"], [11, 1, 1, "", "add_connection"], [12, 1, 1, "", "add_joint"], [13, 1, 1, "", "add_part"], [14, 1, 1, "", "are_parts_joined"], [15, 1, 1, "", "connections"], [16, 1, 1, "", "contains"], [17, 1, 1, "", "copy"], [18, 1, 1, "", "delete_connection"], [19, 1, 1, "", "delete_part"], [20, 1, 1, "", "find"], [21, 1, 1, "", "find_by_key"], [22, 1, 1, "", "from_data"], [23, 1, 1, "", "from_json"], [24, 1, 1, "", "from_jsonstring"], [25, 1, 1, "", "parts"], [26, 1, 1, "", "remove_joint"], [27, 1, 1, "", "sha256"], [28, 1, 1, "", "to_data"], [29, 1, 1, "", "to_json"], [30, 1, 1, "", "to_jsonstring"], [31, 1, 1, "", "transform"], [32, 1, 1, "", "transform_numpy"], [33, 1, 1, "", "transformed"], [34, 1, 1, "", "transformed_numpy"], [35, 1, 1, "", "validate_data"]], "compas_timber.connections": [[36, 2, 1, "", "BeamJoinningError"], [37, 0, 1, "", "ConnectionSolver"], [40, 0, 1, "", "Joint"], [54, 0, 1, "", "JointTopology"], [56, 0, 1, "", "LButtJoint"], [70, 0, 1, "", "LMiterJoint"], [84, 0, 1, "", "TButtJoint"], [98, 0, 1, "", "XHalfLapJoint"], [112, 3, 1, "", "find_neighboring_beams"]], "compas_timber.connections.ConnectionSolver": [[38, 1, 1, "", "find_intersecting_pairs"], [39, 1, 1, "", "find_topology"]], "compas_timber.connections.Joint": [[41, 1, 1, "", "ToString"], [42, 1, 1, "", "add_features"], [43, 1, 1, "", "copy"], [44, 1, 1, "", "create"], [45, 1, 1, "", "from_data"], [46, 1, 1, "", "from_json"], [47, 1, 1, "", "from_jsonstring"], [48, 1, 1, "", "restore_beams_from_keys"], [49, 1, 1, "", "sha256"], [50, 1, 1, "", "to_data"], [51, 1, 1, "", "to_json"], [52, 1, 1, "", "to_jsonstring"], [53, 1, 1, "", "validate_data"]], "compas_timber.connections.JointTopology": [[55, 1, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[57, 1, 1, "", "ToString"], [58, 1, 1, "", "add_features"], [59, 1, 1, "", "copy"], [60, 1, 1, "", "create"], [61, 1, 1, "", "from_data"], [62, 1, 1, "", "from_json"], [63, 1, 1, "", "from_jsonstring"], [64, 1, 1, "", "restore_beams_from_keys"], [65, 1, 1, "", "sha256"], [66, 1, 1, "", "to_data"], [67, 1, 1, "", "to_json"], [68, 1, 1, "", "to_jsonstring"], [69, 1, 1, "", "validate_data"]], "compas_timber.connections.LMiterJoint": [[71, 1, 1, "", "ToString"], [72, 1, 1, "", "add_features"], [73, 1, 1, "", "copy"], [74, 1, 1, "", "create"], [75, 1, 1, "", "from_data"], [76, 1, 1, "", "from_json"], [77, 1, 1, "", "from_jsonstring"], [78, 1, 1, "", "restore_beams_from_keys"], [79, 1, 1, "", "sha256"], [80, 1, 1, "", "to_data"], [81, 1, 1, "", "to_json"], [82, 1, 1, "", "to_jsonstring"], [83, 1, 1, "", "validate_data"]], "compas_timber.connections.TButtJoint": [[85, 1, 1, "", "ToString"], [86, 1, 1, "", "add_features"], [87, 1, 1, "", "copy"], [88, 1, 1, "", "create"], [89, 1, 1, "", "from_data"], [90, 1, 1, "", "from_json"], [91, 1, 1, "", "from_jsonstring"], [92, 1, 1, "", "restore_beams_from_keys"], [93, 1, 1, "", "sha256"], [94, 1, 1, "", "to_data"], [95, 1, 1, "", "to_json"], [96, 1, 1, "", "to_jsonstring"], [97, 1, 1, "", "validate_data"]], "compas_timber.connections.XHalfLapJoint": [[99, 1, 1, "", "ToString"], [100, 1, 1, "", "add_features"], [101, 1, 1, "", "copy"], [102, 1, 1, "", "create"], [103, 1, 1, "", "from_data"], [104, 1, 1, "", "from_json"], [105, 1, 1, "", "from_jsonstring"], [106, 1, 1, "", "restore_beams_from_keys"], [107, 1, 1, "", "sha256"], [108, 1, 1, "", "to_data"], [109, 1, 1, "", "to_json"], [110, 1, 1, "", "to_jsonstring"], [111, 1, 1, "", "validate_data"]], "compas_timber.consumers": [[113, 0, 1, "", "BrepGeometryConsumer"]], "compas_timber.fabrication": [[114, 0, 1, "", "BTLx"], [118, 0, 1, "", "BTLxFrenchRidgeLap"], [122, 0, 1, "", "BTLxJackCut"], [125, 0, 1, "", "BTLxProcess"], [126, 0, 1, "", "FrenchRidgeFactory"], [128, 0, 1, "", "LButtFactory"], [130, 0, 1, "", "LMiterFactory"], [132, 0, 1, "", "TButtFactory"]], "compas_timber.fabrication.BTLx": [[115, 1, 1, "", "btlx_string"], [116, 1, 1, "", "process_assembly"], [117, 1, 1, "", "register_joint"]], "compas_timber.fabrication.BTLxFrenchRidgeLap": [[119, 1, 1, "", "create_process"], [120, 1, 1, "", "get_params"], [121, 1, 1, "", "process_joints"]], "compas_timber.fabrication.BTLxJackCut": [[123, 1, 1, "", "create_process"], [124, 1, 1, "", "generate_process"]], "compas_timber.fabrication.FrenchRidgeFactory": [[127, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.LButtFactory": [[129, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.LMiterFactory": [[131, 1, 1, "", "apply_processings"]], "compas_timber.fabrication.TButtFactory": [[133, 1, 1, "", "apply_processings"]], "compas_timber.parts": [[134, 0, 1, "", "Beam"]], "compas_timber.parts.Beam": [[135, 1, 1, "", "ToString"], [136, 1, 1, "", "add_blank_extension"], [137, 1, 1, "", "add_feature"], [138, 1, 1, "", "add_features"], [139, 1, 1, "", "align_z"], [140, 1, 1, "", "clear_features"], [141, 1, 1, "", "copy"], [142, 1, 1, "", "endpoint_closest_to_point"], [143, 1, 1, "", "extension_to_plane"], [144, 1, 1, "", "from_centerline"], [145, 1, 1, "", "from_data"], [146, 1, 1, "", "from_endpoints"], [147, 1, 1, "", "from_json"], [148, 1, 1, "", "from_jsonstring"], [149, 1, 1, "", "get_geometry"], [150, 1, 1, "", "remove_blank_extension"], [151, 1, 1, "", "remove_features"], [152, 1, 1, "", "sha256"], [153, 1, 1, "", "to_data"], [154, 1, 1, "", "to_json"], [155, 1, 1, "", "to_jsonstring"], [156, 1, 1, "", "transform"], [157, 1, 1, "", "transform_numpy"], [158, 1, 1, "", "transformed"], [159, 1, 1, "", "transformed_numpy"], [160, 1, 1, "", "validate_data"]], "compas_timber.planning": [[161, 0, 1, "", "Actor"], [163, 0, 1, "", "BuildingPlan"], [175, 0, 1, "", "SimpleSequenceGenerator"], [176, 0, 1, "", "Step"]], "compas_timber.planning.Actor": [[162, 1, 1, "", "get_name"]], "compas_timber.planning.BuildingPlan": [[164, 1, 1, "", "ToString"], [165, 1, 1, "", "add_step"], [166, 1, 1, "", "copy"], [167, 1, 1, "", "from_data"], [168, 1, 1, "", "from_json"], [169, 1, 1, "", "from_jsonstring"], [170, 1, 1, "", "sha256"], [171, 1, 1, "", "to_data"], [172, 1, 1, "", "to_json"], [173, 1, 1, "", "to_jsonstring"], [174, 1, 1, "", "validate_data"]], "compas_timber.planning.Step": [[177, 1, 1, "", "ToString"], [178, 1, 1, "", "copy"], [179, 1, 1, "", "from_data"], [180, 1, 1, "", "from_json"], [181, 1, 1, "", "from_jsonstring"], [182, 1, 1, "", "sha256"], [183, 1, 1, "", "to_data"], [184, 1, 1, "", "to_json"], [185, 1, 1, "", "to_jsonstring"], [186, 1, 1, "", "transform"], [187, 1, 1, "", "validate_data"]], "compas_timber.rhino": [[188, 3, 1, "", "find_neighboring_beams"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:exception", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "exception", "Python exception"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "packag": 0, "compas_timb": [1, 2, 3, 4, 5, 6], "assembli": [1, 190, 200], "class": [1, 2, 3, 4, 5, 6], "connect": [2, 15], "function": 2, "except": 2, "consum": 3, "fabric": 4, "part": [5, 25], "plan": 6, "rhino": 7, "plugin": [7, 198], "timberassembli": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "tostr": [9, 41, 57, 71, 85, 99, 135, 164, 177], "add_beam": 10, "add_connect": 11, "add_joint": 12, "add_part": 13, "are_parts_join": 14, "contain": 16, "copi": [17, 43, 59, 73, 87, 101, 141, 166, 178], "delete_connect": 18, "delete_part": 19, "find": 20, "find_by_kei": 21, "from_data": [22, 45, 61, 75, 89, 103, 145, 167, 179], "from_json": [23, 46, 62, 76, 90, 104, 147, 168, 180], "from_jsonstr": [24, 47, 63, 77, 91, 105, 148, 169, 181], "remove_joint": 26, "sha256": [27, 49, 65, 79, 93, 107, 152, 170, 182], "to_data": [28, 50, 66, 80, 94, 108, 153, 171, 183], "to_json": [29, 51, 67, 81, 95, 109, 154, 172, 184], "to_jsonstr": [30, 52, 68, 82, 96, 110, 155, 173, 185], "transform": [31, 33, 156, 158, 186], "transform_numpi": [32, 157], "transformed_numpi": [34, 159], "validate_data": [35, 53, 69, 83, 97, 111, 160, 174, 187], "beamjoinningerror": 36, "connectionsolv": [37, 38, 39], "find_intersecting_pair": 38, "find_topologi": 39, "joint": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 191, 205], "add_featur": [42, 58, 72, 86, 100, 137, 138], "creat": [44, 60, 74, 88, 102, 191], "restore_beams_from_kei": [48, 64, 78, 92, 106], "jointtopologi": [54, 55], "get_nam": [55, 162], "lbuttjoint": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "lmiterjoint": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], "tbuttjoint": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "xhalflapjoint": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "find_neighboring_beam": [112, 188], "brepgeometryconsum": 113, "btlx": [114, 115, 116, 117, 199], "btlx_string": 115, "process_assembli": 116, "register_joint": 117, "btlxfrenchridgelap": [118, 119, 120, 121], "create_process": [119, 123], "get_param": 120, "process_joint": 121, "btlxjackcut": [122, 123, 124], "generate_process": 124, "btlxprocess": 125, "frenchridgefactori": [126, 127], "apply_process": [127, 129, 131, 133], "lbuttfactori": [128, 129], "lmiterfactori": [130, 131], "tbuttfactori": [132, 133], "beam": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 202], "add_blank_extens": 136, "align_z": 139, "clear_featur": 140, "endpoint_closest_to_point": 142, "extension_to_plan": 143, "from_centerlin": 144, "from_endpoint": 146, "get_geometri": 149, "remove_blank_extens": 150, "remove_featur": 151, "actor": [161, 162], "buildingplan": [163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "add_step": 165, "simplesequencegener": 175, "step": [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "cite": 189, "exampl": [190, 203], "timber": [190, 192], "compa": 192, "depend": 192, "tabl": 192, "content": 192, "indic": 192, "instal": [193, 194, 195, 196], "manual": [194, 195], "develop": 194, "quick": 196, "licens": 197, "grasshopp": 198, "contribut": 199, "guid": 199, "attribut": 201, "featur": 204, "topologi": 205, "compon": 205, "t": 205, "butt": 205, "l": 205, "miter": 205, "automaticjoint": 205, "wizzard": 205, "show": 206, "util": 207, "bake": 207, "boxmap": 207, "workflow": 208}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"API Reference": [[0, "api-reference"]], "Packages": [[0, "packages"]], "compas_timber.assembly": [[1, "compas-timber-assembly"]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"]], "compas_timber.connections": [[2, "compas-timber-connections"]], "Functions": [[2, "functions"]], "Exceptions": [[2, "exceptions"]], "compas_timber.consumers": [[3, "compas-timber-consumers"]], "compas_timber.fabrication": [[4, "compas-timber-fabrication"]], "compas_timber.parts": [[5, "compas-timber-parts"]], "compas_timber.planning": [[6, "compas-timber-planning"]], "rhino": [[7, "rhino"]], "Plugins": [[7, "plugins"]], "TimberAssembly": [[8, "timberassembly"]], "TimberAssembly.ToString": [[9, "timberassembly-tostring"]], "TimberAssembly.add_beam": [[10, "timberassembly-add-beam"]], "TimberAssembly.add_connection": [[11, "timberassembly-add-connection"]], "TimberAssembly.add_joint": [[12, "timberassembly-add-joint"]], "TimberAssembly.add_part": [[13, "timberassembly-add-part"]], "TimberAssembly.are_parts_joined": [[14, "timberassembly-are-parts-joined"]], "TimberAssembly.connections": [[15, "timberassembly-connections"]], "TimberAssembly.contains": [[16, "timberassembly-contains"]], "TimberAssembly.copy": [[17, "timberassembly-copy"]], "TimberAssembly.delete_connection": [[18, "timberassembly-delete-connection"]], "TimberAssembly.delete_part": [[19, "timberassembly-delete-part"]], "TimberAssembly.find": [[20, "timberassembly-find"]], "TimberAssembly.find_by_key": [[21, "timberassembly-find-by-key"]], "TimberAssembly.from_data": [[22, "timberassembly-from-data"]], "TimberAssembly.from_json": [[23, "timberassembly-from-json"]], "TimberAssembly.from_jsonstring": [[24, "timberassembly-from-jsonstring"]], "TimberAssembly.parts": [[25, "timberassembly-parts"]], "TimberAssembly.remove_joint": [[26, "timberassembly-remove-joint"]], "TimberAssembly.sha256": [[27, "timberassembly-sha256"]], "TimberAssembly.to_data": [[28, "timberassembly-to-data"]], "TimberAssembly.to_json": [[29, "timberassembly-to-json"]], "TimberAssembly.to_jsonstring": [[30, "timberassembly-to-jsonstring"]], "TimberAssembly.transform": [[31, "timberassembly-transform"]], "TimberAssembly.transform_numpy": [[32, "timberassembly-transform-numpy"]], "TimberAssembly.transformed": [[33, "timberassembly-transformed"]], "TimberAssembly.transformed_numpy": [[34, "timberassembly-transformed-numpy"]], "TimberAssembly.validate_data": [[35, "timberassembly-validate-data"]], "BeamJoinningError": [[36, "beamjoinningerror"]], "ConnectionSolver": [[37, "connectionsolver"]], "ConnectionSolver.find_intersecting_pairs": [[38, "connectionsolver-find-intersecting-pairs"]], "ConnectionSolver.find_topology": [[39, "connectionsolver-find-topology"]], "Joint": [[40, "joint"]], "Joint.ToString": [[41, "joint-tostring"]], "Joint.add_features": [[42, "joint-add-features"]], "Joint.copy": [[43, "joint-copy"]], "Joint.create": [[44, "joint-create"]], "Joint.from_data": [[45, "joint-from-data"]], "Joint.from_json": [[46, "joint-from-json"]], "Joint.from_jsonstring": [[47, "joint-from-jsonstring"]], "Joint.restore_beams_from_keys": [[48, "joint-restore-beams-from-keys"]], "Joint.sha256": [[49, "joint-sha256"]], "Joint.to_data": [[50, "joint-to-data"]], "Joint.to_json": [[51, "joint-to-json"]], "Joint.to_jsonstring": [[52, "joint-to-jsonstring"]], "Joint.validate_data": [[53, "joint-validate-data"]], "JointTopology": [[54, "jointtopology"]], "JointTopology.get_name": [[55, "jointtopology-get-name"]], "LButtJoint": [[56, "lbuttjoint"]], "LButtJoint.ToString": [[57, "lbuttjoint-tostring"]], "LButtJoint.add_features": [[58, "lbuttjoint-add-features"]], "LButtJoint.copy": [[59, "lbuttjoint-copy"]], "LButtJoint.create": [[60, "lbuttjoint-create"]], "LButtJoint.from_data": [[61, "lbuttjoint-from-data"]], "LButtJoint.from_json": [[62, "lbuttjoint-from-json"]], "LButtJoint.from_jsonstring": [[63, "lbuttjoint-from-jsonstring"]], "LButtJoint.restore_beams_from_keys": [[64, "lbuttjoint-restore-beams-from-keys"]], "LButtJoint.sha256": [[65, "lbuttjoint-sha256"]], "LButtJoint.to_data": [[66, "lbuttjoint-to-data"]], "LButtJoint.to_json": [[67, "lbuttjoint-to-json"]], "LButtJoint.to_jsonstring": [[68, "lbuttjoint-to-jsonstring"]], "LButtJoint.validate_data": [[69, "lbuttjoint-validate-data"]], "LMiterJoint": [[70, "lmiterjoint"]], "LMiterJoint.ToString": [[71, "lmiterjoint-tostring"]], "LMiterJoint.add_features": [[72, "lmiterjoint-add-features"]], "LMiterJoint.copy": [[73, "lmiterjoint-copy"]], "LMiterJoint.create": [[74, "lmiterjoint-create"]], "LMiterJoint.from_data": [[75, "lmiterjoint-from-data"]], "LMiterJoint.from_json": [[76, "lmiterjoint-from-json"]], "LMiterJoint.from_jsonstring": [[77, "lmiterjoint-from-jsonstring"]], "LMiterJoint.restore_beams_from_keys": [[78, "lmiterjoint-restore-beams-from-keys"]], "LMiterJoint.sha256": [[79, "lmiterjoint-sha256"]], "LMiterJoint.to_data": [[80, "lmiterjoint-to-data"]], "LMiterJoint.to_json": [[81, "lmiterjoint-to-json"]], "LMiterJoint.to_jsonstring": [[82, "lmiterjoint-to-jsonstring"]], "LMiterJoint.validate_data": [[83, "lmiterjoint-validate-data"]], "TButtJoint": [[84, "tbuttjoint"]], "TButtJoint.ToString": [[85, "tbuttjoint-tostring"]], "TButtJoint.add_features": [[86, "tbuttjoint-add-features"]], "TButtJoint.copy": [[87, "tbuttjoint-copy"]], "TButtJoint.create": [[88, "tbuttjoint-create"]], "TButtJoint.from_data": [[89, "tbuttjoint-from-data"]], "TButtJoint.from_json": [[90, "tbuttjoint-from-json"]], "TButtJoint.from_jsonstring": [[91, "tbuttjoint-from-jsonstring"]], "TButtJoint.restore_beams_from_keys": [[92, "tbuttjoint-restore-beams-from-keys"]], "TButtJoint.sha256": [[93, "tbuttjoint-sha256"]], "TButtJoint.to_data": [[94, "tbuttjoint-to-data"]], "TButtJoint.to_json": [[95, "tbuttjoint-to-json"]], "TButtJoint.to_jsonstring": [[96, "tbuttjoint-to-jsonstring"]], "TButtJoint.validate_data": [[97, "tbuttjoint-validate-data"]], "XHalfLapJoint": [[98, "xhalflapjoint"]], "XHalfLapJoint.ToString": [[99, "xhalflapjoint-tostring"]], "XHalfLapJoint.add_features": [[100, "xhalflapjoint-add-features"]], "XHalfLapJoint.copy": [[101, "xhalflapjoint-copy"]], "XHalfLapJoint.create": [[102, "xhalflapjoint-create"]], "XHalfLapJoint.from_data": [[103, "xhalflapjoint-from-data"]], "XHalfLapJoint.from_json": [[104, "xhalflapjoint-from-json"]], "XHalfLapJoint.from_jsonstring": [[105, "xhalflapjoint-from-jsonstring"]], "XHalfLapJoint.restore_beams_from_keys": [[106, "xhalflapjoint-restore-beams-from-keys"]], "XHalfLapJoint.sha256": [[107, "xhalflapjoint-sha256"]], "XHalfLapJoint.to_data": [[108, "xhalflapjoint-to-data"]], "XHalfLapJoint.to_json": [[109, "xhalflapjoint-to-json"]], "XHalfLapJoint.to_jsonstring": [[110, "xhalflapjoint-to-jsonstring"]], "XHalfLapJoint.validate_data": [[111, "xhalflapjoint-validate-data"]], "find_neighboring_beams": [[112, "find-neighboring-beams"], [188, "find-neighboring-beams"]], "BrepGeometryConsumer": [[113, "brepgeometryconsumer"]], "BTLx": [[114, "btlx"]], "BTLx.btlx_string": [[115, "btlx-btlx-string"]], "BTLx.process_assembly": [[116, "btlx-process-assembly"]], "BTLx.register_joint": [[117, "btlx-register-joint"]], "BTLxFrenchRidgeLap": [[118, "btlxfrenchridgelap"]], "BTLxFrenchRidgeLap.create_process": [[119, "btlxfrenchridgelap-create-process"]], "BTLxFrenchRidgeLap.get_params": [[120, "btlxfrenchridgelap-get-params"]], "BTLxFrenchRidgeLap.process_joints": [[121, "btlxfrenchridgelap-process-joints"]], "BTLxJackCut": [[122, "btlxjackcut"]], "BTLxJackCut.create_process": [[123, "btlxjackcut-create-process"]], "BTLxJackCut.generate_process": [[124, "btlxjackcut-generate-process"]], "BTLxProcess": [[125, "btlxprocess"]], "FrenchRidgeFactory": [[126, "frenchridgefactory"]], "FrenchRidgeFactory.apply_processings": [[127, "frenchridgefactory-apply-processings"]], "LButtFactory": [[128, "lbuttfactory"]], "LButtFactory.apply_processings": [[129, "lbuttfactory-apply-processings"]], "LMiterFactory": [[130, "lmiterfactory"]], "LMiterFactory.apply_processings": [[131, "lmiterfactory-apply-processings"]], "TButtFactory": [[132, "tbuttfactory"]], "TButtFactory.apply_processings": [[133, "tbuttfactory-apply-processings"]], "Beam": [[134, "beam"], [202, "beam"]], "Beam.ToString": [[135, "beam-tostring"]], "Beam.add_blank_extension": [[136, "beam-add-blank-extension"]], "Beam.add_feature": [[137, "beam-add-feature"]], "Beam.add_features": [[138, "beam-add-features"]], "Beam.align_z": [[139, "beam-align-z"]], "Beam.clear_features": [[140, "beam-clear-features"]], "Beam.copy": [[141, "beam-copy"]], "Beam.endpoint_closest_to_point": [[142, "beam-endpoint-closest-to-point"]], "Beam.extension_to_plane": [[143, "beam-extension-to-plane"]], "Beam.from_centerline": [[144, "beam-from-centerline"]], "Beam.from_data": [[145, "beam-from-data"]], "Beam.from_endpoints": [[146, "beam-from-endpoints"]], "Beam.from_json": [[147, "beam-from-json"]], "Beam.from_jsonstring": [[148, "beam-from-jsonstring"]], "Beam.get_geometry": [[149, "beam-get-geometry"]], "Beam.remove_blank_extension": [[150, "beam-remove-blank-extension"]], "Beam.remove_features": [[151, "beam-remove-features"]], "Beam.sha256": [[152, "beam-sha256"]], "Beam.to_data": [[153, "beam-to-data"]], "Beam.to_json": [[154, "beam-to-json"]], "Beam.to_jsonstring": [[155, "beam-to-jsonstring"]], "Beam.transform": [[156, "beam-transform"]], "Beam.transform_numpy": [[157, "beam-transform-numpy"]], "Beam.transformed": [[158, "beam-transformed"]], "Beam.transformed_numpy": [[159, "beam-transformed-numpy"]], "Beam.validate_data": [[160, "beam-validate-data"]], "Actor": [[161, "actor"]], "Actor.get_name": [[162, "actor-get-name"]], "BuildingPlan": [[163, "buildingplan"]], "BuildingPlan.ToString": [[164, "buildingplan-tostring"]], "BuildingPlan.add_step": [[165, "buildingplan-add-step"]], "BuildingPlan.copy": [[166, "buildingplan-copy"]], "BuildingPlan.from_data": [[167, "buildingplan-from-data"]], "BuildingPlan.from_json": [[168, "buildingplan-from-json"]], "BuildingPlan.from_jsonstring": [[169, "buildingplan-from-jsonstring"]], "BuildingPlan.sha256": [[170, "buildingplan-sha256"]], "BuildingPlan.to_data": [[171, "buildingplan-to-data"]], "BuildingPlan.to_json": [[172, "buildingplan-to-json"]], "BuildingPlan.to_jsonstring": [[173, "buildingplan-to-jsonstring"]], "BuildingPlan.validate_data": [[174, "buildingplan-validate-data"]], "SimpleSequenceGenerator": [[175, "simplesequencegenerator"]], "Step": [[176, "step"]], "Step.ToString": [[177, "step-tostring"]], "Step.copy": [[178, "step-copy"]], "Step.from_data": [[179, "step-from-data"]], "Step.from_json": [[180, "step-from-json"]], "Step.from_jsonstring": [[181, "step-from-jsonstring"]], "Step.sha256": [[182, "step-sha256"]], "Step.to_data": [[183, "step-to-data"]], "Step.to_json": [[184, "step-to-json"]], "Step.to_jsonstring": [[185, "step-to-jsonstring"]], "Step.transform": [[186, "step-transform"]], "Step.validate_data": [[187, "step-validate-data"]], "Citing": [[189, "citing"]], "Examples": [[190, "examples"], [203, "examples"]], "Timber Assembly Examples": [[190, "timber-assembly-examples"]], "Create Joint": [[191, "create-joint"]], "COMPAS TIMBER": [[192, "compas-timber"]], "Dependencies": [[192, "dependencies"]], "Table of Contents": [[192, "table-of-contents"]], "Indices and tables": [[192, "indices-and-tables"]], "Installation": [[193, "installation"]], "Manual installation for developers": [[194, "manual-installation-for-developers"]], "Manual installation": [[195, "manual-installation"]], "Quick installation": [[196, "quick-installation"]], "License": [[197, "license"]], "Grasshopper plugin": [[198, "grasshopper-plugin"]], "BTLx Contribution Guide": [[199, "btlx-contribution-guide"]], "Assembly": [[200, "assembly"]], "Attributes": [[201, "attributes"]], "Features": [[204, "features"]], "Joints": [[205, "joints"]], "Joint Topologies": [[205, "joint-topologies"]], "Joint components": [[205, "joint-components"]], "T-Butt": [[205, "t-butt"]], "L-Butt": [[205, "l-butt"]], "L-Miter": [[205, "l-miter"]], "AutomaticJoint wizzard": [[205, "automaticjoint-wizzard"]], "Show": [[206, "show"]], "Utils": [[207, "utils"]], "Bake with BoxMap": [[207, "bake-with-boxmap"]], "Workflow": [[208, "workflow"]]}, "indexentries": {"timberassembly (class in compas_timber.assembly)": [[8, "compas_timber.assembly.TimberAssembly"]], "tostring() (compas_timber.assembly.timberassembly method)": [[9, "compas_timber.assembly.TimberAssembly.ToString"]], "add_beam() (compas_timber.assembly.timberassembly method)": [[10, "compas_timber.assembly.TimberAssembly.add_beam"]], "add_connection() (compas_timber.assembly.timberassembly method)": [[11, "compas_timber.assembly.TimberAssembly.add_connection"]], "add_joint() (compas_timber.assembly.timberassembly method)": [[12, "compas_timber.assembly.TimberAssembly.add_joint"]], "add_part() (compas_timber.assembly.timberassembly method)": [[13, "compas_timber.assembly.TimberAssembly.add_part"]], "are_parts_joined() (compas_timber.assembly.timberassembly method)": [[14, "compas_timber.assembly.TimberAssembly.are_parts_joined"]], "connections() (compas_timber.assembly.timberassembly method)": [[15, "compas_timber.assembly.TimberAssembly.connections"]], "contains() (compas_timber.assembly.timberassembly method)": [[16, "compas_timber.assembly.TimberAssembly.contains"]], "copy() (compas_timber.assembly.timberassembly method)": [[17, "compas_timber.assembly.TimberAssembly.copy"]], "delete_connection() (compas_timber.assembly.timberassembly method)": [[18, "compas_timber.assembly.TimberAssembly.delete_connection"]], "delete_part() (compas_timber.assembly.timberassembly method)": [[19, "compas_timber.assembly.TimberAssembly.delete_part"]], "find() (compas_timber.assembly.timberassembly method)": [[20, "compas_timber.assembly.TimberAssembly.find"]], "find_by_key() (compas_timber.assembly.timberassembly method)": [[21, "compas_timber.assembly.TimberAssembly.find_by_key"]], "from_data() (compas_timber.assembly.timberassembly class method)": [[22, "compas_timber.assembly.TimberAssembly.from_data"]], "from_json() (compas_timber.assembly.timberassembly class method)": [[23, "compas_timber.assembly.TimberAssembly.from_json"]], "from_jsonstring() (compas_timber.assembly.timberassembly class method)": [[24, "compas_timber.assembly.TimberAssembly.from_jsonstring"]], "parts() (compas_timber.assembly.timberassembly method)": [[25, "compas_timber.assembly.TimberAssembly.parts"]], "remove_joint() (compas_timber.assembly.timberassembly method)": [[26, "compas_timber.assembly.TimberAssembly.remove_joint"]], "sha256() (compas_timber.assembly.timberassembly method)": [[27, "compas_timber.assembly.TimberAssembly.sha256"]], "to_data() (compas_timber.assembly.timberassembly method)": [[28, "compas_timber.assembly.TimberAssembly.to_data"]], "to_json() (compas_timber.assembly.timberassembly method)": [[29, "compas_timber.assembly.TimberAssembly.to_json"]], "to_jsonstring() (compas_timber.assembly.timberassembly method)": [[30, "compas_timber.assembly.TimberAssembly.to_jsonstring"]], "transform() (compas_timber.assembly.timberassembly method)": [[31, "compas_timber.assembly.TimberAssembly.transform"]], "transform_numpy() (compas_timber.assembly.timberassembly method)": [[32, "compas_timber.assembly.TimberAssembly.transform_numpy"]], "transformed() (compas_timber.assembly.timberassembly method)": [[33, "compas_timber.assembly.TimberAssembly.transformed"]], "transformed_numpy() (compas_timber.assembly.timberassembly method)": [[34, "compas_timber.assembly.TimberAssembly.transformed_numpy"]], "validate_data() (compas_timber.assembly.timberassembly class method)": [[35, "compas_timber.assembly.TimberAssembly.validate_data"]], "beamjoinningerror": [[36, "compas_timber.connections.BeamJoinningError"]], "connectionsolver (class in compas_timber.connections)": [[37, "compas_timber.connections.ConnectionSolver"]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[38, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs"]], "find_topology() (compas_timber.connections.connectionsolver method)": [[39, "compas_timber.connections.ConnectionSolver.find_topology"]], "joint (class in compas_timber.connections)": [[40, "compas_timber.connections.Joint"]], "tostring() (compas_timber.connections.joint method)": [[41, "compas_timber.connections.Joint.ToString"]], "add_features() (compas_timber.connections.joint method)": [[42, "compas_timber.connections.Joint.add_features"]], "copy() (compas_timber.connections.joint method)": [[43, "compas_timber.connections.Joint.copy"]], "create() (compas_timber.connections.joint class method)": [[44, "compas_timber.connections.Joint.create"]], "from_data() (compas_timber.connections.joint class method)": [[45, "compas_timber.connections.Joint.from_data"]], "from_json() (compas_timber.connections.joint class method)": [[46, "compas_timber.connections.Joint.from_json"]], "from_jsonstring() (compas_timber.connections.joint class method)": [[47, "compas_timber.connections.Joint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[48, "compas_timber.connections.Joint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.joint method)": [[49, "compas_timber.connections.Joint.sha256"]], "to_data() (compas_timber.connections.joint method)": [[50, "compas_timber.connections.Joint.to_data"]], "to_json() (compas_timber.connections.joint method)": [[51, "compas_timber.connections.Joint.to_json"]], "to_jsonstring() (compas_timber.connections.joint method)": [[52, "compas_timber.connections.Joint.to_jsonstring"]], "validate_data() (compas_timber.connections.joint class method)": [[53, "compas_timber.connections.Joint.validate_data"]], "jointtopology (class in compas_timber.connections)": [[54, "compas_timber.connections.JointTopology"]], "get_name() (compas_timber.connections.jointtopology class method)": [[55, "compas_timber.connections.JointTopology.get_name"]], "lbuttjoint (class in compas_timber.connections)": [[56, "compas_timber.connections.LButtJoint"]], "tostring() (compas_timber.connections.lbuttjoint method)": [[57, "compas_timber.connections.LButtJoint.ToString"]], "add_features() (compas_timber.connections.lbuttjoint method)": [[58, "compas_timber.connections.LButtJoint.add_features"]], "copy() (compas_timber.connections.lbuttjoint method)": [[59, "compas_timber.connections.LButtJoint.copy"]], "create() (compas_timber.connections.lbuttjoint class method)": [[60, "compas_timber.connections.LButtJoint.create"]], "from_data() (compas_timber.connections.lbuttjoint class method)": [[61, "compas_timber.connections.LButtJoint.from_data"]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[62, "compas_timber.connections.LButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[63, "compas_timber.connections.LButtJoint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[64, "compas_timber.connections.LButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lbuttjoint method)": [[65, "compas_timber.connections.LButtJoint.sha256"]], "to_data() (compas_timber.connections.lbuttjoint method)": [[66, "compas_timber.connections.LButtJoint.to_data"]], "to_json() (compas_timber.connections.lbuttjoint method)": [[67, "compas_timber.connections.LButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lbuttjoint method)": [[68, "compas_timber.connections.LButtJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lbuttjoint class method)": [[69, "compas_timber.connections.LButtJoint.validate_data"]], "lmiterjoint (class in compas_timber.connections)": [[70, "compas_timber.connections.LMiterJoint"]], "tostring() (compas_timber.connections.lmiterjoint method)": [[71, "compas_timber.connections.LMiterJoint.ToString"]], "add_features() (compas_timber.connections.lmiterjoint method)": [[72, "compas_timber.connections.LMiterJoint.add_features"]], "copy() (compas_timber.connections.lmiterjoint method)": [[73, "compas_timber.connections.LMiterJoint.copy"]], "create() (compas_timber.connections.lmiterjoint class method)": [[74, "compas_timber.connections.LMiterJoint.create"]], "from_data() (compas_timber.connections.lmiterjoint class method)": [[75, "compas_timber.connections.LMiterJoint.from_data"]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[76, "compas_timber.connections.LMiterJoint.from_json"]], "from_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[77, "compas_timber.connections.LMiterJoint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[78, "compas_timber.connections.LMiterJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.lmiterjoint method)": [[79, "compas_timber.connections.LMiterJoint.sha256"]], "to_data() (compas_timber.connections.lmiterjoint method)": [[80, "compas_timber.connections.LMiterJoint.to_data"]], "to_json() (compas_timber.connections.lmiterjoint method)": [[81, "compas_timber.connections.LMiterJoint.to_json"]], "to_jsonstring() (compas_timber.connections.lmiterjoint method)": [[82, "compas_timber.connections.LMiterJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.lmiterjoint class method)": [[83, "compas_timber.connections.LMiterJoint.validate_data"]], "tbuttjoint (class in compas_timber.connections)": [[84, "compas_timber.connections.TButtJoint"]], "tostring() (compas_timber.connections.tbuttjoint method)": [[85, "compas_timber.connections.TButtJoint.ToString"]], "add_features() (compas_timber.connections.tbuttjoint method)": [[86, "compas_timber.connections.TButtJoint.add_features"]], "copy() (compas_timber.connections.tbuttjoint method)": [[87, "compas_timber.connections.TButtJoint.copy"]], "create() (compas_timber.connections.tbuttjoint class method)": [[88, "compas_timber.connections.TButtJoint.create"]], "from_data() (compas_timber.connections.tbuttjoint class method)": [[89, "compas_timber.connections.TButtJoint.from_data"]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[90, "compas_timber.connections.TButtJoint.from_json"]], "from_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[91, "compas_timber.connections.TButtJoint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[92, "compas_timber.connections.TButtJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.tbuttjoint method)": [[93, "compas_timber.connections.TButtJoint.sha256"]], "to_data() (compas_timber.connections.tbuttjoint method)": [[94, "compas_timber.connections.TButtJoint.to_data"]], "to_json() (compas_timber.connections.tbuttjoint method)": [[95, "compas_timber.connections.TButtJoint.to_json"]], "to_jsonstring() (compas_timber.connections.tbuttjoint method)": [[96, "compas_timber.connections.TButtJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.tbuttjoint class method)": [[97, "compas_timber.connections.TButtJoint.validate_data"]], "xhalflapjoint (class in compas_timber.connections)": [[98, "compas_timber.connections.XHalfLapJoint"]], "tostring() (compas_timber.connections.xhalflapjoint method)": [[99, "compas_timber.connections.XHalfLapJoint.ToString"]], "add_features() (compas_timber.connections.xhalflapjoint method)": [[100, "compas_timber.connections.XHalfLapJoint.add_features"]], "copy() (compas_timber.connections.xhalflapjoint method)": [[101, "compas_timber.connections.XHalfLapJoint.copy"]], "create() (compas_timber.connections.xhalflapjoint class method)": [[102, "compas_timber.connections.XHalfLapJoint.create"]], "from_data() (compas_timber.connections.xhalflapjoint class method)": [[103, "compas_timber.connections.XHalfLapJoint.from_data"]], "from_json() (compas_timber.connections.xhalflapjoint class method)": [[104, "compas_timber.connections.XHalfLapJoint.from_json"]], "from_jsonstring() (compas_timber.connections.xhalflapjoint class method)": [[105, "compas_timber.connections.XHalfLapJoint.from_jsonstring"]], "restore_beams_from_keys() (compas_timber.connections.xhalflapjoint method)": [[106, "compas_timber.connections.XHalfLapJoint.restore_beams_from_keys"]], "sha256() (compas_timber.connections.xhalflapjoint method)": [[107, "compas_timber.connections.XHalfLapJoint.sha256"]], "to_data() (compas_timber.connections.xhalflapjoint method)": [[108, "compas_timber.connections.XHalfLapJoint.to_data"]], "to_json() (compas_timber.connections.xhalflapjoint method)": [[109, "compas_timber.connections.XHalfLapJoint.to_json"]], "to_jsonstring() (compas_timber.connections.xhalflapjoint method)": [[110, "compas_timber.connections.XHalfLapJoint.to_jsonstring"]], "validate_data() (compas_timber.connections.xhalflapjoint class method)": [[111, "compas_timber.connections.XHalfLapJoint.validate_data"]], "find_neighboring_beams() (in module compas_timber.connections)": [[112, "compas_timber.connections.find_neighboring_beams"]], "brepgeometryconsumer (class in compas_timber.consumers)": [[113, "compas_timber.consumers.BrepGeometryConsumer"]], "btlx (class in compas_timber.fabrication)": [[114, "compas_timber.fabrication.BTLx"]], "btlx_string() (compas_timber.fabrication.btlx method)": [[115, "compas_timber.fabrication.BTLx.btlx_string"]], "process_assembly() (compas_timber.fabrication.btlx method)": [[116, "compas_timber.fabrication.BTLx.process_assembly"]], "register_joint() (compas_timber.fabrication.btlx class method)": [[117, "compas_timber.fabrication.BTLx.register_joint"]], "btlxfrenchridgelap (class in compas_timber.fabrication)": [[118, "compas_timber.fabrication.BTLxFrenchRidgeLap"]], "create_process() (compas_timber.fabrication.btlxfrenchridgelap class method)": [[119, "compas_timber.fabrication.BTLxFrenchRidgeLap.create_process"]], "get_params() (compas_timber.fabrication.btlxfrenchridgelap method)": [[120, "compas_timber.fabrication.BTLxFrenchRidgeLap.get_params"]], "process_joints() (compas_timber.fabrication.btlxfrenchridgelap method)": [[121, "compas_timber.fabrication.BTLxFrenchRidgeLap.process_joints"]], "btlxjackcut (class in compas_timber.fabrication)": [[122, "compas_timber.fabrication.BTLxJackCut"]], "create_process() (compas_timber.fabrication.btlxjackcut class method)": [[123, "compas_timber.fabrication.BTLxJackCut.create_process"]], "generate_process() (compas_timber.fabrication.btlxjackcut method)": [[124, "compas_timber.fabrication.BTLxJackCut.generate_process"]], "btlxprocess (class in compas_timber.fabrication)": [[125, "compas_timber.fabrication.BTLxProcess"]], "frenchridgefactory (class in compas_timber.fabrication)": [[126, "compas_timber.fabrication.FrenchRidgeFactory"]], "apply_processings() (compas_timber.fabrication.frenchridgefactory class method)": [[127, "compas_timber.fabrication.FrenchRidgeFactory.apply_processings"]], "lbuttfactory (class in compas_timber.fabrication)": [[128, "compas_timber.fabrication.LButtFactory"]], "apply_processings() (compas_timber.fabrication.lbuttfactory class method)": [[129, "compas_timber.fabrication.LButtFactory.apply_processings"]], "lmiterfactory (class in compas_timber.fabrication)": [[130, "compas_timber.fabrication.LMiterFactory"]], "apply_processings() (compas_timber.fabrication.lmiterfactory class method)": [[131, "compas_timber.fabrication.LMiterFactory.apply_processings"]], "tbuttfactory (class in compas_timber.fabrication)": [[132, "compas_timber.fabrication.TButtFactory"]], "apply_processings() (compas_timber.fabrication.tbuttfactory class method)": [[133, "compas_timber.fabrication.TButtFactory.apply_processings"]], "beam (class in compas_timber.parts)": [[134, "compas_timber.parts.Beam"]], "tostring() (compas_timber.parts.beam method)": [[135, "compas_timber.parts.Beam.ToString"]], "add_blank_extension() (compas_timber.parts.beam method)": [[136, "compas_timber.parts.Beam.add_blank_extension"]], "add_feature() (compas_timber.parts.beam method)": [[137, "compas_timber.parts.Beam.add_feature"]], "add_features() (compas_timber.parts.beam method)": [[138, "compas_timber.parts.Beam.add_features"]], "align_z() (compas_timber.parts.beam method)": [[139, "compas_timber.parts.Beam.align_z"]], "clear_features() (compas_timber.parts.beam method)": [[140, "compas_timber.parts.Beam.clear_features"]], "copy() (compas_timber.parts.beam method)": [[141, "compas_timber.parts.Beam.copy"]], "endpoint_closest_to_point() (compas_timber.parts.beam method)": [[142, "compas_timber.parts.Beam.endpoint_closest_to_point"]], "extension_to_plane() (compas_timber.parts.beam method)": [[143, "compas_timber.parts.Beam.extension_to_plane"]], "from_centerline() (compas_timber.parts.beam class method)": [[144, "compas_timber.parts.Beam.from_centerline"]], "from_data() (compas_timber.parts.beam class method)": [[145, "compas_timber.parts.Beam.from_data"]], "from_endpoints() (compas_timber.parts.beam class method)": [[146, "compas_timber.parts.Beam.from_endpoints"]], "from_json() (compas_timber.parts.beam class method)": [[147, "compas_timber.parts.Beam.from_json"]], "from_jsonstring() (compas_timber.parts.beam class method)": [[148, "compas_timber.parts.Beam.from_jsonstring"]], "get_geometry() (compas_timber.parts.beam method)": [[149, "compas_timber.parts.Beam.get_geometry"]], "remove_blank_extension() (compas_timber.parts.beam method)": [[150, "compas_timber.parts.Beam.remove_blank_extension"]], "remove_features() (compas_timber.parts.beam method)": [[151, "compas_timber.parts.Beam.remove_features"]], "sha256() (compas_timber.parts.beam method)": [[152, "compas_timber.parts.Beam.sha256"]], "to_data() (compas_timber.parts.beam method)": [[153, "compas_timber.parts.Beam.to_data"]], "to_json() (compas_timber.parts.beam method)": [[154, "compas_timber.parts.Beam.to_json"]], "to_jsonstring() (compas_timber.parts.beam method)": [[155, "compas_timber.parts.Beam.to_jsonstring"]], "transform() (compas_timber.parts.beam method)": [[156, "compas_timber.parts.Beam.transform"]], "transform_numpy() (compas_timber.parts.beam method)": [[157, "compas_timber.parts.Beam.transform_numpy"]], "transformed() (compas_timber.parts.beam method)": [[158, "compas_timber.parts.Beam.transformed"]], "transformed_numpy() (compas_timber.parts.beam method)": [[159, "compas_timber.parts.Beam.transformed_numpy"]], "validate_data() (compas_timber.parts.beam class method)": [[160, "compas_timber.parts.Beam.validate_data"]], "actor (class in compas_timber.planning)": [[161, "compas_timber.planning.Actor"]], "get_name() (compas_timber.planning.actor class method)": [[162, "compas_timber.planning.Actor.get_name"]], "buildingplan (class in compas_timber.planning)": [[163, "compas_timber.planning.BuildingPlan"]], "tostring() (compas_timber.planning.buildingplan method)": [[164, "compas_timber.planning.BuildingPlan.ToString"]], "add_step() (compas_timber.planning.buildingplan method)": [[165, "compas_timber.planning.BuildingPlan.add_step"]], "copy() (compas_timber.planning.buildingplan method)": [[166, "compas_timber.planning.BuildingPlan.copy"]], "from_data() (compas_timber.planning.buildingplan class method)": [[167, "compas_timber.planning.BuildingPlan.from_data"]], "from_json() (compas_timber.planning.buildingplan class method)": [[168, "compas_timber.planning.BuildingPlan.from_json"]], "from_jsonstring() (compas_timber.planning.buildingplan class method)": [[169, "compas_timber.planning.BuildingPlan.from_jsonstring"]], "sha256() (compas_timber.planning.buildingplan method)": [[170, "compas_timber.planning.BuildingPlan.sha256"]], "to_data() (compas_timber.planning.buildingplan method)": [[171, "compas_timber.planning.BuildingPlan.to_data"]], "to_json() (compas_timber.planning.buildingplan method)": [[172, "compas_timber.planning.BuildingPlan.to_json"]], "to_jsonstring() (compas_timber.planning.buildingplan method)": [[173, "compas_timber.planning.BuildingPlan.to_jsonstring"]], "validate_data() (compas_timber.planning.buildingplan class method)": [[174, "compas_timber.planning.BuildingPlan.validate_data"]], "simplesequencegenerator (class in compas_timber.planning)": [[175, "compas_timber.planning.SimpleSequenceGenerator"]], "step (class in compas_timber.planning)": [[176, "compas_timber.planning.Step"]], "tostring() (compas_timber.planning.step method)": [[177, "compas_timber.planning.Step.ToString"]], "copy() (compas_timber.planning.step method)": [[178, "compas_timber.planning.Step.copy"]], "from_data() (compas_timber.planning.step class method)": [[179, "compas_timber.planning.Step.from_data"]], "from_json() (compas_timber.planning.step class method)": [[180, "compas_timber.planning.Step.from_json"]], "from_jsonstring() (compas_timber.planning.step class method)": [[181, "compas_timber.planning.Step.from_jsonstring"]], "sha256() (compas_timber.planning.step method)": [[182, "compas_timber.planning.Step.sha256"]], "to_data() (compas_timber.planning.step method)": [[183, "compas_timber.planning.Step.to_data"]], "to_json() (compas_timber.planning.step method)": [[184, "compas_timber.planning.Step.to_json"]], "to_jsonstring() (compas_timber.planning.step method)": [[185, "compas_timber.planning.Step.to_jsonstring"]], "transform() (compas_timber.planning.step method)": [[186, "compas_timber.planning.Step.transform"]], "validate_data() (compas_timber.planning.step class method)": [[187, "compas_timber.planning.Step.validate_data"]], "find_neighboring_beams() (in module compas_timber.rhino)": [[188, "compas_timber.rhino.find_neighboring_beams"]]}})